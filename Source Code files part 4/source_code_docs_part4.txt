ogDescription.6.47"
              INDEX { logEventIndex, logIndex }
              ::= { logTable 1 }

          LogEntry ::= SEQUENCE {
              logEventIndex           INTEGER (1..65535),
              logIndex                INTEGER (1..2147483647),
              logTime                 TimeTicks,
              logDescription          DisplayString (SIZE (0..255))
          }

          logEventIndex OBJECT-TYPE
              SYNTAX INTEGER (1..65535)
              ACCESS read-only
              STATUS mandatory
              DESCRIPTION
                  "The event entry that generated this log
                  entry.  The log identified by a particular
                  value of this index is associated with the same
                  eventEntry as identified by the same value
                  of eventIndex."
              ::= { logEntry 1 }

          logIndex OBJECT-TYPE
              SYNTAX INTEGER (1..2147483647)
              ACCESS read-only
              STATUS mandatory
              DESCRIPTION
                  "An index that uniquely identifies an entry
                  in the log table amongst those generated by the
                  same eventEntries.  These indexes are
                  assigned beginning with 1 and increase by one
                  with each new log entry.  The association
                  between values of logIndex and logEntries
                  is fixed for the lifetime of each logEntry.
                  The agent may choose to delete the oldest





                  instances of logEntry as required because of
                  lack of memory.  It is an implementation-specific
                  matter as to when this deletion may occur."
              ::= { logEntry 2 }

          logTime OBJECT-TYPE
              SYNTAX TimeTicks
              ACCESS read-only
              STATUS mandatory
              DESCRIPTION
                  "The value of sysUpTime when this log entry was
                  created."
              ::= { logEntry 3 }

          logDescription OBJECT-TYPE
              SYNTAX DisplayString (SIZE (0..255))
              ACCESS read-only
              STATUS mandatory
              DESCRIPTION
                  "An implementation dependent description of the
                  event that activated this log entry."
              ::= { logEntry 4 }

          --  These definitions use the TRAP-TYPE macro as
          --  defined in RFC 1215 [10]

          --  Remote Network Monitoring Traps

          risingAlarm TRAP-TYPE
              ENTERPRISE rmon
              VARIABLES { alarmIndex, alarmVariable, alarmSampleType,
                          alarmValue, alarmRisingThreshold }
              DESCRIPTION
                  "The SNMP trap that is generated when an alarm
                  entry crosses its rising threshold and generates
                  an event that is configured for sending SNMP
                  traps."
              ::= 1

          fallingAlarm TRAP-TYPE
              ENTERPRISE rmon
              VARIABLES { alarmIndex, alarmVariable, alarmSampleType,
                          alarmValue, alarmFallingThreshold }
              DESCRIPTION
                  "The SNMP trap that is generated when an alarm
                  entry crosses its falling threshold and generates
                  an event that is configured for sending SNMP
                  traps."





              ::= 2

          END
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\wmi\wbem\providers\snmpprovider\mibs\snmpv2\rfcs\rfc1759.txt ===
Printer-MIB DEFINITIONS ::= BEGIN

IMPORTS
    MODULE-IDENTITY, OBJECT-TYPE, experimental, Counter32, Integer32,
        TimeTicks, NOTIFICATION-TYPE, OBJECT-IDENTITY FROM SNMPv2-SMI
    TEXTUAL-CONVENTION FROM SNMPv2-TC
    MODULE-COMPLIANCE, OBJECT-GROUP FROM SNMPv2-CONF
    hrDeviceIndex, hrStorageIndex FROM HOST-RESOURCES-MIB;

printmib MODULE-IDENTITY
    LAST-UPDATED "9411250000Z"
    ORGANIZATION "IETF Printer MIB Working Group"
    CONTACT-INFO
            "        Steven Waldbusser
         Postal: Carnegie Mellon University
                     4910 Forbes Ave
                  Pittsburgh, PA, 15213

                Tel: 412-268-6628
                Fax: 412-268-4987
             E-mail: waldbusser@cmu.edu"
    DESCRIPTION
            "The MIB module for management of printers."
    ::= { mib-2 43 }

-- Textual conventions for this MIB module

MediaUnit ::= TEXTUAL-CONVENTION
    STATUS       current
    DESCRIPTION
            "Units of measure for media dimensions."
    -- This is a type 1 enumeration.
    SYNTAX       INTEGER {
                     tenThousandthsOfInches(3),  -- .0001
                     micrometers(4)
                 }

CapacityUnit ::= TEXTUAL-CONVENTION
    STATUS       current
    DESCRIPTION
            "Units of measure for media capacity."
    -- This is a type 1 enumeration.
    SYNTAX       INTEGER {
                     tenThousandthsOfInches(3),  -- .0001
                     micrometers(4),
                     sheets(8),
                     feet(16),
                     meters(17)
                 }

SubUnitStatus ::= TEXTUAL-CONVENTION
    STATUS       current
    DESCRIPTION
            "Status of a printer sub-unit.

             The SubUnitStatus is an integer that is the sum of 5
             distinct values, Availability, Non-Critical, Critical,
             On-line, and Transitioning. These values are:

     Availability                           value

            Available and Idle              0       000'b
            Available and Standby           2       010'b
            Available and Active            4       100'b
            Available and Busy              6       110'b
            Unavailable and OnRequest       1       001'b
            Unavailable because Broken      3       011'b
            Unknown                         5       101'b

    Non-Critical

            No Non-Critical Alerts          0
            Non-Critical Alerts             8

    Critical

            No Critical Alerts              0
            Critical Alerts                 16

    On-Line

            Intended state is On-Line       0
            Intended state is Off-Line      32

    Transitioning

            At intended state               0
            Transitioning to intended state 64
    "

    SYNTAX       INTEGER (0..126)

PresentOnOff ::= TEXTUAL-CONVENTION
    STATUS       current
    DESCRIPTION
            "Presence and configuration of a device or feature."
    -- This is a type 1 enumeration.
    SYNTAX       INTEGER {
                     other(1),
                     on(3),
                     off(4),
                     notPresent(5)
                 }

  CodedCharSet ::= TEXTUAL-CONVENTION
      STATUS     current
      DESCRIPTION
         "A coded character set value that specifies both a set of
          characters that may be used and an encoding (as one or more
          octets) that is used to represent the characters in the
          set. These values are to be used to identify the encoding
          employed for strings in the MIB where this is not fixed by
          the MIB.

          Some objects that allow a choice of coded character set
          are: the prtLocalizationCharacterSet object in the
          LocalizationTable and prtInterpreterDefaultCharSetIn.
          The prtGeneralCurrentLocalization and prtConsoleLocalization
          objects in turn contain the index in the LocalizationTable
          of the current localization (country, language, and coded
          character set) of the `description' objects and the console,
          respectively.

          The space of the coded character set enumeration has been
          divide into three regions. The first region (3-999) consists
          of coded character sets that have been standardized by some
          standard setting organization. This region is intended for
          standards that do not have subset implementations. The
          second region (1000-1999) is for the Unicode and ISO/IEC 10646
          coded character sets together with a specification of a (set
          of) sub-repetoires that may occur.  The third region (>1999)
          is intended for vendor specific coded character sets.

          NOTE: Unicode and ISO 10646 character coded data may be
          processed and stored in either Big Endian (most significant
          octet first) or Little Endian (least significant octet
          first) order.  Intel x86, VAX, and Alpha/AXP architectures are
          examples of Little Endian processor architectures.
          Furthermore, in environments where either order may occur,
          so-called Unicode BYTE ORDER MARK (BOM) character (which is
          ISO 10646 ZERO WIDTH NO BREAK SPACE), coded as FEFF in two
          octets and 0000FEFF in four octets is used at the beginning
          of the data as a signature to indicate the order of the
          following data (See ISO 10646 Annex F).  Thus either
          ordering and BOM may occur in print data streams sent to the
          interpreter.  However, ISO 8824/8825 (ASN.1/BER) used by
          SNMP is quite clear that Big Endian order shall be used and
          BOM shall NOT be used in transmission in the protocol.
          Transmitting Unicode in Big Endian order in SNMP should
          not prove to be a hardship for Little Endian machines,
          since SNMP ASN.1/BER requires integers to be transmitted
          in Big Endian order as well.  So SNMP implementations on
          Little Endian machines are already reversing the order of
          integers to make them Big Endian for transmission via
          SNMP.  Also Unicode characters are usually treated as
          two-octet integers, not short text strings, so that it will
          be straightforward for Little Endian machines to reverse the
          order of Unicode character octets as well before
          transmitting them and after receiving them via the SNMP
          protocol.

          Where a given coded character set may be known by more than
          one name, the most commonly known name is used as the name
          of the enumeration and other names are shown in the
          comments.  The comments also indicate where to find detailed
          information on the coded character set and briefly
          characterize its relationship to other similar coded
          character sets.

          The current list of character sets and their enumerated
          values used to reference them is contained in the IANA
          Character Set registry.  The enum value is indicated by
          the MIBenum entry in the registry.  The enum symbol is
          indicated by the Alias that starts with `cs' for character
          set.

          The IANA character sets registry is available via
          anonymous ftp.

          The ftp server is ftp.isi.edu.
          The subdirectory is /in-notes/iana/assignments/.

          The file name is character-sets.

          To add a character set to the IANA Registry:

             1. Format an entry like those in the current list,
                omitting the MIBenum value.
             2. Send the entry with a request to add the entry
                to the character set list to iana@ISI.EDU.
             3. The IANA will supply a unique MIBenum value
                and update the list."

      -- This is a type 3 enumeration.

      SYNTAX     INTEGER {
        other(1)               -- used if the designated coded
                               -- character set is not currently in
                               -- the enumeration

      -- See IANA Registry for standard character sets in the
      -- MIBenum range of 3-999.

      -- See IANA Registry for Unicode and vendor-supplied
      -- combinations of ISO collections and character sets based
      -- on Unicode in the MIBenum range of 1000-1999.
      -- See IANA Registry for vendor developed character sets
      -- in the MIBenum range of 2000-xxxx.
   }


-- The General Printer Group
--
-- The general printer sub-unit is responsible for the overall control
-- and status of the printer.  There is exactly one general printer
-- sub-unit in a printer.
--
-- Implementation of every object in this group is mandatory.

prtGeneral  OBJECT IDENTIFIER ::= { printmib 5 }

prtGeneralTable OBJECT-TYPE
    SYNTAX     SEQUENCE OF PrtGeneralEntry
    MAX-ACCESS not-accessible
    STATUS     current
    DESCRIPTION
        "A table of general information per printer.
        Objects in this table are defined in various
        places in the MIB, nearby the groups to
        which they apply.  They are all defined
        here to minimize the number of tables that would
        otherwise need to exist."
    ::= { prtGeneral 1 }

prtGeneralEntry OBJECT-TYPE
    SYNTAX      PrtGeneralEntry
    MAX-ACCESS  not-accessible
    STATUS      current
    DESCRIPTION
        "An entry exists in this table for each
        device entry in the hostmib device table who's type
        is `printer'"
    INDEX  { hrDeviceIndex }
    ::= { prtGeneralTable 1 }

PrtGeneralEntry ::= SEQUENCE {
    -- Note that not all of the objects in this sequence are in the
    -- general printer group.
    prtGeneralConfigChanges         Counter32,
    prtGeneralCurrentLocalization   Integer32,
    prtGeneralReset                 INTEGER,
    prtGeneralCurrentOperator       DisplayString,
    prtGeneralServicePerson         DisplayString,
    prtInputDefaultIndex            Integer32,
    prtOutputDefaultIndex           Integer32,
    prtMarkerDefaultIndex           Integer32,
    prtMediaPathDefaultIndex        Integer32,
    prtConsoleLocalization          Integer32,
    prtConsoleNumberOfDisplayLines  Integer32,
    prtConsoleNumberOfDisplayChars  Integer32,
    prtConsoleDisable               INTEGER
}

prtGeneralConfigChanges OBJECT-TYPE
    SYNTAX     Counter32
    MAX-ACCESS read-only
    STATUS     current
    DESCRIPTION
        "Counts configuration changes that change the capabilities of
        a printer, such as the addition/deletion of input/output bins,
        the addition/deletion of interpreters, or changes in media
        size.  Such changes will often affect the capability of the
        printer to service certain types of print jobs.

        Management applications may cache infrequently changed
        configuration  information about sub-units on the printer.
        This object should be incremented whenever the agent wishes
        such applications to invalidate that cache and re-download

        all of this configuration information, thereby signalling a
        change in the printer's configuration.

        For example, if an input tray that contained paper of
        different dimensions was added, this counter would be
        incremented.

        As an additional example, this counter would not be
        incremented when an input tray is removed or the level of an
        input device changes."
    ::= { prtGeneralEntry 1 }

prtGeneralCurrentLocalization OBJECT-TYPE
    SYNTAX     Integer32 (1..65535)
    MAX-ACCESS read-write
    STATUS     current
    DESCRIPTION
        "The value of the prtLocalizationIndex corresponding to the
        current language, country, and character set to be used for
        localized string values that are identified as being dependent
        on the value of this object.  Note that this object does not
        apply to localized strings in the prtConsole group or any
        object that is not identified as above."
    ::= { prtGeneralEntry 2 }

prtGeneralReset OBJECT-TYPE
    -- This value is a type 3 enumeration
    SYNTAX     INTEGER {
                   notResetting(3),
                   powerCycleReset(4), -- Cold Start
                   resetToNVRAM(5), -- Warm Start
                   resetToFactoryDefaults(6) -- Reset contents of
                                             -- NVRAM to factory defaults
               }
    MAX-ACCESS read-write
    STATUS     current
    DESCRIPTION
        "Setting this value to `powerCycleReset', `resetToNVRAM', or
        `resetToFactoryDefaults' will result in the resetting of the
        printer.  When read, this object will always have the value
        `notResetting(3)', and a SET of the value `notResetting' shall
        have no effect on the printer.  Some of the defined values are
        optional.  However, every implementation must support at least
        the values `notResetting' and resetToNVRAM'."
    ::= { prtGeneralEntry 3 }

-- The Cover Table
--
-- The cover portion of the General print sub-unit describes the
-- covers and interlocks of the printer.  The Cover Table has an
-- entry for each cover and interlock.

prtCover    OBJECT IDENTIFIER ::= { printmib 6 }

prtCoverTable OBJECT-TYPE
    SYNTAX     SEQUENCE OF PrtCoverEntry
    MAX-ACCESS not-accessible
    STATUS     current
    DESCRIPTION
        "A table of the covers and interlocks of the printer."
    ::= { prtCover 1 }

prtCoverEntry OBJECT-TYPE
    SYNTAX     PrtCoverEntry
    MAX-ACCESS not-accessible
    STATUS     current
    DESCRIPTION
        "Information about a cover or interlock.
        Entries may exist in the table for each device
        index whose device type is `printer'."
    INDEX  { hrDeviceIndex, prtCoverIndex }
    ::= { prtCoverTable 1 }

PrtCoverEntry ::= SEQUENCE {
    prtCoverIndex            Integer32,
    prtCoverDescription      DisplayString,
    prtCoverStatus           INTEGER
}

prtCoverIndex OBJECT-TYPE
    SYNTAX     Integer32 (1..65535)
    MAX-ACCESS not-accessible
    STATUS     current
    DESCRIPTION
        "A unique value used by the printer to identify this Cover
        sub-unit.  Although these values may change due to a major
        reconfiguration of the device (e.g. the addition of new
        cover sub-units to the printer), values are expected to
        remain stable across successive printer power cycles."
    ::= { prtCoverEntry 1 }

prtCoverDescription OBJECT-TYPE
    SYNTAX     DisplayString (SIZE(0..255))
    MAX-ACCESS read-only
    STATUS     current
    DESCRIPTION
        "The manufacturer provided cover sub-mechanism  name in the
        localization specified by prtGeneralCurrentLocalization."
    ::= { prtCoverEntry 2 }

prtCoverStatus  OBJECT-TYPE
    --  This value is a type 2 enumeration
    SYNTAX     INTEGER {
                   other(1),
                   doorOpen(3),
                   doorClosed(4),
                   interlockOpen(5),
                   interlockClosed(6)
               }
    MAX-ACCESS read-only
    STATUS     current
    DESCRIPTION
        "The status of this cover sub-unit."
    ::= { prtCoverEntry 3 }

-- The Localization Table
--

-- The localization portion of the General printer sub-unit is

-- responsible for identifying the natural language, country, and
-- character set in which character strings are expressed. There
-- may be one or more localizations supported per printer. The
-- available localizations are represented by the Localization table.

prtLocalization  OBJECT IDENTIFIER ::= { printmib 7 }

prtLocalizationTable OBJECT-TYPE
    SYNTAX     SEQUENCE OF PrtLocalizationEntry
    MAX-ACCESS not-accessible
    STATUS     current
    DESCRIPTION
        "The available localizations in this printer."
    ::= { prtLocalization 1 }

prtLocalizationEntry OBJECT-TYPE
    SYNTAX     PrtLocalizationEntry
    MAX-ACCESS not-accessible
    STATUS     current
    DESCRIPTION
        "A description of a localization.
        Entries may exist in the table for each device
        index who's device type is `printer'."
    INDEX  { hrDeviceIndex, prtLocalizationIndex }
    ::= { prtLocalizationTable 1 }

PrtLocalizationEntry ::= SEQUENCE {
        prtLocalizationIndex                Integer32,
        prtLocalizationLanguage             DisplayString,
        prtLocalizationCountry              DisplayString,
        prtLocalizationCharacterSet         CodedCharSet
}

prtLocalizationIndex OBJECT-TYPE
    SYNTAX     Integer32 (1..65535)
    MAX-ACCESS not-accessible
    STATUS     current
    DESCRIPTION
        "A unique value used by the printer to identify this
        localization entry.  Although these values may change due to a
        major reconfiguration of the device (e.g., the addition of new
        Cover sub-units to the printer), values are expected to remain
        stable across successive printer power cycles."
    ::= { prtLocalizationEntry 1 }

prtLocalizationLanguage OBJECT-TYPE
    SYNTAX     DisplayString (SIZE(0..2))
    MAX-ACCESS read-only
    STATUS     current
    DESCRIPTION
        "A two character language code from ISO 639.  Examples EN, GB,
        CA, FR, DE."
    ::= { prtLocalizationEntry 2 }

prtLocalizationCountry OBJECT-TYPE
    SYNTAX     DisplayString (SIZE(0..2))
    MAX-ACCESS read-only
    STATUS     current
    DESCRIPTION
        "A two character country code from ISO 3166, a blank string
        (two space characters) shall indicate that the country is
        not defined.  Examples: US, FR, DE, ..."
    ::= { prtLocalizationEntry 3 }

prtLocalizationCharacterSet OBJECT-TYPE
    SYNTAX     CodedCharSet
    MAX-ACCESS read-only
    STATUS     current
    DESCRIPTION
        "The coded character set used for this localization."
    ::= { prtLocalizationEntry 4 }

-- The System Resources Tables

-- The Printer MIB makes use of the Host MIB to
-- define system resources by referencing the storage
-- and device groups of the print group.  In order to
-- determine, amongst multiple printers serviced by
-- one agent, which printer owns a particular
-- resource, the prtStorageRef and prtDeviceRef tables
-- associate particular storage and device entries to
-- printers.

prtStorageRefTable OBJECT-TYPE
    SYNTAX     SEQUENCE OF PrtStorageRefEntry
    MAX-ACCESS not-accessible
    STATUS     current
    DESCRIPTION
        ""
    ::= { prtGeneral 2 }

prtStorageRefEntry OBJECT-TYPE
    SYNTAX     PrtStorageRefEntry
    MAX-ACCESS not-accessible
    STATUS     current
    DESCRIPTION
        "This table will have an entry for each entry in
        the host MIB storage table that represents storage associated
        with a printer managed by this agent."
    INDEX      { hrStorageIndex, prtStorageRefSeqNumber }
    ::= { prtStorageRefTable 1 }

PrtStorageRefEntry ::= SEQUENCE {
    prtStorageRefSeqNumber  Integer32,
    prtStorageRefIndex      Integer32
}

prtStorageRefSeqNumber OBJECT-TYPE
    SYNTAX     Integer32 (0..65535)
    MAX-ACCESS not-accessible
    STATUS     current
    DESCRIPTION
        "This value will be unique amongst all entries with a common
        value of hrStorageIndex.

        This object allows a storage entry to point to the multiple
        printer devices with which it is associated."
    ::= { prtStorageRefEntry 1 }

prtStorageRefIndex OBJECT-TYPE
    SYNTAX     Integer32 (0..65535)
    MAX-ACCESS read-only
    STATUS     current
    DESCRIPTION
        "The value of the hrDeviceIndex of the printer device that this
        storageEntry is associated with."
    ::= { prtStorageRefEntry 2 }

prtDeviceRefTable OBJECT-TYPE
    SYNTAX     SEQUENCE OF PrtDeviceRefEntry
    MAX-ACCESS not-accessible
    STATUS     current
    DESCRIPTION
        ""
    ::= { prtGeneral 3 }

prtDeviceRefEntry OBJECT-TYPE
    SYNTAX     PrtDeviceRefEntry
    MAX-ACCESS not-accessible
    STATUS     current
    DESCRIPTION
        "This table will have an entry for each entry in
        the host MIB device table that represents a device associated
        with a printer managed by this agent."
    INDEX      { hrDeviceIndex, prtDeviceRefSeqNumber }
    ::= { prtDeviceRefTable 1 }

PrtDeviceRefEntry ::= SEQUENCE {
    prtDeviceRefSeqNumber   Integer32,
    prtDeviceRefIndex       Integer32
}

prtDeviceRefSeqNumber OBJECT-TYPE
    SYNTAX     Integer32 (0..65535)
    MAX-ACCESS not-accessible
    STATUS     current
    DESCRIPTION
        "This value will be unique amongst all entries with a common
        value of hrDeviceIndex.

        This object allows a device entry to point to the multiple
        printer devices with which it is associated."
    ::= { prtDeviceRefEntry 1 }

prtDeviceRefIndex OBJECT-TYPE
    SYNTAX     Integer32 (0..65535)
    MAX-ACCESS read-only
    STATUS     current
    DESCRIPTION
        "The value of the hrDeviceIndex of the printer device that this
        deviceEntry is associated with."
    ::= { prtDeviceRefEntry 2 }

-- The Responsible Party group
--
-- This group is optional.  However, to claim conformance to this
-- group, it is necessary to implement every object in the group.

prtGeneralCurrentOperator OBJECT-TYPE
    SYNTAX     DisplayString (SIZE(0..127))
    MAX-ACCESS read-write
    STATUS     current
    DESCRIPTION
        "The name of the current human operator responsible for
        operating this printer. It is suggested that this string
        include information that would enable other humans to reach
        the operator, such as a phone number."
    ::= { prtGeneralEntry 4 }

prtGeneralServicePerson OBJECT-TYPE
    SYNTAX     DisplayString (SIZE(0..127))
    MAX-ACCESS read-write
    STATUS     current
    DESCRIPTION
        "The name of the last human responsible for servicing
        this printer. It is suggested that this string
        include information that would enable other humans to reach
        the service person, such as a phone number."
    ::= { prtGeneralEntry 5 }

-- The Input Group
--
-- Input sub-units are managed as a tabular, indexed collection of
-- possible devices capable of providing media for input to the printing
-- process.  Input sub-units typically have a location, a type, an
-- identifier, a set of constraints on possible media sizes and
-- potentially other media characteristics, and may be capable of
-- indicating current status or capacity.
--
-- Implementation of every object in this group is mandatory.


prtInput   OBJECT IDENTIFIER ::= { printmib 8 }

prtInputDefaultIndex OBJECT-TYPE
    SYNTAX     Integer32 (1..65535)
    MAX-ACCESS read-write
    STATUS     current
    DESCRIPTION
       "The value of prtInputIndex corresponding to the default input
        sub-unit: that is, this object selects the default source of
        input media."
    ::= { prtGeneralEntry 6 }

prtInputTable OBJECT-TYPE
    SYNTAX     SEQUENCE OF PrtInputEntry
    MAX-ACCESS not-accessible
    STATUS     current
    DESCRIPTION
        "A table of the devices capable of providing media for input
        to the printing process."
    ::= { prtInput 2 }

prtInputEntry OBJECT-TYPE
    SYNTAX     PrtInputEntry
    MAX-ACCESS not-accessible
    STATUS     current
    DESCRIPTION
        "Attributes of a device capable of providing media for input
        to the printing process.

        Entries may exist in the table for each device
        index who's device type is `printer'."
    INDEX  { hrDeviceIndex, prtInputIndex }
    ::= { prtInputTable 1 }

PrtInputEntry ::= SEQUENCE {
        prtInputIndex                     Integer32,
        prtInputType                      INTEGER,
        prtInputDimUnit                   MediaUnit,
        prtInputMediaDimFeedDirDeclared   Integer32,
        prtInputMediaDimXFeedDirDeclared  Integer32,
        prtInputMediaDimFeedDirChosen     Integer32,
        prtInputMediaDimXFeedDirChosen    Integer32,
        prtInputCapacityUnit              CapacityUnit,
        prtInputMaxCapacity               Integer32,
        prtInputCurrentLevel              Integer32,
        prtInputStatus                    SubUnitStatus,
        prtInputMediaName                 DisplayString,
        prtInputName                      DisplayString,
        prtInputVendorName                DisplayString,
        prtInputModel                     DisplayString,
        prtInputVersion                   DisplayString,
        prtInputSerialNumber              DisplayString,
        prtInputDescription               DisplayString,
        prtInputSecurity                  PresentOnOff,
        prtInputMediaWeight               Integer32,
        prtInputMediaType                 DisplayString,
        prtInputMediaColor                DisplayString,
        prtInputMediaFormParts            Integer32
}

prtInputIndex OBJECT-TYPE
    SYNTAX     Integer32 (1..65535)
    MAX-ACCESS not-accessible
    STATUS     current
    DESCRIPTION
        "A unique value used by the printer to identify this input
        sub-unit. Although these values may change due to a major
        reconfiguration of the device (e.g. the addition of new
        input sub-units to the printer), values are expected to
        remain stable across successive printer power cycles."
    ::= { prtInputEntry 1 }

prtInputType OBJECT-TYPE
    --  This value is a type 2 enumeration
    SYNTAX     INTEGER {
                   other(1),
                   unknown(2),
                   sheetFeedAutoRemovableTray(3),
                   sheetFeedAutoNonRemovableTray(4),
                   sheetFeedManual(5),
                   continuousRoll(6),
                   continuousFanFold(7)
               }
    MAX-ACCESS read-only
    STATUS     current
    DESCRIPTION
        "The type of technology (discriminated primarily according to
        feeder mechanism type) employed by the input sub-unit.  Note,
        the Optional Input Class provides for a descriptor field to
        further qualify the other choice."
    ::= { prtInputEntry 2 }

prtInputDimUnit OBJECT-TYPE
    SYNTAX     MediaUnit
    MAX-ACCESS read-only
    STATUS     current
    DESCRIPTION
        "The unit of measurement for use calculating and relaying
        dimensional values for this input sub-unit."
    ::= { prtInputEntry 3 }

prtInputMediaDimFeedDirDeclared OBJECT-TYPE
    SYNTAX     Integer32
    MAX-ACCESS read-write
    STATUS     current
    DESCRIPTION
        "This object provides the value of the declared dimension, in
        the feed direction, of the media that is (or, if empty, was or
        will be) in this input sub-unit.  The feed direction is the
        direction in which the media is fed on this sub-unit.  This
        dimension is measured in input sub-unit dimensional units
        (prtInputDimUnit).  If this input sub-unit can reliably sense
        this value, the value is sensed by the printer and may not be
        changed by management requests.  Otherwise, the value may be
        changed. The value (-1) means other and specifically means
        that this sub-unit places no restriction on this parameter.
        The value (-2) indicates unknown."
    ::= { prtInputEntry 4 }

prtInputMediaDimXFeedDirDeclared OBJECT-TYPE
    SYNTAX     Integer32
    MAX-ACCESS read-write
    STATUS     current
    DESCRIPTION
        "This object provides the value of the declared dimension, in
        the cross feed direction, of the media that is (or, if empty,
        was or will be) in this input sub-unit.  The cross  feed
        direction is ninety degrees relative to the feed direction
        associated with this sub-unit. This dimension is measured in
        input sub-unit dimensional units (prtInputDimUnit).  If this
        input sub-unit can reliably sense this value, the value is
        sensed by the printer and may not be changed by management
        requests. Otherwise, the value may be changed. The value (-1)
        means other and specifically means that this sub-unit places
        no restriction on this parameter. The value (-2) indicates
        unknown."
    ::= { prtInputEntry 5 }

prtInputMediaDimFeedDirChosen OBJECT-TYPE
    SYNTAX     Integer32
    MAX-ACCESS read-only
    STATUS     current
    DESCRIPTION
        "The printer will act as if media of the chosen dimension (in
        the feed direction) is present in this input source.  Note
        that this value will be used even if the input tray is empty.
        Feed dimension measurements
        are taken parallel relative to the feed direction
        associated with that sub-unit and are in input sub-unit
        dimensional units (DimUnit). If the printer supports the
        declared dimension, the granted dimension is the same as
        the declared dimension. If not, the granted dimension is
        set to the closest dimension that the printer supports
        when the declared dimension is set. The value (-1) means
        other and specifically indicates that this sub-unit
        places no restriction on this parameter. The value (-2)
        indicates unknown."
    ::= { prtInputEntry 6 }

prtInputMediaDimXFeedDirChosen OBJECT-TYPE
    SYNTAX     Integer32
    MAX-ACCESS read-only
    STATUS     current
    DESCRIPTION
        "The printer will act as if media of the chosen dimension (in
        the cross feed direction) is present in this input source.
        Note that this value will be used even if the input tray is
        empty.  The cross feed direction is ninety degrees relative
        to the feed direction associated with this sub-unit. This
        dimension is measured in input sub-unit dimensional units
        (DimUnit).  If the printer supports the declared
        dimension, the granted dimension is the same as the
        declared dimension. If not, the granted dimension is set
        to the closest dimension that the printer supports when
        the declared dimension is set. The value (-1) means other
        and specifically indicates that this sub-unit places no
        restriction on this parameter.  The value (-2) indicates
        unknown."
    ::= { prtInputEntry 7 }

prtInputCapacityUnit OBJECT-TYPE
    SYNTAX     CapacityUnit
    MAX-ACCESS read-only
    STATUS     current
    DESCRIPTION
        "The unit of measurement for use in calculating and relaying
        capacity values for this input sub-unit."
    ::= { prtInputEntry 8 }

prtInputMaxCapacity OBJECT-TYPE
    SYNTAX     Integer32
    MAX-ACCESS read-write
    STATUS     current
    DESCRIPTION
        "The maximum capacity of the input sub-unit in input
        sub-unit capacity units (CapacityUnit).  There is no
        convention associated with the media itself so this value
        reflects claimed capacity. If this input sub-unit can
        reliably sense this value, the value is sensed by the
        printer and may not be changed by management requests;
        otherwise, the value may be written (by a Remote
        Contol Panel or a Management Application).
        The value (-1) means other and specifically
        indicates that the sub-unit places no restrictions
        on this parameter.  The value (-2) means unknown."
    ::= { prtInputEntry 9 }

prtInputCurrentLevel OBJECT-TYPE
    SYNTAX     Integer32 --    in capacity units (CapacityUnit).
    MAX-ACCESS read-write
    STATUS     current
    DESCRIPTION
        "The current capacity of the input sub-unit in input
        sub-unit capacity units (CapacityUnit). If this input
        sub-unit can reliably sense this value, the value is
        sensed by the printer and may not be changed by
        management requests; otherwise, the value may
        be written (by a Remote Contol Panel or a
        Management Application).  The value (-1) means other and
        specifically indicates that the sub-unit places no
        restrictions on this parameter. The value (-2) means unknown.
        The value (-3) means that the printer knows that at least one
        unit remains."
    ::= { prtInputEntry 10 }

prtInputStatus OBJECT-TYPE
    SYNTAX     SubUnitStatus
    MAX-ACCESS read-only
    STATUS     current
    DESCRIPTION
        "The current status of this input sub-unit."
    ::= { prtInputEntry 11 }

prtInputMediaName OBJECT-TYPE
    SYNTAX     DisplayString (SIZE(0..63))
    MAX-ACCESS read-write
    STATUS     current
    DESCRIPTION
        "A description of the media contained in this input sub-unit;
        This description is intended for display to a human operator.
        This description is not processed by the printer.  It is used
        to provide information not expressible in terms of the other
        media attributes (e.g. prtInputMediaDimFeedDirChosen,
        prtInputMediaDimXFeedDirChosen, prtInputMediaWeight,
        prtInputMediaType). An example would be `legal tender bond
        paper'."
    ::= { prtInputEntry 12 }

--               INPUT MEASUREMENT
--
--     _______ |                     |
--      ^      |                     |
--      |      |                     |                    |
--      |      |_ _ _ _ _ _ _ _ _ _ _| _________________  |direction
--      |      |                     |      ^             v
-- MaxCapacity |                     |      |
--      |      | Sheets left in tray | CurrentLevel
--      |      |                     |      |
--      v      |                     |      v
--     _______ +_____________________+ _______

-- The Extended Input Group
--
-- This group is optional.  However, to claim conformance to this
-- group, it is necessary to implement every object in the group.


prtInputName OBJECT-TYPE
    SYNTAX     DisplayString (SIZE(0..63))
    MAX-ACCESS read-write
    STATUS     current
    DESCRIPTION
        "The name assigned to this input sub-unit."
    ::= { prtInputEntry 13 }

prtInputVendorName OBJECT-TYPE
    SYNTAX     DisplayString (SIZE(0..63))
    MAX-ACCESS read-only
    STATUS     current
    DESCRIPTION
        "The vendor name of this input sub-unit."
    ::= { prtInputEntry 14 }

prtInputModel OBJECT-TYPE
    SYNTAX     DisplayString (SIZE(0..63))
    MAX-ACCESS read-only
    STATUS     current
    DESCRIPTION
        "The model name of this input sub-unit."
    ::= { prtInputEntry 15 }

prtInputVersion OBJECT-TYPE
    SYNTAX     DisplayString (SIZE(0..63))
    MAX-ACCESS read-only
    STATUS     current
    DESCRIPTION
        "The version of this input sub-unit."
    ::= { prtInputEntry 16 }

prtInputSerialNumber OBJECT-TYPE
    SYNTAX     DisplayString (SIZE(0..32))
    MAX-ACCESS read-only
    STATUS     current
    DESCRIPTION
        "The serial number assigned to this input sub-unit."
    ::= { prtInputEntry 17 }

prtInputDescription OBJECT-TYPE
    SYNTAX     DisplayString (SIZE(0..255))
    MAX-ACCESS read-only
    STATUS     current
    DESCRIPTION
        "A free-form text description of this input
        sub-unit in the localization specified by
        prtGeneralCurrentLocalization."
    ::= { prtInputEntry 18 }

prtInputSecurity OBJECT-TYPE
    SYNTAX     PresentOnOff
    MAX-ACCESS read-write
    STATUS     current
    DESCRIPTION
        "Indicates if this input sub-unit has some security
        associated with it."
    ::= { prtInputEntry 19 }

-- The Input Media Group
--
-- The Input Media Group supports identification of media installed
-- or available for use on a printing device. Medium resources are
-- identified by name, and include a collection of characteristic
-- attributes that may further be used for selection and management
-- of them. The Input Media group consists of a set of optional
-- "columns" in the Input Table. In this manner, a minimally
-- conforming implementation may choose to not support reporting
-- of media resources if it cannot do so.
--
-- This group is optional.  However, to claim conformance to this
-- group, it is necessary to implement every object in the group.

prtInputMediaWeight  OBJECT-TYPE
    SYNTAX     Integer32
    MAX-ACCESS read-write
    STATUS     current
    DESCRIPTION
        "The weight of the medium associated with this input
        sub-unit in grams / per meter squared. The value (-2) means
        unknown."
    ::= { prtInputEntry 20 }

prtInputMediaType OBJECT-TYPE
    SYNTAX     DisplayString (SIZE(0..63))
    MAX-ACCESS read-write
    STATUS     current
    DESCRIPTION
        "The name of the type of medium associated with this input
        sub-unit. This name need not be processed by the printer; it
        might simply be displayed to an operator. The standardized
        string values from ISO 10175 (DPA) and ISO 10180 (SPDL) are:

        stationery       Separately cut sheets of an opaque material
        transparency     Separately cut sheets of a transparent material
        envelope         Envelopes that can be used for conventional
        mailing purposes
        envelope-plain   Envelopes that are not preprinted and have no
                         windows
        envelope-window  Envelopes that have windows for addressing
                         purposes
        continuous-long  Continuously connected sheets of an opaque
                         material connected along the long edge
        continuous-short Continuously connected sheets of an opaque
                         material connected along the short edge
        tab-stock        Media with tabs
        multi-part-form  Form medium composed of multiple layers not
                         pre-attached to one another; each sheet may be
                         drawn separately from an input source
        labels           Label stock
        multi-layer      Form medium composed of multiple layers which
                         are pre-attached to one another; e.g., for
                         use with impact printers"
    ::= { prtInputEntry 21 }

prtInputMediaColor OBJECT-TYPE
    SYNTAX     DisplayString (SIZE(0..63))
    MAX-ACCESS read-write
    STATUS     current
    DESCRIPTION
        "The name of the color of the medium associated with
        this input sub-unit using standardized string values
        from ISO 10175 (DPA) and ISO 10180 (SPDL) which are:

        other
        unknown
        white
        pink
        yellow
        buff
        goldenrod
        blue
        green
        transparent

        Implementors may add additional string values. The naming
        conventions in ISO 9070 are recommended in order to avoid
        potential name clashes."
    ::= { prtInputEntry 22 }

prtInputMediaFormParts OBJECT-TYPE
    SYNTAX     Integer32
    MAX-ACCESS read-write
    STATUS     current
    DESCRIPTION
         "The number of parts associated with the medium
         associated with this input sub-unit if the medium is a
         multi-part form.  The value (-1) means other and
         specifically indicates that the device places no
         restrictions on this parameter.  The value (-2) means
         unknown."
    ::= { prtInputEntry 23 }

-- The Output Group
--
-- Output sub-units are managed as a tabular, indexed collection of
-- possible devices capable of receiving media delivered from the
-- printing process.  Output sub-units typically have a location,
-- a type, an identifier, a set of constraints on possible media
-- sizes and potentially other characteristics, and may be capable
-- of indicating current status or capacity.
--
-- Implementation of every object in this group is mandatory.

prtOutput  OBJECT IDENTIFIER ::= { printmib 9 }

prtOutputDefaultIndex OBJECT-TYPE
    SYNTAX     Integer32
    MAX-ACCESS read-write
    STATUS     current
    DESCRIPTION
        "The  value of prtOutputIndex  corresponding to the default
        output sub-unit; that is, this object selects the default
        output destination."
    ::= { prtGeneralEntry 7 }

prtOutputTable OBJECT-TYPE
    SYNTAX     SEQUENCE OF PrtOutputEntry
    MAX-ACCESS not-accessible
    STATUS     current
    DESCRIPTION
        "A table of the devices capable of receiving media delivered
        from the printing process."
    ::= { prtOutput 2 }

prtOutputEntry OBJECT-TYPE
    SYNTAX     PrtOutputEntry
    MAX-ACCESS not-accessible
    STATUS     current
    DESCRIPTION
        "Attributes of a device capable of receiving media delivered
        from the printing process.

        Entries may exist in the table for each device
        index who's device type is `printer'."
    INDEX  { hrDeviceIndex, prtOutputIndex }
    ::= { prtOutputTable 1 }

PrtOutputEntry ::= SEQUENCE {
        prtOutputIndex                    Integer32,
        prtOutputType                     INTEGER,
        prtOutputCapacityUnit             CapacityUnit,
        prtOutputMaxCapacity              Integer32,
        prtOutputRemainingCapacity        Integer32,
        prtOutputStatus                   SubUnitStatus,
        prtOutputName                     DisplayString,
        prtOutputVendorName               DisplayString,
        prtOutputModel                    DisplayString,
        prtOutputVersion                  DisplayString,
        prtOutputSerialNumber             DisplayString,
        prtOutputDescription              DisplayString,
        prtOutputSecurity                 PresentOnOff,
        prtOutputDimUnit                  MediaUnit,
        prtOutputMaxDimFeedDir            Integer32,
        prtOutputMaxDimXFeedDir           Integer32,
        prtOutputMinDimFeedDir            Integer32,
        prtOutputMinDimXFeedDir           Integer32,
        prtOutputStackingOrder            INTEGER,
        prtOutputPageDeliveryOrientation  INTEGER,
        prtOutputBursting                 PresentOnOff,
        prtOutputDecollating              PresentOnOff,
        prtOutputPageCollated             PresentOnOff,
        prtOutputOffsetStacking           PresentOnOff
}

prtOutputIndex OBJECT-TYPE
    SYNTAX     Integer32
    MAX-ACCESS not-accessible
    STATUS     current
    DESCRIPTION
        "A unique value used by this printer to identify this
        output sub-unit. Although these values may change due
        to a major reconfiguration of the sub-unit (e.g.  the
        addition of new output devices to the printer), values
        are expected to remain stable across successive printer
        power cycles."
    ::= { prtOutputEntry 1 }

prtOutputType OBJECT-TYPE
    -- This value is a type 2 enumeration
    SYNTAX     INTEGER {
                   other(1),
                   unknown(2),
                   removableBin(3),
                   unRemovableBin(4),
                   continuousRollDevice(5),
                   mailBox(6),
                   continuousFanFold(7)
               }
    MAX-ACCESS read-only
    STATUS     current
    DESCRIPTION
        "The type of technology supported by this output sub-unit."
    ::= { prtOutputEntry 2 }

prtOutputCapacityUnit OBJECT-TYPE
    SYNTAX     CapacityUnit
    MAX-ACCESS read-only
    STATUS     current
    DESCRIPTION
        "The unit of measurement for use in calculating and relaying
        capacity values for this output sub-unit."
    ::= { prtOutputEntry 3 }

prtOutputMaxCapacity OBJECT-TYPE
    SYNTAX     Integer32
    MAX-ACCESS read-write
    STATUS     current
    DESCRIPTION
        "The maximum capacity of this output sub-unit in output
        sub-unit capacity units (CapacityUnit). There is no
        convention associated with the media itself so this value
        essentially reflects claimed capacity. If this output
        sub-unit can reliably sense this value, the value is
        sensed by the printer and may not be changed by management
        requests; otherwise, the value may be written
        (by a Remote Contol Panel or a Management Application).
        The value (-1) means other and specifically indicates
        that the sub-unit places no restrictions on this parameter.
        The value (-2) means unknown."
    ::= { prtOutputEntry 4 }

prtOutputRemainingCapacity OBJECT-TYPE
    SYNTAX     Integer32
    MAX-ACCESS read-write
    STATUS     current
    DESCRIPTION
        "The remaining capacity of the possible output sub-unit
        capacity in output sub-unit capacity units (CapacityUnit)
        of this output sub-unit. If this output sub-unit can
        reliably sense this value, the value is sensed by the
        printer and may not be modified by management requests;
        otherwise, the value may be written (by
        a Remote Contol Panel or a Management
        Application).  The value (-1) means other and
        specifically indicates that the sub-unit places no
        restrictions on this parameter.  The value (-2) means
        unknown.  The value (-3) means that the printer knows that
        there remains capacity for at least one unit."
    ::= { prtOutputEntry 5 }

prtOutputStatus OBJECT-TYPE
    SYNTAX     SubUnitStatus
    MAX-ACCESS read-only
    STATUS     current
    DESCRIPTION
        "The current status of this output sub-unit."
    ::= { prtOutputEntry 6 }


--               OUTPUT MEASUREMENT
--
--     _______ |                     | _______
--      ^      |                     |      ^
--      |      |                     |      |
--      |      |                     | RemainingCapacity
-- MaxCapacity |                     |      |
--      |      |                     |      v               ^
--      |      |_ _ _ _ _ _ _ _ _ _ _| ___________________  |direction
--      |      |                     |                      |
--      |      |  Sheets in output   |
--      v      |                     |
--     _______ +_____________________+

-- The Extended Output Group
--
-- This group is optional.  However, to claim conformance to this
-- group, it is necessary to implement every object in the group.

prtOutputName OBJECT-TYPE
    SYNTAX     DisplayString (SIZE(0..63))
    MAX-ACCESS read-write
    STATUS     current
    DESCRIPTION
        "The name assigned to this output sub-unit."
    ::= { prtOutputEntry 7 }

prtOutputVendorName OBJECT-TYPE
    SYNTAX     DisplayString (SIZE(0..63))
    MAX-ACCESS read-only
    STATUS     current
    DESCRIPTION
        "The vendor name of this output sub-unit."
    ::= { prtOutputEntry 8 }

prtOutputModel OBJECT-TYPE
    SYNTAX     DisplayString (SIZE(0..63))
    MAX-ACCESS read-only
    STATUS     current
    DESCRIPTION
        "The name assigned to this output sub-unit."
    ::= { prtOutputEntry 9 }

prtOutputVersion OBJECT-TYPE
    SYNTAX     DisplayString (SIZE(0..63))
    MAX-ACCESS read-only
    STATUS     current
    DESCRIPTION
        "The version of this output sub-unit."
    ::= { prtOutputEntry 10 }

prtOutputSerialNumber OBJECT-TYPE
    SYNTAX     DisplayString (SIZE(0..63))
    MAX-ACCESS read-only
    STATUS     current
    DESCRIPTION
        "The serial number assigned to this output sub-unit."
    ::= { prtOutputEntry 11 }

prtOutputDescription OBJECT-TYPE
    SYNTAX     DisplayString (SIZE(0..255))
    MAX-ACCESS read-only
    STATUS     current
    DESCRIPTION
        "  A free-form text description of this output sub-unit in the
        localization specified by prtGeneralCurrentLocalization."
    ::= { prtOutputEntry 12 }

prtOutputSecurity OBJECT-TYPE
    SYNTAX     PresentOnOff
    MAX-ACCESS read-write
    STATUS     current
    DESCRIPTION
        "Indicates if this output sub-unit has some security associated
        with it and if that security is enabled or not."
    ::= { prtOutputEntry 13 }

-- The Output Dimensions Group
--
-- This group is optional.  However, to claim conformance to this
-- group, it is necessary to implement every object in the group.

prtOutputDimUnit OBJECT-TYPE
    SYNTAX     MediaUnit
    MAX-ACCESS read-only
    STATUS     current
    DESCRIPTION
        "The unit of measurement for use in calculating and relaying
        dimensional values for this output sub-unit."
    ::= { prtOutputEntry 14 }

prtOutputMaxDimFeedDir OBJECT-TYPE
    SYNTAX     Integer32
    MAX-ACCESS read-write
    STATUS     current
    DESCRIPTION
        "The maximum dimensions supported by this output sub-unit
        for measurements taken parallel relative to the feed
        direction associated with that sub-unit in output
        sub-unit dimensional units (DimUnit). If this output
        sub-unit can reliably sense this value, the value is
        sensed by the printer and may not be changed with
        management protocol operations."
    ::= { prtOutputEntry 15 }

prtOutputMaxDimXFeedDir OBJECT-TYPE
    SYNTAX     Integer32
    MAX-ACCESS read-write
    STATUS     current
    DESCRIPTION
        "The maximum dimensions supported by this output sub-unit
        for measurements taken ninety degrees relative to the
        feed direction associated with that sub-unit in output
        sub-unit dimensional units (DimUnit). If this output
        sub-unit can reliably sense this value, the value is
        sensed by the printer and may not be changed with
        management protocol operations."
    ::= { prtOutputEntry 16 }

prtOutputMinDimFeedDir OBJECT-TYPE
    SYNTAX     Integer32
    MAX-ACCESS read-write
    STATUS     current
    DESCRIPTION
        "The minimum dimensions supported by this output sub-unit
        for measurements taken parallel relative to the feed
        direction associated with that sub-unit in output
        sub-unit dimensional units (DimUnit).  If this output
        sub-unit can reliably sense this value, the value is
        sensed by the printer and may not be changed with
        management protocol operations."
    ::= { prtOutputEntry 17 }

prtOutputMinDimXFeedDir OBJECT-TYPE
    SYNTAX     Integer32
    MAX-ACCESS read-write
    STATUS     current
    DESCRIPTION
        "The minimum dimensions supported by this output sub-unit
        for measurements taken ninety degrees relative to the
        feed direction associated with that sub-unit in output
        sub-unit dimensional units (DimUnit). If this output
        sub-unit can reliably sense this value, the value is
        sensed by the printer and may not be changed with
        management protocol operations."
    ::= { prtOutputEntry 18 }

-- The Output Features Group
--
-- This group is optional.  However, to claim conformance to this
-- group, it is necessary to implement every object in the group.

prtOutputStackingOrder OBJECT-TYPE
    --  This value is a type 1 enumeration
    SYNTAX     INTEGER {
                   unknown(2),
                   firstToLast(3),
                   lastToFirst(4)
               }
    MAX-ACCESS read-write
    STATUS     current
    DESCRIPTION
        "The current state of the stacking order for the
        associated output sub-unit. `FirstToLast' means
        that as pages are output the front of the next page is
        placed against the back of the previous page.
        `LasttoFirst' means that as pages are output the back
        of the next page is placed against the front of the
        previous page."
    ::= { prtOutputEntry 19 }

prtOutputPageDeliveryOrientation OBJECT-TYPE
    --   This value is a type 1 enumeration
    SYNTAX     INTEGER {
                   faceUp(3),
                   faceDown(4)
               }
    MAX-ACCESS read-write
    STATUS     current
    DESCRIPTION
        "The reading surface that will be `up' when pages are
        delivered to the associated output sub-unit. Values are
        Face-Up and Face-Down. (Note: interpretation of these
        values is in general context-dependent based on locale;
        presentation of these values to an end-user should be
        normalized to the expectations of the user)."
    ::= { prtOutputEntry 20 }

prtOutputBursting OBJECT-TYPE
    SYNTAX     PresentOnOff
    MAX-ACCESS read-write
    STATUS     current
    DESCRIPTION
        "This object indicates that the outputing sub-unit
        supports bursting, and if so, whether the feature is enabled.
        Bursting is the process by which continuous media is separated
        into individual sheets, typically by bursting along pre-formed
        perforations."
    ::= { prtOutputEntry 21 }

prtOutputDecollating OBJECT-TYPE
    SYNTAX     PresentOnOff
    MAX-ACCESS read-write
    STATUS     current
    DESCRIPTION
        "This object indicates that the output supports
        supports decollating, and if so, whether the feature
        is enabled. Decollating is the process by which the
        individual parts within a multi-part form are separated
        and sorted into separate stacks for each part."
    ::= { prtOutputEntry 22 }

prtOutputPageCollated OBJECT-TYPE
    SYNTAX     PresentOnOff
    MAX-ACCESS read-write
    STATUS     current
    DESCRIPTION
        "This object indicates that the output sub-unit
        supports page collation, and if so, whether the feature is
        enabled."
    ::= { prtOutputEntry 23 }

prtOutputOffsetStacking OBJECT-TYPE
    SYNTAX     PresentOnOff
    MAX-ACCESS read-write
    STATUS     current
    DESCRIPTION
        "This object indicates that the output supports
        supports offset stacking, and if so, whether the feature is
        enabled."
    ::= { prtOutputEntry 24 }

-- The Marker Group
--
-- A marker is the mechanism that produces marks on the print media.  The
-- marker sub-units and their associated supplies are represented by the
-- Marker Group in the model.  A printer can contain one or more marking
-- mechanisms.  Some examples of multiple marker sub-units are: a printer
-- with separate markers for normal and magnetic ink or an imagesetter
-- that can output to both a proofing device and final film. Each marking
-- device can have its own set of  characteristics associated with it,
-- such as marking technology and resolution.
--
-- Implementation of every object in this group is mandatory.


prtMarker OBJECT IDENTIFIER ::= { printmib 10 }

prtMarkerDefaultIndex OBJECT-TYPE
    SYNTAX     Integer32 (1..65535)
    MAX-ACCESS read-write
    STATUS     current
    DESCRIPTION
        "The value of prtMarkerIndex  corresponding to the
        default markersub-unit; that is, this object selects the
        default marker."
    ::= { prtGeneralEntry 8 }

-- The printable area margins as listed below define an area of the print
-- media which is guaranteed to be printable for all combinations of
-- input, media paths, and interpreters for this marker.

prtMarkerTable OBJECT-TYPE
    SYNTAX     SEQUENCE OF PrtMarkerEntry
    MAX-ACCESS not-accessible
    STATUS     current
    DESCRIPTION
        ""
    ::= { prtMarker 2 }

prtMarkerEntry OBJECT-TYPE
    SYNTAX     PrtMarkerEntry
    MAX-ACCESS not-accessible
    STATUS     current
    DESCRIPTION
        "Entries may exist in the table for each device
        index who's device type is `printer'."
    INDEX  { hrDeviceIndex, prtMarkerIndex }
    ::= { prtMarkerTable 1 }

PrtMarkerEntry ::= SEQUENCE {
        prtMarkerIndex                  Integer32,
        prtMarkerMarkTech               INTEGER,
        prtMarkerCounterUnit            INTEGER,
        prtMarkerLifeCount              Counter32,
        prtMarkerPowerOnCount           Counter32,
        prtMarkerProcessColorants       Integer32,
        prtMarkerSpotColorants          Integer32,
        prtMarkerAddressabilityUnit     INTEGER,
        prtMarkerAddressabilityFeedDir  Integer32,
        prtMarkerAddressabilityXFeedDir Integer32,
        prtMarkerNorthMargin            Integer32,
        prtMarkerSouthMargin            Integer32,
        prtMarkerWestMargin             Integer32,
        prtMarkerEastMargin             Integer32,
        prtMarkerStatus                 SubUnitStatus
}


prtMarkerIndex OBJECT-TYPE
    SYNTAX     Integer32 (1..65535)
    MAX-ACCESS not-accessible
    STATUS     current
    DESCRIPTION
        "A unique value used by the printer to identify this marking
        SubUnitStatus.  Although these values may change due to a major
        reconfiguration of the device (e.g. the addition of new marking
        sub-units to the printer), values are expected to remain
        stable across successive printer power cycles."
    ::= { prtMarkerEntry 1 }

prtMarkerMarkTech OBJECT-TYPE
    -- This value is a type 2 enumeration
    SYNTAX     INTEGER {
                   other(1),
                   unknown(2),
                   electrophotographicLED(3),
                   electrophotographicLaser(4),
                   electrophotographicOther(5),
                   impactMovingHeadDotMatrix9pin(6),
                   impactMovingHeadDotMatrix24pin(7),
                   impactMovingHeadDotMatrixOther(8),
                   impactMovingHeadFullyFormed(9),
                   impactBand(10),
                   impactOther(11),
                   inkjetAqueous(12),
                   inkjetSolid(13),
                   inkjetOther(14),
                   pen(15),
                   thermalTransfer(16),
                   thermalSensitive(17),
                   thermalDiffusion(18),
                   thermalOther(19),
                   electroerosion(20),
                   electrostatic(21),
                   photographicMicrofiche(22),
                   photographicImagesetter(23),
                   photographicOther(24),
                   ionDeposition(25),
                   eBeam(26),
                   typesetter(27)
               }
    MAX-ACCESS read-only
    STATUS     current
    DESCRIPTION
        "The type of marking technology used for this marking sub-unit."
    ::= { prtMarkerEntry 2 }

prtMarkerCounterUnit OBJECT-TYPE
    -- This value is a type 1 enumeration
    SYNTAX     INTEGER {
                   tenThousandthsOfInches(3),  -- .0001
                   micrometers(4),
                   characters(5),
                   lines(6),
                   impressions(7),
                   sheets(8),
                   dotRow(9),
                   hours(11),
                   feet(16),
                   meters(17)
               }
    MAX-ACCESS read-only
    STATUS     current
    DESCRIPTION
        "The unit that will be used by the printer when reporting
        counter values for this marking sub-unit.  The
        time units of measure are provided for a device like a
        strip recorder that does not or cannot track the physical
        dimensions of the media and does not use characters,
        lines or sheets."
    ::= { prtMarkerEntry 3}

prtMarkerLifeCount OBJECT-TYPE
    SYNTAX     Counter32
    MAX-ACCESS read-only
    STATUS     current
    DESCRIPTION
        "The count of the number of units of measure counted during
        the life of printer using units of measure as specified by
        CounterUnit."
    ::= { prtMarkerEntry 4 }

prtMarkerPowerOnCount OBJECT-TYPE
    SYNTAX     Counter32
    MAX-ACCESS read-only
    STATUS     current
    DESCRIPTION
        "The count of the number of units of measure counted since the
        equipment was most recently powered on using units of measure as
        specified by CounterUnit."
    ::= { prtMarkerEntry 5 }

prtMarkerProcessColorants OBJECT-TYPE
    SYNTAX     Integer32 (0..65535)
    MAX-ACCESS read-only
    STATUS     current
    DESCRIPTION
        "The number of process colors supported by this marker.  A
        process color of 1 implies monochrome.  The value of this
        object and SpotColorants cannot both be 0.  Must be 0 or
        greater."
    ::= { prtMarkerEntry 6 }

prtMarkerSpotColorants OBJECT-TYPE
    SYNTAX     Integer32 (0..65535)
    MAX-ACCESS read-only
    STATUS     current
    DESCRIPTION
        "The number of spot colors supported by this marker.  The
        value of this object and ProcessColorants cannot
        both be 0.  Must be 0 or greater."
    ::= { prtMarkerEntry 7 }

prtMarkerAddressabilityUnit OBJECT-TYPE
    --   This value is a type 1 enumeration
    SYNTAX     INTEGER {
                   tenThousandthsOfInches(3),  -- .0001
                   micrometers(4)
               }
    MAX-ACCESS read-only
    STATUS     current
    DESCRIPTION
        "The unit of measure of distances."
    ::= { prtMarkerEntry 8 }

prtMarkerAddressabilityFeedDir OBJECT-TYPE
    SYNTAX     Integer32
    MAX-ACCESS read-only
    STATUS     current
    DESCRIPTION
        "The  number of addressable marking positions in the feed
        direction per 10000 units of measure specified by
        AddressabilityUnit.  A value of (-1) implies 'other' or
        'infinite' while a value of (-2) implies 'unknown'."
    ::= { prtMarkerEntry 9 }

prtMarkerAddressabilityXFeedDir OBJECT-TYPE
    SYNTAX     Integer32
    MAX-ACCESS read-only
    STATUS     current
    DESCRIPTION
        "The number of addressable marking positions in the cross
        feed direction in 10000 units of measure specified by
        AddressabilityUnit.  A value of (-1) implies 'other' or
        'infinite' while a value of (-2) implies 'unknown'."
    ::= { prtMarkerEntry 10 }

prtMarkerNorthMargin OBJECT-TYPE
    SYNTAX     Integer32
    MAX-ACCESS read-only
    STATUS     current
    DESCRIPTION
        "The margin, in units identified by AddressabilityUnit,
        from the leading edge of the medium as the medium flows
        throught the marking engine with the side to be imaged
        facing the observer. The leading edge is the North edge
        and the other edges are defined by the normal compass
        layout of  directions with the compass facing the
        observer.  Printing within the area bounded by all four
        margins is guaranteed for all interpreters.   The value
        (-2) means unknown."
    ::= { prtMarkerEntry 11 }

prtMarkerSouthMargin OBJECT-TYPE
    SYNTAX     Integer32
    MAX-ACCESS read-only
    STATUS     current
    DESCRIPTION
        "The margin from the South edge  (see NorthMargin)
        of the medium in units identified by
        AddressabilityUnit.  Printing within the area bounded by
        all four margins  is guaranteed for all interpreters.
        The value (-2) means unknown."
    ::= { prtMarkerEntry 12 }

prtMarkerWestMargin OBJECT-TYPE
    SYNTAX     Integer32
    MAX-ACCESS read-only
    STATUS     current
    DESCRIPTION
        "The margin from the West edge (see NorthMargin) of the
        medium in units identified by AddressabilityUnit.
        Printing within the area bouned by all four margins is
        guaranteed for all interpreters.   The value (-2) means
        unknown."
    ::= { prtMarkerEntry 13 }

prtMarkerEastMargin OBJECT-TYPE
    SYNTAX     Integer32
    MAX-ACCESS read-only
    STATUS     current
    DESCRIPTION
        "The margin from the East edge (see NorthMargin) of the
        medium in units identified by AddressabilityUnit.
        Printing within the area bounded by all four margins is
        guaranteed for all interpreters. The value (-2) means
        unknown."
    ::= { prtMarkerEntry 14 }

prtMarkerStatus OBJECT-TYPE
    SYNTAX     SubUnitStatus
    MAX-ACCESS read-only
    STATUS     current
    DESCRIPTION
        "The current status of this marker sub-unit."
        ::= { prtMarkerEntry 15 }

-- The Marker Supplies Group
--
-- This group is optional.  However, to claim conformance to this
-- group, it is necessary to implement every object in the group.

prtMarkerSupplies OBJECT IDENTIFIER ::= { printmib 11 }

prtMarkerSuppliesTable OBJECT-TYPE
    SYNTAX     SEQUENCE OF PrtMarkerSuppliesEntry
    MAX-ACCESS not-accessible
    STATUS     current
    DESCRIPTION
        "A table of the marker supplies available on this printer."
    ::= { prtMarkerSupplies 1 }

prtMarkerSuppliesEntry OBJECT-TYPE
    SYNTAX     PrtMarkerSuppliesEntry
    MAX-ACCESS not-accessible
    STATUS     current
    DESCRIPTION
        "Attributes of a marker supply.

        Entries may exist in the table for each device
        index who's device type is `printer'."
    INDEX  { hrDeviceIndex, prtMarkerSuppliesIndex }
    ::= { prtMarkerSuppliesTable 1 }

PrtMarkerSuppliesEntry ::= SEQUENCE {
        prtMarkerSuppliesIndex          Integer32,
        prtMarkerSuppliesMarkerIndex    Integer32,
        prtMarkerSuppliesColorantIndex  Integer32,
        prtMarkerSuppliesClass          INTEGER,
        prtMarkerSuppliesType           INTEGER,
        prtMarkerSuppliesDescription    DisplayString,
        prtMarkerSuppliesSupplyUnit     INTEGER,
        prtMarkerSuppliesMaxCapacity    Integer32,
        prtMarkerSuppliesLevel          Integer32
}


prtMarkerSuppliesIndex OBJECT-TYPE
    SYNTAX     Integer32 (1..65535)
    MAX-ACCESS not-accessible
    STATUS     current
    DESCRIPTION
        "A unique value used by the printer to identify this marker
        supply.  Although these values may change due to a major
        reconfiguration of the device (e.g. the addition of new marker
        supplies to the printer), values are expected to remain stable
        across successive printer power cycles."
    ::= { prtMarkerSuppliesEntry 1 }

prtMarkerSuppliesMarkerIndex OBJECT-TYPE
    SYNTAX     Integer32 (0..65535)
    MAX-ACCESS read-only
    STATUS     current
    DESCRIPTION
        "The value of prtMarkerIndex corresponding to the
        marking sub-unit with which this marker supply
        sub-unit is associated."
    ::= { prtMarkerSuppliesEntry 2 }

prtMarkerSuppliesColorantIndex OBJECT-TYPE
    SYNTAX     Integer32 (0..65535)
    MAX-ACCESS read-only
    STATUS     current
    DESCRIPTION
        "The value of prtMarkerColorantIndex
        corresponding to the colorant with which this
        marker supply sub-unit is associated.  This value
        shall be 0 if there is no colorant table."
    ::= { prtMarkerSuppliesEntry 3 }

prtMarkerSuppliesClass OBJECT-TYPE
    --  This value is a type 1 enumeration
    SYNTAX     INTEGER {
                   other(1),
                   supplyThatIsConsumed(3),
                   receptacleThatIsFilled(4)
               }
    MAX-ACCESS read-only
    STATUS     current
    DESCRIPTION
        "Indicates whether this supply entity represents a supply
        container that is consumed or a receptacle that is filled."
    ::= { prtMarkerSuppliesEntry 4 }

prtMarkerSuppliesType OBJECT-TYPE
    --   This value is a type 3 enumeration
    SYNTAX     INTEGER {
                   other(1),
                   unknown(2),
                   toner(3),
                   wasteToner(4),
                   ink(5),
                   inkCartridge(6),
                   inkRibbon(7),
                   wasteInk(8),
                   opc(9),
                   developer(10),
                   fuserOil(11),
                   solidWax(12),
                   ribbonWax(13),
                   wasteWax(14)
               }
    MAX-ACCESS read-only
    STATUS     current
    DESCRIPTION
        "The type of this supply."
    ::= { prtMarkerSuppliesEntry 5 }

prtMarkerSuppliesDescription OBJECT-TYPE
    SYNTAX     DisplayString (SIZE(0..255))
    MAX-ACCESS read-only
    STATUS     current
    DESCRIPTION
        "The description of this supply container/receptacle in the
        localization specified by prtGeneralCurrentLocalization."
    ::= { prtMarkerSuppliesEntry 6 }

prtMarkerSuppliesSupplyUnit OBJECT-TYPE
    -- This value is a type 1 enumeration
    SYNTAX     INTEGER {
                   tenThousandthsOfInches(3),  -- .0001
                   micrometers(4),
                   thousandthsOfOunces(12),
                   tenthsOfGrams(13),
                   hundrethsOfFluidOunces(14),
                   tenthsOfMilliliters(15)
               }
    MAX-ACCESS read-only
    STATUS     current
    DESCRIPTION
        "Unit of this marker supply container/receptacle."
    ::= { prtMarkerSuppliesEntry 7 }

prtMarkerSuppliesMaxCapacity OBJECT-TYPE
    SYNTAX     Integer32
    MAX-ACCESS read-write
    STATUS     current
    DESCRIPTION
        "The maximum capacity of this supply container/receptacle
        expressed in SupplyUnit. If this supply
        container/receptacle can reliably sense this value, the
        value is sensed by the printer and is read-only;
        otherwise, the value may be written (by a Remote Contol
        Panel or a Management Application). The value (-1) means
        other and specifically indicates that the sub-unit places
        no restrictions on this parameter. The value (-2) means
        unknown."
    ::= { prtMarkerSuppliesEntry 8 }

prtMarkerSuppliesLevel OBJECT-TYPE
    SYNTAX     Integer32
    MAX-ACCESS read-write
    STATUS     current
    DESCRIPTION
        "The current level if this supply is a container; the
        remaining space if this supply is a receptacle. If this
        supply container/receptacle can reliably sense this
        value, the value is sensed by the printer and is
        read-only; otherwise, the value may be written (by a
        Remote Contol Panel or a Management Application). The
        value (-1) means other and specifically indicates that
        the sub-unit places no restrictions on this parameter.
        The value (-2) means unknown.  A value of (-3) means that the
        printer knows that there is some supply/remaining space,
        respectively."
    ::= { prtMarkerSuppliesEntry 9 }

-- The Marker Colorant Group
--
-- This group is optional.  However, to claim conformance to this
-- group, it is necessary to implement every object in the group.

prtMarkerColorant OBJECT IDENTIFIER ::= { printmib 12 }

prtMarkerColorantTable OBJECT-TYPE
    SYNTAX     SEQUENCE OF PrtMarkerColorantEntry
    MAX-ACCESS not-accessible
    STATUS     current
    DESCRIPTION
        "A table of all of the colorants available on the printer."
    ::= { prtMarkerColorant 1 }

prtMarkerColorantEntry OBJECT-TYPE
    SYNTAX     PrtMarkerColorantEntry
    MAX-ACCESS not-accessible
    STATUS     current
    DESCRIPTION
        "Attributes of a colorant available on the printer.

        Entries may exist in the table for each device
        index who's device type is `printer'."
    INDEX { hrDeviceIndex, prtMarkerColorantIndex }
    ::= { prtMarkerColorantTable 1 }

PrtMarkerColorantEntry ::= SEQUENCE {
        prtMarkerColorantIndex          Integer32,
        prtMarkerColorantMarkerIndex    Integer32,
        prtMarkerColorantRole           INTEGER,
        prtMarkerColorantValue          DisplayString,
        prtMarkerColorantTonality       Integer32
}

prtMarkerColorantIndex OBJECT-TYPE
    SYNTAX     Integer32 (1..65535)
    MAX-ACCESS not-accessible
    STATUS     current
    DESCRIPTION
        "A unique value used by the printer to identify this colorant.
        Although these values may change due to a major
        reconfiguration of the device (e.g. the addition of new
        colorants to the printer), values are expected to remain
        stable across successive printer power cycles."
    ::= { prtMarkerColorantEntry 1 }

prtMarkerColorantMarkerIndex OBJECT-TYPE
    SYNTAX     Integer32 (0..65535)
    MAX-ACCESS read-only
    STATUS     current
    DESCRIPTION
        "The value of prtMarkerIndex corresponding to the
        marker sub-unit with which this colorant entry is
        associated."
    ::= { prtMarkerColorantEntry 2 }

prtMarkerColorantRole OBJECT-TYPE
    -- This value is a type 1 enumeration
    SYNTAX     INTEGER { --  Colorant Role
                   other(1),
                   process(3),
                   spot(4)
               }
    MAX-ACCESS read-only
    STATUS     current
    DESCRIPTION
        "The role played by this colorant."
    ::= { prtMarkerColorantEntry 3 }

prtMarkerColorantValue OBJECT-TYPE
    SYNTAX     DisplayString (SIZE(0..63))
    MAX-ACCESS read-only
    STATUS     current
    DESCRIPTION
        "The name of the color of this The name of the color of this
        colorant using standardized string names from ISO 10175 (DPA)
        and ISO 10180 (SPDL) which are:
          other
          unknown
          white
          red
          green
          blue
          cyan
          magenta
          yellow
          black
        Implementors may add additional string values. The naming
        conventions in ISO 9070 are recommended in order to avoid
        potential name clashes"
    ::= { prtMarkerColorantEntry 4 }

prtMarkerColorantTonality OBJECT-TYPE
    SYNTAX     Integer32
    MAX-ACCESS read-only
    STATUS     current
    DESCRIPTION
        "The distinct levels of tonality realizable by a marking
        sub-unit when using this colorant.  This value does not
        include the number of levels of tonal difference that an
        interpreter can obtain by techniques such as half toning.
        This value must be at least 2."
    ::= { prtMarkerColorantEntry 5 }

-- The Media Path Group
--
-- The media paths encompass the mechanisms in the printer that move the
-- media through the printer and connect all other media related sub-
-- units: inputs, outputs, markers and finishers. A printer contains one
-- or more media paths. These are represented by the Media Path Group in
-- the model. The Media Path group has some attributes that apply to all
-- paths plus a table of the separate media paths.

prtMediaPath OBJECT IDENTIFIER ::= { printmib 13 }

prtMediaPathDefaultIndex OBJECT-TYPE
    SYNTAX     Integer32 (1..65535)
    MAX-ACCESS read-write
    STATUS     current
    DESCRIPTION
        "The value of prtMediaPathIndex corresponding to
        the default media path; that is, the selection of the
        default media path."
    ::= { prtGeneralEntry 9 }

prtMediaPathTable OBJECT-TYPE
    SYNTAX     SEQUENCE OF PrtMediaPathEntry
    MAX-ACCESS not-accessible
    STATUS     current
    DESCRIPTION
        ""
    ::= { prtMediaPath 4 }

prtMediaPathEntry OBJECT-TYPE
    SYNTAX     PrtMediaPathEntry
    MAX-ACCESS not-accessible
    STATUS     current
    DESCRIPTION
        "Entries may exist in the table for each device
        index who's device type is `printer'."
    INDEX  { hrDeviceIndex, prtMediaPathIndex }
    ::= { prtMediaPathTable 1 }

PrtMediaPathEntry ::= SEQUENCE {
    prtMediaPathIndex               Integer32,
    prtMediaPathMaxSpeedPrintUnit   INTEGER,
    prtMediaPathMediaSizeUnit       MediaUnit,
    prtMediaPathMaxSpeed            Integer32,
    prtMediaPathMaxMediaFeedDir     Integer32,
    prtMediaPathMaxMediaXFeedDir    Integer32,
    prtMediaPathMinMediaFeedDir     Integer32,
    prtMediaPathMinMediaXFeedDir    Integer32,
    prtMediaPathType                INTEGER,
    prtMediaPathDescription         DisplayString,
    prtMediaPathStatus              SubUnitStatus
}


prtMediaPathIndex OBJECT-TYPE
    SYNTAX     Integer32 (1..65535)
    MAX-ACCESS not-accessible
    STATUS     current
    DESCRIPTION
        "A unique value used by the printer to identify this media
        path. Although these values may change due to a major
        reconfiguration of the device (e.g. the addition of new
        media paths to the printer), values are expected to remain
        stable across successive printer power
        cycles."
    ::= { prtMediaPathEntry 1 }

prtMediaPathMaxSpeedPrintUnit OBJECT-TYPE
    -- This value is a type 1 enumeration
    SYNTAX     INTEGER {
                   tenThousandthsOfInchesPerHour(3),   -- .0001/hour
                   micrometersPerHour(4),
                   charactersPerHour(5),
                   linesPerHour(6),
                   impressionsPerHour(7),
                   sheetsPerHour(8),
                   dotRowPerHour(9),
                   feetPerHour(16),
                   metersPerHour(17)
               }
    MAX-ACCESS read-only
    STATUS     current
    DESCRIPTION
        "The unit of measure used in specifying the speed of all media
        paths in the printer."
    ::= { prtMediaPathEntry 2 }

prtMediaPathMediaSizeUnit OBJECT-TYPE
    SYNTAX     MediaUnit
    MAX-ACCESS read-only
    STATUS     current
    DESCRIPTION
        "The units of measure of media size for use in calculating and
        relaying dimensional values for all media paths in the printer."
    ::= { prtMediaPathEntry 3 }

prtMediaPathMaxSpeed OBJECT-TYPE
    SYNTAX     Integer32
    MAX-ACCESS read-only
    STATUS     current
    DESCRIPTION
        "The maximum printing speed of this media path expressed in
        prtMediaPathMaxSpeedUnit's.  A value of (-1) implies
        'other'."
    ::= { prtMediaPathEntry 4 }

prtMediaPathMaxMediaFeedDir OBJECT-TYPE
    SYNTAX     Integer32
    MAX-ACCESS read-only
    STATUS     current
    DESCRIPTION
        "The maximum physical media size in the feed direction of this
        media path expressed in units of measure specified by
        MediaSizeUnit.  A value of (-1) implies 'unlimited'.  A value
        of (-2) implies 'unknown'"
    ::= { prtMediaPathEntry 5 }

prtMediaPathMaxMediaXFeedDir OBJECT-TYPE
    SYNTAX     Integer32
    MAX-ACCESS read-only
    STATUS     current
    DESCRIPTION
        "The maximum physical media size across the feed direction of
        this media path expressed in units of measure specified by
        MediaSizeUnit.  A value of (-2) implies 'unknown'."
    ::= { prtMediaPathEntry 6 }

prtMediaPathMinMediaFeedDir OBJECT-TYPE
    SYNTAX     Integer32
    MAX-ACCESS read-only
    STATUS     current
    DESCRIPTION
        "The minimum physical media size in the feed direction of this
        media path expressed in units of measure specified by
        MediaSizeUnit. A value of (-2) implies 'unknown'."
    ::= { prtMediaPathEntry 7 }

prtMediaPathMinMediaXFeedDir OBJECT-TYPE
    SYNTAX     Integer32
    MAX-ACCESS read-only
    STATUS     current
    DESCRIPTION
        "The minimum physical media size across the feed direction of
        this media path expressed in units of measure specified by
        MediaSizeUnit.  A value of (-2) implies 'unknown'."
    ::= { prtMediaPathEntry 8 }

prtMediaPathType OBJECT-TYPE
    --   This value is a type 2 enumeration
    SYNTAX     INTEGER {
                   other(1),
                   unknown(2),
                   longEdgeBindingDuplex(3),
                   shortEdgeBindingDuplex(4),
                   simplex(5)
               }
    MAX-ACCESS read-only
    STATUS     current
    DESCRIPTION
        "The type of the media path for this media path."
    ::= { prtMediaPathEntry 9 }

prtMediaPathDescription OBJECT-TYPE
    SYNTAX     DisplayString (SIZE(0..255))
    MAX-ACCESS read-only
    STATUS     current
    DESCRIPTION
        "The manufacturer-provided description of this media path in
        the localization specified by prtGeneralCurrentLocalization."
    ::= { prtMediaPathEntry 10 }

prtMediaPathStatus OBJECT-TYPE
    SYNTAX     SubUnitStatus
    MAX-ACCESS read-only
    STATUS     current
    DESCRIPTION
        "The current status of this media path."
    ::= { prtMediaPathEntry 11 }

-- The Channel Group
--
-- Implementation of every object in this group is mandatory.

-- Channels are independent sources of print data. Here,
-- print data is the term used for the information that is
-- used to construct printed pages and may have both data
-- and control aspects. The output of a channel is in a form
-- suitable for input to one of the interpreters as a
-- stream. A channel may be independently enabled (allowing
-- print data to flow) or disabled (stopping the flow of
-- print data). A printer may have one or more channels.
--
-- Basically, the channel abstraction is intended to cover
-- all the aspects of getting the print data to an
-- interpreter. This might include transporting the data
-- from one place to another, it might include (invisible)
-- compression, it might include encoding or packetizing to
-- provide multiple information sources over a single
-- physical interface and it might include filtering
-- characters that were destined for another kind of
-- channel. All of these aspects are hidden in the channel
-- abstraction.(Note some Page Description Languages have
-- compression built into them so "invisible" compression
-- refers to compression done by the transport medium and
-- removed before the data is presented to the interpreter.)
--
-- There are many kinds of channels;some of which are based
-- on networks and others which are not. For example, a
-- channel can be a serial (or parallel) connection; it can
-- be a service, such as the Unix Line Printer Daemon (LPD),
-- offering itself over a network connection (interface); or
-- it could be a disk drive into which a floppy disks with
-- the print data is inserted. Each channel is typically
-- identified by the electronic path and/or service protocol
-- used to deliver print data to the printer.
--
-- Channel example                   Implementation
--
-- serial port channel            bi-directional data channel
-- parallel port channel          often uni-directional channel
-- IEEE 1284 port channel         bi-directional channel
-- SCSI port channel              bi-directional
-- Apple PAP channel              may be based on Local-, Ether-or
--                                TokenTalk
-- LPD Server channel             typically TCP/IP based, port 515

-- Novell Remote Printer          typically SPX/IPX based channel
-- Novell Print Server            typically SPX/IPX based channel
-- port 9100 channel              HP and friends
-- Adobe AppSocket(9101) channel  a bi-directional extension of LPD
--
-- It is easy to note that this is a mixed bag.  There are
-- some physical connections over which no (or very meager)
-- protocols are run (e.g. the serial or old parallel ports)
-- and there are services which often have elaborate
-- protocols that run over a number of protocol stacks. In
-- the end what is important is the delivery of print data
-- thru the channel.
--
-- The channel sub-units are represented by the Channel
-- Group in the Model. It has a current Control Language
-- which can be used to specify which interpreter is to be
-- used for the print data and to query and change
-- environment variables used by the interpreters (and
-- Mangement Applications). There is also a default
-- interpreter that is to be used if an interpreter is not
-- explicitly specified using the Control Language. Channel
-- sub-units are based on an underlying interface.

--       The channel table and its underlying structure
--
-- The first seven items in the Channel Table define the
-- "channel" itself.  A channel typically depends on other
-- protocols and interfaces to provide the data that flows
-- thru the channel. It is necessary to provide control of
-- the (perhaps complex) process by which print data arrives
-- at an interpreter. Control is largely limited to enabling
-- or disabling the whole channel. It is likely, however,
-- that more control of the process of accessing print data
-- will be needed over time. Thus, the ChannelType will
-- allow type specific data to be associated with each
-- channel (using ChannelType specific groups in a fashion
-- analogous to the media specific MIBs that are associated
-- with the IANAIfType in the Interfaces Table). As a first
-- step in this direction, each channel will identify the
-- underlying Interface on which it is based. This is the
-- eighth object in each row of the table.

-- Some examples of the kind of control are where
-- compression or encoding is used; and whether the data is
-- filtered to remove file storage anomolies such as those
-- created by using MS-DOS/PC-DOS LPT1:.
--

-- The Channel Table
--
-- The prtChannelTable represents the set of input data sources which
-- can provide print data to one or more of the interpreters
-- available on a printer


prtChannel OBJECT IDENTIFIER ::= { printmib 14 }

prtChannelTable OBJECT-TYPE
    SYNTAX     SEQUENCE OF PrtChannelEntry
    MAX-ACCESS not-accessible
    STATUS     current
    DESCRIPTION
        ""
    ::= { prtChannel 1 }

prtChannelEntry OBJECT-TYPE
    SYNTAX     PrtChannelEntry
    MAX-ACCESS not-accessible
    STATUS     current
    DESCRIPTION
        "Entries may exist in the table for each device
        index who's device type is `printer'."
    INDEX  { hrDeviceIndex, prtChannelIndex }
    ::= { prtChannelTable 1 }

PrtChannelEntry ::= SEQUENCE {
    prtChannelIndex                     Integer32,
    prtChannelType                      INTEGER,
    prtChannelProtocolVersion           DisplayString,
    prtChannelCurrentJobCntlLangIndex   Integer32,
    prtChannelDefaultPageDescLangIndex  Integer32,
    prtChannelState                     INTEGER,
    prtChannelIfIndex                   Integer32,
    prtChannelStatus                    SubUnitStatus
}

prtChannelIndex OBJECT-TYPE
    SYNTAX     Integer32
    MAX-ACCESS not-accessible
    STATUS     current
    DESCRIPTION
        "A unique value used by the printer to identify this data
        channel.  Although these values may change due to a major
        reconfiguration of the device (e.g. the addition of new data
        channels to the printer), values are expected to remain
        stable across successive printer power cycles."
    ::= { prtChannelEntry 1 }

prtChannelType OBJECT-TYPE
    -- This value is a type 2 enumeration
    SYNTAX     INTEGER {
                   other(1),
                   chSerialPort(3),
                   chParallelPort(4),
                   chIEEE1284Port(5),
                   chSCSIPort(6),
                   chAppleTalkPAP(7), -- AppleTalk Printer Achess Protocol
                   chLPDServer(8),
                   chNetwareRPrinter(9),  -- Netware
                   chNetwarePServer(10),  -- Netware
                   chPort9100(11),
                   chAppSocket(12),       -- a bi-directional, LPD-like
                                          -- protocol using 9101 for
                                          -- control and 9100 for data.
                                          -- Adobe Systems, Inc.
                   chFTP(13),             -- FTP "PUT" to printer
                   chTFTP(14),
                   chDLCLLCPort(15),
                   chIBM3270(16),
                   chIBM5250(17),
                   chFax(18),
                   chIEEE1394(19),
                   chTransport1(20),      -- port 35
                   chCPAP(21),            -- port 170
                   chDCERemoteProcCall(22), -- OSF
                   chONCRemoteProcCall(23), -- Sun Microsystems
                   chOLE(24),               -- Microsoft
                   chNamedPipe(25),
                   chPCPrint(26),           -- Banyan
                   chServerMessageBlock(27),
                        -- File/Print sharing protocol used by
                        -- various network operating systems
                        -- from IBM 3Com, Microsoft and others
                   chDPMF(28),  -- Distributed Print Mgt. Framework, IBM
                   chDLLAPI(29), -- Microsoft
                   chVxDAPI(30), -- Microsoft
                   chSystemObjectManager(31), -- IBM
                   chDECLAT(32),          -- Digital Equipment Corp.
                   chNPAP(33)
               }
    MAX-ACCESS read-only
    STATUS     current
    DESCRIPTION
        "The type of this print data channel.  This
        object provides the linkage to ChannelType-specific
        groups that may (conceptually) extend the prtChannelTable
        with additional details about that channel."
    ::= { prtChannelEntry 2 }

prtChannelProtocolVersion OBJECT-TYPE
    SYNTAX     DisplayString (SIZE(0..63))
    MAX-ACCESS read-only
    STATUS     current
    DESCRIPTION
        "The version of the protocol used on this
        channel.  The format used for version numbering depends
        on prtChannelType."
    ::= { prtChannelEntry 3 }

prtChannelCurrentJobCntlLangIndex OBJECT-TYPE
    SYNTAX     Integer32
    MAX-ACCESS read-write
    STATUS     current
    DESCRIPTION
        "The value of prtInterpreterIndex  corresponding to the
        Control Language Interpreter for this channel. This
        interpreter defines the syntax used for control
        functions, such as querying or changing environment
        variables and identifying job boundaries (e.g. PJL,
        PostScript, NPAP). Must be 1 or greater."
    ::= { prtChannelEntry 4 }

prtChannelDefaultPageDescLangIndex OBJECT-TYPE
    SYNTAX     Integer32
    MAX-ACCESS read-write
    STATUS     current
    DESCRIPTION
        "The value of prtInterpreterIndex  corresponding to the
        Page Description Language Interpreter for this channel.
        This interpreter defines the default Page Description
        Language interpreter to be used for the print data unless
        the Control Language is used to select a specific
        interpreter (e.g.,  PCL, PostScript Language,
        auto-sense). Must be 1 or greater."
    ::= { prtChannelEntry 5 }

prtChannelState OBJECT-TYPE
    -- This value is a type 1 enumeration
    SYNTAX     INTEGER {
                   other(1),
                   printDataAccepted(3),
                   noDataAccepted(4)
               }
    MAX-ACCESS read-write
    STATUS     current
    DESCRIPTION
        "The state of this print data channel.  The value determines
        whether control information and print data is allowed through
        this channel or not."
    ::= { prtChannelEntry 6 }

prtChannelIfIndex OBJECT-TYPE
    SYNTAX     Integer32
    MAX-ACCESS read-write
    STATUS     current
    DESCRIPTION
        "The value of ifIndex (in the ifTable; see the interface
        section of MIB-2/RFC 1213) which corresponds to this channel.
        When more than one row of the ifTable is relevant, this is
        the index of the row representing the topmost layer in the
        interface hierarchy.  A value of zero indicates that no
        interface is associated with this channel."
    ::= { prtChannelEntry 7 }

prtChannelStatus OBJECT-TYPE
    SYNTAX     SubUnitStatus
    MAX-ACCESS read-only
    STATUS     current
    DESCRIPTION
        "The current status of the channel."
    ::= { prtChannelEntry 8 }

-- The Interpreter Group
--
-- The interpreter sub-units are responsible for the conversion of a
-- description of intended print instances into images that are to be
-- marked on the media. A printer may have one or more interpreters. The
-- interpreter sub-units are represented by the Interpreter Group in the
-- Model. Each interpreter is generally implemented with software running
-- on the System Controller sub-unit. The Interpreter Table has one entry
-- per interpreter where the interpreters include both Page Description
-- Language (PDL) Interpreters and Control Language Interpreters.
--
-- Implementation of every object in this group is mandatory.


prtInterpreter OBJECT IDENTIFIER ::= { printmib 15 }

--       Interpreter Table
--
-- The prtInterpreterTable is a table representing the interpreters in
-- the printer.  An entry shall be placed in the interpreter table for
-- each interpreter on the printer.

prtInterpreterTable OBJECT-TYPE
    SYNTAX     SEQUENCE OF PrtInterpreterEntry
    MAX-ACCESS not-accessible
    STATUS     current
    DESCRIPTION
        ""
    ::= { prtInterpreter 1 }

prtInterpreterEntry OBJECT-TYPE
    SYNTAX     PrtInterpreterEntry
    MAX-ACCESS not-accessible
    STATUS     current
    DESCRIPTION
        "Entries may exist in the table for each device
        index who's device type is `printer'."
    INDEX  { hrDeviceIndex, prtInterpreterIndex }
    ::= { prtInterpreterTable 1 }

PrtInterpreterEntry ::= SEQUENCE {
    prtInterpreterIndex                 Integer32,
    prtInterpreterLangFamily            INTEGER,
    prtInterpreterLangLevel             DisplayString,
    prtInterpreterLangVersion           DisplayString,
    prtInterpreterDescription           DisplayString,
    prtInterpreterVersion               DisplayString,
    prtInterpreterDefaultOrientation    INTEGER,
    prtInterpreterFeedAddressability    Integer32,
    prtInterpreterXFeedAddressability   Integer32,
    prtInterpreterDefaultCharSetIn      CodedCharSet,
    prtInterpreterDefaultCharSetOut     CodedCharSet,
    prtInterpreterTwoWay                INTEGER
}

prtInterpreterIndex OBJECT-TYPE
    SYNTAX     Integer32
    MAX-ACCESS not-accessible
    STATUS     current
    DESCRIPTION
        "A unique value for each PDL or control language for which
        there exists an interpreter or emulator in the printer.  The
        value is used to identify this interpreter. Although these
        values may change due to a major reconfiguration of the device
        (e.g. the addition of new interpreters to the printer), values
        are expected to remain stable across successive printer power
        cycles."
    ::= { prtInterpreterEntry 1 }

prtInterpreterLangFamily OBJECT-TYPE
    -- This value is a type 2 enumeration
    SYNTAX     INTEGER {
          other(1),
          langPCL(3),        -- PCL.  Starting with PCL version 5,
                             -- HP-GL/2 is included as part of the
                             -- PCL language.
                             -- PCL and HP-GL/2 are registered
                             -- trademarks of Hewlett-Packard Company.
          langHPGL(4),       -- Hewlett-Packard Graphics Language.
                             -- HP-GL is a registered trademark of
                             -- Hewlett-Packard Company.
          langPJL(5),        -- Peripheral Job Language. Appears in the
                             -- data stream between data intended for a
                             -- page description language.
                             -- Hewlett-Packard Co.
          langPS(6),         -- PostScript Language (tm)
                             -- Postscript - a trademark of Adobe
                             -- Systems Incorporated which may be
                             -- registered in certain jurisdictions
          langPSPrinter(42), -- The PostScript Language used for
                             -- control (with any PDLs)
                             -- Adobe Systems Incorporated
          langIPDS(7),       -- Intelligent Printer Data Stream
                             -- Bi-directional print data stream for
                             -- documents consisting of data objects
                             -- (text, image, graphics, bar codes),
                             -- resources (fonts, overlays) and page,
                             -- form and finishing instructions.
                             -- Facilitates system level device
                             -- control, document tracking and error
                             -- recovery throughout the print process.
                             -- Pennant Systems, IBM
          langPPDS(8),       -- IBM Personal Printer Data Stream.
                             -- Originally called IBM ASCII, the name
                             -- was changed to PPDS when the Laser
                             -- Printer was introduced in 1989.
                             -- Lexmark International, Inc.
          langEscapeP(9),
          langEpson(10),
          langDDIF(11),      -- Digital Document Interchange Format
                             -- Digital Equipment Corp., Maynard MA
          langInterpress(12),
          langISO6429(13),   -- ISO 6429.  Control functions for Coded
                             -- Character Sets (has ASCII control

                             -- characters, plus additional controls for
                             -- character imaging devices.)
                             -- ISO Standard, Geneva, Switzerland
          langLineData(14),  -- line-data:  Lines of data as separate
                             -- ASCII or EBCDIC records and containing
                             -- no control functions (no CR, LF, HT, FF,
                             -- etc.). For use with traditional line
                             -- printers.  May use CR and/or LF to
                             -- delimit lines, instead of records.  See
                             -- ISO 10175 Document Printing Application
                             -- (DPA)
                             -- ISO standard, Geneva, Switzerland
          langMODCA(15),     -- Mixed Object Document Content Architecture
                             -- Definitions that allow the composition,
                             -- interchange, and presentation of final
                             -- form documents as a collection of data
                             -- objects (text, image, graphics, bar
                             -- codes), resources (fonts, overlays) and
                             -- page, form and finishing instructions.
                             -- Pennant Systems, IBM
          langREGIS(16),     -- Remote Graphics Instruction Set,
                             -- Digital Equipment Corp., Maynard MA
          langSCS(17),       -- SNA Character String
                             -- Bi-directional print data stream for SNA
                             -- LU-1 mode of communications
                             -- IBM
          langSPDL(18),      -- ISO 10180 Standard Page Description
                             -- Language
                             -- ISO Standard
          langTEK4014(19),
          langPDS(20),
          langIGP(21),
          langCodeV(22),     -- Magnum Code-V, Image and printer control
                             -- language used to control impact/dot-
                             -- matrix printers.
                             -- QMS, Inc., Mobile AL
          langDSCDSE(23),    -- DSC-DSE:  Data Stream Compatible and
                             -- Emulation Bi-directional print data
                             -- stream for non-SNA (DSC) and SNA LU-3
                             -- 3270 controller (DSE) communications
                             -- IBM
          langWPS(24),       -- Windows Printing System, Resource based
                             -- command/data stream used by Microsoft At
                             -- Work Peripherals.
                             -- Developed by the Microsoft Corporation.
          langLN03(25),      -- Early DEC-PPL3, Digital Equipment Corp.
          langCCITT(26),
          langQUIC(27),      -- QUIC (Quality Information Code), Page
                             -- Description Language for laser printers.
                             -- Included graphics, printer control
                             -- capability and emulation of other well-
                             -- known printer .
                             -- QMS, Inc.
          langCPAP(28),      -- Common Printer Access Protocol
                             -- Digital Equipment Corp.
          langDecPPL(29),    -- Digital ANSI-Compliant Printing Protocol
                             -- (DEC-PPL)
                             -- Digital Equipment Corp.
          langSimpleText(30),-- simple-text:  character coded data,
                             -- including NUL, CR , LF, HT, and FF
                             -- control characters.  See ISO 10175
                             -- Document Printing Application (DPA)
                             -- ISO standard, Geneva, Switzerland
          langNPAP(31),      -- Network Printer Alliance Protocol
                             -- IEEE 1284.1
          langDOC(32),       -- Document Option Commands, Appears in the
                             -- data stream between data intended for a
                             -- page description .
                             -- QMS, Inc.
          langimPress(33),   -- imPRESS, Page description language
                             -- originally developed for the ImageServer
                             -- line of systems. A binary language
                             -- providing representations for text,
                             -- simple graphics (rules, lines, conic
                             -- sections), and some large forms (simple
                             -- bit-map and CCITT group 3/4 encoded).The
                             -- language was intended to be sent over an
                             -- 8-bit channel and supported early
                             -- document preparation languages (e.g. TeX
                             -- and TROFF).
                             -- QMS, Inc.
          langPinwriter(34), -- 24 wire dot matrix printer  for
                             -- USA, Europe, and Asia except Japan.
                             -- More widely used in Germany, and some
                             -- Asian countries than in US.
                             -- NEC
          langNPDL(35),      -- Page printer  for Japanese
                             -- market.
                             -- NEC
          langNEC201PL(36),  -- Serial printer language used in the
                             -- Japanese market.
                             -- NEC
          langAutomatic(37), -- Automatic PDL sensing.  Automatic
                             -- sensing of the interpreter language
                             -- family by the printer examining the
                             -- document content.  Which actual
                             -- interpreter language families are sensed
                             -- depends on the printer implementation.
          langPages(38),     -- Page printer Advanced Graphic Escape Set
                             -- IBM Japan
          langLIPS(39),      -- LBP Image Processing System
          langTIFF(40),      -- Tagged Image File Format (Aldus)
          langDiagnostic(41),-- A hex dump of the input to the
                             -- interpreter
          langCaPSL(43),     -- Canon Print Systems Language
          langEXCL(44),      -- Extended Command Language
                             -- Talaris Systems Inc.
          langLCDS(45),      -- Line Conditioned Data Stream
                             -- Xerox Corporation
          langXES(46)        -- Xerox Escape Sequences
                             -- Xerox Corporation
               }
    MAX-ACCESS read-only
    STATUS     current
    DESCRIPTION
        "The family name of a Page Description Language (PDL) or
        control language which this interpreter in the printer can
        interpret or emulate.  This type 2 list of enumerations
        requires review before additional entries are made."
    ::= { prtInterpreterEntry 2 }

prtInterpreterLangLevel OBJECT-TYPE
    SYNTAX     DisplayString (SIZE(0..31))
    MAX-ACCESS read-only
    STATUS     current
    DESCRIPTION
        "The level of the language which this interpreter is
        interpreting or emulating.  This might contain a value like
        '5e' for an interpreter which is emulating level 5e of the PCL
        language.  It might contain '2' for an interpreter which is
        emulating level 2 of the PostScript language.  Similarly it
        might contain '2' for an interpreter which is emulating level
        2 of the HPGL language."
    ::= { prtInterpreterEntry 3 }

prtInterpreterLangVersion OBJECT-TYPE
    SYNTAX     DisplayString (SIZE(0..31))
    MAX-ACCESS read-only
    STATUS     current
    DESCRIPTION
        "The date code or version of the language which this interpreter
        is interpreting or emulating."
    ::= { prtInterpreterEntry 4 }

prtInterpreterDescription OBJECT-TYPE
    SYNTAX     DisplayString (SIZE(0..255))
    MAX-ACCESS read-only
    STATUS     current
    DESCRIPTION
        "A string to identify this interpreter in the localization
        specified by prtGeneralCurrentLocalization as opposed to the
        language which is being interpreted.  It is anticipated that
        this string will allow manufacturers to unambiguously identify
        their interpreters."
    ::= { prtInterpreterEntry 5 }

prtInterpreterVersion OBJECT-TYPE
    SYNTAX     DisplayString (SIZE(0..31))
    MAX-ACCESS read-only
    STATUS     current
    DESCRIPTION
        "The date code, version number, or other product specific
        information tied to this interpreter.  This value is
        associated with the interpreter, rather than with the version
        of the language which is being interpreted or emulated."
    ::= { prtInterpreterEntry 6 }

prtInterpreterDefaultOrientation OBJECT-TYPE
    -- This value is a type 1 enumeration
    SYNTAX     INTEGER {
                   other(1),
                   portrait(3),
                   landscape(4)
               }
    MAX-ACCESS read-write
    STATUS     current
    DESCRIPTION
        "The current orientation default for this interpreter.  This
        value may be overridden for a particular job (e.g., by a
        command in the input data stream)."
    ::= { prtInterpreterEntry 7 }

prtInterpreterFeedAddressability OBJECT-TYPE
    SYNTAX     Integer32
    MAX-ACCESS read-only
    STATUS     current
    DESCRIPTION
        "The maximum interpreter addressability in the feed
        direction in 10000 prtMarkerAddressabilityUnit s (see
        prtMarkerAddressabilityFeedDir ) for this interpreter.
        The value (-1) means other and specifically indicates
        that the sub-unit places no restrictions on this parameter."
    ::= { prtInterpreterEntry 8 }

prtInterpreterXFeedAddressability OBJECT-TYPE
    SYNTAX     Integer32
    MAX-ACCESS read-only
    STATUS     current
    DESCRIPTION
        "The maximum interpreter addressability in the cross feed
        direction in 10000 prtMarkerAddressabilityUnit s (see
        prtMarkerAddressabilityXFeedDir) for this interpreter.
        The value (-1) means other and specifically indicates
        that the sub-unit places no restrictions on this
        parameter."
    ::= { prtInterpreterEntry 9 }

prtInterpreterDefaultCharSetIn OBJECT-TYPE
    SYNTAX     CodedCharSet
    MAX-ACCESS read-write
    STATUS     current
    DESCRIPTION
        "The default coded character set for input octets
        encountered outside a context in which the Page
        Description Language established the interpretation
        of the octets.

        This value shall be (2) if there is no default."
    ::= { prtInterpreterEntry 10 }

prtInterpreterDefaultCharSetOut OBJECT-TYPE
    SYNTAX     CodedCharSet
    MAX-ACCESS read-write
    STATUS     current
    DESCRIPTION
        "The default character set for data coming from this interpreter
        through the printer's output channel.


        This value shall be (2) if there is no default."
    ::= { prtInterpreterEntry 11 }

prtInterpreterTwoWay OBJECT-TYPE
    -- This value is a type 1 enumeration
    SYNTAX     INTEGER {
                   yes(3),
                   no(4)
               }
    MAX-ACCESS read-only
    STATUS     current
    DESCRIPTION
        "Indicates whether or not this interpreter returns information
        back to the host."
    ::= { prtInterpreterEntry 12 }

-- The Console Group
--
-- Many printers have a console on the printer, the operator console,
-- that is used to display and modify the state of the printer. The
-- console can be as simple as a few indicators and switches or as
-- complicated as full screen displays and keyboards. There can be
-- at most one such console.
--
-- Implementation of every object in this group is mandatory.

prtConsoleLocalization OBJECT-TYPE
    SYNTAX     Integer32 (1..65535)
    MAX-ACCESS read-write
    STATUS     current
    DESCRIPTION
        "The value of the prtLocalizationIndex corresponding to
        the language, country, and character set to be used for the
        console.  This localization applies both to the actual display
        on the console as well as the encoding of these console
        objects in management operations."
    ::= { prtGeneralEntry 10 }

prtConsoleNumberOfDisplayLines OBJECT-TYPE
    SYNTAX     Integer32 (0..65535)
    MAX-ACCESS read-only
    STATUS     current
    DESCRIPTION
        "The number of lines on the printer's physical
        display.  This value is 0 if there are no lines on the
        physical display or if there is no physical display"
    ::= { prtGeneralEntry 11 }

prtConsoleNumberOfDisplayChars OBJECT-TYPE
    SYNTAX     Integer32 (0..65535)
    MAX-ACCESS read-only
    STATUS     current
    DESCRIPTION
        "The number of characters per line displayed on the physical
        display.  This value is 0 if there are no lines on the
        physical display or if there is no physical display"
    ::= { prtGeneralEntry 12 }

prtConsoleDisable OBJECT-TYPE
    SYNTAX     INTEGER {
                   enabled(3),
                   disabled(4)
               }
    MAX-ACCESS read-write
    STATUS     current
    DESCRIPTION
        "This object enables or disables manual input from the
        operators console."
    ::= { prtGeneralEntry 13 }

-- The Display Buffer Table

prtConsoleDisplayBuffer OBJECT IDENTIFIER ::= { printmib 16 }

prtConsoleDisplayBufferTable OBJECT-TYPE
    SYNTAX     SEQUENCE OF PrtConsoleDisplayBufferEntry
    MAX-ACCESS not-accessible
    STATUS     current
    DESCRIPTION
        ""
    ::= { prtConsoleDisplayBuffer 5 }

prtConsoleDisplayBufferEntry OBJECT-TYPE
    SYNTAX     PrtConsoleDisplayBufferEntry
    MAX-ACCESS not-accessible
    STATUS     current
    DESCRIPTION
        "This table contains one entry for each physical line on
        the display.  Lines cannot be added or deleted.

        Entries may exist in the table for each device
        index who's device type is `printer'."
    INDEX  { hrDeviceIndex, prtConsoleDisplayBufferIndex }
    ::= { prtConsoleDisplayBufferTable 1 }

PrtConsoleDisplayBufferEntry ::= SEQUENCE {
    prtConsoleDisplayBufferIndex    Integer32,
    prtConsoleDisplayBufferText     DisplayString
}

prtConsoleDisplayBufferIndex OBJECT-TYPE
    SYNTAX     Integer32 (1..65535)
    MAX-ACCESS not-accessible
    STATUS     current
    DESCRIPTION
        "A unique value for each console line in the printer.  The
        value is used to identify this console line. Although
        these values may change due to a major reconfiguration of
        the device (e.g. the addition of new console lines to the
        printer), values are expected to remain stable across
        successive printer power cycles."
    ::= { prtConsoleDisplayBufferEntry 1 }

prtConsoleDisplayBufferText OBJECT-TYPE
    SYNTAX     DisplayString (SIZE(0..255))
    MAX-ACCESS read-write
    STATUS     current
    DESCRIPTION
        "The content of a line in the logical display buffer of
        the operator's console of the printer.  When a write
        operation occurs, normally a critical message, to one of
        the LineText strings, the agent should make that line
        displayable if a physical display is present.  Writing
        a zero length string clears the line.  It is an
        implementation-specific matter as to whether the agent allows
        a line to be overwritten before it has been cleared.
        Printer generated strings shall be in the localization
        specified by ConsoleLocalization.  Management Application
        generated strings should be localized by the Management
        Application."
    ::= { prtConsoleDisplayBufferEntry 2 }

-- The Console Light Table

prtConsoleLights OBJECT IDENTIFIER ::= { printmib 17 }

prtConsoleLightTable OBJECT-TYPE
    SYNTAX     SEQUENCE OF PrtConsoleLightEntry
    MAX-ACCESS not-accessible
    STATUS     current
    DESCRIPTION
        ""
    ::= { prtConsoleLights 6 }

prtConsoleLightEntry OBJECT-TYPE
    SYNTAX     PrtConsoleLightEntry
    MAX-ACCESS not-accessible
    STATUS     current
    DESCRIPTION
        "Entries may exist in the table for each device
        index who's device type is `printer'."
    INDEX  { hrDeviceIndex, prtConsoleLightIndex }
    ::= { prtConsoleLightTable 1 }

PrtConsoleLightEntry ::= SEQUENCE {
    prtConsoleLightIndex            Integer32,
    prtConsoleOnTime                Integer32,
    prtConsoleOffTime               Integer32,
    prtConsoleColor                 INTEGER,
    prtConsoleDescription           DisplayString
}

prtConsoleLightIndex OBJECT-TYPE
    SYNTAX     Integer32 (0..65535)
    MAX-ACCESS not-accessible
    STATUS     current
    DESCRIPTION
        "A unique value used by the printer to identify this light.
        Although these values may change due to a major
        reconfiguration of the device (e.g. the addition of new lights
        to the printer), values are expected to remain stable across
        successive printer power cycles."
    ::= { prtConsoleLightEntry 1 }

prtConsoleOnTime OBJECT-TYPE
    SYNTAX     Integer32
    MAX-ACCESS read-write
    STATUS     current
    DESCRIPTION
        "The on time in milliseconds of blinking of this light; 0
        indicates off always.  If both prtConsoleOnTime
        and prtConsoleOffTime are 0, then the light is
        always off."
    ::= { prtConsoleLightEntry 2 }

prtConsoleOffTime OBJECT-TYPE
    SYNTAX     Integer32
    MAX-ACCESS read-write
    STATUS     current
    DESCRIPTION
        "The off time in milliseconds of blinking of this light; 0
        indicates on always.  If both prtConsoleOnTime
        and prtConsoleOffTime are 0, then the light is
        always off."
    ::= { prtConsoleLightEntry 3 }

prtConsoleColor OBJECT-TYPE
    -- This value is a type 2 enumeration
    SYNTAX     INTEGER {
                   other(1),
                   unknown(2),
                   white(3),
                   red(4),
                   green(5),
                   blue(6),
                   cyan(7),
                   magenta(8),
                   yellow(9)
               }
    MAX-ACCESS read-only
    STATUS     current
    DESCRIPTION
        "The color of this light."
    ::= { prtConsoleLightEntry 4 }

prtConsoleDescription OBJECT-TYPE
    SYNTAX     DisplayString (SIZE(0..255))
    MAX-ACCESS read-only
    STATUS     current
    DESCRIPTION
        "The vendor description or label of this light in the
        localization specified by prtConsoleLocalization."
    ::= { prtConsoleLightEntry 5 }


-- The Alerts Group
--
-- The prtAlertTable lists all the critical and non-critical alerts
-- currently active in the printer.  A critical alert is one that stops
-- the printer from printing immediately and printing can not continue
-- until the critical alert condition is eliminated.  Non-critical
-- alerts are those items that do not stop printing but may at some
-- future time.
-- The table contains information on the severity, component, detail
-- location within the component, alert code and description of each
-- critical alert that is currently active within the printer.  See
-- 2.2.13 for a more complete description of the alerts table and
-- its management.
--
-- Implementation of every object in this group is mandatory.

prtAlert OBJECT IDENTIFIER ::= { printmib 18 }

prtAlertTable OBJECT-TYPE
    SYNTAX     SEQUENCE OF PrtAlertEntry
    MAX-ACCESS not-accessible
    STATUS     current
    DESCRIPTION
        ""
    ::= { prtAlert 1 }

prtAlertEntry OBJECT-TYPE
    SYNTAX     PrtAlertEntry
    MAX-ACCESS not-accessible
    STATUS     current
    DESCRIPTION
        "Entries may exist in the table for each device
        index who's device type is `printer'."
    INDEX  { hrDeviceIndex, prtAlertIndex }
    ::= { prtAlertTable 1 }

PrtAlertEntry ::= SEQUENCE {
    prtAlertIndex               Integer32,
    prtAlertSeverityLevel       INTEGER,
    prtAlertTrainingLevel       INTEGER,
    prtAlertGroup               INTEGER,
    prtAlertGroupIndex          Integer32,
    prtAlertLocation            Integer32,
    prtAlertCode                INTEGER,
    prtAlertDescription         DisplayString,
    prtAlertTime                TimeTicks
}

prtAlertIndex OBJECT-TYPE
    SYNTAX     Integer32
    MAX-ACCESS read-only
    STATUS     current
    DESCRIPTION
        "The index value used to determine which alerts
        have been added or removed from the alert table.
        This is an incrementing integer starting from zero
        every time the printer is reset.  When the printer
        adds an alert to the table, that alert is assigned
        the next higher integer value from the last item
        entered into the table.  If the index value reaches
        its maximum value, the next item entered will cause
        the index value to roll over and start at zero
        again.  The first event placed in the alert table
        after a reset of the printer shall
        have an index value of 1.  NOTE: The management
        application will read the alert table when a trap
        or event notification occurs or at a periodic rate
        and then parse the table to determine if any new
        entries were added by comparing the last known index
        value with the current highest index value. The
        management application will then update its copy of
        the alert table.  When the printer discovers that
        an alert is no longer active, the printer shall
        remove the row for that alert from the table and
        shall reduce the number of rows in the table.  The
        printer may add or delete any number of rows from
        the table at any time.  The management station
        can detect when binary alerts have been deleted by
        requesting an attribute of each alert, and noting
        alerts as deleted when that retrieval is not possible."
    ::= { prtAlertEntry 1 }

prtAlertSeverityLevel OBJECT-TYPE
    -- This value is a type 1 enumeration
    SYNTAX     INTEGER {
                   other(1),
                   critical(3),
                   warning(4)
               }
    MAX-ACCESS read-only
    STATUS     current
    DESCRIPTION
        "The level of severity of this alert table entry.  The printer
        determines the severity level assigned to each entry into the
        table."
    ::= { prtAlertEntry 2 }

prtAlertTrainingLevel OBJECT-TYPE
    -- This value is a type 2 enumeration
    SYNTAX     INTEGER {
                   other(1),
                   unknown(2),
                   untrained(3),
                   trained(4),
                   fieldService(5),
                   management(6)
               }
    MAX-ACCESS read-only
    STATUS     current
    DESCRIPTION
        "The level of training required to handle this alert. The
        training level is an enumeration that is determined and
        assigned by the printer manufacturer based on the information
        or the training required to handle this alert.  The printer
        will break alerts into these different training levels.  It is
        the responsibility of the management application in the system
        to determine how a particular alert is handled and how and to
        whom that alert is routed.  The following are the four
        training levels of alerts:

               Field Service - Alerts that typically require advanced
                      training and technical knowledge of the printer
                      and its sub-units. An example of a technical
                      person would be a manufacture's Field Service
                      representative, or other person formally
                      trained by the manufacturer or similar
                      representative.
               Trained - Alerts that require an intermediate or moderate
                      level of knowledge of the printer and its
                      sub-units. A typical examples of alerts that
                      a trained operator can handle is replacing
                      toner cartridges.
               Untrained - Alerts that can be fixed without prior
                      training either because the action to correct
                      the alert is obvious or the printer can help the
                      untrained person fix the problem. A typical
                      example of such an alert is reloading paper
                      trays and emptying output bins on a low end
                      printer.
               Management - Alerts that have to do with overall
                      operation of and configuration of the printer.
                      Examples of management events are configuration
                      change of sub-units."
    ::= { prtAlertEntry 3 }

prtAlertGroup OBJECT-TYPE
    -- This value is a type 1 enumeration
    SYNTAX     INTEGER {
                   other(1),
                   hostResourcesMIBStorageTable(3),
                   hostResourcesMIBDeviceTable(4),
                   generalPrinter(5),
                   cover(6),
                   localization(7),
                   input(8),
                   output(9),
                   marker(10),
                   markerSupplies(11),
                   markerColorant(12),
                   mediaPath(13),
                   channel(14),
                   interpreter(15),
                   consoleDisplayBuffer(16),
                   consoleLights(17)
               }
    MAX-ACCESS read-only
    STATUS     current
    DESCRIPTION
        "The type of sub-unit within the printer model that this alert
        is related.  Input, output, and markers are examples of
        printer model groups, i.e., examples of types of sub-units.

        Whereever possible, these enumerations match the
        sub-identifier that identifies the relevant table in the
        printmib."
    ::= { prtAlertEntry 4 }

prtAlertGroupIndex OBJECT-TYPE
    SYNTAX     Integer32
    MAX-ACCESS read-only
    STATUS     current
    DESCRIPTION
        "An index of the row within the principle table in the
        group identified by prtAlertGroup that represents the
        sub-unit of the printer that caused this alert.  The
        combination of the Group and the GroupIndex defines
        exactly which printer sub-unit caused the alert.; for
        example, Input #3, Output #2, and Marker #1.

        Every object in this MIB is indexed with hrDeviceIndex and
        optionally, another index variable.  If this other index
        variable is present in the table that generated the alert, it
        will be used as the value for this object.  Otherwise, this
        value shall be -1."
    ::= { prtAlertEntry 5 }

prtAlertLocation OBJECT-TYPE
    SYNTAX     Integer32
    MAX-ACCESS read-only
    STATUS     current
    DESCRIPTION
        "The sub-unit location that is defined by the printer
        manufacturer to further refine the location of this alert
        within the designated sub-unit.  The location is used in
        conjunction with the Group and GroupIndex values; for
        example, there is an alert in Input #2 at location number 7."
    ::= { prtAlertEntry 6 }

prtAlertCode OBJECT-TYPE
    -- This value is a type 2 enumeration
    SYNTAX     INTEGER {
                   other(1),
                   unknown(2),
                        -- codes common to serveral groups
                   coverOpen(3),
                   coverClosed(4),
                   interlockOpen(5),
                   interlockClosed(6),
                   configurationChange(7),
                   jam(8),
                        -- general Printer group
                   doorOpen(501),
                   doorClosed(502),
                   powerUp(503),
                   powerDown(504),
                        -- Input Group
                   inputMediaTrayMissing(801),
                   inputMediaSizeChange(802),
                   inputMediaWeightChange(803),
                   inputMediaTypeChange(804),
                   inputMediaColorChange(805),
                   inputMediaFormPartsChange(806),
                   inputMediaSupplyLow(807),
                   inputMediaSupplyEmpty(808),
                        -- Output Group
                   outputMediaTrayMissing(901),
                   outputMediaTrayAlmostFull(902),
                   outputMediaTrayFull(903),
                        -- Marker group
                   markerFuserUnderTemperature(1001),
                   markerFuserOverTemperature(1002),
                        -- Marker Supplies group
                   markerTonerEmpty(1101),
                   markerInkEmpty(1102),
                   markerPrintRibbonEmpty(1103),
                   markerTonerAlmostEmpty(1104),
                   markerInkAlmostEmpty(1105),
                   markerPrintRibbonAlmostEmpty(1106),
                   markerWasteTonerReceptacleAlmostFull(1107),
                   markerWasteInkReceptacleAlmostFull(1108),
                   markerWasteTonerReceptacleFull(1109),
                   markerWasteInkReceptacleFull(1110),
                   markerOpcLifeAlmostOver(1111),
                   markerOpcLifeOver(1112),
                   markerDeveloperAlmostEmpty(1113),
                   markerDeveloperEmpty(1114),
                        -- Media Path Device Group
                   mediaPathMediaTrayMissing(1301),
                   mediaPathMediaTrayAlmostFull(1302),
                   mediaPathMediaTrayFull(1303),
                        -- interpreter Group
                   interpreterMemoryIncrease(1501),
                   interpreterMemoryDecrease(1502),
                   interpreterCartridgeAdded(1503),
                   interpreterCartridgeDeleted(1504),
                   interpreterResourceAdded(1505),
                   interpreterResourceDeleted(1506),
                   interpreterResourceUnavailable(1507)
               }
    MAX-ACCESS read-only
    STATUS     current
    DESCRIPTION
        "The code that describes the type of alert for this entry in
        the table.  There are different codes for each
        sub-unit type: for example, Media Supply Low and Media
        Supply Empty are Aler codes for the Input sub-unit."
    ::= { prtAlertEntry 7}

prtAlertDescription OBJECT-TYPE
    SYNTAX     DisplayString (SIZE(0..255))
    MAX-ACCESS read-only
    STATUS     current
    DESCRIPTION
        "A description of this alert entry in the localization
        specified by prtGeneralCurrentLocalization.  The description is
        provided by the printer to further elaborate on the enumerated
        alert or provide information in the case where the code is
        classified ask `other' or `unknown'.  The printer is required
        to return a description string but the string may be a null
        string."
    ::= { prtAlertEntry 8 }

printerV1Alert OBJECT-IDENTITY
    STATUS  current
    DESCRIPTION
        "The value of the enterprise-specific oid in a SNMPv1 trap sent
        signalling a critical event in the prtAlertTable."
    ::= { prtAlert 2 }

printerV2AlertPrefix OBJECT IDENTIFIER ::= { printerV1Alert 0 }

printerV2Alert NOTIFICATION-TYPE
    OBJECTS { prtAlertIndex, prtAlertSeverityLevel, prtAlertGroup,
              prtAlertGroupIndex, prtAlertLocation, prtAlertCode }
    STATUS  current
    DESCRIPTION
        "This trap is sent whenever a critical event is added to the
        prtAlertTable."
    ::= { printerV2AlertPrefix 1 }

-- Note that the SNMPv2 to SNMPv1 translation rules dictate that the
-- preceding structure will result in SNMPv1 traps of the following
-- form:
--
-- printerAlert TRAP-TYPE
--     ENTERPRISE printerV1Alert
--     VARIABLES { prtAlertIndex, prtAlertSeverityLevel, prtAlertGroup,
--                 prtAlertGroupIndex, prtAlertLocation, prtAlertCode }
--     DESCRIPTION
--        "This trap is sent whenever a critical event is added to the
--        prtAlertTable."
--     ::= 1



-- The Alert Time Group
--
-- This group is optional.  However, to claim conformance to this
-- group, it is necessary to implement every object in the group.

prtAlertTime OBJECT-TYPE
    SYNTAX     TimeTicks
    MAX-ACCESS read-only
    STATUS     current
    DESCRIPTION
        "The value of sysUpTime at the time that this alert was
        generated."
    ::= { prtAlertEntry 9 }


-- Conformance Information

prtMIBConformance OBJECT IDENTIFIER ::= { printmib 2 }

-- compliance statements
prtMIBCompliance MODULE-COMPLIANCE
    STATUS  current
    DESCRIPTION
        "The compliance statement for agents that implement the
        printer MIB."
    MODULE -- this module
    MANDATORY-GROUPS { prtGeneralGroup, prtInputGroup, prtOutputGroup,
                       prtMarkerGroup, prtMediaPathGroup,
                       prtChannelGroup, prtInterpreterGroup,
                       prtConsoleGroup, prtAlertTableGroup }

        OBJECT      prtGeneralReset
        SYNTAX      INTEGER {
                        notResetting(3),
                        resetToNVRAM(5)
                    }
        DESCRIPTION
            "It is conformant to implement just these two states in
            this object.  Any additional states are optional."

        OBJECT      prtConsoleOnTime
        MIN-ACCESS  read-only
        DESCRIPTION
            "It is conformant to implement this object as read-only."

        OBJECT      prtConsoleOffTime
        MIN-ACCESS  read-only
        DESCRIPTION
            "It is conformant to implement this object as read-only."

    -- the prtResponsiblePartyGroup, prtExtendedInputGroup,
    -- prtInputMediaGroup, prtExtendedOutputGroup,
    -- prtOutputDimensionsGroup, prtOutputFeaturesGroup,
    -- prtMarkerSuppliesGroup, prtMarkerColorantGroup,
    -- and the prtAlertTimeGroup are completely optional.
    ::= { prtMIBConformance 1 }

prtMIBGroups      OBJECT IDENTIFIER ::= { prtMIBConformance 2 }

prtGeneralGroup OBJECT-GROUP
    OBJECTS { prtGeneralConfigChanges, prtGeneralCurrentLocalization,
              prtGeneralReset, prtCoverDescription, prtCoverStatus,
              prtLocalizationLanguage, prtLocalizationCountry,
              prtLocalizationCharacterSet, prtStorageRefIndex,
              prtDeviceRefIndex }
    STATUS  current
    DESCRIPTION
        "The general printer group."
    ::= { prtMIBGroups 1 }

prtResponsiblePartyGroup OBJECT-GROUP
    OBJECTS { prtGeneralCurrentOperator, prtGeneralServicePerson }
    STATUS  current
    DESCRIPTION
        "The responsible party group contains contact information for
        humans responsible for the printer."
    ::= { prtMIBGroups 2 }

prtInputGroup OBJECT-GROUP
    OBJECTS { prtInputDefaultIndex, prtInputType, prtInputDimUnit,
              prtInputMediaDimFeedDirDeclared,
              prtInputMediaDimXFeedDirDeclared,
              prtInputMediaDimFeedDirChosen,
              prtInputMediaDimXFeedDirChosen, prtInputCapacityUnit,
              prtInputMaxCapacity, prtInputCurrentLevel,
              prtInputStatus, prtInputMediaName }
    STATUS  current
    DESCRIPTION
        "The input group."
    ::= { prtMIBGroups 3 }

prtExtendedInputGroup OBJECT-GROUP
    OBJECTS { prtInputName, prtInputVendorName, prtInputModel,
              prtInputVersion, prtInputSerialNumber,
              prtInputDescription, prtInputSecurity }
    STATUS  current
    DESCRIPTION
        "The extended input group."
    ::= { prtMIBGroups 4 }

prtInputMediaGroup OBJECT-GROUP
    OBJECTS { prtInputMediaWeight, prtInputMediaType,
              prtInputMediaColor, prtInputMediaFormParts }
    STATUS  current
    DESCRIPTION
        "The input media group."
    ::= { prtMIBGroups 5 }

prtOutputGroup OBJECT-GROUP
    OBJECTS { prtOutputDefaultIndex, prtOutputType,
              prtOutputCapacityUnit, prtOutputMaxCapacity,
              prtOutputRemainingCapacity,  prtOutputStatus }
    STATUS  current
    DESCRIPTION
        "The output group."
    ::= { prtMIBGroups 6 }

prtExtendedOutputGroup OBJECT-GROUP
    OBJECTS { prtOutputName, prtOutputVendorName, prtOutputModel,
              prtOutputVersion, prtOutputSerialNumber,
              prtOutputDescription, prtOutputSecurity }
    STATUS  current
    DESCRIPTION
        "The extended output group."
    ::= { prtMIBGroups 7 }

prtOutputDimensionsGroup OBJECT-GROUP
    OBJECTS { prtOutputDimUnit, prtOutputMaxDimFeedDir,
              prtOutputMaxDimXFeedDir, prtOutputMinDimFeedDir,
              prtOutputMinDimXFeedDir }
    STATUS  current
    DESCRIPTION
        "The output dimensions group"
    ::= { prtMIBGroups 8 }

prtOutputFeaturesGroup OBJECT-GROUP
    OBJECTS { prtOutputStackingOrder,
              prtOutputPageDeliveryOrientation, prtOutputBursting,
              prtOutputDecollating, prtOutputPageCollated,
              prtOutputOffsetStacking }
    STATUS  current
    DESCRIPTION
        "The output features group."
    ::= { prtMIBGroups 9 }

prtMarkerGroup OBJECT-GROUP
    OBJECTS { prtMarkerDefaultIndex, prtMarkerMarkTech,
              prtMarkerCounterUnit, prtMarkerLifeCount,
              prtMarkerPowerOnCount, prtMarkerProcessColorants,
              prtMarkerSpotColorants, prtMarkerAddressabilityUnit,
              prtMarkerAddressabilityFeedDir,
              prtMarkerAddressabilityXFeedDir, prtMarkerNorthMargin,
              prtMarkerSouthMargin, prtMarkerWestMargin,
              prtMarkerEastMargin, prtMarkerStatus }
    STATUS  current
    DESCRIPTION
        "The marker group."
    ::= { prtMIBGroups 10 }

prtMarkerSuppliesGroup OBJECT-GROUP
    OBJECTS { prtMarkerSuppliesMarkerIndex,
              prtMarkerSuppliesColorantIndex, prtMarkerSuppliesClass,
              prtMarkerSuppliesType, prtMarkerSuppliesDescription,
              prtMarkerSuppliesSupplyUnit,
              prtMarkerSuppliesMaxCapacity, prtMarkerSuppliesLevel }
    STATUS  current
    DESCRIPTION
        "The marker supplies group."
    ::= { prtMIBGroups 11 }

prtMarkerColorantGroup OBJECT-GROUP
    OBJECTS { prtMarkerColorantMarkerIndex, prtMarkerColorantRole,
              prtMarkerColorantValue, prtMarkerColorantTonality }
    STATUS  current
    DESCRIPTION
        "The marker colorant group."
    ::= { prtMIBGroups 12 }

prtMediaPathGroup OBJECT-GROUP
    OBJECTS { prtMediaPathDefaultIndex, prtMediaPathMaxSpeedPrintUnit,
              prtMediaPathMediaSizeUnit, prtMediaPathMaxSpeed,
              prtMediaPathMaxMediaFeedDir,
              prtMediaPathMaxMediaXFeedDir,
              prtMediaPathMinMediaFeedDir,
              prtMediaPathMinMediaXFeedDir, prtMediaPathType,
              prtMediaPathDescription, prtMediaPathStatus}
    STATUS  current
    DESCRIPTION
        "The media path group."
    ::= { prtMIBGroups 13 }

prtChannelGroup OBJECT-GROUP
    OBJECTS { prtChannelType, prtChannelProtocolVersion,
              prtChannelCurrentJobCntlLangIndex,
              prtChannelDefaultPageDescLangIndex, prtChannelState,
              prtChannelIfIndex, prtChannelStatus }
    STATUS  current
    DESCRIPTION
        "The channel group."
    ::= { prtMIBGroups 14 }

prtInterpreterGroup OBJECT-GROUP
    OBJECTS { prtInterpreterLangFamily, prtInterpreterLangLevel,
              prtInterpreterLangVersion, prtInterpreterDescription,
              prtInterpreterVersion, prtInterpreterDefaultOrientation,
              prtInterpreterFeedAddressability,
              prtInterpreterXFeedAddressability,
              prtInterpreterDefaultCharSetIn,
              prtInterpreterDefaultCharSetOut, prtInterpreterTwoWay }
    STATUS  current
    DESCRIPTION
        "The interpreter group."
    ::= { prtMIBGroups 15 }

prtConsoleGroup OBJECT-GROUP
    OBJECTS { prtConsoleLocalization, prtConsoleNumberOfDisplayLines,
              prtConsoleNumberOfDisplayChars, prtConsoleDisable,
              prtConsoleDisplayBufferText, prtConsoleOnTime,
              prtConsoleOffTime, prtConsoleColor,
              prtConsoleDescription }
    STATUS  current
    DESCRIPTION
        "The console group."
    ::= { prtMIBGroups 16 }

prtAlertTableGroup OBJECT-GROUP
    OBJECTS { prtAlertSeverityLevel, prtAlertTrainingLevel,
              prtAlertGroup, prtAlertGroupIndex, prtAlertLocation,
              prtAlertCode, prtAlertDescription }
    STATUS  current
    DESCRIPTION
        "The alert table group."
    ::= { prtMIBGroups 17 }

prtAlertTimeGroup OBJECT-GROUP
    OBJECTS { prtAlertTime }
    STATUS  current
    DESCRIPTION
        "The alert time group."
    ::= { prtMIBGroups 18 }


END
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\wmi\wbem\providers\snmpprovider\mibs\snmpv2\rfcs\rfc1850.txt ===
OSPF-MIB DEFINITIONS ::= BEGIN

    IMPORTS
            MODULE-IDENTITY, OBJECT-TYPE, Counter32, Gauge32,
            Integer32, IpAddress
                FROM SNMPv2-SMI
            TEXTUAL-CONVENTION, TruthValue, RowStatus
                FROM SNMPv2-TC
            MODULE-COMPLIANCE, OBJECT-GROUP          FROM SNMPv2-CONF
            mib-2                                    FROM RFC1213-MIB;

--  This MIB module uses the extended OBJECT-TYPE macro as
--  defined in [9].

ospf MODULE-IDENTITY
        LAST-UPDATED "9501201225Z" -- Fri Jan 20 12:25:50 PST 1995
        ORGANIZATION "IETF OSPF Working Group"
        CONTACT-INFO
       "       Fred Baker
       Postal: Cisco Systems
               519 Lado Drive
               Santa Barbara, California 93111
       Tel:    +1 805 681 0115
       E-Mail: fred@cisco.com

               Rob Coltun
       Postal: RainbowBridge Communications
       Tel:    (301) 340-9416
       E-Mail: rcoltun@rainbow-bridge.com"
    DESCRIPTION
       "The MIB module to describe the OSPF Version 2
       Protocol"
    ::= { mib-2 14 }

--  The Area ID, in OSPF, has the same format as an IP Address,
--  but has the function of defining a summarization point for
--  Link State Advertisements

AreaID ::= TEXTUAL-CONVENTION
    STATUS      current
    DESCRIPTION
       "An OSPF Area Identifier."
    SYNTAX      IpAddress


--  The Router ID, in OSPF, has the same format as an IP Address,
--  but identifies the router independent of its IP Address.

RouterID ::= TEXTUAL-CONVENTION
    STATUS      current
    DESCRIPTION
       "A OSPF Router Identifier."
    SYNTAX      IpAddress


--  The OSPF Metric is defined as an unsigned value in the range

Metric ::= TEXTUAL-CONVENTION
    STATUS      current
    DESCRIPTION
       "The OSPF Internal Metric."
    SYNTAX      Integer32 (0..'FFFF'h)

BigMetric ::= TEXTUAL-CONVENTION
    STATUS      current
    DESCRIPTION
       "The OSPF External Metric."
    SYNTAX      Integer32 (0..'FFFFFF'h)

--  Status Values

Status ::= TEXTUAL-CONVENTION
    STATUS      current
    DESCRIPTION
       "The status of an interface: 'enabled' indicates that
       it is willing to communicate with other OSPF Routers,
       while 'disabled' indicates that it is not."
    SYNTAX      INTEGER { enabled (1), disabled (2) }

--  Time Durations measured in seconds

PositiveInteger ::= TEXTUAL-CONVENTION
    STATUS      current
    DESCRIPTION
       "A positive integer. Values in excess are precluded as
       unnecessary and prone to interoperability issues."
    SYNTAX      Integer32 (0..'7FFFFFFF'h)

HelloRange ::= TEXTUAL-CONVENTION
    STATUS      current
    DESCRIPTION
       "The range of intervals on which hello messages are
       exchanged."
    SYNTAX      Integer32 (1..'FFFF'h)

UpToMaxAge ::= TEXTUAL-CONVENTION
    STATUS      current
    DESCRIPTION
       "The values that one might find or configure for
       variables bounded by the maximum age of an LSA."
    SYNTAX      Integer32 (0..3600)


--  The range of ifIndex

InterfaceIndex ::= TEXTUAL-CONVENTION
    STATUS      current
    DESCRIPTION
       "The range of ifIndex."
    SYNTAX      Integer32


--  Potential Priorities for the Designated Router Election

DesignatedRouterPriority ::= TEXTUAL-CONVENTION
    STATUS      current
    DESCRIPTION
       "The values defined for the priority of a system for
       becoming the designated router."
    SYNTAX      Integer32 (0..'FF'h)

TOSType ::= TEXTUAL-CONVENTION
    STATUS      current
    DESCRIPTION
       "Type of Service is defined as a mapping to the IP Type of
       Service Flags as defined in the IP Forwarding Table MIB

       +-----+-----+-----+-----+-----+-----+-----+-----+
       |                 |                       |     |
       |   PRECEDENCE    |    TYPE OF SERVICE    |  0  |
       |                 |                       |     |
       +-----+-----+-----+-----+-----+-----+-----+-----+

                IP TOS                IP TOS
           Field     Policy      Field     Policy

           Contents    Code      Contents    Code
           0 0 0 0  ==>   0      0 0 0 1  ==>   2
           0 0 1 0  ==>   4      0 0 1 1  ==>   6
           0 1 0 0  ==>   8      0 1 0 1  ==>  10
           0 1 1 0  ==>  12      0 1 1 1  ==>  14
           1 0 0 0  ==>  16      1 0 0 1  ==>  18
           1 0 1 0  ==>  20      1 0 1 1  ==>  22
           1 1 0 0  ==>  24      1 1 0 1  ==>  26
           1 1 1 0  ==>  28      1 1 1 1  ==>  30

       The remaining values are left for future definition."
    SYNTAX      Integer32 (0..30)


--  OSPF General Variables

--      These parameters apply globally to the Router's
--      OSPF Process.

ospfGeneralGroup OBJECT IDENTIFIER ::= { ospf 1 }


    ospfRouterId OBJECT-TYPE
        SYNTAX   RouterID
        MAX-ACCESS   read-write
        STATUS   current
        DESCRIPTION
           "A  32-bit  integer  uniquely  identifying  the
           router in the Autonomous System.

           By  convention,  to  ensure  uniqueness,   this
           should  default  to  the  value  of  one of the
           router's IP interface addresses."
       REFERENCE
          "OSPF Version 2, C.1 Global parameters"
      ::= { ospfGeneralGroup 1 }


    ospfAdminStat OBJECT-TYPE
        SYNTAX   Status
        MAX-ACCESS   read-write
        STATUS   current
        DESCRIPTION
           "The  administrative  status  of  OSPF  in  the
           router.   The  value 'enabled' denotes that the
           OSPF Process is active on at least  one  inter-
           face;  'disabled'  disables  it  on  all inter-
           faces."
       ::= { ospfGeneralGroup 2 }

    ospfVersionNumber OBJECT-TYPE
        SYNTAX   INTEGER    { version2 (2) }
        MAX-ACCESS   read-only
        STATUS   current
        DESCRIPTION
           "The current version number of the OSPF  proto-
           col is 2."
       REFERENCE
          "OSPF Version 2, Title"
      ::= { ospfGeneralGroup 3 }


    ospfAreaBdrRtrStatus OBJECT-TYPE
        SYNTAX   TruthValue
        MAX-ACCESS   read-only
        STATUS   current
        DESCRIPTION
           "A flag to note whether this router is an  area
           border router."
       REFERENCE
          "OSPF Version 2, Section 3 Splitting the AS into
          Areas"
      ::= { ospfGeneralGroup 4 }


    ospfASBdrRtrStatus OBJECT-TYPE
        SYNTAX   TruthValue
        MAX-ACCESS   read-write
        STATUS   current
        DESCRIPTION
           "A flag to note whether this router is  config-
           ured as an Autonomous System border router."
       REFERENCE
          "OSPF Version 2, Section 3.3  Classification  of
          routers"
      ::= { ospfGeneralGroup 5 }

    ospfExternLsaCount OBJECT-TYPE
        SYNTAX   Gauge32
        MAX-ACCESS   read-only
        STATUS   current
        DESCRIPTION
           "The number of external (LS type 5)  link-state
           advertisements in the link-state database."
       REFERENCE
          "OSPF Version 2, Appendix A.4.5 AS external link
          advertisements"
      ::= { ospfGeneralGroup 6 }


    ospfExternLsaCksumSum OBJECT-TYPE
        SYNTAX   Integer32
        MAX-ACCESS   read-only
        STATUS   current
        DESCRIPTION
           "The 32-bit unsigned sum of the LS checksums of
           the  external  link-state  advertisements  con-
           tained in the link-state  database.   This  sum
           can  be  used  to determine if there has been a
           change in a router's link state  database,  and
           to  compare  the  link-state  database  of  two
           routers."
       ::= { ospfGeneralGroup 7 }


    ospfTOSSupport OBJECT-TYPE
        SYNTAX   TruthValue
        MAX-ACCESS   read-write
        STATUS   current
        DESCRIPTION
           "The router's support for type-of-service rout-
           ing."
       REFERENCE
          "OSPF Version 2,  Appendix  F.1.2  Optional  TOS
          support"
      ::= { ospfGeneralGroup 8 }

    ospfOriginateNewLsas OBJECT-TYPE
        SYNTAX   Counter32
        MAX-ACCESS   read-only
        STATUS   current
        DESCRIPTION
           "The number of  new  link-state  advertisements
           that  have been originated.  This number is in-
           cremented each time the router originates a new
           LSA."
       ::= { ospfGeneralGroup 9 }


    ospfRxNewLsas OBJECT-TYPE
        SYNTAX   Counter32
        MAX-ACCESS   read-only
        STATUS   current
        DESCRIPTION
           "The number of  link-state  advertisements  re-
           ceived  determined  to  be  new instantiations.
           This number does not include  newer  instantia-
           tions  of self-originated link-state advertise-
           ments."
       ::= { ospfGeneralGroup 10 }

    ospfExtLsdbLimit OBJECT-TYPE
        SYNTAX   Integer32 (-1..'7FFFFFFF'h)
        MAX-ACCESS   read-write
        STATUS   current
        DESCRIPTION
           "The  maximum   number   of   non-default   AS-
           external-LSAs entries that can be stored in the
           link-state database.  If the value is -1,  then
           there is no limit.

           When the number of non-default AS-external-LSAs
           in   a  router's  link-state  database  reaches
           ospfExtLsdbLimit, the router  enters  Overflow-
           State.   The   router  never  holds  more  than
           ospfExtLsdbLimit  non-default  AS-external-LSAs
           in  its  database. OspfExtLsdbLimit MUST be set
           identically in all routers attached to the OSPF
           backbone  and/or  any regular OSPF area. (i.e.,
           OSPF stub areas and NSSAs are excluded)."
       DEFVAL { -1 }
       ::= { ospfGeneralGroup 11 }

    ospfMulticastExtensions OBJECT-TYPE
        SYNTAX   Integer32
        MAX-ACCESS   read-write
        STATUS   current
        DESCRIPTION
           "A Bit Mask indicating whether  the  router  is
           forwarding  IP  multicast  (Class  D) datagrams
           based on the algorithms defined in  the  Multi-
           cast Extensions to OSPF.

           Bit 0, if set, indicates that  the  router  can
           forward  IP multicast datagrams in the router's
           directly attached areas (called intra-area mul-
           ticast routing).

           Bit 1, if set, indicates that  the  router  can
           forward  IP  multicast  datagrams  between OSPF
           areas (called inter-area multicast routing).

           Bit 2, if set, indicates that  the  router  can
           forward  IP  multicast  datagrams between Auto-
           nomous Systems (called inter-AS multicast rout-
           ing).

           Only certain combinations of bit  settings  are
           allowed,  namely: 0 (no multicast forwarding is
           enabled), 1 (intra-area multicasting  only),  3
           (intra-area  and  inter-area  multicasting),  5
           (intra-area and inter-AS  multicasting)  and  7
           (multicasting  everywhere). By default, no mul-
           ticast forwarding is enabled."
       DEFVAL { 0 }
       ::= { ospfGeneralGroup 12 }

    ospfExitOverflowInterval OBJECT-TYPE
        SYNTAX   PositiveInteger
        MAX-ACCESS   read-write
        STATUS   current
        DESCRIPTION
           "The number of  seconds  that,  after  entering
           OverflowState,  a  router will attempt to leave
           OverflowState. This allows the router to  again
           originate  non-default  AS-external-LSAs.  When
           set to 0, the router will not  leave  Overflow-
           State until restarted."
       DEFVAL { 0 }
       ::= { ospfGeneralGroup 13 }


    ospfDemandExtensions OBJECT-TYPE
        SYNTAX   TruthValue
        MAX-ACCESS   read-write
        STATUS   current
        DESCRIPTION
           "The router's support for demand routing."
       REFERENCE
          "OSPF Version 2, Appendix on Demand Routing"
      ::= { ospfGeneralGroup 14 }


--      The OSPF Area Data Structure contains information
--      regarding the various areas. The interfaces and
--      virtual links are configured as part of these areas.
--      Area 0.0.0.0, by definition, is the Backbone Area


    ospfAreaTable OBJECT-TYPE
        SYNTAX   SEQUENCE OF OspfAreaEntry
        MAX-ACCESS   not-accessible
        STATUS   current
        DESCRIPTION
           "Information describing the configured  parame-
           ters  and cumulative statistics of the router's
           attached areas."
       REFERENCE
          "OSPF Version 2, Section 6  The Area Data Struc-
          ture"
      ::= { ospf 2 }


    ospfAreaEntry OBJECT-TYPE
        SYNTAX   OspfAreaEntry
        MAX-ACCESS   not-accessible
        STATUS   current
        DESCRIPTION
           "Information describing the configured  parame-
           ters  and  cumulative  statistics of one of the
           router's attached areas."
       INDEX { ospfAreaId }
       ::= { ospfAreaTable 1 }

OspfAreaEntry ::=
    SEQUENCE {
        ospfAreaId
            AreaID,
        ospfAuthType
            Integer32,
        ospfImportAsExtern
            INTEGER,
        ospfSpfRuns
            Counter32,
        ospfAreaBdrRtrCount
            Gauge32,
        ospfAsBdrRtrCount
            Gauge32,
        ospfAreaLsaCount
            Gauge32,
        ospfAreaLsaCksumSum
            Integer32,
        ospfAreaSummary
            INTEGER,
        ospfAreaStatus
            RowStatus
              }

    ospfAreaId OBJECT-TYPE
        SYNTAX   AreaID
        MAX-ACCESS   read-only
        STATUS   current
        DESCRIPTION
           "A 32-bit integer uniquely identifying an area.
           Area ID 0.0.0.0 is used for the OSPF backbone."
       REFERENCE
          "OSPF Version 2, Appendix C.2 Area parameters"
      ::= { ospfAreaEntry 1 }


    ospfAuthType OBJECT-TYPE
        SYNTAX   Integer32
                    -- none (0),
                    -- simplePassword (1)
                    -- md5 (2)
                    -- reserved for specification by IANA (> 2)
        MAX-ACCESS   read-create
        STATUS   obsolete
        DESCRIPTION
           "The authentication type specified for an area.
           Additional authentication types may be assigned
           locally on a per Area basis."
       REFERENCE
          "OSPF Version 2, Appendix E Authentication"
      DEFVAL { 0 }        -- no authentication, by default
      ::= { ospfAreaEntry 2 }

    ospfImportAsExtern OBJECT-TYPE
        SYNTAX   INTEGER    {
                    importExternal (1),
                    importNoExternal (2),
                    importNssa (3)
                  }
        MAX-ACCESS   read-create
        STATUS   current
        DESCRIPTION
           "The area's support for importing  AS  external
           link- state advertisements."
       REFERENCE
          "OSPF Version 2, Appendix C.2 Area parameters"
      DEFVAL { importExternal }
      ::= { ospfAreaEntry 3 }


    ospfSpfRuns OBJECT-TYPE
        SYNTAX   Counter32
        MAX-ACCESS   read-only
        STATUS   current
        DESCRIPTION
           "The number of times that the intra-area  route
           table  has  been  calculated  using this area's
           link-state database.  This  is  typically  done
           using Dijkstra's algorithm."
       ::= { ospfAreaEntry 4 }


    ospfAreaBdrRtrCount OBJECT-TYPE
        SYNTAX   Gauge32
        MAX-ACCESS   read-only
        STATUS   current
        DESCRIPTION
           "The total number of area border routers reach-
           able within this area.  This is initially zero,
           and is calculated in each SPF Pass."
       ::= { ospfAreaEntry 5 }

    ospfAsBdrRtrCount OBJECT-TYPE
        SYNTAX   Gauge32
        MAX-ACCESS   read-only
        STATUS   current
        DESCRIPTION
           "The total number of Autonomous  System  border
           routers  reachable  within  this area.  This is
           initially zero, and is calculated in  each  SPF
           Pass."
       ::= { ospfAreaEntry 6 }


    ospfAreaLsaCount OBJECT-TYPE
        SYNTAX   Gauge32
        MAX-ACCESS   read-only
        STATUS   current
        DESCRIPTION
           "The total number of link-state  advertisements
           in  this  area's link-state database, excluding
           AS External LSA's."
       ::= { ospfAreaEntry 7 }


    ospfAreaLsaCksumSum OBJECT-TYPE
        SYNTAX   Integer32
        MAX-ACCESS   read-only
        STATUS   current
        DESCRIPTION
           "The 32-bit unsigned sum of the link-state  ad-
           vertisements'  LS  checksums  contained in this
           area's link-state database.  This sum  excludes
           external (LS type 5) link-state advertisements.
           The sum can be used to determine if  there  has
           been  a  change  in a router's link state data-
           base, and to compare the link-state database of
           two routers."
       DEFVAL   { 0 }
       ::= { ospfAreaEntry 8 }

    ospfAreaSummary OBJECT-TYPE
        SYNTAX   INTEGER    {
                    noAreaSummary (1),
                    sendAreaSummary (2)
                  }
        MAX-ACCESS   read-create
        STATUS   current
        DESCRIPTION
           "The variable ospfAreaSummary controls the  im-
           port  of  summary LSAs into stub areas.  It has
           no effect on other areas.

           If it is noAreaSummary, the router will neither
           originate  nor  propagate summary LSAs into the
           stub area.  It will rely entirely  on  its  de-
           fault route.

           If it is sendAreaSummary, the router will  both
           summarize and propagate summary LSAs."
       DEFVAL   { noAreaSummary }
       ::= { ospfAreaEntry 9 }


    ospfAreaStatus OBJECT-TYPE
        SYNTAX   RowStatus
        MAX-ACCESS   read-create
        STATUS   current
        DESCRIPTION
           "This variable displays the status of  the  en-
           try.  Setting it to 'invalid' has the effect of
           rendering it inoperative.  The internal  effect
           (row removal) is implementation dependent."
       ::= { ospfAreaEntry 10 }


--  OSPF Area Default Metric Table

--      The OSPF Area Default Metric Table describes the metrics
--      that a default Area Border Router will advertise into a
--      Stub area.


    ospfStubAreaTable OBJECT-TYPE
        SYNTAX   SEQUENCE OF OspfStubAreaEntry
        MAX-ACCESS   not-accessible
        STATUS   current
        DESCRIPTION
           "The set of metrics that will be advertised  by
           a default Area Border Router into a stub area."
       REFERENCE
          "OSPF Version 2, Appendix C.2, Area Parameters"
      ::= { ospf 3 }


    ospfStubAreaEntry OBJECT-TYPE
        SYNTAX   OspfStubAreaEntry
        MAX-ACCESS   not-accessible
        STATUS   current
        DESCRIPTION
           "The metric for a given Type  of  Service  that
           will  be  advertised  by  a default Area Border
           Router into a stub area."
       REFERENCE
          "OSPF Version 2, Appendix C.2, Area Parameters"
      INDEX { ospfStubAreaId, ospfStubTOS }
      ::= { ospfStubAreaTable 1 }

OspfStubAreaEntry ::=
    SEQUENCE {
        ospfStubAreaId
            AreaID,
        ospfStubTOS
            TOSType,
        ospfStubMetric
            BigMetric,
        ospfStubStatus
            RowStatus,
        ospfStubMetricType
            INTEGER
              }

    ospfStubAreaId OBJECT-TYPE
        SYNTAX   AreaID
        MAX-ACCESS   read-only
        STATUS   current
        DESCRIPTION
           "The 32 bit identifier for the Stub  Area.   On
           creation,  this  can  be  derived  from the in-
           stance."
       ::= { ospfStubAreaEntry 1 }

    ospfStubTOS OBJECT-TYPE
        SYNTAX   TOSType
        MAX-ACCESS   read-only
        STATUS   current
        DESCRIPTION
           "The  Type  of  Service  associated  with   the
           metric.   On creation, this can be derived from
           the instance."
       ::= { ospfStubAreaEntry 2 }


    ospfStubMetric OBJECT-TYPE
        SYNTAX   BigMetric
        MAX-ACCESS   read-create
        STATUS   current
        DESCRIPTION
           "The metric value applied at the indicated type
           of  service.  By default, this equals the least
           metric at the type of service among the  inter-
           faces to other areas."
       ::= { ospfStubAreaEntry 3 }


    ospfStubStatus OBJECT-TYPE
        SYNTAX   RowStatus
        MAX-ACCESS   read-create
        STATUS   current
        DESCRIPTION
           "This variable displays the status of  the  en-
           try.  Setting it to 'invalid' has the effect of
           rendering it inoperative.  The internal  effect
           (row removal) is implementation dependent."
       ::= { ospfStubAreaEntry 4 }

    ospfStubMetricType OBJECT-TYPE
        SYNTAX   INTEGER    {
                    ospfMetric (1),                -- OSPF Metric
                    comparableCost (2),        -- external type 1
                    nonComparable  (3)        -- external type 2
                  }
        MAX-ACCESS   read-create
        STATUS   current
        DESCRIPTION
           "This variable displays the type of metric  ad-
           vertised as a default route."
       DEFVAL   { ospfMetric }
       ::= { ospfStubAreaEntry 5 }

--  OSPF Link State Database

--      The Link State Database contains the Link State
--      Advertisements from throughout the areas that the
--      device is attached to.


    ospfLsdbTable OBJECT-TYPE
        SYNTAX   SEQUENCE OF OspfLsdbEntry
        MAX-ACCESS   not-accessible
        STATUS   current
        DESCRIPTION
           "The OSPF Process's Link State Database."
       REFERENCE
          "OSPF Version 2, Section 12  Link  State  Adver-
          tisements"
      ::= { ospf 4 }


    ospfLsdbEntry OBJECT-TYPE
        SYNTAX   OspfLsdbEntry
        MAX-ACCESS   not-accessible
        STATUS   current
        DESCRIPTION
           "A single Link State Advertisement."
       INDEX { ospfLsdbAreaId, ospfLsdbType,
               ospfLsdbLsid, ospfLsdbRouterId }
       ::= { ospfLsdbTable 1 }

OspfLsdbEntry ::=
    SEQUENCE {
        ospfLsdbAreaId
            AreaID,
        ospfLsdbType
            INTEGER,
        ospfLsdbLsid
            IpAddress,
        ospfLsdbRouterId
            RouterID,
        ospfLsdbSequence
            Integer32,
        ospfLsdbAge
            Integer32,
        ospfLsdbChecksum
            Integer32,
        ospfLsdbAdvertisement
            OCTET STRING
              }

    ospfLsdbAreaId OBJECT-TYPE
        SYNTAX   AreaID
        MAX-ACCESS   read-only
        STATUS   current
        DESCRIPTION
           "The 32 bit identifier of the Area  from  which
           the LSA was received."
       REFERENCE
          "OSPF Version 2, Appendix C.2 Area parameters"
      ::= { ospfLsdbEntry 1 }

-- External Link State Advertisements are permitted
-- for backward compatibility, but should be displayed in
-- the ospfExtLsdbTable rather than here.

    ospfLsdbType OBJECT-TYPE
        SYNTAX   INTEGER    {
                    routerLink (1),
                    networkLink (2),
                    summaryLink (3),
                    asSummaryLink (4),
                    asExternalLink (5), -- but see ospfExtLsdbTable
                    multicastLink (6),
                    nssaExternalLink (7)
                  }
        MAX-ACCESS   read-only
        STATUS   current
        DESCRIPTION
           "The type  of  the  link  state  advertisement.
           Each  link state type has a separate advertise-
           ment format."
       REFERENCE
          "OSPF Version 2, Appendix A.4.1 The  Link  State
          Advertisement header"
      ::= { ospfLsdbEntry 2 }

    ospfLsdbLsid OBJECT-TYPE
        SYNTAX   IpAddress
        MAX-ACCESS   read-only
        STATUS   current
        DESCRIPTION
           "The Link State ID is an LS Type Specific field
           containing either a Router ID or an IP Address;
           it identifies the piece of the  routing  domain
           that is being described by the advertisement."
       REFERENCE
          "OSPF Version 2, Section 12.1.4 Link State ID"
      ::= { ospfLsdbEntry 3 }

    ospfLsdbRouterId OBJECT-TYPE
        SYNTAX   RouterID
        MAX-ACCESS   read-only
        STATUS   current
        DESCRIPTION
           "The 32 bit number that uniquely identifies the
           originating router in the Autonomous System."
       REFERENCE
          "OSPF Version 2, Appendix C.1 Global parameters"
      ::= { ospfLsdbEntry 4 }

--  Note that the OSPF Sequence Number is a 32 bit signed
--  integer.  It starts with the value '80000001'h,
--  or -'7FFFFFFF'h, and increments until '7FFFFFFF'h
--  Thus, a typical sequence number will be very negative.

    ospfLsdbSequence OBJECT-TYPE
        SYNTAX   Integer32
        MAX-ACCESS   read-only
        STATUS   current
        DESCRIPTION
           "The sequence number field is a  signed  32-bit
           integer.   It  is used to detect old and dupli-
           cate link state advertisements.  The  space  of
           sequence  numbers  is  linearly  ordered.   The
           larger the sequence number the more recent  the
           advertisement."
       REFERENCE
          "OSPF Version  2,  Section  12.1.6  LS  sequence
          number"
      ::= { ospfLsdbEntry 5 }


    ospfLsdbAge OBJECT-TYPE
        SYNTAX   Integer32    -- Should be 0..MaxAge
        MAX-ACCESS   read-only
        STATUS   current
        DESCRIPTION
           "This field is the age of the link state adver-
           tisement in seconds."
       REFERENCE
          "OSPF Version 2, Section 12.1.1 LS age"
      ::= { ospfLsdbEntry 6 }

    ospfLsdbChecksum OBJECT-TYPE
        SYNTAX   Integer32
        MAX-ACCESS   read-only
        STATUS   current
        DESCRIPTION
           "This field is the  checksum  of  the  complete
           contents  of  the  advertisement, excepting the
           age field.  The age field is excepted  so  that
           an   advertisement's  age  can  be  incremented
           without updating the  checksum.   The  checksum
           used  is  the same that is used for ISO connec-
           tionless datagrams; it is commonly referred  to
           as the Fletcher checksum."
       REFERENCE
          "OSPF Version 2, Section 12.1.7 LS checksum"
      ::= { ospfLsdbEntry 7 }


    ospfLsdbAdvertisement OBJECT-TYPE
        SYNTAX   OCTET STRING (SIZE (1..65535))
        MAX-ACCESS   read-only
        STATUS   current
        DESCRIPTION
           "The entire Link State Advertisement, including
           its header."
       REFERENCE
          "OSPF Version 2, Section 12  Link  State  Adver-
          tisements"
      ::= { ospfLsdbEntry 8 }


--  Address Range Table

--      The Address Range Table acts as an adjunct to the Area
--      Table; It describes those Address Range Summaries that
--      are configured to be propagated from an Area to reduce
--      the amount of information about it which is known beyond
--      its borders.

    ospfAreaRangeTable OBJECT-TYPE
        SYNTAX   SEQUENCE OF OspfAreaRangeEntry
        MAX-ACCESS   not-accessible
        STATUS   obsolete
        DESCRIPTION
           "A range if IP addresses  specified  by  an  IP
           address/IP  network  mask  pair.   For example,
           class B address range of X.X.X.X with a network
           mask  of  255.255.0.0 includes all IP addresses
           from X.X.0.0 to X.X.255.255"
       REFERENCE
          "OSPF Version 2, Appendix C.2  Area parameters"
      ::= { ospf 5 }

    ospfAreaRangeEntry OBJECT-TYPE
        SYNTAX   OspfAreaRangeEntry
        MAX-ACCESS   not-accessible
        STATUS   obsolete
        DESCRIPTION
           "A range if IP addresses  specified  by  an  IP
           address/IP  network  mask  pair.   For example,
           class B address range of X.X.X.X with a network
           mask  of  255.255.0.0 includes all IP addresses
           from X.X.0.0 to X.X.255.255"
       REFERENCE
          "OSPF Version 2, Appendix C.2  Area parameters"
      INDEX { ospfAreaRangeAreaId, ospfAreaRangeNet }
      ::= { ospfAreaRangeTable 1 }

OspfAreaRangeEntry ::=
    SEQUENCE {
        ospfAreaRangeAreaId
            AreaID,
        ospfAreaRangeNet
            IpAddress,
        ospfAreaRangeMask
            IpAddress,
        ospfAreaRangeStatus
            RowStatus,
        ospfAreaRangeEffect
            INTEGER
              }

    ospfAreaRangeAreaId OBJECT-TYPE
        SYNTAX   AreaID
        MAX-ACCESS   read-only
        STATUS   obsolete
        DESCRIPTION
           "The Area the Address  Range  is  to  be  found
           within."
       REFERENCE
          "OSPF Version 2, Appendix C.2 Area parameters"
      ::= { ospfAreaRangeEntry 1 }


    ospfAreaRangeNet OBJECT-TYPE
        SYNTAX   IpAddress
        MAX-ACCESS   read-only
        STATUS   obsolete
        DESCRIPTION
           "The IP Address of the Net or Subnet  indicated
           by the range."
       REFERENCE
          "OSPF Version 2, Appendix C.2 Area parameters"
      ::= { ospfAreaRangeEntry 2 }


    ospfAreaRangeMask OBJECT-TYPE
        SYNTAX   IpAddress
        MAX-ACCESS   read-create
        STATUS   obsolete
        DESCRIPTION
           "The Subnet Mask that pertains to  the  Net  or
           Subnet."
       REFERENCE
          "OSPF Version 2, Appendix C.2 Area parameters"
      ::= { ospfAreaRangeEntry 3 }

    ospfAreaRangeStatus OBJECT-TYPE
        SYNTAX   RowStatus
        MAX-ACCESS   read-create
        STATUS   obsolete
        DESCRIPTION
           "This variable displays the status of  the  en-
           try.  Setting it to 'invalid' has the effect of
           rendering it inoperative.  The internal  effect
           (row removal) is implementation dependent."
       ::= { ospfAreaRangeEntry 4 }


    ospfAreaRangeEffect OBJECT-TYPE
        SYNTAX   INTEGER    {
                    advertiseMatching (1),
                    doNotAdvertiseMatching (2)
                  }
        MAX-ACCESS   read-create
        STATUS   obsolete
        DESCRIPTION
           "Subnets subsumed by ranges either trigger  the
           advertisement  of the indicated summary (adver-
           tiseMatching), or result in  the  subnet's  not
           being advertised at all outside the area."
       DEFVAL   { advertiseMatching }
       ::= { ospfAreaRangeEntry 5 }



--  OSPF Host Table

--      The Host/Metric Table indicates what hosts are directly
--      attached to the Router, and what metrics and types of
--      service should be advertised for them.

    ospfHostTable OBJECT-TYPE
        SYNTAX   SEQUENCE OF OspfHostEntry
        MAX-ACCESS   not-accessible
        STATUS   current
        DESCRIPTION
           "The list of Hosts, and their metrics, that the
           router will advertise as host routes."
       REFERENCE
          "OSPF Version 2, Appendix C.6  Host route param-
          eters"
      ::= { ospf 6 }


    ospfHostEntry OBJECT-TYPE
        SYNTAX   OspfHostEntry
        MAX-ACCESS   not-accessible
        STATUS   current
        DESCRIPTION
           "A metric to be advertised, for a given type of
           service, when a given host is reachable."
       INDEX { ospfHostIpAddress, ospfHostTOS }
       ::= { ospfHostTable 1 }

OspfHostEntry ::=
    SEQUENCE {
        ospfHostIpAddress
            IpAddress,
        ospfHostTOS
            TOSType,
        ospfHostMetric
            Metric,
        ospfHostStatus
            RowStatus,
        ospfHostAreaID
            AreaID
              }

    ospfHostIpAddress OBJECT-TYPE
        SYNTAX   IpAddress
        MAX-ACCESS   read-only
        STATUS   current
        DESCRIPTION
           "The IP Address of the Host."
       REFERENCE
          "OSPF Version 2, Appendix C.6 Host route parame-
          ters"
      ::= { ospfHostEntry 1 }


    ospfHostTOS OBJECT-TYPE
        SYNTAX   TOSType
        MAX-ACCESS   read-only
        STATUS   current
        DESCRIPTION
           "The Type of Service of the route being config-
           ured."
       REFERENCE
          "OSPF Version 2, Appendix C.6 Host route parame-
          ters"
      ::= { ospfHostEntry 2 }


    ospfHostMetric OBJECT-TYPE
        SYNTAX   Metric
        MAX-ACCESS   read-create
        STATUS   current
        DESCRIPTION
           "The Metric to be advertised."
       REFERENCE
          "OSPF Version 2, Appendix C.6 Host route parame-
          ters"
      ::= { ospfHostEntry 3 }

    ospfHostStatus OBJECT-TYPE
        SYNTAX   RowStatus
        MAX-ACCESS   read-create
        STATUS   current
        DESCRIPTION
           "This variable displays the status of  the  en-
           try.  Setting it to 'invalid' has the effect of
           rendering it inoperative.  The internal  effect
           (row removal) is implementation dependent."
       ::= { ospfHostEntry 4 }


    ospfHostAreaID OBJECT-TYPE
        SYNTAX   AreaID
        MAX-ACCESS   read-only
        STATUS   current
        DESCRIPTION
           "The Area the Host Entry is to be found within.
           By  default, the area that a subsuming OSPF in-
           terface is in, or 0.0.0.0"
       REFERENCE
          "OSPF Version 2, Appendix C.2 Area parameters"
      ::= { ospfHostEntry 5 }


--  OSPF Interface Table

--      The OSPF Interface Table augments the ipAddrTable
--             with OSPF specific information.

    ospfIfTable OBJECT-TYPE
        SYNTAX   SEQUENCE OF OspfIfEntry
        MAX-ACCESS   not-accessible
        STATUS   current
        DESCRIPTION
           "The OSPF Interface Table describes the  inter-
           faces from the viewpoint of OSPF."
       REFERENCE
          "OSPF Version 2, Appendix C.3  Router  interface
          parameters"
      ::= { ospf 7 }


    ospfIfEntry OBJECT-TYPE
        SYNTAX   OspfIfEntry
        MAX-ACCESS   not-accessible
        STATUS   current
        DESCRIPTION
           "The OSPF Interface Entry describes one  inter-
           face from the viewpoint of OSPF."
       INDEX { ospfIfIpAddress, ospfAddressLessIf }
       ::= { ospfIfTable 1 }

OspfIfEntry ::=
    SEQUENCE {
        ospfIfIpAddress
            IpAddress,
        ospfAddressLessIf
            Integer32,
        ospfIfAreaId
            AreaID,
        ospfIfType
            INTEGER,
        ospfIfAdminStat
            Status,
        ospfIfRtrPriority
            DesignatedRouterPriority,
        ospfIfTransitDelay
            UpToMaxAge,
        ospfIfRetransInterval
            UpToMaxAge,
        ospfIfHelloInterval
            HelloRange,
        ospfIfRtrDeadInterval
            PositiveInteger,
        ospfIfPollInterval
            PositiveInteger,
        ospfIfState
            INTEGER,
        ospfIfDesignatedRouter
            IpAddress,
        ospfIfBackupDesignatedRouter
            IpAddress,
        ospfIfEvents
            Counter32,
        ospfIfAuthType
            INTEGER,
        ospfIfAuthKey
            OCTET STRING,
        ospfIfStatus
            RowStatus,
        ospfIfMulticastForwarding
            INTEGER,
        ospfIfDemand
            TruthValue
              }

    ospfIfIpAddress OBJECT-TYPE
        SYNTAX   IpAddress
        MAX-ACCESS   read-only
        STATUS   current
        DESCRIPTION
           "The IP address of this OSPF interface."
       ::= { ospfIfEntry 1 }

    ospfAddressLessIf OBJECT-TYPE
        SYNTAX   Integer32
        MAX-ACCESS   read-only
        STATUS   current
        DESCRIPTION
           "For the purpose of easing  the  instancing  of
           addressed   and  addressless  interfaces;  This
           variable takes the value 0 on  interfaces  with
           IP  Addresses,  and  the corresponding value of
           ifIndex for interfaces having no IP Address."
       ::= { ospfIfEntry 2 }

    ospfIfAreaId OBJECT-TYPE
        SYNTAX   AreaID
        MAX-ACCESS   read-create
        STATUS   current
        DESCRIPTION
           "A 32-bit integer uniquely identifying the area
           to  which  the  interface  connects.   Area  ID
           0.0.0.0 is used for the OSPF backbone."
       DEFVAL   { '00000000'H }    -- 0.0.0.0
       ::= { ospfIfEntry 3 }

    ospfIfType OBJECT-TYPE
        SYNTAX   INTEGER    {
                    broadcast (1),
                    nbma (2),
                    pointToPoint (3),
                    pointToMultipoint (5)
                  }
        MAX-ACCESS   read-create
        STATUS   current
        DESCRIPTION
           "The OSPF interface type.

           By way of a default, this field may be intuited
           from the corresponding value of ifType.  Broad-
           cast LANs, such as  Ethernet  and  IEEE  802.5,
           take  the  value  'broadcast', X.25 and similar
           technologies take the value 'nbma',  and  links
           that  are  definitively point to point take the
           value 'pointToPoint'."
       ::= { ospfIfEntry 4 }


    ospfIfAdminStat OBJECT-TYPE
        SYNTAX   Status
        MAX-ACCESS   read-create
        STATUS   current
        DESCRIPTION
           "The OSPF  interface's  administrative  status.
           The  value formed on the interface, and the in-
           terface will be advertised as an internal route
           to  some  area.   The  value 'disabled' denotes
           that the interface is external to OSPF."
       DEFVAL { enabled }
       ::= { ospfIfEntry 5 }

    ospfIfRtrPriority OBJECT-TYPE
        SYNTAX   DesignatedRouterPriority
        MAX-ACCESS   read-create
        STATUS   current
        DESCRIPTION
           "The  priority  of  this  interface.   Used  in
           multi-access  networks,  this  field is used in
           the designated router election algorithm.   The
           value 0 signifies that the router is not eligi-
           ble to become the  designated  router  on  this
           particular  network.   In the event of a tie in
           this value, routers will use their Router ID as
           a tie breaker."
       DEFVAL { 1 }
       ::= { ospfIfEntry 6 }


    ospfIfTransitDelay OBJECT-TYPE
        SYNTAX   UpToMaxAge
        MAX-ACCESS   read-create
        STATUS   current
        DESCRIPTION
           "The estimated number of seconds  it  takes  to
           transmit  a  link state update packet over this
           interface."
       DEFVAL { 1 }
       ::= { ospfIfEntry 7 }


    ospfIfRetransInterval OBJECT-TYPE
        SYNTAX   UpToMaxAge
        MAX-ACCESS   read-create
        STATUS   current
        DESCRIPTION
           "The number of seconds between  link-state  ad-
           vertisement  retransmissions,  for  adjacencies
           belonging to this  interface.   This  value  is
           also used when retransmitting database descrip-
           tion and link-state request packets."
       DEFVAL { 5 }
       ::= { ospfIfEntry 8 }


    ospfIfHelloInterval OBJECT-TYPE
        SYNTAX   HelloRange
        MAX-ACCESS   read-create
        STATUS   current
        DESCRIPTION
           "The length of time, in  seconds,  between  the
           Hello  packets that the router sends on the in-
           terface.  This value must be the same  for  all
           routers attached to a common network."
       DEFVAL { 10 }
       ::= { ospfIfEntry 9 }


    ospfIfRtrDeadInterval OBJECT-TYPE
        SYNTAX   PositiveInteger
        MAX-ACCESS   read-create
        STATUS   current
        DESCRIPTION
           "The number of seconds that  a  router's  Hello
           packets  have  not been seen before it's neigh-
           bors declare the router down.  This  should  be
           some  multiple  of  the  Hello  interval.  This
           value must be the same for all routers attached
           to a common network."
       DEFVAL { 40 }
       ::= { ospfIfEntry 10 }


    ospfIfPollInterval OBJECT-TYPE
        SYNTAX   PositiveInteger
        MAX-ACCESS   read-create
        STATUS   current
        DESCRIPTION
           "The larger time interval, in seconds,  between
           the  Hello  packets  sent  to  an inactive non-
           broadcast multi- access neighbor."
       DEFVAL { 120 }
       ::= { ospfIfEntry 11 }


    ospfIfState OBJECT-TYPE
        SYNTAX   INTEGER    {
                    down (1),
                    loopback (2),
                    waiting (3),
                    pointToPoint (4),
                    designatedRouter (5),
                    backupDesignatedRouter (6),
                    otherDesignatedRouter (7)
                  }
        MAX-ACCESS   read-only
        STATUS   current
        DESCRIPTION
           "The OSPF Interface State."
       DEFVAL { down }
       ::= { ospfIfEntry 12 }


    ospfIfDesignatedRouter OBJECT-TYPE
        SYNTAX   IpAddress
        MAX-ACCESS   read-only
        STATUS   current
        DESCRIPTION
           "The IP Address of the Designated Router."
       DEFVAL   { '00000000'H }    -- 0.0.0.0
       ::= { ospfIfEntry 13 }


    ospfIfBackupDesignatedRouter OBJECT-TYPE
        SYNTAX   IpAddress
        MAX-ACCESS   read-only
        STATUS   current
        DESCRIPTION
           "The  IP  Address  of  the  Backup   Designated
           Router."
       DEFVAL   { '00000000'H }    -- 0.0.0.0
       ::= { ospfIfEntry 14 }

    ospfIfEvents OBJECT-TYPE
        SYNTAX   Counter32
        MAX-ACCESS   read-only
        STATUS   current
        DESCRIPTION
           "The number of times this  OSPF  interface  has
           changed its state, or an error has occurred."
       ::= { ospfIfEntry 15 }


    ospfIfAuthKey OBJECT-TYPE
        SYNTAX   OCTET STRING (SIZE (0..256))
        MAX-ACCESS   read-create
        STATUS   current
        DESCRIPTION
           "The Authentication Key.  If the Area's Author-
           ization  Type  is  simplePassword,  and the key
           length is shorter than 8 octets, the agent will
           left adjust and zero fill to 8 octets.

           Note that unauthenticated  interfaces  need  no
           authentication key, and simple password authen-
           tication cannot use a key of more  than  8  oc-
           tets.  Larger keys are useful only with authen-
           tication mechanisms not specified in this docu-
           ment.

           When read, ospfIfAuthKey always returns an  Oc-
           tet String of length zero."
       REFERENCE
          "OSPF Version 2, Section 9  The  Interface  Data
          Structure"
      DEFVAL   { '0000000000000000'H }    -- 0.0.0.0.0.0.0.0
      ::= { ospfIfEntry 16 }

    ospfIfStatus OBJECT-TYPE
        SYNTAX   RowStatus
        MAX-ACCESS   read-create
        STATUS   current
        DESCRIPTION
           "This variable displays the status of  the  en-
           try.  Setting it to 'invalid' has the effect of
           rendering it inoperative.  The internal  effect
           (row removal) is implementation dependent."
       ::= { ospfIfEntry 17 }


    ospfIfMulticastForwarding OBJECT-TYPE
        SYNTAX   INTEGER    {
                            blocked (1),        -- no multicast forwarding
                            multicast (2),        -- using multicast address
                            unicast (3)        -- to each OSPF neighbor
                  }
        MAX-ACCESS   read-create
        STATUS   current
        DESCRIPTION
           "The way multicasts should  forwarded  on  this
           interface;  not  forwarded,  forwarded  as data
           link multicasts, or forwarded as data link uni-
           casts.   Data link multicasting is not meaning-
           ful on point to point and NBMA interfaces,  and
           setting ospfMulticastForwarding to 0 effective-
           ly disables all multicast forwarding."
       DEFVAL { blocked }
       ::= { ospfIfEntry 18 }


    ospfIfDemand OBJECT-TYPE
        SYNTAX   TruthValue
        MAX-ACCESS   read-create
        STATUS   current
        DESCRIPTION
           "Indicates whether Demand OSPF procedures (hel-
           lo supression to FULL neighbors and setting the
           DoNotAge flag on proogated LSAs) should be per-
           formed on this interface."
       DEFVAL { false }
       ::= { ospfIfEntry 19 }


    ospfIfAuthType OBJECT-TYPE
        SYNTAX   INTEGER (0..255)
                    -- none (0),
                    -- simplePassword (1)
                    -- md5 (2)
                    -- reserved for specification by IANA (> 2)
        MAX-ACCESS   read-create
        STATUS   current
        DESCRIPTION
           "The authentication type specified for  an  in-
           terface.   Additional  authentication types may
           be assigned locally."
       REFERENCE
          "OSPF Version 2, Appendix E Authentication"
      DEFVAL { 0 }        -- no authentication, by default
      ::= { ospfIfEntry 20 }


--  OSPF Interface Metric Table

--      The Metric Table describes the metrics to be advertised
--      for a specified interface at the various types of service.
--      As such, this table is an adjunct of the OSPF Interface
--      Table.

-- Types of service, as defined by RFC 791, have the ability
-- to request low delay, high bandwidth, or reliable linkage.

-- For the purposes of this specification, the measure of
-- bandwidth

--      Metric = 10^8 / ifSpeed

-- is the default value.  For multiple link interfaces, note
-- that ifSpeed is the sum of the individual link speeds.
-- This yields a number having the following typical values:

--      Network Type/bit rate   Metric

--      >= 100 MBPS                 1
--      Ethernet/802.3             10
--      E1                         48
--      T1 (ESF)                   65
--       64 KBPS                 1562
--       56 KBPS                 1785
--       19.2 KBPS               5208
--        9.6 KBPS              10416

-- Routes that are not specified use the default (TOS 0) metric

    ospfIfMetricTable OBJECT-TYPE
        SYNTAX   SEQUENCE OF OspfIfMetricEntry
        MAX-ACCESS   not-accessible
        STATUS   current
        DESCRIPTION
           "The TOS metrics for  a  non-virtual  interface
           identified by the interface index."
       REFERENCE
          "OSPF Version 2, Appendix C.3  Router  interface
          parameters"
      ::= { ospf 8 }

    ospfIfMetricEntry OBJECT-TYPE
        SYNTAX   OspfIfMetricEntry
        MAX-ACCESS   not-accessible
        STATUS   current
        DESCRIPTION
           "A particular TOS metric for a non-virtual  in-
           terface identified by the interface index."
       REFERENCE
          "OSPF Version 2, Appendix C.3  Router  interface
          parameters"
      INDEX { ospfIfMetricIpAddress,
  ospfIfMetricAddressLessIf,
  ospfIfMetricTOS }
      ::= { ospfIfMetricTable 1 }

OspfIfMetricEntry ::=
    SEQUENCE {
        ospfIfMetricIpAddress
            IpAddress,
        ospfIfMetricAddressLessIf
            Integer32,
        ospfIfMetricTOS
            TOSType,
        ospfIfMetricValue
            Metric,
        ospfIfMetricStatus
            RowStatus
              }

    ospfIfMetricIpAddress OBJECT-TYPE
        SYNTAX   IpAddress
        MAX-ACCESS   read-only
        STATUS   current
        DESCRIPTION
           "The IP address of this OSPF interface.  On row
           creation,  this  can  be  derived  from the in-
           stance."
       ::= { ospfIfMetricEntry 1 }

    ospfIfMetricAddressLessIf OBJECT-TYPE
        SYNTAX   Integer32
        MAX-ACCESS   read-only
        STATUS   current
        DESCRIPTION
           "For the purpose of easing  the  instancing  of
           addressed   and  addressless  interfaces;  This
           variable takes the value 0 on  interfaces  with
           IP  Addresses, and the value of ifIndex for in-
           terfaces having no IP Address.   On  row  crea-
           tion, this can be derived from the instance."
       ::= { ospfIfMetricEntry 2 }


    ospfIfMetricTOS OBJECT-TYPE
        SYNTAX   TOSType
        MAX-ACCESS   read-only
        STATUS   current
        DESCRIPTION
           "The type of service metric  being  referenced.
           On  row  creation, this can be derived from the
           instance."
       ::= { ospfIfMetricEntry 3 }


    ospfIfMetricValue OBJECT-TYPE
        SYNTAX   Metric
        MAX-ACCESS   read-create
        STATUS   current
        DESCRIPTION
           "The metric of using this type  of  service  on
           this interface.  The default value of the TOS 0
           Metric is 10^8 / ifSpeed."
       ::= { ospfIfMetricEntry 4 }

    ospfIfMetricStatus OBJECT-TYPE
        SYNTAX   RowStatus
        MAX-ACCESS   read-create
        STATUS   current
        DESCRIPTION
           "This variable displays the status of  the  en-
           try.  Setting it to 'invalid' has the effect of
           rendering it inoperative.  The internal  effect
           (row removal) is implementation dependent."
       ::= { ospfIfMetricEntry 5 }


--  OSPF Virtual Interface Table

--      The Virtual Interface Table describes the virtual
--      links that the OSPF Process is configured to
--      carry on.

    ospfVirtIfTable OBJECT-TYPE
        SYNTAX   SEQUENCE OF OspfVirtIfEntry
        MAX-ACCESS   not-accessible
        STATUS   current
        DESCRIPTION
           "Information about this router's virtual inter-
           faces."
       REFERENCE
          "OSPF Version  2,  Appendix  C.4   Virtual  link
          parameters"
      ::= { ospf 9 }


    ospfVirtIfEntry OBJECT-TYPE
        SYNTAX   OspfVirtIfEntry
        MAX-ACCESS   not-accessible
        STATUS   current
        DESCRIPTION
           "Information about a single Virtual Interface."
       INDEX { ospfVirtIfAreaId, ospfVirtIfNeighbor }
       ::= { ospfVirtIfTable 1 }

OspfVirtIfEntry ::=
    SEQUENCE {
        ospfVirtIfAreaId
            AreaID,
        ospfVirtIfNeighbor
            RouterID,
        ospfVirtIfTransitDelay
            UpToMaxAge,
        ospfVirtIfRetransInterval
            UpToMaxAge,
        ospfVirtIfHelloInterval
            HelloRange,
        ospfVirtIfRtrDeadInterval
            PositiveInteger,
        ospfVirtIfState
            INTEGER,
        ospfVirtIfEvents
            Counter32,
        ospfVirtIfAuthType
            INTEGER,
        ospfVirtIfAuthKey
            OCTET STRING,
        ospfVirtIfStatus
            RowStatus
              }

    ospfVirtIfAreaId OBJECT-TYPE
        SYNTAX   AreaID
        MAX-ACCESS   read-only
        STATUS   current
        DESCRIPTION
           "The  Transit  Area  that  the   Virtual   Link
           traverses.  By definition, this is not 0.0.0.0"
       ::= { ospfVirtIfEntry 1 }


    ospfVirtIfNeighbor OBJECT-TYPE
        SYNTAX   RouterID
        MAX-ACCESS   read-only
        STATUS   current
        DESCRIPTION
           "The Router ID of the Virtual Neighbor."
       ::= { ospfVirtIfEntry 2 }


    ospfVirtIfTransitDelay OBJECT-TYPE
        SYNTAX   UpToMaxAge
        MAX-ACCESS   read-create
        STATUS   current
        DESCRIPTION
           "The estimated number of seconds  it  takes  to
           transmit  a link- state update packet over this
           interface."
       DEFVAL { 1 }
       ::= { ospfVirtIfEntry 3 }

    ospfVirtIfRetransInterval OBJECT-TYPE
        SYNTAX   UpToMaxAge
        MAX-ACCESS   read-create
        STATUS   current
        DESCRIPTION
           "The number of seconds between  link-state  ad-
           vertisement  retransmissions,  for  adjacencies
           belonging to this  interface.   This  value  is
           also used when retransmitting database descrip-
           tion  and  link-state  request  packets.   This
           value  should  be well over the expected round-
           trip time."
       DEFVAL { 5 }
       ::= { ospfVirtIfEntry 4 }


    ospfVirtIfHelloInterval OBJECT-TYPE
        SYNTAX   HelloRange
        MAX-ACCESS   read-create
        STATUS   current
        DESCRIPTION
           "The length of time, in  seconds,  between  the
           Hello  packets that the router sends on the in-
           terface.  This value must be the same  for  the
           virtual neighbor."
       DEFVAL { 10 }
       ::= { ospfVirtIfEntry 5 }


    ospfVirtIfRtrDeadInterval OBJECT-TYPE
        SYNTAX   PositiveInteger
        MAX-ACCESS   read-create
        STATUS   current
        DESCRIPTION
           "The number of seconds that  a  router's  Hello
           packets  have  not been seen before it's neigh-
           bors declare the router down.  This  should  be
           some  multiple  of  the  Hello  interval.  This
           value must be the same for the  virtual  neigh-
           bor."
       DEFVAL { 60 }
       ::= { ospfVirtIfEntry 6 }


    ospfVirtIfState OBJECT-TYPE
        SYNTAX   INTEGER    {
                    down (1),            -- these use the same encoding
                    pointToPoint (4)     -- as the ospfIfTable
                  }
        MAX-ACCESS   read-only
        STATUS   current
        DESCRIPTION
           "OSPF virtual interface states."
       DEFVAL   { down }
       ::= { ospfVirtIfEntry 7 }


    ospfVirtIfEvents OBJECT-TYPE
        SYNTAX   Counter32
        MAX-ACCESS   read-only
        STATUS   current
        DESCRIPTION
           "The number of state changes or error events on
           this Virtual Link"
       ::= { ospfVirtIfEntry 8 }


    ospfVirtIfAuthKey OBJECT-TYPE
        SYNTAX   OCTET STRING (SIZE(0..256))
        MAX-ACCESS   read-create
        STATUS   current
        DESCRIPTION
           "If Authentication Type is simplePassword,  the
           device  will left adjust and zero fill to 8 oc-
           tets.

           Note that unauthenticated  interfaces  need  no
           authentication key, and simple password authen-
           tication cannot use a key of more  than  8  oc-
           tets.  Larger keys are useful only with authen-
           tication mechanisms not specified in this docu-
           ment.

           When  read,  ospfVifAuthKey  always  returns  a
           string of length zero."
       REFERENCE
          "OSPF Version 2, Section 9  The  Interface  Data
          Structure"
      DEFVAL   { '0000000000000000'H }    -- 0.0.0.0.0.0.0.0
      ::= { ospfVirtIfEntry 9 }


    ospfVirtIfStatus OBJECT-TYPE
        SYNTAX   RowStatus
        MAX-ACCESS   read-create
        STATUS   current
        DESCRIPTION
           "This variable displays the status of  the  en-
           try.  Setting it to 'invalid' has the effect of
           rendering it inoperative.  The internal  effect
           (row removal) is implementation dependent."
       ::= { ospfVirtIfEntry 10 }


    ospfVirtIfAuthType OBJECT-TYPE
        SYNTAX   INTEGER (0..255)
                    -- none (0),
                    -- simplePassword (1)
                    -- md5 (2)
                    -- reserved for specification by IANA (> 2)
        MAX-ACCESS   read-create
        STATUS   current
        DESCRIPTION
           "The authentication type specified for a virtu-
           al  interface.  Additional authentication types
           may be assigned locally."
       REFERENCE
          "OSPF Version 2, Appendix E Authentication"
      DEFVAL { 0 }        -- no authentication, by default
      ::= { ospfVirtIfEntry 11 }


--  OSPF Neighbor Table

--      The OSPF Neighbor Table describes all neighbors in
--      the locality of the subject router.

    ospfNbrTable OBJECT-TYPE
        SYNTAX   SEQUENCE OF OspfNbrEntry
        MAX-ACCESS   not-accessible
        STATUS   current
        DESCRIPTION
           "A table of non-virtual neighbor information."
       REFERENCE
          "OSPF Version 2, Section 10  The  Neighbor  Data
          Structure"
      ::= { ospf 10 }


    ospfNbrEntry OBJECT-TYPE
        SYNTAX   OspfNbrEntry
        MAX-ACCESS   not-accessible
        STATUS   current
        DESCRIPTION
           "The information regarding a single neighbor."
       REFERENCE
          "OSPF Version 2, Section 10  The  Neighbor  Data
          Structure"
      INDEX { ospfNbrIpAddr, ospfNbrAddressLessIndex }
      ::= { ospfNbrTable 1 }

OspfNbrEntry ::=
    SEQUENCE {
        ospfNbrIpAddr
            IpAddress,
        ospfNbrAddressLessIndex
            InterfaceIndex,
        ospfNbrRtrId
            RouterID,
        ospfNbrOptions
            Integer32,
        ospfNbrPriority
            DesignatedRouterPriority,
        ospfNbrState
            INTEGER,
        ospfNbrEvents
            Counter32,
        ospfNbrLsRetransQLen
            Gauge32,
        ospfNbmaNbrStatus
            RowStatus,
        ospfNbmaNbrPermanence
            INTEGER,
        ospfNbrHelloSuppressed
            TruthValue
              }

    ospfNbrIpAddr OBJECT-TYPE
        SYNTAX   IpAddress
        MAX-ACCESS   read-only
        STATUS   current
        DESCRIPTION
           "The IP address this neighbor is using  in  its
           IP  Source  Address.  Note that, on addressless
           links, this will not be 0.0.0.0,  but  the  ad-
           dress of another of the neighbor's interfaces."
       ::= { ospfNbrEntry 1 }


    ospfNbrAddressLessIndex OBJECT-TYPE
        SYNTAX   InterfaceIndex
        MAX-ACCESS   read-only
        STATUS   current
        DESCRIPTION
           "On an interface having an  IP  Address,  zero.
           On  addressless  interfaces,  the corresponding
           value of ifIndex in the Internet Standard  MIB.
           On  row  creation, this can be derived from the
           instance."
       ::= { ospfNbrEntry 2 }


    ospfNbrRtrId OBJECT-TYPE
        SYNTAX   RouterID
        MAX-ACCESS   read-only
        STATUS   current
        DESCRIPTION
           "A 32-bit integer (represented as a type  IpAd-
           dress)  uniquely  identifying  the  neighboring
           router in the Autonomous System."
       DEFVAL   { '00000000'H }    -- 0.0.0.0
       ::= { ospfNbrEntry 3 }


    ospfNbrOptions OBJECT-TYPE
        SYNTAX   Integer32
        MAX-ACCESS   read-only
        STATUS   current
        DESCRIPTION
           "A Bit Mask corresponding to the neighbor's op-
           tions field.

           Bit 0, if set, indicates that the  system  will
           operate  on  Type of Service metrics other than
           TOS 0.  If zero, the neighbor will  ignore  all
           metrics except the TOS 0 metric.

           Bit 1, if set, indicates  that  the  associated
           area  accepts and operates on external informa-
           tion; if zero, it is a stub area.

           Bit 2, if set, indicates that the system is ca-
           pable  of routing IP Multicast datagrams; i.e.,
           that it implements the Multicast Extensions  to
           OSPF.

           Bit 3, if set, indicates  that  the  associated
           area  is  an  NSSA.  These areas are capable of
           carrying type 7 external advertisements,  which
           are  translated into type 5 external advertise-
           ments at NSSA borders."
       REFERENCE
          "OSPF Version 2, Section 12.1.2 Options"
      DEFVAL { 0 }
      ::= { ospfNbrEntry 4 }


    ospfNbrPriority OBJECT-TYPE
        SYNTAX   DesignatedRouterPriority
        MAX-ACCESS   read-create
        STATUS   current
        DESCRIPTION
           "The priority of this neighbor in the designat-
           ed router election algorithm.  The value 0 sig-
           nifies that the neighbor is not eligible to be-
           come  the  designated router on this particular
           network."
       DEFVAL { 1 }
       ::= { ospfNbrEntry 5 }


    ospfNbrState OBJECT-TYPE
        SYNTAX   INTEGER    {
                    down (1),
                    attempt (2),
                    init (3),
                    twoWay (4),
                    exchangeStart (5),
                    exchange (6),
                    loading (7),
                    full (8)
                  }
        MAX-ACCESS   read-only
        STATUS   current
        DESCRIPTION
           "The State of the relationship with this Neigh-
           bor."
       REFERENCE
          "OSPF Version 2, Section 10.1 Neighbor States"
      DEFVAL   { down }
      ::= { ospfNbrEntry 6 }


    ospfNbrEvents OBJECT-TYPE
        SYNTAX   Counter32
        MAX-ACCESS   read-only
        STATUS   current
        DESCRIPTION
           "The number of times this neighbor relationship
           has changed state, or an error has occurred."
       ::= { ospfNbrEntry 7 }


    ospfNbrLsRetransQLen OBJECT-TYPE
        SYNTAX   Gauge32
        MAX-ACCESS   read-only
        STATUS   current
        DESCRIPTION
           "The  current  length  of  the   retransmission
           queue."
       ::= { ospfNbrEntry 8 }


    ospfNbmaNbrStatus OBJECT-TYPE
        SYNTAX   RowStatus
        MAX-ACCESS   read-create
        STATUS   current
        DESCRIPTION
           "This variable displays the status of  the  en-
           try.  Setting it to 'invalid' has the effect of
           rendering it inoperative.  The internal  effect
           (row removal) is implementation dependent."
       ::= { ospfNbrEntry 9 }


    ospfNbmaNbrPermanence OBJECT-TYPE
        SYNTAX   INTEGER    {
                    dynamic (1),        -- learned through protocol
                    permanent (2)       -- configured address
                  }
        MAX-ACCESS   read-only
        STATUS   current
        DESCRIPTION
           "This variable displays the status of  the  en-
           try.   'dynamic'  and  'permanent' refer to how
           the neighbor became known."
       DEFVAL { permanent }
       ::= { ospfNbrEntry 10 }


    ospfNbrHelloSuppressed OBJECT-TYPE
        SYNTAX   TruthValue
        MAX-ACCESS   read-only
        STATUS   current
        DESCRIPTION
           "Indicates whether Hellos are being  suppressed
           to the neighbor"
       ::= { ospfNbrEntry 11 }


--  OSPF Virtual Neighbor Table

--      This table describes all virtual neighbors.
--      Since Virtual Links are configured in the
--      virtual interface table, this table is read-only.

    ospfVirtNbrTable OBJECT-TYPE
        SYNTAX   SEQUENCE OF OspfVirtNbrEntry
        MAX-ACCESS   not-accessible
        STATUS   current
        DESCRIPTION
           "A table of virtual neighbor information."
       REFERENCE
          "OSPF Version 2, Section 15  Virtual Links"
      ::= { ospf 11 }


    ospfVirtNbrEntry OBJECT-TYPE
        SYNTAX   OspfVirtNbrEntry
        MAX-ACCESS   not-accessible
        STATUS   current
        DESCRIPTION
           "Virtual neighbor information."
       INDEX { ospfVirtNbrArea, ospfVirtNbrRtrId }
       ::= { ospfVirtNbrTable 1 }

OspfVirtNbrEntry ::=
    SEQUENCE {
        ospfVirtNbrArea
            AreaID,
        ospfVirtNbrRtrId
            RouterID,
        ospfVirtNbrIpAddr
            IpAddress,
        ospfVirtNbrOptions
            Integer32,
        ospfVirtNbrState
            INTEGER,
        ospfVirtNbrEvents
            Counter32,
        ospfVirtNbrLsRetransQLen
            Gauge32,
        ospfVirtNbrHelloSuppressed
                TruthValue
              }

    ospfVirtNbrArea OBJECT-TYPE
        SYNTAX   AreaID
        MAX-ACCESS   read-only
        STATUS   current
        DESCRIPTION
           "The Transit Area Identifier."
       ::= { ospfVirtNbrEntry 1 }


    ospfVirtNbrRtrId OBJECT-TYPE
        SYNTAX   RouterID
        MAX-ACCESS   read-only
        STATUS   current
        DESCRIPTION
           "A  32-bit  integer  uniquely  identifying  the
           neighboring router in the Autonomous System."
       ::= { ospfVirtNbrEntry 2 }


    ospfVirtNbrIpAddr OBJECT-TYPE
        SYNTAX   IpAddress
        MAX-ACCESS   read-only
        STATUS   current
        DESCRIPTION
           "The IP address this Virtual  Neighbor  is  us-
           ing."
       ::= { ospfVirtNbrEntry 3 }


    ospfVirtNbrOptions OBJECT-TYPE
        SYNTAX   Integer32
        MAX-ACCESS   read-only
        STATUS   current
        DESCRIPTION
           "A Bit Mask corresponding to the neighbor's op-
           tions field.

           Bit 1, if set, indicates that the  system  will
           operate  on  Type of Service metrics other than
           TOS 0.  If zero, the neighbor will  ignore  all
           metrics except the TOS 0 metric.

           Bit 2, if set, indicates  that  the  system  is
           Network  Multicast  capable; ie, that it imple-
           ments OSPF Multicast Routing."
       ::= { ospfVirtNbrEntry 4 }

    ospfVirtNbrState OBJECT-TYPE
        SYNTAX   INTEGER    {
                    down (1),
                    attempt (2),
                    init (3),
                    twoWay (4),
                    exchangeStart (5),
                    exchange (6),
                    loading (7),
                    full (8)
                  }
        MAX-ACCESS   read-only
        STATUS   current
        DESCRIPTION
           "The state of the  Virtual  Neighbor  Relation-
           ship."
       ::= { ospfVirtNbrEntry 5 }


    ospfVirtNbrEvents OBJECT-TYPE
        SYNTAX   Counter32
        MAX-ACCESS   read-only
        STATUS   current
        DESCRIPTION
           "The number of  times  this  virtual  link  has
           changed its state, or an error has occurred."
       ::= { ospfVirtNbrEntry 6 }


    ospfVirtNbrLsRetransQLen OBJECT-TYPE
        SYNTAX   Gauge32
        MAX-ACCESS   read-only
        STATUS   current
        DESCRIPTION
           "The  current  length  of  the   retransmission
           queue."
       ::= { ospfVirtNbrEntry 7 }


    ospfVirtNbrHelloSuppressed OBJECT-TYPE
        SYNTAX   TruthValue
        MAX-ACCESS   read-only
        STATUS   current
        DESCRIPTION
           "Indicates whether Hellos are being  suppressed
           to the neighbor"
       ::= { ospfVirtNbrEntry 8 }

--  OSPF Link State Database, External

--      The Link State Database contains the Link State
--      Advertisements from throughout the areas that the
--      device is attached to.

--             This table is identical to the OSPF LSDB Table in
--      format, but contains only External Link State
--             Advertisements.  The purpose is to allow external
--      LSAs to be displayed once for the router rather
--      than once in each non-stub area.

    ospfExtLsdbTable OBJECT-TYPE
        SYNTAX   SEQUENCE OF OspfExtLsdbEntry
        MAX-ACCESS   not-accessible
        STATUS   current
        DESCRIPTION
           "The OSPF Process's Links State Database."
       REFERENCE
          "OSPF Version 2, Section 12  Link  State  Adver-
          tisements"
      ::= { ospf 12 }


    ospfExtLsdbEntry OBJECT-TYPE
        SYNTAX   OspfExtLsdbEntry
        MAX-ACCESS   not-accessible
        STATUS   current
        DESCRIPTION
           "A single Link State Advertisement."
       INDEX { ospfExtLsdbType, ospfExtLsdbLsid, ospfExtLsdbRouterId }
       ::= { ospfExtLsdbTable 1 }

OspfExtLsdbEntry ::=
    SEQUENCE {
        ospfExtLsdbType
            INTEGER,
        ospfExtLsdbLsid
            IpAddress,
        ospfExtLsdbRouterId
            RouterID,
        ospfExtLsdbSequence
            Integer32,
        ospfExtLsdbAge
            Integer32,
        ospfExtLsdbChecksum
            Integer32,
        ospfExtLsdbAdvertisement
            OCTET STRING
              }

    ospfExtLsdbType OBJECT-TYPE
        SYNTAX   INTEGER    {
                    asExternalLink (5)
                  }
        MAX-ACCESS   read-only
        STATUS   current
        DESCRIPTION
           "The type  of  the  link  state  advertisement.
           Each  link state type has a separate advertise-
           ment format."
       REFERENCE
          "OSPF Version 2, Appendix A.4.1 The  Link  State
          Advertisement header"
      ::= { ospfExtLsdbEntry 1 }


    ospfExtLsdbLsid OBJECT-TYPE
        SYNTAX   IpAddress
        MAX-ACCESS   read-only
        STATUS   current
        DESCRIPTION
           "The Link State ID is an LS Type Specific field
           containing either a Router ID or an IP Address;
           it identifies the piece of the  routing  domain
           that is being described by the advertisement."
       REFERENCE
          "OSPF Version 2, Section 12.1.4 Link State ID"
      ::= { ospfExtLsdbEntry 2 }


    ospfExtLsdbRouterId OBJECT-TYPE
        SYNTAX   RouterID
        MAX-ACCESS   read-only
        STATUS   current
        DESCRIPTION
           "The 32 bit number that uniquely identifies the
           originating router in the Autonomous System."
       REFERENCE
          "OSPF Version 2, Appendix C.1 Global parameters"
      ::= { ospfExtLsdbEntry 3 }

--  Note that the OSPF Sequence Number is a 32 bit signed
--  integer.  It starts with the value '80000001'h,
--  or -'7FFFFFFF'h, and increments until '7FFFFFFF'h
--  Thus, a typical sequence number will be very negative.

    ospfExtLsdbSequence OBJECT-TYPE
        SYNTAX   Integer32
        MAX-ACCESS   read-only
        STATUS   current
        DESCRIPTION
           "The sequence number field is a  signed  32-bit
           integer.   It  is used to detect old and dupli-
           cate link state advertisements.  The  space  of
           sequence  numbers  is  linearly  ordered.   The
           larger the sequence number the more recent  the
           advertisement."
       REFERENCE
          "OSPF Version  2,  Section  12.1.6  LS  sequence
          number"
      ::= { ospfExtLsdbEntry 4 }


    ospfExtLsdbAge OBJECT-TYPE
        SYNTAX   Integer32    -- Should be 0..MaxAge
        MAX-ACCESS   read-only
        STATUS   current
        DESCRIPTION
           "This field is the age of the link state adver-
           tisement in seconds."
       REFERENCE
          "OSPF Version 2, Section 12.1.1 LS age"
      ::= { ospfExtLsdbEntry 5 }


    ospfExtLsdbChecksum OBJECT-TYPE
        SYNTAX   Integer32
        MAX-ACCESS   read-only
        STATUS   current
        DESCRIPTION
           "This field is the  checksum  of  the  complete
           contents  of  the  advertisement, excepting the
           age field.  The age field is excepted  so  that
           an   advertisement's  age  can  be  incremented
           without updating the  checksum.   The  checksum
           used  is  the same that is used for ISO connec-
           tionless datagrams; it is commonly referred  to
           as the Fletcher checksum."
       REFERENCE
          "OSPF Version 2, Section 12.1.7 LS checksum"
      ::= { ospfExtLsdbEntry 6 }


    ospfExtLsdbAdvertisement OBJECT-TYPE
        SYNTAX   OCTET STRING (SIZE(36))
        MAX-ACCESS   read-only
        STATUS   current
        DESCRIPTION
           "The entire Link State Advertisement, including
           its header."
       REFERENCE
          "OSPF Version 2, Section 12  Link  State  Adver-
          tisements"
      ::= { ospfExtLsdbEntry 7 }


--  OSPF Use of the CIDR Route Table

ospfRouteGroup           OBJECT IDENTIFIER ::= { ospf 13 }

-- The IP Forwarding Table defines a number of objects for use by
-- the routing protocol to externalize its information.  Most of
-- the variables (ipForwardDest, ipForwardMask, ipForwardPolicy,
-- ipForwardNextHop, ipForwardIfIndex, ipForwardType,
-- ipForwardProto, ipForwardAge, and ipForwardNextHopAS) are
-- defined there.

-- Those that leave some discretion are defined here.

-- ipCidrRouteProto is, of course, ospf (13).

-- ipCidrRouteAge is the time since the route was first calculated,
-- as opposed to the time since the last SPF run.

-- ipCidrRouteInfo is an OBJECT IDENTIFIER for use by the routing
-- protocol.  The following values shall be found there depending
-- on the way the route was calculated.

ospfIntraArea      OBJECT IDENTIFIER ::= { ospfRouteGroup 1 }
ospfInterArea      OBJECT IDENTIFIER ::= { ospfRouteGroup 2 }
ospfExternalType1  OBJECT IDENTIFIER ::= { ospfRouteGroup 3 }
ospfExternalType2  OBJECT IDENTIFIER ::= { ospfRouteGroup 4 }

-- ipCidrRouteMetric1 is, by definition, the primary routing
-- metric.  Therefore, it should be the metric that route
-- selection is based on.  For intra-area and inter-area routes,
-- it is an OSPF metric.  For External Type 1 (comparable value)
-- routes, it is an OSPF metric plus the External Metric.  For
-- external Type 2 (non-comparable value) routes, it is the
-- external metric.

-- ipCidrRouteMetric2 is, by definition, a secondary routing
-- metric.  Therefore, it should be the metric that breaks a tie
-- among routes having equal metric1 values and the same
-- calculation rule.  For intra-area, inter-area routes, and
-- External Type 1 (comparable value) routes, it is unused.  For
-- external Type 2 (non-comparable value) routes, it is the metric
-- to the AS border router.

-- ipCidrRouteMetric3, ipCidrRouteMetric4, and ipCidrRouteMetric5 are
-- unused.

--
--      The OSPF Area Aggregate Table
--
--      This table replaces the OSPF Area Summary Table, being an
--      extension of that for CIDR routers.

    ospfAreaAggregateTable OBJECT-TYPE
        SYNTAX   SEQUENCE OF OspfAreaAggregateEntry
        MAX-ACCESS   not-accessible
        STATUS   current
        DESCRIPTION
           "A range of IP addresses  specified  by  an  IP
           address/IP  network  mask  pair.   For example,
           class B address range of X.X.X.X with a network
           mask  of  255.255.0.0 includes all IP addresses
           from X.X.0.0  to  X.X.255.255.   Note  that  if
           ranges  are configured such that one range sub-
           sumes  another  range  (e.g.,   10.0.0.0   mask
           255.0.0.0  and  10.1.0.0 mask 255.255.0.0), the
           most specific match is the preferred one."
       REFERENCE
          "OSPF Version 2, Appendix C.2  Area parameters"
      ::= { ospf 14 }


    ospfAreaAggregateEntry OBJECT-TYPE
        SYNTAX   OspfAreaAggregateEntry
        MAX-ACCESS   not-accessible
        STATUS   current
        DESCRIPTION
           "A range of IP addresses  specified  by  an  IP
           address/IP  network  mask  pair.   For example,
           class B address range of X.X.X.X with a network
           mask  of  255.255.0.0 includes all IP addresses
           from X.X.0.0  to  X.X.255.255.   Note  that  if
           ranges are range configured such that one range
           subsumes another  range  (e.g.,  10.0.0.0  mask
           255.0.0.0  and  10.1.0.0 mask 255.255.0.0), the
           most specific match is the preferred one."
       REFERENCE
          "OSPF Version 2, Appendix C.2  Area parameters"
      INDEX { ospfAreaAggregateAreaID, ospfAreaAggregateLsdbType,
              ospfAreaAggregateNet, ospfAreaAggregateMask }
      ::= { ospfAreaAggregateTable 1 }


OspfAreaAggregateEntry ::=
    SEQUENCE {
        ospfAreaAggregateAreaID
            AreaID,
        ospfAreaAggregateLsdbType
            INTEGER,
        ospfAreaAggregateNet
            IpAddress,
        ospfAreaAggregateMask
            IpAddress,
        ospfAreaAggregateStatus
            RowStatus,
        ospfAreaAggregateEffect
            INTEGER
              }

    ospfAreaAggregateAreaID OBJECT-TYPE
        SYNTAX   AreaID
        MAX-ACCESS   read-only
        STATUS   current
        DESCRIPTION
           "The Area the Address Aggregate is to be  found
           within."
       REFERENCE
          "OSPF Version 2, Appendix C.2 Area parameters"
      ::= { ospfAreaAggregateEntry 1 }


    ospfAreaAggregateLsdbType OBJECT-TYPE
        SYNTAX   INTEGER    {
                    summaryLink (3),
                    nssaExternalLink (7)
                  }
        MAX-ACCESS   read-only
        STATUS   current
        DESCRIPTION
           "The type of the Address Aggregate.  This field
           specifies  the  Lsdb type that this Address Ag-
           gregate applies to."
       REFERENCE
          "OSPF Version 2, Appendix A.4.1 The  Link  State
          Advertisement header"
      ::= { ospfAreaAggregateEntry 2 }


    ospfAreaAggregateNet OBJECT-TYPE
        SYNTAX   IpAddress
        MAX-ACCESS   read-only
        STATUS   current
        DESCRIPTION
           "The IP Address of the Net or Subnet  indicated
           by the range."
       REFERENCE
          "OSPF Version 2, Appendix C.2 Area parameters"
      ::= { ospfAreaAggregateEntry 3 }


    ospfAreaAggregateMask OBJECT-TYPE
        SYNTAX   IpAddress
        MAX-ACCESS   read-only
        STATUS   current
        DESCRIPTION
           "The Subnet Mask that pertains to  the  Net  or
           Subnet."
       REFERENCE
          "OSPF Version 2, Appendix C.2 Area parameters"
      ::= { ospfAreaAggregateEntry 4 }


    ospfAreaAggregateStatus OBJECT-TYPE
        SYNTAX   RowStatus
        MAX-ACCESS   read-create
        STATUS   current
        DESCRIPTION
           "This variable displays the status of  the  en-
           try.  Setting it to 'invalid' has the effect of
           rendering it inoperative.  The internal  effect
           (row removal) is implementation dependent."
       ::= { ospfAreaAggregateEntry 5 }


    ospfAreaAggregateEffect OBJECT-TYPE
        SYNTAX   INTEGER    {
                    advertiseMatching (1),
                    doNotAdvertiseMatching (2)
                  }
        MAX-ACCESS   read-create
        STATUS   current
        DESCRIPTION
           "Subnets subsumed by ranges either trigger  the
           advertisement  of  the indicated aggregate (ad-
           vertiseMatching), or result in the subnet's not
           being advertised at all outside the area."
       DEFVAL   { advertiseMatching }
       ::= { ospfAreaAggregateEntry 6 }


-- conformance information

ospfConformance OBJECT IDENTIFIER ::= { ospf 15 }

ospfGroups      OBJECT IDENTIFIER ::= { ospfConformance 1 }
ospfCompliances OBJECT IDENTIFIER ::= { ospfConformance 2 }

-- compliance statements

    ospfCompliance MODULE-COMPLIANCE
        STATUS  current
        DESCRIPTION
           "The compliance statement "
       MODULE  -- this module
       MANDATORY-GROUPS {
                    ospfBasicGroup,
                    ospfAreaGroup,
                    ospfStubAreaGroup,
                    ospfIfGroup,
                    ospfIfMetricGroup,
                    ospfVirtIfGroup,
                    ospfNbrGroup,
                    ospfVirtNbrGroup,
                    ospfAreaAggregateGroup
           }
       ::= { ospfCompliances 1 }


-- units of conformance

    ospfBasicGroup    OBJECT-GROUP
        OBJECTS {
                    ospfRouterId,
                    ospfAdminStat,
                    ospfVersionNumber,
                    ospfAreaBdrRtrStatus,
                    ospfASBdrRtrStatus,
                    ospfExternLsaCount,
                    ospfExternLsaCksumSum,
                    ospfTOSSupport,
                    ospfOriginateNewLsas,
                    ospfRxNewLsas,
                    ospfExtLsdbLimit,
                    ospfMulticastExtensions,
                    ospfExitOverflowInterval,
                    ospfDemandExtensions
        }
        STATUS  current
        DESCRIPTION
           "These objects are required for OSPF systems."
       ::= { ospfGroups 1 }


    ospfAreaGroup    OBJECT-GROUP
        OBJECTS {
                    ospfAreaId,
                    ospfImportAsExtern,
                    ospfSpfRuns,
                    ospfAreaBdrRtrCount,
                    ospfAsBdrRtrCount,
                    ospfAreaLsaCount,
                    ospfAreaLsaCksumSum,
                    ospfAreaSummary,
                    ospfAreaStatus
        }
        STATUS  current
        DESCRIPTION
           "These objects are required  for  OSPF  systems
           supporting areas."
       ::= { ospfGroups 2 }


    ospfStubAreaGroup    OBJECT-GROUP
        OBJECTS {
                    ospfStubAreaId,
                    ospfStubTOS,
                    ospfStubMetric,
                    ospfStubStatus,
                    ospfStubMetricType
        }
        STATUS  current
        DESCRIPTION
           "These objects are required  for  OSPF  systems
           supporting stub areas."
       ::= { ospfGroups 3 }

    ospfLsdbGroup    OBJECT-GROUP
        OBJECTS {
                    ospfLsdbAreaId,
                    ospfLsdbType,
                    ospfLsdbLsid,
                    ospfLsdbRouterId,
                    ospfLsdbSequence,
                    ospfLsdbAge,
                    ospfLsdbChecksum,
                    ospfLsdbAdvertisement
        }
        STATUS  current
        DESCRIPTION
           "These objects are required  for  OSPF  systems
           that display their link state database."
       ::= { ospfGroups 4 }


    ospfAreaRangeGroup    OBJECT-GROUP
        OBJECTS {
                    ospfAreaRangeAreaId,
                    ospfAreaRangeNet,
                    ospfAreaRangeMask,
                    ospfAreaRangeStatus,
                    ospfAreaRangeEffect
        }
        STATUS  obsolete
        DESCRIPTION
           "These objects are required for  non-CIDR  OSPF
           systems that support multiple areas."
       ::= { ospfGroups 5 }


    ospfHostGroup    OBJECT-GROUP
        OBJECTS {
                    ospfHostIpAddress,
                    ospfHostTOS,
                    ospfHostMetric,
                    ospfHostStatus,
                    ospfHostAreaID
        }
        STATUS  current
        DESCRIPTION
           "These objects are required  for  OSPF  systems
           that support attached hosts."
       ::= { ospfGroups 6 }

    ospfIfGroup    OBJECT-GROUP
        OBJECTS {
                    ospfIfIpAddress,
                    ospfAddressLessIf,
                    ospfIfAreaId,
                    ospfIfType,
                    ospfIfAdminStat,
                    ospfIfRtrPriority,
                    ospfIfTransitDelay,
                    ospfIfRetransInterval,
                    ospfIfHelloInterval,
                    ospfIfRtrDeadInterval,
                    ospfIfPollInterval,
                    ospfIfState,
                    ospfIfDesignatedRouter,
                    ospfIfBackupDesignatedRouter,
                    ospfIfEvents,
                    ospfIfAuthType,
                    ospfIfAuthKey,
                    ospfIfStatus,
                    ospfIfMulticastForwarding,
                    ospfIfDemand
        }
        STATUS  current
        DESCRIPTION
           "These objects are required for OSPF systems."
       ::= { ospfGroups 7 }


    ospfIfMetricGroup    OBJECT-GROUP
        OBJECTS {
                    ospfIfMetricIpAddress,
                    ospfIfMetricAddressLessIf,
                    ospfIfMetricTOS,
                    ospfIfMetricValue,
                    ospfIfMetricStatus
        }
        STATUS  current
        DESCRIPTION
           "These objects are required for OSPF systems."
       ::= { ospfGroups 8 }


    ospfVirtIfGroup    OBJECT-GROUP
        OBJECTS {
                    ospfVirtIfAreaId,
                    ospfVirtIfNeighbor,
                    ospfVirtIfTransitDelay,
                    ospfVirtIfRetransInterval,
                    ospfVirtIfHelloInterval,
                    ospfVirtIfRtrDeadInterval,
                    ospfVirtIfState,
                    ospfVirtIfEvents,
                    ospfVirtIfAuthType,
                    ospfVirtIfAuthKey,
                    ospfVirtIfStatus
        }
        STATUS  current
        DESCRIPTION
           "These objects are required for OSPF systems."
       ::= { ospfGroups 9 }


    ospfNbrGroup    OBJECT-GROUP
        OBJECTS {
                    ospfNbrIpAddr,
                    ospfNbrAddressLessIndex,
                    ospfNbrRtrId,
                    ospfNbrOptions,
                    ospfNbrPriority,
                    ospfNbrState,
                    ospfNbrEvents,
                    ospfNbrLsRetransQLen,
                    ospfNbmaNbrStatus,
                    ospfNbmaNbrPermanence,
                    ospfNbrHelloSuppressed
        }
        STATUS  current
        DESCRIPTION
           "These objects are required for OSPF systems."
       ::= { ospfGroups 10 }


    ospfVirtNbrGroup    OBJECT-GROUP
        OBJECTS {
                    ospfVirtNbrArea,
                    ospfVirtNbrRtrId,
                    ospfVirtNbrIpAddr,
                    ospfVirtNbrOptions,
                    ospfVirtNbrState,
                    ospfVirtNbrEvents,
                    ospfVirtNbrLsRetransQLen,
                    ospfVirtNbrHelloSuppressed
        }
        STATUS  current
        DESCRIPTION
           "These objects are required for OSPF systems."
       ::= { ospfGroups 11 }


    ospfExtLsdbGroup    OBJECT-GROUP
        OBJECTS {
                    ospfExtLsdbType,
                    ospfExtLsdbLsid,
                    ospfExtLsdbRouterId,
                    ospfExtLsdbSequence,
                    ospfExtLsdbAge,
                    ospfExtLsdbChecksum,
                    ospfExtLsdbAdvertisement
        }
        STATUS  current
        DESCRIPTION
           "These objects are required  for  OSPF  systems
           that display their link state database."
       ::= { ospfGroups 12 }


    ospfAreaAggregateGroup    OBJECT-GROUP
        OBJECTS {
                    ospfAreaAggregateAreaID,
                    ospfAreaAggregateLsdbType,
                    ospfAreaAggregateNet,
                    ospfAreaAggregateMask,
                    ospfAreaAggregateStatus,
                    ospfAreaAggregateEffect
        }
        STATUS  current
        DESCRIPTION
           "These objects are required for OSPF systems."
       ::= { ospfGroups 13 }

END

OSPF-TRAP-MIB DEFINITIONS ::= BEGIN

    IMPORTS
            MODULE-IDENTITY, OBJECT-TYPE, NOTIFICATION-TYPE, IpAddress
                FROM SNMPv2-SMI
            MODULE-COMPLIANCE, OBJECT-GROUP
                FROM SNMPv2-CONF
            ospfRouterId, ospfIfIpAddress, ospfAddressLessIf, ospfIfState,
            ospfVirtIfAreaId, ospfVirtIfNeighbor, ospfVirtIfState,
            ospfNbrIpAddr, ospfNbrAddressLessIndex, ospfNbrRtrId,
            ospfNbrState, ospfVirtNbrArea, ospfVirtNbrRtrId, ospfVirtNbrState,
            ospfLsdbType, ospfLsdbLsid, ospfLsdbRouterId, ospfLsdbAreaId,
            ospfExtLsdbLimit, ospf
                FROM OSPF-MIB;

    ospfTrap MODULE-IDENTITY
           LAST-UPDATED "9501201225Z" -- Fri Jan 20 12:25:50 PST 1995
           ORGANIZATION "IETF OSPF Working Group"
           CONTACT-INFO
           "                      Fred Baker
           Postal:                Cisco Systems
                                  519 Lado Drive
                                  Santa Barbara, California 93111
           Tel:                   +1 805 681 0115
           E-Mail:                fred@cisco.com

                                  Rob Coltun
           Postal:                RainbowBridge Communications
           Tel:                   (301) 340-9416
           E-Mail:                rcoltun@rainbow-bridge.com"
       DESCRIPTION
          "The MIB module to describe traps for  the  OSPF
          Version 2 Protocol."
      ::= { ospf 16 }

-- Trap Support Objects

--         The following are support objects for the OSPF traps.

ospfTrapControl OBJECT IDENTIFIER ::= { ospfTrap 1 }
ospfTraps OBJECT IDENTIFIER ::= { ospfTrap 2 }

    ospfSetTrap OBJECT-TYPE
        SYNTAX   OCTET STRING (SIZE(4))
        MAX-ACCESS   read-write
        STATUS   current
        DESCRIPTION
           "A four-octet string serving as a bit  map  for
           the trap events defined by the OSPF traps. This
           object is used to enable and  disable  specific
           OSPF   traps   where  a  1  in  the  bit  field
           represents enabled.  The right-most bit  (least
           significant) represents trap 0."
       ::= { ospfTrapControl 1 }


    ospfConfigErrorType OBJECT-TYPE
        SYNTAX   INTEGER   {
                    badVersion (1),
                    areaMismatch (2),
                    unknownNbmaNbr (3), -- Router is Dr eligible
                    unknownVirtualNbr (4),
                    authTypeMismatch(5),
                    authFailure (6),
                    netMaskMismatch (7),
                    helloIntervalMismatch (8),
                    deadIntervalMismatch (9),
                    optionMismatch (10) }
        MAX-ACCESS   read-only
        STATUS   current
        DESCRIPTION
           "Potential types  of  configuration  conflicts.
           Used  by the ospfConfigError and ospfConfigVir-
           tError traps."
   ::= { ospfTrapControl 2 }


    ospfPacketType OBJECT-TYPE
        SYNTAX   INTEGER   {
                    hello (1),
                    dbDescript (2),
                    lsReq (3),
                    lsUpdate (4),
                    lsAck (5) }
        MAX-ACCESS   read-only
        STATUS   current
        DESCRIPTION
           "OSPF packet types."
   ::= { ospfTrapControl 3 }


    ospfPacketSrc OBJECT-TYPE
        SYNTAX   IpAddress
        MAX-ACCESS   read-only
        STATUS   current
        DESCRIPTION
           "The IP address of an inbound packet that  can-
           not be identified by a neighbor instance."
       ::= { ospfTrapControl 4 }


-- Traps


    ospfIfStateChange NOTIFICATION-TYPE
        OBJECTS {
                    ospfRouterId, -- The originator of the trap
                    ospfIfIpAddress,
                    ospfAddressLessIf,
                    ospfIfState   -- The new state
                  }
        STATUS             current
        DESCRIPTION
           "An ospfIfStateChange trap signifies that there
           has been a change in the state of a non-virtual
           OSPF interface. This trap should  be  generated
           when  the interface state regresses (e.g., goes
           from Dr to Down) or progresses  to  a  terminal
           state  (i.e.,  Point-to-Point, DR Other, Dr, or
           Backup)."
   ::= { ospfTraps 16 }


    ospfVirtIfStateChange NOTIFICATION-TYPE
        OBJECTS {
                    ospfRouterId, -- The originator of the trap
                    ospfVirtIfAreaId,
                    ospfVirtIfNeighbor,
                    ospfVirtIfState  -- The new state
                  }
        STATUS             current
        DESCRIPTION
           "An ospfIfStateChange trap signifies that there
           has  been a change in the state of an OSPF vir-
           tual interface.
           This trap should be generated when  the  inter-
           face  state  regresses  (e.g., goes from Point-
           to-Point to Down) or progresses to  a  terminal
           state (i.e., Point-to-Point)."
   ::= { ospfTraps 1 }


    ospfNbrStateChange NOTIFICATION-TYPE
        OBJECTS {
                    ospfRouterId, -- The originator of the trap
                    ospfNbrIpAddr,
                    ospfNbrAddressLessIndex,
                    ospfNbrRtrId,
                    ospfNbrState  -- The new state
                  }
        STATUS             current
        DESCRIPTION
           "An  ospfNbrStateChange  trap  signifies   that
           there  has been a change in the state of a non-
           virtual OSPF neighbor.   This  trap  should  be
           generated  when  the  neighbor  state regresses
           (e.g., goes from Attempt or Full  to  1-Way  or
           Down)  or progresses to a terminal state (e.g.,
           2-Way or Full).  When an  neighbor  transitions
           from  or  to Full on non-broadcast multi-access
           and broadcast networks, the trap should be gen-
           erated  by the designated router.  A designated
           router transitioning to Down will be  noted  by
           ospfIfStateChange."
   ::= { ospfTraps 2 }

    ospfVirtNbrStateChange NOTIFICATION-TYPE
        OBJECTS {
                    ospfRouterId, -- The originator of the trap
                    ospfVirtNbrArea,
                    ospfVirtNbrRtrId,
                    ospfVirtNbrState  -- The new state
                  }
        STATUS             current
        DESCRIPTION
           "An ospfIfStateChange trap signifies that there
           has  been a change in the state of an OSPF vir-
           tual neighbor.  This trap should  be  generated
           when  the  neighbor state regresses (e.g., goes
           from Attempt or  Full  to  1-Way  or  Down)  or
           progresses to a terminal state (e.g., Full)."
   ::= { ospfTraps 3 }

    ospfIfConfigError NOTIFICATION-TYPE
        OBJECTS {
                    ospfRouterId, -- The originator of the trap
                    ospfIfIpAddress,
                    ospfAddressLessIf,
                    ospfPacketSrc,  -- The source IP address
                    ospfConfigErrorType, -- Type of error
                    ospfPacketType
                  }
        STATUS             current
        DESCRIPTION
           "An ospfIfConfigError  trap  signifies  that  a
           packet  has  been received on a non-virtual in-
           terface  from  a  router  whose   configuration
           parameters  conflict  with this router's confi-
           guration parameters.  Note that the  event  op-
           tionMismatch  should  cause  a  trap only if it
           prevents an adjacency from forming."
                  ::= { ospfTraps 4 }


    ospfVirtIfConfigError NOTIFICATION-TYPE
        OBJECTS {
                    ospfRouterId, -- The originator of the trap
                    ospfVirtIfAreaId,
                    ospfVirtIfNeighbor,
                    ospfConfigErrorType, -- Type of error
                    ospfPacketType
                  }
        STATUS             current
        DESCRIPTION
           "An ospfConfigError trap signifies that a pack-
           et  has  been  received  on a virtual interface
           from a router  whose  configuration  parameters
           conflict   with   this  router's  configuration
           parameters.  Note that the event optionMismatch
           should  cause a trap only if it prevents an ad-
           jacency from forming."
   ::= { ospfTraps 5 }


    ospfIfAuthFailure NOTIFICATION-TYPE
        OBJECTS {
                    ospfRouterId, -- The originator of the trap
                    ospfIfIpAddress,
                    ospfAddressLessIf,
                    ospfPacketSrc,  -- The source IP address
                    ospfConfigErrorType, -- authTypeMismatch or
                                         -- authFailure
                    ospfPacketType
                  }
        STATUS             current
        DESCRIPTION
           "An ospfIfAuthFailure  trap  signifies  that  a
           packet  has  been received on a non-virtual in-
           terface from a router whose authentication  key
           or  authentication  type  conflicts  with  this
           router's authentication key  or  authentication
           type."
   ::= { ospfTraps 6 }


    ospfVirtIfAuthFailure NOTIFICATION-TYPE
        OBJECTS {
                    ospfRouterId, -- The originator of the trap
                    ospfVirtIfAreaId,
                    ospfVirtIfNeighbor,
                    ospfConfigErrorType, -- authTypeMismatch or
                                         -- authFailure
                    ospfPacketType
                  }
        STATUS             current
        DESCRIPTION
           "An ospfVirtIfAuthFailure trap signifies that a
           packet has been received on a virtual interface
           from a router whose authentication key  or  au-
           thentication  type conflicts with this router's
           authentication key or authentication type."
   ::= { ospfTraps 7 }


    ospfIfRxBadPacket NOTIFICATION-TYPE
        OBJECTS {
                    ospfRouterId, -- The originator of the trap
                    ospfIfIpAddress,
                    ospfAddressLessIf,
                    ospfPacketSrc,  -- The source IP address
                    ospfPacketType
                  }
        STATUS             current
        DESCRIPTION
           "An ospfIfRxBadPacket trap  signifies  that  an
           OSPF  packet has been received on a non-virtual
           interface that cannot be parsed."
   ::= { ospfTraps 8 }

    ospfVirtIfRxBadPacket NOTIFICATION-TYPE
        OBJECTS {
                    ospfRouterId, -- The originator of the trap
                    ospfVirtIfAreaId,
                    ospfVirtIfNeighbor,
                    ospfPacketType
                  }
        STATUS             current
        DESCRIPTION
           "An ospfRxBadPacket trap signifies that an OSPF
           packet has been received on a virtual interface
           that cannot be parsed."
   ::= { ospfTraps 9 }


    ospfTxRetransmit NOTIFICATION-TYPE
        OBJECTS {
                    ospfRouterId, -- The originator of the trap
                    ospfIfIpAddress,
                    ospfAddressLessIf,
                    ospfNbrRtrId, -- Destination
                    ospfPacketType,
                    ospfLsdbType,
                    ospfLsdbLsid,
                    ospfLsdbRouterId
                  }
        STATUS             current
        DESCRIPTION
           "An ospfTxRetransmit  trap  signifies  than  an
           OSPF  packet  has  been retransmitted on a non-
           virtual interface.  All packets that may be re-
           transmitted  are associated with an LSDB entry.
           The LS type, LS ID, and Router ID are  used  to
           identify the LSDB entry."
   ::= { ospfTraps 10 }


    ospfVirtIfTxRetransmit NOTIFICATION-TYPE
        OBJECTS {
                    ospfRouterId, -- The originator of the trap
                    ospfVirtIfAreaId,
                    ospfVirtIfNeighbor,
                    ospfPacketType,
                    ospfLsdbType,
                    ospfLsdbLsid,
                    ospfLsdbRouterId
                  }
        STATUS             current
        DESCRIPTION
           "An ospfTxRetransmit  trap  signifies  than  an
           OSPF packet has been retransmitted on a virtual
           interface.  All packets that may be retransmit-
           ted  are  associated with an LSDB entry. The LS
           type, LS ID, and Router ID are used to identify
           the LSDB entry."
   ::= { ospfTraps 11 }


    ospfOriginateLsa NOTIFICATION-TYPE
        OBJECTS {
                    ospfRouterId, -- The originator of the trap
                    ospfLsdbAreaId,  -- 0.0.0.0 for AS Externals
                    ospfLsdbType,
                    ospfLsdbLsid,
                    ospfLsdbRouterId
                  }
        STATUS             current
        DESCRIPTION
           "An ospfOriginateLsa trap signifies that a  new
           LSA  has  been originated by this router.  This
           trap should not be invoked for simple refreshes
           of  LSAs  (which happesn every 30 minutes), but
           instead will only be invoked  when  an  LSA  is
           (re)originated due to a topology change.  Addi-
           tionally, this trap does not include LSAs  that
           are  being  flushed  because  they have reached
           MaxAge."
   ::= { ospfTraps 12 }


    ospfMaxAgeLsa NOTIFICATION-TYPE
        OBJECTS {
                    ospfRouterId, -- The originator of the trap
                    ospfLsdbAreaId,  -- 0.0.0.0 for AS Externals
                    ospfLsdbType,
                    ospfLsdbLsid,
                    ospfLsdbRouterId
                  }
        STATUS             current
        DESCRIPTION
           "An ospfMaxAgeLsa trap signifies  that  one  of
           the LSA in the router's link-state database has
           aged to MaxAge."
   ::= { ospfTraps 13 }

    ospfLsdbOverflow NOTIFICATION-TYPE
        OBJECTS {
                    ospfRouterId, -- The originator of the trap
                    ospfExtLsdbLimit
                  }
        STATUS             current
        DESCRIPTION
           "An ospfLsdbOverflow trap  signifies  that  the
           number of LSAs in the router's link-state data-
           base has exceeded ospfExtLsdbLimit."
   ::= { ospfTraps 14 }


    ospfLsdbApproachingOverflow NOTIFICATION-TYPE
        OBJECTS {
                    ospfRouterId, -- The originator of the trap
                    ospfExtLsdbLimit
                  }
        STATUS             current
        DESCRIPTION
           "An ospfLsdbApproachingOverflow trap  signifies
           that  the  number of LSAs in the router's link-
           state database has exceeded ninety  percent  of
           ospfExtLsdbLimit."
   ::= { ospfTraps 15 }


-- conformance information

ospfTrapConformance OBJECT IDENTIFIER ::= { ospfTrap 3 }

ospfTrapGroups      OBJECT IDENTIFIER ::= { ospfTrapConformance 1 }
ospfTrapCompliances OBJECT IDENTIFIER ::= { ospfTrapConformance 2 }

-- compliance statements

    ospfTrapCompliance MODULE-COMPLIANCE
        STATUS  current
        DESCRIPTION
           "The compliance statement "
       MODULE  -- this module
       MANDATORY-GROUPS { ospfTrapControlGroup }


        GROUP       ospfTrapControlGroup
        DESCRIPTION
           "This group is optional but recommended for all
           OSPF systems"
       ::= { ospfTrapCompliances 1 }


-- units of conformance

    ospfTrapControlGroup    OBJECT-GROUP
        OBJECTS {
                           ospfSetTrap,
                           ospfConfigErrorType,
                           ospfPacketType,
                           ospfPacketSrc
        }
        STATUS  current
        DESCRIPTION
           "These objects are required  to  control  traps
           from OSPF systems."
       ::= { ospfTrapGroups 1 }


END
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\wmi\wbem\providers\snmpprovider\mofs\snmpv1\rfcs\placefil.txt ===
rfc1213.mof	WMI_PSDK\SNMP\MOFS\SNMPv1\RFCs
rfc1229.mof	WMI_PSDK\SNMP\MOFS\SNMPv1\RFCs
rfc1230.mof	WMI_PSDK\SNMP\MOFS\SNMPv1\RFCs
rfc1231.mof	WMI_PSDK\SNMP\MOFS\SNMPv1\RFCs
rfc1238.mof	WMI_PSDK\SNMP\MOFS\SNMPv1\RFCs
rfc1253.mof	WMI_PSDK\SNMP\MOFS\SNMPv1\RFCs
rfc1269.mof	WMI_PSDK\SNMP\MOFS\SNMPv1\RFCs
rfc1271.mof	WMI_PSDK\SNMP\MOFS\SNMPv1\RFCs
rfc1285.mof	WMI_PSDK\SNMP\MOFS\SNMPv1\RFCs
rfc1304.mof	WMI_PSDK\SNMP\MOFS\SNMPv1\RFCs
rfc1315.mof	WMI_PSDK\SNMP\MOFS\SNMPv1\RFCs
rfc1316.mof	WMI_PSDK\SNMP\MOFS\SNMPv1\RFCs
rfc1317.mof	WMI_PSDK\SNMP\MOFS\SNMPv1\RFCs
rfc1318.mof	WMI_PSDK\SNMP\MOFS\SNMPv1\RFCs
rfc1354.mof	WMI_PSDK\SNMP\MOFS\SNMPv1\RFCs
rfc1381.mof	WMI_PSDK\SNMP\MOFS\SNMPv1\RFCs
rfc1382.mof	WMI_PSDK\SNMP\MOFS\SNMPv1\RFCs
rfc1389.mof	WMI_PSDK\SNMP\MOFS\SNMPv1\RFCs
rfc1398.mof	WMI_PSDK\SNMP\MOFS\SNMPv1\RFCs
rfc1406.mof	WMI_PSDK\SNMP\MOFS\SNMPv1\RFCs
rfc1407.mof	WMI_PSDK\SNMP\MOFS\SNMPv1\RFCs
rfc1414.mof	WMI_PSDK\SNMP\MOFS\SNMPv1\RFCs
rfc1461.mof	WMI_PSDK\SNMP\MOFS\SNMPv1\RFCs
rfc1471.mof	WMI_PSDK\SNMP\MOFS\SNMPv1\RFCs
rfc1472.mof	WMI_PSDK\SNMP\MOFS\SNMPv1\RFCs
rfc1473.mof	WMI_PSDK\SNMP\MOFS\SNMPv1\RFCs
rfc1474.mof	WMI_PSDK\SNMP\MOFS\SNMPv1\RFCs
rfc1493.mof	WMI_PSDK\SNMP\MOFS\SNMPv1\RFCs
rfc1512.mof	WMI_PSDK\SNMP\MOFS\SNMPv1\RFCs
rfc1513.mof	WMI_PSDK\SNMP\MOFS\SNMPv1\RFCs
rfc1514.mof	WMI_PSDK\SNMP\MOFS\SNMPv1\RFCs
rfc1515.mof	WMI_PSDK\SNMP\MOFS\SNMPv1\RFCs
rfc1516.mof	WMI_PSDK\SNMP\MOFS\SNMPv1\RFCs
rfc1525.mof	WMI_PSDK\SNMP\MOFS\SNMPv1\RFCs
rfc1559.mof	WMI_PSDK\SNMP\MOFS\SNMPv1\RFCs
rfc1593.mof	WMI_PSDK\SNMP\MOFS\SNMPv1\RFCs
rfc1742.mof	WMI_PSDK\SNMP\MOFS\SNMPv1\RFCs
rfc1757.mof	WMI_PSDK\SNMP\MOFS\SNMPv1\RFCs
rfc1792.mof	WMI_PSDK\SNMP\MOFS\SNMPv1\RFCs
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\wmi\wbem\providers\snmpprovider\mibs\snmpv2\rfcs\rfc1573.txt ===
IANAifType-MIB DEFINITIONS ::= BEGIN

   IMPORTS
       MODULE-IDENTITY, OBJECT-TYPE        FROM SNMPv2-SMI
       TEXTUAL-CONVENTION                  FROM SNMPv2-TC;

   ianaifType MODULE-IDENTITY
       LAST-UPDATED "9311082155Z"
       ORGANIZATION "IANA"
       CONTACT-INFO

                  "        Internet Assigned Numbers Authority

                   Postal: USC/Information Sciences Institute
                           4676 Admiralty Way, Marina del Rey, CA 90292

                   Tel:    +1  310 822 1511
                   E-Mail: iana@isi.edu"
       DESCRIPTION
               "The MIB module which defines the IANAifType textual
               convention, and thus the enumerated values of the
               ifType object defined in MIB-II's ifTable."
       ::= { mib-2 30 }


   IANAifType ::= TEXTUAL-CONVENTION
       STATUS       current
       DESCRIPTION
               "This data type is used as the syntax of the ifType
               object in the (updated) definition of MIB-II's
               ifTable.

               The definition of this textual convention with the
               addition of newly assigned values is published
               periodically by the IANA, in either the Assigned
               Numbers RFC, or some derivative of it specific to
               Internet Network Management number assignments.  (The
               latest arrangements can be obtained by contacting the
               IANA.)

               Requests for new values should be made to IANA via
               email (iana@isi.edu).

               The relationship between the assignment of ifType
               values and of OIDs to particular media-specific MIBs
               is solely the purview of IANA and is subject to change
               without notice.  Quite often, a media-specific MIB's
               OID-subtree assignment within MIB-II's 'transmission'
               subtree will be the same as its ifType value.
               However, in some circumstances this will not be the
               case, and implementors must not pre-assume any
               specific relationship between ifType values and
               transmission subtree OIDs."
       SYNTAX  INTEGER {
                   other(1),          -- none of the following
                   regular1822(2),
                   hdh1822(3),
                   ddnX25(4),
                   rfc877x25(5),
                   ethernetCsmacd(6),
                   iso88023Csmacd(7),
                   iso88024TokenBus(8),
                   iso88025TokenRing(9),
                   iso88026Man(10),
                   starLan(11),
                   proteon10Mbit(12),
                   proteon80Mbit(13),
                   hyperchannel(14),
                   fddi(15),
                   lapb(16),
                   sdlc(17),
                   ds1(18),           -- DS1/E1 (RFC 1406)
                   e1(19),            -- obsolete
                   basicISDN(20),
                   primaryISDN(21),
                   propPointToPointSerial(22), -- proprietary serial
                   ppp(23),
                   softwareLoopback(24),
                   eon(25),            -- CLNP over IP (RFC 1070)
                   ethernet3Mbit(26),
                   nsip(27),           -- XNS over IP
                   slip(28),           -- generic SLIP
                   ultra(29),          -- ULTRA technologies
                   ds3(30),            -- T-3
                   sip(31),            -- SMDS
                   frameRelay(32),    -- DTE only
                   rs232(33),
                   para(34),           -- parallel-port
                   arcnet(35),         -- arcnet
                   arcnetPlus(36),     -- arcnet plus
                   atm(37),            -- ATM cells
                   miox25(38),
                   sonet(39),          -- SONET or SDH
                   x25ple(40),
                   iso88022llc(41),
                   localTalk(42),
                   smdsDxi(43),
                   frameRelayService(44),  -- Frame relay DCE
                   v35(45),
                   hssi(46),
                   hippi(47),
                   modem(48),          -- Generic modem
                   aal5(49),           -- AAL5 over ATM
                   sonetPath(50),
                   sonetVT(51),
                   smdsIcip(52),       -- SMDS InterCarrier Interface
                   propVirtual(53),    -- proprietary virtual/internal
                   propMultiplexor(54) -- proprietary multiplexing
               }

   END

   IF-MIB DEFINITIONS ::= BEGIN

   IMPORTS
       MODULE-IDENTITY, OBJECT-TYPE, Counter32, Gauge32,
       Integer32, TimeTicks,
       NOTIFICATION-TYPE                        FROM SNMPv2-SMI
       TEXTUAL-CONVENTION, DisplayString,
       PhysAddress, TruthValue, RowStatus,
       AutonomousType, TestAndIncr              FROM SNMPv2-TC
       MODULE-COMPLIANCE, OBJECT-GROUP          FROM SNMPv2-CONF
       IANAifType                               FROM IANAifType-MIB
       interfaces                               FROM RFC-1213;

   ifMIB MODULE-IDENTITY
       LAST-UPDATED "9311082155Z"
       ORGANIZATION "IETF Interfaces MIB Working Group"
       CONTACT-INFO

                  "        Keith McCloghrie

                   Postal: Hughes LAN Systems
                           1225 Charleston Road, Mountain View, CA 94043

                   Tel:    +1 415 966 7934
                   E-Mail: kzm@hls.com


                           Frank Kastenholz

                   Postal: FTP Software
                           2 High Street, North Andover, MA 01845

                   Tel:    +1 508 685 4000
                   E-Mail: kasten@ftp.com"
       DESCRIPTION
               "The MIB module to describe generic objects for
               network interface sub-layers.  This MIB is an updated
               version of MIB-II's ifTable, and incorporates the
               extensions defined in RFC 1229."
       ::= { mib-2 31 }

   ifMIBObjects OBJECT IDENTIFIER ::= { ifMIB 1 }

   -- OwnerString has the same semantics as used in RFC 1271

   OwnerString ::= TEXTUAL-CONVENTION
       DISPLAY-HINT "255a"
       STATUS       current
       DESCRIPTION
               "This data type is used to model an administratively
               assigned name of the owner of a resource.  This
               information is taken from the NVT ASCII character set.
               It is suggested that this name contain one or more of
               the following: ASCII form of the manager station's
               transport address, management station name (e.g.,
               domain name), network management personnel's name,
               location, or phone number.  In some cases the agent
               itself will be the owner of an entry.  In these cases,
               this string shall be set to a string starting with
               'agent'."
       SYNTAX       OCTET STRING (SIZE(0..255))

   -- InterfaceIndex contains the semantics of ifIndex and
   -- should be used for any objects defined on other mib
   -- modules that need these semantics.

   InterfaceIndex ::= TEXTUAL-CONVENTION
       DISPLAY-HINT "d"
       STATUS       current
       DESCRIPTION
               "A unique value, greater than zero, for each interface
               or interface sub-layer in the managed system.  It is
               recommended that values are assigned contiguously
               starting from 1.  The value for each interface sub-
               layer must remain constant at least from one re-
               initialization of the entity's network management
               system to the next re-initialization."
       SYNTAX       Integer32

   ifNumber  OBJECT-TYPE
       SYNTAX      Integer32
       MAX-ACCESS  read-only
       STATUS      current
       DESCRIPTION
               "The number of network interfaces (regardless of their
               current state) present on this system."
       ::= { interfaces 1 }


   -- the Interfaces table

   -- The Interfaces table contains information on the entity's
   -- interfaces.  Each sub-layer below the internetwork-layer
   -- of a network interface is considered to be an interface.

   ifTable OBJECT-TYPE
       SYNTAX      SEQUENCE OF IfEntry
       MAX-ACCESS  not-accessible
       STATUS      current
       DESCRIPTION
               "A list of interface entries.  The number of entries
               is given by the value of ifNumber."
       ::= { interfaces 2 }

   ifEntry OBJECT-TYPE
       SYNTAX      IfEntry
       MAX-ACCESS  not-accessible
       STATUS      current
       DESCRIPTION
               "An entry containing management information applicable
               to a particular interface."
       INDEX   { ifIndex }
       ::= { ifTable 1 }

   IfEntry ::=
       SEQUENCE {
           ifIndex                 InterfaceIndex,
           ifDescr                 DisplayString,
           ifType                  IANAifType,
           ifMtu                   Integer32,
           ifSpeed                 Gauge32,
           ifPhysAddress           PhysAddress,
           ifAdminStatus           INTEGER,
           ifOperStatus            INTEGER,
           ifLastChange            TimeTicks,
           ifInOctets              Counter32,
           ifInUcastPkts           Counter32,
           ifInNUcastPkts          Counter32,  -- deprecated
           ifInDiscards            Counter32,
           ifInErrors              Counter32,
           ifInUnknownProtos       Counter32,
           ifOutOctets             Counter32,
           ifOutUcastPkts          Counter32,
           ifOutNUcastPkts         Counter32,  -- deprecated
           ifOutDiscards           Counter32,
           ifOutErrors             Counter32,
           ifOutQLen               Gauge32,    -- deprecated
           ifSpecific              OBJECT IDENTIFIER -- deprecated
       }


   ifIndex OBJECT-TYPE
       SYNTAX      InterfaceIndex
       MAX-ACCESS  read-only
       STATUS      current
       DESCRIPTION
               "A unique value, greater than zero, for each
               interface.  It is recommended that values are assigned
               contiguously starting from 1.  The value for each
               interface sub-layer must remain constant at least from
               one re-initialization of the entity's network
               management system to the next re-initialization."
       ::= { ifEntry 1 }

   ifDescr OBJECT-TYPE
       SYNTAX      DisplayString (SIZE (0..255))
       MAX-ACCESS  read-only
       STATUS      current
       DESCRIPTION
               "A textual string containing information about the
               interface.  This string should include the name of the
               manufacturer, the product name and the version of the
               interface hardware/software."
       ::= { ifEntry 2 }

   ifType OBJECT-TYPE
       SYNTAX      IANAifType
       MAX-ACCESS  read-only
       STATUS      current
       DESCRIPTION
               "The type of interface.  Additional values for ifType
               are assigned by the Internet Assigned Numbers
               Authority (IANA), through updating the syntax of the
               IANAifType textual convention."
       ::= { ifEntry 3 }

   ifMtu OBJECT-TYPE
       SYNTAX      Integer32
       MAX-ACCESS  read-only
       STATUS      current
       DESCRIPTION
               "The size of the largest packet which can be
               sent/received on the interface, specified in octets.
               For interfaces that are used for transmitting network
               datagrams, this is the size of the largest network
               datagram that can be sent on the interface."
       ::= { ifEntry 4 }

   ifSpeed OBJECT-TYPE
       SYNTAX      Gauge32
       MAX-ACCESS  read-only
       STATUS      current
       DESCRIPTION
               "An estimate of the interface's current bandwidth in
               bits per second.  For interfaces which do not vary in
               bandwidth or for those where no accurate estimation
               can be made, this object should contain the nominal
               bandwidth.  If the bandwidth of the interface is
               greater than the maximum value reportable by this
               object then this object should report its maximum
               value (4,294,967,295) and ifHighSpeed must be used to
               report the interace's speed.  For a sub-layer which
               has no concept of bandwidth, this object should be
               zero."
       ::= { ifEntry 5 }

   ifPhysAddress OBJECT-TYPE
       SYNTAX      PhysAddress
       MAX-ACCESS  read-only
       STATUS      current
       DESCRIPTION
               "The interface's address at its protocol sub-layer.
               The interface's media-specific MIB must define the bit
               and byte ordering and format of the value contained by
               this object.  For interfaces which do not have such an
               address (e.g., a serial line), this object should
               contain an octet string of zero length."
       ::= { ifEntry 6 }

   ifAdminStatus OBJECT-TYPE
       SYNTAX  INTEGER {
                   up(1),       -- ready to pass packets
                   down(2),
                   testing(3)   -- in some test mode
               }
       MAX-ACCESS  read-write
       STATUS      current
       DESCRIPTION
               "The desired state of the interface.  The testing(3)
               state indicates that no operational packets can be
               passed.  When a managed system initializes, all
               interfaces start with ifAdminStatus in the down(2)
               state.  As a result of either explicit management
               action or per configuration information retained by
               the managed system, ifAdminStatus is then changed to
               either the up(1) or testing(3) states (or remains in
               the down(2) state)."
       ::= { ifEntry 7 }

   ifOperStatus OBJECT-TYPE
       SYNTAX  INTEGER {
                   up(1),       -- ready to pass packets
                   down(2),
                   testing(3),  -- in some test mode
                   unknown(4),  -- status can not be determined
                                -- for some reason.
                   dormant(5)
               }
       MAX-ACCESS  read-only
       STATUS      current
       DESCRIPTION
               "The current operational state of the interface.  The
               testing(3) state indicates that no operational packets
               can be passed.  If ifAdminStatus is down(2) then
               ifOperStatus should be down(2).  If ifAdminStatus is
               changed to up(1) then ifOperStatus should change to
               up(1) if the interface is ready to transmit and
               receive network traffic; it should change to
               dormant(5) if the interface is waiting for external
               actions (such as a serial line waiting for an
               incomming connection); it should remain in the down(2)
               state if and only if there is a fault that prevents if
               from going to the up(1) state."
       ::= { ifEntry 8 }

   ifLastChange OBJECT-TYPE
       SYNTAX      TimeTicks
       MAX-ACCESS  read-only
       STATUS      current
       DESCRIPTION
               "The value of sysUpTime at the time the interface
               entered its current operational state.  If the current
               state was entered prior to the last re-initialization
               of the local network management subsystem, then this
               object contains a zero value."
       ::= { ifEntry 9 }

   ifInOctets OBJECT-TYPE
       SYNTAX      Counter32
       MAX-ACCESS  read-only
       STATUS      current
       DESCRIPTION
               "The total number of octets received on the interface,
               including framing characters."
       ::= { ifEntry 10 }

   ifInUcastPkts OBJECT-TYPE
       SYNTAX      Counter32
       MAX-ACCESS  read-only
       STATUS      current
       DESCRIPTION
               "The number of packets, delivered by this sub-layer to
               a higher (sub-)layer, which were not addressed to a
               multicast or broadcast address at this sub-layer."
       ::= { ifEntry 11 }

   ifInNUcastPkts OBJECT-TYPE
       SYNTAX  Counter32
       MAX-ACCESS  read-only
       STATUS      deprecated
       DESCRIPTION
               "The number of packets, delivered by this sub-layer to
               a higher (sub-)layer, which were addressed to a
               multicast or broadcast address at this sub-layer.
               This object is deprecated in favour of
               ifInMulticastPkts and ifInBroadcastPkts."
       ::= { ifEntry 12 }

   ifInDiscards OBJECT-TYPE
       SYNTAX      Counter32
       MAX-ACCESS  read-only
       STATUS      current
       DESCRIPTION
               "The number of inbound packets which were chosen to be
               discarded even though no errors had been detected to
               prevent their being deliverable to a higher-layer
               protocol.  One possible reason for discarding such a
               packet could be to free up buffer space."
       ::= { ifEntry 13 }

   ifInErrors OBJECT-TYPE
       SYNTAX      Counter32
       MAX-ACCESS  read-only
       STATUS      current
       DESCRIPTION
               "For packet-oriented interfaces, the number of inbound
               packets that contained errors preventing them from
               being deliverable to a higher-layer protocol.  For
               character-oriented or fixed-length interfaces, the
               number of inbound transmission units that contained
               errors preventing them from being deliverable to a
               higher-layer protocol."
       ::= { ifEntry 14 }

   ifInUnknownProtos OBJECT-TYPE
       SYNTAX      Counter32
       MAX-ACCESS  read-only
       STATUS      current
       DESCRIPTION
               "For packet-oriented interfaces, the number of packets
               received via the interface which were discarded
               because of an unknown or unsupported protocol.  For
               character-oriented or fixed-length interfaces which
               support protocol multiplexing the number of
               transmission units received via the interface which
               were discarded because of an unknown or unsupported
               protocol.  For any interface which does not support
               protocol multiplexing, this counter will always be 0."
       ::= { ifEntry 15 }

   ifOutOctets OBJECT-TYPE
       SYNTAX      Counter32
       MAX-ACCESS  read-only
       STATUS      current
       DESCRIPTION
               "The total number of octets transmitted out of the
               interface, including framing characters."
       ::= { ifEntry 16 }

   ifOutUcastPkts OBJECT-TYPE
       SYNTAX      Counter32
       MAX-ACCESS  read-only
       STATUS      current
       DESCRIPTION

               "The total number of packets that higher-level
               protocols requested be transmitted, and which were not
               addressed to a multicast or broadcast address at this
               sub-layer, including those that were discarded or not
               sent."
       ::= { ifEntry 17 }

   ifOutNUcastPkts OBJECT-TYPE
       SYNTAX      Counter32
       MAX-ACCESS  read-only
       STATUS      deprecated
       DESCRIPTION
               "The total number of packets that higher-level
               protocols requested be transmitted, and which were
               addressed to a multicast or broadcast address at this
               sub-layer, including those that were discarded or not
               sent.

               This object is deprecated in favour of
               ifOutMulticastPkts and ifOutBroadcastPkts."
       ::= { ifEntry 18 }

   ifOutDiscards OBJECT-TYPE
       SYNTAX      Counter32
       MAX-ACCESS  read-only
       STATUS      current
       DESCRIPTION
               "The number of outbound packets which were chosen to
               be discarded even though no errors had been detected
               to prevent their being transmitted.  One possible
               reason for discarding such a packet could be to free
               up buffer space."
       ::= { ifEntry 19 }

   ifOutErrors OBJECT-TYPE
       SYNTAX      Counter32
       MAX-ACCESS  read-only
       STATUS      current
       DESCRIPTION
               "For packet-oriented interfaces, the number of
               outbound packets that could not be transmitted because
               of errors.  For character-oriented or fixed-length
               interfaces, the number of outbound transmission units
               that could not be transmitted because of errors."
       ::= { ifEntry 20 }

   ifOutQLen OBJECT-TYPE
       SYNTAX      Gauge32
       MAX-ACCESS  read-only
       STATUS      deprecated
       DESCRIPTION
               "The length of the output packet queue (in packets)."
       ::= { ifEntry 21 }

   ifSpecific OBJECT-TYPE
       SYNTAX      OBJECT IDENTIFIER
       MAX-ACCESS  read-only
       STATUS      deprecated
       DESCRIPTION
               "A reference to MIB definitions specific to the
               particular media being used to realize the interface.
               It is recommended that this value point to an instance
               of a MIB object in the media-specific MIB, i.e., that
               this object have the semantics associated with the
               InstancePointer textual convention defined in RFC
               1443.  In fact, it is recommended that the media-
               specific MIB specify what value ifSpecific should/can
               take for values of ifType.  If no MIB definitions
               specific to the particular media are available, the
               value should be set to the OBJECT IDENTIFIER { 0 0 }."
       ::= { ifEntry 22 }


   --
   --   Extension to the interface table
   --
   -- This table replaces the ifExtnsTable table.
   --

   ifXTable        OBJECT-TYPE
       SYNTAX      SEQUENCE OF IfXEntry
       MAX-ACCESS  not-accessible
       STATUS      current
       DESCRIPTION
               "A list of interface entries.  The number of entries
               is given by the value of ifNumber.  This table
               contains additional objects for the interface table."
       ::= { ifMIBObjects 1 }

   ifXEntry        OBJECT-TYPE
       SYNTAX      IfXEntry
       MAX-ACCESS  not-accessible
       STATUS      current
       DESCRIPTION
               "An entry containing additional management information
               applicable to a particular interface."
       AUGMENTS    { ifEntry }
       ::= { ifXTable 1 }

   IfXEntry ::=
       SEQUENCE {
           ifName                  DisplayString,
           ifInMulticastPkts       Counter32,
           ifInBroadcastPkts       Counter32,
           ifOutMulticastPkts      Counter32,
           ifOutBroadcastPkts      Counter32,
           ifHCInOctets            Counter64,
           ifHCInUcastPkts         Counter64,
           ifHCInMulticastPkts     Counter64,
           ifHCInBroadcastPkts     Counter64,
           ifHCOutOctets           Counter64,
           ifHCOutUcastPkts        Counter64,
           ifHCOutMulticastPkts    Counter64,
           ifHCOutBroadcastPkts    Counter64,
           ifLinkUpDownTrapEnable  INTEGER,
           ifHighSpeed             Gauge32,
           ifPromiscuousMode       TruthValue,
           ifConnectorPresent      TruthValue
       }


   ifName OBJECT-TYPE
       SYNTAX      DisplayString
       MAX-ACCESS  read-only
       STATUS      current
       DESCRIPTION
               "The textual name of the interface.  The value of this
               object should be the name of the interface as assigned
               by the local device and should be suitable for use in
               commands entered at the device's `console'.  This
               might be a text name, such as `le0' or a simple port
               number, such as `1', depending on the interface naming
               syntax of the device.  If several entries in the
               ifTable together represent a single interface as named
               by the device, then each will have the same value of
               ifName.  If there is no local name, or this object is
               otherwise not applicable, then this object contains a
               0-length string."
       ::= { ifXEntry 1 }

   ifInMulticastPkts OBJECT-TYPE
       SYNTAX      Counter32
       MAX-ACCESS  read-only
       STATUS      current
       DESCRIPTION
               "The number of packets, delivered by this sub-layer to
               a higher (sub-)layer, which were addressed to a
               multicast address at this sub-layer.  For a MAC layer
               protocol, this includes both Group and Functional
               addresses."
       ::= { ifXEntry 2 }

   ifInBroadcastPkts OBJECT-TYPE
       SYNTAX      Counter32
       MAX-ACCESS  read-only
       STATUS      current
       DESCRIPTION
               "The number of packets, delivered by this sub-layer to
               a higher (sub-)layer, which were addressed to a
               broadcast address at this sub-layer."
       ::= { ifXEntry 3 }

   ifOutMulticastPkts OBJECT-TYPE
       SYNTAX      Counter32
       MAX-ACCESS  read-only
       STATUS      current
       DESCRIPTION
               "The total number of packets that higher-level
               protocols requested be transmitted, and which were
               addressed to a multicast address at this sub-layer,
               including those that were discarded or not sent.  For
               a MAC layer protocol, this includes both Group and
               Functional addresses."
       ::= { ifXEntry 4 }

   ifOutBroadcastPkts OBJECT-TYPE
       SYNTAX      Counter32
       MAX-ACCESS  read-only
       STATUS      current
       DESCRIPTION
               "The total number of packets that higher-level
               protocols requested be transmitted, and which were
               addressed to a broadcast address at this sub-layer,
               including those that were discarded or not sent."
       ::= { ifXEntry 5 }

   --
   -- High Capacity Counter objects.  These objects are all

   -- 64 bit versions of the "basic" ifTable counters.  These
   -- objects all have the same basic semantics as their 32-bit
   -- counterparts, however, their syntax has been extended
   -- to 64 bits.
   --

   ifHCInOctets OBJECT-TYPE
       SYNTAX      Counter64
       MAX-ACCESS  read-only
       STATUS      current
       DESCRIPTION
               "The total number of octets received on the interface,
               including framing characters.  This object is a 64-bit
               version of ifInOctets."
       ::= { ifXEntry 6 }

   ifHCInUcastPkts OBJECT-TYPE
       SYNTAX      Counter64
       MAX-ACCESS  read-only
       STATUS      current
       DESCRIPTION
               "The number of packets, delivered by this sub-layer to
               a higher (sub-)layer, which were not addressed to a
               multicast or broadcast address at this sub-layer.
               This object is a 64-bit version of ifInUcastPkts."
       ::= { ifXEntry 7 }

   ifHCInMulticastPkts OBJECT-TYPE
       SYNTAX      Counter64
       MAX-ACCESS  read-only
       STATUS      current
       DESCRIPTION
               "The number of packets, delivered by this sub-layer to
               a higher (sub-)layer, which were addressed to a
               multicast address at this sub-layer.  For a MAC layer
               protocol, this includes both Group and Functional
               addresses.  This object is a 64-bit version of
               ifInMulticastPkts."
       ::= { ifXEntry 8 }

   ifHCInBroadcastPkts OBJECT-TYPE
       SYNTAX      Counter64
       MAX-ACCESS  read-only
       STATUS      current
       DESCRIPTION
               "The number of packets, delivered by this sub-layer to
               a higher (sub-)layer, which were addressed to a
               broadcast address at this sub-layer.  This object is a
               64-bit version of ifInBroadcastPkts."
       ::= { ifXEntry 9 }

   ifHCOutOctets OBJECT-TYPE
       SYNTAX      Counter64
       MAX-ACCESS  read-only
       STATUS      current
       DESCRIPTION
               "The total number of octets transmitted out of the
               interface, including framing characters.  This object
               is a 64-bit version of ifOutOctets."
       ::= { ifXEntry 10 }

   ifHCOutUcastPkts OBJECT-TYPE
       SYNTAX      Counter64
       MAX-ACCESS  read-only
       STATUS      current
       DESCRIPTION
               "The total number of packets that higher-level
               protocols requested be transmitted, and which were not
               addressed to a multicast or broadcast address at this
               sub-layer, including those that were discarded or not
               sent.  This object is a 64-bit version of
               ifOutUcastPkts."
       ::= { ifXEntry 11 }

   ifHCOutMulticastPkts OBJECT-TYPE
       SYNTAX      Counter64
       MAX-ACCESS  read-only
       STATUS      current
       DESCRIPTION
               "The total number of packets that higher-level
               protocols requested be transmitted, and which were
               addressed to a multicast address at this sub-layer,
               including those that were discarded or not sent.  For
               a MAC layer protocol, this includes both Group and
               Functional addresses.  This object is a 64-bit version
               of ifOutMulticastPkts."
       ::= { ifXEntry 12 }

   ifHCOutBroadcastPkts OBJECT-TYPE
       SYNTAX      Counter64
       MAX-ACCESS  read-only
       STATUS      current
       DESCRIPTION
               "The total number of packets that higher-level
               protocols requested be transmitted, and which were
               addressed to a broadcast address at this sub-layer,
               including those that were discarded or not sent.  This
               object is a 64-bit version of ifOutBroadcastPkts."
       ::= { ifXEntry 13 }

   ifLinkUpDownTrapEnable  OBJECT-TYPE
       SYNTAX      INTEGER { enabled(1), disabled(2) }
       MAX-ACCESS  read-write
       STATUS      current
       DESCRIPTION
               "Indicates whether linkUp/linkDown traps should be
               generated for this interface.

               By default, this object should have the value
               enabled(1) for interfaces which do not operate on
               'top' of any other interface (as defined in the
               ifStackTable), and disabled(2) otherwise."
       ::= { ifXEntry 14 }

   ifHighSpeed OBJECT-TYPE
       SYNTAX      Gauge32
       MAX-ACCESS  read-only
       STATUS      current
       DESCRIPTION
               "An estimate of the interface's current bandwidth in
               units of 1,000,000 bits per second.  If this object
               reports a value of `n' then the speed of the interface
               is somewhere in the range of `n-500,000' to
               `n+499,999'.  For interfaces which do not vary in
               bandwidth or for those where no accurate estimation
               can be made, this object should contain the nominal
               bandwidth.  For a sub-layer which has no concept of
               bandwidth, this object should be zero."
       ::= { ifXEntry 15 }

   ifPromiscuousMode  OBJECT-TYPE
       SYNTAX      TruthValue
       MAX-ACCESS  read-write
       STATUS      current
       DESCRIPTION
               "This object has a value of false(2) if this interface
               only accepts packets/frames that are addressed to this
               station.  This object has a value of true(1) when the
               station accepts all packets/frames transmitted on the
               media.  The value true(1) is only legal on certain
               types of media.  If legal, setting this object to a
               value of true(1) may require the interface to be reset
               before becoming effective.

               The value of ifPromiscuousMode does not affect the
               reception of broadcast and multicast packets/frames by
               the interface."
       ::= { ifXEntry 16 }

   ifConnectorPresent   OBJECT-TYPE
       SYNTAX      TruthValue
       MAX-ACCESS  read-only
       STATUS      current
       DESCRIPTION
               "This object has the value 'true(1)' if the interface
               sublayer has a physical connector and the value
               'false(2)' otherwise."
       ::= { ifXEntry 17 }


   --           The Interface Stack Group
   --
   -- Implementation of this group is mandatory for all systems
   --

   ifStackTable  OBJECT-TYPE
        SYNTAX        SEQUENCE OF IfStackEntry
        MAX-ACCESS    not-accessible
        STATUS        current
        DESCRIPTION
               "The table containing information on the relationships
               between the multiple sub-layers of network interfaces.
               In particular, it contains information on which sub-
               layers run 'on top of' which other sub-layers.  Each
               sub-layer corresponds to a conceptual row in the
               ifTable."
        ::= { ifMIBObjects 2 }


   ifStackEntry  OBJECT-TYPE
        SYNTAX        IfStackEntry
        MAX-ACCESS    not-accessible
        STATUS        current
        DESCRIPTION
               "Information on a particular relationship between two
               sub-layers, specifying that one sub-layer runs on
               'top' of the other sub-layer.  Each sub-layer
               corresponds to a conceptual row in the ifTable."
        INDEX { ifStackHigherLayer, ifStackLowerLayer }
        ::= { ifStackTable 1 }


   IfStackEntry ::=
       SEQUENCE {
           ifStackHigherLayer  Integer32,
           ifStackLowerLayer   Integer32,
           ifStackStatus       RowStatus
        }


   ifStackHigherLayer  OBJECT-TYPE
        SYNTAX        Integer32
        MAX-ACCESS    not-accessible
        STATUS        current
        DESCRIPTION
               "The value of ifIndex corresponding to the higher
               sub-layer of the relationship, i.e., the sub-layer
               which runs on 'top' of the sub-layer identified by the
               corresponding instance of ifStackLowerLayer.  If there
               is no higher sub-layer (below the internetwork layer),
               then this object has the value 0."
        ::= { ifStackEntry 1 }


   ifStackLowerLayer  OBJECT-TYPE
        SYNTAX        Integer32
        MAX-ACCESS    not-accessible
        STATUS        current
        DESCRIPTION
               "The value of ifIndex corresponding to the lower sub-
               layer of the relationship, i.e., the sub-layer which
               runs 'below' the sub-layer identified by the
               corresponding instance of ifStackHigherLayer.  If
               there is no lower sub-layer, then this object has the
               value 0."
        ::= { ifStackEntry 2 }


   ifStackStatus  OBJECT-TYPE
       SYNTAX         RowStatus
       MAX-ACCESS     read-write
       STATUS         current
       DESCRIPTION
               "The status of the relationship between two sub-
               layers.

               Changing the value of this object from 'active' to
               'notInService' or 'destroy' will likely have
               consequences up and down the interface stack.  Thus,
               write access to this object is likely to be
               inappropriate for some types of interfaces, and many
               implementations will choose not to support write-
               access for any type of interface."
       ::= { ifStackEntry 3 }


   --
   --    The Interface Test Table
   --
   -- This group of objects is optional.  However, a media-specific
   -- MIB may make implementation of this group mandatory.
   --
   -- This table replaces the ifExtnsTestTable
   --

   ifTestTable   OBJECT-TYPE
       SYNTAX      SEQUENCE OF IfTestEntry
       MAX-ACCESS  not-accessible
       STATUS      current
       DESCRIPTION
               "This table contains one entry per interface.  It
               defines objects which allow a network manager to
               instruct an agent to test an interface for various
               faults.  Tests for an interface are defined in the
               media-specific MIB for that interface.  After invoking
               a test, the object ifTestResult can be read to
               determine the outcome.  If an agent can not perform
               the test, ifTestResult is set to so indicate.  The
               object ifTestCode can be used to provide further
               test-specific or interface-specific (or even
               enterprise-specific) information concerning the
               outcome of the test.  Only one test can be in progress
               on each interface at any one time.  If one test is in
               progress when another test is invoked, the second test
               is rejected.  Some agents may reject a test when a
               prior test is active on another interface.
               Before starting a test, a manager-station must first
               obtain 'ownership' of the entry in the ifTestTable for
               the interface to be tested.  This is accomplished with
               the ifTestId and ifTestStatus objects as follows:

            try_again:
                get (ifTestId, ifTestStatus)
                while (ifTestStatus != notInUse)
                    /*
                     * Loop while a test is running or some other
                     * manager is configuring a test.
                     */
                    short delay
                    get (ifTestId, ifTestStatus)
                }

                /*
                 * Is not being used right now -- let's compete
                 * to see who gets it.
                 */
                lock_value = ifTestId

                if ( set(ifTestId = lock_value, ifTestStatus = inUse,
                         ifTestOwner = 'my-IP-address') == FAILURE)
                    /*
                     * Another manager got the ifTestEntry -- go
                     * try again
                     */
                    goto try_again;

                /*
                 * I have the lock
                 */
                set up any test parameters.

                /*
                 * This starts the test
                 */
                set(ifTestType = test_to_run);

                wait for test completion by polling ifTestResult

                when test completes, agent sets ifTestResult
                     agent also sets ifTestStatus = 'notInUse'

                retrieve any additional test results, and ifTestId

                if (ifTestId == lock_value+1) results are valid

              A manager station first retrieves the value of the
              appropriate ifTestId and ifTestStatus objects,
              periodically repeating the retrieval if necessary,
              until the value of ifTestStatus is 'notInUse'.  The
              manager station then tries to set the same ifTestId
              object to the value it just retrieved, the same
              ifTestStatus object to 'inUse', and the corresponding
              ifTestOwner object to a value indicating itself.  If
              the set operation succeeds then the manager has
              obtained ownership of the ifTestEntry, and the value of
              the ifTestId object is incremented by the agent (per
              the semantics of TestAndIncr).  Failure of the set
              operation indicates that some other manager has
              obtained ownership of the ifTestEntry.

              Once ownership is obtained, any test parameters can be
              setup, and then the test is initiated by setting
              ifTestType.  On completion of the test, the agent sets
              ifTestStatus to 'notInUse'.  Once this occurs, the
              manager can retrieve the results.  In the (rare) event
              that the invocation of tests by two network managers
              were to overlap, then there would be a possibility that
              the first test's results might be overwritten by the
              second test's results prior to the first results being
              read.  This unlikely circumstance can be detected by a
              network manager retrieving ifTestId at the same time as
              retrieving the test results, and ensuring that the
              results are for the desired request.

              If ifTestType is not set within an abnormally long
              period of time after ownership is obtained, the agent
              should time-out the manager, and reset the value of the
              ifTestStatus object back to 'notInUse'.  It is
              suggested that this time-out period be 5 minutes.

              In general, a management station must not retransmit a
              request to invoke a test for which it does not receive
              a response; instead, it properly inspects an agent's
              MIB to determine if the invocation was successful.
              Only if the invocation was unsuccessful, is the
              invocation request retransmitted.

              Some tests may require the interface to be taken off-
              line in order to execute them, or may even require the
              agent to reboot after completion of the test.  In these
              circumstances, communication with the management
              station invoking the test may be lost until after
              completion of the test.  An agent is not required to
              support such tests.  However, if such tests are
              supported, then the agent should make every effort to
              transmit a response to the request which invoked the
              test prior to losing communication.  When the agent is
              restored to normal service, the results of the test are
              properly made available in the appropriate objects.
              Note that this requires that the ifIndex value assigned
              to an interface must be unchanged even if the test
              causes a reboot.  An agent must reject any test for
              which it cannot, perhaps due to resource constraints,
              make available at least the minimum amount of
              information after that test completes."
       ::= { ifMIBObjects 3 }

   ifTestEntry OBJECT-TYPE
       SYNTAX       IfTestEntry
       MAX-ACCESS   not-accessible
       STATUS       current
       DESCRIPTION
               "An entry containing objects for invoking tests on an
               interface."
       AUGMENTS  { ifEntry }
       ::= { ifTestTable 1 }

   IfTestEntry ::=
       SEQUENCE {
           ifTestId           TestAndIncr,
           ifTestStatus       INTEGER,
           ifTestType         AutonomousType,
           ifTestResult       INTEGER,
           ifTestCode         OBJECT IDENTIFIER,
           ifTestOwner        OwnerString
       }

   ifTestId         OBJECT-TYPE
       SYNTAX       TestAndIncr
       MAX-ACCESS   read-write
       STATUS       current
       DESCRIPTION
               "This object identifies the current invocation of the
               interface's test."
       ::= { ifTestEntry 1 }

   ifTestStatus     OBJECT-TYPE
       SYNTAX       INTEGER { notInUse(1), inUse(2) }
       MAX-ACCESS   read-write
       STATUS       current
       DESCRIPTION
               "This object indicates whether or not some manager
               currently has the necessary 'ownership' required to
               invoke a test on this interface.  A write to this
               object is only successful when it changes its value
               from 'notInUse(1)' to 'inUse(2)'.  After completion of
               a test, the agent resets the value back to
               'notInUse(1)'."
       ::= { ifTestEntry 2 }

   ifTestType       OBJECT-TYPE
       SYNTAX       AutonomousType
       MAX-ACCESS   read-write
       STATUS       current
       DESCRIPTION
               "A control variable used to start and stop operator-
               initiated interface tests.  Most OBJECT IDENTIFIER
               values assigned to tests are defined elsewhere, in
               association with specific types of interface.
               However, this document assigns a value for a full-
               duplex loopback test, and defines the special meanings
               of the subject identifier:

                   noTest  OBJECT IDENTIFIER ::= { 0 0 }

               When the value noTest is written to this object, no
               action is taken unless a test is in progress, in which
               case the test is aborted.  Writing any other value to
               this object is only valid when no test is currently in
               progress, in which case the indicated test is
               initiated.

               When read, this object always returns the most recent
               value that ifTestType was set to.  If it has not been
               set since the last initialization of the network
               management subsystem on the agent, a value of noTest
               is returned."
       ::= { ifTestEntry 3 }

   ifTestResult  OBJECT-TYPE
       SYNTAX       INTEGER {
                        none(1),          -- no test yet requested
                        success(2),
                        inProgress(3),
                        notSupported(4),
                        unAbleToRun(5),   -- due to state of system
                        aborted(6),
                        failed(7)
                    }
       MAX-ACCESS   read-only
       STATUS       current
       DESCRIPTION
               "This object contains the result of the most recently
               requested test, or the value none(1) if no tests have
               been requested since the last reset.  Note that this
               facility provides no provision for saving the results
               of one test when starting another, as could be
               required if used by multiple managers concurrently."
       ::= { ifTestEntry 4 }

   ifTestCode  OBJECT-TYPE
       SYNTAX       OBJECT IDENTIFIER
       MAX-ACCESS   read-only
       STATUS       current
       DESCRIPTION
               "This object contains a code which contains more
               specific information on the test result, for example
               an error-code after a failed test.  Error codes and
               other values this object may take are specific to the
               type of interface and/or test.  The value may have the
               semantics of either the AutonomousType or
               InstancePointer textual conventions as defined in RFC
               1443.  The identifier:

                   testCodeUnknown  OBJECT IDENTIFIER ::= { 0 0 }

               is defined for use if no additional result code is
               available."
       ::= { ifTestEntry 5 }

   ifTestOwner      OBJECT-TYPE
       SYNTAX       OwnerString
       MAX-ACCESS   read-write
       STATUS       current
       DESCRIPTION
               "The entity which currently has the 'ownership'
               required to invoke a test on this interface."
       ::= { ifTestEntry 6 }


   --   Generic Receive Address Table
   --
   -- This group of objects is mandatory for all types of
   -- interfaces which can receive packets/frames addressed to
   -- more than one address.
   --
   -- This table replaces the ifExtnsRcvAddr table.  The main
   -- difference is that this table makes use of the RowStatus
   -- textual convention, while ifExtnsRcvAddr did not.

   ifRcvAddressTable  OBJECT-TYPE
       SYNTAX      SEQUENCE OF IfRcvAddressEntry
       MAX-ACCESS  not-accessible
       STATUS      current
       DESCRIPTION
               "This table contains an entry for each address
               (broadcast, multicast, or uni-cast) for which the
               system will receive packets/frames on a particular
               interface, except as follows:

               - for an interface operating in promiscuous mode,
               entries are only required for those addresses for
               which the system would receive frames were it not
               operating in promiscuous mode.

               - for 802.5 functional addresses, only one entry is
               required, for the address which has the functional
               address bit ANDed with the bit mask of all functional
               addresses for which the interface will accept frames."
       ::= { ifMIBObjects 4 }

   ifRcvAddressEntry  OBJECT-TYPE
       SYNTAX      IfRcvAddressEntry
       MAX-ACCESS  not-accessible
       STATUS      current
       DESCRIPTION
               "A list of objects identifying an address for which
               the system will accept packets/frames on the
               particular interface identified by the index value
               ifIndex."
       INDEX  { ifIndex, ifRcvAddressAddress }
       ::= { ifRcvAddressTable 1 }

   IfRcvAddressEntry ::=
       SEQUENCE {
           ifRcvAddressAddress   PhysAddress,
           ifRcvAddressStatus    RowStatus,
           ifRcvAddressType      INTEGER
       }

   ifRcvAddressAddress OBJECT-TYPE
       SYNTAX      PhysAddress
       MAX-ACCESS  read-create
       STATUS      current
       DESCRIPTION
               "An address for which the system will accept
               packets/frames on this entry's interface."
       ::= { ifRcvAddressEntry 1 }

   ifRcvAddressStatus OBJECT-TYPE
       SYNTAX      RowStatus
       MAX-ACCESS  read-write
       STATUS      current
       DESCRIPTION
               "This object is used to create and delete rows in the
               ifRcvAddressTable."

       ::= { ifRcvAddressEntry 2 }

   ifRcvAddressType OBJECT-TYPE
       SYNTAX      INTEGER {
                       other(1),
                       volatile(2),
                       nonVolatile(3)
                   }

       MAX-ACCESS  read-create
       STATUS      current
       DESCRIPTION
               "This object has the value nonVolatile(3) for those
               entries in the table which are valid and will not be
               deleted by the next restart of the managed system.
               Entries having the value volatile(2) are valid and
               exist, but have not been saved, so that will not exist
               after the next restart of the managed system.  Entries
               having the value other(1) are valid and exist but are
               not classified as to whether they will continue to
               exist after the next restart."

       DEFVAL  { volatile }

       ::= { ifRcvAddressEntry 3 }


   -- definition of interface-related traps.

   linkDown NOTIFICATION-TYPE
       OBJECTS { ifIndex, ifAdminStatus, ifOperStatus }
       STATUS  current
       DESCRIPTION
               "A linkDown trap signifies that the SNMPv2 entity,
               acting in an agent role, has detected that the
               ifOperStatus object for one of its communication links
               is about to transition into the down state."
       ::= { snmpTraps 3 }

   linkUp NOTIFICATION-TYPE
       OBJECTS { ifIndex, ifAdminStatus, ifOperStatus }
       STATUS  current
       DESCRIPTION
               "A linkUp trap signifies that the SNMPv2 entity,
               acting in an agent role, has detected that the
               ifOperStatus object for one of its communication links
               has transitioned out of the down state."
       ::= { snmpTraps 4 }


   -- conformance information

   ifConformance OBJECT IDENTIFIER ::= { ifMIB 2 }

   ifGroups      OBJECT IDENTIFIER ::= { ifConformance 1 }
   ifCompliances OBJECT IDENTIFIER ::= { ifConformance 2 }


   -- compliance statements

   ifCompliance MODULE-COMPLIANCE
       STATUS  current
       DESCRIPTION
               "The compliance statement for SNMPv2 entities which
               have network interfaces."

       MODULE  -- this module
           MANDATORY-GROUPS { ifGeneralGroup, ifStackGroup }

           GROUP       ifFixedLengthGroup
           DESCRIPTION
               "This group is mandatory for all network interfaces
               which are character-oriented or transmit data in
               fixed-length transmission units."

           GROUP       ifHCFixedLengthGroup
           DESCRIPTION
               "This group is mandatory only for those network
               interfaces which are character-oriented or transmit
               data in fixed-length transmission units, and for which
               the value of the corresponding instance of ifSpeed is
               greater than 20,000,000 bits/second."

           GROUP       ifPacketGroup
           DESCRIPTION
               "This group is mandatory for all network interfaces
               which are packet-oriented."

           GROUP       ifHCPacketGroup
           DESCRIPTION
               "This group is mandatory only for those network
               interfaces which are packet-oriented and for which the
               value of the corresponding instance of ifSpeed is
               greater than 650,000,000 bits/second."
           GROUP       ifTestGroup
           DESCRIPTION
               "This group is optional.  Media-specific MIBs which
               require interface tests are strongly encouraged to use
               this group for invoking tests and reporting results.
               A medium specific MIB which has mandatory tests may
               make implementation of this group mandatory."

           GROUP       ifRcvAddressGroup
           DESCRIPTION
               "The applicability of this group MUST be defined by
               the media-specific MIBs.  Media-specific MIBs must
               define the exact meaning, use, and semantics of the
               addresses in this group."

           OBJECT      ifLinkUpDownTrapEnable
           MIN-ACCESS  read-only
           DESCRIPTION
               "Write access is not required."

           OBJECT      ifPromiscuousMode
           MIN-ACCESS  read-only
           DESCRIPTION
               "Write access is not required."

           OBJECT      ifStackStatus
           SYNTAX      INTEGER { active(1) } -- subset of RowStatus
           MIN-ACCESS  read-only
           DESCRIPTION
               "Write access is not required, and only one of the six
               enumerated values for the RowStatus textual convention
               need be supported, specifically: active(1)."

           OBJECT       ifAdminStatus
           SYNTAX       INTEGER { up(1), down(2) }
           MIN-ACCESS   read-only
           DESCRIPTION
               "Write access is not required, nor is support for the
               value testing(3)."
       ::= { ifCompliances 1 }


   -- units of conformance

   ifGeneralGroup    OBJECT-GROUP
       OBJECTS { ifDescr, ifType, ifSpeed, ifPhysAddress,
                 ifAdminStatus, ifOperStatus, ifLastChange,
                 ifLinkUpDownTrapEnable, ifConnectorPresent,
                 ifHighSpeed, ifName }
       STATUS  current
       DESCRIPTION
               "A collection of objects providing information
               applicable to all network interfaces."
       ::= { ifGroups 1 }

   -- the following five groups are mutually exclusive; at most
   -- one of these groups is implemented for any interface

   ifFixedLengthGroup    OBJECT-GROUP
       OBJECTS { ifInOctets, ifOutOctets, ifInUnknownProtos,
                 ifInErrors, ifOutErrors }
       STATUS  current
       DESCRIPTION
               "A collection of objects providing information
               specific to non-high speed, character-oriented or
               fixed-length-transmission network interfaces.  (Non-
               high speed interfaces transmit and receive at speeds
               less than or equal to 20,000,000 bits/second.)"
       ::= { ifGroups 2 }

   ifHCFixedLengthGroup    OBJECT-GROUP
       OBJECTS { ifHCInOctets, ifHCOutOctets,
                 ifInOctets, ifOutOctets, ifInUnknownProtos,
                 ifInErrors, ifOutErrors }
       STATUS  current
       DESCRIPTION
               "A collection of objects providing information
               specific to high speed (greater than 20,000,000
               bits/second) character-oriented or fixed-length-
               transmission network interfaces."
       ::= { ifGroups 3 }

   ifPacketGroup    OBJECT-GROUP
       OBJECTS { ifInOctets, ifOutOctets, ifInUnknownProtos,
                 ifInErrors, ifOutErrors,
                 ifMtu, ifInUcastPkts, ifInMulticastPkts,
                 ifInBroadcastPkts, ifInDiscards,
                 ifOutUcastPkts, ifOutMulticastPkts,
                 ifOutBroadcastPkts, ifOutDiscards,
                 ifPromiscuousMode }
       STATUS  current
       DESCRIPTION
               "A collection of objects providing information
               specific to non-high speed, packet-oriented network
               interfaces.  (Non-high speed interfaces transmit and
               receive at speeds less than or equal to 20,000,000
               bits/second.)"
       ::= { ifGroups 4 }

   ifHCPacketGroup    OBJECT-GROUP
       OBJECTS { ifHCInOctets, ifHCOutOctets,
                 ifInOctets, ifOutOctets, ifInUnknownProtos,
                 ifInErrors, ifOutErrors,
                 ifMtu, ifInUcastPkts, ifInMulticastPkts,
                 ifInBroadcastPkts, ifInDiscards,
                 ifOutUcastPkts, ifOutMulticastPkts,
                 ifOutBroadcastPkts, ifOutDiscards,
                 ifPromiscuousMode }
       STATUS  current
       DESCRIPTION
               "A collection of objects providing information
               specific to high speed (greater than 20,000,000
               bits/second but less than or equal to 650,000,000
               bits/second) packet-oriented network interfaces."
       ::= { ifGroups 5 }

   ifVHCPacketGroup    OBJECT-GROUP
       OBJECTS { ifHCInUcastPkts, ifHCInMulticastPkts,
                 ifHCInBroadcastPkts, ifHCOutUcastPkts,
                 ifHCOutMulticastPkts, ifHCOutBroadcastPkts,
                 ifHCInOctets, ifHCOutOctets,
                 ifInOctets, ifOutOctets, ifInUnknownProtos,
                 ifInErrors, ifOutErrors,
                 ifMtu, ifInUcastPkts, ifInMulticastPkts,
                 ifInBroadcastPkts, ifInDiscards,
                 ifOutUcastPkts, ifOutMulticastPkts,
                 ifOutBroadcastPkts, ifOutDiscards,
                 ifPromiscuousMode }
       STATUS  current
       DESCRIPTION
               "A collection of objects providing information
               specific to higher speed (greater than 650,000,000
               bits/second) packet-oriented network interfaces."
       ::= { ifGroups 6 }

   ifRcvAddressGroup    OBJECT-GROUP
       OBJECTS { ifRcvAddressStatus, ifRcvAddressType }
       STATUS  current
       DESCRIPTION
               "A collection of objects providing information on the
               multiple addresses which an interface receives."
       ::= { ifGroups 7 }

   ifTestGroup    OBJECT-GROUP
       OBJECTS { ifTestId, ifTestStatus, ifTestType,
                 ifTestResult, ifTestCode, ifTestOwner }
       STATUS  current
       DESCRIPTION
               "A collection of objects providing the ability to
               invoke tests on an interface."
       ::= { ifGroups 8 }

   ifStackGroup    OBJECT-GROUP
       OBJECTS { ifStackStatus }
       STATUS  current
       DESCRIPTION
               "A collection of objects providing information on the
               layering of MIB-II interfaces."
       ::= { ifGroups 9 }

   END
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\wmi\wbem\providers\snmpprovider\smir_mofs\snmpv1\rfcs\placefil.txt ===
rfc1213.mof	WMI_PSDK\SNMP\SMIR_MOFS\SNMPv1\RFCs\
rfc1229.mof	WMI_PSDK\SNMP\SMIR_MOFS\SNMPv1\RFCs\
rfc1230.mof	WMI_PSDK\SNMP\SMIR_MOFS\SNMPv1\RFCs\
rfc1231.mof	WMI_PSDK\SNMP\SMIR_MOFS\SNMPv1\RFCs\
rfc1238.mof	WMI_PSDK\SNMP\SMIR_MOFS\SNMPv1\RFCs\
rfc1253.mof	WMI_PSDK\SNMP\SMIR_MOFS\SNMPv1\RFCs\
rfc1269.mof	WMI_PSDK\SNMP\SMIR_MOFS\SNMPv1\RFCs\
rfc1271.mof	WMI_PSDK\SNMP\SMIR_MOFS\SNMPv1\RFCs\
rfc1285.mof	WMI_PSDK\SNMP\SMIR_MOFS\SNMPv1\RFCs\
rfc1304.mof	WMI_PSDK\SNMP\SMIR_MOFS\SNMPv1\RFCs\
rfc1315.mof	WMI_PSDK\SNMP\SMIR_MOFS\SNMPv1\RFCs\
rfc1316.mof	WMI_PSDK\SNMP\SMIR_MOFS\SNMPv1\RFCs\
rfc1317.mof	WMI_PSDK\SNMP\SMIR_MOFS\SNMPv1\RFCs\
rfc1318.mof	WMI_PSDK\SNMP\SMIR_MOFS\SNMPv1\RFCs\
rfc1354.mof	WMI_PSDK\SNMP\SMIR_MOFS\SNMPv1\RFCs\
rfc1381.mof	WMI_PSDK\SNMP\SMIR_MOFS\SNMPv1\RFCs\
rfc1382.mof	WMI_PSDK\SNMP\SMIR_MOFS\SNMPv1\RFCs\
rfc1389.mof	WMI_PSDK\SNMP\SMIR_MOFS\SNMPv1\RFCs\
rfc1398.mof	WMI_PSDK\SNMP\SMIR_MOFS\SNMPv1\RFCs\
rfc1406.mof	WMI_PSDK\SNMP\SMIR_MOFS\SNMPv1\RFCs\
rfc1407.mof	WMI_PSDK\SNMP\SMIR_MOFS\SNMPv1\RFCs\
rfc1414.mof	WMI_PSDK\SNMP\SMIR_MOFS\SNMPv1\RFCs\
rfc1461.mof	WMI_PSDK\SNMP\SMIR_MOFS\SNMPv1\RFCs\
rfc1471.mof	WMI_PSDK\SNMP\SMIR_MOFS\SNMPv1\RFCs\
rfc1472.mof	WMI_PSDK\SNMP\SMIR_MOFS\SNMPv1\RFCs\
rfc1473.mof	WMI_PSDK\SNMP\SMIR_MOFS\SNMPv1\RFCs\
rfc1474.mof	WMI_PSDK\SNMP\SMIR_MOFS\SNMPv1\RFCs\
rfc1493.mof	WMI_PSDK\SNMP\SMIR_MOFS\SNMPv1\RFCs\
rfc1512.mof	WMI_PSDK\SNMP\SMIR_MOFS\SNMPv1\RFCs\
rfc1513.mof	WMI_PSDK\SNMP\SMIR_MOFS\SNMPv1\RFCs\
rfc1514.mof	WMI_PSDK\SNMP\SMIR_MOFS\SNMPv1\RFCs\
rfc1515.mof	WMI_PSDK\SNMP\SMIR_MOFS\SNMPv1\RFCs\
rfc1516.mof	WMI_PSDK\SNMP\SMIR_MOFS\SNMPv1\RFCs\
rfc1525.mof	WMI_PSDK\SNMP\SMIR_MOFS\SNMPv1\RFCs\
rfc1559.mof	WMI_PSDK\SNMP\SMIR_MOFS\SNMPv1\RFCs\
rfc1593.mof	WMI_PSDK\SNMP\SMIR_MOFS\SNMPv1\RFCs\
rfc1742.mof	WMI_PSDK\SNMP\SMIR_MOFS\SNMPv1\RFCs\
rfc1757.mof	WMI_PSDK\SNMP\SMIR_MOFS\SNMPv1\RFCs\
rfc1792.mof	WMI_PSDK\SNMP\SMIR_MOFS\SNMPv1\RFCs\
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\wmi\wbem\providers\wdmprovider\wdmhiperf.doc ===
Microsoft Word Document MSWordDoc Word.Document.8Unassigned Microsoft Unassigned Title Version Distribution Component Feature Product Product Version Project Status Internal Unassigned Unassigned Quasar Quasar DraftUnassigned Jenny McCollum WBEM Specification Jenny McCollum Microsoft Word 9.0&v6_</l WDMHiPerf jennymc jennymcbjbjU WDM  Provider Spec Title WDM Provider Version  DOCPROPERTY "Version"  \* MERGEFORMAT  Distribution  FORMDROPDOWN  Component Providers Feature area Feature scope A Feature Product  DOCPROPERTY "Product"  \* MERGEFORMAT  Product Version  DOCPROPERTY "Product Version"  \* MERGEFORMAT  Quasar Project  DOCPROPERTY "Project"  \* MERGEFORMAT  Quasar Author  AUTHOR \* FirstCap \* MERGEFORMAT  Jenny McCollum Manager Nadir Ahmed Status  FORMDROPDOWN  Last Changed 2/16/2000 Revision Summary Version Author Changes 2/16/2000 Jenny Initial draft Overview This document describes the functionality of the WDM Provider.  The WDM Provider is an instance, method, event, pseudo-class and hi perf provider. The hi-perf component will be part of the Quasar time frame and will ship as part of W2K+1 and additionally on the web for platforms that have already been released to Manufacture.  The remaining components have already been shipped. Goals & Objectives The goal of this document is to describe the set of interfaces that will be exposed from the WDM Provider and the functionality of the WDMLIB.LIB - which processes the WNODES and manages calls to the WDM APIs. Dependencies The WDM Provider will be dependent upon a stable set of WDM APIs to be delivered by Alan Warwick. This spec covers two components that must be maintained by this team.   WDMLIB.LIB -  An internal project library which contains the common processing code which actually calls into WDM and parses the WNODES. WDMPROV.DLL  - The actual provider that is shipped. The WDMLIB.LIB is dependent upon the following libraries: $(WBEMCOMN_STATIC_LIB) \ $(STDLIBRARY_LIB) \ $(MINIMFC_LIB) \ $(WMIIDL_LIB) \ $(WBEMINT_LIB) \ $(UTILLIB_LIB) \ $(WDMLIB_ADVAPIP_LIB) \ $(SDK_LIB_PATH)\wmip.lib \ $(SDK_LIB_PATH)\ole32.lib \ $(SDK_LIB_PATH)\oleaut32.lib \ $(SDK_LIB_PATH)\uuid.lib \ $(SDK_LIB_PATH)\kernel32.lib \ $(SDK_LIB_PATH)\advapi32.lib \ $(SDK_LIB_PATH)\vccomsup.lib \ $(SDK_LIB_PATH)\rpcrt4.lib \ $(SDK_LIB_PATH)\user32.lib\ The WMIPROV.DLL is dependent upon the following libraries: $(WBEMCOMN_STATIC_LIB)\ $(STDLIBRARY_LIB) \ $(MINIMFC_LIB) \ $(WMIIDL_LIB) \ $(WBEMINT_LIB) \ $(UTILLIB_LIB) \ $(ESSCLI_STATIC_LIB) \ $(WDMLIB_LIB) \ $(WDMLIB_ADVAPIP_LIB) \ $(SDK_LIB_PATH)\ole32.lib \ $(SDK_LIB_PATH)\oleaut32.lib \ $(SDK_LIB_PATH)\uuid.lib \ $(SDK_LIB_PATH)\wmip.lib\ $(SDK_LIB_PATH)\kernel32.lib \ $(SDK_LIB_PATH)\advapi32.lib \ $(SDK_LIB_PATH)\vccomsup.lib \ $(SDK_LIB_PATH)\rpcrt4.lib \ $(SDK_LIB_PATH)\user32.lib Security All security is handled within the WMIPROV.DLL.  The WDM apis will only allow clients with SecurityImpersonation and SecurityDelegation levels only, so the WMIPROV.DLL must check client impersonation each time one of the following interfaces is called:  STDMETHODIMP CRefresher::Refresh STDMETHODIMP CWDM_Prov::Initialize STDMETHODIMP CWDM_Prov::QueryInstances STDMETHODIMP CWDM_Prov::CreateRefreshableEnum STDMETHODIMP CWDM_Prov::GetObjects STDMETHODIMP CWMIEventProvider::ProvideEvents STDMETHODIMP CWMIEventProvider::NewQuery STDMETHODIMP CWMIEventProvider::CancelQuery STDMETHODIMP CWMIEventProvider::AccessCheck HRESULT CWDM_Prov::PutInstanceAsync HRESULT CWDM_Prov::CreateInstanceEnumAsync HRESULT CWDM_Prov::ExecQueryAsync HRESULT CWDM_Prov::GetObjectAsync STDMETHODIMP CWDM_Prov::ExecMethodAsync In addition, when the namespace is initially opened, the WMIPROV.DLL will query WDM for a list of WDM enabled and available drivers, before this query is executed the provider must insure the proper security level is available before calling into WDM.  If it is not, then the local notification events are not setup and will be checked again the next time any of the above methods listed are called. Provider registration The provider will export DllRegisterServer and DLLUnregisterServer.  The following keys will be either added or deleted, depending upon which function is called:       The keys for the WMI Instance Provider (includes pseudo-class and method provider):  HKEY_CLASSES_ROOT\CLSID\{D2D588B5-D081-11d0-99E0-00C04FC2F8EC}\ WDM Instance Provider HKEY_CLASSES_ROOT\CLSID\{D2D588B5-D081-11d0-99E0-00C04FC2F8EC} \InProcServer32\ WMIProv.dll HKEY_CLASSES_ROOT\CLSID\{D2D588B5-D081-11d0-99E0-00C04FC2F8EC} \InProcServer32\ThreadingModel\       The keys for the WMI Event Provider:  HKEY_CLASSES_ROOT\CLSID\{0725C3CB-FEFB-11d0-99F9-00C04FC2F8EC}\ WDM Event Provider HKEY_CLASSES_ROOT\CLSID\{0725C3CB-FEFB-11d0-99F9-00C04FC2F8EC} \InProcServer32\ WMIProv.dll HKEY_CLASSES_ROOT\CLSID\{0725C3CB-FEFB-11d0-99F9-00C04FC2F8EC} \InProcServer32\ThreadingModel\      The keys for the WMI HiPerf Provider:  HKEY_CLASSES_ROOT\CLSID\{F5280F80-0D8C-4fb7-B60D-CEB99AB45DBC}\ WDM HiPerf Provider HKEY_CLASSES_ROOT\CLSID\{F5280F80-0D8C-4fb7-B60D-CEB99AB45DBC} \InProcServer32\ WMIProv.dll HKEY_CLASSES_ROOT\CLSID\{F5280F80-0D8C-4fb7-B60D-CEB99AB45DBC} \InProcServer32\ThreadingModel\ As the WDM Hi Perf provider is now included with the existing WDM Instance and Event providers, no further work is required by the setup team. Scope of operating system support The WDM provider will only work on Win98, Millenium, Windows 2000 due to the dependency on the WDM layer which is only supported on the above platforms. Prerequisites  The operation of the WDM Provider is dependent upon the successfully compilation of the WMI.MOF, which will create the namespace. External Component Dependencies The WDM Provider is dependent upon components that are included in the operating system: Operating, International Support The provider will define a number of makefiles representing the lists of platforms that require different makefile declarations.  The provider will be required to support full Unicode or full Ansi depending on the platforms that are supported by the provider. The provider will not be accepted into test unless all imported system functions refer to the Unicode or Ansi versions depending on the platform. The following table defines the language support. Platform Language support Win98 Millenium Windows 2000 Unicode All constant strings specified in the provider implementation and used for internal purposes will be placed in a common header.  Logging support The WDM provider will continue to use the existing core logging facility.  The format of the registry is documented in the WMI documentation.   This requires that WMILIB.LIB defines the following in order to identify the log file.   #define THISPROVIDER LOG_WIMPROV LOG_WIMPROV is defined in the core logging facility as one of the official logs it maintains. In order to enter an item in the log, the following macro is called: ERRORTRACE((THISPROVIDER,"Text Message....%x\n",nSize)); The ERRORTRACE macro is defined in the core common include files. Performance and Scalability The Hi Performance provider within WMIPROV.DLL must be able to meet the following refreshing requirements:  12,000 per second. Test coverage Although every WDM driver, in theory, can be a hi perf driver, the WDM Provider will require WDM Hi Performance drivers in order to provide adequate test coverage.   The EVERYTHING.SYS driver, supported by test, should be updated to return hi performance data. The WMIPROV.DLL and WDMLIB.LIB architecture The WDM Provider is composed of two major pieces.  The WDMLIB.LIB and the WDMPROV.DLL, which uses the WDMLIB.LIB. The following represents a high-level view of the relationships of the major classes within the Provider: CWDM_Prov The class that contains the instance, method, class and hi perf provider and the WMIHandleMap and WMIHiPerfHandleMap. CWDM_Event The class that contains the event provider and WMIHandleMap. CWDMHiPerfShell The class that calls the hi perf apis . CWDMStandardShell The class that calls the standard apis. CWDMHiPerfDataBlock Parses the WNODEs and sets the information using IWbemObjectAccess. CWDMStandardDataBlock Parses the WNODEs and sets the information using IWbemClassObject CWDMProcessClass Contains all of the information in order to process the class. CWDM_IDOrder Determines the order of the WMIDataIds/Properties, in order to translate the WNODE   basically, contains the mapping of the WNODE. CWMI_Management Contains all of the pointers necessary to communicate with the core, such as IwbemServices, IwbemContext, etc. WMIPROV.DLL The WDMLIB.LIB exposes two classes - CWMIStandardShell and  CWMIHiPerfShell   that are used by the WMIProv.dll to query WDM, extract the data and fill in the IWbemClassObject or IWbemObjectAccess objects. The provider will expose the following interfaces ( the ones listed below are the ones that contain significant processing, interfaces such as AddRef(), the class factory interfaces,etc., are not included in this spec as they are self-explanatory): All access to internal lists and handle maps are protected by critical sections.  All calls to the parser and WDM shells are protected by try/catch blocks. Upon failure, the provider will return an extended error object, containing either a specific WDM error message - return value, or a Win32_PrivilegesStatus, if applicable. Upon success, the provider will set the status then return. The WMIPROV.DLL also has two main classes: CWDM_PROV that inherits from IWbemServices,                                IWbemProviderInit,                                IwbemHiPerfProvider CWDM_EVENT that inherits from IWbemEventProvider,                                 IWbemEventProviderQuerySink,                                 IWbemProviderInit,                                IWbemEventProviderSecurity The Instance Provider HRESULT CWDM_Prov::Initialize The provider calls RevertToSelf() ( as everyone has the rights to see classes ) then the CWMIBinMof class to process the binary mofs and clean up the namespace.   After this is completed, the provider then registers for binary mof added/deleted events.  This function is only called once, when the namespace is opened.  Before returning, the provider impersonates the client. HRESULT CWDM_Prov::CreateInstanceEnumAsync The provider impersonates the client, and checks to make sure the client has sufficient privileges, then calls the CWDMStandardShell ProcessAllInstances to get a list of all of the instances of the requested class.  HRESULT CWDM_Prov::PutInstanceAsync The provider impersonates the client, and checks to make sure the client has sufficient privileges, then checks the context to determine if we are setting a single property, or the whole instance.  If there is no context object, then obviously, put the whole instance, otherwise if __PUT_EXT_PROPERTIES is set, then send the list to the CWDMStandardShell FillInAndSubmitWMIDataBlob function to write the information. STDMETHODIMP CWDM_Prov::ExecMethodAsync The provider impersonates the client, and checks to make sure the client has sufficient privileges, then the path is parsed, using the CObjectPathParser.   The class is checked for input and output parameter classes, then all of the information is sent to the CWDMStandardShell ExecuteMethod function to execute the method and get the input/output data. HRESULT CWDM_Prov::GetObjectAsync The provider impersonates the client, and checks to make sure the client has sufficient privileges, then the path is parsed to get the class name.  The CWDMStandardShell ProcessSingleInstance function is called to get the instance of the specified object. The Event Provider  STDMETHODIMP CWMIEventProvider::Initialize Checks to make sure the class  WMIEvent  is defined in the namespace. STDMETHODIMP CWMIEventProvider::ProvideEvents Opportunity for internal initialization and returns S_OK STDMETHODIMP CWMIEventProvider::NewQuery The provider impersonates the client, and checks to make sure the client has sufficient privileges, then uses the SQL1_Parser to get the class name,  and calls the CWDMStandardShell RegisterWMIEvent function to register the event, providing the address of the call back function, for WDM to call once the event triggers.  The id of the event is stored in the event list, along with the WDM identifying information. STDMETHODIMP CWMIEventProvider::CancelQuery The provider impersonates the client, and checks to make sure the client has sufficient privileges, then if the event id is found in the event list, the CWDMStandardShell RemoveWMIEvent function is called. STDMETHODIMP CWMIEventProvider::AccessCheck This is only valid on NT, if running on Win9x, simply returns success.  The provider impersonates the client, and checks the access permissions when the client subscribes to the specified event to make sure they have sufficient WMIGUID_QUERY privileges. The Hi Perf Provider STDMETHODIMP CWDM_Prov::QueryInstances The provider impersonates the client, and checks to make sure the client has sufficient privileges, then uses  CWDMHiPerfShell ( with WMIGUID_QUERY access ) QueryAllHiPerfData function to get a complete list of instances for the specified class. STDMETHODIMP CWDM_Prov::CreateRefresher The provider impersonates the client, and checks to make sure the client has sufficient privileges, then allocates a new refresher based upon an internal definition, initialize and addref it, then return it.     STDMETHODIMP CWDM_Prov::CreateRefreshableObject The provider impersonates the client, and checks to make sure the client has sufficient privileges, then calls the CWDMHiPerfShell AddAccessObjectToRefresher function to add the object specified by the client into the specified refresher.  An id is returned that uniquely identifies this object.  The provider maintains a HiPerfhandle map that lists the handles of Access Instances ( actual instances )and Enumerator Instances (enumerators ) and the unqiue id to identify the object. STDMETHODIMP CWDM_Prov::CreateRefreshableEnum The provider impersonates the client, and checks to make sure the client has sufficient privileges, then calls the CWDMHiPerfShell AddEnumeratorObjectToRefresher function to add the enumerator.  .  The provider maintains a HiPerfhandle map that lists the handles of Access Instances ( actual instances )and Enumerator Instances (enumerators ) and the unqiue id to identify the object. STDMETHODIMP CWDM_Prov::StopRefreshing The provider impersonates the client, and checks to make sure the client has sufficient privileges, then calls the CWDMHiPerfShell RemoveObjectFromHandleMap to remove an object from the refresher.  The id can be either an instance or enumerator and is removed from the HiPerf Handle Map. STDMETHODIMP CWDM_Prov::GetObjects The provider impersonates the client, and checks to make sure the client has sufficient privileges, then uses  the CWDMHiPerfShell  GetAllObjects to provide all instances currently being managed by the provider in the specified namespace ( which is only ROOT\WMI at present ). STDMETHODIMP CRefresher::Refresh The provider impersonates the client, and checks to make sure the client has sufficient privileges, then uses the CWDMHiPerfShell RefreshCompleteList to refresh a set of instances bound to a particular refresher. WDMLIB.LIB This common library is composed of the following files: BMOF.C This is copied code soon to be made into a common library by the core team CRC32.C This is copied as well, soon to be included in a common library WMIMOF.CPP This contains the code that processes the binary mofs and maintains the namespace. WMICLASS.CPP This contains the code that manages the IwbemClassObjects and IwbemAccessObjects, and provides any interface needed to these WMI objects. WMICOM.CPP This contains the code that is common to the other classes, as well as the WMI common pointers, such as IwbemServices, IwbemContext, handle maps, etc. WMIDATA.CPP This contains the code that calls the WDM interfaces and parses the WNODES. WMIMAP.CPP This contains the code that maps the WDM data types to WMI data types. WDMSHELL.CPP This is the file that exposes the external interfaces to the library, the two classes:  CWMIStandardShell and CWMIHiPerfShell Processing the Binary Mofs and Managing the Namespace The provider extracts and submits the binary mofs by querying WDM for ROM binary mofs or via WDM enabled drivers and automatically maintains the namespace.  Before querying for the binary mofs, the provider calls RevertToSelf(), as everyone has the right to see the classes, they just may not have the right to get instances. These classes process this binary mof and maintain the namespace. CWMIBinMof   Queries WDM and processes the binary mofs, if needed, then calls the namespace class to determine if any classes are to be deleted. CNamespaceManagement This class maps drivers to classes and determines if any classes or drivers need to be deleted after all of the latest binary mofs have been processed. The first time the namespace is opened, the provider does the following: Queries the WDM layer by creating a CWDMStandardShell class and calling the function   QueryAndProcessAllBinaryGuidInstances(), which queries WDM with the GUID {05901221-D566-11d1-B2F0-00A0C9062910} .  This will return a list of instances, with the binary mofs inserted into the data blocks.  Simply open the data block and continue identical processing as if the binary mof had just been extracted from the physical file, as stated below.  Loop through all instances, and build up the namespace management query as specified below. Queries the WDM layer by calling WmiMofEnumerateResources for a list of binary mof resources, this list is composed of a filename/resource combination, or the name of a class to query   The provider processes each of these resources, there are two types: A file name of a file and resource name, in order to extract the binary mof as a named resource from the physical file. A class to query for and receive the binary mof as a WNODE. The provider will loop through the list.  If the resource is a filename/resouce name combination: The provider will go to the specified location and get the date/time of the file, using:     GetFileTime( (HANDLE)hFile, &ftCreationTime,  &ftLastAccessTime, &ftLastWriteTime )) Then it will attempt to open an instance of WMIBinaryMofResource, with the key of the complete path[resource] of the specified file  If it isn t found, then we know we have never processed this driver before, so we go ahead and process it. If it is found, compare the file date and time.  If the time matches,  do NOT process it, as this is the latest verion.  If it does not match, then process the binary mof. If it is determined the binary mof needs to be processed, the binary mof must be physically extracted from the file by loading the file and finding the resource, using LoadLibraryEx and FindResource().  Once a pointer to the data is found, then process the binary mof.  If the resource is a GUID to query: Submit the guid to WMIQuerySingleInstance, then open the WNODE to get a pointer to the data block.  Take the data block and calculate the CRC using the CRC32 utility class.  Construct the key ( which is the instance name[guid] ) and try to open an instance of WMIBinaryMofResource, using this constructed key.   If it isn t found, then we know we have never processed this binary mof before, so process it.   If it is found, compare the CRC   which is stored in the upper date field. If it matches, do nothing.  If it does not match, then process the binary mof. Processing the binary mof To process a binary mof, the binary mof must be decompressed.  The first 4 DWORDS are the signature, compression type and sizes.  The signature must equal BMOF_SIG, and the compression type must be 1.  Using the expanded size ( the 4th DWORD ), allocate enough memory to hold the decompressed mof, then ship it off to the CbaseMrciCompression class to decompress it. After it has been decompressed, call CoCreateInstance(CLSID_WinmgmtMofCompiler  ) and send the binary mof via the WinmgmtCompileBuffer function.  Note:  The flags must be set to 65536, as the WinmgmtCompileBuffer function is hardcoded to look for this flag and automatically put everything in the ROOT\WMI namespace. After processing a binary mof After successfully processing a binary mof/ WNODE, create an instance of WMIBinaryMofResource with the correct information. A mof that comes from a file will use the properties in the following manner:    Name            Complete path/filename[RESOURCENAME]    LowDateTime     The low date time of the file    HighDateTime    The high date time of the file A mof that comes from a WNODE will use the properties in the following manner:    Name            GUID[instance name]    LowDateTime     CRC    HighDateTime    Not used The binary mof must be parsed again (this is a good place for optimization) to get a list of classes that were in the mof   this is done using the CBMOFObjList and CBMOFObj classes.  This copied code (BMOF.C) will soon be replaced by a common library and the provider will be modified to call these functions. The list, along with the information just entered in the WMIBinaryMofResource, which uniquely identifies a driver, is passed to the CNamespaceManagement class, to create the mappings of classes to the driver, and to delete any classes that may have been deleted since the last time the mof was processed. The CNamespaceManagement class creates an instance of WDMClassesOfDriver for each class extracted from the mof with the following properties:    Driver        The value of WMIBinaryMofResource.Name    ClassName     The name of the class    LowDateTime The value of the WMIBinaryMofResource.LowDateTime    HighDateTime  The value of WMIBinaryMofResource.HighDateTime        Maintaining the Namespace It is necessary to have clean up functions to do such actions as deleting stranded classes and old drivers, as it is possible that system crashes, or the user turning off the machine may leave binary mof processing in an unintended state.  Namespace maintenance is done only once, when the namespace is first opened and after all of the current binary mofs have been processed. A query to find drivers no longer WDM enabled will be built up while looping through the list of binary mofs ( via instances and/or drivers ).  This query will be: select * from WMIBinaryMofResource where Name !=  Once all binary mofs have been processed,  CNamespaceManagement class is called to do the following clean up actions: Delete any old drivers that may now be left stranded in the namespace by executing the query that was built above.  For each WMIBinaryMofResource instance returned, get the key of the instance and the high and low dates, if that isn t the one we just entered, then delete any classes that belongs to this unique combination.  This is done via the following query: Once all of the classes we have a record of have been successfully deleted, then delete the instance of WMIBinaryMofResource.  If any error was encountered, do NOT delete the instance of WMIBinaryMofResource. Deleting old classes of a specified driver The query to delete old classes of a specified unique driver is this: select * from WDMClassesOfDriver where Driver = x and (HighDateTime != 111) or (LowDateTime != 222) Now, just because we get a class name here doesn't mean we delete the class, this class could have been updated, in that case we just delete the instance of the WDMClassesOfDriver.  So, in order to check if this class REALLY needs to be deleted or not, we construct the key of the class name with the latest high and low date time of the driver that was passed into this function.  If we get the object, then we know the class is still valid and was simply updated, so just delete the instance of WDMClassesOfDriver with the old dates. If we did not get an instance, we must make certain no other driver owns the class as more than one driver may own a class.  If nobody else owns it, then delete the class definition.  To determine if someone else owns the class, the following query is used: "select * from WDMClassesOfDriver where ClassName = x and Driver != y If nothing is returned, then we know no other driver owns the class. Deleting stranded classes This is a maintenance function that deletes any classes that are not tied to drivers.  This can be determined with the following queries: First,  select * from WMIBinaryMofResource  to get a list of all current drivers in the system.  Initialize the final query,  select * from WDMClassesOfDriver where Driver !=   while looping through the list of drivers from the first query.  For each driver in the list, delete any old classes that do not have the matching high and low dates, accomplish this by calling the DeleteOldClasses function that was already described above. Then, execute the query that was built up, for each class that is returned via this query, delete the instance that was returned, then get the driver and classname, if someone else does t own this class ( remember, more than one driver can own a class ), then delete the class definition, otherwise leave it there.  Processing binary mofs via events After the initial processing when the namespace is first opened, the provider registers for two events, by initializing the global CWDMEvent pointer, this is an instance of the internal event provider class.  Once the pointer is successfully initialized, protected by critical sections, then the RegisterForWMIEvents function is called with the following GUIDS: BINARY MOFS ADDED B48D49A2-E777-11D0-A50C-00A0C9062910 BINARY MOFS DELETED  B48D49A3-E777-11d0-A50C-00A0C9062910 Upon successful registration for this event, the GUID that was successfully is entered into the internal event list.  These events are registered as LOCAL SYSTEM. When an event is received, the GUID is compared with the internal list, if it is determined to b one of the above, the name block is parsed ( for more information on the name and instance blocks, see the section regarding WNODES and parsing the data blocks ). The instance name residing in the name block contains two strings, the first string is the image path, the second is the resource path.  If both strings are filled out, we know we are dealing with a binary mof that is located in a driver, where we must locate the driver and extract the specified mof.  If just the resource name is filled out, then we know we are given a guid to query instances for. If we have received a BINARY MOFS DELETED event, then we delete all classes tied to that resource, and the instance in WMIBinaryMofResource. If we have received a BINARY_MOFS_ADDED event, then we send it to the same processing as above, once we have extracted the binary mof. The WDM APIs  (expensive and not-so-expensive calls regarding Handle Maps) Calls to the WDM APIs are wrapped by the classes CWDMStandardShell, CWDMHiPerfShell, and WDMDataBlock.   WDM deals only in GUIDS, so the class qualifier of GUID must be read in order to obtain the GUID to send to the WDM layer. This wrapper classes require a handle map of which there are two types, one handle map (WMIHandleMap) deals with requests coming via the instance, event, method, class provider, the other handle map ( WMIHiPerfHandleMap ) deals only with hi perf handles.  The purpose of the handle map is to keep the expensive handles open until the provider is unloaded or, as in the case of the hi perf classes, the class is no longer wanted.  The handle map is kept with the parent class, either the CWDM_Prov, CWDM_Event or CWDM_Perf and access is always protected by critical section.  Since the provider uses per-user initialization, each user will get their own handle map. When using a regular WMIHandleMap, and a request comes through, the handle map is checked to see if a handle for that guid is already open, if it is, it is reused, if it isn t, then the WmiQueryGuidInformation api is called to determine if the handle is expensive or not (a WMIGUIDINFORMATION parameter is returned ).  If it is expensive, then the handle is saved in the list and a flag is set, so it won t be closed.  The following information is saved about each handle: HANDLE WMIHandle      The handle returned by the WDM api WmiOpenBlock GUID   Guid           The GUID of the class used in WmiOpenBlock ULONG  uDesiredAccess A combination of the below access flags LONG   RefCount       For future use The access flags used are these: WMIGUID_QUERY- Read access only to the WDM api layer This permission is used for calls generated from CreateInstanceEnumAsync, CreateRefresher,  CreateRefreshableObject, CreateRefreshableEnum,Refresh,StopRefreshing, QueryInstances,  GetObjectAsync WMIGUID_NOTIFICATION | WMIGUID_QUERY   Read access and event access This permission is used for calls generated from ProvideEvents, NewQuery, CancelQuery, AccessCheck,  WMIEventCallback, ExecQueryAsync WMIGUID_QUERY|WMIGUID_EXECUTE- Read access only to the WDM api layer This permission is used for calls generated from the binary mof processing and ExecMethodAsync WMIGUID_SET|WMIGUID_QUERY   Read/Write access to the WDM api layer This permission is used for calls generated from PutInstanceAsync When using the WMIHiPerfHandleMap, all handles are automatically expensive, thereby cutting down processing time by not trying to determine if the handle is expensive or not, and assumes all access is WMIGUID_QUERY.  The handle is still checked and reused if possible.  The following information is saved about each handle: Need to document this after testing is completed. Handles are closed (via WmiCloseBlock) in the following conditions: If the handle was never designated as expensive to begin with, the handle is closed when the wrapper class destructs, usually after the status has been sent back to the core and the return code is returned. If the provider is unloaded, all handle maps, in their destructors, will loop through the remaining handles and close each of them. When a Hi Perf class is no longer needed. The WDM apis are documented in the WDM DDK, but here is a very brief overview.   In general, a call to WMIOpenBlock with the guid of the class is used to obtain a handle, the handle is used in all of the subsequent apis, after receiving the results in the form of WNODES, the handle is closed with WmiCloseBlock. To register for events, use WmiNotificationRegistration with the appropriate guid ( handles not used here ), and provide the entry point as a parameter, which WDM will call back into when the event triggers.   The first time an event is registered, the flag must be passed as NOTIFICATION_CALLBACK_DIRECT, there after, subsequent requests for the same GUID must pass the flag NOTIFICATION_CHECK_ACCESS. To cancel events, use WmiNotificationRegistration, with the appropriate guid ( handles are not used here ). To see if a handle is expensive, call WmiQueryGuidInformation. To set a single property, call WmiSetSingleItem. To execute a method, call WmiExecuteMethod. To get a list of instances, call WmiQueryAllData. To get a specific object, call WmiQuerySingleInstance. To write an instance, call WmiSetSingleInstance. To get a list of Hi Perf instances, call WmiQueryAllDataMultiple. To get a list of Hi Perf specific instances, call WmiQuerySingleInstanceMultiple. The query/object path is parsed using CObjectPathParser to get the class name, path or instance name. Return codes from these WDM Apis are mapped as follows:  WDM error return code WBEM return code ERROR_WMI_GUID_NOT_FOUND    ERROR_NOT_SUPPORTED     ERROR_INVALID_FUNCTION     ERROR_WMI_SERVER_UNAVAILABLE ERROR_WMI_INSTANCE_NOT_FOUND ERROR_WMI_GUID_DISCONNECTED  WBEM_E_NOT_SUPPORTED NO_DATA_AVAILABLE ERROR_INVALID_HANDLE WBEM_E_NOT_AVAILABLE ERROR_WMI_DP_FAILED WBEM_E_INVALID_OPERATION ERROR_WMI_READ_ONLY WBEM_E_READ_ONLY ERROR_INVALID_PARAMETER WBEM_E_INVALID_PARAMETER ERROR_INVALID_DATA WBEM_E_INVALID_PARAMETER ERROR_ACCESS_DENIED ERROR_INVALID_PRIMARY_GROUP ERROR_INVALID_OWNER   WBEM_E_ACCESS_DENIED All other errors WBEM_E_FAILED Parsing WNODES and Mapping Data Types The WDM layer returns all data in the form of WNODES.  Whenever an error occurs, these WNODES  and the raw data of the complete blocks, are dumped to the WMIPROV.log so the driver writer may see what was wrong in the WNODE construction. There are two types of WNODES, WNODE_SINGLE_INSTANCE and WNODE_ALL_DATA.  The single Wnode, as the name implies, contains a single instance, while the PWNODE contains one or more. Each of these WNODES contains a WNODE_HEADER, which contains such information as the total size of the buffer we are parsing, etc.  It is of vital importance to make sure we never step out of the WNDOE, use IsBadReadPtr to check every address before accessing it, make sure that we are never asked to read outside of the block. Each WNODE contains a WNODE_HEADER.  The provider uses this information in the following way: WNODE Field How it is used BufferSize This is used to calculate the max address we are allowed to read from, this max address is used every time we are given a size of  bytes to read, to make sure we never step outside the block. ProviderId Ignored, but logged Version The WDM Version   used in the WmiSetSingleItem call. Linkage The offset of the next WNODE.  If there is a value here, after all current instances in the current WNODE are read, this offset is applied to the beginning of the buffer, to find the address of the next WNODE_HEADER, and the whole process starts again. TimeStamp.LowPart Ignored, but logged TimeStamp.HighPart Ignored, but logged Guid of the class Flags WNODE_FLAG_FIXED_INSTANCE_SIZE   this simply lets us know we are dealing with fixed instances. WNODE_FLAG_TOO_SMALL  - This is tested whenever we successfully get a WNODE, always read the header to see if this flag is set, if it is, then requery with a bigger buffer. This must be done in addition to testing the return code for ERROR_INSUFFICIENT_BUFFER The provider uses the WNODE_ALL_DATA information in the following way: WNODE Field How it is used DataBlockOffset The pointer to the data block InstanceCount How many instances are in the WNODE OffsetInstanceNameOffsets The pointer to the beginning of the name block FixedInstanceSize If we are working with a fixed instance, then use this field to get the size.           OffsetInstanceData LengthInstanceData If we are NOT working with a fixed instance, then we use these two fields to find where the instance is located and how big it is. The provider uses the WNODE_SINGLE_INSTANCE information in the following way: WNODE Field How it is used DataBlockOffset The pointer to the data block InstanceIndex Ignored, but logged OffsetInstanceName The pointer to the beginning of the name block SizeDataBlock Since we always know this is a single instance, we are always dealing with fixed instances.         DumpByte(b1,pTmp,i,nCount);         DumpByte(b2,pTmp,i,nCount);         DumpByte(b3,pTmp,i,nCount); Getting Ready to Process a Data Block Data blocks can either be of fixed instance size or dynamic instance size, so before we read the data block, we must determine what type of data ptr we are working with and adjust it accordingly.   All data within the data blocks is naturally aligned.  After we read one of the blocks and are asked to read another one, we might have to adjust the data block pointer for the next instance, as all instances are always aligned on 8 bytes, and we might not have ended on an 8 byte boundary. If we are working with a fixed instance, the first time we come through, simply set the data pointer to the value specified in the WNODE.  If it is NOT the first time, then we must adjust the data pointer for the fixed instance size and make sure we are aligned on an 8 byte boundary before we continue.   This is accomplished by always keeping an accumulative size of the block ( how many total bytes we have processed so far of the last data block ) .  We can simply test if the accumulative size is smaller than the fixed instance size, the data pointer is incremented by ( fixed instance size   accumulative size ).  Then, make sure the data is aligned on an 8 byte boundary. If we are dealing with a dynamic instance, the accumulative size of the block is set to 0.  The OffsetInstanceData field of the WNODE is an array of ULONGS that specifies the offets to the data blocks for each instance.  There is an array of InstanceCount ULONGS followed by data blocks. The first then we do is see if the current pointer points to NULL, if it does, we know we don t have a data block to read, so we are at the end.   Otherwise, the ULONG the current data pointer points to is the instance size of the data block we are about to read.  The next ULONG is the offset from the beginning of the buffer where the data block is, we are already guaranteed it is on an 8 byte boundary.  We must calculate the address to point to by adding the offset to the beginning of the buffer.  Since this is a common operation, use the following macro: #define OffsetToPtr(Base, Offset) ((PBYTE)((PBYTE)Base + Offset)) Where Base is the pointer of the WNODE returned by the WDM api, and Offset is the offset we just read from the block. Processing a Name Block The name block contains the names of the instances.  The name block is in a separate location from the data block, and is simply a list of strings   read as a WORD which specifies how many of the next bytes belongs to the string .  Name blocks and Data blocks are positionally matched, if there are three names in the name block, then there are three data blocks to match, the first belongs with the first, and so on.  If there is ever a mismatch, then error out immediately. The address of the name block is calculated by adding the offset (already determined above based on the type of WNDOE ) to the beginning of the WNODE, using OffsetToPtr macro.  If we are dealing with an WNODE_ALL_DATA block, this must be incremented each time, as the name offset points to an array of ULONGS which is an array of offsets for each instance s name. Processing a Binary Mof Data Block Binary mofs may be sent in data blocks, via events.  This is documented in the following section: Processing Binary Mofs and Managing the Namespace - Processing binary mofs via events Binary Mofs do not have corresponding name blocks.  One other note, the CRC is calculated by getting the InstanceSize from a WNODE_ALL_DATA, or SizeDataBlock from a WNODE_SINGLE_INSTANCE. Processing a Data Block Data blocks are read and written according to the WMIDATAID qualifiers.  These provide the road map to reading/writing a data block.  Before we even begin processinga data block, we have already gotten this information in the CWDMProcessClass object, and use this information to interpret the block. Data blocks are also naturally aligned, every data type is aligned on its natural boundary, with the exception of embedded classes, these are aligned on the largest data type within the class. Initializing the pointer to the data block is done differently, depending on what type of node we are dealing with. If we are dealing with a WNODE_ALL_DATA fixed instance, the data pointer is simply calculated by adding the DataBlockOffset to the beginning of the WNODE, using OffsetToPtr. If we are dealing with a WNODE_ALL_DATA dynamic instance, the data pointer is calculated by reading a ULONG at the OffseInstanceDataAndLength address, then the data pointer follows it.  The ULONG is the size of the instance. If we are dealing with a WNODE_SINGLE_INSTANCE, we know it is fixed, and the data pointer is initialized by adding the DataBlockOffset to the beginning of the WNODE. Once the data pointer is initialized, the MaxPointer is set by adding the buffer size to the base WNODE pointer.  This is to identify the maximum value we can safely read.  By always comparing our pointers to this value and using IsBadReadPtr, we are assured to always stay within the block, if directed to read outside the block, then error out immediately.  All reads must be checked before actually read. The data block is parsed by simply looping through the list of properties provided by the CWDMProcessClass object, and reading the number of bytes for each property specified, following the data type rules in the following section.  After the data is translated from WDM data types to CIM_TYPES, they are added to the wbem instance via the CWDMProcessClass interface, and the instance is returned to WMI. There are two types of arrays in a WNODE, fixed and dynamic.  Fixed arrays are specified by a qualifier of MAX on the property, and the array contains the number of elements specified in this qualifier   this information is already known at the time of reading the block.  The size of dynamic arrays are specified by the property contained in the WMISIZEIS qualifier on the array property, the property specified in this qualfier must be read first in order to determin the number of elements to read for the array from the datablock. Some properties have a qualifier of  MissingValue , this is only supported for the following data types:  CIM_SINT8 CIM_SINT32 CIM_UINT32 CIM_UINT16 CIM_SINT64 CIM_UINT64 CIM_UINT8 CIM_BOOLEAN If the value just read from the data block matches the  MissingValue  qualifier, then we need to set the property to NULL.  This is also supported for arrays of the above data types. For WNODE_ALL_DATA, after processing a complete WNODE, we need to check to see if there are any more.  If dealing with dynamic WNODES, we need to check the WnodeHeader.Linkage field.  If it is 0, then we are at the end of the list, otherwise, it specifies an offset we need to use to calculate the address of the next WNODE, using the OffsetToPtr macro.  We then need to go to the address, and read the header for that WNODE, to see how many instances are in the WNODE, the new address of the name block and data blocks, etc. Writing a Data Block Data blocks are read and written according to the WMIDATAID qualifiers.  These provide the road map to reading/writing a data block.  WDM data types are not necessarily the same as CIM types, for example, the WDM BOOL is 1 byte.  All data types must be converted before being written to the data block. It is important to remember, when writing data types, for all data types that have NULL values, we must test to see if a MissingValue qualifier is present on the property, and if it is, we must write the value specified in that qualifier, instead of the NULL value. All data types must be naturally aligned within the data block, and when writing an embedded class, the embedded class is aligned on the largest data type within the class. Input and Output parameters for methods are also constructed as data blocks, following the same rules as the instance data block. Writing a complete instance When PutInstanceAsync is called, the context is checked for the value   __PUT_EXT_PROPERTIES".  If it is not set, then we know to write the complete instance to a data block. Writing a single property When PutInstanceAsync is called, the context is checked for the value   __PUT_EXT_PROPERTIES".  If this value exists, then we are to set the properties calling WmiSetSingleItem for each property that is in the list and writing a data block containing just the one property, instead of writing the complete instance to a data block. Writing arrays of data types  There are two types of arrays in a WNODE, fixed and dynamic.  Fixed arrays are specified by a qualifier of MAX on the property, and the array that is written must match the number of elements specified in this qualifier.  The size of dynamic arrays are specified by the property contained in the WMIDATASIZE qualifier on the array property, the number of elements must be written to this property in the datablock at the specified place. All data types must be naturally aligned within the data block, and when writing an array of embedded classes, the embedded class must be aligned on the largest data type within the class. Data Type Mapping The following is a table showing how the WDM data types differ from the CIM TYPES.  The utility class CWMIDataTypeMap automatically converts the types for both reading and writing purposes.  In general, the differences are as follows: WDM Type Used CIM Type SINT64 CIM_STRING QWORD Unsigned __int64 UINT64 CIM_STRING A string: WORD+ NUMBER OF BYTE SPECIFIED IN WORD CIM_STRING CIM_CHAR CIM_UINT8 DWORD CIM_SINT32 CIM_UINT32 CIM_UINT16 DOUBLE CIM_REAL64 BOOLEAN   ONE BYTE CIM_BOOLEAN SHORT CIM_SINT16 CIM_SINT8 CIM_CHAR16 CIM_REAL32 50 BYTES CIM_DATETIME Managing the Class/Access Objects and Communicating with the Core The CWMIManagement class contains all of the information needed to communicate to the core, such as the IwbemServices, IwbemContext, IwbemObjectSink and HandleMap pointers. Error handling is accomplished by logging information to the WMIPROV.LOG, and sending back extended error objects, containing such information as the specific error codes returned when a WDM api fails, or a list of privileges needed by the user if an access denied error code is returned from WDM.   If the provider is running in HiPerf mode, access to the class is handled via IWbemObjectAccess, and handles are used to access properties, otherwise,  IWbemClassObject is used to access the properties of a class. Regardless of which mode the provider is running in, the first thing that happens, once one of the shell classes is instantiated, the information of the class is stored in the CWDMProcessClass object.  The CWDMProcessClass object sets the class name, gets the GUID ( from the guid class qualifier ), then gets the order of the WDM properties, by looping through all properties of the class and creating a list of all properties containing the WMIDATAID qualifier and in the order specified by these qualifiers.  This is the mapping by which the data block is parsed.  The following information is stored about each property: pwcsPropertyName     The name of the property pwcsEmbeddedObject    The name of the class, if it is an embedded object ltype                The CIMTYPE nWMISize             The size of bytes in WDM terms    lHandle              The handle, if we are using Hi Perf    dwArraySize          The max size of the array, whether by MAX or                          by WMISIZEIS    fPutProperty         If this property is writable. A special note here, we must deal with WMIDATAIDs that legally start with a 0 or a 1.  This must be kept in mind when looping through the list of properties, which is NOT returned in WMIDATAID order.  In general, WMIDATAIDs generated by MOFCOMP for methods start with 0, where WMIDATAIDs provided by driver writers start with 1. Only properties with WMIDATAID qualifiers will be stored in this mapping list, system properties, etc. are NOT included. The CWDMProcessClass object basically is the interface for any actions that take place within the class, such as getting/setting properties, getting qualifier information, etc.  It will use IWbemClassObject when running for the CWDMStandardShell ( the normal provider actions ) or will use IWbemObjectAccess when running for the CWDMHiPerfShell ( the Hi perf provider actions). The Standard and HiPerf Shells The CWDMStandardShell is the public interface to provide standard access to WDM functionality.  The WDMHiPerfShell is for hi performance functionality only.  These are the only two interfaces exposed from the WDM Lib that the WMIPROV.DLL uses. In the CWDMHiPerfShell, only the following data types will be supported:  DWORD and QWORD.  All other data types will cause the class to return WBEM_E_INVALID_OBJECT and the instance will not be added. When the provider methods are invoked in the WMIPROV.DLL, it creates the appropriate shell, initializes it with the IwbemServices, IwbemContext, etc. pointers and calls the public high level functions to perform the requested action. The shell constructors will set all the necessary pointers, but must be initialized with a class name to all of the information of the class it is dealing with before it may be used.  If the class is not valid, the initialization will fail. The CWDMStandardShell exposes the following interfaces: HRESULT Initialize(WCHAR * wcsClass); wcsClass    The name of the class This function initializes all of the information needed about the class, such as getting the guid to communicate with WDM and getting the mapping of the data block. HRESULT ProcessAllInstances(); This function queries WDM for all of the instances for the class that has already been initialized ( in response to CreateInstanceEnum). HRESULT ProcessSingleInstance( WCHAR * wcsInstanceName);       wcsInstanceName    The RELPATH This function queries WDM for the single instance specified ( in response to GetObjectAsync). HRESULT FillInAndSubmitWMIDataBlob( IWbemClassObject * pIClass, int                                       nTypeOfPut, CVARIANT & vList); pIClass      The class to be written nTypeOfPut   A flag specifying PUT_WHOLE_INSTANCE or PUT_SINGLE_PROPERTY VList        If this is a PUT_SINGLE_PROPERTY, then this is the list              Of properties to put individually.  This function writes either a property or an instance, depending on the value in nTypeOfPut ( in response to PutInstanceAsync ) HRESULT ProcessEvent(WORD wBinaryMofType, PWNODE_HEADER WnodeHeader); wBinaryMofType     If this is a binary mof event, it specifies whether                      the mof is being added or deleted. WnodeHeader        The WNODE that was sent when the event triggered. This function sends off the event it just received to be processed  ( in response to WDM calling the event callback function ).  Actions taken would be:  mof added, mof deleted, an instance of a class parsed and sent into WMI. HRESULT  RegisterWMIEvent( WCHAR * wcsGuid, ULONG uContext, CLSID &                             Guid, BOOL fRegistered) wcsGuid      The character form of the guid of the class to register uContext     The address of the callback function Guid         The guid that was sent to WDM fRegistered  If this event was already registered before or not. This function is called when the provider registers for events, either as  local system, for binary mofs added and deleted or when the consumer of the WDMEvent Provider has sent a new query ( in response to NewQuery). HRESULT ExecuteMethod( WCHAR * wcsInstance,                                                   WCHAR * MethodInstanceName,                        IWbemClassObject * pParentClass,                      IWbemClassObject * pInClassData,                         IWbemClassObject * pInClass,                         IWbemClassObject * pOutClass ) WcsInstance           The instance name of the object to execute the method on MethodInstanceName    The name of the method to execute PparentClass          The class of the object we are executing the method on PinClassData          The instance of the input data PinClass              The input class definition POutClass             The output class definition This function is called when the provider wishes to execute a method on a specific WDM instance. The method is executed, any instances of the output class are sent to WMI.  ( in response to ExecMethodAsync) BOOL CancelWMIEventRegistration( GUID gGuid , ULONG uContext ) gguid        The guid of the event to cancel uContext     The address of the EventCallback function This function is called when the provider wishes to cancel registration for an event, either when the provider unloads and it is canceling the binary mof added/deleted events, or in response to a consumer request ( in response to CancelQuery )       HRESULT SetErrorMessage(HRESULT hr)  A utility function that sets information in the extended error object, if needed, and returns the status and hr to WMI. The CWDMHiPerfShell exposes the following interfaces: HRESULT QueryAllHiPerfData() This function queries WDM for a complete list of instances ( in response to QueryInstances ).  Calls WmiQueryAllDataMultiple. HRESULT HiPerfQuerySingleInstances(long lNumObjects,                                  IWbemObjectAccess** apObj) This function queries WDM for the specified objects, calls WmiQueryAllDataMultiple. HRESULT AddAccessObjectToRefresher(IWbemObjectAccess *pAccess,                                     IWbemObjectAccess ** ppRefreshable,                                     LONG * plId) This function adds the IWbemObjectAccess object to the HiPerfHandle map and returns a unqiue id. HRESULT AddEnumeratorObjectToRefresher(IWbemHiPerfEnum* pHiPerfEnum,                                         long* plId) This function adds the IWbemHiPerfEnum object to the HiPerfHandle map and returns a unqiue id. HRESULT RemoveObjectFromHandleMap(long lHiPerfId) This function removes an object from the hi perf handle map that matches the specific id, this could either be an enumerator or an instance.  If it is the last one, then the WDM handle is removed from the regular handle map and the WDM handle is closed.  ( this is in response to StopRefreshing ) HRESULT RefreshCompleteList() This function queries WDM for a complete list of instances ( in response to Refresh) that are tied to a specific refresher. HRESULT SetErrorMessage(HRESULT hr) A utility function that sets information in the extended error object, if needed, and returns the status and hr to WMI. The  WMI MOF ( wmi.mof) The WMI.MOF will be updated to include the Hi Perf provider as follows: //*************************************************************  1998-1999 Microsoft Corporation.  All rights reserved. //************************************************************* #pragma autorecover #pragma classflags("forceupdate") //************************************************************* //*** Creates namespace for WMI //************************************************************* #pragma namespace ("\\\\.\\Root") instance of __Namespace     Name = "WMI"; //************************************************************* //*** Changes focus to new namespace //************************************************************* #pragma namespace ("\\\\.\\Root\\WMI") // HiPerfProvider: instance of __Win32Provider as $PPerf     Name="WDMHiPerf ";     CLSID=" {F5280F80-0D8C-4fb7-B60D-CEB99AB45DBC}";    PerUserInitialization = "TRUE"; instance of __InstanceProviderRegistration     Provider = $PPerf;     SupportsGet = TRUE;     SupportsEnumeration = TRUE;  DATE  3/17/2000 Microsoft Confidential Page   PAGE  \* MERGEFORMAT   DOCPROPERTY "Product"  \* MERGEFORMAT   Specification   TITLE  \* MERGEFORMAT  Unassigned MICROSOFT CONFIDENTIAL CWDMStandardShell CWDMHiPerfDataBlock  CWDMStandardDataBlock CWMI_Prov: Hi perf provider [WMIHiPerfHandleMap] CWMI_Prov: Instance, method, class provider. [WMIHandleMap] CWDMHiPerfShell CWMI_IDOrder CWMIManagement CWMI_Event The event provider [WMIHandleMap] CWDMProcessClass CWMI_Prov The instance, method, class, and hi perf provider.   MSO Palette  )$+*($''-2@7-0=0''8L9=CEHIH+6OUNFT@GHE !E.'.EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE 1A"Qa /[Vi: FVo|I3 ybH~n5A ):m"$ I F}q] q[V0<V *73X4uJ ;PGxR iI!@* Sxp:D VW6)bd K$O'>>
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\wmi\wbem\providers\wdmprovider\wmi provider.doc ===
Microsoft Word 6.0 Document MSWordDocTimes New Roman Symbol Arial Times New Roman Arial Courier Symbol  Copyright (c) 1997-1999 Microsoft Corporation All you need to know to run and test the WMI Provider Tuesday, May 26, 1998 The WMI Provider Overview The WMI Provider provides the interface to the WMI layer in Windows 98 and NT 5 only.  WMI is not supported in Win95 or NT 4.   The WMI Provider queries WMI and translates the WMI data blobs into instances of CIMOM classes that are defined by MOFS.   The large majority of MOFS for WMI will be physically included within the drivers as a binary resource.  The WMI Provider will extract these MOFS and add them to the CIMOM database under the ROOT\WMI namespace.  The WMI Provider also provides the capability to query drivers located in the system ROM and will add those MOFS to the namespace as well. The user can then retrieve instances of those classes, if the driver is able - modify those instances, execute methods, and monitor WMI events.  The rest of this document is devoted to configuring the WMI Provider and using the tool WBEMTEST to execute the above mentioned functionality. Configuring the WMI Provider Before attempting to configure the WMI Provider, you must make sure the WMI service is running as the WMI Provider will not function without it.  The WMI Service is NOT the WMI Provider, the service is the interface through which the WMI Provider can read/write driver and low-level system information.  The WMI files are included in the operating system, these files are: WMI.DLL WMICORE.DLL - This file includes the WMI Super MOF. The WMI Provider is a core WBEM component.  There are two files required, from the WBEM perspective, and these are: WMIPROV.DLL.   The actual WMI Provider WMI.MOF Enables the WMI Provider These files are included in the operating systems Windows 98 or NT 5, under the system32\WBEM directory.  If you are running WBEM setup, then select the WMI checkbox to install the latest files on your system. After installation, you must use the WBEM tool, mofcomp, on the WMI.MOF in order to create the WMI namespace, default WMI classes and register the provider.   Note: Appendix A covers the WMI.MOF in detail. Syntax: mofcomp WMI.MOF At this point, you should be ready to execute the WBEM tool, WBEMTEST, to open the WMI Namespace.  The next section will cover this in detail. Configuration Summary Verify you are running Windows 98 or NT 5. Insure the WMI service is running. Use the WMI Provider that is included in the operating system, or use WBEM Setup to install.  Run MOFCOMP on the WMI.MOF to create the namespace, default classes and register the provider. The WMI Namespace - Class Provider In order to work with the WMI Provider, you must open the WMI Namespace.   One way you can open the WMI Namespace is through the tool WBEMTEST.     Start WBEMTEST. Click on the Connect button. In the Server / Namespace box, type in ROOT\WMI. Click on Login. The first time you log on to this namespace, you will see a delay, since the first time CIMOM loads the WMI Provider, the following takes place: The WMI Provider opens a connection to WMI and queries for a list of binary MOFS. WMI will return a list of binary MOF resources, and/or names of drivers to query. The WMI Provider will loop through the list If it is a binary MOF resource to extract, the provider will: First query for any instances of the class WMIBinaryMofResource with the resource file name as the key, if it is found, the files size and date are saved. Get the current size and date of the driver we are processing. If we found an instance of WMIBinaryMofResource for this driver, and the size and date are the same, then the provider skips to the next driver.  However, if there was no record, or the size/date changed, then the driver is opened, and if the resource name specified is found, it is extracted from the file and passed on to the mof_d.dll to compile and add to the CIMOM database. If successfully added to the database, an instance of WMIBinaryMofResource is created, using the filename as the key, and the file size and date are saved. If it is a name of a driver to query: The WMI Provider will query WMI for a data blob that will contain the binary mof for that driver.   This type of query is for drivers located in the system ROM.  At present, there is not an instance of WMIBinaryMofResource created for these drivers due to an outstanding DCR in WMI. If a successful WMI data blob is retrieved, the provider extracts the binary mof and passes it onto the mof_d.dll to compile and add to the CIMOM database. The WMI Provider will then register an event with WMI that requests it be informed whenever a new driver of either type is added to the system.  This event should not be confused with events from the Event Provider.  This event is automatically enabled each time the WMI Provider is loaded - the life span of the open WMI namespace. As you can see, WMIBinaryMofResource is used to keep track of which MOFS the provider has compiled before.   This allows speedier processing, and as the provider does not allow the user to delete the class definitions, it is an effective way in eliminating unnecessary processing. This binary MOF processing is the WMI Provider s implementation of a Class provider.  When the WMI Provider has completed it s processing, you can select the Enum Classes button to display all of the classes in the namespace. Thereafter, whenever the namespace is closed, then re-opened, the above processing takes place. At the very least, when you enumerate the classes, you will see the classes that are in the WMI.MOF.  In addition, you will see the classes that are extracted from the WMICORE.DLL.  These are NDIS, Keyboard, and Mouse classes.  See Appendix B for a current list. WMI Namespace - Class Provider Summary Each time the namespace is opened, the WMI Provider runs process binary MOFS. WMI Provider adds all binary MOFS the very first time the namespace is opened, thereafter, it will check dates/sizes for optimal processing. Enumerate classes will list the classes extracted from the binary MOFS and the classes that are defined in the WMI.MOF.  The WMI Instance Provider As an Instance Provider, the WMI Provider will query WMI for any class you select from the available classes.  You may look at a class name, but the WMI Provider must get the guid and pass this on to the WMI Layer, as the guid, and/or guid/instance name combination, is the only thing the WMI Layer understands. You can query for all instances, or for a specific instance.  These are two separate code paths.     To query for all instances, select Enum Instances and type in the class name. To query for a single instance, select Open Instance, type in the class and instance name. The main point of the WMI Provider is to interpret the WMI data blobs into instances of classes.  The user doesn t have to worry about how these are constructed or linked, how this works is worth a document in itself, but there are several things that should be understood here. WMI Data blobs can be linked, if you are querying for all instances, verify the WMI Provider is returning the correct number of instances by double checking that same guid through the test tool EnumGuid.  EnumGuid is a useful tool written by Alan Warwick that reads through WMI Data Blobs and displays the data as hex values.  The data can be very confusing to look at and you must know the order of the data displayed.  If you look at the definition of the class using WbemTest, you will see a WMIDataId qualifier on each property and a number.  These numbers represent the order of the data in the blocks.  For example,      PropertyA   - has a qualifier of WMIDataId 2       PropertyB  -  has a qualifier of WMIDataId 1 So, in the WMI Data Blob, you will actually see PropertyB show up before PropertyA. WMI Data blobs are naturally aligned.  What this means is, a byte is aligned on a byte boundary, a word on a word boundary, a dword on a dword boundary.  Embedded classes are a little trickier and are aligned on the largest data type within the class.  The WMI Provider needs to maneuver through the alignment correctly, in order to provide the correct values.    The nothing.sys driver is a special driver written by Alan Warwick that exercises quite a range of data alignments.  You must first install the driver by clicking on nothing.reg and rebooting.  If you see classes from this driver with all zero values, chances are you just found a bug.  Verify results using the test tool nothing.exe.   After you retrieve an instance, if the driver lets you, you can modify and put the data back.  There are two ways to Put Data.   Put Instance functionality After you have modified your instance, simply select Save Object.  Retrieve the object again and make sure the values have changed. Put Property functionality This is a little more involved.  First, you must select the Edit Context button on WbemTest.  There are two code paths to putting a single property of an instance.   You can put a single property, or an array of selected properties.  If you want to put a single property, edit the context by adding __PUT_EXTENSIONS.  This signals the provider you are going to be putting single properties.  If this qualifier is not within the context, the WMI Provider will put the whole instance.  If you wish to put an array of selected properties, add __PUT_EXT_PROPERTIES to the context. This will force the provider to call a different WMI interface and put just the single properties that changed. The WMI Instance Provider Summary To query for all instances, select Enum Instances and type in the class name. To query for a single instance, select Open Instance, type in the class and instance name. Install the nothing.sys driver, you must have the latest nothing.sys, nothing.reg, and nothing.exe. Verify results using EnumGuid and Nothing.exe. To put an instance, select Save Object on the edited instance. To put a property, you must edit the context by adding __PUT_EXTENSIONS / __PUT_EXT_PROPERTIES The WMI Method Provider The WMI Provider supports methods.   The methods are simply passed on to WMI identified by the guid, instance name and WMI Method Id.  The results are returned in the form of a WMI Data Blob and the provider translates the results into the specified Out Class Parameters.  To test a method, using WbemTest, you must do the following: You must procure an instance of a class and select the __RELPATH. Select Execute Method and insert the value of __RELPATH. Select the method to execute and edit any parameters. To execute, select the execute button. The WMI Method Provider Summary To test a method, you must get an instance of a class first. You must select the method you wish to execute from the drop down list box. Results are displayed through the out class parameters. The WMI Event Provider The WMI Provider supports events.  In order to register an event, you must select a class that has been derived from WMIEvent.   Using WBEMTest, click on the Execute Asynchronously checkbox,  then select Notification Query.  Type in your query.  In general it will look like this: Select * from NdisMediaConnect CIMOM notifies the WMI Provider of the requested registration.  The WMI Provider simply passes this request on to the WMI Layer and gives the WMI Layer an entry point to call when the event is triggered.  Once the event is triggered, the WMI Provider receives either a series of WMI Data Blobs each representing instances, or a single one, representing a single instance.  This data is translated and sent to CIMOM. When CIMOM signals the WMI Provider to cancel the event, the WMI Provider in turn notifies the WMI Layer and that event is removed from the list.  Note, the hard coded binary MOF event is present at all times the WMI Provider is loaded. The WMI Event Provider Summary Click the execute Asynchronously checkbox before you select the Notification Query button. You will keep on receiving events until you cancel them. The hard coded binary MOF event is always registered with the WMI Interface as long as the provider is loaded. Appendix A - The WMI.MOF The WMI.MOF is used to register the WMI Provider.  This MOF creates the ROOT\WMI namespace, sets up the default WMI classes, registers the WMI Provider as the following providers   class WMIBinaryMofResource     [read, key]          string Name ;     [read, volatile]     uint32 LowDateTime ;     [read, volatile]     uint32 HighDateTime ; instance of __Win32Provider as $P     Name = "WMIProv";     ClsId   = "{D2D588B5-D081-11d0-99E0-00C04FC2F8EC}" ; instance of __InstanceProviderRegistration Provider = $P; SupportsGet = "TRUE"; SupportsPut = "TRUE"; SupportsEnumeration = "TRUE"; SupportsDelete = "FALSE"; instance of __MethodProviderRegistration Provider = $P; instance of __Win32Provider as $P1     Name = "WMIEventProv";     ClsId   = "{0725C3CB-FEFB-11d0-99F9-00C04FC2F8EC}"; class WMIEvent : __ExtrinsicEvent instance of __EventProviderRegistration     Provider = $P1;     EventQueryList = {"select * from WMIEvent"}; instance of __ClassProviderRegistration Provider = $P; InteractionType = 1; ResultSetQueries={"select * from meta_class"}; ReferencedSetQueries={"select * from meta_class"}; UnsupportedQueries=NULL; SupportsGet = "TRUE"; SupportsPut = "FALSE"; SupportsEnumeration = "TRUE"; SupportsDelete = "FALSE"; Appendix B - The Default Classes These classes are the ones extracted from the WMICORE.DLL binary mof.  This is the minimum you should see on your system. [abstract] class DiskDriver [dynamic: ToInstance, provider("WMIProv"), WMI, Description("Disk Geometry"), guid("{25007F51-57C2-11d1-A528-00A0C9062910}"), locale("MS\\0x409")] class DiskGeometry : DiskDriver [key, read] string InstanceName; [read] boolean Active; [WmiDataId(1), read] sint64 Cylinders; [WmiDataId(2), WmiEnum{"0=Format is unknown", "1=5.25, 1.2MB,  512 bytes/sector", "2=3.5,  1.44MB, 512 bytes/sector", "3=3.5,  2.88MB, 512 bytes/sector", "4=3.5,  20.8MB, 512 bytes/sector", "5=3.5,  720KB,  512 bytes/sector", "6=5.25, 360KB,  512 bytes/sector", "7=5.25, 320KB,  512 bytes/sector", "8=5.25, 320KB,  1024 bytes/sector", "9=5.25, 180KB,  512 bytes/sector", "10=5.25, 160KB,  512 bytes/sector", "11=Removable media other than floppy", "12=Fixed hard disk media", "13=3.5, 120M Floppy", "14=3.5 ,  640KB,  512 bytes/sector", "15=5.25,  640KB,  512 bytes/sector", "16=5.25, 720KB,  512 bytes/sector", "17=3.5 ,  1.2Mb,  512 bytes/sector", "18=3.5 ,  1.23Mb, 1024 bytes/sector", "19=5.25,  1.23MB, 1024 bytes/sector", "20=3.5 MO 128Mb   512 bytes/sector", "21=3.5 MO 230Mb   512 bytes/sector", "22=8, 256KB, 128 bytes/sector"}, read] uint32 MediaType; [WmiDataId(3), read] uint32 TracksPerCylinder; [WmiDataId(4), read] uint32 SectorsPerTrack; [WmiDataId(5), read] uint32 BytesPerSector; [dynamic: ToInstance, provider("WMIProv"), WMI, Description("Disk performance statistics"), guid("BDD865D1-D7C1-11d0-A501-00A0C9062910"), locale("MS\\0x409")] class DiskPerf [key, read] string InstanceName; [read] boolean Active; [WmiDataId(1), Description("Number of bytes read on disk"), read] sint64 BytesRead; [WmiDataId(2), Description("Number of bytes written on disk"), read] sint64 BytesWritten; [WmiDataId(3), Description("Amount off time spent reading from disk"), read] sint64 ReadTime; [WmiDataId(4), Description("Amount off time spent writing to disk"), read] sint64 WriteTime; [WmiDataId(5), Description("Number of read operations from disk"), read] uint32 ReadCount; [WmiDataId(6), Description("Number of write operations to disk"), read] uint32 WriteCount; [WmiDataId(7), Description("Number of requests waiting in the disk queue"), read] uint32 QueueDepth; [WMI, guid("{A1C15015-B069-11d1-9290-00A0C9062910}")] class EC1 [WmiDataId(1)] boolean Xboolean; [WmiDataId(2)] uint8 Xuint8; [WmiDataId(3)] uint16 Xuint16; [WmiDataId(4)] uint32 Xuint32; [WmiDataId(5)] uint64 Xuint64; [WmiDataId(6)] sint8 Xint8; [WmiDataId(7)] sint16 Xint16; [WmiDataId(8)] sint32 Xint32; [WmiDataId(9)] sint64 Xint64; [WmiDataId(10)] datetime Xdatetime; [WmiDataId(11)] string Xstring; [WMI, guid("{A1C15016-B069-11d1-9290-00A0C9062910}")] class EC2 [WmiDataId(1), MAX(8)] boolean Xboolean[]; [WmiDataId(2), MAX(8)] uint8 Xuint8[]; [WmiDataId(3), MAX(4)] uint16 Xuint16[]; [WmiDataId(4), MAX(2)] uint32 Xuint32[]; [WmiDataId(5)] uint64 Xuint64; [WmiDataId(6), MAX(8)] sint8 Xint8[]; [WmiDataId(7), MAX(4)] sint16 Xint16[]; [WmiDataId(8), MAX(2)] sint32 Xint32[]; [WmiDataId(9)] sint64 Xint64; [WmiDataId(10)] datetime Xdatetime; [WmiDataId(11)] string Xstring; [dynamic: ToInstance, provider("WMIProv"), WMI, Description("Keyboard class driver information"), guid("{4731F899-71CB-11d1-A52C-00A0C9062910}"), locale("MS\\0x409")] class KeyboardClassInformation [key, read] string InstanceName; [read] boolean Active; [WmiDataId(1), read, Description("An identification number for the device")] uint64 DeviceId; [dynamic: ToInstance, provider("WMIProv"), WMI, Description("Keyboard port driver information"), guid("{4731F89A-71CB-11d1-A52C-00A0C9062910}"), locale("MS\\0x409")] class KeyboardPortInformation [key, read] string InstanceName; [read] boolean Active; [WmiDataId(1), read, WmiEnum{"0=I8042 Connector1=Serial Connector", "2=USB Connector"}, Description("How the mouse is connected to the computer")] uint32 ConnectorType; [WmiDataId(2), read, Description("The DataQueueSize property indicates the size of the data queue.")] uint32 DataQueueSize; [WmiDataId(3), read, Description("Number of errors that occured on this device")] uint32 ErrorCount; [WmiDataId(4), read, Description("The NumberOfFunctionKeys property indicates the number of function keys on the keyboard.")] uint32 NumberFunctionKeys; [WmiDataId(5), read, Description("The NumberOfIndicators property indicates the number of indicator leds on the keyboard.")] uint32 NumberIndicators; [dynamic: ToInstance, provider("WMIProv"), WMI, Description("Mouse class driver information"), guid("{4731F89B-71CB-11d1-A52C-00A0C9062910}"), locale("MS\\0x409")] class MouseClassInformation [key, read] string InstanceName; [read] boolean Active; [WmiDataId(1), read, Description("An identification number for the device")] uint64 DeviceId; [dynamic: ToInstance, provider("WMIProv"), WMI, Description("Mouse port driver information"), guid("{4731F89C-71CB-11d1-A52C-00A0C9062910}"), locale("MS\\0x409")] class MousePortInformation [key, read] string InstanceName; [read] boolean Active; [WmiDataId(1), read, WmiEnum{"0=I8042 Connector1=Serial Connector", "2=USB Connector"}, Description("How the mouse is connected to the computer")] uint32 ConnectorType; [WmiDataId(2), read, Description("The DataQueueSize property indicates the size of the data queue.")] uint32 DataQueueSize; [WmiDataId(3), read, Description("Number of errors that occured on this device")] uint32 ErrorCount; [WmiDataId(4), read, Description("The NumberOfButtons property indicates the number of buttons on the pointing device.")] uint32 NumberOfButtons; [WmiDataId(5), read, WmiEnum{"0=Standard Mouse", "1=Standard Pointer", "2=Standard Absolute Pointer", "3=Tablet", "4=Touch Screen", "5=Pen", "6=Track Ball", "256=Other"}, Description("The HardwareType property indicates the hardware type of the pointing device.")] string HardwareType; [WMI, dynamic: ToInstance, provider("WMIProv"), guid("{791ad1a1-e35c-11d0-9692-00c04fc3358c}"), locale("MS\\0x409"), WmiExpense(1), Description("NDIS ATM Hardware Current Address")] class NdisAtmHardwareCurrentAddress [key, read] string InstanceName; [read] boolean Active; [read, Description("The address of the NIC encoded in the hardware."), WmiDataId(1)] NetworkAddress NdisAtmHardwareCurrentAddress; [WMI, dynamic: ToInstance, provider("WMIProv"), guid("{791ad1a5-e35c-11d0-9692-00c04fc3358c}"), locale("MS\\0x409"), WmiExpense(1), Description("NDIS ATM Maximum AAL0 Packet Size")] class NdisAtmMaxAal0PacketSize [key, read] string InstanceName; [read] boolean Active; [read, Description("Maximum supported size for AAL0 packets."), WmiDataId(1)] uint32 NdisAtmMaxAal0PacketSize; [WMI, dynamic: ToInstance, provider("WMIProv"), guid("{791ad1a6-e35c-11d0-9692-00c04fc3358c}"), locale("MS\\0x409"), WmiExpense(1), Description("NDIS ATM Maximum AAL1 Packet Size")] class NdisAtmMaxAal1PacketSize [key, read] string InstanceName; [read] boolean Active; [read, Description("Maximum supported size for AAL1 packets."), WmiDataId(1)] uint32 NdisAtmMaxAal1PacketSize; [WMI, dynamic: ToInstance, provider("WMIProv"), guid("{791ad1a7-e35c-11d0-9692-00c04fc3358c}"), locale("MS\\0x409"), WmiExpense(1), Description("NDIS ATM Maximum AAL3/4 Packet Size")] class NdisAtmMaxAal34PacketSize [key, read] string InstanceName; [read] boolean Active; [read, Description("Maximum supported size for AAL3/4 packets."), WmiDataId(1)] uint32 NdisAtmMaxAal34PacketSize; [WMI, dynamic: ToInstance, provider("WMIProv"), guid("{791ad191-e35c-11d0-9692-00c04fc3358c}"), locale("MS\\0x409"), WmiExpense(1), Description("NDIS ATM Maximum AAL5 Packet Size")] class NdisAtmMaxAal5PacketSize [key, read] string InstanceName; [read] boolean Active; [read, Description("Maximum supported size for AAL5 packets."), WmiDataId(1)] uint32 NdisAtmMaxAal5PacketSize; [WMI, dynamic: ToInstance, provider("WMIProv"), guid("{791ad1a3-e35c-11d0-9692-00c04fc3358c}"), locale("MS\\0x409"), WmiExpense(1), Description("NDIS ATM Maximum Active VCI Bits")] class NdisAtmMaxActiveVciBits [key, read] string InstanceName; [read] boolean Active; [read, Description("The number of bits controllable in the VCI field of the cell header."), WmiDataId(1)] uint32 NdisAtmMaxActiveVciBits; [WMI, dynamic: ToInstance, provider("WMIProv"), guid("{791ad1a2-e35c-11d0-9692-00c04fc3358c}"), locale("MS\\0x409"), WmiExpense(1), Description("NDIS ATM Maximum Active VCs")] class NdisAtmMaxActiveVcs [key, read] string InstanceName; [read] boolean Active; [read, Description("Maximum number of active VCs the adapter can support."), WmiDataId(1)] uint32 NdisAtmMaxActiveVcs; [WMI, dynamic: ToInstance, provider("WMIProv"), guid("{791ad1a4-e35c-11d0-9692-00c04fc3358c}"), locale("MS\\0x409"), WmiExpense(1), Description("NDIS ATM Maximum Active VPI Bits")] class NdisAtmMaxActiveVpiBits [key, read] string InstanceName; [read] boolean Active; [read, Description("The number of bits controllable in the VPI field of the cell header."), WmiDataId(1)] uint32 NdisAtmMaxActiveVpiBits; [WMI, dynamic: ToInstance, provider("WMIProv"), guid("{0a21480c-e35c-11d0-9692-00c04fc3358c}"), locale("MS\\0x409"), WmiExpense(1), Description("NDIS ATM Receive Cells Dropped")] class NdisAtmReceiveCellsDropped [key, read] string InstanceName; [read] boolean Active; [read, Description("The number of receive cells the NIC has dropped."), WmiDataId(1)] uint64 NdisAtmReceiveCellsDropped; [WMI, dynamic: ToInstance, provider("WMIProv"), guid("{0a21480a-e35c-11d0-9692-00c04fc3358c}"), locale("MS\\0x409"), WmiExpense(1), Description("NDIS ATM Receive Cells OK")] class NdisAtmReceiveCellsOk [key, read] string InstanceName; [read] boolean Active; [read, Description("The number of cells the NIC has received without errors."), WmiDataId(1)] uint64 NdisAtmReceiveCellsOk; [WMI, dynamic: ToInstance, provider("WMIProv"), guid("{791ad1a0-e35c-11d0-9692-00c04fc3358c}"), locale("MS\\0x409"), WmiExpense(1), Description("NDIS ATM Supported AAL Types")] class NdisAtmSupportedAalTypes [key, read] string InstanceName; [read] boolean Active; [read, Description("Bit mask defining the AAL types supported by the hardware."), WmiDataId(1)] uint32 NdisAtmSupportedAalTypes; [WMI, dynamic: ToInstance, provider("WMIProv"), guid("{791ad19f-e35c-11d0-9692-00c04fc3358c}"), locale("MS\\0x409"), WmiExpense(1), Description("NDIS ATM Supported Service Category")] class NdisAtmSupportedServiceCategory [key, read] string InstanceName; [read] boolean Active; [read, Description("Bit mask defining the service categories supported by the hardware."), WmiDataId(1)] uint32 NdisAtmSupportedServiceCategory; [WMI, dynamic: ToInstance, provider("WMIProv"), guid("{791ad19e-e35c-11d0-9692-00c04fc3358c}"), locale("MS\\0x409"), WmiExpense(1), Description("NDIS ATM Supported VC Rates")] class NdisAtmSupportedVcRates [key, read] string InstanceName; [read] boolean Active; [read, Description("Minimum cell rate supported."), WmiDataId(1)] uint32 MinCellRate; [read, Description("Maximum cell rate supported."), WmiDataId(2)] uint32 MaxCellRate; [WMI, dynamic: ToInstance, provider("WMIProv"), guid("{0a21480b-e35c-11d0-9692-00c04fc3358c}"), locale("MS\\0x409"), WmiExpense(1), Description("NDIS ATM Transmit Cells OK")] class NdisAtmTransmitCellsOk [key, read] string InstanceName; [read] boolean Active; [read, Description("The number of cells the NIC has transmitted without errors."), WmiDataId(1)] uint64 NdisAtmTransmitCellsOk; [WMI, dynamic: ToInstance, provider("WMIProv"), guid("{791ad198-e35c-11d0-9692-00c04fc3358c}"), locale("MS\\0x409"), WmiExpense(1), Description("CoNDIS Driver Version")] class NdisCoDriverVersion [key, read] string InstanceName; [read] boolean Active; [read, Description("The NDIS version in use by the NIC driver."), WmiDataId(1)] uint32 NdisCoDriverVersion; [WMI, dynamic: ToInstance, provider("WMIProv"), guid("{791ad192-e35c-11d0-9692-00c04fc3358c}"), locale("MS\\0x409"), WmiExpense(1), Description("CoNDIS Hardware Status")] class NdisCoHardwareStatus [key, read] string InstanceName; [read] boolean Active; [read, Description("Current hardware status of the underlying NIC."), WmiDataId(1)] uint32 NdisCoHardwareStatus; [WMI, dynamic: ToInstance, provider("WMIProv"), guid("{791ad195-e35c-11d0-9692-00c04fc3358c}"), locale("MS\\0x409"), WmiExpense(1), Description("CoNDIS Link Speed")] class NdisCoLinkSpeed [key, read] string InstanceName; [read] boolean Active; [read, Description("The maximum inbound and outbound speeds of the NIC (kbps)."), WmiDataId(1)] NetworkLinkSpeed NdisCoLinkSpeed; [WMI, dynamic: ToInstance, provider("WMIProv"), guid("{791ad19a-e35c-11d0-9692-00c04fc3358c}"), locale("MS\\0x409"), WmiExpense(1), Description("CoNDIS MAC Options")] class NdisCoMacOptions [key, read] string InstanceName; [read] boolean Active; [read, Description("A bitmask that defines optional properties of the underlying driver or its NIC."), WmiDataId(1)] uint32 NdisCoMacOptions; [WMI, dynamic: ToInstance, provider("WMIProv"), guid("{791ad19b-e35c-11d0-9692-00c04fc3358c}"), locale("MS\\0x409"), WmiExpense(1), Description("CoNDIS Media Connect Status")] class NdisCoMediaConnectStatus [key, read] string InstanceName; [read] boolean Active; [read, Description("The connection status of the NIC on the network."), WmiEnum{"0=NdisMediaStateConnected", "1=NdisMediaStateDisconnected"}, WmiDataId(1)] uint32 NdisCoMediaConnectStatus; [WMI, dynamic: ToInstance, provider("WMIProv"), guid("{791ad194-e35c-11d0-9692-00c04fc3358c}"), locale("MS\\0x409"), WmiExpense(1), Description("CoNDIS Media Types In Use")] class NdisCoMediaInUse [key, read] string InstanceName; [read] boolean Active; [read, Description("Number of media types in use."), WmiDataId(1)] uint32 NumberElements; [read, Description("List of media types the NIC is currently supporting."), WmiDataId(2), WmiSizeIs("NumberElements")] uint32 NdisCoMediaInUse[]; [WMI, dynamic: ToInstance, provider("WMIProv"), guid("{791ad193-e35c-11d0-9692-00c04fc3358c}"), locale("MS\\0x409"), WmiExpense(1), Description("CoNDIS Media Types Supported")] class NdisCoMediaSupported [key, read] string InstanceName; [read] boolean Active; [read, Description("Number of media types supported."), WmiDataId(1)] uint32 NumberElements; [read, Description("List of media types the NIC supports."), WmiDataId(2), WmiSizeIs("NumberElements")] uint32 NdisCoMediaSupported[]; [WMI, dynamic: ToInstance, provider("WMIProv"), guid("{791ad19d-e35c-11d0-9692-00c04fc3358c}"), locale("MS\\0x409"), WmiExpense(1), Description("CoNDIS Minimum Link Speed")] class NdisCoMinimumLinkSpeed [key, read] string InstanceName; [read] boolean Active; [read, Description("The maximum inbound and outbound speeds of the NIC (kbps)."), WmiDataId(1)] NetworkLinkSpeed NdisCoMinimumLinkSpeed; [WMI, dynamic: ToInstance, provider("WMIProv"), guid("{0a214808-e35c-11d0-9692-00c04fc3358c}"), locale("MS\\0x409"), WmiExpense(1), Description("CoNDIS Receive PDU Errors")] class NdisCoReceivePduErrors [key, read] string InstanceName; [read] boolean Active; [read, Description("The number of PDUs a NIC receives but does not indicate to the protocols due to errors."), WmiDataId(1)] uint32 NdisCoReceivePduErrors; [WMI, dynamic: ToInstance, provider("WMIProv"), guid("{0a214809-e35c-11d0-9692-00c04fc3358c}"), locale("MS\\0x409"), WmiExpense(1), Description("CoNDIS Receive PDUs No Buffer")] class NdisCoReceivePdusNoBuffer [key, read] string InstanceName; [read] boolean Active; [read, Description("The number of PDUs the NIC cannot receive due to lack of NIC receive buffer space."), WmiDataId(1)] uint32 NdisCoReceivePdusNoBuffer; [WMI, dynamic: ToInstance, provider("WMIProv"), guid("{0a214806-e35c-11d0-9692-00c04fc3358c}"), locale("MS\\0x409"), WmiExpense(1), Description("CoNDIS Receive PDUs OK")] class NdisCoReceivePdusOk [key, read] string InstanceName; [read] boolean Active; [read, Description("The number of PDUs the NIC receives without errors and indicates to bound protocols."), WmiDataId(1)] uint32 NdisCoReceivePdusOk; [WMI, dynamic: ToInstance, provider("WMIProv"), guid("{0a214807-e35c-11d0-9692-00c04fc3358c}"), locale("MS\\0x409"), WmiExpense(1), Description("CoNDIS Transmit PDU Errors")] class NdisCoTransmitPduErrors [key, read] string InstanceName; [read] boolean Active; [read, Description("The number of PDUs a NIC fails to transmit."), WmiDataId(1)] uint32 NdisCoTransmitPduErrors; [WMI, dynamic: ToInstance, provider("WMIProv"), guid("{0a214805-e35c-11d0-9692-00c04fc3358c}"), locale("MS\\0x409"), WmiExpense(1), Description("CoNDIS Transmits PDUs OK")] class NdisCoTransmitPdusOk [key, read] string InstanceName; [read] boolean Active; [read, Description("The number of PDUs transmitted without errors"), WmiDataId(1)] uint32 NdisCoTransmitPdusOk; [WMI, dynamic: ToInstance, provider("WMIProv"), guid("{791ad197-e35c-11d0-9692-00c04fc3358c}"), locale("MS\\0x409"), WmiExpense(1), Description("CoNDIS Vendor Description")] class NdisCoVendorDescription [key, read] string InstanceName; [read] boolean Active; [read, Description("Zero-terminated string describing the NIC."), WmiDataId(1)] string NdisCoVendorDescription; [WMI, dynamic: ToInstance, provider("WMIProv"), guid("{791ad19c-e35c-11d0-9692-00c04fc3358c}"), locale("MS\\0x409"), WmiExpense(1), Description("CoNDIS Vendor's Driver Version")] class NdisCoVendorDriverVersion [key, read] string InstanceName; [read] boolean Active; [read, Description("The vendor-assigned version number of the NIC driver."), WmiDataId(1)] uint32 NdisCoVendorDriverVersion; [WMI, dynamic: ToInstance, provider("WMIProv"), guid("{791ad196-e35c-11d0-9692-00c04fc3358c}"), locale("MS\\0x409"), WmiExpense(1), Description("CoNDIS Vendor ID")] class NdisCoVendorId [key, read] string InstanceName; [read] boolean Active; [read, Description("A three-byte IEEE-registered vendor code, followed by a single byte the vendor assigns to identify a particular NIC."), WmiDataId(1)] uint32 NdisCoVendorID; [WMI, dynamic: ToInstance, provider("WMIProv"), guid("{5ec10361-a61a-11d0-8dd4-00c04fc3358c}"), locale("MS\\0x409"), WmiExpense(1), Description("NDIS Current Lookahead")] class NdisCurrentLookahead [key, read] string InstanceName; [read] boolean Active; [read, Description("The number of bytes of received packet data, excluding the header, that will be indicated to the protocol driver."), WmiDataId(1)] uint32 NdisCurrentLookahead; [WMI, dynamic: ToInstance, provider("WMIProv"), guid("{5ec10360-a61a-11d0-8dd4-00c04fc3358c}"), locale("MS\\0x409"), WmiExpense(1), Description("NDIS Current Packet Filter")] class NdisCurrentPacketFilter [key, read] string InstanceName; [read] boolean Active; [read, Description("Current packet types that will be received and indicated by the NIC."), WmiDataId(1)] uint32 NdisCurrentPacketFilter; [WMI, dynamic: ToInstance, provider("WMIProv"), guid("{5ec10362-a61a-11d0-8dd4-00c04fc3358c}"), locale("MS\\0x409"), WmiExpense(1), Description("NDIS Driver Version")] class NdisDriverVersion [key, read] string InstanceName; [read] boolean Active; [read, Description("The NDIS version in use by the NIC driver."), WmiDataId(1)] uint16 NdisDriverVersion; [WMI, dynamic: ToInstance, provider("WMIProv"), guid("{981f2d7f-b1f3-11d0-8dd7-00c04fc3358c}"), locale("MS\\0x409"), WmiExpense(1), Description("NDIS Enumerate Adapter")] class NdisEnumerateAdapter [key, read] string InstanceName; [read] boolean Active; [read, Description("Device name."), WmiDataId(1)] string DeviceName; [WMI, dynamic: ToInstance, provider("WMIProv"), guid("{981f2d82-b1f3-11d0-8dd7-00c04fc3358c}"), locale("MS\\0x409"), WmiExpense(1), Description("NDIS Enumerate VC")] class NdisEnumerateVc [key, read] string InstanceName; [read] boolean Active; [WMI, dynamic: ToInstance, provider("WMIProv"), guid("{44795700-a61b-11d0-8dd4-00c04fc3358c}"), locale("MS\\0x409"), WmiExpense(1), Description("NDIS Ethernet Current Address")] class NdisEthernetCurrentAddress [key, read] string InstanceName; [read] boolean Active; [read, Description("The address the NIC is currently using."), WmiDataId(1)] NetworkAddress NdisCurrentAddress; [WMI, dynamic: ToInstance, provider("WMIProv"), guid("{44795703-a61b-11d0-8dd4-00c04fc3358c}"), locale("MS\\0x409"), WmiExpense(1), Description("NDIS Ethernet MAC Options")] class NdisEthernetMacOptions [key, read] string InstanceName; [read] boolean Active; [read, Description("Features supported by the underlying driver, which could be emulating Ethernet."), WmiDataId(1)] uint32 NdisEthernetMacOptions; [WMI, dynamic: ToInstance, provider("WMIProv"), guid("{44795702-a61b-11d0-8dd4-00c04fc3358c}"), locale("MS\\0x409"), WmiExpense(1), Description("Adpater Ethernet Maximum Multicast List Size")] class NdisEthernetMaximumMulticastListSize [key, read] string InstanceName; [read] boolean Active; [read, Description("The maximum number of multicast addresses the NIC driver can manage."), WmiDataId(1)] uint32 NdisEthernetMaximumMulticastListSize; [WMI, dynamic: ToInstance, provider("WMIProv"), guid("{44795706-a61b-11d0-8dd4-00c04fc3358c}"), locale("MS\\0x409"), WmiExpense(1), Description("NDIS Ethernet More Transmit collisions")] class NdisEthernetMoreTransmitCollisions [key, read] string InstanceName; [read] boolean Active; [read, Description("The number of frames successfully transmitted after more than one collision."), WmiDataId(1)] uint32 NdisEthernetMoreTransmitCollisions; [WMI, dynamic: ToInstance, provider("WMIProv"), guid("{44795701-a61b-11d0-8dd4-00c04fc3358c}"), locale("MS\\0x409"), WmiExpense(1), Description("NDIS Ethernet Multicast List")] class NdisEthernetMulticastList [key, read] string InstanceName; [read] boolean Active; [read, Description("Number of multicast addresses enabled on the NIC."), WmiDataId(1)] uint32 NumberElements; [read, Description("The multicast address list on the NIC enabled for packet reception."), WmiDataId(2), WmiSizeIs("NumberElements")] NetworkAddress NdisMulticastList[]; [WMI, dynamic: ToInstance, provider("WMIProv"), guid("{44795705-a61b-11d0-8dd4-00c04fc3358c}"), locale("MS\\0x409"), WmiExpense(1), Description("NDIS Ethernet One Transmit collision")] class NdisEthernetOneTransmitCollision [key, read] string InstanceName; [read] boolean Active; [read, Description("The number of frames successfully transmitted after exactly one collision."), WmiDataId(1)] uint32 NdisEthernetOneTransmitCollision; [WMI, dynamic: ToInstance, provider("WMIProv"), guid("{447956ff-a61b-11d0-8dd4-00c04fc3358c}"), locale("MS\\0x409"), WmiExpense(1), Description("NDIS Ethernet Permanent Address")] class NdisEthernetPermanentAddress [key, read] string InstanceName; [read] boolean Active; [read, Description("The address of the NIC encoded in the hardware."), WmiDataId(1)] NetworkAddress NdisPermanentAddress; [WMI, dynamic: ToInstance, provider("WMIProv"), guid("{44795704-a61b-11d0-8dd4-00c04fc3358c}"), locale("MS\\0x409"), WmiExpense(1), Description("NDIS Ethernet Receive Error Alignment")] class NdisEthernetReceiveErrorAlignment [key, read] string InstanceName; [read] boolean Active; [read, Description("The number of frames received with alignment errors."), WmiDataId(1)] uint32 NdisEthernetReceiveErrorAlignment; [WMI, dynamic: ToInstance, provider("WMIProv"), guid("{acf1403d-a61c-11d0-8dd4-00c04fc3358c}"), locale("MS\\0x409"), WmiExpense(1), Description("NDIS FDDI Attachment Type")] class NdisFddiAttachmentType [key, read] string InstanceName; [read] boolean Active; [read, Description("Defines the attachment of the NIC to the network."), WmiEnum{"1=NdisFddiTypeIsolated", "2=NdisFddiTypeLocalA", "3=NdisFddiTypeLocalB", "4=NdisFddiTypeLocalAB", "5=NdisFddiTypeLocalS", "6=NdisFddiTypeWrapA", "7=NdisFddiTypeWrapB", "8=NdisFddiTypeWrapAB", "9=NdisFddiTypeWrapS", "10=NdisFddiTypeCWrapA", "11=NdisFddiTypeCWrapB", "12=NdisFddiTypeCWrapS", "13=NdisFddiTypeThrough"}, WmiDataId(1)] uint32 NdisFddiAttachmentType; [WMI, dynamic: ToInstance, provider("WMIProv"), guid("{acf1403f-a61c-11d0-8dd4-00c04fc3358c}"), locale("MS\\0x409"), WmiExpense(1), Description("NDIS FDDI Downstream Node Long")] class NdisFddiDownstreamNodeLong [key, read] string InstanceName; [read] boolean Active; [read, Description("The long address of the station below this NIC on the ring or zero if the address is unknown."), WmiDataId(1)] NetworkAddress NdisFddiDownstreamNodeLong; [WMI, dynamic: ToInstance, provider("WMIProv"), guid("{acf14040-a61c-11d0-8dd4-00c04fc3358c}"), locale("MS\\0x409"), WmiExpense(1), Description("NDIS FDDI Frame Errors")] class NdisFddiFrameErrors [key, read] string InstanceName; [read] boolean Active; [read, Description("The number of frames detected in error by this NIC that have not been detected in error by another device on the ring."), WmiDataId(1)] uint32 NdisFddiFrameErrors; [WMI, dynamic: ToInstance, provider("WMIProv"), guid("{acf14041-a61c-11d0-8dd4-00c04fc3358c}"), locale("MS\\0x409"), WmiExpense(1), Description("NDIS FDDI Frames Lost")] class NdisFddiFramesLost [key, read] string InstanceName; [read] boolean Active; [read, Description("The number of times this NIC detected a format error during frame reception such that the frame was stripped."), WmiDataId(1)] uint32 NdisFddiFramesLost; [WMI, dynamic: ToInstance, provider("WMIProv"), guid("{acf14045-a61c-11d0-8dd4-00c04fc3358c}"), locale("MS\\0x409"), WmiExpense(1), Description("NDIS FDDI LConnect State")] class NdisFddiLConnectionState [key, read] string InstanceName; [read] boolean Active; [read, Description("Defines the state of this port's Physical Connection Management (PCM) state machine."), WmiEnum{"1=NdisFddiStateOff", "2=NdisFddiStateBreak", "3=NdisFddiStateTrace", "4=NdisFddiStateConnect", "5=NdisFddiStateNext", "6=NdisFddiStateSignal", "7=NdisFddiStateJoin", "8=NdisFddiStateVerify", "9=NdisFddiStateActive", "10=NdisFddiStateMaintenance"}, WmiDataId(1)] uint32 NdisFddiLConnectionState; [WMI, dynamic: ToInstance, provider("WMIProv"), guid("{acf14043-a61c-11d0-8dd4-00c04fc3358c}"), locale("MS\\0x409"), WmiExpense(1), Description("NDIS FDDI LCT Failures")] class NdisFddiLctFailures [key, read] string InstanceName; [read] boolean Active; [read, Description("The count of the consecutive times the link confidence test (LCT) has failed during connection management."), WmiDataId(1)] uint32 NdisFddiLctFailures; [WMI, dynamic: ToInstance, provider("WMIProv"), guid("{acf14044-a61c-11d0-8dd4-00c04fc3358c}"), locale("MS\\0x409"), WmiExpense(1), Description("NDIS FDDI LEM Rejects")] class NdisFddiLemRejects [key, read] string InstanceName; [read] boolean Active; [read, Description("The link error monitor (LEM) count of times that a link was rejected."), WmiDataId(1)] uint32 NdisFddiLemRejects; [WMI, dynamic: ToInstance, provider("WMIProv"), guid("{acf14036-a61c-11d0-8dd4-00c04fc3358c}"), locale("MS\\0x409"), WmiExpense(1), Description("NDIS FDDI Long Current Address")] class NdisFddiLongCurrentAddress [key, read] string InstanceName; [read] boolean Active; [read, Description("The long address the NIC is currently using."), WmiDataId(1)] NetworkAddress NdisCurrentAddress; [WMI, dynamic: ToInstance, provider("WMIProv"), guid("{acf14038-a61c-11d0-8dd4-00c04fc3358c}"), locale("MS\\0x409"), WmiExpense(1), Description("NDIS FDDI Long Maximum List Size")] class NdisFddiLongMaximumListSize [key, read] string InstanceName; [read] boolean Active; [read, Description("The maximum number of multicast long addresses the NIC driver can manage."), WmiDataId(1)] uint32 NdisFddiLongMaximumListSize; [WMI, dynamic: ToInstance, provider("WMIProv"), guid("{acf14037-a61c-11d0-8dd4-00c04fc3358c}"), locale("MS\\0x409"), WmiExpense(1), Description("NDIS FDDI Long Multicast List")] class NdisFddiLongMulticastList [key, read] string InstanceName; [read] boolean Active; [read, Description("Number of multicast addresses enabled on the NIC."), WmiDataId(1)] uint32 NumberElements; [read, Description("The multicast long address list on the NIC enabled for packet reception."), WmiDataId(2), WmiSizeIs("NumberElements")] NetworkAddress NdisMulticastList[]; [WMI, dynamic: ToInstance, provider("WMIProv"), guid("{acf14035-a61c-11d0-8dd4-00c04fc3358c}"), locale("MS\\0x409"), WmiExpense(1), Description("NDIS FDDI Long Permanent Address")] class NdisFddiLongPermanentAddress [key, read] string InstanceName; [read] boolean Active; [read, Description("The long address of the NIC encoded in the hardware."), WmiDataId(1)] NetworkAddress NdisPermanentAddress; [WMI, dynamic: ToInstance, provider("WMIProv"), guid("{acf14042-a61c-11d0-8dd4-00c04fc3358c}"), locale("MS\\0x409"), WmiExpense(1), Description("NDIS FDDI Ring Management State")] class NdisFddiRingManagmentState [key, read] string InstanceName; [read] boolean Active; [read, Description("Defines the current state of the Ring Management state machine."), WmiEnum{"1=NdisFddiRingIsolated", "2=NdisFddiRingNonOperational", "3=NdisFddiRingOperational", "4=NdisFddiRingDetect", "5=NdisFddiRingNonOperationalDup", "6=NdisFddiRingOperationalDup", "7=NdisFddiRingDirected", "8=NdisFddiRingTrac"}, WmiDataId(1)] uint32 NdisFddiRingManagmentState; [WMI, dynamic: ToInstance, provider("WMIProv"), guid("{acf1403a-a61c-11d0-8dd4-00c04fc3358c}"), locale("MS\\0x409"), WmiExpense(1), Description("NDIS FDDI Short Current Address")] class NdisFddiShortCurrentAddress [key, read] string InstanceName; [read] boolean Active; [read, Description("The short address the NIC is currently using."), WmiDataId(1)] NetworkShortAddress NdisCurrentAddress; [WMI, dynamic: ToInstance, provider("WMIProv"), guid("{acf1403c-a61c-11d0-8dd4-00c04fc3358c}"), locale("MS\\0x409"), WmiExpense(1), Description("NDIS FDDI Short Maximum List Size")] class NdisFddiShortMaximumListSize [key, read] string InstanceName; [read] boolean Active; [read, Description("The maximum number of multicast short addresses the NIC driver can manage."), WmiDataId(1)] uint32 NdisFddiShortMaximumListSize; [WMI, dynamic: ToInstance, provider("WMIProv"), guid("{acf1403b-a61c-11d0-8dd4-00c04fc3358c}"), locale("MS\\0x409"), WmiExpense(1), Description("NDIS FDDI Short Multicast List")] class NdisFddiShortMulticastList [key, read] string InstanceName; [read] boolean Active; [read, Description("Number of multicast short addresses enabled on the NIC."), WmiDataId(1)] uint32 NumberElements; [read, Description("The multicast short address list on the NIC enabled for packet reception."), WmiDataId(2), WmiSizeIs("NumberElements")] NetworkShortAddress NdisMulticastList[]; [WMI, dynamic: ToInstance, provider("WMIProv"), guid("{acf14039-a61c-11d0-8dd4-00c04fc3358c}"), locale("MS\\0x409"), WmiExpense(1), Description("NDIS FDDI Short Permanent Address")] class NdisFddiShortPermanentAddress [key, read] string InstanceName; [read] boolean Active; [read, Description("The short address of the NIC encoded in the hardware."), WmiDataId(1)] NetworkShortAddress NdisPermanentAddress; [WMI, dynamic: ToInstance, provider("WMIProv"), guid("{acf1403e-a61c-11d0-8dd4-00c04fc3358c}"), locale("MS\\0x409"), WmiExpense(1), Description("NDIS FDDI Upstream Node Long")] class NdisFddiUpstreamNodeLong [key, read] string InstanceName; [read] boolean Active; [read, Description("The long address of the station above this NIC on the ring or zero if the address is unknown."), WmiDataId(1)] NetworkAddress NdisFddiUpstreamNodeLong; [WMI, dynamic: ToInstance, provider("WMIProv"), guid("{5ec10354-a61a-11d0-8dd4-00c04fc3358c}"), locale("MS\\0x409"), WmiExpense(1), Description("NDIS Hardware Status")] class NdisHardwareStatus [key, read] string InstanceName; [read] boolean Active; [read, Description("Current hardware status of the underlying NIC."), WmiEnum{"0=NdisHardwareStatusReady", "1=NdisHardwareStatusInitializing", "2=NdisHardwareStatusReset", "3=NdisHardwareStatusClosing", "4=NdisHardwarestatusNotReady"}, WmiDataId(1)] uint32 NdisHardwareStatus; [WMI, dynamic: ToInstance, provider("WMIProv"), guid("{5ec10359-a61a-11d0-8dd4-00c04fc3358c}"), locale("MS\\0x409"), WmiExpense(1), Description("NDIS Link Speed")] class NdisLinkSpeed [key, read] string InstanceName; [read] boolean Active; [read, Description("The maximum speed of the NIC (kbps)."), WmiDataId(1)] uint32 NdisLinkSpeed; [WMI, dynamic: ToInstance, provider("WMIProv"), guid("{5ec10365-a61a-11d0-8dd4-00c04fc3358c}"), locale("MS\\0x409"), WmiExpense(1), Description("NDIS MAC Options")] class NdisMacOptions [key, read] string InstanceName; [read] boolean Active; [read, Description("A bitmask that defines optional properties of the underlying driver or its NIC."), WmiDataId(1)] uint32 NdisMacOptions; [WMI, dynamic: ToInstance, provider("WMIProv"), guid("{5ec10358-a61a-11d0-8dd4-00c04fc3358c}"), locale("MS\\0x409"), WmiExpense(1), Description("NDIS Maximum Frame Size")] class NdisMaximumFrameSize [key, read] string InstanceName; [read] boolean Active; [read, Description("The maximum network packet size in bytes the NIC supports, not including a header."), WmiDataId(1)] uint32 NdisMaximumFrameSize; [WMI, dynamic: ToInstance, provider("WMIProv"), guid("{5ec10357-a61a-11d0-8dd4-00c04fc3358c}"), locale("MS\\0x409"), WmiExpense(1), Description("NDIS Maximum Lookahead Supported")] class NdisMaximumLookahead [key, read] string InstanceName; [read] boolean Active; [read, Description("The maximum number of bytes the NIC can always provide as lookahead data."), WmiDataId(1)] uint32 NdisMaximumLookahead; [WMI, dynamic: ToInstance, provider("WMIProv"), guid("{5ec10367-a61a-11d0-8dd4-00c04fc3358c}"), locale("MS\\0x409"), WmiExpense(1), Description("NDIS Maximum Send Packets")] class NdisMaximumSendPackets [key, read] string InstanceName; [read] boolean Active; [read, Description("The maximum number of send packets the MiniportSendPackets function can accept."), WmiDataId(1)] uint32 NdisMaximumSendPackets; [WMI, dynamic: ToInstance, provider("WMIProv"), guid("{5ec10363-a61a-11d0-8dd4-00c04fc3358c}"), locale("MS\\0x409"), WmiExpense(1), Description("NDIS Maximum Packet Total Size")] class NdisMaximumTotalSize [key, read] string InstanceName; [read] boolean Active; [read, Description("The maximum total packet length, in bytes, the NIC supports, including the header."), WmiDataId(1)] uint32 NdisMaximumTotalSize; [WMI, dynamic: ToInstance, provider("WMIProv"), guid("{5ec10366-a61a-11d0-8dd4-00c04fc3358c}"), locale("MS\\0x409"), WmiExpense(1), Description("NDIS Media Connect Status")] class NdisMediaConnectStatus [key, read] string InstanceName; [read] boolean Active; [read, Description("The connection status of the NIC on the network."), WmiEnum{"0=NdisMediaStateConnected", "1=NdisMediaStateDisconnected"}, WmiDataId(1)] uint32 NdisMediaConnectStatus; [WMI, dynamic: ToInstance, provider("WMIProv"), guid("{5ec10356-a61a-11d0-8dd4-00c04fc3358c}"), locale("MS\\0x409"), WmiExpense(1), Description("NDIS Media Types In Use")] class NdisMediaInUse [key, read] string InstanceName; [read] boolean Active; [read, Description("Number of media types in use."), WmiDataId(1)] uint32 NumberElements; [read, Description("List of media types the NIC is currently supporting."), WmiDataId(2), WmiSizeIs("NumberElements")] uint32 NdisMediaInUse[]; [WMI, dynamic: ToInstance, provider("WMIProv"), guid("{5ec10355-a61a-11d0-8dd4-00c04fc3358c}"), locale("MS\\0x409"), WmiExpense(1), Description("NDIS Media Types Supported")] class NdisMediaSupported [key, read] string InstanceName; [read] boolean Active; [read, Description("Number of media types supported."), WmiDataId(1)] uint32 NumberElements; [read, Description("List of media types the NIC supports."), WmiDataId(2), WmiSizeIs("NumberElements")] uint32 NdisMediaSupported[]; [WMI, dynamic: ToInstance, provider("WMIProv"), guid("{5ec1035d-a61a-11d0-8dd4-00c04fc3358c}"), locale("MS\\0x409"), WmiExpense(1), Description("NDIS Receive Block Size")] class NdisReceiveBlockSize [key, read] string InstanceName; [read] boolean Active; [read, Description("The amount of storage, in bytes, that a single packet occupies in the receive buffer space of the NIC."), WmiDataId(1)] uint32 NdisReceiveBlockSize; [WMI, dynamic: ToInstance, provider("WMIProv"), guid("{5ec1035b-a61a-11d0-8dd4-00c04fc3358c}"), locale("MS\\0x409"), WmiExpense(1), Description("NDIS Receive Buffer Space")] class NdisReceiveBufferSpace [key, read] string InstanceName; [read] boolean Active; [read, Description("The amount of memory on the NIC available for buffering receive data."), WmiDataId(1)] uint32 NdisReceiveBufferSpace; [WMI, dynamic: ToInstance, provider("WMIProv"), guid("{447956fd-a61b-11d0-8dd4-00c04fc3358c}"), locale("MS\\0x409"), WmiExpense(1), Description("NDIS Receive Errors")] class NdisReceiveError [key, read] string InstanceName; [read] boolean Active; [read, Description("The number of frames a NIC receives but does not indicate to the protocols due to errors."), WmiDataId(1)] uint32 NdisReceiveError; [WMI, dynamic: ToInstance, provider("WMIProv"), guid("{447956fe-a61b-11d0-8dd4-00c04fc3358c}"), locale("MS\\0x409"), WmiExpense(1), Description("NDIS Receive No Buffer")] class NdisReceiveNoBuffer [key, read] string InstanceName; [read] boolean Active; [read, Description("The number of frames the NIC cannot receive due to lack of NIC receive buffer space."), WmiDataId(1)] uint32 NdisReceiveNoBuffer; [WMI, dynamic: ToInstance, provider("WMIProv"), guid("{447956fb-a61b-11d0-8dd4-00c04fc3358c}"), locale("MS\\0x409"), WmiExpense(1), Description("NDIS Receives OK")] class NdisReceivesOk [key, read] string InstanceName; [read] boolean Active; [read, Description("The number of frames the NIC receives without errors and indicates to bound protocols."), WmiDataId(1)] uint32 NdisReceivesOk; [WMI, dynamic: ToInstance, provider("WMIProv"), guid("{44795708-a61b-11d0-8dd4-00c04fc3358c}"), locale("MS\\0x409"), WmiExpense(1), Description("NDIS Token Ring Current Address")] class NdisTokenRingCurrentAddress [key, read] string InstanceName; [read] boolean Active; [read, Description("The address the NIC is currently using."), WmiDataId(1)] NetworkAddress NdisCurrentAddress; [WMI, dynamic: ToInstance, provider("WMIProv"), guid("{44795709-a61b-11d0-8dd4-00c04fc3358c}"), locale("MS\\0x409"), WmiExpense(1), Description("NDIS Token Ring Current Functional Address")] class NdisTokenRingCurrentFunctional [key, read] string InstanceName; [read] boolean Active; [read, Description("The functional address enabled on the NIC for packet reception."), WmiDataId(1)] uint32 NdisTokenRingCurrentFunctional; [WMI, dynamic: ToInstance, provider("WMIProv"), guid("{4479570a-a61b-11d0-8dd4-00c04fc3358c}"), locale("MS\\0x409"), WmiExpense(1), Description("NDIS Token Ring Current Group Address")] class NdisTokenRingCurrentGroup [key, read] string InstanceName; [read] boolean Active; [read, Description("The group address enabled on the NIC for packet reception."), WmiDataId(1)] uint32 NdisTokenRingCurrentGroup; [WMI, dynamic: ToInstance, provider("WMIProv"), guid("{acf14032-a61c-11d0-8dd4-00c04fc3358c}"), locale("MS\\0x409"), WmiExpense(1), Description("NDIS Token Ring Current Ring State.")] class NdisTokenRingCurrentRingState [key, read] string InstanceName; [read] boolean Active; [read, Description("The state of the NIC driver with repsect to entering the ring."), WmiEnum{"1=NdisRingStateOpened", "2=NdisRingStateClosed", "3=NdisRingStateOpening", "4=NdisRingStateClosing", "5=NdisRingStateOpenFailure", "6=NdisRingStateRingFailure"}, WmiDataId(1)] uint32 NdisTokenRingCurrentRingState; [WMI, dynamic: ToInstance, provider("WMIProv"), guid("{890a36ec-a61c-11d0-8dd4-00c04fc3358c}"), locale("MS\\0x409"), WmiExpense(1), Description("NDIS Token Ring Current Ring Status")] class NdisTokenRingCurrentRingStatus [key, read] string InstanceName; [read] boolean Active; [read, Description("The last ring status indicated with an NDIS_RING_XXX status code."), WmiDataId(1)] uint32 NdisTokenRingCurrentRingStatus; [WMI, dynamic: ToInstance, provider("WMIProv"), guid("{4479570b-a61b-11d0-8dd4-00c04fc3358c}"), locale("MS\\0x409"), WmiExpense(1), Description("NDIS Token Ring Last Open Status")] class NdisTokenRingLastOpenStatus [key, read] string InstanceName; [read] boolean Active; [read, Description("The last open error status returned for a protocol's call to NdisOpenAdapter."), WmiDataId(1)] uint32 NdisTokenRingLastOpenStatus; [WMI, dynamic: ToInstance, provider("WMIProv"), guid("{acf14033-a61c-11d0-8dd4-00c04fc3358c}"), locale("MS\\0x409"), WmiExpense(1), Description("NDIS Token Ring Line Errors")] class NdisTokenRingLineErrors [key, read] string InstanceName; [read] boolean Active; [read, Description("Number of frames with an invalid FCS or a code violation."), WmiDataId(1)] uint32 NdisTokenRingLineErrors; [WMI, dynamic: ToInstance, provider("WMIProv"), guid("{acf14034-a61c-11d0-8dd4-00c04fc3358c}"), locale("MS\\0x409"), WmiExpense(1), Description("NDIS Token Ring Lost Frames")] class NdisTokenRingLostFrames [key, read] string InstanceName; [read] boolean Active; [read, Description("The number of frames transmitted that have not circled the ring within the maximum ring latency."), WmiDataId(1)] uint32 NdisTokenRingLostFrames; [WMI, dynamic: ToInstance, provider("WMIProv"), guid("{44795707-a61b-11d0-8dd4-00c04fc3358c}"), locale("MS\\0x409"), WmiExpense(1), Description("NDIS Token Ring Permanent Address")] class NdisTokenRingPermanentAddress [key, read] string InstanceName; [read] boolean Active; [read, Description("The address of the NIC encoded in the hardware."), WmiDataId(1)] NetworkAddress NdisPermanentAddress; [WMI, dynamic: ToInstance, provider("WMIProv"), guid("{5ec1035c-a61a-11d0-8dd4-00c04fc3358c}"), locale("MS\\0x409"), WmiExpense(1), Description("NDIS Transmit Block Size")] class NdisTransmitBlockSize [key, read] string InstanceName; [read] boolean Active; [read, Description("The minimum number of bytes that a single net packet occupies in the transmit buffer space of the NIC."), WmiDataId(1)] uint32 NdisTransmitBlockSize; [WMI, dynamic: ToInstance, provider("WMIProv"), guid("{5ec1035a-a61a-11d0-8dd4-00c04fc3358c}"), locale("MS\\0x409"), WmiExpense(1), Description("NDIS Transmit Buffer Space")] class NdisTransmitBufferSpace [key, read] string InstanceName; [read] boolean Active; [read, Description("The amount of memory, in bytes, on the NIC available for buffering transmit data."), WmiDataId(1)] uint32 NdisTransmitBufferSpace; [WMI, dynamic: ToInstance, provider("WMIProv"), guid("{447956fc-a61b-11d0-8dd4-00c04fc3358c}"), locale("MS\\0x409"), WmiExpense(1), Description("NDIS Transmit Errors")] class NdisTransmitsError [key, read] string InstanceName; [read] boolean Active; [read, Description("The number of frames a NIC fails to transmit."), WmiDataId(1)] uint32 NdisTransmitsError; [WMI, dynamic: ToInstance, provider("WMIProv"), guid("{447956fa-a61b-11d0-8dd4-00c04fc3358c}"), locale("MS\\0x409"), WmiExpense(1), Description("NDIS Transmits OK")] class NdisTransmitsOk [key, read] string InstanceName; [read] boolean Active; [read, Description("The number of frames transmitted without errors"), WmiDataId(1)] uint32 NdisTransmitsOk; [WMI, dynamic: ToInstance, provider("WMIProv"), guid("{5ec1035f-a61a-11d0-8dd4-00c04fc3358c}"), locale("MS\\0x409"), WmiExpense(1), Description("NDIS Vendor Description")] class NdisVendorDescription [key, read] string InstanceName; [read] boolean Active; [read, Description("Zero-terminated string describing the NIC."), WmiDataId(1)] string NdisVendorDescription; [WMI, dynamic: ToInstance, provider("WMIProv"), guid("{447956f9-a61b-11d0-8dd4-00c04fc3358c}"), locale("MS\\0x409"), WmiExpense(1), Description("NDIS Vendor's Driver Version")] class NdisVendorDriverVersion [key, read] string InstanceName; [read] boolean Active; [read, Description("The vendor-assigned version number of the NIC driver."), WmiDataId(1)] uint32 NdisVendorDriverVersion; [WMI, dynamic: ToInstance, provider("WMIProv"), guid("{5ec1035e-a61a-11d0-8dd4-00c04fc3358c}"), locale("MS\\0x409"), WmiExpense(1), Description("NDIS Vendor ID")] class NdisVendorID [key, read] string InstanceName; [read] boolean Active; [read, Description("A three-byte IEEE-registered vendor code, followed by a single byte the vendor assigns to identify a particular NIC."), WmiDataId(1)] uint32 NdisVendorID; [WMI, guid("{B5BD98B7-0201-11d1-A50E-00A0C9062910}")] class NetworkAddress [read, WmiDataId(1), MAX(6)] uint8 Address[]; [WMI, guid("{60fc6b57-0f66-11d1-96a7-00c04fc3358c}")] class NetworkLinkSpeed [read, WmiDataId(1)] uint32 Outbound; [read, WmiDataId(2)] uint32 Inbound; [WMI, guid("{B5BD98B8-0201-11d1-A50E-00A0C9062910}")] class NetworkShortAddress [read, WmiDataId(1), MAX(2)] uint8 Address[]; [dynamic: ToInstance, provider("WMIProv"), WMI, Description("The buffer for this control is a BOOLEAN and indicates if the device should dynamically power on and off while the system is working.   A driver would only support such a setting if there is a significant user noticeable effect for powering off the device.  E.g., turning on the device may cause a user noticeable delay.  Regardless of this setting, the driver is still required to support system sleeping states irps (which likely translates to powering off the device when a system sleep occurs)."), guid("827c0a6f-feb0-11d0-bd26-00aa00b7b32a"), locale("MS\\0x409")] class PowerDeviceEnable [key, read] string InstanceName; [read] boolean Active; [WmiDataId(1), read, write] boolean Enable; [dynamic: ToInstance, provider("WMIProv"), WMI, Description("The buffer for this control is a BOOLEAN and indicates if the device should be configured to wake a sleeping system or not.  A driver would only support such a setting if the device is capable of waking the system, which requires the device to have the specific feature as well as the parent PDO.  Sending a Pnp irp to query the device objects capabilities checks the parent PDO.  Note this setting does not necessarily alter the drivers use of the device's wake signal for runtime usage, only the drivers usage of a wait_wake irp during a system sleep needs to be effected if this setting is supported.   Any device supporting this setting may also allow a programmatic setting of the device feature by the current consumer of the device (application, etc..) through a device specific mechanism.  In such a case, the programmatic setting overrides this setting."), guid("a9546a82-feb0-11d0-bd26-00aa00b7b32a"), locale("MS\\0x409")] class PowerDeviceWakeEnable [key, read] string InstanceName; [read] boolean Active; [WmiDataId(1), read, write] boolean Enable; class WMIBinaryMofResource [read, key] string Name; [read, volatile] uint32 LowDateTime; [read, volatile] uint32 HighDateTime; [WMI, dynamic: ToInstance, provider("WmiProv"), guid("{15D851F9-6539-11d1-A529-00A0C9062910}")] class WmiFireEvent [key, read] string InstanceName; [read] boolean Active; [WmiMethodId(1)] void FireEvent(}; [WMI, dynamic: ToInstance, provider("WmiProv"), guid("{15D851F8-6539-11d1-A529-00A0C9062910}")] class WmiGetSetData [key, read] string InstanceName; [read] boolean Active; [WmiMethodId(1)] void SetEC1( [WmiMethodId(2)] void SetEC2( [WmiMethodId(3)] void GetEC1( [WmiMethodId(4)] void GetEC2( [WmiMethodId(5)] void DumpEC1( [WmiMethodId(6)] void DumpEC2( [WmiMethodId(7)] void SetEC1AsEc( [WmiMethodId(8)] void SetEC2AsEc( [WmiMethodId(9)] void GetEC1AsEc( [WmiMethodId(10)] void GetEC2AsEc( [WmiMethodId(11)] void DumpEC1AsEc( [WmiMethodId(12)] void DumpEC2AsEc(}; [dynamic: ToInstance, provider("WMIProv"), WMI, Description("This class supplies the binary mof information"), guid("{05901221-D566-11d1-B2F0-00A0C9062910}"), locale("MS\\0x409")] class WmiMofData [key, read] string InstanceName; [read] boolean Active; [WmiDataId(1), read] uint32 Size; [WmiDataId(2), WmiSizeIs("Size"), read] uint8 BinaryMofData[]; [dynamic: ToInstance, provider("WMIProv"), WMI, Description("This class supplies additional information about a data provider. Querying this class with an instance name returned from another class query will return additional information about the instance"), guid("{C7BF35D0-AADB-11d1-BF4A-00A0C9062910}"), locale("MS\\0x409")] class WmiProviderInfo [key, read] string InstanceName; [read] boolean Active; [WmiDataId(1), read] string FriendlyName; [WmiDataId(2), read] string Description; [WmiDataId(3), read] string Location; [WmiDataId(4), read] string Manufacturer; [WmiDataId(5), read] string Service; [WMI, dynamic: ToInstance, provider("WmiProv"), guid("{15D851F1-6539-11d1-A529-00A0C9062910}")] class WmiSampleClass1 [key, read] string InstanceName; [read] boolean Active; [WmiDataId(1)] boolean Xboolean; [WmiDataId(2)] uint8 Xuint8; [WmiDataId(3)] uint16 Xuint16; [WmiDataId(4)] uint32 Xuint32; [WmiDataId(5)] uint64 Xuint64; [WmiDataId(6)] sint8 Xint8; [WmiDataId(7)] sint16 Xint16; [WmiDataId(8)] sint32 Xint32; [WmiDataId(9)] sint64 Xint64; [WmiDataId(11)] datetime Xdatetime; [WmiDataId(10)] string Xstring; [WMI, dynamic: ToInstance, provider("WmiProv"), guid("{15D851F2-6539-11d1-A529-00A0C9062910}")] class WmiSampleClass2 [key, read] string InstanceName; [read] boolean Active; [WmiDataId(1)] EC1 EmbeddedClass1; [WMI, dynamic: ToInstance, provider("WmiProv"), guid("{15D851F3-6539-11d1-A529-00A0C9062910}")] class WmiSampleClass3 [key, read] string InstanceName; [read] boolean Active; [WmiDataId(1), MAX(4)] EC1 EmbeddedClass1[]; [WMI, dynamic: ToInstance, provider("WmiProv"), guid("{15D851F4-6539-11d1-A529-00A0C9062910}")] class WmiSampleClass4 [key, read] string InstanceName; [read] boolean Active; [WmiDataId(1)] uint32 Count; [WmiDataId(2), WmiSizeIs("Count")] EC1 EmbeddedClass1[]; [WMI, dynamic: ToInstance, provider("WmiProv"), guid("{15D851F5-6539-11d1-A529-00A0C9062910}")] class WmiSampleClass5 [key, read] string InstanceName; [read] boolean Active; [WmiDataId(1)] EC2 EmbeddedClass2; [WMI, dynamic: ToInstance, provider("WmiProv"), guid("{15D851F6-6539-11d1-A529-00A0C9062910}")] class WmiSampleClass6 [key, read] string InstanceName; [read] boolean Active; [WmiDataId(1), MAX(4)] EC2 EmbeddedClass2[]; [WMI, dynamic: ToInstance, provider("WmiProv"), guid("{15D851F7-6539-11d1-A529-00A0C9062910}")] class WmiSampleClass7 [key, read] string InstanceName; [read] boolean Active; [WmiDataId(1)] uint32 Count; [WmiDataId(2), WmiSizeIs("Count")] EC2 EmbeddedClass2[]; [abstract] class WMISMmBios [dynamic: ToInstance, provider("WMIProv"), WMI, Description("Raw SMBIOS Tables"), guid("{8F680850-A584-11d1-BF38-00A0C9062910}"), locale("MS\\0x409")] class RawSMBiosTables : WMISMmBios [key, read] string InstanceName; [read] boolean Active; [WmiDataId(1), read] uint32 Size; [WmiDataId(2), WmiSizeIs("Size"), read] uint8 SMBiosData[]; ~|vpnlj {wsokg {wsokg {wsokg {wsokg {wsokg {wsokg {wsokg {wsokg {wsokg {wsokg {wsokg {wsokg {wsokg {wsokg {wsokg {wsokg {wsokg {wsokg {wsokg {wsokg {wsokg {wsokg {wsokg {wsokg {wsokg {wsokg {wsokg {wsokg {wsokg {wsokg {wsokg {wsokg {wsokg {wsokg {wsokg {wsokg {wsokg {wsokg {wsokg {wsokg {wsokg {wsokg {wsokg {wsokg {wsokg {wsokg {wsokg {wsokg {wsokg {wsokg {wsokg {wsokg {wsokg {wsokg {wsokg {wsokg Normal Default Paragraph Font
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\wmi\wbem\scripting\todo.txt ===
Whistler
========

<HIGH>

1. SWbemPropertyEx::AddValues and DeleteValues - these are assuming that
   construction of the SWbemProperty object from SWbemPropertySet::Item
   is "cheap" and does not require retrieval of the property value. This in 
   turn assumes that the IWbemClassObject::Get call does not force the
   UMI provider to get the value when the VARIANT *pVar argument passed in
   is NULL. We need to check this assumption.

   [WMI RAID 1930, NT RAID 139298]

2. Remove Members_? What's happening?

   [WMI RAID 2408]

3. Need to migrate from IUmiCustomInterfaceFactory to IWbemComBinding.

     - Need to document use of IADsExtension for scriptable extensions
	 - Have some issues with COM binding interface

4. Whenever we create a new CSWbemObject, we need to potentially pass in
   information that allows us to record the Security Descriptor settings used to
   retrieve that object. The only reason we need this is so that the Path_
   property can record those settings. A bit of a pain.

   Since this can occur in many operations we need a helper object
   to calculate the SD settings from the context and the flags.

5. CopyTo not supported in the DS any more. Should we keep the API in WMI
	Scripting right now? What about SWbemServices.Copy?

   [WMI RAID 2423]

6. Still wiating for Unlink Flags definition from core.

   [WMI RAID 1933]

7. WBEM_MULTI_FLAG??

8. Might need a flag to SWbemServices::Delete to indicate "recursive delete".

   [WMI RAID 2429]

9. Change all occurences of UMI to WMI. (note effect that this changes wmi: prefix 
    semantics from old style to new style paths)
    
	[WMI RAID 2439]

10. SWbemObject._NewEnum, SWBemObject.Filter_, SWbemObject.Members_ and 
    SWbemServices.Filter_, SwbemServices._NewEnum all rely on pan-provider
	support for the following queries:

	 - select * from Class1 GO select * from Class2
	 - CreateInstanceEnum("*")

	But it appears that these features are in doubt. So do we drop this?

	[NT RAID 134996, 137260]

11. Currently IWbemConnection:Open calls fail against downlevel boxes. Not good.
    Even if they work, if we only allow IWbemServices and not IWbemServicesEx
	then there could be some major changes required.

	[NT RAID 135008]

<MEDIUM>

1. Work out which new bits justify the HandleNull override.

2. Integrate Jeff's async fixes into the Whistler codebase.

3. Improved Discovery of Propagated Methods & Properties (not sure I remember what this is).

4. FLAGS and Error Codes - sanity check from time to time

5. Why do VB Arrays have to be weakly typed when passing to a method invocation?

6. Do we need to use IWbemServices::PutObject and PutObjectAsync - why isn't
    it sufficient to look at __GENUS?


<BLACKCOMB>

1. SWbemObject:
		- Fix ability to support named parameters in WMI Schema Methods?
		- Define a cache of ISWbemServicesEx pointers for an SWbemObject (keyed on
			mode, strselector). This would enable us to avoid calling Open every time
			an implicit coercion is made on SWbemObject to a container or scope.
		

========================= OLD STUFF ================================================
Post NT4 SP4
=============

1. WBEM_FLAG_ENSURE_LOCATABLE - means too many properties returned

2. Handle WBEM_S_DUPLICATE_OBJECT 

3. Optimize Property/Qualifier/Context/Method iteration so that if there is only one iterator then
   the underlying COM interface is used directly.

4. Optimize use of IWbemServices to reuse cached connections.


Language Feature Support Testing
================================

1. Null value passing

	VBScript - Use the "null" value
	JScript  - Use the "null" value
	Perl (CPAN) - Use Variant(VT_NULL, 0)
	Perl (AS) - returns undefined (i.e. defined(val) returns false) OK
				passing unassigned value into Perl causes it to translate it to 0(VT_I4)

2. Array value detection

	VBScript	- fine; use IsArray
	JScript		- 3.0 is broken - have to wait for 5.0 and try/catch
	Perl		- Dunno

3. Array passing - 

	VB 
		Can set array values into COM OK
		Can read array values from COM OK
		Can read individual array element values using Class.Prop(x) OK
		Can set individual array element values
		(NB: LBound and UBound on an IWbemProperty do not trigger a call to the default Property,
		this behavior is different from VBS,)

	VBScript
		array values can be passed in either way across COM boundary
		array assignments can be made OK
		individual array element assignments can be made OK
					
	Perl (AS)
		array values can be passed in both directions (to pass into COM must use \@ to reference array), 
		have to check array and array element assignments - these are OK mostly

	JScript
		- need to use the VBArray function to wrap a SAFEARRAY passed from COM - this works.
		- passing JScript arrays to COM works with IDispatchEx handling
		- array element and array assignments work OK.
		- individual array element assignments can't be made

4. Error handling

	VBScript - Use the Err mechanism and set EXCEPINFO - this works

	JScript - Completely bereft of any useful error handling (wait for 5.0)

	Perl - Dunno?

5. Default member read/write

	VBScript - GETs work fine (but simple default property PUTs don't work; need to specify member otherwise
				VScript treats this as a reassignment of a simple non-object value to the variable)
				By simple is meant assignments of the form

				MyProperty = 25;

				whereas compouns statements which include assignment such as

				Class.Properties_("MyProperty") = 25

				work, as VBScript calls into the Properties_ object on its Item() method with 2 parameters
				("MyProperty" and 25).

	JScript - same as for VBScript

	VB - works fine in both directions

	Perl - doesn't work in general (check new CPAN stuff)
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\wmi\wbem\scripting\demos\wmihost\hosttest\readme.txt ===
========================================================================
       CONSOLE APPLICATION : hosttest
========================================================================


AppWizard has created this hosttest application for you.  

This file contains a summary of what you will find in each of the files that
make up your hosttest application.

hosttest.dsp
    This file (the project file) contains information at the project level and
    is used to build a single project or subproject. Other users can share the
    project (.dsp) file, but they should export the makefiles locally.

hosttest.cpp
    This is the main application source file.


/////////////////////////////////////////////////////////////////////////////
Other standard files:

StdAfx.h, StdAfx.cpp
    These files are used to build a precompiled header (PCH) file
    named hosttest.pch and a precompiled types file named StdAfx.obj.


/////////////////////////////////////////////////////////////////////////////
Other notes:

AppWizard uses "TODO:" to indicate parts of the source code you
should add to or customize.

/////////////////////////////////////////////////////////////////////////////
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\wmi\wbem\scripting\test\perl\activestate\errorhandling\readme.txt ===
Various techniques for dealing with errors
in perl WMI scripts
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\wmi\wbem\scripting\test\vb\newbvt\frmtest.log ===
Line 2: Could not create reference: '{6B7E6392-850A-101B-AFC0-4210102A8DA7}#1.2#0'.
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\wmi\wbem\scripting\test\userprov\readme.txt ===
Methods Provider
================ 
This sample demonstrates the framework necessary to implement a methods provider.
To get the sample working, do the following;
1) Build using NMAKE. 

2) Make sure that the classes used by the provider are defined by using the MOF compiler.
Ex; mofcomp userid.mof

3) Register the DLL by using the self registration technique.
Ex; c:>regsvr32 userid.dll

What this provider supports
===========================

This provider supports methods for the class "UserID".  The only method 
supported in this sample is named GetUserID.  Note that the method is marked 
as "Static" and should be executed using a path to the class.  The mof definition is                               

[dynamic: ToInstance, provider("UserIDProvider")]class UserID      
{                                                                  
     [implemented, static]                                         
        void GetUserID([out] string sDomain, [out] string sUser,
		                 [out] string sImpLevel,
						 [out] string sPrivileges [],
						 [out] boolean bPrivilegesEnabled []);      
};                                                                 

The method returns the current user credentials of the client.


Using WbemTest application to execute the sample
================================================
To see the provider in action you must use wbemtest application to execute methods
using this provider. The following are directions on how to see the methods provider in
action.
1)type wbemtest at command prompt 
ex: c:>wbemtest
2)Connect to root\default
3)Click Execute Method Button
4)Type in the Object Path: In this case "UserID".
5)A default method should appear in the Method box named "GetUserID".
6)Click Execute!
7)The values should be returned in Edit-Out-Parameters.

Using the userid.vbs sample to execute the sample
====================================================
The method provider sample can also be called using the userid.vbs
sample program.  Before running it, this provider should be setup first
using the steps listed above.
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\wmi\wbem\sdk\framedyn\dyd\placefil.txt ===
framedyd.dll    WMI_PSDK\
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\wmi\wbem\sdk\license\placefil.txt ===
REDIST.TXT	WMI_PSDK\License\
SCHEMA.TXT	WMI_PSDK\License\
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\wmi\wbem\sdk\psstools\utillib\placefil.txt ===
makefile	WMI_PSDK\Samples\VC\UTILLIB\
precomp.h	WMI_PSDK\Samples\VC\UTILLIB\
utillib.h	WMI_PSDK\Samples\VC\UTILLIB\
utillib.dsp	WMI_PSDK\Samples\VC\UTILLIB\
utils.cpp	WMI_PSDK\Samples\VC\UTILLIB\
Utillib.htm	WMI_PSDK\Samples\VC\UTILLIB\
wbemsec.cpp	WMI_PSDK\Samples\VC\UTILLIB\
precomp.h	WMI_PSDK\Samples\VC\UTILLIB\
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\wmi\wbem\sdk\license\redist.txt ===
\LICENSE\REDIST.TXT


The files listed below are fully redistributable (located in the WMI SDK directory):

Redist\WMICore.exe
SNMP\Mibs\Snmpv1\Rfcs\1213.txt
SNMP\Mibs\Snmpv1\Rfcs\1229.txt
SNMP\Mibs\Snmpv1\Rfcs\1230.txt
SNMP\Mibs\Snmpv1\Rfcs\1231.txt
SNMP\Mibs\Snmpv1\Rfcs\1238.txt
SNMP\Mibs\Snmpv1\Rfcs\1253.txt
SNMP\Mibs\Snmpv1\Rfcs\1269.txt
SNMP\Mibs\Snmpv1\Rfcs\1271.txt
SNMP\Mibs\Snmpv1\Rfcs\1285.txt
SNMP\Mibs\Snmpv1\Rfcs\1304.txt
SNMP\Mibs\Snmpv1\Rfcs\1315.txt
SNMP\Mibs\Snmpv1\Rfcs\1316.txt
SNMP\Mibs\Snmpv1\Rfcs\1317.txt
SNMP\Mibs\Snmpv1\Rfcs\1318.txt
SNMP\Mibs\Snmpv1\Rfcs\1354.txt
SNMP\Mibs\Snmpv1\Rfcs\1381.txt
SNMP\Mibs\Snmpv1\Rfcs\1382.txt
SNMP\Mibs\Snmpv1\Rfcs\1389.txt
SNMP\Mibs\Snmpv1\Rfcs\1398.txt
SNMP\Mibs\Snmpv1\Rfcs\1406.txt
SNMP\Mibs\Snmpv1\Rfcs\1407.txt
SNMP\Mibs\Snmpv1\Rfcs\1414.txt
SNMP\Mibs\Snmpv1\Rfcs\1461.txt
SNMP\Mibs\Snmpv1\Rfcs\1471.txt
SNMP\Mibs\Snmpv1\Rfcs\1472.txt
SNMP\Mibs\Snmpv1\Rfcs\1473.txt
SNMP\Mibs\Snmpv1\Rfcs\1474.txt
SNMP\Mibs\Snmpv1\Rfcs\1493.txt
SNMP\Mibs\Snmpv1\Rfcs\1512.txt
SNMP\Mibs\Snmpv1\Rfcs\1513.txt
SNMP\Mibs\Snmpv1\Rfcs\1514.txt
SNMP\Mibs\Snmpv1\Rfcs\1515.txt
SNMP\Mibs\Snmpv1\Rfcs\1516.txt
SNMP\Mibs\Snmpv1\Rfcs\1525.txt
SNMP\Mibs\Snmpv1\Rfcs\1559.txt
SNMP\Mibs\Snmpv1\Rfcs\1593.txt
SNMP\Mibs\Snmpv1\Rfcs\1742.txt
SNMP\Mibs\Snmpv1\Rfcs\1757.txt
SNMP\Mibs\Snmpv1\Rfcs\1792.txt
SNMP\Mofs\Snmpv1\Rfcs\1213.mof
SNMP\Mofs\Snmpv1\Rfcs\1229.mof
SNMP\Mofs\Snmpv1\Rfcs\1230.mof
SNMP\Mofs\Snmpv1\Rfcs\1231.mof
SNMP\Mofs\Snmpv1\Rfcs\1238.mof
SNMP\Mofs\Snmpv1\Rfcs\1253.mof
SNMP\Mofs\Snmpv1\Rfcs\1269.mof
SNMP\Mofs\Snmpv1\Rfcs\1271.mof
SNMP\Mofs\Snmpv1\Rfcs\1285.mof
SNMP\Mofs\Snmpv1\Rfcs\1304.mof
SNMP\Mofs\Snmpv1\Rfcs\1315.mof
SNMP\Mofs\Snmpv1\Rfcs\1316.mof
SNMP\Mofs\Snmpv1\Rfcs\1317.mof
SNMP\Mofs\Snmpv1\Rfcs\1318.mof
SNMP\Mofs\Snmpv1\Rfcs\1354.mof
SNMP\Mofs\Snmpv1\Rfcs\1381.mof
SNMP\Mofs\Snmpv1\Rfcs\1382.mof
SNMP\Mofs\Snmpv1\Rfcs\1389.mof
SNMP\Mofs\Snmpv1\Rfcs\1398.mof
SNMP\Mofs\Snmpv1\Rfcs\1406.mof
SNMP\Mofs\Snmpv1\Rfcs\1407.mof
SNMP\Mofs\Snmpv1\Rfcs\1414.mof
SNMP\Mofs\Snmpv1\Rfcs\1461.mof
SNMP\Mofs\Snmpv1\Rfcs\1471.mof
SNMP\Mofs\Snmpv1\Rfcs\1472.mof
SNMP\Mofs\Snmpv1\Rfcs\1473.mof
SNMP\Mofs\Snmpv1\Rfcs\1474.mof
SNMP\Mofs\Snmpv1\Rfcs\1493.mof
SNMP\Mofs\Snmpv1\Rfcs\1512.mof
SNMP\Mofs\Snmpv1\Rfcs\1513.mof
SNMP\Mofs\Snmpv1\Rfcs\1514.mof
SNMP\Mofs\Snmpv1\Rfcs\1515.mof
SNMP\Mofs\Snmpv1\Rfcs\1516.mof
SNMP\Mofs\Snmpv1\Rfcs\1525.mof
SNMP\Mofs\Snmpv1\Rfcs\1559.mof
SNMP\Mofs\Snmpv1\Rfcs\1593.mof
SNMP\Mofs\Snmpv1\Rfcs\1742.mof
SNMP\Mofs\Snmpv1\Rfcs\1757.mof
SNMP\Mofs\Snmpv1\Rfcs\1792.mof
SNMP\SMIR_Mofs\Snmpv1\Rfcs\1213.mof
SNMP\SMIR_Mofs\Snmpv1\Rfcs\1229.mof
SNMP\SMIR_Mofs\Snmpv1\Rfcs\1230.mof
SNMP\SMIR_Mofs\Snmpv1\Rfcs\1231.mof
SNMP\SMIR_Mofs\Snmpv1\Rfcs\1238.mof
SNMP\SMIR_Mofs\Snmpv1\Rfcs\1253.mof
SNMP\SMIR_Mofs\Snmpv1\Rfcs\1269.mof
SNMP\SMIR_Mofs\Snmpv1\Rfcs\1271.mof
SNMP\SMIR_Mofs\Snmpv1\Rfcs\1285.mof
SNMP\SMIR_Mofs\Snmpv1\Rfcs\1304.mof
SNMP\SMIR_Mofs\Snmpv1\Rfcs\1315.mof
SNMP\SMIR_Mofs\Snmpv1\Rfcs\1316.mof
SNMP\SMIR_Mofs\Snmpv1\Rfcs\1317.mof
SNMP\SMIR_Mofs\Snmpv1\Rfcs\1318.mof
SNMP\SMIR_Mofs\Snmpv1\Rfcs\1354.mof
SNMP\SMIR_Mofs\Snmpv1\Rfcs\1381.mof
SNMP\SMIR_Mofs\Snmpv1\Rfcs\1382.mof
SNMP\SMIR_Mofs\Snmpv1\Rfcs\1389.mof
SNMP\SMIR_Mofs\Snmpv1\Rfcs\1398.mof
SNMP\SMIR_Mofs\Snmpv1\Rfcs\1406.mof
SNMP\SMIR_Mofs\Snmpv1\Rfcs\1407.mof
SNMP\SMIR_Mofs\Snmpv1\Rfcs\1414.mof
SNMP\SMIR_Mofs\Snmpv1\Rfcs\1461.mof
SNMP\SMIR_Mofs\Snmpv1\Rfcs\1471.mof
SNMP\SMIR_Mofs\Snmpv1\Rfcs\1472.mof
SNMP\SMIR_Mofs\Snmpv1\Rfcs\1473.mof
SNMP\SMIR_Mofs\Snmpv1\Rfcs\1474.mof
SNMP\SMIR_Mofs\Snmpv1\Rfcs\1493.mof
SNMP\SMIR_Mofs\Snmpv1\Rfcs\1512.mof
SNMP\SMIR_Mofs\Snmpv1\Rfcs\1513.mof
SNMP\SMIR_Mofs\Snmpv1\Rfcs\1514.mof
SNMP\SMIR_Mofs\Snmpv1\Rfcs\1515.mof
SNMP\SMIR_Mofs\Snmpv1\Rfcs\1516.mof
SNMP\SMIR_Mofs\Snmpv1\Rfcs\1525.mof
SNMP\SMIR_Mofs\Snmpv1\Rfcs\1559.mof
SNMP\SMIR_Mofs\Snmpv1\Rfcs\1593.mof
SNMP\SMIR_Mofs\Snmpv1\Rfcs\1742.mof
SNMP\SMIR_Mofs\Snmpv1\Rfcs\1757.mof
SNMP\SMIR_Mofs\Snmpv1\Rfcs\1792.mof
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\wmi\wbem\sdk\license\schema.txt ===
CIMV2 Namespace Usage

This document aligns with Win32 Logo Requirements, and MSI and SMBIOS MOF Additions as of 01/25/99 and defines the proper usage of the classes defined in the CIMV2 namespace. Generally, one of four cases may apply:

1) CIM classes which can be freely subclassed. The only restriction being that instances must always apply to the local machine. 

2) CIM classes that cannot be subclassed directly. All the instances of the CIM class are required to be instances known to the win32 instrumentation. As a result subclasses may only be added to the provided Win32 subclasses.

3) CIM classes that can be subclassed even though Win32 classes exist. In this case the set of instances provided by the Win32 classes are not assumed to be complete - that is, the instrumentation supplied cannot detect all relevant instances. It is expected that subclasses of the CIM class will be provided that return instances that are not discovered by the Win32 subclass providers.

4) CIM classes that cannot be subclassed. These are either classes that are at a level of abstraction that makes subclassing undesirable (such as CIM_ManagedSystemElement) or that are simply not relevant to the local environment (such as CIM_Cluster). Note it is never acceptable in the CIMV2 namespace for third parties to instrument CIM classes directly. 


1) The following classes may be freely subclassed.  Subclasses should only be added where the instances introduced are local to the machine.

Classes
* CIM_FRU
* CIM_SupportAccess
* CIM_Configuration
* CIM_MonitorResolution
* CIM_RedundancyGroup and its subclasses
* CIM_ManagementController
* CIM_Statistics and its subclasses
* CIM_StorageError

Associations
* All CIM_Product associations (Exception is the CIM_ProductSoftwareFeatures association which is addressed in the section, "Win32 associations with specific meaning")
* All CIM_FRU and CIM_SupportAccess associations
* All CIM_Configuration associations 
* All CIM_Statistics associations
* CIM_Realizes and most associations of the Physical Model (Exception is the CIM_Container association which is addressed in section 3.
* CIM_DeviceSoftware 
* CIM_AssociatedSensor and its subclasses
* CIM_BIOSLoadedInNV
* CIM_StorageDefect
* CIM_RedundancyComponent and its subclasses
* CIM_ActsAsSpare
* CIM_CollectionOfSensors
* CIM_DeviceServiceImplementation
* CIM_DeviceSAPImplementation


2) Win32 subclasses are provided for the following classes. Only direct subclasses of Win32 classes can be added. That is, the CIM classes should not be subclassed directly.  All instances must be known to the CIMV2 instrumentation.

Classes
* CIM_UnitaryComputerSystem
* CIM_OperatingSystem
* CIM_FileSystem and its subclasses
* CIM_LogicalFile and its subclasses
* CIM_Process
* CIM_Thread
* CIM_Printer
* CIM_Scanner 
* CIM_NetworkAdapter and its subclasses
* CIM_Controller and most of its subclasses (e.g., Video, SCSI, Serial, Parallel, PCI, PCMCIA, USB)
* CIM_POTSModem
* CIM_MediaAccessDevice and its subclasses (e.g., CIM_DisketteDrive, CIM_WORMDrive and CIM_MagnetoOpticalDrive)
* CIM_UserDevice and its subclasses 
* CIM_SystemResource and its subclasses
* CIM_Job
* CIM_JobDestination

Associations
* CIM_HostedJobDestination
* CIM_JobDestinationJobs
* CIM_OSProcess
* CIM_ProcessThread  
* CIM_FileStorage
* CIM_DirectoryContainsFile 
* CIM_OperatingSystemSoftwareFeature 
* CIM_HostedFileSystem
* CIM_BootOSFromFS 
* CIM_InstalledOS
* CIM_RunningOS
* CIM_ProcessExecutable
* CIM_AllocatedResource
* CIM_ResidesOnExtent
* CIM_ComputerSystemResource
* CIM_Export
* CIM_Mount


3) The following Win32 subclasses are instrumented to return a specific and limited set of instances. There may be instances relevant to the local machine that are not provided by the Win32 classes and as a result subclasses are permitted of both the Win32 and CIM classes.  Direct subclassing of Win32 classes is allowed. Other subclasses of the CIM classes are allowed for instances local to the machine and not already known to the Win32 providers. You must be careful not to return instances that are already returned by the Win32 providers.

Classes
* CIM Battery - Win32 classes represent laptop or UP (COM-port attached) batteries
* CIM_PowerSupply and CIM_UninterruptiblePowerSupply - COM-port attached UPSs are represented
* CIM_StorageExtent and its subclasses - Win32 classes represent logical disks (subclass of CIM_LogicalDisk), partitions (subclass of CIM_DiskPartition) and the logical view of SCSI/RAID-based media  (subclass of CIM_VolumeSet) 
* CIM_Processor  - Win32 classes represent "a device capable of interpreting a sequence of machine instructions on a Win32 system"
* CIM_PhysicalElement and its subclasses - Win32 classes representing data available from SMBIOS (e.g., system slots, connectors and enclosures)
* CIM_Memory and its subclasses - SMBIOS data is available (e.g., system memory arrays and cache)
* CIM_CoolingDevice and its subclasses - Win32 classes represent data available from SMBIOS (e.g., fans and refrigeration elements)
* CIM_Sensor and its subclasses - Win32 classes represent data available from SMBIOS (e.g., temperature and voltage sensors)
* CIM_Product - ComputerSystemProduct and software "products" (installed by the Microsoft Software Installer, MSI) are defined and instantiated 
* CIM_Setting - Many subclasses exist containing System Device, User, boot, MSI resource and other information
* CIM_Service, CIM_ServiceAccessPoint and their subclasses - Services represent functionality hosted on the System and OperatingSystem. All OS drivers and Services are instantiated by the CIMV2 instrumentation.  
* CIM_SoftwareFeature, CIM_SoftwareElement, CIM_Checks, CIM_Actions and their subclasses represent the MSI (Microsoft Software Installer) view of applications. Other installation technologies and individual applications may choose to add other subclasses at the same level in the schema.

Associations
* CIM_SystemComponent and its subclasses - Many subclasses exist associating devices, users, software and other classes
* CIM_AssociatedBattery
* CIM_AssociatedCooling 
* CIM_DeviceConnection - Win32 classes are various types of "ControlledBy" associations
* CIM_BasedOn - Win32 classes reference subclasses of CIM_LogicalDisk based on CIM_DiskPartition or CIM_VolumeSets
* CIM_MediaPresent - Win32 between subclasses of CIM_VolumeSet or CIM_DiskPartition 
* CIM_AssociatedMemory - Win32 SMBIOS instrumentation exists for Win32_AssociatedProcessorMemory, relating a Win32_Processor and its cache
* CIM_Container - Win32 instantiates a memory container, with data from SMBIOS
* CIM_ElementSetting - Win32 subclasses exist associating devices and their settings, users with desktops, and many other elements
* CIM_HostedService, CIM_HostedAccessPoint and their subclasses, CIM_ServiceServiceDependency, CIM_ServiceSAPDependency, CIM_SAPSAPDependency, CIM_ServiceAccessBySAP  - Win32 classes represent the associations of OS drivers and services
* All associations defined in the Application Model - Win32 classes represent the MSI view of applications  
* CIM_ProductSoftwareFeatures - Win32 subclass defines the "product" under which an MSI Software Feature is installed 


4) For the following classes subclassing and direct instantiation is not allowed.  These are high level classes or classes that contain instances that are not "local" to the machine.

Classes
* CIM_ManagedSystemElement and CIM_LogicalElement (Subclasses addressed separately)
* CIM_System and CIM_ComputerSystem (Subclasses addressed separately)
* CIM_LogicalDevice (Subclasses addressed separately)
* CIM_VirtualComputerSystem
* CIM_Cluster
* CIM_ClusteringService

Associations
* CIM_ApplicationSystemSoftwareFeature
* CIM_ComponentCS
* CIM_HostedClusterService
* CIM_ClusterServiceAccessBySAP
* CIM_HostingCS
* CIM_ParticipatingCS
* CIM_DeviceAccessedByFile (N/A for Win32 environment)


GENERAL NOTES
Where CIM classes are included in the CimWin32 MOF, these classes reflect the CIM V2.2 Schema, released by the DMTF (Desktop Management Task Force) in September 1998.   Several areas where the CimWin32 MOF differs are discussed below:
 
* Qualifiers exist in CIM as versatile and user-definable meta-data for the Schema.  Creating new qualifiers is allowed by the CIM Specification.  Several examples of new qualifiers (like the "Dynamic" qualifier) can be found in the CimWin32 MOF.    
 
* Many of the CIM Schema keys (identified using the Key qualifier) are labeled as "propagated" and are meant for object identification in an enterprise environment.  These "propagated" keys are typically not needed in the CIMV2 namespace, which reflects the local platform.  In these cases, the keys are identified with the CIM_Key qualifier only.  If the CimWin32 MOF is exported, the CIM_Key qualifier can be directly replaced with the Key qualifier.  The data contained within the CIM_Key properties does not have to be modified.  
 
* Schema-specific properties and methods can be added to CIM classes.  This is allowed by the CIM Specification.  Microsoft uses this feature throughout the CimWin32 MOF, identifying additions as "Schema ("Win32")".
 
* CIM classes, with a few exceptions, are marked with the ABSTRACT qualifier throughout the CimWin32 MOF.  The "Abstract" qualifier states that there are no direct instances of the class.  (In other words, all instances are only instances of subclasses, and not the "Abstract" class itself.)  The use of the ABSTRACT qualifier disallows the installation of a Provider (declaring itself the instrumentation for the class).  At a CIM class level, a provider would have to be aware of the entire instance-level population, which is very unlikely.  In only a few cases does the Win32 Provider instrument CIM classes directly.  One example is the instrumentation of CIM_LogicalFile in the CIMV2 namespace.  
 
* The CimWin32 MOF does not consistently include an Override qualifier.  This will be corrected in the next release of the MOF.  Where property, method or reference names are duplicated in subclasses, these are actually overrides of the parent classes' constructs.  
 
* Where the Write qualifier is not explicitly listed for a property,  it is assumed that the qualifier is FALSE.  This is different than the CIM Schema definition (default value of TRUE).  Changing a qualifier's default value is allowed by the CIM Specification.
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\wmi\wbem\sdk\psstools\utillib\readme.txt ===
utillib.lib - A collection of routines used by some of the samples applications.

//***************************************************************************
// Function:   WbemErrorString
// Purpose:    Turns sc into a text string
//***************************************************************************
//***************************************************************************
// Function:  PrintError
// Purpose:   Formats and prints the error message
//***************************************************************************
//***************************************************************************
// Function:  PrintErrorAndExit
// Purpose:   Formats an error message & exits program
//***************************************************************************
//***************************************************************************
// Function:  PrintErrorAndAsk
// Purpose:   Prints the error message and prompts to continue
//***************************************************************************
//*****************************************************************************
// Function:   TypeToString
// Purpose:    Takes a variant, returns a pointer to a string that is the variant type
//*****************************************************************************
//*****************************************************************************
// Function:   TypeToString
// Purpose:    Takes a VARTYPE, returns a pointer to a string that is the variant type
//*****************************************************************************
//*****************************************************************************
// Function:   TypeToString
// Purpose:    Takes a CIMTYPE, returns a pointer to a string that is the variant type
//*****************************************************************************
//*****************************************************************************
// Function:   ValueToString 
// Purpose:    Takes a variant, returns a string representation of that variant
//*****************************************************************************
//*****************************************************************************
// Function:   cvt
// Purpose:    Converts unicode to oem for console output
// Note:       y must be freed by caller
//*****************************************************************************
//*****************************************************************************
// Function:   myWFPrintf
// Purpose:    Checks to see if outputing to console and converts strings
//             to oem if necessary.
// Note:       Returns number of characters written (ie if we write 3 oem
//             chars, it returns 3.  If it writes 4 wchars, it returns 4).
//*****************************************************************************
//*****************************************************************************
// Function:   difftime
// Purpose:    Returns the elapsed time between two _timeb structures
// Note:       This is different from the crt routine which works on time_t
//             structures.
//*****************************************************************************
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\wmi\wbem\sdk\vc7\wmiscriptutils\placefil.txt ===
WMIScriptUtils.DLL    WMI_SDK
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\wmi\wbem\tools\locstudioparser\readme.txt ===
LOCALIZATION STUDIO 4.2 PARSER

This DLL provides the ability to localize Amended qualifiers through Localization Studio 4.2.
To install the parser on a workstation already containing LocStudio 4.2, add the following registry entry:

HKLM\Software\Microsoft\LocStudio 4.2\Parsers\
\Parser99
  Description: REG_SZ : "MOF Parser"
  ExtensionList: REG_SZ : "MOF MFL"
  Help: REG_SZ : "WMI MOF files (*.mof, *.mfl")"
  Location: REG_SZ : "D:\M3\locstudioparser\retail\wmiparse.dll"
  ParserID : REG_DWORD : 0x63
\Parser99\File Types
\Parser99\File Types\File Type 1
  Description : REG_SZ : "MOF Parser"
  File Type : REG_DWORD : 0x1
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\wmi\wbem\tools\wmic\commands.txt ===
Sample Commands:
================
(1)wmic:root\cli>process get name
   Displays the name property of all the instances specified by process in the default
   (value) format.

(2)wmic:root\cli>process get name,caption  /value /all 
   Displays the name,caption properties of all the instances specified by process in the table
   format.Here eventhough both the getswitches are specified which indicates two diff.formats
   it will take the last one.

(3)wmic:root\cli>class win32_useraccount
   It will display the list of properties of all the instances of win32_useraccount.Eventhough
   there is no verb specified it will take default as GET. 

(4)wmic:root\cli>class win32_useraccount  get /interactive
   It will report an error because /interactive and /nointeractive are not allowed with GET,LIST
   and ASSOC.

(5)wmic:root\cli>path win32_process list
   It will report an error becuse list verb is not allowed with PATH and CLASS.

(6)wmic:root\cli>useraccount list brief /translate:Basicxml
   It will list the properties of the alias useraccount and translate the return
   values using the translation table Basicxml.
  
(7)wmic:root\cli>process call create notepad.exe
   It will create an instance of notepad.

(8)wmic:root\cli>process call create notepad.exe /interactive
   Itwill ask for the user response to create a notepad and creates according to 
   his response.  

(9)wmic:root\cli>/interactive process call create notepad.exe
   Itwill ask for the user response to create a notepad and creates according to 
   his response.Here /interactive is global level, so it will wait for the user response
   for subsequent commands also.

(10)wmic:root\cli>class win32_process assoc

(11)wmic:root\cli>class win32_process set caption="gjkvc"
   Sets the caption property to "gjkvc" of the instances of the class win32_process.

(12)wmic:root\cli>class win32_process set caption="gjkvc" /interactive
   It will ask for the user prompt before setting the property specified.If the user says
   'y'  then it will set the property otherwise it won't set the property.

(13)wmic:root\cli>class removetest00 create "p=100"
   Creates an instance of class Removetest00 with the property p=100.

(14)wmic:root\cli>path removetest00 where p=100 get
   Display the properties of the instance of class removetest00 which has the property p=100

(15)wmic:root\cli>path removetest00 where p=100 delete
   Deletes the instance of the class removetest00 which has property p=100.

(16)wmic:root\cli>class removetest00 delete
   Deletes the class removetest00.

(17)wmic:root\cli>process where handle=0 get
   Display the properties of the instance which satisfies the where expression.

(18)wmic:root\cli>process (0 "System Idle Process") get
   Display the properties of the instances which satisfies the alias parameters specified.

(19)wmic:root\cli>process path win32_process get
   The path specified by path expression(win32_process) and the alias(process) matched,
   that's why it will display the list of properties of all the instances of process.

(20)wmic:root\cli>process path win32_useraccount get
   Here the path specified by pathexpression (win32_useraccount) and the alias (process) doesn't
   match, then it will report an error.

(21)wmic:root\cli>process path win32_process where handle=0 list
  The path specified by path expression(win32_process) and the alias(process) matched,
  that's why it will list the properties of all the instances of process.  

(22)wmic:root\cli>process path win32_process.handle where handle=0 list
  Here it will report an error because when where is specified the path expression
  should be classpathexpression.

(23)wmic:root\cli>/namespace:\\root\default class netdiagnostics get
  It will connect to the namespace \\root\default and display the properties of the instances
  of the class netdiagnostics.

(24)wmic:root\cli>process where handle=0 call create notepad.exe
  It will report an error because create method of the class win32_process is not valid
  at the instance level.

(25)wmic:root\cli>/role:\\root\cimv2 process get
  It will change the role to \\root\cimv2 and try to execute the command.It will report an
  error because the class corresponding to alias(process) Microsoft_clialias is not there
  inthe \\root\cimv2 namespace.

(26)wmic:root\cli>/role:junk process get
  It will report an error while executing the command, becuse the specified namespace is not
  valid.

(27)wmic:root\cli>/node:vnraju,biplabm /user:"administrator" /password:"test2" proce
ss get
  If both the machines have the same password, then it will display the properties of the
  instances of process.If any one machine has different password then it will report the 
  error for that node and display the properties of the instances of the process for the
  other node.If both the systems have different password then it will report the error for
  both the nodes.

(28)wmic:root\cli>/node:vnraju /user:"administrator"
  It will prompt for the password, if the user enters the correct password then it will 
  connect to the node vnraju.

More commands:
=============
1.a)
wmic:root\cli>share call create "", "", 5, abcd, "", "C:\rams", 0
(CREATE A SHARE)

FYI: 
Create parameters are as follows:
a)Access(OBJECT)             
b)Description(STRING)
c)MaximumAllowed(UINT32)
d)Name(STRING)
e)Password(STRING)
f)Path(STRING)
g)Type(UINT32)

1.b) path win32_service where name='w3svc' get /value
(PATH and WHERE together)

2. process 0 "system idle process" get /value
(PWhere without parenthesis)

3. process (0 "system idle process") get /value
(PWhere with paranethesis)

4. process path win32_process where handle=0 get /value
(<alias> with PATH and WHERE)

5. /namespace:"\\root\cli" path Microsoft_CliAlias.FriendlyName='UPS'
 delete 
(Deleting an instance)

6. /node:ram, vivek /user:administrator /password:enterthedragon service get /value
(multiple nodes - GET)

7. /node:ram, vivek /user:administrator /password:enterthedragon process call create notepad.exe
(multiple nodes - CALL)

8. /node:ram /user:administrator /password:enterthedragon CLASS REMOVETEST00 create p=1
(creating an instance)
ATTN: run the sample vbscript - resettodefault.vbs for creating the class REMOVETEST00

9. diskdrive rmdir "d:\\share\\test"
(executing other command line utilities)
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\wmi\wbem\tools\wmic\xsl-mappings.xml ===
< ! - -   C o p y r i g h t   ( c )   M i c r o s o f t   C o r p o r a t i o n .     A l l   r i g h t s   r e s e r v e d .   - - > 
 
 
 
 < X S L M A P P I N G S > 
 
 < X S L F O R M A T   K E Y W O R D = " T A B L E " > t e x t t a b l e . x s l < / X S L F O R M A T > 
 
 < X S L F O R M A T   K E Y W O R D = " V A L U E " > t e x t v a l u e l i s t . x s l < / X S L F O R M A T > 
 
 < X S L F O R M A T   K E Y W O R D = " L I S T " > t e x t v a l u e l i s t . x s l < / X S L F O R M A T > 
 
 < X S L F O R M A T   K E Y W O R D = " R A W X M L " > r a w x m l . x s l < / X S L F O R M A T > 
 
 < X S L F O R M A T   K E Y W O R D = " H T A B L E " > h t a b l e . x s l < / X S L F O R M A T >   
 
 < X S L F O R M A T   K E Y W O R D = " H F O R M " > h f o r m . x s l < / X S L F O R M A T >   
 
 < X S L F O R M A T   K E Y W O R D = " H X M L " > x m l . x s l < / X S L F O R M A T > 
 
 < X S L F O R M A T   K E Y W O R D = " H M O F " > m o f . x s l < / X S L F O R M A T > 
 
 < X S L F O R M A T   K E Y W O R D = " C S V " > c s v . x s l < / X S L F O R M A T >   
 
 < ! - -   D e p r e c a t e d   m a p p i n g s   - - > 
 
 < X S L F O R M A T   K E Y W O R D = " t e x t t a b l e w s y s . x s l " > t e x t t a b l e . x s l < / X S L F O R M A T > 
 
 < X S L F O R M A T   K E Y W O R D = " t e x t t a b l e w s y s " > t e x t t a b l e . x s l < / X S L F O R M A T > 
 
 < X S L F O R M A T   K E Y W O R D = " w m i c l i t a b l e f o r m a t . x s l " > t e x t t a b l e . x s l < / X S L F O R M A T > 
 
 < X S L F O R M A T   K E Y W O R D = " w m i c l i t a b l e f o r m a t " > t e x t t a b l e . x s l < / X S L F O R M A T > 
 
 < X S L F O R M A T   K E Y W O R D = " w m i c l i t a b l e f o r m a t n o s y s . x s l " > t e x t t a b l e . x s l < / X S L F O R M A T > 
 
 < X S L F O R M A T   K E Y W O R D = " w m i c l i t a b l e f o r m a t n o s y s " > t e x t t a b l e . x s l < / X S L F O R M A T > 
 
 < X S L F O R M A T   K E Y W O R D = " h t a b l e - s o r t b y . x s l " > h t a b l e . x s l < / X S L F O R M A T >   
 
 < X S L F O R M A T   K E Y W O R D = " h t a b l e - s o r t b y " > h t a b l e . x s l < / X S L F O R M A T > 
 
 < X S L F O R M A T   K E Y W O R D = " w m i c l i m o f f o r m a t . x s l " > m o f . x s l < / X S L F O R M A T > 
 
 < X S L F O R M A T   K E Y W O R D = " w m i c l i m o f f o r m a t " > m o f . x s l < / X S L F O R M A T > 
 
 < X S L F O R M A T   K E Y W O R D = " w m i c l i v a l u e f o r m a t . x s l " > t e x t v a l u e l i s t . x s l < / X S L F O R M A T > 
 
 < X S L F O R M A T   K E Y W O R D = " w m i c l i v a l u e f o r m a t " > t e x t v a l u e l i s t . x s l < / X S L F O R M A T > 
 
 < ! - -     E n d   o f   D e p r e c a t e d   m a p p i n g s       - - >   
 
 < / X S L M A P P I N G S > 
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\wmi\wbem\winmgmt\coredll\service.txt ===
SERVICE.TXT

This document contains information on how to use the CNtService class to 
produce a Win32 Service Executable. (6/24/96 a-davj)

This is a simplified version of the CService class which was originally 
done by Ray McCollum.  It is simpler chiefly because it is now the 
responsibility of the class user to manage their threads and the 
class does not rely on any SMS diagnostics.

=========================================================================

1.1  A minimal conversion

To produce a service from a normal EXE with the minimum work, you must
derive a new class from CNtService and override the WorkerThread() and Stop()
virtual functions:

class MyService : public CNtService
{
public:
   virtual void WorkerThread();    // Your component goes here
   virtual void Stop();            // Your component goes here
};

void MyService::WorkerThread()
{
   ...loop doing useful work until signaled by the Stop function.
}

void MyService::Stop()
{
   ...Signal the thread running in WorkerThread to return from that
   ...routine
}

The WorkerThread() function is the entry point for your code.  You can
branch out to normal non-object functions, or whatever.  It is the job of
your Stop() function to signal the thread running in the WorkerFunction 
to return and when that thread returns, the service will terminate properly.  

Execution of the service is begun by using the Service Control Manager
APIs in another program, the Control Panel or else using NET START/NET STOP/
NET PAUSE/NET CONTINUE from a DOS box.  When the user types

     NET START MYSERVICE

...your service will attempt to start.

Note that you must have added your service to the SCM (Service Control 
Manager) data base before you can start it.  There are various ways to add a
service though I found the SC.EXE to be quite useful and it can be found
via MSDN.

Your main() entry point might be rewritten along the following
lines:

void main()
{
    MyService Sample;
    Sample.Run(TRUE, "MYSERVICE");      // TRUE = run as a Service,
                                        // FALSE = run as a normal EXE
}

When Run() is called, you can make the decision as to whether you are
running as a normal EXE or a service via the first argument.  The
second argument is the service name.  This can be any length and is not
related to the .EXE name itself.

After Run() is invoked, then WorkerThread() is called to actually do
the work of the service.  [Run() and WorkerThread() are actually separate
threads at this point, although Run() will not return until the service
stops.]

When the user types NET STOP MYSERVICE, then the Stop() function 
is called and it signals for the WorkerThread() function to 
return which then results in the service being stopped.

=========================================================================

1.2 Supporting Pause, Continue, and  custom control codes.

If you want to support suspending your service by NET PAUSE MYSERVICE and 
resuming it by NET CONTINUE MYSERVICE, then you must override the Pause()
and Continue() virtual functions and call the SetPauseContinue()
function with a TRUE argument.  

It is the job of your Pause() and Continue() functions to do whatever is 
right for your service.  In some cases that might mean actually suspending 
and resuming threads, or it could mean that the threads will just not perform 
certain functions.

User codes can be accepted by overriding the UserCode() function.  
The UserCode() function is only valid if the program controlling
the service has been coded to send user-defined control codes to the
service.  The command-line based NET functions have no facility for this.
Basically, a specially coded control program can send codes other than
STOP, PAUSE, CONTINUE or START. These codes must fall in the subrange
128..255 and the code being sent is in the DWORD argument.
The meaning is user-defined.  Since there is no response mechanism
back to the sending process, this does not seem terribly useful.  These
codes are ignored if UserCode() is not overridden.

Note that the original CService class did handle some specific UserCodes
and this class does NOT.

===========================================================================

1.3  Logging support.

The service wrapper code only logs unexpected errors.  By default, it adds
them to the NT event log when running as a service and to stdio when running
as an executable.  It does this through a virtual function named Log() which
can be used for your code, or can be overridden if there is some other logging
mechanism that is desired.

=========================================================================

1.4  Timing Issues.

Functions such as Pausing, Continuing and Stopping must complete in 
under 20 seconds.  A delinquent Pause or Continue isn't too serious since
that will only cause a error for the NET xyx command.  However, the system
will kill any service that is too slow in stopping.

The Initialize() function is called during NET START, but before your
worker thread begins execution.   Again, this must return within 20
seconds.  In most cases, you will not need this and can do initializations
in WorkerThread itself.  Any command-line arguments passed in to the
service are available from the parameters.   These are only valid if the EXE
is executing as a service;  if you are executing as a normal EXE, then process
the command line arguments from main() instead, since these will be NULL.

In general, the command line arguments don't tend to be terribly useful for
services.

========================================================================

1.5  Non-service EXE execution.

If Run() is called with FALSE, then the service behaves as a normal
multi-threaded EXE.   The behavior is still basically the same as for a
service:  WorkerThread() should be the effective entry point for the work
to get done.  However, there will be no NET STOP, PAUSE , User Codes, or
CONTINUE requests coming in, so your Pause(), Continue(), Initialize(),
UserCode and Stop() functions will never be called.

=========================================================================

1.6  Service Names

Service names can contain any characters if you use the Win32 APIs or
service control classes.  However, the NET commands only support normal
filename type characters.  It is best to use alphanumeric characters with
optional underscores.

=========================================================================

1.7 An additional example and debugging hints.

This sample uses the command line arguments to determine if the program
should run as a service.  It also handles Pause and Continue and it uses
Initialize.  

This sample is also setup to INTENTIONALLY CAUSE A BREAK!  The WorkerThread
routine has some logic where by an INT 3 is caused 2 minutes into the run.
This brings up an exception box which gives you the oportunity to debug the
service even if it was automatically started by the system.  Naturally you 
still need to be running a debug build.

This code is a bit simplistic in that it uses simple variables
to communicate pause and stop and a real production program would probably
protect these variable via Mutex or use Signal(s).


class MyService : public CNtService{
public:
    MyService();
    DWORD WorkerThread();
    void Stop(){bRun = FALSE;return;};
    void Pause(){bContinue = FALSE;return;};
    void Continue(){bContinue = TRUE;return;};
    BOOL bRun, bContinue;
};

int main(int argc, char ** argv)
{
    MyService svc;
    svc.SetPauseContinue(TRUE);
    if(argc > 1 && _stricmp(argv[1],"/EXE") == 0)
    {
        // run as console app.  Note that Initialize will get the /EXE arg

        svc.Initialize(argc, argv);
        svc.Run("doesntMatter!", FALSE); 
    }
    else
        svc.Run("MyService", TRUE); 
    return 0;
}

MyService::MyService()
{
    bRun = bContinue = TRUE;
}

DWORD MyService::WorkerThread()
{
    int nCount = 0;
    while(bRun) 
    {
        if(bContinue)
        {
            MessageBeep(0);
        }
        Sleep(3000);
        if(nCount == 40)
             _asm int 3;
         nCount++;
    }
    return 0;
}


=========================================================================

2.1  LIMITATIONS on the current implementation.

A.  Only one service is supported per .EXE.  This limitation can be removed,
    however any having more than one service per EXE would require the 
    service to run only in the Local Service account which is generally
    not acceptable.
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\wmi\wbem\winmgmt\ess3\decisions.txt ===
1) Updates to provider registrations may interrupt the flow of events from that
    provider, no matter how small the change.
2) Updates to binding parameters can interrupt the flow of events through the
    binding.
*3) Updates to class defintions shall be treated as deletions and creations. 
    Thus, changing a class definition will interrupt the flow of affected
    events. 
*4) In light of (3), we will not take on any atmicity obligations in terms of
    delivering events when registration-affecting changes are taking place. 
    Another justification for it is that since the database supports no 
    transactioning, we can retrieve different definitions for a class during 
    our compilation, placing the ESS into an inconsistent state.  There is no 
    solution to this short of ESS implementing transactioned view of the DB.

5? What are we going to do about class definitions changing while providers
    (say instance providers) are holding them?
6) Reentrancy: while an update is in progress, no participant of that update 
    may initiate another update that affects any of the objects affected by the
    first update.  ESS will detect and reject by recording the thread id in the
    locks.
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\wmi\wbem\winmgmt\ess3\design.txt ===
In addition to the single ESS object, there will be namespace representation 
objects, containing:
----------------------------------------------------------------------------

- namespace pointer
- update lock
- binding table
- poller
- provider cache
- consumer provider cache
- tree for database event filtering

The main ESS object is left with:
- searchable list of namespace representation objects
- the thread pool
- the timer 
- the event log



There are several types of operations that affect event registrations;
----------------------------------------------------------------------

1) Creation and deletion of event filters.
2) Creation and deletion of bindings.
3) Creation and deletion of event provider registrations.
4) Creation, deletion and modification of class definitions.
5) Creation and deletion of consumer provider registrations.


These operations will affect the following updatable objects:
-------------------------------------------------------------

1) Event filters (CEventFilter): creation, deletion, binding list change, 
    activation, deactivation.
2) Event Consumers (CPermanentConsumer): creation, deletion, consumer provider 
    reference.
3) Provider pods: filter tree updates in proxies.


The following objects can only be created or deleted, not modified in an update:
--------------------------------------------------------------------------------

1) Bindings (CBinding)
2) Polling instructions.



Implementation of each one of these operations will proceed as follows:
-----------------------------------------------------------------------
a) the namespace object is locked for update and the thread is marked as 
    updating this namespace
b) The current state of the object in question (__EventFilter, 
    __FilterToConsumerBinding, __Provider, __EventProviderRegistration, 
    __EventConsumerProviderRegistrastion instance, or the class definition) 
    is retrieved. The operation is modified to reflect the current state.
c) All the updatable and deletable objects listed above that may be affected by
    this change are locked for update. Creatable objects are created and locked.
    Notice that this can hang if some of
    these objects are participating in an ongoing update. This will leave the
    entire namespace locked for update until the ongoing one completes --- by 
    design.  Note: the act of locking will AddRef the objects.
d) The namespace object is unlocked.
e) All the objects are instructed to perform the changes
f) Update lock is released.  This has the affect of releasing the objects, so 
    those of them that have been deleted will go away at this time.
g) The thread is "unmarked".

Re-entrancy issues --- two possibilities:
-----------------------------------------
- no reentrancy: any marked thread attempting an update shall fail
- limited reentrancy: any marked thread attempting to lock an object for an
    update shall fail if the object is locked by this thread, or block if the
    object is locked by another thread.

Sequence of update lock acquisitioins:
--------------------------------------

1) Namespace object
2) Filters
3) Consumers
4) 


Category (1): Event Filter creation
-----------------------------------

Affected objects:
    - Provider records whose definition queries intersect with this one.
    Non-exclusive changes:
        - Activate provider, call NewQuery, inform proxies of the change
        Note: the proxy will get exclusive lock while actually updating the 
            tree.  However, this lock will not be held while the proxy is 
            talking to the stub.
    Exclusive changes:
        - update the list of filters.
Created objects:
    - Event Filter
    - Polling instruction 
    - Aggregating instruction

Activating a filter
-------------------

When a filter is activated, the update lock is held on the filter and all the
provider pods whose registration queries intersect with the filter. No exclusive
locks are held. The tasks are: registering with all the provider pods and 
creating the appropriate polling instructions.  Throughout these operations, 
a recording meta-data access point will be used to record the list of class 
names that were accessed. This list will be used to see if re-activation is 
needed when a class definition changes.

Activation and polling selection mechanisms will not be changed in M3, despite
their shortcomings.

Aggregator for this filter is not separately protected.

Exclusive lock on CEventFilter will be held only while the activation state
is changed.

Deactivating a filter
---------------------

Update locks are held on the filter, all the affected provider pods, and the
polling instruction for this filter.

Category (4): Class definition change
-------------------------------------

Note that since separate events are fired by the core for all the children of
the class being changed, it is safe to only update the objects directly affected
by this class.  In particular, a filter is considered affected by a change to 
class A if this class was accessed during construction of the tree for this 
filter. 

Affected objects:
    - non
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\wmi\wbem\winmgmt\ess3\esslock.txt ===
CEssNamespace Locks
===================

There are two namespace locks : level1 and level2.  

Level1 is supposed to be a lightweight lock and guards members like 
the current state of the namespace and members that must be accessed when 
signaling events ( such as the deferred event queue ).  Because of the last 
point, very little should be done while holding this lock.

Level2 is the heavy handed lock and guards all of the changes to the 
provider cache and to the subscription objects ( e.g. binding.h ).  

Level2 must always be aquired before level1 if both are needed.  

Level2 or Level1 can never be held when making calls to the providers.  
This is problematic because level2 is aquired at the top level and the calls 
to the providers occur down deep in the provider cache.  To handle this, all 
calls to providers are scheduled on a Postponed list associatated with the 
threads.  After the level2 is released, then the provider calls can be made
and the postponed operations are executed.  Note that these calls must occur
on the same control path as the one that scheduled them so they cannot be 
asynchronously executed.  

Level2 can never be held when signaling an event.  This is because some 
subscriptions can be synchronous and the action taken on notification could
be to call back into ess ( say to cancel a subscription or something ).  The
other reason is that it is possible to aquire the level2 when holding a 
filter proxy lock and we must avoid the reverse scenario to avoid a deadlock.


ESS Sink Lock
==================

This is a shared lock whose only purpose is to facilitate shutdown of ESS.   
Since all public access to ESS is performed through the esssink, this is 
where the ess shutdown check is.  

Each entry point except shutdown() will ... 

1 ) enter the esssink lock with shared access, 
2 ) check to see if shutdown has been performed, if so then goto (4)
3 ) perform the op
4 ) then release it.

Shutdown will .. 

1 ) aquires the lock for exclusive access
2 ) set shutdown
3 ) release lock

Since the shared lock handles writer starvation, the shutdown op waits for 
all current ops to finish, but does not allow any new ones to procede until
it has executed.    



Filter Proxy Lock
==================

PURPOSE : To synchronize the signaling of an event through the proxy with 
disconnecting the proxy.  When disconneting the proxy from the stub, we want 
to ensure that all calls currently executing through that proxy are complete.
( We could have used CoDisconnectObject on the stub for the same functionality,
 but this would only work when the proxy was in a separate process/apartment 
from the stub which is not always the case ). 

TYPE : This is a CWbemCriticalSection ( but should be a shared lock so that 
the signaling threads requests shared access and the Disconnect() thread was
exclusive access. ) 

RULES :

Must be aquired before Namespace Level2 Lock.  Reason is that the lock MUST 
be held across the signaling of an event, for reasons described above.  Since
we support synchronous delivery, there is nothing stopping a consumer from
turning around and issuing a request that will grab the level2 lock in the 
same namespace.  Because of this, we must always ensure that the proxy lock
is aquired BEFORE acquiring the level2 namespace lock.       



Provider Exec Line 
=========================

PURPOSE : 

This is a different sort of sync mechanism.  Its really a queue more than 
a lock. It allows the user to place requests in a queue and then to execute
them later.  The major difference between this and a normal queue is in the 
way that requests are fetched from the queue and executed.   The exec line 
allows multiple threads to fetch requests from the queue and execute them 
while still preserving the logical ordering of the requests in the queue.  

For example, lets say that there are the following requests placed in the 
queue ... 

A, B, C <-- rear

Lets say that T1 placed A and B in the queue and T2 placed C in the queue.  
Then both threads try to service their requests.  This structure would ensure
that A and B completed before C could execute.  

The reason for such a sync structure is that we do not make calls to a provider
while holding the namespace lock.  So we 'postpone' the requests to the 
provider.  Later, after releasing the namespace lock, we execute the 
'postponed' operations.  This structure ensures that execution of those 
postponed operations occurs in the same logical order as the namespace 
operations.  

e.g. If Namespace Op N1 causes Postponed Operation P1.  And N2 
causes Postponed Operation P2.  Then P1 will be executed before P2 even if
the thread handling N2 tries to execute its postponed operations first.     

This is the following protocol used with this sync mechanism 

1 ) Get In Line - this reserves a place in the line, called a Turn.  A turn
    is associated with a postponed request. The turn is returned from this
    step.

2 ) Wait For Turn - once obtained, the request can be executed.

3 ) End Turn - after the request is executed, the turn is ended thereby 
    allowing the next turn to execute.


Each provider record has an associated exec line.  

RULES : It is illegal to obtain a proxy lock when holding one or more turns 
in any exec line.  The reason is that is possible that when holding the 
proxy lock that we could wait for a turn.  ( Just as it is possible when 
holding a proxy lock to obtain the namespace lock ).   For this reason, if 
we allowed waiting for the proxy lock while holding a turn then we'd have 
a deadlock issue.
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\wmi\wbem\winmgmt\esscomp\stdcons\scrcons\readme.txt ===
Scripting Consumer ReadMe
a-hhance, 06-30-1999


===================
RELEASED COMPONENTS
===================
ScrCons.MOF
ScrCons.EXE


==================
SETUP REQUIREMENTS
==================
Register executable with /REGSERVER
MofComp MOF
dependency: PulsComn.DLL, WinMgmt
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\wmi\wbem\winmgmt\esscomp\stdcons\smtpcons\readme.txt ===
SMTP Consumer ReadMe
a-hhance, 06-30-1999


===================
RELEASED COMPONENTS
===================
SMTPCons.MOF
SMTPCons.DLL


==================
SETUP REQUIREMENTS
==================
Register DLL with RegSvr32
MofComp MOF
dependency: PulsComn.DLL, WinMgmt
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\wmi\wbem\winmgmt\esscomp\stdcons\wbemcons\readme.txt ===
Standard Consumers ReadMe
a-hhance, 06-30-1999


===================
RELEASED COMPONENTS
===================
WbemCons.DLL
WbemCons.MOF


==================
SETUP REQUIREMENTS
==================
Register DLL with RegSvr32
MofComp MOF
dependency: PulsComn.DLL, WinMgmt
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\wmi\wbem\winmgmt\esscomp\timeprov\wqlquery.txt ===
select * from __InstanceModificationEvent 
where TargetInstance isa "Win32_CurrentTime" 
and TargetInstance.Year=1999 
and TargetInstance.Month=10 
and TargetInstance.Day=14
and TargetInstance.Hour=15 
and TargetInstance.Minute=30 
and TargetInstance.Second=0
and TargetInstance.Interval=1
and TargetInstance.UTCOffset=0
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\wmi\wbem\winmgmt\esscomp\timeprov\wqlquerysupport.txt ===
Given the state of the Win32_CurrentEvent class:

  class Win32_CurrentTime
  {
    uint32 Year;
    uint32 Month;
    uint32 Day;
    uint32 DayOfWeek;
    uint32 WeekInMonth;
    uint32 Quarter;
    uint32 Hour;
    uint32 Minute;
    uint32 Second;
    [key] sint32 UTCOffset;
  };

Currently we can form queries for a specific point in time 
in the future.  The basic form of a query is:

  select * from __InstanceModificationEvent 
    where TargetInstance isa "Win32_CurrentTime" 
    and TargetInstance.Year=1999 
    and TargetInstance.Month=10 
    and TargetInstance.Day=4 
    and TargetInstance.Hour=11 
    and TargetInstance.Minute=0 
    and TargetInstance.Second=0

This query specifies a single point in time, irrespective
of the time at which it is to be evaluated, at which an
event should be generated.  If the time specified is in
the past at the time it is evaluated, then no event will
occur.

In order to be a valid, a query must have each of the following 
properties:

1. A query must be specific enough to define the complete set
   of all times for which an event is to be generated.

2. Each time the expression is evaluated, it must be possible 
   to specify unambiguously the closest point after the current 
   time when the next event will occur.  

   f(<WQL expression>, <current time>) -> <next event time>

3. The frequency of events must not be such that it may overwhelm
   the system under a normal load.

The following, I believe, are the four most likely scenarios
for which a user will ask for time events:

1. They want timer events to be generated indefinitely at
   a specified periodic interval.

2. They want a single event to be generated at some specified
   time in the future. (alarm functionality)

3. They want a single event to be generated at some time
   in the future relative to the time at which the query is
   made.  (timer functionality)

4. They want one or more events to be generated based on some
   algebraic criteria.

A single query may embody one or more of the above scenarios.

An example of the first scenario could be the following:

  select * from __InstanceModificationEvent
    where TargetInstance isa "Win32_CurrentTime"
    and TargetInstance.Year=1999
    and TargetInstance.Month=10
    and TargetInstance.Day=4
    and TargetInstance.Hour=11
    and TargetInstance.Second % 30 = 0

This specifies that we want an event every thirty seconds
on the minute and half minute boundaries for the eleventh
hour on the date 10/4/99.  With the current approach we 
cannot completely capture the functionality of the first
scenario.  For example, we could not specify a timer to
generate an event exactly seven seconds apart.  If, however,
we add a field to Win32_CurrentTime that is the equivalent
file time (64 bit number) rounded to seconds that represents
the same time as the system time fields, it then becomes 
possible:

  select * from __InstanceModificationEvent
    where TargetInstance isa "Win32_CurrentTime"
    and TargetInstance.Year=1999
    and TargetInstance.Month=10
    and TargetInstance.Day=4
    and TargetInstance.Hour=11
    and TargetInstance.TimeInSeconds % 30 = 0

This is equivalent to the above statement but uses the total
time in seconds instead of just seconds.  By changing '30' to
'7' we get an event every seven seconds.  Note that by omitting 
a field we are signifying that it is a wildcard.

For this type of query we will introduce a reserved symbol that
evaluates to the current time when the expression is evaluated.
There is a reserved symbol for each field in Win32_CurrentTime.
Thus, to say "generate an event 45 seconds from now" we could
write:

  select * from __InstanceModificationEvent
    where TargetInstance isa "Win32_CurrentTime"
    and TargetInstance.TimeInSeconds = %CurrentTimeInSeconds% + 45

Fundamentally, WQL statements are patterns, not program 
expressions that can save state as part of their evaluation. It 
is valid to have algebraic expressions within WQL as long as they 
ultimately evaluate to a constant and there is no concept of 
assignment.  The symbol %CurrentTimeInSeconds% is actually a 
macro that is replaced by the parser with the current time in 
seconds when it is encountered.  Thus, the above statement will
only generate one event and not an event every 45 seconds.

Each of the examples above are by definition examples of time
specification based on algebraic criteria.  Here is an example
that does not fall into any of the first three categories:

  select * from __InstanceModificationEvent
    where TargetInstance isa "Win32_CurrentTime"
    and TargetInstance.Year=1999
    and TargetInstance.Month=10
    and TargetInstance.Day=10
    and TargetInstance.Hour <= 12
    and TargetInstance.Minute = TargetInstance.Day

This says to generate an event once an hour for the first half
of the day when the minute in the current hour is equal to the
day of the month.  This is only to occur on the date 10/10/99.

The following is an excerpt from the WQL1 grammar that has
been modified to allow support for queries containing simple
algebraic expressions:

<parse> ::= SELECT * FROM <class_name> WHERE <expr>;

<property_name> ::= IDENTIFIER <property_name_2>;
<property_name_2> ::= <>;
<property_name_2> ::= DOT IDENTIFIER <property_name_2>;

<class_name> ::= IDENTIFIER;

<expr> ::= <term> <expr2>;
<expr2> ::= OR <term> <expr2>;
<expr2> ::= <>;

<term> ::= <simple_expr> <term2>;
<term2> ::= AND <simple_expr> <term2>;
<term2> ::= <>;

<operand> ::= <property_name>
<operand> ::= <typed_constant>

<simple_expr> ::= <algebraic_expr> <rel_operator> <algebraic_expr>;

<algebraic_expr> ::= <operand>
<algebraic_expr> ::= <algebraic_expr> <arithmetic_operator> <algebraic_expr>
<algebraic_expr> ::= OPEN_PAREN <algebraic_expr> CLOSE_PAREN;

<typed_constant> ::= VARIANT; // VT_R8, VT_I4, VT_BSTR
<typed_constant> ::= TRUE; 
<typed_constant> ::= FALSE; 
<typed_constant> ::= <macro_constant>; 

<macro_constant> ::= PERCENT IDENTIFIER PERCENT ;

<rel_operator> ::= <equiv_operator>;
<rel_operator> ::= <comp_operator>;

<equiv_operator> ::= EQUIVALENT_OPERATOR; // =, !=, <>
<comp_operator> ::=  COMPARE_OPERATOR;  // <=, >=, <, >, like, isa
<arithmetic_operator> ::= ARITHMETIC_OPERATOR; // +, -, *, /, %


**** INSERT SECTION ON HOW TO DECOMPOSE A WQL STATEMENT TO A
     SERIES OF TIME PATTERNS TO MATCH AGAINST (DNF)

Solution to the Problem of Finding a Closest Date in the Future 
to Current Time:

First, let's impose a few key constraints that do not detract from 
the fundamental problem but allow us to more clearly illustrate the
solution.  

1. Limit the problem to finding the next date within the current year.
   This is reasonable because if a suitable date cannot be found 
   within the remainder of the current year, find the first matching
   date from midnight January 1st of next year.

2. Limit ourselves to those fields of date that do not have overlaping
   meaning and exactly contain each other.  For our Win32_CurrentTime
   structure those fields are: Year, Month, Day, Hour, Minute, Second.
   Week and any representation dependent on week violates this 
   criteria because years and months do not, in general, start and
   stop on week boundaries.  This means that weeks are not countable
   w.r.t. any larger unit of time.  

Given these constraints, it becomes possible to perform addition with
carry on a given date with intervals expressed in any of the above 
units quickly.

Now, our problem is one of finding the first date beyond the current
time that matches a specific pattern provided by a WQL query.  Because 
of the 2nd constraint, we can find a matching time incrementally by 
working our way from seconds to years finding the next matching pattern 
for each.  When complete, we will have found the next closest date to
the current time matching the pattern.

From the parsing phase we derived a set of date "patterns" which can
be used to find matching future dates.  Each such pattern is 
represented by an object that contains matching criteria for each
date field.  For each of second, minute, hour, day and month we 
represent the set of valid times as members of a set.  

The pattern object looks like:

DatePattern
{
  VALIDMATCH Year;          // integer
  VALIDMATCH Month;         // [1..12]
  VALIDMATCH Day;           // [1..31] *varies with month
  VALIDMATCH DayOfWeek;     // [1..7]
  VALIDMATCH WeekInMonth;   // [1..5]
  VALIDMATCH Quarter;       // [1..4]
  VALIDMATCH Hour;          // [1..24]
  VALIDMATCH Minute;        // [1..60]
  VALIDMATCH Second;        // [1..60]
}

The comment following each field indicates the valid
range of values.

The matching criteria VALIDMATCH looks like:

VALIDMATCH
{
  unsigned UpperBound;
  unsigned LowerBound;
  unsigned Modulus;
  unsigned CountNotMatching;
  unsigned *NotMatching;
}

Because, for each field above except year, the set of valid values 
is finite, we can collectively represent all of the limiting 
criteria within a VALIDMATCH object as a set containing matching 
members.  The set described is a finite set on which there is a 
total ordering of its members.  This can be represented by a bit
field with each bit identifying one potential member.  If a member
is present in a given set its bit is set to one otherwise it is 
zero.  

With this arrangement, given any value within the range of the
set we can find immediately whether or not that value is, in fact,
a member of the set or, if not, what is the next set value. The
following function outlines this task:

typedef Set __int64; // Set is a bitfield with 1 represented by
                     // leftmost bit

BOOL FindNextElement(int &iCurrentValue, Set ValidValues) 
{
  BOOL Carry = FALSE;
  Set CurrentValue = 0x80000000000000000 >> iCurrentValue;

  while(! (CurrentValue & ValidValues))
  {
    iCurrentValue >> 1;
    CurrentValue++;

    if(CurrentValue == 0x0)
    {
      CurrentValue = 0x8000000000000000;
      iCurrentValue = 1;
      Carry = TRUE;
    }
  }

  return Carry;
}

Note: this function assumes ValidValues is not empty.  

FindNextElement() takes a value as a member of a Set object
and finds the next greater member of the set ValidValues or 
the first member encountered in case of roleover.  Roleover is
indicated by the carry flag.  The first member encountered is
returned in CurrentValue.

Now, applying this to a complete date pattern consisting of year,
month, day, hour, minute and second would involve applying this
function using the method described above with the following special
cases.  First, if it was found that there was a carry on a month,
then we would need to go back and ensure that the new day is less 
than or equal to the last day of the new month.  If not, then keep 
adding months until a month is found where this is true.  Second, 
if there is a carry on months, then we have crossed a year boundary.
In this case we need to obtain the information for a new calendar 
year.

To address the additional fields WeekInMonth, DayOfWeek and Quarter,
we will use a technique based on the notion that these are just 
alternative ways to specify the pattern for the day field.  For each
for each of these fields create a bitfield representing the days of
the current month.  In each such field set those bits to one that
represent those days in the month that match for each of WeekInMonth,
DayOfWeek and Quarter.  And each of these together and to that of
days.  The resultant bitfield is the total number of days for the
current month that match all criteria.  This implies that the 
problem reduces to that of addition with carry as described above.

  Day = Day & WeekInMonth & DayOfWeek & Quarter

There is the additional problem of how to handle addition operations
that cross month boundaries.  This will occur when imcrementing the
day field results in a carry over to the next month.  When this 
happens we need to generate the composite Day field for the next 
valid month.  

To generate the bitfields for each of Day, WeekInMonth, DayOfWeek 
and Quarter w.r.t. some month we need to know how many days there 
are in the month, what month it is in the year and what day of the 
week is the first day of the month.  The month information can be 
generated using the system functions SystemTimeToFileTime() and 
FileTimeToSystemTime().  Given a month and year we can build these
four bitfields as follows:

1. Populate a SYSTEMTIME structure with date of the start of the
   month of interest at midnight of the first day of that month.
   <month>/1/<year> 0:0:0

2. Convert the SYSTEMTIME to a FILETIME and back to a SYSTEMTIME.
   Now SYSTEMTIME::wDayOfWeek will contain the day of the week
   for the first day of the month. Note: we will save this 
   FILETIME for later use below.

3. Determine the FILETIME for the beginning of the month following
   the one we are interested as in step 1 and 2 above.

4. Subtract the second FILETIME from the first and convert the 
   result to days.  This is the number of days in the month.

5. Using the sets from each field of the DatePattern structure 
   we can now construct the bitfields for the current month 
   corresponding to each of the four fields above.

6. Combine the bitfields with the Day bitfield using logical and
   to obtain the desired composite bitfield.

This functionality can be encapsulated into a single function that
takes a desired month and year plus a DatePattern structure and
returns the desired composite bitfield:

  Set GetDaysInMonth(DatePattern *, int year, int month)

First, lets modify the DatePattern structure defined above to 
fields for each member that represents it in terms of sets as
follows:

DatePattern
{
  VALIDMATCH Year;          // integer
  VALIDMATCH Month;         // [1..12]
  Set        MonthSet;
  VALIDMATCH Day;           // [1..31] *varies with month
  Set        DaySet;
  VALIDMATCH DayOfWeek;     // [1..7]
  Set        DayOfWeekSet;
  VALIDMATCH WeekInMonth;   // [1..5]
  Set        WeekInMonthSet;
  VALIDMATCH Quarter;       // [1..4]
  VALIDMATCH Hour;          // [1..24]
  Set        HourSet;
  VALIDMATCH Minute;        // [1..60]
  Set        MinuteSet;
  VALIDMATCH Second;        // [1..60]
  Set        SecondSet;
}

By providing a separate pattern for each of DayOfWeek and WeekInMonth,
we can optimize calculations of the composite field Day.

The current date is a collection of integers from SYSTEMTIME including
wYear, wMonth, wDay, wHour, wMinute and wSecond.  Here, then, is the
algorithm for finding the closest next firing time to the current time:

Let Pattern = DatePattern object 
Let Date = SYSTEMTIME object
Let Carry = BOOL object

GetSystemTime(&Date);

Carry = FindNextElement(&Date.wSecond, Pattern.SecondSet);
if(Carry) Date.wMinute++;

Carry = FindNextElement(&Date.wMinute, Pattern.MinuteSet);
if(Carry) Date.wHour++;

Carry = FindNextElement(&Date.wHour, Pattern.HourSet);
if(Carry) Date.wDay++;

do
{
  Carry = FindNextElement(&Date.wDay, Pattern.DaySet);
  if(Carry) 
  {
    do
    {
      Date.wMonth++;
      Carry2 = FindNextElement(&Date.wMonth, Pattern.MonthSet);
      if(Carry2) 
      {
        Date.wYear += 1;

        <find next matching Date.wYear against Pattern.Year using
         numerical methods>
      }
      Pattern.MonthSet = GetDaysInMonth(&Pattern, Date.wYear, Date.wMonth);
    } 
    while(0x0 == Pattern.MonthSet);
  }
}
while(Carry);
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\wmi\wbem\winmgmt\mofcompiler\cyrillic.txt ===
0 x 4 0 0   =    
 
 0 x 4 0 1   =   
 
 0 x 4 0 2   =   
 
 0 x 4 0 3   =   
 
 0 x 4 0 4   =   
 
 0 x 4 0 5   =   
 
 0 x 4 0 6   =   
 
 0 x 4 0 7   =   
 
 0 x 4 0 8   =   
 
 0 x 4 0 9   =   	
 
 0 x 4 0 A   =   

 
 0 x 4 0 B   =   
 
 0 x 4 0 C   =   
 
 0 x 4 0 D   =   

 
 0 x 4 0 E   =   
 
 0 x 4 0 F   =   
 
 0 x 4 1 0   =   
 
 0 x 4 1 1   =   
 
 0 x 4 1 2   =   
 
 0 x 4 1 3   =   
 
 0 x 4 1 4   =   
 
 0 x 4 1 5   =   
 
 0 x 4 1 6   =   
 
 0 x 4 1 7   =   
 
 0 x 4 1 8   =   
 
 0 x 4 1 9   =   
 
 0 x 4 1 A   =   
 
 0 x 4 1 B   =   
 
 0 x 4 1 C   =   
 
 0 x 4 1 D   =   
 
 0 x 4 1 E   =   
 
 0 x 4 1 F   =   
 
 0 x 4 2 0   =    
 
 0 x 4 2 1   =   !
 
 0 x 4 2 2   =   "
 
 0 x 4 2 3   =   #
 
 0 x 4 2 4   =   $
 
 0 x 4 2 5   =   %
 
 0 x 4 2 6   =   &
 
 0 x 4 2 7   =   '
 
 0 x 4 2 8   =   (
 
 0 x 4 2 9   =   )
 
 0 x 4 2 A   =   *
 
 0 x 4 2 B   =   +
 
 0 x 4 2 C   =   ,
 
 0 x 4 2 D   =   -
 
 0 x 4 2 E   =   .
 
 0 x 4 2 F   =   /
 
 0 x 4 3 0   =   0
 
 0 x 4 3 1   =   1
 
 0 x 4 3 2   =   2
 
 0 x 4 3 3   =   3
 
 0 x 4 3 4   =   4
 
 0 x 4 3 5   =   5
 
 0 x 4 3 6   =   6
 
 0 x 4 3 7   =   7
 
 0 x 4 3 8   =   8
 
 0 x 4 3 9   =   9
 
 0 x 4 3 A   =   :
 
 0 x 4 3 B   =   ;
 
 0 x 4 3 C   =   <
 
 0 x 4 3 D   =   =
 
 0 x 4 3 E   =   >
 
 0 x 4 3 F   =   ?
 
 0 x 4 4 0   =   @
 
 0 x 4 4 1   =   A
 
 0 x 4 4 2   =   B
 
 0 x 4 4 3   =   C
 
 0 x 4 4 4   =   D
 
 0 x 4 4 5   =   E
 
 0 x 4 4 6   =   F
 
 0 x 4 4 7   =   G
 
 0 x 4 4 8   =   H
 
 0 x 4 4 9   =   I
 
 0 x 4 4 A   =   J
 
 0 x 4 4 B   =   K
 
 0 x 4 4 C   =   L
 
 0 x 4 4 D   =   M
 
 0 x 4 4 E   =   N
 
 0 x 4 4 F   =   O
 
 0 x 4 5 0   =   P
 
 0 x 4 5 1   =   Q
 
 0 x 4 5 2   =   R
 
 0 x 4 5 3   =   S
 
 0 x 4 5 4   =   T
 
 0 x 4 5 5   =   U
 
 0 x 4 5 6   =   V
 
 0 x 4 5 7   =   W
 
 0 x 4 5 8   =   X
 
 0 x 4 5 9   =   Y
 
 0 x 4 5 A   =   Z
 
 0 x 4 5 B   =   [
 
 0 x 4 5 C   =   \
 
 0 x 4 5 D   =   ]
 
 0 x 4 5 E   =   ^
 
 0 x 4 5 F   =   _
 
 
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\wmi\wbem\winmgmt\provsubsys\decoupledadaptor\win9x\placefil.txt ===
wmidcad.dll	retail
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\wmi\wbem\winmgmt\xfiles\sample_layout_translated.txt ===
#pragma namespace("\\\\.\\root\\default")
instance of __namespace
{
	Name = "test";
};
NS_<root\default>\KI_<__namespace>\I_<test>.<pageId>.<offsetId>.<size>
NS_<root\default>\CI_<__namespace>\IL_<test>.<pageId>.<offsetId>.<size>

<system instance 1>
NS_<root\default\test>\KI_8F185102F04271CEEA85BB200477E759\I_18BA379108CD7CCC2FA0FD754AD45A25.<pageId>.<offsetId>.<size>
NS_<root\default\test>\CI_8F185102F04271CEEA85BB200477E759\IL_18BA379108CD7CCC2FA0FD754AD45A25.<pageId>.<offsetId>.<size>

<system instance 2>
NS_<root\default\test>\KI_644C0907A53790A09D448C09530D58E6\I_18BA379108CD7CCC2FA0FD754AD45A25.<pageId>.<offsetId>.<size>
NS_<root\default\test>\CI_644C0907A53790A09D448C09530D58E6\IL_18BA379108CD7CCC2FA0FD754AD45A25.<pageId>.<offsetId>.<size>

<system instance 2>
NS_<root\default\test>\KI_644C0907A53790A09D448C09530D58E6\I_18BA379108CD7CCC2FA0FD754AD45A25.<pageId>.<offsetId>.<size>
NS_<root\default\test>\CI_644C0907A53790A09D448C09530D58E6\IL_18BA379108CD7CCC2FA0FD754AD45A25.<pageId>.<offsetId>.<size>

#pragma namespace("\\\\.\\root\\default\\test")

class H
{
	[key] string key;
};
NS_<root\default\test>\CD_<H>.<pageId>.<offsetId>.<size>
NS_<root\default\test>\CR_<>\C_<H>

instance of H
{
	key = "H1";
};
NS_<root\default\test>\KI_<H>\I_<H1>.<pageId>.<offsetId>.<size>
NS_<root\default\test>\CI_<H>\IL_<H1>.<pageId>.<offsetId>.<size>


#pragma namespace("\\\\.\\root\\default")

class A
{
	[key] string key;
};
NS_<root\default>\CD_<A>.<pageId>.<offsetId>.<size>
NS_<root\default>\CR_<>\C_<A>

instance of A
{
	key = "A1";
};
NS_<root\default>\KI_<A>\I_<A1>.<pageId>.<offsetId>.<size>
NS_<root\default>\CI_<A>\IL_<A1>.<pageId>.<offsetId>.<size>

class B : A
{
};
NS_<root\default>\CD_<B>.<pageId>.<offsetId>.<size>
NS_<root\default>\CR_<A>\C_<B>

instance of B
{
	key = "B1";
};
NS_<root\default>\KI_<A>\I_<B1>.<pageId>.<offsetId>.<size>
NS_<root\default>\CI_<B>\IL_<B1>.<pageId>.<offsetId>.<size>

Class C
{
	[key] string key;
	A ref r1;
};
NS_<root\default>\CD_<C>.<pageId>.<offsetId>.<size>
NS_<root\default>\CR_<>\C_<C>
NS_<root\default>\CR_<A>\R_<C>

instance of C
{
	key = "C1";
	r1 = "A=\"A1\"";
};
NS_<root\default>\KI_<C>\I_<C1>.<pageId>.<offsetId>.<size>
NS_<root\default>\CI_<C>\IL_<C1>.<pageId>.<offsetId>.<size>
NS_<root\default>\KI_<A>\IR_<A1>\R_39B282E35FF287092C870011DE9C8461.<pageId>.<offsetId>.<size>

instance of C
{
	key = "C2";
	r1 = "B=\"B1\"";
};
NS_<root\default>\KI_<C>\I_<C2>.<pageId>.<offsetId>.<size>
NS_<root\default>\CI_<C>\IL_<C2>.<pageId>.<offsetId>.<size>
NS_<root\default>\KI_<A>\IR_<B1>\R_B69A145B7DFFF1AA60157C04E6E90CB1.<pageId>.<offsetId>.<size>

instance of C
{
	key="C3";
	r1 = "A.key=\"A1\"";
};
NS_<root\default>\KI_<C>\I_<C3>.<pageId>.<offsetId>.<size>
NS_<root\default>\CI_<C>\IL_<C3>.<pageId>.<offsetId>.<size>
NS_<root\default>\KI_<A>\IR_<A1>\R_D18AD4BFEF49C24C7ED0E800058106B3.<pageId>.<offsetId>.<size>

instance of C
{
	key="C4";
	r1 = "\\\\.\\root\\default:A.key=\"A1\"";
};
NS_<root\default>\KI_<C>\I_<C4>.<pageId>.<offsetId>.<size>
NS_<root\default>\CI_<C>\IL_<C4>.<pageId>.<offsetId>.<size>
NS_<root\default>\KI_<A>\IR_<A1>\R_E1C3A756456E2546B3320051FBB0DD0B.<pageId>.<offsetId>.<size>


instance of C
{
	key = "C5";
	r1 = "A=\"A10\"";		//------- doesn't exist!
};
NS_<root\default>\KI_<C>\I_<C5>.<pageId>.<offsetId>.<size>
NS_<root\default>\CI_<C>\IL_<C5>.<pageId>.<offsetId>.<size>
NS_<root\default>\KI_<A>\IR_<A10>\R_4303696DBEE4088247D46E8F90161F51.<pageId>.<offsetId>.<size>

instance of C
{
	key = "C6";
	r1 = "A";
};
NS_<root\default>\KI_<C>\I_<C6>.<pageId>.<offsetId>.<size>
NS_<root\default>\CI_<C>\IL_<C6>.<pageId>.<offsetId>.<size>
NS_<root\default>\KI_<>\IR_<A>\R_D27ADF4089A45457EF6354CF8D020F98.<pageId>.<offsetId>.<size>

class D
{
	[key] string key;
	X ref r1;				///--------------- doesn't exist
};
NS_<root\default>\CD_<D>.<pageId>.<offsetId>.<size>
NS_<root\default>\CR_<>\C_<D>
NS_<root\default>\CR_<X>\R_<D>

instance of D
{
	key="D1";
	r1="X.key=\"X1\"";	///  --------------- doesn't create thisi link!
};
NS_<root\default>\KI_<D>\I_<D1>.<pageId>.<offsetId>.<size>
NS_<root\default>\CI_<D>\IL_<D1>.<pageId>.<offsetId>.<size>

instance of D
{
	key = "D2";
	r1 = "A.key=\"A1\"";
};
NS_<root\default>\KI_<D>\I_<D2>.<pageId>.<offsetId>.<size>
NS_<root\default>\CI_<D>\IL_<D2>.<pageId>.<offsetId>.<size>
NS_<root\default>\KI_<A>\IR_<A1>\R_A7D1E456F287702D563157888D38F6CE.<pageId>.<offsetId>.<size>


class E
{
	[key] string key1;
	[key] string key2;
};
NS_<root\default>\CD_<E>.<pageId>.<offsetId>.<size>
NS_<root\default>\CR_<>\C_<E>

instance of E
{
	key1="D1.1";
	key2="D1.2";
};
NS_<root\default>\KI_<E>\I_<D1.1?D2.2>.<pageId>.<offsetId>.<size>
NS_<root\default>\CI_<E>\IL_<D1.1?D2.2>.<pageId>.<offsetId>.<size>

class F
{
	[key] string key;
	E ref r1;
};
NS_<root\default>\CD_<F>.<pageId>.<offsetId>.<size>
NS_<root\default>\CR_<>\C_<F>
NS_<root\default>\CR_<E>\R_<F>

instance of F
{
	key = "F1";
	r1 = "E.key1=\"D1.1\",key2=\"D1.2\"";
};
NS_<root\default>\KI_<F>\I_<F1>.<pageId>.<offsetId>.<size>
NS_<root\default>\CI_<F>\IL_<F1>.<pageId>.<offsetId>.<size>
NS_<root\default>\KI_<E>\IR_<D1.1?D2.2>\R_913A87A0CA6D9BA8A6888DC31E1F3D33.<pageId>.<offsetId>.<size>

class G
{
	[key] string key;
	object ref r1;
};
NS_<root\default>\CD_<G>.<pageId>.<offsetId>.<size>
NS_<root\default>\CR_<>\C_<G>

instance of G
{
	key = "G1";
	r1 = "A.key=\"A1\"";
};
NS_<root\default>\KI_<G>\I_<G1>.<pageId>.<offsetId>.<size>
NS_<root\default>\CI_<G>\IL_<G1>.<pageId>.<offsetId>.<size>
NS_<root\default>\KI_<A>\IR_<A1>\R_B53AFC9FAF2CAE6C978CB15CB1477CFF.<pageId>.<offsetId>.<size>

instance of G
{
	key = "G2";
	r1 = "X.key=\"X1\"";
};
NS_<root\default>\KI_<G>\I_<G2>.<pageId>.<offsetId>.<size>
NS_<root\default>\CI_<G>\IL_<G2>.<pageId>.<offsetId>.<size>

instance of G
{
	key = "G3";
	r1 = "\\\\.\\root\\default:A=\"A1\"";
};
NS_<root\default>\KI_<G>\I_<G3>.<pageId>.<offsetId>.<size>
NS_<root\default>\CI_<G>\IL_<G3>.<pageId>.<offsetId>.<size>
NS_<root\default>\KI_<A>\IR_<A1>\R_D0677A7E85C07C6B6B6D869725F61510.<pageId>.<offsetId>.<size>

instance of G
{
	key = "G4";
	r1 = "\\\\.\\root\\default\\test:H.key=\"H1\"";
};
NS_<root\default>\KI_<G>\I_<G4>.<pageId>.<offsetId>.<size>
NS_<root\default>\CI_<G>\IL_<G4>.<pageId>.<offsetId>.<size>
NS_<root\default\test>\KI_<H>\IR_<H1>\R_9D81C9ECCD2A230D9D0E7D7D4F6AA60B.<pageId>.<offsetId>.<size>
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\wmi\wbem\winmgmt\xfiles\sample_layout.txt ===
#pragma namespace("\\\\.\\root\\default")
instance of __namespace
{
	Name = "test";
};
NS_2F830D7E9DBEAE88EED79A5D5FBD63C0\KI_E5844D1645B0B6E6F2AF610EB14BFC34\I_70659F64A0D9277BB3D15F5215BA50AB.540.269847786.122
NS_2F830D7E9DBEAE88EED79A5D5FBD63C0\CI_E5844D1645B0B6E6F2AF610EB14BFC34\IL_70659F64A0D9277BB3D15F5215BA50AB.540.269847786.122

<system instance 1>
NS_2635D9AAE48BF59B35266C6935C077B7\KI_8F185102F04271CEEA85BB200477E759\I_18BA379108CD7CCC2FA0FD754AD45A25.541.269846579.116
NS_2635D9AAE48BF59B35266C6935C077B7\CI_8F185102F04271CEEA85BB200477E759\IL_18BA379108CD7CCC2FA0FD754AD45A25.541.269846579.116

<system instance 2>
NS_2635D9AAE48BF59B35266C6935C077B7\KI_644C0907A53790A09D448C09530D58E6\I_18BA379108CD7CCC2FA0FD754AD45A25.546.269858035.120
NS_2635D9AAE48BF59B35266C6935C077B7\CI_644C0907A53790A09D448C09530D58E6\IL_18BA379108CD7CCC2FA0FD754AD45A25.546.269858035.120

<system instance 2>
NS_2635D9AAE48BF59B35266C6935C077B7\KI_644C0907A53790A09D448C09530D58E6\I_18BA379108CD7CCC2FA0FD754AD45A25.640.269839399.304
NS_2635D9AAE48BF59B35266C6935C077B7\CI_644C0907A53790A09D448C09530D58E6\IL_18BA379108CD7CCC2FA0FD754AD45A25.640.269839399.304


#pragma namespace("\\\\.\\root\\default\\test")
class H
{
	[key] string key;
};
NS_2635D9AAE48BF59B35266C6935C077B7\CD_1A8E9B7EA00C8125B37DC3F231564C72.546.269845645.119
NS_2635D9AAE48BF59B35266C6935C077B7\CR_D41D8CD98F00B204E9800998ECF8427E\C_1A8E9B7EA00C8125B37DC3F231564C72

instance of H
{
	key = "H1";
};
NS_2635D9AAE48BF59B35266C6935C077B7\KI_1A8E9B7EA00C8125B37DC3F231564C72\I_4AE0000E237E6504B3DA0E62AAABF38B.552.269848333.110
NS_2635D9AAE48BF59B35266C6935C077B7\CI_1A8E9B7EA00C8125B37DC3F231564C72\IL_4AE0000E237E6504B3DA0E62AAABF38B.552.269848333.110


#pragma namespace("\\\\.\\root\\default")

class A
{
	[key] string key;
};
NS_2F830D7E9DBEAE88EED79A5D5FBD63C0\CD_8214D1003F68A7D9B0356C0CBD7EEE1A.553.269869206.119
NS_2F830D7E9DBEAE88EED79A5D5FBD63C0\CR_D41D8CD98F00B204E9800998ECF8427E\C_8214D1003F68A7D9B0356C0CBD7EEE1A

instance of A
{
	key = "A1";
};
NS_2F830D7E9DBEAE88EED79A5D5FBD63C0\KI_8214D1003F68A7D9B0356C0CBD7EEE1A\I_879F2E102B41430955A16D4CD81E26FF.554.269844633.110
NS_2F830D7E9DBEAE88EED79A5D5FBD63C0\CI_8214D1003F68A7D9B0356C0CBD7EEE1A\IL_879F2E102B41430955A16D4CD81E26FF.554.269844633.110

class B : A
{
};
NS_2F830D7E9DBEAE88EED79A5D5FBD63C0\CD_D6EA02A9E31A0F603B031C96EB4D49F3.35.269845385.70
NS_2F830D7E9DBEAE88EED79A5D5FBD63C0\CR_8214D1003F68A7D9B0356C0CBD7EEE1A\C_D6EA02A9E31A0F603B031C96EB4D49F3

instance of B
{
	key = "B1";
};
NS_2F830D7E9DBEAE88EED79A5D5FBD63C0\KI_8214D1003F68A7D9B0356C0CBD7EEE1A\I_37D60F8A72C34723429CC71399C21866.558.269870953.110
NS_2F830D7E9DBEAE88EED79A5D5FBD63C0\CI_D6EA02A9E31A0F603B031C96EB4D49F3\IL_37D60F8A72C34723429CC71399C21866.558.269870953.110

Class C
{
	[key] string key;
	A ref r1;
};
NS_2F830D7E9DBEAE88EED79A5D5FBD63C0\CD_DD1C7CEB4C92653A696B7907A4DD4DF1.612.269862494.173
NS_2F830D7E9DBEAE88EED79A5D5FBD63C0\CR_D41D8CD98F00B204E9800998ECF8427E\C_DD1C7CEB4C92653A696B7907A4DD4DF1
NS_2F830D7E9DBEAE88EED79A5D5FBD63C0\CR_8214D1003F68A7D9B0356C0CBD7EEE1A\R_DD1C7CEB4C92653A696B7907A4DD4DF1

instance of C
{
	key = "C1";
	r1 = "A=\"A1\"";
};
NS_2F830D7E9DBEAE88EED79A5D5FBD63C0\KI_DD1C7CEB4C92653A696B7907A4DD4DF1\I_C295F81405852B98E5B8D10CDD3EE5F5.563.269863369.122
NS_2F830D7E9DBEAE88EED79A5D5FBD63C0\CI_DD1C7CEB4C92653A696B7907A4DD4DF1\IL_C295F81405852B98E5B8D10CDD3EE5F5.563.269863369.122
NS_2F830D7E9DBEAE88EED79A5D5FBD63C0\KI_8214D1003F68A7D9B0356C0CBD7EEE1A\IR_879F2E102B41430955A16D4CD81E26FF\R_39B282E35FF287092C870011DE9C8461.640.269862543.268

instance of C
{
	key = "C2";
	r1 = "B=\"B1\"";
};
NS_2F830D7E9DBEAE88EED79A5D5FBD63C0\KI_DD1C7CEB4C92653A696B7907A4DD4DF1\I_5D06F740E002706C83893D6D4A0E0179.577.269863981.122
NS_2F830D7E9DBEAE88EED79A5D5FBD63C0\CI_DD1C7CEB4C92653A696B7907A4DD4DF1\IL_5D06F740E002706C83893D6D4A0E0179.577.269863981.122
NS_2F830D7E9DBEAE88EED79A5D5FBD63C0\KI_8214D1003F68A7D9B0356C0CBD7EEE1A\IR_37D60F8A72C34723429CC71399C21866\R_B69A145B7DFFF1AA60157C04E6E90CB1.640.269852157.268

instance of C
{
	key="C3";
	r1 = "A.key=\"A1\"";
};
NS_2F830D7E9DBEAE88EED79A5D5FBD63C0\KI_DD1C7CEB4C92653A696B7907A4DD4DF1\I_D3D327F1BCF8AE3745916F3B7FE123ED.579.269840090.126
NS_2F830D7E9DBEAE88EED79A5D5FBD63C0\CI_DD1C7CEB4C92653A696B7907A4DD4DF1\IL_D3D327F1BCF8AE3745916F3B7FE123ED.579.269840090.126
NS_2F830D7E9DBEAE88EED79A5D5FBD63C0\KI_8214D1003F68A7D9B0356C0CBD7EEE1A\IR_879F2E102B41430955A16D4CD81E26FF\R_D18AD4BFEF49C24C7ED0E800058106B3.640.269860214.268

instance of C
{
	key="C4";
	r1 = "\\\\.\\root\\default:A.key=\"A1\"";
};
NS_2F830D7E9DBEAE88EED79A5D5FBD63C0\KI_DD1C7CEB4C92653A696B7907A4DD4DF1\I_2DE376CFCCDB83D92CD6E4368BF87553.585.269867066.143
NS_2F830D7E9DBEAE88EED79A5D5FBD63C0\CI_DD1C7CEB4C92653A696B7907A4DD4DF1\IL_2DE376CFCCDB83D92CD6E4368BF87553.585.269867066.143
NS_2F830D7E9DBEAE88EED79A5D5FBD63C0\KI_8214D1003F68A7D9B0356C0CBD7EEE1A\IR_879F2E102B41430955A16D4CD81E26FF\R_E1C3A756456E2546B3320051FBB0DD0B.640.269865414.268


instance of C
{
	key = "C5";
	r1 = "A=\"A10\"";
};
NS_2F830D7E9DBEAE88EED79A5D5FBD63C0\KI_DD1C7CEB4C92653A696B7907A4DD4DF1\I_BF93E7E0AFA62FBCA31F5F0D4965ECE2.584.269865723.123
NS_2F830D7E9DBEAE88EED79A5D5FBD63C0\CI_DD1C7CEB4C92653A696B7907A4DD4DF1\IL_BF93E7E0AFA62FBCA31F5F0D4965ECE2.584.269865723.123
NS_2F830D7E9DBEAE88EED79A5D5FBD63C0\KI_8214D1003F68A7D9B0356C0CBD7EEE1A\IR_169E8D612B1F1A639B0042D6048BE19D\R_4303696DBEE4088247D46E8F90161F51.640.269863207.268

instance of C
{
	key = "C6";
	r1 = "A";
};
NS_2F830D7E9DBEAE88EED79A5D5FBD63C0\KI_DD1C7CEB4C92653A696B7907A4DD4DF1\I_DFFB2703FA8CE45E493FE6777ED23336.589.269846701.117
NS_2F830D7E9DBEAE88EED79A5D5FBD63C0\CI_DD1C7CEB4C92653A696B7907A4DD4DF1\IL_DFFB2703FA8CE45E493FE6777ED23336.589.269846701.117
NS_2F830D7E9DBEAE88EED79A5D5FBD63C0\KI_D41D8CD98F00B204E9800998ECF8427E\IR_8214D1003F68A7D9B0356C0CBD7EEE1A\R_D27ADF4089A45457EF6354CF8D020F98.640.269870706.268

class D
{
	[key] string key;
	X ref r1;
};
NS_2F830D7E9DBEAE88EED79A5D5FBD63C0\CD_053C5281DEEB2C2D4A2C17C1494E7DFB.635.269865918.173
NS_2F830D7E9DBEAE88EED79A5D5FBD63C0\CR_D41D8CD98F00B204E9800998ECF8427E\C_053C5281DEEB2C2D4A2C17C1494E7DFB
NS_2F830D7E9DBEAE88EED79A5D5FBD63C0\CR_D59C7440D368FAED532F6FB6CDDD865F\R_053C5281DEEB2C2D4A2C17C1494E7DFB

instance of D
{
	key="D1";
	r1="X.key=\"X1\"";
};
NS_2F830D7E9DBEAE88EED79A5D5FBD63C0\KI_053C5281DEEB2C2D4A2C17C1494E7DFB\I_A15ADCB4FCB4EA6754B3506EE0696300.608.269861322.126
NS_2F830D7E9DBEAE88EED79A5D5FBD63C0\CI_053C5281DEEB2C2D4A2C17C1494E7DFB\IL_A15ADCB4FCB4EA6754B3506EE0696300.608.269861322.126

instance of D
{
	key = "D2";
	r1 = "A.key=\"A1\"";
};
NS_2F830D7E9DBEAE88EED79A5D5FBD63C0\KI_053C5281DEEB2C2D4A2C17C1494E7DFB\I_070EEC30769D0F608517D8B7B0541DE2.610.269843209.126
NS_2F830D7E9DBEAE88EED79A5D5FBD63C0\CI_053C5281DEEB2C2D4A2C17C1494E7DFB\IL_070EEC30769D0F608517D8B7B0541DE2.610.269843209.126
NS_2F830D7E9DBEAE88EED79A5D5FBD63C0\KI_8214D1003F68A7D9B0356C0CBD7EEE1A\IR_879F2E102B41430955A16D4CD81E26FF\R_A7D1E456F287702D563157888D38F6CE.640.269862681.268

class E
{
	[key] string key1;
	[key] string key2;
};
NS_2F830D7E9DBEAE88EED79A5D5FBD63C0\CD_51732053226742FA34292D18216CDB46.640.269851430.193
NS_2F830D7E9DBEAE88EED79A5D5FBD63C0\CR_D41D8CD98F00B204E9800998ECF8427E\C_51732053226742FA34292D18216CDB46

instance of E
{
	key1="D1.1";
	key2="D1.2";
};
NS_2F830D7E9DBEAE88EED79A5D5FBD63C0\KI_51732053226742FA34292D18216CDB46\I_66E27BE973CC5BB416668CD8F60C5E3D.628.269847808.122
NS_2F830D7E9DBEAE88EED79A5D5FBD63C0\CI_51732053226742FA34292D18216CDB46\IL_66E27BE973CC5BB416668CD8F60C5E3D.628.269847808.122

class F
{
	[key] string key;
	E ref r1;
};
NS_2F830D7E9DBEAE88EED79A5D5FBD63C0\CD_5D1B0F5178DCAA12AFA306815EC44D5C.637.269860449.173
NS_2F830D7E9DBEAE88EED79A5D5FBD63C0\CR_D41D8CD98F00B204E9800998ECF8427E\C_5D1B0F5178DCAA12AFA306815EC44D5C
NS_2F830D7E9DBEAE88EED79A5D5FBD63C0\CR_51732053226742FA34292D18216CDB46\R_5D1B0F5178DCAA12AFA306815EC44D5C

instance of F
{
	key = "F1";
	r1 = "E.key1=\"D1.1\",key2=\"D1.2\"";
};
NS_2F830D7E9DBEAE88EED79A5D5FBD63C0\KI_5D1B0F5178DCAA12AFA306815EC44D5C\I_37CF7BE8EC41A870FD68DF16F639E309.640.274972568.141
NS_2F830D7E9DBEAE88EED79A5D5FBD63C0\CI_5D1B0F5178DCAA12AFA306815EC44D5C\IL_37CF7BE8EC41A870FD68DF16F639E309.640.274972568.141
NS_2F830D7E9DBEAE88EED79A5D5FBD63C0\KI_51732053226742FA34292D18216CDB46\IR_66E27BE973CC5BB416668CD8F60C5E3D\R_913A87A0CA6D9BA8A6888DC31E1F3D33.640.274992750.268

class G
{
	[key] string key;
	object ref r1;
};
NS_2F830D7E9DBEAE88EED79A5D5FBD63C0\CD_7E23583ACA00BD6FA8037F7F6808B18F.640.269869167.171
NS_2F830D7E9DBEAE88EED79A5D5FBD63C0\CR_D41D8CD98F00B204E9800998ECF8427E\C_7E23583ACA00BD6FA8037F7F6808B18F

instance of G
{
	key = "G1";
	r1 = "A.key=\"A1\"";
};
NS_2F830D7E9DBEAE88EED79A5D5FBD63C0\KI_7E23583ACA00BD6FA8037F7F6808B18F\I_BC708F9B13C21AE3BE5BE8E79847D687.636.269853309.126
NS_2F830D7E9DBEAE88EED79A5D5FBD63C0\CI_7E23583ACA00BD6FA8037F7F6808B18F\IL_BC708F9B13C21AE3BE5BE8E79847D687.636.269853309.126
NS_2F830D7E9DBEAE88EED79A5D5FBD63C0\KI_8214D1003F68A7D9B0356C0CBD7EEE1A\IR_879F2E102B41430955A16D4CD81E26FF\R_B53AFC9FAF2CAE6C978CB15CB1477CFF.640.269866046.268

instance of G
{
	key = "G2";
	r1 = "X.key=\"X1\"";
};
NS_2F830D7E9DBEAE88EED79A5D5FBD63C0\KI_7E23583ACA00BD6FA8037F7F6808B18F\I_1C0A8610E25CFFEA8FB62D89607C11DD.640.269868339.126
NS_2F830D7E9DBEAE88EED79A5D5FBD63C0\CI_7E23583ACA00BD6FA8037F7F6808B18F\IL_1C0A8610E25CFFEA8FB62D89607C11DD.640.269868339.126

instance of G
{
	key = "G3";
	r1 = "\\\\.\\root\\default:A=\"A1\"";
};
NS_2F830D7E9DBEAE88EED79A5D5FBD63C0\KI_7E23583ACA00BD6FA8037F7F6808B18F\I_15B432B56BEF504340051BBEE2C0E13A.640.269847200.139
NS_2F830D7E9DBEAE88EED79A5D5FBD63C0\CI_7E23583ACA00BD6FA8037F7F6808B18F\IL_15B432B56BEF504340051BBEE2C0E13A.640.269847200.139
NS_2F830D7E9DBEAE88EED79A5D5FBD63C0\KI_8214D1003F68A7D9B0356C0CBD7EEE1A\IR_879F2E102B41430955A16D4CD81E26FF\R_D0677A7E85C07C6B6B6D869725F61510.641.269850202.268

instance of G
{
	key = "G4";
	r1 = "\\\\.\\root\\default\\test:H.key=\"H1\"";
};
NS_2F830D7E9DBEAE88EED79A5D5FBD63C0\KI_7E23583ACA00BD6FA8037F7F6808B18F\I_BBD368DBFC640337D6CCFED7804BD269.641.269840257.148
NS_2F830D7E9DBEAE88EED79A5D5FBD63C0\CI_7E23583ACA00BD6FA8037F7F6808B18F\IL_BBD368DBFC640337D6CCFED7804BD269.641.269840257.148
NS_2635D9AAE48BF59B35266C6935C077B7\KI_1A8E9B7EA00C8125B37DC3F231564C72\IR_4AE0000E237E6504B3DA0E62AAABF38B\R_9D81C9ECCD2A230D9D0E7D7D4F6AA60B.641.269864548.268
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\wmi\wbem\xmltransport\samples\xmltest\description.txt ===
CIM Disk Viewer

Files:
Multiple.htm
controls.htm
results.htm
summary.xsl
wmimof.xsl
property-table.xsl
value-table.xsl
raw-xml.xsl
diska.xml
diskc.xml
diskd.xml
diske.xml
diskf.xml
magnify.wmf

Description:
This demo allows the user to select different instances of Win32_LogicalDisk 
that have been persisted as CIM XML documents and apply different XSL stylesheets 
to those documents.  Choose an XML document and a XSL stylesheet on the left and display
the data on the right.

This demo is a good example of using XSL to offer different views on XML.  Many times, the 
web designer will want to display different data to different consumers.  Through XSL this can 
be done without altering the original XML document or the HTML page used to load that document.


Compatibility/Platform Compatibility:
You must be running Microsoft Internet Explorer 5 or greater on Win32 or Unix platforms to view this demo.
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\wmi\wbem\xmltransport\samples\diskviewer\description.txt ===
CIM Disk Viewer

Files:
Multiple.htm
controls.htm
results.htm
summary.xsl
wmimof.xsl
property-table.xsl
value-table.xsl
raw-xml.xsl
diska.xml
diskc.xml
diskd.xml
diske.xml
diskf.xml
magnify.wmf

Description:
This demo allows the user to select different instances of Win32_LogicalDisk 
that have been persisted as CIM XML documents and apply different XSL stylesheets 
to those documents.  Choose an XML document and a XSL stylesheet on the left and display
the data on the right.

This demo is a good example of using XSL to offer different views on XML.  Many times, the 
web designer will want to display different data to different consumers.  Through XSL this can 
be done without altering the original XML document or the HTML page used to load that document.


Compatibility/Platform Compatibility:
You must be running Microsoft Internet Explorer 5 or greater on Win32 or Unix platforms to view this demo.
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\wmi\wbem\xmltransport\samples\diskviewer\diskd.xml ===
< ? x m l   v e r s i o n = " 1 . 0 "   ? > < C I M   C I M V E R S I O N = " 2 . 0 "   D T D V E R S I O N = " 2 . 0 "   > < D E C L A R A T I O N > < D E C L G R O U P > < V A L U E . O B J E C T > < I N S T A N C E   C L A S S N A M E = " W i n 3 2 _ L o g i c a l D i s k " > < Q U A L I F I E R   N A M E = " d y n a m i c "   P R O P A G A T E D = " t r u e "   T Y P E = " b o o l e a n "   T O S U B C L A S S = " f a l s e "   T O I N S T A N C E = " t r u e " > < V A L U E > T R U E < / V A L U E > < / Q U A L I F I E R > < Q U A L I F I E R   N A M E = " L o c a l e "   P R O P A G A T E D = " t r u e "   T Y P E = " s i n t 3 2 "   T O S U B C L A S S = " f a l s e "   T O I N S T A N C E = " t r u e " > < V A L U E > 1 0 3 3 < / V A L U E > < / Q U A L I F I E R > < Q U A L I F I E R   N A M E = " p r o v i d e r "   P R O P A G A T E D = " t r u e "   T Y P E = " s t r i n g "   T O S U B C L A S S = " f a l s e "   T O I N S T A N C E = " t r u e " > < V A L U E > C I M W i n 3 2 < / V A L U E > < / Q U A L I F I E R > < Q U A L I F I E R   N A M E = " U U I D "   P R O P A G A T E D = " t r u e "   T Y P E = " s t r i n g "   T O S U B C L A S S = " f a l s e "   T O I N S T A N C E = " t r u e " > < V A L U E > { 8 5 0 2 C 4 B 7 - 5 F B B - 1 1 D 2 - A A C 1 - 0 0 6 0 0 8 C 7 8 B C 7 } < / V A L U E > < / Q U A L I F I E R > < P R O P E R T Y   N A M E = " A c c e s s "   C L A S S O R I G I N = " C I M _ S t o r a g e E x t e n t "   P R O P A G A T E D = " t r u e "   T Y P E = " u i n t 1 6 " > < Q U A L I F I E R   N A M E = " C I M T Y P E "   P R O P A G A T E D = " t r u e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > < V A L U E > u i n t 1 6 < / V A L U E > < / Q U A L I F I E R > < / P R O P E R T Y > < P R O P E R T Y   N A M E = " A v a i l a b i l i t y "   C L A S S O R I G I N = " C I M _ L o g i c a l D e v i c e "   P R O P A G A T E D = " t r u e "   T Y P E = " u i n t 1 6 " > < Q U A L I F I E R   N A M E = " C I M T Y P E "   P R O P A G A T E D = " t r u e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > < V A L U E > u i n t 1 6 < / V A L U E > < / Q U A L I F I E R > < / P R O P E R T Y > < P R O P E R T Y   N A M E = " B l o c k S i z e "   C L A S S O R I G I N = " C I M _ S t o r a g e E x t e n t "   P R O P A G A T E D = " t r u e "   T Y P E = " u i n t 6 4 " > < Q U A L I F I E R   N A M E = " C I M T Y P E "   P R O P A G A T E D = " t r u e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > < V A L U E > u i n t 6 4 < / V A L U E > < / Q U A L I F I E R > < / P R O P E R T Y > < P R O P E R T Y   N A M E = " C a p t i o n "   C L A S S O R I G I N = " C I M _ M a n a g e d S y s t e m E l e m e n t "   T Y P E = " s t r i n g " > < Q U A L I F I E R   N A M E = " C I M T Y P E "   P R O P A G A T E D = " t r u e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > < V A L U E > s t r i n g < / V A L U E > < / Q U A L I F I E R > < V A L U E > D : < / V A L U E > < / P R O P E R T Y > < P R O P E R T Y   N A M E = " C o m p r e s s e d "   C L A S S O R I G I N = " W i n 3 2 _ L o g i c a l D i s k "   T Y P E = " b o o l e a n " > < Q U A L I F I E R   N A M E = " C I M T Y P E "   P R O P A G A T E D = " t r u e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > < V A L U E > b o o l e a n < / V A L U E > < / Q U A L I F I E R > < V A L U E > F A L S E < / V A L U E > < / P R O P E R T Y > < P R O P E R T Y   N A M E = " C o n f i g M a n a g e r E r r o r C o d e "   C L A S S O R I G I N = " C I M _ L o g i c a l D e v i c e "   P R O P A G A T E D = " t r u e "   T Y P E = " u i n t 3 2 " > < Q U A L I F I E R   N A M E = " C I M T Y P E "   P R O P A G A T E D = " t r u e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > < V A L U E > u i n t 3 2 < / V A L U E > < / Q U A L I F I E R > < / P R O P E R T Y > < P R O P E R T Y   N A M E = " C o n f i g M a n a g e r U s e r C o n f i g "   C L A S S O R I G I N = " C I M _ L o g i c a l D e v i c e "   P R O P A G A T E D = " t r u e "   T Y P E = " b o o l e a n " > < Q U A L I F I E R   N A M E = " C I M T Y P E "   P R O P A G A T E D = " t r u e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > < V A L U E > b o o l e a n < / V A L U E > < / Q U A L I F I E R > < / P R O P E R T Y > < P R O P E R T Y   N A M E = " C r e a t i o n C l a s s N a m e "   C L A S S O R I G I N = " C I M _ L o g i c a l D e v i c e "   T Y P E = " s t r i n g " > < Q U A L I F I E R   N A M E = " C I M T Y P E "   P R O P A G A T E D = " t r u e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > < V A L U E > s t r i n g < / V A L U E > < / Q U A L I F I E R > < V A L U E > W i n 3 2 _ L o g i c a l D i s k < / V A L U E > < / P R O P E R T Y > < P R O P E R T Y   N A M E = " D e s c r i p t i o n "   C L A S S O R I G I N = " C I M _ M a n a g e d S y s t e m E l e m e n t "   T Y P E = " s t r i n g " > < Q U A L I F I E R   N A M E = " C I M T Y P E "   P R O P A G A T E D = " t r u e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > < V A L U E > s t r i n g < / V A L U E > < / Q U A L I F I E R > < V A L U E > L o c a l   F i x e d   D i s k < / V A L U E > < / P R O P E R T Y > < P R O P E R T Y   N A M E = " D e v i c e I D "   C L A S S O R I G I N = " C I M _ L o g i c a l D e v i c e "   T Y P E = " s t r i n g " > < Q U A L I F I E R   N A M E = " C I M T Y P E "   P R O P A G A T E D = " t r u e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > < V A L U E > s t r i n g < / V A L U E > < / Q U A L I F I E R > < Q U A L I F I E R   N A M E = " k e y "   P R O P A G A T E D = " t r u e "   T Y P E = " b o o l e a n "   O V E R R I D A B L E = " f a l s e "   T O I N S T A N C E = " t r u e " > < V A L U E > T R U E < / V A L U E > < / Q U A L I F I E R > < V A L U E > D : < / V A L U E > < / P R O P E R T Y > < P R O P E R T Y   N A M E = " D r i v e T y p e "   C L A S S O R I G I N = " W i n 3 2 _ L o g i c a l D i s k "   T Y P E = " u i n t 3 2 " > < Q U A L I F I E R   N A M E = " C I M T Y P E "   P R O P A G A T E D = " t r u e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > < V A L U E > u i n t 3 2 < / V A L U E > < / Q U A L I F I E R > < V A L U E > 3 < / V A L U E > < / P R O P E R T Y > < P R O P E R T Y   N A M E = " E r r o r C l e a r e d "   C L A S S O R I G I N = " C I M _ L o g i c a l D e v i c e "   P R O P A G A T E D = " t r u e "   T Y P E = " b o o l e a n " > < Q U A L I F I E R   N A M E = " C I M T Y P E "   P R O P A G A T E D = " t r u e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > < V A L U E > b o o l e a n < / V A L U E > < / Q U A L I F I E R > < / P R O P E R T Y > < P R O P E R T Y   N A M E = " E r r o r D e s c r i p t i o n "   C L A S S O R I G I N = " C I M _ L o g i c a l D e v i c e "   P R O P A G A T E D = " t r u e "   T Y P E = " s t r i n g " > < Q U A L I F I E R   N A M E = " C I M T Y P E "   P R O P A G A T E D = " t r u e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > < V A L U E > s t r i n g < / V A L U E > < / Q U A L I F I E R > < / P R O P E R T Y > < P R O P E R T Y   N A M E = " E r r o r M e t h o d o l o g y "   C L A S S O R I G I N = " C I M _ S t o r a g e E x t e n t "   P R O P A G A T E D = " t r u e "   T Y P E = " s t r i n g " > < Q U A L I F I E R   N A M E = " C I M T Y P E "   P R O P A G A T E D = " t r u e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > < V A L U E > s t r i n g < / V A L U E > < / Q U A L I F I E R > < / P R O P E R T Y > < P R O P E R T Y   N A M E = " F i l e S y s t e m "   C L A S S O R I G I N = " W i n 3 2 _ L o g i c a l D i s k "   T Y P E = " s t r i n g " > < Q U A L I F I E R   N A M E = " C I M T Y P E "   P R O P A G A T E D = " t r u e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > < V A L U E > s t r i n g < / V A L U E > < / Q U A L I F I E R > < V A L U E > N T F S < / V A L U E > < / P R O P E R T Y > < P R O P E R T Y   N A M E = " F r e e S p a c e "   C L A S S O R I G I N = " C I M _ L o g i c a l D i s k "   T Y P E = " u i n t 6 4 " > < Q U A L I F I E R   N A M E = " C I M T Y P E "   P R O P A G A T E D = " t r u e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > < V A L U E > u i n t 6 4 < / V A L U E > < / Q U A L I F I E R > < V A L U E > 3 2 9 2 1 4 3 6 1 6 < / V A L U E > < / P R O P E R T Y > < P R O P E R T Y   N A M E = " I n s t a l l D a t e "   C L A S S O R I G I N = " C I M _ M a n a g e d S y s t e m E l e m e n t "   P R O P A G A T E D = " t r u e "   T Y P E = " d a t e t i m e " > < Q U A L I F I E R   N A M E = " C I M T Y P E "   P R O P A G A T E D = " t r u e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > < V A L U E > d a t e t i m e < / V A L U E > < / Q U A L I F I E R > < / P R O P E R T Y > < P R O P E R T Y   N A M E = " L a s t E r r o r C o d e "   C L A S S O R I G I N = " C I M _ L o g i c a l D e v i c e "   P R O P A G A T E D = " t r u e "   T Y P E = " u i n t 3 2 " > < Q U A L I F I E R   N A M E = " C I M T Y P E "   P R O P A G A T E D = " t r u e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > < V A L U E > u i n t 3 2 < / V A L U E > < / Q U A L I F I E R > < / P R O P E R T Y > < P R O P E R T Y   N A M E = " M a x i m u m C o m p o n e n t L e n g t h "   C L A S S O R I G I N = " W i n 3 2 _ L o g i c a l D i s k "   T Y P E = " u i n t 3 2 " > < Q U A L I F I E R   N A M E = " C I M T Y P E "   P R O P A G A T E D = " t r u e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > < V A L U E > u i n t 3 2 < / V A L U E > < / Q U A L I F I E R > < V A L U E > 2 5 5 < / V A L U E > < / P R O P E R T Y > < P R O P E R T Y   N A M E = " M e d i a T y p e "   C L A S S O R I G I N = " W i n 3 2 _ L o g i c a l D i s k "   T Y P E = " u i n t 3 2 " > < Q U A L I F I E R   N A M E = " C I M T Y P E "   P R O P A G A T E D = " t r u e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > < V A L U E > u i n t 3 2 < / V A L U E > < / Q U A L I F I E R > < V A L U E > 1 2 < / V A L U E > < / P R O P E R T Y > < P R O P E R T Y   N A M E = " N a m e "   C L A S S O R I G I N = " C I M _ M a n a g e d S y s t e m E l e m e n t "   T Y P E = " s t r i n g " > < Q U A L I F I E R   N A M E = " C I M T Y P E "   P R O P A G A T E D = " t r u e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > < V A L U E > s t r i n g < / V A L U E > < / Q U A L I F I E R > < V A L U E > D : < / V A L U E > < / P R O P E R T Y > < P R O P E R T Y   N A M E = " N u m b e r O f B l o c k s "   C L A S S O R I G I N = " C I M _ S t o r a g e E x t e n t "   P R O P A G A T E D = " t r u e "   T Y P E = " u i n t 6 4 " > < Q U A L I F I E R   N A M E = " C I M T Y P E "   P R O P A G A T E D = " t r u e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > < V A L U E > u i n t 6 4 < / V A L U E > < / Q U A L I F I E R > < / P R O P E R T Y > < P R O P E R T Y   N A M E = " P N P D e v i c e I D "   C L A S S O R I G I N = " C I M _ L o g i c a l D e v i c e "   P R O P A G A T E D = " t r u e "   T Y P E = " s t r i n g " > < Q U A L I F I E R   N A M E = " C I M T Y P E "   P R O P A G A T E D = " t r u e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > < V A L U E > s t r i n g < / V A L U E > < / Q U A L I F I E R > < / P R O P E R T Y > < P R O P E R T Y . A R R A Y   N A M E = " P o w e r M a n a g e m e n t C a p a b i l i t i e s "   C L A S S O R I G I N = " C I M _ L o g i c a l D e v i c e "   P R O P A G A T E D = " t r u e "   T Y P E = " u i n t 1 6 " > < Q U A L I F I E R   N A M E = " C I M T Y P E "   P R O P A G A T E D = " t r u e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > < V A L U E > u i n t 1 6 < / V A L U E > < / Q U A L I F I E R > < / P R O P E R T Y . A R R A Y > < P R O P E R T Y   N A M E = " P o w e r M a n a g e m e n t S u p p o r t e d "   C L A S S O R I G I N = " C I M _ L o g i c a l D e v i c e "   P R O P A G A T E D = " t r u e "   T Y P E = " b o o l e a n " > < Q U A L I F I E R   N A M E = " C I M T Y P E "   P R O P A G A T E D = " t r u e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > < V A L U E > b o o l e a n < / V A L U E > < / Q U A L I F I E R > < / P R O P E R T Y > < P R O P E R T Y   N A M E = " P r o v i d e r N a m e "   C L A S S O R I G I N = " W i n 3 2 _ L o g i c a l D i s k "   P R O P A G A T E D = " t r u e "   T Y P E = " s t r i n g " > < Q U A L I F I E R   N A M E = " C I M T Y P E "   P R O P A G A T E D = " t r u e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > < V A L U E > s t r i n g < / V A L U E > < / Q U A L I F I E R > < / P R O P E R T Y > < P R O P E R T Y   N A M E = " P u r p o s e "   C L A S S O R I G I N = " C I M _ S t o r a g e E x t e n t "   P R O P A G A T E D = " t r u e "   T Y P E = " s t r i n g " > < Q U A L I F I E R   N A M E = " C I M T Y P E "   P R O P A G A T E D = " t r u e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > < V A L U E > s t r i n g < / V A L U E > < / Q U A L I F I E R > < / P R O P E R T Y > < P R O P E R T Y   N A M E = " S i z e "   C L A S S O R I G I N = " C I M _ L o g i c a l D i s k "   T Y P E = " u i n t 6 4 " > < Q U A L I F I E R   N A M E = " C I M T Y P E "   P R O P A G A T E D = " t r u e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > < V A L U E > u i n t 6 4 < / V A L U E > < / Q U A L I F I E R > < V A L U E > 6 9 5 0 3 5 9 0 4 0 < / V A L U E > < / P R O P E R T Y > < P R O P E R T Y   N A M E = " S t a t u s "   C L A S S O R I G I N = " C I M _ M a n a g e d S y s t e m E l e m e n t "   P R O P A G A T E D = " t r u e "   T Y P E = " s t r i n g " > < Q U A L I F I E R   N A M E = " C I M T Y P E "   P R O P A G A T E D = " t r u e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > < V A L U E > s t r i n g < / V A L U E > < / Q U A L I F I E R > < / P R O P E R T Y > < P R O P E R T Y   N A M E = " S t a t u s I n f o "   C L A S S O R I G I N = " C I M _ L o g i c a l D e v i c e "   P R O P A G A T E D = " t r u e "   T Y P E = " u i n t 1 6 " > < Q U A L I F I E R   N A M E = " C I M T Y P E "   P R O P A G A T E D = " t r u e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > < V A L U E > u i n t 1 6 < / V A L U E > < / Q U A L I F I E R > < / P R O P E R T Y > < P R O P E R T Y   N A M E = " S u p p o r t s F i l e B a s e d C o m p r e s s i o n "   C L A S S O R I G I N = " W i n 3 2 _ L o g i c a l D i s k "   T Y P E = " b o o l e a n " > < Q U A L I F I E R   N A M E = " C I M T Y P E "   P R O P A G A T E D = " t r u e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > < V A L U E > b o o l e a n < / V A L U E > < / Q U A L I F I E R > < V A L U E > T R U E < / V A L U E > < / P R O P E R T Y > < P R O P E R T Y   N A M E = " S y s t e m C r e a t i o n C l a s s N a m e "   C L A S S O R I G I N = " C I M _ L o g i c a l D e v i c e "   T Y P E = " s t r i n g " > < Q U A L I F I E R   N A M E = " C I M T Y P E "   P R O P A G A T E D = " t r u e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > < V A L U E > s t r i n g < / V A L U E > < / Q U A L I F I E R > < V A L U E > W i n 3 2 _ C o m p u t e r S y s t e m < / V A L U E > < / P R O P E R T Y > < P R O P E R T Y   N A M E = " S y s t e m N a m e "   C L A S S O R I G I N = " C I M _ L o g i c a l D e v i c e "   T Y P E = " s t r i n g " > < Q U A L I F I E R   N A M E = " C I M T Y P E "   P R O P A G A T E D = " t r u e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > < V A L U E > s t r i n g < / V A L U E > < / Q U A L I F I E R > < V A L U E > A L A N B O S 2 < / V A L U E > < / P R O P E R T Y > < P R O P E R T Y   N A M E = " V o l u m e N a m e "   C L A S S O R I G I N = " W i n 3 2 _ L o g i c a l D i s k "   T Y P E = " s t r i n g " > < Q U A L I F I E R   N A M E = " C I M T Y P E "   P R O P A G A T E D = " t r u e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > < V A L U E > s t r i n g < / V A L U E > < / Q U A L I F I E R > < V A L U E > C h a r i b d y s < / V A L U E > < / P R O P E R T Y > < P R O P E R T Y   N A M E = " V o l u m e S e r i a l N u m b e r "   C L A S S O R I G I N = " W i n 3 2 _ L o g i c a l D i s k "   T Y P E = " s t r i n g " > < Q U A L I F I E R   N A M E = " C I M T Y P E "   P R O P A G A T E D = " t r u e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > < V A L U E > s t r i n g < / V A L U E > < / Q U A L I F I E R > < V A L U E > 3 C 8 F 9 3 1 E < / V A L U E > < / P R O P E R T Y > < / I N S T A N C E > < / V A L U E . O B J E C T > < / D E C L G R O U P > < / D E C L A R A T I O N > < / C I M > 
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\wmi\wbem\xmltransport\samples\diskviewer\diskf.xml ===
< ? x m l   v e r s i o n = " 1 . 0 "   ? > < C I M   C I M V E R S I O N = " 2 . 0 "   D T D V E R S I O N = " 2 . 0 "   > < D E C L A R A T I O N > < D E C L G R O U P > < V A L U E . O B J E C T > < I N S T A N C E   C L A S S N A M E = " W i n 3 2 _ L o g i c a l D i s k " > < Q U A L I F I E R   N A M E = " d y n a m i c "   P R O P A G A T E D = " t r u e "   T Y P E = " b o o l e a n "   T O S U B C L A S S = " f a l s e "   T O I N S T A N C E = " t r u e " > < V A L U E > T R U E < / V A L U E > < / Q U A L I F I E R > < Q U A L I F I E R   N A M E = " L o c a l e "   P R O P A G A T E D = " t r u e "   T Y P E = " s i n t 3 2 "   T O S U B C L A S S = " f a l s e "   T O I N S T A N C E = " t r u e " > < V A L U E > 1 0 3 3 < / V A L U E > < / Q U A L I F I E R > < Q U A L I F I E R   N A M E = " p r o v i d e r "   P R O P A G A T E D = " t r u e "   T Y P E = " s t r i n g "   T O S U B C L A S S = " f a l s e "   T O I N S T A N C E = " t r u e " > < V A L U E > C I M W i n 3 2 < / V A L U E > < / Q U A L I F I E R > < Q U A L I F I E R   N A M E = " U U I D "   P R O P A G A T E D = " t r u e "   T Y P E = " s t r i n g "   T O S U B C L A S S = " f a l s e "   T O I N S T A N C E = " t r u e " > < V A L U E > { 8 5 0 2 C 4 B 7 - 5 F B B - 1 1 D 2 - A A C 1 - 0 0 6 0 0 8 C 7 8 B C 7 } < / V A L U E > < / Q U A L I F I E R > < P R O P E R T Y   N A M E = " A c c e s s "   C L A S S O R I G I N = " C I M _ S t o r a g e E x t e n t "   P R O P A G A T E D = " t r u e "   T Y P E = " u i n t 1 6 " > < Q U A L I F I E R   N A M E = " C I M T Y P E "   P R O P A G A T E D = " t r u e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > < V A L U E > u i n t 1 6 < / V A L U E > < / Q U A L I F I E R > < / P R O P E R T Y > < P R O P E R T Y   N A M E = " A v a i l a b i l i t y "   C L A S S O R I G I N = " C I M _ L o g i c a l D e v i c e "   P R O P A G A T E D = " t r u e "   T Y P E = " u i n t 1 6 " > < Q U A L I F I E R   N A M E = " C I M T Y P E "   P R O P A G A T E D = " t r u e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > < V A L U E > u i n t 1 6 < / V A L U E > < / Q U A L I F I E R > < / P R O P E R T Y > < P R O P E R T Y   N A M E = " B l o c k S i z e "   C L A S S O R I G I N = " C I M _ S t o r a g e E x t e n t "   P R O P A G A T E D = " t r u e "   T Y P E = " u i n t 6 4 " > < Q U A L I F I E R   N A M E = " C I M T Y P E "   P R O P A G A T E D = " t r u e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > < V A L U E > u i n t 6 4 < / V A L U E > < / Q U A L I F I E R > < / P R O P E R T Y > < P R O P E R T Y   N A M E = " C a p t i o n "   C L A S S O R I G I N = " C I M _ M a n a g e d S y s t e m E l e m e n t "   T Y P E = " s t r i n g " > < Q U A L I F I E R   N A M E = " C I M T Y P E "   P R O P A G A T E D = " t r u e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > < V A L U E > s t r i n g < / V A L U E > < / Q U A L I F I E R > < V A L U E > f : < / V A L U E > < / P R O P E R T Y > < P R O P E R T Y   N A M E = " C o m p r e s s e d "   C L A S S O R I G I N = " W i n 3 2 _ L o g i c a l D i s k "   P R O P A G A T E D = " t r u e "   T Y P E = " b o o l e a n " > < Q U A L I F I E R   N A M E = " C I M T Y P E "   P R O P A G A T E D = " t r u e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > < V A L U E > b o o l e a n < / V A L U E > < / Q U A L I F I E R > < / P R O P E R T Y > < P R O P E R T Y   N A M E = " C o n f i g M a n a g e r E r r o r C o d e "   C L A S S O R I G I N = " C I M _ L o g i c a l D e v i c e "   P R O P A G A T E D = " t r u e "   T Y P E = " u i n t 3 2 " > < Q U A L I F I E R   N A M E = " C I M T Y P E "   P R O P A G A T E D = " t r u e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > < V A L U E > u i n t 3 2 < / V A L U E > < / Q U A L I F I E R > < / P R O P E R T Y > < P R O P E R T Y   N A M E = " C o n f i g M a n a g e r U s e r C o n f i g "   C L A S S O R I G I N = " C I M _ L o g i c a l D e v i c e "   P R O P A G A T E D = " t r u e "   T Y P E = " b o o l e a n " > < Q U A L I F I E R   N A M E = " C I M T Y P E "   P R O P A G A T E D = " t r u e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > < V A L U E > b o o l e a n < / V A L U E > < / Q U A L I F I E R > < / P R O P E R T Y > < P R O P E R T Y   N A M E = " C r e a t i o n C l a s s N a m e "   C L A S S O R I G I N = " C I M _ L o g i c a l D e v i c e "   T Y P E = " s t r i n g " > < Q U A L I F I E R   N A M E = " C I M T Y P E "   P R O P A G A T E D = " t r u e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > < V A L U E > s t r i n g < / V A L U E > < / Q U A L I F I E R > < V A L U E > W i n 3 2 _ L o g i c a l D i s k < / V A L U E > < / P R O P E R T Y > < P R O P E R T Y   N A M E = " D e s c r i p t i o n "   C L A S S O R I G I N = " C I M _ M a n a g e d S y s t e m E l e m e n t "   T Y P E = " s t r i n g " > < Q U A L I F I E R   N A M E = " C I M T Y P E "   P R O P A G A T E D = " t r u e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > < V A L U E > s t r i n g < / V A L U E > < / Q U A L I F I E R > < V A L U E > N e t w o r k   C o n n e c t i o n < / V A L U E > < / P R O P E R T Y > < P R O P E R T Y   N A M E = " D e v i c e I D "   C L A S S O R I G I N = " C I M _ L o g i c a l D e v i c e "   T Y P E = " s t r i n g " > < Q U A L I F I E R   N A M E = " C I M T Y P E "   P R O P A G A T E D = " t r u e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > < V A L U E > s t r i n g < / V A L U E > < / Q U A L I F I E R > < Q U A L I F I E R   N A M E = " k e y "   P R O P A G A T E D = " t r u e "   T Y P E = " b o o l e a n "   O V E R R I D A B L E = " f a l s e "   T O I N S T A N C E = " t r u e " > < V A L U E > T R U E < / V A L U E > < / Q U A L I F I E R > < V A L U E > f : < / V A L U E > < / P R O P E R T Y > < P R O P E R T Y   N A M E = " D r i v e T y p e "   C L A S S O R I G I N = " W i n 3 2 _ L o g i c a l D i s k "   T Y P E = " u i n t 3 2 " > < Q U A L I F I E R   N A M E = " C I M T Y P E "   P R O P A G A T E D = " t r u e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > < V A L U E > u i n t 3 2 < / V A L U E > < / Q U A L I F I E R > < V A L U E > 4 < / V A L U E > < / P R O P E R T Y > < P R O P E R T Y   N A M E = " E r r o r C l e a r e d "   C L A S S O R I G I N = " C I M _ L o g i c a l D e v i c e "   P R O P A G A T E D = " t r u e "   T Y P E = " b o o l e a n " > < Q U A L I F I E R   N A M E = " C I M T Y P E "   P R O P A G A T E D = " t r u e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > < V A L U E > b o o l e a n < / V A L U E > < / Q U A L I F I E R > < / P R O P E R T Y > < P R O P E R T Y   N A M E = " E r r o r D e s c r i p t i o n "   C L A S S O R I G I N = " C I M _ L o g i c a l D e v i c e "   P R O P A G A T E D = " t r u e "   T Y P E = " s t r i n g " > < Q U A L I F I E R   N A M E = " C I M T Y P E "   P R O P A G A T E D = " t r u e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > < V A L U E > s t r i n g < / V A L U E > < / Q U A L I F I E R > < / P R O P E R T Y > < P R O P E R T Y   N A M E = " E r r o r M e t h o d o l o g y "   C L A S S O R I G I N = " C I M _ S t o r a g e E x t e n t "   P R O P A G A T E D = " t r u e "   T Y P E = " s t r i n g " > < Q U A L I F I E R   N A M E = " C I M T Y P E "   P R O P A G A T E D = " t r u e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > < V A L U E > s t r i n g < / V A L U E > < / Q U A L I F I E R > < / P R O P E R T Y > < P R O P E R T Y   N A M E = " F i l e S y s t e m "   C L A S S O R I G I N = " W i n 3 2 _ L o g i c a l D i s k "   P R O P A G A T E D = " t r u e "   T Y P E = " s t r i n g " > < Q U A L I F I E R   N A M E = " C I M T Y P E "   P R O P A G A T E D = " t r u e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > < V A L U E > s t r i n g < / V A L U E > < / Q U A L I F I E R > < / P R O P E R T Y > < P R O P E R T Y   N A M E = " F r e e S p a c e "   C L A S S O R I G I N = " C I M _ L o g i c a l D i s k "   P R O P A G A T E D = " t r u e "   T Y P E = " u i n t 6 4 " > < Q U A L I F I E R   N A M E = " C I M T Y P E "   P R O P A G A T E D = " t r u e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > < V A L U E > u i n t 6 4 < / V A L U E > < / Q U A L I F I E R > < / P R O P E R T Y > < P R O P E R T Y   N A M E = " I n s t a l l D a t e "   C L A S S O R I G I N = " C I M _ M a n a g e d S y s t e m E l e m e n t "   P R O P A G A T E D = " t r u e "   T Y P E = " d a t e t i m e " > < Q U A L I F I E R   N A M E = " C I M T Y P E "   P R O P A G A T E D = " t r u e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > < V A L U E > d a t e t i m e < / V A L U E > < / Q U A L I F I E R > < / P R O P E R T Y > < P R O P E R T Y   N A M E = " L a s t E r r o r C o d e "   C L A S S O R I G I N = " C I M _ L o g i c a l D e v i c e "   P R O P A G A T E D = " t r u e "   T Y P E = " u i n t 3 2 " > < Q U A L I F I E R   N A M E = " C I M T Y P E "   P R O P A G A T E D = " t r u e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > < V A L U E > u i n t 3 2 < / V A L U E > < / Q U A L I F I E R > < / P R O P E R T Y > < P R O P E R T Y   N A M E = " M a x i m u m C o m p o n e n t L e n g t h "   C L A S S O R I G I N = " W i n 3 2 _ L o g i c a l D i s k "   P R O P A G A T E D = " t r u e "   T Y P E = " u i n t 3 2 " > < Q U A L I F I E R   N A M E = " C I M T Y P E "   P R O P A G A T E D = " t r u e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > < V A L U E > u i n t 3 2 < / V A L U E > < / Q U A L I F I E R > < / P R O P E R T Y > < P R O P E R T Y   N A M E = " M e d i a T y p e "   C L A S S O R I G I N = " W i n 3 2 _ L o g i c a l D i s k "   T Y P E = " u i n t 3 2 " > < Q U A L I F I E R   N A M E = " C I M T Y P E "   P R O P A G A T E D = " t r u e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > < V A L U E > u i n t 3 2 < / V A L U E > < / Q U A L I F I E R > < V A L U E > 0 < / V A L U E > < / P R O P E R T Y > < P R O P E R T Y   N A M E = " N a m e "   C L A S S O R I G I N = " C I M _ M a n a g e d S y s t e m E l e m e n t "   T Y P E = " s t r i n g " > < Q U A L I F I E R   N A M E = " C I M T Y P E "   P R O P A G A T E D = " t r u e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > < V A L U E > s t r i n g < / V A L U E > < / Q U A L I F I E R > < V A L U E > f : < / V A L U E > < / P R O P E R T Y > < P R O P E R T Y   N A M E = " N u m b e r O f B l o c k s "   C L A S S O R I G I N = " C I M _ S t o r a g e E x t e n t "   P R O P A G A T E D = " t r u e "   T Y P E = " u i n t 6 4 " > < Q U A L I F I E R   N A M E = " C I M T Y P E "   P R O P A G A T E D = " t r u e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > < V A L U E > u i n t 6 4 < / V A L U E > < / Q U A L I F I E R > < / P R O P E R T Y > < P R O P E R T Y   N A M E = " P N P D e v i c e I D "   C L A S S O R I G I N = " C I M _ L o g i c a l D e v i c e "   P R O P A G A T E D = " t r u e "   T Y P E = " s t r i n g " > < Q U A L I F I E R   N A M E = " C I M T Y P E "   P R O P A G A T E D = " t r u e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > < V A L U E > s t r i n g < / V A L U E > < / Q U A L I F I E R > < / P R O P E R T Y > < P R O P E R T Y . A R R A Y   N A M E = " P o w e r M a n a g e m e n t C a p a b i l i t i e s "   C L A S S O R I G I N = " C I M _ L o g i c a l D e v i c e "   P R O P A G A T E D = " t r u e "   T Y P E = " u i n t 1 6 " > < Q U A L I F I E R   N A M E = " C I M T Y P E "   P R O P A G A T E D = " t r u e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > < V A L U E > u i n t 1 6 < / V A L U E > < / Q U A L I F I E R > < / P R O P E R T Y . A R R A Y > < P R O P E R T Y   N A M E = " P o w e r M a n a g e m e n t S u p p o r t e d "   C L A S S O R I G I N = " C I M _ L o g i c a l D e v i c e "   P R O P A G A T E D = " t r u e "   T Y P E = " b o o l e a n " > < Q U A L I F I E R   N A M E = " C I M T Y P E "   P R O P A G A T E D = " t r u e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > < V A L U E > b o o l e a n < / V A L U E > < / Q U A L I F I E R > < / P R O P E R T Y > < P R O P E R T Y   N A M E = " P r o v i d e r N a m e "   C L A S S O R I G I N = " W i n 3 2 _ L o g i c a l D i s k "   T Y P E = " s t r i n g " > < Q U A L I F I E R   N A M E = " C I M T Y P E "   P R O P A G A T E D = " t r u e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > < V A L U E > s t r i n g < / V A L U E > < / Q U A L I F I E R > < V A L U E > \ \ a l a n b o s 3 \ d $ < / V A L U E > < / P R O P E R T Y > < P R O P E R T Y   N A M E = " P u r p o s e "   C L A S S O R I G I N = " C I M _ S t o r a g e E x t e n t "   P R O P A G A T E D = " t r u e "   T Y P E = " s t r i n g " > < Q U A L I F I E R   N A M E = " C I M T Y P E "   P R O P A G A T E D = " t r u e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > < V A L U E > s t r i n g < / V A L U E > < / Q U A L I F I E R > < / P R O P E R T Y > < P R O P E R T Y   N A M E = " S i z e "   C L A S S O R I G I N = " C I M _ L o g i c a l D i s k "   P R O P A G A T E D = " t r u e "   T Y P E = " u i n t 6 4 " > < Q U A L I F I E R   N A M E = " C I M T Y P E "   P R O P A G A T E D = " t r u e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > < V A L U E > u i n t 6 4 < / V A L U E > < / Q U A L I F I E R > < / P R O P E R T Y > < P R O P E R T Y   N A M E = " S t a t u s "   C L A S S O R I G I N = " C I M _ M a n a g e d S y s t e m E l e m e n t "   P R O P A G A T E D = " t r u e "   T Y P E = " s t r i n g " > < Q U A L I F I E R   N A M E = " C I M T Y P E "   P R O P A G A T E D = " t r u e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > < V A L U E > s t r i n g < / V A L U E > < / Q U A L I F I E R > < / P R O P E R T Y > < P R O P E R T Y   N A M E = " S t a t u s I n f o "   C L A S S O R I G I N = " C I M _ L o g i c a l D e v i c e "   P R O P A G A T E D = " t r u e "   T Y P E = " u i n t 1 6 " > < Q U A L I F I E R   N A M E = " C I M T Y P E "   P R O P A G A T E D = " t r u e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > < V A L U E > u i n t 1 6 < / V A L U E > < / Q U A L I F I E R > < / P R O P E R T Y > < P R O P E R T Y   N A M E = " S u p p o r t s F i l e B a s e d C o m p r e s s i o n "   C L A S S O R I G I N = " W i n 3 2 _ L o g i c a l D i s k "   P R O P A G A T E D = " t r u e "   T Y P E = " b o o l e a n " > < Q U A L I F I E R   N A M E = " C I M T Y P E "   P R O P A G A T E D = " t r u e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > < V A L U E > b o o l e a n < / V A L U E > < / Q U A L I F I E R > < / P R O P E R T Y > < P R O P E R T Y   N A M E = " S y s t e m C r e a t i o n C l a s s N a m e "   C L A S S O R I G I N = " C I M _ L o g i c a l D e v i c e "   T Y P E = " s t r i n g " > < Q U A L I F I E R   N A M E = " C I M T Y P E "   P R O P A G A T E D = " t r u e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > < V A L U E > s t r i n g < / V A L U E > < / Q U A L I F I E R > < V A L U E > W i n 3 2 _ C o m p u t e r S y s t e m < / V A L U E > < / P R O P E R T Y > < P R O P E R T Y   N A M E = " S y s t e m N a m e "   C L A S S O R I G I N = " C I M _ L o g i c a l D e v i c e "   T Y P E = " s t r i n g " > < Q U A L I F I E R   N A M E = " C I M T Y P E "   P R O P A G A T E D = " t r u e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > < V A L U E > s t r i n g < / V A L U E > < / Q U A L I F I E R > < V A L U E > A L A N B O S 2 < / V A L U E > < / P R O P E R T Y > < P R O P E R T Y   N A M E = " V o l u m e N a m e "   C L A S S O R I G I N = " W i n 3 2 _ L o g i c a l D i s k "   P R O P A G A T E D = " t r u e "   T Y P E = " s t r i n g " > < Q U A L I F I E R   N A M E = " C I M T Y P E "   P R O P A G A T E D = " t r u e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > < V A L U E > s t r i n g < / V A L U E > < / Q U A L I F I E R > < / P R O P E R T Y > < P R O P E R T Y   N A M E = " V o l u m e S e r i a l N u m b e r "   C L A S S O R I G I N = " W i n 3 2 _ L o g i c a l D i s k "   P R O P A G A T E D = " t r u e "   T Y P E = " s t r i n g " > < Q U A L I F I E R   N A M E = " C I M T Y P E "   P R O P A G A T E D = " t r u e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > < V A L U E > s t r i n g < / V A L U E > < / Q U A L I F I E R > < / P R O P E R T Y > < / I N S T A N C E > < / V A L U E . O B J E C T > < / D E C L G R O U P > < / D E C L A R A T I O N > < / C I M > 
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\wmi\wbem\xmltransport\samples\diskviewer\diskc.xml ===
< ? x m l   v e r s i o n = " 1 . 0 "   ? > < C I M   C I M V E R S I O N = " 2 . 0 "   D T D V E R S I O N = " 2 . 0 "   > < D E C L A R A T I O N > < D E C L G R O U P > < V A L U E . O B J E C T > < I N S T A N C E   C L A S S N A M E = " W i n 3 2 _ L o g i c a l D i s k " > < Q U A L I F I E R   N A M E = " d y n a m i c "   P R O P A G A T E D = " t r u e "   T Y P E = " b o o l e a n "   T O S U B C L A S S = " f a l s e "   T O I N S T A N C E = " t r u e " > < V A L U E > T R U E < / V A L U E > < / Q U A L I F I E R > < Q U A L I F I E R   N A M E = " L o c a l e "   P R O P A G A T E D = " t r u e "   T Y P E = " s i n t 3 2 "   T O S U B C L A S S = " f a l s e "   T O I N S T A N C E = " t r u e " > < V A L U E > 1 0 3 3 < / V A L U E > < / Q U A L I F I E R > < Q U A L I F I E R   N A M E = " p r o v i d e r "   P R O P A G A T E D = " t r u e "   T Y P E = " s t r i n g "   T O S U B C L A S S = " f a l s e "   T O I N S T A N C E = " t r u e " > < V A L U E > C I M W i n 3 2 < / V A L U E > < / Q U A L I F I E R > < Q U A L I F I E R   N A M E = " U U I D "   P R O P A G A T E D = " t r u e "   T Y P E = " s t r i n g "   T O S U B C L A S S = " f a l s e "   T O I N S T A N C E = " t r u e " > < V A L U E > { 8 5 0 2 C 4 B 7 - 5 F B B - 1 1 D 2 - A A C 1 - 0 0 6 0 0 8 C 7 8 B C 7 } < / V A L U E > < / Q U A L I F I E R > < P R O P E R T Y   N A M E = " A c c e s s "   C L A S S O R I G I N = " C I M _ S t o r a g e E x t e n t "   P R O P A G A T E D = " t r u e "   T Y P E = " u i n t 1 6 " > < Q U A L I F I E R   N A M E = " C I M T Y P E "   P R O P A G A T E D = " t r u e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > < V A L U E > u i n t 1 6 < / V A L U E > < / Q U A L I F I E R > < / P R O P E R T Y > < P R O P E R T Y   N A M E = " A v a i l a b i l i t y "   C L A S S O R I G I N = " C I M _ L o g i c a l D e v i c e "   P R O P A G A T E D = " t r u e "   T Y P E = " u i n t 1 6 " > < Q U A L I F I E R   N A M E = " C I M T Y P E "   P R O P A G A T E D = " t r u e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > < V A L U E > u i n t 1 6 < / V A L U E > < / Q U A L I F I E R > < / P R O P E R T Y > < P R O P E R T Y   N A M E = " B l o c k S i z e "   C L A S S O R I G I N = " C I M _ S t o r a g e E x t e n t "   P R O P A G A T E D = " t r u e "   T Y P E = " u i n t 6 4 " > < Q U A L I F I E R   N A M E = " C I M T Y P E "   P R O P A G A T E D = " t r u e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > < V A L U E > u i n t 6 4 < / V A L U E > < / Q U A L I F I E R > < / P R O P E R T Y > < P R O P E R T Y   N A M E = " C a p t i o n "   C L A S S O R I G I N = " C I M _ M a n a g e d S y s t e m E l e m e n t "   T Y P E = " s t r i n g " > < Q U A L I F I E R   N A M E = " C I M T Y P E "   P R O P A G A T E D = " t r u e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > < V A L U E > s t r i n g < / V A L U E > < / Q U A L I F I E R > < V A L U E > C : < / V A L U E > < / P R O P E R T Y > < P R O P E R T Y   N A M E = " C o m p r e s s e d "   C L A S S O R I G I N = " W i n 3 2 _ L o g i c a l D i s k "   T Y P E = " b o o l e a n " > < Q U A L I F I E R   N A M E = " C I M T Y P E "   P R O P A G A T E D = " t r u e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > < V A L U E > b o o l e a n < / V A L U E > < / Q U A L I F I E R > < V A L U E > F A L S E < / V A L U E > < / P R O P E R T Y > < P R O P E R T Y   N A M E = " C o n f i g M a n a g e r E r r o r C o d e "   C L A S S O R I G I N = " C I M _ L o g i c a l D e v i c e "   P R O P A G A T E D = " t r u e "   T Y P E = " u i n t 3 2 " > < Q U A L I F I E R   N A M E = " C I M T Y P E "   P R O P A G A T E D = " t r u e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > < V A L U E > u i n t 3 2 < / V A L U E > < / Q U A L I F I E R > < / P R O P E R T Y > < P R O P E R T Y   N A M E = " C o n f i g M a n a g e r U s e r C o n f i g "   C L A S S O R I G I N = " C I M _ L o g i c a l D e v i c e "   P R O P A G A T E D = " t r u e "   T Y P E = " b o o l e a n " > < Q U A L I F I E R   N A M E = " C I M T Y P E "   P R O P A G A T E D = " t r u e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > < V A L U E > b o o l e a n < / V A L U E > < / Q U A L I F I E R > < / P R O P E R T Y > < P R O P E R T Y   N A M E = " C r e a t i o n C l a s s N a m e "   C L A S S O R I G I N = " C I M _ L o g i c a l D e v i c e "   T Y P E = " s t r i n g " > < Q U A L I F I E R   N A M E = " C I M T Y P E "   P R O P A G A T E D = " t r u e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > < V A L U E > s t r i n g < / V A L U E > < / Q U A L I F I E R > < V A L U E > W i n 3 2 _ L o g i c a l D i s k < / V A L U E > < / P R O P E R T Y > < P R O P E R T Y   N A M E = " D e s c r i p t i o n "   C L A S S O R I G I N = " C I M _ M a n a g e d S y s t e m E l e m e n t "   T Y P E = " s t r i n g " > < Q U A L I F I E R   N A M E = " C I M T Y P E "   P R O P A G A T E D = " t r u e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > < V A L U E > s t r i n g < / V A L U E > < / Q U A L I F I E R > < V A L U E > L o c a l   F i x e d   D i s k < / V A L U E > < / P R O P E R T Y > < P R O P E R T Y   N A M E = " D e v i c e I D "   C L A S S O R I G I N = " C I M _ L o g i c a l D e v i c e "   T Y P E = " s t r i n g " > < Q U A L I F I E R   N A M E = " C I M T Y P E "   P R O P A G A T E D = " t r u e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > < V A L U E > s t r i n g < / V A L U E > < / Q U A L I F I E R > < Q U A L I F I E R   N A M E = " k e y "   P R O P A G A T E D = " t r u e "   T Y P E = " b o o l e a n "   O V E R R I D A B L E = " f a l s e "   T O I N S T A N C E = " t r u e " > < V A L U E > T R U E < / V A L U E > < / Q U A L I F I E R > < V A L U E > C : < / V A L U E > < / P R O P E R T Y > < P R O P E R T Y   N A M E = " D r i v e T y p e "   C L A S S O R I G I N = " W i n 3 2 _ L o g i c a l D i s k "   T Y P E = " u i n t 3 2 " > < Q U A L I F I E R   N A M E = " C I M T Y P E "   P R O P A G A T E D = " t r u e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > < V A L U E > u i n t 3 2 < / V A L U E > < / Q U A L I F I E R > < V A L U E > 3 < / V A L U E > < / P R O P E R T Y > < P R O P E R T Y   N A M E = " E r r o r C l e a r e d "   C L A S S O R I G I N = " C I M _ L o g i c a l D e v i c e "   P R O P A G A T E D = " t r u e "   T Y P E = " b o o l e a n " > < Q U A L I F I E R   N A M E = " C I M T Y P E "   P R O P A G A T E D = " t r u e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > < V A L U E > b o o l e a n < / V A L U E > < / Q U A L I F I E R > < / P R O P E R T Y > < P R O P E R T Y   N A M E = " E r r o r D e s c r i p t i o n "   C L A S S O R I G I N = " C I M _ L o g i c a l D e v i c e "   P R O P A G A T E D = " t r u e "   T Y P E = " s t r i n g " > < Q U A L I F I E R   N A M E = " C I M T Y P E "   P R O P A G A T E D = " t r u e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > < V A L U E > s t r i n g < / V A L U E > < / Q U A L I F I E R > < / P R O P E R T Y > < P R O P E R T Y   N A M E = " E r r o r M e t h o d o l o g y "   C L A S S O R I G I N = " C I M _ S t o r a g e E x t e n t "   P R O P A G A T E D = " t r u e "   T Y P E = " s t r i n g " > < Q U A L I F I E R   N A M E = " C I M T Y P E "   P R O P A G A T E D = " t r u e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > < V A L U E > s t r i n g < / V A L U E > < / Q U A L I F I E R > < / P R O P E R T Y > < P R O P E R T Y   N A M E = " F i l e S y s t e m "   C L A S S O R I G I N = " W i n 3 2 _ L o g i c a l D i s k "   T Y P E = " s t r i n g " > < Q U A L I F I E R   N A M E = " C I M T Y P E "   P R O P A G A T E D = " t r u e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > < V A L U E > s t r i n g < / V A L U E > < / Q U A L I F I E R > < V A L U E > F A T < / V A L U E > < / P R O P E R T Y > < P R O P E R T Y   N A M E = " F r e e S p a c e "   C L A S S O R I G I N = " C I M _ L o g i c a l D i s k "   T Y P E = " u i n t 6 4 " > < Q U A L I F I E R   N A M E = " C I M T Y P E "   P R O P A G A T E D = " t r u e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > < V A L U E > u i n t 6 4 < / V A L U E > < / Q U A L I F I E R > < V A L U E > 8 2 4 4 4 2 8 8 < / V A L U E > < / P R O P E R T Y > < P R O P E R T Y   N A M E = " I n s t a l l D a t e "   C L A S S O R I G I N = " C I M _ M a n a g e d S y s t e m E l e m e n t "   P R O P A G A T E D = " t r u e "   T Y P E = " d a t e t i m e " > < Q U A L I F I E R   N A M E = " C I M T Y P E "   P R O P A G A T E D = " t r u e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > < V A L U E > d a t e t i m e < / V A L U E > < / Q U A L I F I E R > < / P R O P E R T Y > < P R O P E R T Y   N A M E = " L a s t E r r o r C o d e "   C L A S S O R I G I N = " C I M _ L o g i c a l D e v i c e "   P R O P A G A T E D = " t r u e "   T Y P E = " u i n t 3 2 " > < Q U A L I F I E R   N A M E = " C I M T Y P E "   P R O P A G A T E D = " t r u e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > < V A L U E > u i n t 3 2 < / V A L U E > < / Q U A L I F I E R > < / P R O P E R T Y > < P R O P E R T Y   N A M E = " M a x i m u m C o m p o n e n t L e n g t h "   C L A S S O R I G I N = " W i n 3 2 _ L o g i c a l D i s k "   T Y P E = " u i n t 3 2 " > < Q U A L I F I E R   N A M E = " C I M T Y P E "   P R O P A G A T E D = " t r u e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > < V A L U E > u i n t 3 2 < / V A L U E > < / Q U A L I F I E R > < V A L U E > 2 5 5 < / V A L U E > < / P R O P E R T Y > < P R O P E R T Y   N A M E = " M e d i a T y p e "   C L A S S O R I G I N = " W i n 3 2 _ L o g i c a l D i s k "   T Y P E = " u i n t 3 2 " > < Q U A L I F I E R   N A M E = " C I M T Y P E "   P R O P A G A T E D = " t r u e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > < V A L U E > u i n t 3 2 < / V A L U E > < / Q U A L I F I E R > < V A L U E > 1 2 < / V A L U E > < / P R O P E R T Y > < P R O P E R T Y   N A M E = " N a m e "   C L A S S O R I G I N = " C I M _ M a n a g e d S y s t e m E l e m e n t "   T Y P E = " s t r i n g " > < Q U A L I F I E R   N A M E = " C I M T Y P E "   P R O P A G A T E D = " t r u e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > < V A L U E > s t r i n g < / V A L U E > < / Q U A L I F I E R > < V A L U E > C : < / V A L U E > < / P R O P E R T Y > < P R O P E R T Y   N A M E = " N u m b e r O f B l o c k s "   C L A S S O R I G I N = " C I M _ S t o r a g e E x t e n t "   P R O P A G A T E D = " t r u e "   T Y P E = " u i n t 6 4 " > < Q U A L I F I E R   N A M E = " C I M T Y P E "   P R O P A G A T E D = " t r u e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > < V A L U E > u i n t 6 4 < / V A L U E > < / Q U A L I F I E R > < / P R O P E R T Y > < P R O P E R T Y   N A M E = " P N P D e v i c e I D "   C L A S S O R I G I N = " C I M _ L o g i c a l D e v i c e "   P R O P A G A T E D = " t r u e "   T Y P E = " s t r i n g " > < Q U A L I F I E R   N A M E = " C I M T Y P E "   P R O P A G A T E D = " t r u e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > < V A L U E > s t r i n g < / V A L U E > < / Q U A L I F I E R > < / P R O P E R T Y > < P R O P E R T Y . A R R A Y   N A M E = " P o w e r M a n a g e m e n t C a p a b i l i t i e s "   C L A S S O R I G I N = " C I M _ L o g i c a l D e v i c e "   P R O P A G A T E D = " t r u e "   T Y P E = " u i n t 1 6 " > < Q U A L I F I E R   N A M E = " C I M T Y P E "   P R O P A G A T E D = " t r u e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > < V A L U E > u i n t 1 6 < / V A L U E > < / Q U A L I F I E R > < / P R O P E R T Y . A R R A Y > < P R O P E R T Y   N A M E = " P o w e r M a n a g e m e n t S u p p o r t e d "   C L A S S O R I G I N = " C I M _ L o g i c a l D e v i c e "   P R O P A G A T E D = " t r u e "   T Y P E = " b o o l e a n " > < Q U A L I F I E R   N A M E = " C I M T Y P E "   P R O P A G A T E D = " t r u e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > < V A L U E > b o o l e a n < / V A L U E > < / Q U A L I F I E R > < / P R O P E R T Y > < P R O P E R T Y   N A M E = " P r o v i d e r N a m e "   C L A S S O R I G I N = " W i n 3 2 _ L o g i c a l D i s k "   P R O P A G A T E D = " t r u e "   T Y P E = " s t r i n g " > < Q U A L I F I E R   N A M E = " C I M T Y P E "   P R O P A G A T E D = " t r u e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > < V A L U E > s t r i n g < / V A L U E > < / Q U A L I F I E R > < / P R O P E R T Y > < P R O P E R T Y   N A M E = " P u r p o s e "   C L A S S O R I G I N = " C I M _ S t o r a g e E x t e n t "   P R O P A G A T E D = " t r u e "   T Y P E = " s t r i n g " > < Q U A L I F I E R   N A M E = " C I M T Y P E "   P R O P A G A T E D = " t r u e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > < V A L U E > s t r i n g < / V A L U E > < / Q U A L I F I E R > < / P R O P E R T Y > < P R O P E R T Y   N A M E = " S i z e "   C L A S S O R I G I N = " C I M _ L o g i c a l D i s k "   T Y P E = " u i n t 6 4 " > < Q U A L I F I E R   N A M E = " C I M T Y P E "   P R O P A G A T E D = " t r u e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > < V A L U E > u i n t 6 4 < / V A L U E > < / Q U A L I F I E R > < V A L U E > 2 1 4 6 4 6 7 8 4 0 < / V A L U E > < / P R O P E R T Y > < P R O P E R T Y   N A M E = " S t a t u s "   C L A S S O R I G I N = " C I M _ M a n a g e d S y s t e m E l e m e n t "   P R O P A G A T E D = " t r u e "   T Y P E = " s t r i n g " > < Q U A L I F I E R   N A M E = " C I M T Y P E "   P R O P A G A T E D = " t r u e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > < V A L U E > s t r i n g < / V A L U E > < / Q U A L I F I E R > < / P R O P E R T Y > < P R O P E R T Y   N A M E = " S t a t u s I n f o "   C L A S S O R I G I N = " C I M _ L o g i c a l D e v i c e "   P R O P A G A T E D = " t r u e "   T Y P E = " u i n t 1 6 " > < Q U A L I F I E R   N A M E = " C I M T Y P E "   P R O P A G A T E D = " t r u e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > < V A L U E > u i n t 1 6 < / V A L U E > < / Q U A L I F I E R > < / P R O P E R T Y > < P R O P E R T Y   N A M E = " S u p p o r t s F i l e B a s e d C o m p r e s s i o n "   C L A S S O R I G I N = " W i n 3 2 _ L o g i c a l D i s k "   T Y P E = " b o o l e a n " > < Q U A L I F I E R   N A M E = " C I M T Y P E "   P R O P A G A T E D = " t r u e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > < V A L U E > b o o l e a n < / V A L U E > < / Q U A L I F I E R > < V A L U E > F A L S E < / V A L U E > < / P R O P E R T Y > < P R O P E R T Y   N A M E = " S y s t e m C r e a t i o n C l a s s N a m e "   C L A S S O R I G I N = " C I M _ L o g i c a l D e v i c e "   T Y P E = " s t r i n g " > < Q U A L I F I E R   N A M E = " C I M T Y P E "   P R O P A G A T E D = " t r u e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > < V A L U E > s t r i n g < / V A L U E > < / Q U A L I F I E R > < V A L U E > W i n 3 2 _ C o m p u t e r S y s t e m < / V A L U E > < / P R O P E R T Y > < P R O P E R T Y   N A M E = " S y s t e m N a m e "   C L A S S O R I G I N = " C I M _ L o g i c a l D e v i c e "   T Y P E = " s t r i n g " > < Q U A L I F I E R   N A M E = " C I M T Y P E "   P R O P A G A T E D = " t r u e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > < V A L U E > s t r i n g < / V A L U E > < / Q U A L I F I E R > < V A L U E > A L A N B O S 2 < / V A L U E > < / P R O P E R T Y > < P R O P E R T Y   N A M E = " V o l u m e N a m e "   C L A S S O R I G I N = " W i n 3 2 _ L o g i c a l D i s k "   T Y P E = " s t r i n g " > < Q U A L I F I E R   N A M E = " C I M T Y P E "   P R O P A G A T E D = " t r u e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > < V A L U E > s t r i n g < / V A L U E > < / Q U A L I F I E R > < V A L U E > S C Y L L A < / V A L U E > < / P R O P E R T Y > < P R O P E R T Y   N A M E = " V o l u m e S e r i a l N u m b e r "   C L A S S O R I G I N = " W i n 3 2 _ L o g i c a l D i s k "   T Y P E = " s t r i n g " > < Q U A L I F I E R   N A M E = " C I M T Y P E "   P R O P A G A T E D = " t r u e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > < V A L U E > s t r i n g < / V A L U E > < / Q U A L I F I E R > < V A L U E > C C 8 D B 3 1 B < / V A L U E > < / P R O P E R T Y > < / I N S T A N C E > < / V A L U E . O B J E C T > < / D E C L G R O U P > < / D E C L A R A T I O N > < / C I M > 
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\wmi\wbem\xmltransport\samples\diskviewer\diske.xml ===
< ? x m l   v e r s i o n = " 1 . 0 "   ? > < C I M   C I M V E R S I O N = " 2 . 0 "   D T D V E R S I O N = " 2 . 0 "   > < D E C L A R A T I O N > < D E C L G R O U P > < V A L U E . O B J E C T > < I N S T A N C E   C L A S S N A M E = " W i n 3 2 _ L o g i c a l D i s k " > < Q U A L I F I E R   N A M E = " d y n a m i c "   P R O P A G A T E D = " t r u e "   T Y P E = " b o o l e a n "   T O S U B C L A S S = " f a l s e "   T O I N S T A N C E = " t r u e " > < V A L U E > T R U E < / V A L U E > < / Q U A L I F I E R > < Q U A L I F I E R   N A M E = " L o c a l e "   P R O P A G A T E D = " t r u e "   T Y P E = " s i n t 3 2 "   T O S U B C L A S S = " f a l s e "   T O I N S T A N C E = " t r u e " > < V A L U E > 1 0 3 3 < / V A L U E > < / Q U A L I F I E R > < Q U A L I F I E R   N A M E = " p r o v i d e r "   P R O P A G A T E D = " t r u e "   T Y P E = " s t r i n g "   T O S U B C L A S S = " f a l s e "   T O I N S T A N C E = " t r u e " > < V A L U E > C I M W i n 3 2 < / V A L U E > < / Q U A L I F I E R > < Q U A L I F I E R   N A M E = " U U I D "   P R O P A G A T E D = " t r u e "   T Y P E = " s t r i n g "   T O S U B C L A S S = " f a l s e "   T O I N S T A N C E = " t r u e " > < V A L U E > { 8 5 0 2 C 4 B 7 - 5 F B B - 1 1 D 2 - A A C 1 - 0 0 6 0 0 8 C 7 8 B C 7 } < / V A L U E > < / Q U A L I F I E R > < P R O P E R T Y   N A M E = " A c c e s s "   C L A S S O R I G I N = " C I M _ S t o r a g e E x t e n t "   P R O P A G A T E D = " t r u e "   T Y P E = " u i n t 1 6 " > < Q U A L I F I E R   N A M E = " C I M T Y P E "   P R O P A G A T E D = " t r u e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > < V A L U E > u i n t 1 6 < / V A L U E > < / Q U A L I F I E R > < / P R O P E R T Y > < P R O P E R T Y   N A M E = " A v a i l a b i l i t y "   C L A S S O R I G I N = " C I M _ L o g i c a l D e v i c e "   P R O P A G A T E D = " t r u e "   T Y P E = " u i n t 1 6 " > < Q U A L I F I E R   N A M E = " C I M T Y P E "   P R O P A G A T E D = " t r u e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > < V A L U E > u i n t 1 6 < / V A L U E > < / Q U A L I F I E R > < / P R O P E R T Y > < P R O P E R T Y   N A M E = " B l o c k S i z e "   C L A S S O R I G I N = " C I M _ S t o r a g e E x t e n t "   P R O P A G A T E D = " t r u e "   T Y P E = " u i n t 6 4 " > < Q U A L I F I E R   N A M E = " C I M T Y P E "   P R O P A G A T E D = " t r u e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > < V A L U E > u i n t 6 4 < / V A L U E > < / Q U A L I F I E R > < / P R O P E R T Y > < P R O P E R T Y   N A M E = " C a p t i o n "   C L A S S O R I G I N = " C I M _ M a n a g e d S y s t e m E l e m e n t "   T Y P E = " s t r i n g " > < Q U A L I F I E R   N A M E = " C I M T Y P E "   P R O P A G A T E D = " t r u e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > < V A L U E > s t r i n g < / V A L U E > < / Q U A L I F I E R > < V A L U E > e : < / V A L U E > < / P R O P E R T Y > < P R O P E R T Y   N A M E = " C o m p r e s s e d "   C L A S S O R I G I N = " W i n 3 2 _ L o g i c a l D i s k "   T Y P E = " b o o l e a n " > < Q U A L I F I E R   N A M E = " C I M T Y P E "   P R O P A G A T E D = " t r u e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > < V A L U E > b o o l e a n < / V A L U E > < / Q U A L I F I E R > < V A L U E > F A L S E < / V A L U E > < / P R O P E R T Y > < P R O P E R T Y   N A M E = " C o n f i g M a n a g e r E r r o r C o d e "   C L A S S O R I G I N = " C I M _ L o g i c a l D e v i c e "   P R O P A G A T E D = " t r u e "   T Y P E = " u i n t 3 2 " > < Q U A L I F I E R   N A M E = " C I M T Y P E "   P R O P A G A T E D = " t r u e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > < V A L U E > u i n t 3 2 < / V A L U E > < / Q U A L I F I E R > < / P R O P E R T Y > < P R O P E R T Y   N A M E = " C o n f i g M a n a g e r U s e r C o n f i g "   C L A S S O R I G I N = " C I M _ L o g i c a l D e v i c e "   P R O P A G A T E D = " t r u e "   T Y P E = " b o o l e a n " > < Q U A L I F I E R   N A M E = " C I M T Y P E "   P R O P A G A T E D = " t r u e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > < V A L U E > b o o l e a n < / V A L U E > < / Q U A L I F I E R > < / P R O P E R T Y > < P R O P E R T Y   N A M E = " C r e a t i o n C l a s s N a m e "   C L A S S O R I G I N = " C I M _ L o g i c a l D e v i c e "   T Y P E = " s t r i n g " > < Q U A L I F I E R   N A M E = " C I M T Y P E "   P R O P A G A T E D = " t r u e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > < V A L U E > s t r i n g < / V A L U E > < / Q U A L I F I E R > < V A L U E > W i n 3 2 _ L o g i c a l D i s k < / V A L U E > < / P R O P E R T Y > < P R O P E R T Y   N A M E = " D e s c r i p t i o n "   C L A S S O R I G I N = " C I M _ M a n a g e d S y s t e m E l e m e n t "   T Y P E = " s t r i n g " > < Q U A L I F I E R   N A M E = " C I M T Y P E "   P R O P A G A T E D = " t r u e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > < V A L U E > s t r i n g < / V A L U E > < / Q U A L I F I E R > < V A L U E > C D - R O M   D i s c < / V A L U E > < / P R O P E R T Y > < P R O P E R T Y   N A M E = " D e v i c e I D "   C L A S S O R I G I N = " C I M _ L o g i c a l D e v i c e "   T Y P E = " s t r i n g " > < Q U A L I F I E R   N A M E = " C I M T Y P E "   P R O P A G A T E D = " t r u e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > < V A L U E > s t r i n g < / V A L U E > < / Q U A L I F I E R > < Q U A L I F I E R   N A M E = " k e y "   P R O P A G A T E D = " t r u e "   T Y P E = " b o o l e a n "   O V E R R I D A B L E = " f a l s e "   T O I N S T A N C E = " t r u e " > < V A L U E > T R U E < / V A L U E > < / Q U A L I F I E R > < V A L U E > e : < / V A L U E > < / P R O P E R T Y > < P R O P E R T Y   N A M E = " D r i v e T y p e "   C L A S S O R I G I N = " W i n 3 2 _ L o g i c a l D i s k "   T Y P E = " u i n t 3 2 " > < Q U A L I F I E R   N A M E = " C I M T Y P E "   P R O P A G A T E D = " t r u e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > < V A L U E > u i n t 3 2 < / V A L U E > < / Q U A L I F I E R > < V A L U E > 5 < / V A L U E > < / P R O P E R T Y > < P R O P E R T Y   N A M E = " E r r o r C l e a r e d "   C L A S S O R I G I N = " C I M _ L o g i c a l D e v i c e "   P R O P A G A T E D = " t r u e "   T Y P E = " b o o l e a n " > < Q U A L I F I E R   N A M E = " C I M T Y P E "   P R O P A G A T E D = " t r u e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > < V A L U E > b o o l e a n < / V A L U E > < / Q U A L I F I E R > < / P R O P E R T Y > < P R O P E R T Y   N A M E = " E r r o r D e s c r i p t i o n "   C L A S S O R I G I N = " C I M _ L o g i c a l D e v i c e "   P R O P A G A T E D = " t r u e "   T Y P E = " s t r i n g " > < Q U A L I F I E R   N A M E = " C I M T Y P E "   P R O P A G A T E D = " t r u e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > < V A L U E > s t r i n g < / V A L U E > < / Q U A L I F I E R > < / P R O P E R T Y > < P R O P E R T Y   N A M E = " E r r o r M e t h o d o l o g y "   C L A S S O R I G I N = " C I M _ S t o r a g e E x t e n t "   P R O P A G A T E D = " t r u e "   T Y P E = " s t r i n g " > < Q U A L I F I E R   N A M E = " C I M T Y P E "   P R O P A G A T E D = " t r u e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > < V A L U E > s t r i n g < / V A L U E > < / Q U A L I F I E R > < / P R O P E R T Y > < P R O P E R T Y   N A M E = " F i l e S y s t e m "   C L A S S O R I G I N = " W i n 3 2 _ L o g i c a l D i s k "   T Y P E = " s t r i n g " > < Q U A L I F I E R   N A M E = " C I M T Y P E "   P R O P A G A T E D = " t r u e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > < V A L U E > s t r i n g < / V A L U E > < / Q U A L I F I E R > < V A L U E > C D F S < / V A L U E > < / P R O P E R T Y > < P R O P E R T Y   N A M E = " F r e e S p a c e "   C L A S S O R I G I N = " C I M _ L o g i c a l D i s k "   T Y P E = " u i n t 6 4 " > < Q U A L I F I E R   N A M E = " C I M T Y P E "   P R O P A G A T E D = " t r u e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > < V A L U E > u i n t 6 4 < / V A L U E > < / Q U A L I F I E R > < V A L U E > 0 < / V A L U E > < / P R O P E R T Y > < P R O P E R T Y   N A M E = " I n s t a l l D a t e "   C L A S S O R I G I N = " C I M _ M a n a g e d S y s t e m E l e m e n t "   P R O P A G A T E D = " t r u e "   T Y P E = " d a t e t i m e " > < Q U A L I F I E R   N A M E = " C I M T Y P E "   P R O P A G A T E D = " t r u e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > < V A L U E > d a t e t i m e < / V A L U E > < / Q U A L I F I E R > < / P R O P E R T Y > < P R O P E R T Y   N A M E = " L a s t E r r o r C o d e "   C L A S S O R I G I N = " C I M _ L o g i c a l D e v i c e "   P R O P A G A T E D = " t r u e "   T Y P E = " u i n t 3 2 " > < Q U A L I F I E R   N A M E = " C I M T Y P E "   P R O P A G A T E D = " t r u e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > < V A L U E > u i n t 3 2 < / V A L U E > < / Q U A L I F I E R > < / P R O P E R T Y > < P R O P E R T Y   N A M E = " M a x i m u m C o m p o n e n t L e n g t h "   C L A S S O R I G I N = " W i n 3 2 _ L o g i c a l D i s k "   T Y P E = " u i n t 3 2 " > < Q U A L I F I E R   N A M E = " C I M T Y P E "   P R O P A G A T E D = " t r u e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > < V A L U E > u i n t 3 2 < / V A L U E > < / Q U A L I F I E R > < V A L U E > 2 2 1 < / V A L U E > < / P R O P E R T Y > < P R O P E R T Y   N A M E = " M e d i a T y p e "   C L A S S O R I G I N = " W i n 3 2 _ L o g i c a l D i s k "   T Y P E = " u i n t 3 2 " > < Q U A L I F I E R   N A M E = " C I M T Y P E "   P R O P A G A T E D = " t r u e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > < V A L U E > u i n t 3 2 < / V A L U E > < / Q U A L I F I E R > < V A L U E > 1 1 < / V A L U E > < / P R O P E R T Y > < P R O P E R T Y   N A M E = " N a m e "   C L A S S O R I G I N = " C I M _ M a n a g e d S y s t e m E l e m e n t "   T Y P E = " s t r i n g " > < Q U A L I F I E R   N A M E = " C I M T Y P E "   P R O P A G A T E D = " t r u e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > < V A L U E > s t r i n g < / V A L U E > < / Q U A L I F I E R > < V A L U E > e : < / V A L U E > < / P R O P E R T Y > < P R O P E R T Y   N A M E = " N u m b e r O f B l o c k s "   C L A S S O R I G I N = " C I M _ S t o r a g e E x t e n t "   P R O P A G A T E D = " t r u e "   T Y P E = " u i n t 6 4 " > < Q U A L I F I E R   N A M E = " C I M T Y P E "   P R O P A G A T E D = " t r u e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > < V A L U E > u i n t 6 4 < / V A L U E > < / Q U A L I F I E R > < / P R O P E R T Y > < P R O P E R T Y   N A M E = " P N P D e v i c e I D "   C L A S S O R I G I N = " C I M _ L o g i c a l D e v i c e "   P R O P A G A T E D = " t r u e "   T Y P E = " s t r i n g " > < Q U A L I F I E R   N A M E = " C I M T Y P E "   P R O P A G A T E D = " t r u e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > < V A L U E > s t r i n g < / V A L U E > < / Q U A L I F I E R > < / P R O P E R T Y > < P R O P E R T Y . A R R A Y   N A M E = " P o w e r M a n a g e m e n t C a p a b i l i t i e s "   C L A S S O R I G I N = " C I M _ L o g i c a l D e v i c e "   P R O P A G A T E D = " t r u e "   T Y P E = " u i n t 1 6 " > < Q U A L I F I E R   N A M E = " C I M T Y P E "   P R O P A G A T E D = " t r u e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > < V A L U E > u i n t 1 6 < / V A L U E > < / Q U A L I F I E R > < / P R O P E R T Y . A R R A Y > < P R O P E R T Y   N A M E = " P o w e r M a n a g e m e n t S u p p o r t e d "   C L A S S O R I G I N = " C I M _ L o g i c a l D e v i c e "   P R O P A G A T E D = " t r u e "   T Y P E = " b o o l e a n " > < Q U A L I F I E R   N A M E = " C I M T Y P E "   P R O P A G A T E D = " t r u e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > < V A L U E > b o o l e a n < / V A L U E > < / Q U A L I F I E R > < / P R O P E R T Y > < P R O P E R T Y   N A M E = " P r o v i d e r N a m e "   C L A S S O R I G I N = " W i n 3 2 _ L o g i c a l D i s k "   P R O P A G A T E D = " t r u e "   T Y P E = " s t r i n g " > < Q U A L I F I E R   N A M E = " C I M T Y P E "   P R O P A G A T E D = " t r u e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > < V A L U E > s t r i n g < / V A L U E > < / Q U A L I F I E R > < / P R O P E R T Y > < P R O P E R T Y   N A M E = " P u r p o s e "   C L A S S O R I G I N = " C I M _ S t o r a g e E x t e n t "   P R O P A G A T E D = " t r u e "   T Y P E = " s t r i n g " > < Q U A L I F I E R   N A M E = " C I M T Y P E "   P R O P A G A T E D = " t r u e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > < V A L U E > s t r i n g < / V A L U E > < / Q U A L I F I E R > < / P R O P E R T Y > < P R O P E R T Y   N A M E = " S i z e "   C L A S S O R I G I N = " C I M _ L o g i c a l D i s k "   T Y P E = " u i n t 6 4 " > < Q U A L I F I E R   N A M E = " C I M T Y P E "   P R O P A G A T E D = " t r u e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > < V A L U E > u i n t 6 4 < / V A L U E > < / Q U A L I F I E R > < V A L U E > 0 < / V A L U E > < / P R O P E R T Y > < P R O P E R T Y   N A M E = " S t a t u s "   C L A S S O R I G I N = " C I M _ M a n a g e d S y s t e m E l e m e n t "   P R O P A G A T E D = " t r u e "   T Y P E = " s t r i n g " > < Q U A L I F I E R   N A M E = " C I M T Y P E "   P R O P A G A T E D = " t r u e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > < V A L U E > s t r i n g < / V A L U E > < / Q U A L I F I E R > < / P R O P E R T Y > < P R O P E R T Y   N A M E = " S t a t u s I n f o "   C L A S S O R I G I N = " C I M _ L o g i c a l D e v i c e "   P R O P A G A T E D = " t r u e "   T Y P E = " u i n t 1 6 " > < Q U A L I F I E R   N A M E = " C I M T Y P E "   P R O P A G A T E D = " t r u e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > < V A L U E > u i n t 1 6 < / V A L U E > < / Q U A L I F I E R > < / P R O P E R T Y > < P R O P E R T Y   N A M E = " S u p p o r t s F i l e B a s e d C o m p r e s s i o n "   C L A S S O R I G I N = " W i n 3 2 _ L o g i c a l D i s k "   T Y P E = " b o o l e a n " > < Q U A L I F I E R   N A M E = " C I M T Y P E "   P R O P A G A T E D = " t r u e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > < V A L U E > b o o l e a n < / V A L U E > < / Q U A L I F I E R > < V A L U E > F A L S E < / V A L U E > < / P R O P E R T Y > < P R O P E R T Y   N A M E = " S y s t e m C r e a t i o n C l a s s N a m e "   C L A S S O R I G I N = " C I M _ L o g i c a l D e v i c e "   T Y P E = " s t r i n g " > < Q U A L I F I E R   N A M E = " C I M T Y P E "   P R O P A G A T E D = " t r u e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > < V A L U E > s t r i n g < / V A L U E > < / Q U A L I F I E R > < V A L U E > W i n 3 2 _ C o m p u t e r S y s t e m < / V A L U E > < / P R O P E R T Y > < P R O P E R T Y   N A M E = " S y s t e m N a m e "   C L A S S O R I G I N = " C I M _ L o g i c a l D e v i c e "   T Y P E = " s t r i n g " > < Q U A L I F I E R   N A M E = " C I M T Y P E "   P R O P A G A T E D = " t r u e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > < V A L U E > s t r i n g < / V A L U E > < / Q U A L I F I E R > < V A L U E > A L A N B O S 2 < / V A L U E > < / P R O P E R T Y > < P R O P E R T Y   N A M E = " V o l u m e N a m e "   C L A S S O R I G I N = " W i n 3 2 _ L o g i c a l D i s k "   T Y P E = " s t r i n g " > < Q U A L I F I E R   N A M E = " C I M T Y P E "   P R O P A G A T E D = " t r u e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > < V A L U E > s t r i n g < / V A L U E > < / Q U A L I F I E R > < V A L U E > A u d i o   C D < / V A L U E > < / P R O P E R T Y > < P R O P E R T Y   N A M E = " V o l u m e S e r i a l N u m b e r "   C L A S S O R I G I N = " W i n 3 2 _ L o g i c a l D i s k "   T Y P E = " s t r i n g " > < Q U A L I F I E R   N A M E = " C I M T Y P E "   P R O P A G A T E D = " t r u e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > < V A L U E > s t r i n g < / V A L U E > < / Q U A L I F I E R > < V A L U E > 0 2 1 E 3 B F F < / V A L U E > < / P R O P E R T Y > < / I N S T A N C E > < / V A L U E . O B J E C T > < / D E C L G R O U P > < / D E C L A R A T I O N > < / C I M > 
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\wmi\wbem\xmltransport\samples\diskviewer\diska.xml ===
< ? x m l   v e r s i o n = " 1 . 0 "   ? > < C I M   C I M V E R S I O N = " 2 . 0 "   D T D V E R S I O N = " 2 . 0 "   > < D E C L A R A T I O N > < D E C L G R O U P > < V A L U E . O B J E C T > < I N S T A N C E   C L A S S N A M E = " W i n 3 2 _ L o g i c a l D i s k " > < Q U A L I F I E R   N A M E = " d y n a m i c "   P R O P A G A T E D = " t r u e "   T Y P E = " b o o l e a n "   T O S U B C L A S S = " f a l s e "   T O I N S T A N C E = " t r u e " > < V A L U E > T R U E < / V A L U E > < / Q U A L I F I E R > < Q U A L I F I E R   N A M E = " L o c a l e "   P R O P A G A T E D = " t r u e "   T Y P E = " s i n t 3 2 "   T O S U B C L A S S = " f a l s e "   T O I N S T A N C E = " t r u e " > < V A L U E > 1 0 3 3 < / V A L U E > < / Q U A L I F I E R > < Q U A L I F I E R   N A M E = " p r o v i d e r "   P R O P A G A T E D = " t r u e "   T Y P E = " s t r i n g "   T O S U B C L A S S = " f a l s e "   T O I N S T A N C E = " t r u e " > < V A L U E > C I M W i n 3 2 < / V A L U E > < / Q U A L I F I E R > < Q U A L I F I E R   N A M E = " U U I D "   P R O P A G A T E D = " t r u e "   T Y P E = " s t r i n g "   T O S U B C L A S S = " f a l s e "   T O I N S T A N C E = " t r u e " > < V A L U E > { 8 5 0 2 C 4 B 7 - 5 F B B - 1 1 D 2 - A A C 1 - 0 0 6 0 0 8 C 7 8 B C 7 } < / V A L U E > < / Q U A L I F I E R > < P R O P E R T Y   N A M E = " A c c e s s "   C L A S S O R I G I N = " C I M _ S t o r a g e E x t e n t "   P R O P A G A T E D = " t r u e "   T Y P E = " u i n t 1 6 " > < Q U A L I F I E R   N A M E = " C I M T Y P E "   P R O P A G A T E D = " t r u e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > < V A L U E > u i n t 1 6 < / V A L U E > < / Q U A L I F I E R > < / P R O P E R T Y > < P R O P E R T Y   N A M E = " A v a i l a b i l i t y "   C L A S S O R I G I N = " C I M _ L o g i c a l D e v i c e "   P R O P A G A T E D = " t r u e "   T Y P E = " u i n t 1 6 " > < Q U A L I F I E R   N A M E = " C I M T Y P E "   P R O P A G A T E D = " t r u e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > < V A L U E > u i n t 1 6 < / V A L U E > < / Q U A L I F I E R > < / P R O P E R T Y > < P R O P E R T Y   N A M E = " B l o c k S i z e "   C L A S S O R I G I N = " C I M _ S t o r a g e E x t e n t "   P R O P A G A T E D = " t r u e "   T Y P E = " u i n t 6 4 " > < Q U A L I F I E R   N A M E = " C I M T Y P E "   P R O P A G A T E D = " t r u e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > < V A L U E > u i n t 6 4 < / V A L U E > < / Q U A L I F I E R > < / P R O P E R T Y > < P R O P E R T Y   N A M E = " C a p t i o n "   C L A S S O R I G I N = " C I M _ M a n a g e d S y s t e m E l e m e n t "   T Y P E = " s t r i n g " > < Q U A L I F I E R   N A M E = " C I M T Y P E "   P R O P A G A T E D = " t r u e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > < V A L U E > s t r i n g < / V A L U E > < / Q U A L I F I E R > < V A L U E > A : < / V A L U E > < / P R O P E R T Y > < P R O P E R T Y   N A M E = " C o m p r e s s e d "   C L A S S O R I G I N = " W i n 3 2 _ L o g i c a l D i s k "   T Y P E = " b o o l e a n " > < Q U A L I F I E R   N A M E = " C I M T Y P E "   P R O P A G A T E D = " t r u e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > < V A L U E > b o o l e a n < / V A L U E > < / Q U A L I F I E R > < V A L U E > F A L S E < / V A L U E > < / P R O P E R T Y > < P R O P E R T Y   N A M E = " C o n f i g M a n a g e r E r r o r C o d e "   C L A S S O R I G I N = " C I M _ L o g i c a l D e v i c e "   P R O P A G A T E D = " t r u e "   T Y P E = " u i n t 3 2 " > < Q U A L I F I E R   N A M E = " C I M T Y P E "   P R O P A G A T E D = " t r u e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > < V A L U E > u i n t 3 2 < / V A L U E > < / Q U A L I F I E R > < / P R O P E R T Y > < P R O P E R T Y   N A M E = " C o n f i g M a n a g e r U s e r C o n f i g "   C L A S S O R I G I N = " C I M _ L o g i c a l D e v i c e "   P R O P A G A T E D = " t r u e "   T Y P E = " b o o l e a n " > < Q U A L I F I E R   N A M E = " C I M T Y P E "   P R O P A G A T E D = " t r u e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > < V A L U E > b o o l e a n < / V A L U E > < / Q U A L I F I E R > < / P R O P E R T Y > < P R O P E R T Y   N A M E = " C r e a t i o n C l a s s N a m e "   C L A S S O R I G I N = " C I M _ L o g i c a l D e v i c e "   T Y P E = " s t r i n g " > < Q U A L I F I E R   N A M E = " C I M T Y P E "   P R O P A G A T E D = " t r u e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > < V A L U E > s t r i n g < / V A L U E > < / Q U A L I F I E R > < V A L U E > W i n 3 2 _ L o g i c a l D i s k < / V A L U E > < / P R O P E R T Y > < P R O P E R T Y   N A M E = " D e s c r i p t i o n "   C L A S S O R I G I N = " C I M _ M a n a g e d S y s t e m E l e m e n t "   T Y P E = " s t r i n g " > < Q U A L I F I E R   N A M E = " C I M T Y P E "   P R O P A G A T E D = " t r u e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > < V A L U E > s t r i n g < / V A L U E > < / Q U A L I F I E R > < V A L U E > 3   1 / 2   I n c h   F l o p p y   D r i v e < / V A L U E > < / P R O P E R T Y > < P R O P E R T Y   N A M E = " D e v i c e I D "   C L A S S O R I G I N = " C I M _ L o g i c a l D e v i c e "   T Y P E = " s t r i n g " > < Q U A L I F I E R   N A M E = " C I M T Y P E "   P R O P A G A T E D = " t r u e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > < V A L U E > s t r i n g < / V A L U E > < / Q U A L I F I E R > < Q U A L I F I E R   N A M E = " k e y "   P R O P A G A T E D = " t r u e "   T Y P E = " b o o l e a n "   O V E R R I D A B L E = " f a l s e "   T O I N S T A N C E = " t r u e " > < V A L U E > T R U E < / V A L U E > < / Q U A L I F I E R > < V A L U E > A : < / V A L U E > < / P R O P E R T Y > < P R O P E R T Y   N A M E = " D r i v e T y p e "   C L A S S O R I G I N = " W i n 3 2 _ L o g i c a l D i s k "   T Y P E = " u i n t 3 2 " > < Q U A L I F I E R   N A M E = " C I M T Y P E "   P R O P A G A T E D = " t r u e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > < V A L U E > u i n t 3 2 < / V A L U E > < / Q U A L I F I E R > < V A L U E > 2 < / V A L U E > < / P R O P E R T Y > < P R O P E R T Y   N A M E = " E r r o r C l e a r e d "   C L A S S O R I G I N = " C I M _ L o g i c a l D e v i c e "   P R O P A G A T E D = " t r u e "   T Y P E = " b o o l e a n " > < Q U A L I F I E R   N A M E = " C I M T Y P E "   P R O P A G A T E D = " t r u e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > < V A L U E > b o o l e a n < / V A L U E > < / Q U A L I F I E R > < / P R O P E R T Y > < P R O P E R T Y   N A M E = " E r r o r D e s c r i p t i o n "   C L A S S O R I G I N = " C I M _ L o g i c a l D e v i c e "   P R O P A G A T E D = " t r u e "   T Y P E = " s t r i n g " > < Q U A L I F I E R   N A M E = " C I M T Y P E "   P R O P A G A T E D = " t r u e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > < V A L U E > s t r i n g < / V A L U E > < / Q U A L I F I E R > < / P R O P E R T Y > < P R O P E R T Y   N A M E = " E r r o r M e t h o d o l o g y "   C L A S S O R I G I N = " C I M _ S t o r a g e E x t e n t "   P R O P A G A T E D = " t r u e "   T Y P E = " s t r i n g " > < Q U A L I F I E R   N A M E = " C I M T Y P E "   P R O P A G A T E D = " t r u e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > < V A L U E > s t r i n g < / V A L U E > < / Q U A L I F I E R > < / P R O P E R T Y > < P R O P E R T Y   N A M E = " F i l e S y s t e m "   C L A S S O R I G I N = " W i n 3 2 _ L o g i c a l D i s k "   T Y P E = " s t r i n g " > < Q U A L I F I E R   N A M E = " C I M T Y P E "   P R O P A G A T E D = " t r u e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > < V A L U E > s t r i n g < / V A L U E > < / Q U A L I F I E R > < V A L U E > F A T < / V A L U E > < / P R O P E R T Y > < P R O P E R T Y   N A M E = " F r e e S p a c e "   C L A S S O R I G I N = " C I M _ L o g i c a l D i s k "   T Y P E = " u i n t 6 4 " > < Q U A L I F I E R   N A M E = " C I M T Y P E "   P R O P A G A T E D = " t r u e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > < V A L U E > u i n t 6 4 < / V A L U E > < / Q U A L I F I E R > < V A L U E > 1 4 1 0 5 6 0 < / V A L U E > < / P R O P E R T Y > < P R O P E R T Y   N A M E = " I n s t a l l D a t e "   C L A S S O R I G I N = " C I M _ M a n a g e d S y s t e m E l e m e n t "   P R O P A G A T E D = " t r u e "   T Y P E = " d a t e t i m e " > < Q U A L I F I E R   N A M E = " C I M T Y P E "   P R O P A G A T E D = " t r u e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > < V A L U E > d a t e t i m e < / V A L U E > < / Q U A L I F I E R > < / P R O P E R T Y > < P R O P E R T Y   N A M E = " L a s t E r r o r C o d e "   C L A S S O R I G I N = " C I M _ L o g i c a l D e v i c e "   P R O P A G A T E D = " t r u e "   T Y P E = " u i n t 3 2 " > < Q U A L I F I E R   N A M E = " C I M T Y P E "   P R O P A G A T E D = " t r u e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > < V A L U E > u i n t 3 2 < / V A L U E > < / Q U A L I F I E R > < / P R O P E R T Y > < P R O P E R T Y   N A M E = " M a x i m u m C o m p o n e n t L e n g t h "   C L A S S O R I G I N = " W i n 3 2 _ L o g i c a l D i s k "   T Y P E = " u i n t 3 2 " > < Q U A L I F I E R   N A M E = " C I M T Y P E "   P R O P A G A T E D = " t r u e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > < V A L U E > u i n t 3 2 < / V A L U E > < / Q U A L I F I E R > < V A L U E > 2 5 5 < / V A L U E > < / P R O P E R T Y > < P R O P E R T Y   N A M E = " M e d i a T y p e "   C L A S S O R I G I N = " W i n 3 2 _ L o g i c a l D i s k "   T Y P E = " u i n t 3 2 " > < Q U A L I F I E R   N A M E = " C I M T Y P E "   P R O P A G A T E D = " t r u e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > < V A L U E > u i n t 3 2 < / V A L U E > < / Q U A L I F I E R > < V A L U E > 5 < / V A L U E > < / P R O P E R T Y > < P R O P E R T Y   N A M E = " N a m e "   C L A S S O R I G I N = " C I M _ M a n a g e d S y s t e m E l e m e n t "   T Y P E = " s t r i n g " > < Q U A L I F I E R   N A M E = " C I M T Y P E "   P R O P A G A T E D = " t r u e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > < V A L U E > s t r i n g < / V A L U E > < / Q U A L I F I E R > < V A L U E > A : < / V A L U E > < / P R O P E R T Y > < P R O P E R T Y   N A M E = " N u m b e r O f B l o c k s "   C L A S S O R I G I N = " C I M _ S t o r a g e E x t e n t "   P R O P A G A T E D = " t r u e "   T Y P E = " u i n t 6 4 " > < Q U A L I F I E R   N A M E = " C I M T Y P E "   P R O P A G A T E D = " t r u e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > < V A L U E > u i n t 6 4 < / V A L U E > < / Q U A L I F I E R > < / P R O P E R T Y > < P R O P E R T Y   N A M E = " P N P D e v i c e I D "   C L A S S O R I G I N = " C I M _ L o g i c a l D e v i c e "   P R O P A G A T E D = " t r u e "   T Y P E = " s t r i n g " > < Q U A L I F I E R   N A M E = " C I M T Y P E "   P R O P A G A T E D = " t r u e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > < V A L U E > s t r i n g < / V A L U E > < / Q U A L I F I E R > < / P R O P E R T Y > < P R O P E R T Y . A R R A Y   N A M E = " P o w e r M a n a g e m e n t C a p a b i l i t i e s "   C L A S S O R I G I N = " C I M _ L o g i c a l D e v i c e "   P R O P A G A T E D = " t r u e "   T Y P E = " u i n t 1 6 " > < Q U A L I F I E R   N A M E = " C I M T Y P E "   P R O P A G A T E D = " t r u e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > < V A L U E > u i n t 1 6 < / V A L U E > < / Q U A L I F I E R > < / P R O P E R T Y . A R R A Y > < P R O P E R T Y   N A M E = " P o w e r M a n a g e m e n t S u p p o r t e d "   C L A S S O R I G I N = " C I M _ L o g i c a l D e v i c e "   P R O P A G A T E D = " t r u e "   T Y P E = " b o o l e a n " > < Q U A L I F I E R   N A M E = " C I M T Y P E "   P R O P A G A T E D = " t r u e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > < V A L U E > b o o l e a n < / V A L U E > < / Q U A L I F I E R > < / P R O P E R T Y > < P R O P E R T Y   N A M E = " P r o v i d e r N a m e "   C L A S S O R I G I N = " W i n 3 2 _ L o g i c a l D i s k "   P R O P A G A T E D = " t r u e "   T Y P E = " s t r i n g " > < Q U A L I F I E R   N A M E = " C I M T Y P E "   P R O P A G A T E D = " t r u e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > < V A L U E > s t r i n g < / V A L U E > < / Q U A L I F I E R > < / P R O P E R T Y > < P R O P E R T Y   N A M E = " P u r p o s e "   C L A S S O R I G I N = " C I M _ S t o r a g e E x t e n t "   P R O P A G A T E D = " t r u e "   T Y P E = " s t r i n g " > < Q U A L I F I E R   N A M E = " C I M T Y P E "   P R O P A G A T E D = " t r u e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > < V A L U E > s t r i n g < / V A L U E > < / Q U A L I F I E R > < / P R O P E R T Y > < P R O P E R T Y   N A M E = " S i z e "   C L A S S O R I G I N = " C I M _ L o g i c a l D i s k "   T Y P E = " u i n t 6 4 " > < Q U A L I F I E R   N A M E = " C I M T Y P E "   P R O P A G A T E D = " t r u e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > < V A L U E > u i n t 6 4 < / V A L U E > < / Q U A L I F I E R > < V A L U E > 1 4 5 7 6 6 4 < / V A L U E > < / P R O P E R T Y > < P R O P E R T Y   N A M E = " S t a t u s "   C L A S S O R I G I N = " C I M _ M a n a g e d S y s t e m E l e m e n t "   P R O P A G A T E D = " t r u e "   T Y P E = " s t r i n g " > < Q U A L I F I E R   N A M E = " C I M T Y P E "   P R O P A G A T E D = " t r u e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > < V A L U E > s t r i n g < / V A L U E > < / Q U A L I F I E R > < / P R O P E R T Y > < P R O P E R T Y   N A M E = " S t a t u s I n f o "   C L A S S O R I G I N = " C I M _ L o g i c a l D e v i c e "   P R O P A G A T E D = " t r u e "   T Y P E = " u i n t 1 6 " > < Q U A L I F I E R   N A M E = " C I M T Y P E "   P R O P A G A T E D = " t r u e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > < V A L U E > u i n t 1 6 < / V A L U E > < / Q U A L I F I E R > < / P R O P E R T Y > < P R O P E R T Y   N A M E = " S u p p o r t s F i l e B a s e d C o m p r e s s i o n "   C L A S S O R I G I N = " W i n 3 2 _ L o g i c a l D i s k "   T Y P E = " b o o l e a n " > < Q U A L I F I E R   N A M E = " C I M T Y P E "   P R O P A G A T E D = " t r u e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > < V A L U E > b o o l e a n < / V A L U E > < / Q U A L I F I E R > < V A L U E > F A L S E < / V A L U E > < / P R O P E R T Y > < P R O P E R T Y   N A M E = " S y s t e m C r e a t i o n C l a s s N a m e "   C L A S S O R I G I N = " C I M _ L o g i c a l D e v i c e "   T Y P E = " s t r i n g " > < Q U A L I F I E R   N A M E = " C I M T Y P E "   P R O P A G A T E D = " t r u e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > < V A L U E > s t r i n g < / V A L U E > < / Q U A L I F I E R > < V A L U E > W i n 3 2 _ C o m p u t e r S y s t e m < / V A L U E > < / P R O P E R T Y > < P R O P E R T Y   N A M E = " S y s t e m N a m e "   C L A S S O R I G I N = " C I M _ L o g i c a l D e v i c e "   T Y P E = " s t r i n g " > < Q U A L I F I E R   N A M E = " C I M T Y P E "   P R O P A G A T E D = " t r u e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > < V A L U E > s t r i n g < / V A L U E > < / Q U A L I F I E R > < V A L U E > A L A N B O S 2 < / V A L U E > < / P R O P E R T Y > < P R O P E R T Y   N A M E = " V o l u m e N a m e "   C L A S S O R I G I N = " W i n 3 2 _ L o g i c a l D i s k "   T Y P E = " s t r i n g " > < Q U A L I F I E R   N A M E = " C I M T Y P E "   P R O P A G A T E D = " t r u e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > < V A L U E > s t r i n g < / V A L U E > < / Q U A L I F I E R > < V A L U E > < / V A L U E > < / P R O P E R T Y > < P R O P E R T Y   N A M E = " V o l u m e S e r i a l N u m b e r "   C L A S S O R I G I N = " W i n 3 2 _ L o g i c a l D i s k "   P R O P A G A T E D = " t r u e "   T Y P E = " s t r i n g " > < Q U A L I F I E R   N A M E = " C I M T Y P E "   P R O P A G A T E D = " t r u e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > < V A L U E > s t r i n g < / V A L U E > < / Q U A L I F I E R > < / P R O P E R T Y > < / I N S T A N C E > < / V A L U E . O B J E C T > < / D E C L G R O U P > < / D E C L A R A T I O N > < / C I M > 
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\wmi\wbem\xmltransport\samples\xmltest\diskd.xml ===
< ? x m l   v e r s i o n = " 1 . 0 "   ? > 
 
 < C I M   C I M V E R S I O N = " 2 . 0 "   D T D V E R S I O N = " 2 . 0 "   > 
 
 < D E C L A R A T I O N > 
 
 < D E C L G R O U P > 
 
 < I N S T A N C E   C L A S S N A M E = " W i n 3 2 _ L o g i c a l D i s k " > 
 
 < Q U A L I F I E R   N A M E = " d y n a m i c "   L O C A L = " f a l s e "   T Y P E = " b o o l e a n "   T O S U B C L A S S = " f a l s e "   T O I N S T A N C E = " t r u e " > 
 
 < V A L U E > T R U E < / V A L U E > 
 
 < / Q U A L I F I E R > 
 
 < Q U A L I F I E R   N A M E = " L o c a l e "   L O C A L = " f a l s e "   T Y P E = " s i n t 3 2 "   T O S U B C L A S S = " f a l s e "   T O I N S T A N C E = " t r u e " > 
 
 < V A L U E > 1 0 3 3 < / V A L U E > 
 
 < / Q U A L I F I E R > 
 
 < Q U A L I F I E R   N A M E = " p r o v i d e r "   L O C A L = " f a l s e "   T Y P E = " s t r i n g "   T O S U B C L A S S = " f a l s e "   T O I N S T A N C E = " t r u e " > 
 
 < V A L U E > < ! [ C D A T A [ C I M W i n 3 2 ] ] > < / V A L U E > 
 
 < / Q U A L I F I E R > 
 
 < Q U A L I F I E R   N A M E = " U U I D "   L O C A L = " f a l s e "   T Y P E = " s t r i n g "   T O S U B C L A S S = " f a l s e "   T O I N S T A N C E = " t r u e " > 
 
 < V A L U E > < ! [ C D A T A [ { 8 5 0 2 C 4 B 7 - 5 F B B - 1 1 D 2 - A A C 1 - 0 0 6 0 0 8 C 7 8 B C 7 } ] ] > < / V A L U E > 
 
 < / Q U A L I F I E R > 
 
 < P R O P E R T Y   N A M E = " A c c e s s "   C L A S S O R I G I N = " C I M _ S t o r a g e E x t e n t "   L O C A L = " t r u e "   T Y P E = " u i n t 1 6 " > 
 
 < Q U A L I F I E R   N A M E = " C I M T Y P E "   L O C A L = " f a l s e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > 
 
 < V A L U E > < ! [ C D A T A [ u i n t 1 6 ] ] > < / V A L U E > 
 
 < / Q U A L I F I E R > 
 
 < / P R O P E R T Y > 
 
 < P R O P E R T Y   N A M E = " A v a i l a b i l i t y "   C L A S S O R I G I N = " C I M _ L o g i c a l D e v i c e "   L O C A L = " t r u e "   T Y P E = " u i n t 1 6 " > 
 
 < Q U A L I F I E R   N A M E = " C I M T Y P E "   L O C A L = " f a l s e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > 
 
 < V A L U E > < ! [ C D A T A [ u i n t 1 6 ] ] > < / V A L U E > 
 
 < / Q U A L I F I E R > 
 
 < / P R O P E R T Y > 
 
 < P R O P E R T Y   N A M E = " B l o c k S i z e "   C L A S S O R I G I N = " C I M _ S t o r a g e E x t e n t "   L O C A L = " t r u e "   T Y P E = " u i n t 6 4 " > 
 
 < Q U A L I F I E R   N A M E = " C I M T Y P E "   L O C A L = " f a l s e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > 
 
 < V A L U E > < ! [ C D A T A [ u i n t 6 4 ] ] > < / V A L U E > 
 
 < / Q U A L I F I E R > 
 
 < / P R O P E R T Y > 
 
 < P R O P E R T Y   N A M E = " C a p t i o n "   C L A S S O R I G I N = " C I M _ M a n a g e d S y s t e m E l e m e n t "   L O C A L = " t r u e "   T Y P E = " s t r i n g " > 
 
 < Q U A L I F I E R   N A M E = " C I M T Y P E "   L O C A L = " f a l s e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > 
 
 < V A L U E > < ! [ C D A T A [ s t r i n g ] ] > < / V A L U E > 
 
 < / Q U A L I F I E R > 
 
 < V A L U E > < ! [ C D A T A [ d : ] ] > < / V A L U E > 
 
 
 
 < / P R O P E R T Y > 
 
 < P R O P E R T Y   N A M E = " C o m p r e s s e d "   C L A S S O R I G I N = " W i n 3 2 _ L o g i c a l D i s k "   L O C A L = " t r u e "   T Y P E = " b o o l e a n " > 
 
 < Q U A L I F I E R   N A M E = " C I M T Y P E "   L O C A L = " f a l s e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > 
 
 < V A L U E > < ! [ C D A T A [ b o o l e a n ] ] > < / V A L U E > 
 
 < / Q U A L I F I E R > 
 
 < V A L U E > F A L S E < / V A L U E > 
 
 
 
 < / P R O P E R T Y > 
 
 < P R O P E R T Y   N A M E = " C o n f i g M a n a g e r E r r o r C o d e "   C L A S S O R I G I N = " C I M _ L o g i c a l D e v i c e "   L O C A L = " t r u e "   T Y P E = " u i n t 3 2 " > 
 
 < Q U A L I F I E R   N A M E = " C I M T Y P E "   L O C A L = " f a l s e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > 
 
 < V A L U E > < ! [ C D A T A [ u i n t 3 2 ] ] > < / V A L U E > 
 
 < / Q U A L I F I E R > 
 
 < / P R O P E R T Y > 
 
 < P R O P E R T Y   N A M E = " C o n f i g M a n a g e r U s e r C o n f i g "   C L A S S O R I G I N = " C I M _ L o g i c a l D e v i c e "   L O C A L = " t r u e "   T Y P E = " b o o l e a n " > 
 
 < Q U A L I F I E R   N A M E = " C I M T Y P E "   L O C A L = " f a l s e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > 
 
 < V A L U E > < ! [ C D A T A [ b o o l e a n ] ] > < / V A L U E > 
 
 < / Q U A L I F I E R > 
 
 < / P R O P E R T Y > 
 
 < P R O P E R T Y   N A M E = " C r e a t i o n C l a s s N a m e "   C L A S S O R I G I N = " C I M _ L o g i c a l D e v i c e "   L O C A L = " t r u e "   T Y P E = " s t r i n g " > 
 
 < Q U A L I F I E R   N A M E = " C I M T Y P E "   L O C A L = " f a l s e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > 
 
 < V A L U E > < ! [ C D A T A [ s t r i n g ] ] > < / V A L U E > 
 
 < / Q U A L I F I E R > 
 
 < V A L U E > < ! [ C D A T A [ W i n 3 2 _ L o g i c a l D i s k ] ] > < / V A L U E > 
 
 
 
 < / P R O P E R T Y > 
 
 < P R O P E R T Y   N A M E = " D e s c r i p t i o n "   C L A S S O R I G I N = " C I M _ M a n a g e d S y s t e m E l e m e n t "   L O C A L = " t r u e "   T Y P E = " s t r i n g " > 
 
 < Q U A L I F I E R   N A M E = " C I M T Y P E "   L O C A L = " f a l s e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > 
 
 < V A L U E > < ! [ C D A T A [ s t r i n g ] ] > < / V A L U E > 
 
 < / Q U A L I F I E R > 
 
 < V A L U E > < ! [ C D A T A [ L o c a l   F i x e d   D i s k ] ] > < / V A L U E > 
 
 
 
 < / P R O P E R T Y > 
 
 < P R O P E R T Y   N A M E = " D e v i c e I D "   C L A S S O R I G I N = " C I M _ L o g i c a l D e v i c e "   L O C A L = " t r u e "   T Y P E = " s t r i n g " > 
 
 < Q U A L I F I E R   N A M E = " C I M T Y P E "   L O C A L = " f a l s e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > 
 
 < V A L U E > < ! [ C D A T A [ s t r i n g ] ] > < / V A L U E > 
 
 < / Q U A L I F I E R > 
 
 < Q U A L I F I E R   N A M E = " k e y "   L O C A L = " f a l s e "   T Y P E = " b o o l e a n "   O V E R R I D A B L E = " f a l s e "   T O I N S T A N C E = " t r u e " > 
 
 < V A L U E > T R U E < / V A L U E > 
 
 < / Q U A L I F I E R > 
 
 < V A L U E > < ! [ C D A T A [ d : ] ] > < / V A L U E > 
 
 
 
 < / P R O P E R T Y > 
 
 < P R O P E R T Y   N A M E = " D r i v e T y p e "   C L A S S O R I G I N = " W i n 3 2 _ L o g i c a l D i s k "   L O C A L = " t r u e "   T Y P E = " u i n t 3 2 " > 
 
 < Q U A L I F I E R   N A M E = " C I M T Y P E "   L O C A L = " f a l s e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > 
 
 < V A L U E > < ! [ C D A T A [ u i n t 3 2 ] ] > < / V A L U E > 
 
 < / Q U A L I F I E R > 
 
 < V A L U E > 3 < / V A L U E > 
 
 
 
 < / P R O P E R T Y > 
 
 < P R O P E R T Y   N A M E = " E r r o r C l e a r e d "   C L A S S O R I G I N = " C I M _ L o g i c a l D e v i c e "   L O C A L = " t r u e "   T Y P E = " b o o l e a n " > 
 
 < Q U A L I F I E R   N A M E = " C I M T Y P E "   L O C A L = " f a l s e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > 
 
 < V A L U E > < ! [ C D A T A [ b o o l e a n ] ] > < / V A L U E > 
 
 < / Q U A L I F I E R > 
 
 < / P R O P E R T Y > 
 
 < P R O P E R T Y   N A M E = " E r r o r D e s c r i p t i o n "   C L A S S O R I G I N = " C I M _ L o g i c a l D e v i c e "   L O C A L = " t r u e "   T Y P E = " s t r i n g " > 
 
 < Q U A L I F I E R   N A M E = " C I M T Y P E "   L O C A L = " f a l s e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > 
 
 < V A L U E > < ! [ C D A T A [ s t r i n g ] ] > < / V A L U E > 
 
 < / Q U A L I F I E R > 
 
 < / P R O P E R T Y > 
 
 < P R O P E R T Y   N A M E = " E r r o r M e t h o d o l o g y "   C L A S S O R I G I N = " C I M _ S t o r a g e E x t e n t "   L O C A L = " t r u e "   T Y P E = " s t r i n g " > 
 
 < Q U A L I F I E R   N A M E = " C I M T Y P E "   L O C A L = " f a l s e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > 
 
 < V A L U E > < ! [ C D A T A [ s t r i n g ] ] > < / V A L U E > 
 
 < / Q U A L I F I E R > 
 
 < / P R O P E R T Y > 
 
 < P R O P E R T Y   N A M E = " F i l e S y s t e m "   C L A S S O R I G I N = " W i n 3 2 _ L o g i c a l D i s k "   L O C A L = " t r u e "   T Y P E = " s t r i n g " > 
 
 < Q U A L I F I E R   N A M E = " C I M T Y P E "   L O C A L = " f a l s e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > 
 
 < V A L U E > < ! [ C D A T A [ s t r i n g ] ] > < / V A L U E > 
 
 < / Q U A L I F I E R > 
 
 < V A L U E > < ! [ C D A T A [ N T F S ] ] > < / V A L U E > 
 
 
 
 < / P R O P E R T Y > 
 
 < P R O P E R T Y   N A M E = " F r e e S p a c e "   C L A S S O R I G I N = " C I M _ L o g i c a l D i s k "   L O C A L = " t r u e "   T Y P E = " u i n t 6 4 " > 
 
 < Q U A L I F I E R   N A M E = " C I M T Y P E "   L O C A L = " f a l s e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > 
 
 < V A L U E > < ! [ C D A T A [ u i n t 6 4 ] ] > < / V A L U E > 
 
 < / Q U A L I F I E R > 
 
 < V A L U E > 8 8 8 3 2 4 0 9 6 < / V A L U E > 
 
 
 
 < / P R O P E R T Y > 
 
 < P R O P E R T Y   N A M E = " I n s t a l l D a t e "   C L A S S O R I G I N = " C I M _ M a n a g e d S y s t e m E l e m e n t "   L O C A L = " t r u e "   T Y P E = " d a t e t i m e " > 
 
 < Q U A L I F I E R   N A M E = " C I M T Y P E "   L O C A L = " f a l s e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > 
 
 < V A L U E > < ! [ C D A T A [ d a t e t i m e ] ] > < / V A L U E > 
 
 < / Q U A L I F I E R > 
 
 < / P R O P E R T Y > 
 
 < P R O P E R T Y   N A M E = " L a s t E r r o r C o d e "   C L A S S O R I G I N = " C I M _ L o g i c a l D e v i c e "   L O C A L = " t r u e "   T Y P E = " u i n t 3 2 " > 
 
 < Q U A L I F I E R   N A M E = " C I M T Y P E "   L O C A L = " f a l s e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > 
 
 < V A L U E > < ! [ C D A T A [ u i n t 3 2 ] ] > < / V A L U E > 
 
 < / Q U A L I F I E R > 
 
 < / P R O P E R T Y > 
 
 < P R O P E R T Y   N A M E = " M a x i m u m C o m p o n e n t L e n g t h "   C L A S S O R I G I N = " W i n 3 2 _ L o g i c a l D i s k "   L O C A L = " t r u e "   T Y P E = " u i n t 3 2 " > 
 
 < Q U A L I F I E R   N A M E = " C I M T Y P E "   L O C A L = " f a l s e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > 
 
 < V A L U E > < ! [ C D A T A [ u i n t 3 2 ] ] > < / V A L U E > 
 
 < / Q U A L I F I E R > 
 
 < V A L U E > 2 5 5 < / V A L U E > 
 
 
 
 < / P R O P E R T Y > 
 
 < P R O P E R T Y   N A M E = " M e d i a T y p e "   C L A S S O R I G I N = " W i n 3 2 _ L o g i c a l D i s k "   L O C A L = " t r u e "   T Y P E = " u i n t 3 2 " > 
 
 < Q U A L I F I E R   N A M E = " C I M T Y P E "   L O C A L = " f a l s e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > 
 
 < V A L U E > < ! [ C D A T A [ u i n t 3 2 ] ] > < / V A L U E > 
 
 < / Q U A L I F I E R > 
 
 < V A L U E > 1 2 < / V A L U E > 
 
 
 
 < / P R O P E R T Y > 
 
 < P R O P E R T Y   N A M E = " N a m e "   C L A S S O R I G I N = " C I M _ M a n a g e d S y s t e m E l e m e n t "   L O C A L = " t r u e "   T Y P E = " s t r i n g " > 
 
 < Q U A L I F I E R   N A M E = " C I M T Y P E "   L O C A L = " f a l s e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > 
 
 < V A L U E > < ! [ C D A T A [ s t r i n g ] ] > < / V A L U E > 
 
 < / Q U A L I F I E R > 
 
 < V A L U E > < ! [ C D A T A [ d : ] ] > < / V A L U E > 
 
 
 
 < / P R O P E R T Y > 
 
 < P R O P E R T Y   N A M E = " N u m b e r O f B l o c k s "   C L A S S O R I G I N = " C I M _ S t o r a g e E x t e n t "   L O C A L = " t r u e "   T Y P E = " u i n t 6 4 " > 
 
 < Q U A L I F I E R   N A M E = " C I M T Y P E "   L O C A L = " f a l s e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > 
 
 < V A L U E > < ! [ C D A T A [ u i n t 6 4 ] ] > < / V A L U E > 
 
 < / Q U A L I F I E R > 
 
 < / P R O P E R T Y > 
 
 < P R O P E R T Y   N A M E = " P N P D e v i c e I D "   C L A S S O R I G I N = " C I M _ L o g i c a l D e v i c e "   L O C A L = " t r u e "   T Y P E = " s t r i n g " > 
 
 < Q U A L I F I E R   N A M E = " C I M T Y P E "   L O C A L = " f a l s e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > 
 
 < V A L U E > < ! [ C D A T A [ s t r i n g ] ] > < / V A L U E > 
 
 < / Q U A L I F I E R > 
 
 < / P R O P E R T Y > 
 
 < P R O P E R T Y . A R R A Y   N A M E = " P o w e r M a n a g e m e n t C a p a b i l i t i e s "   C L A S S O R I G I N = " C I M _ L o g i c a l D e v i c e "   L O C A L = " t r u e "   T Y P E = " u i n t 1 6 " > 
 
 < Q U A L I F I E R   N A M E = " C I M T Y P E "   L O C A L = " f a l s e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > 
 
 < V A L U E > < ! [ C D A T A [ u i n t 1 6 ] ] > < / V A L U E > 
 
 < / Q U A L I F I E R > 
 
 < / P R O P E R T Y . A R R A Y > 
 
 < P R O P E R T Y   N A M E = " P o w e r M a n a g e m e n t S u p p o r t e d "   C L A S S O R I G I N = " C I M _ L o g i c a l D e v i c e "   L O C A L = " t r u e "   T Y P E = " b o o l e a n " > 
 
 < Q U A L I F I E R   N A M E = " C I M T Y P E "   L O C A L = " f a l s e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > 
 
 < V A L U E > < ! [ C D A T A [ b o o l e a n ] ] > < / V A L U E > 
 
 < / Q U A L I F I E R > 
 
 < / P R O P E R T Y > 
 
 < P R O P E R T Y   N A M E = " P r o v i d e r N a m e "   C L A S S O R I G I N = " W i n 3 2 _ L o g i c a l D i s k "   L O C A L = " t r u e "   T Y P E = " s t r i n g " > 
 
 < Q U A L I F I E R   N A M E = " C I M T Y P E "   L O C A L = " f a l s e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > 
 
 < V A L U E > < ! [ C D A T A [ s t r i n g ] ] > < / V A L U E > 
 
 < / Q U A L I F I E R > 
 
 < / P R O P E R T Y > 
 
 < P R O P E R T Y   N A M E = " P u r p o s e "   C L A S S O R I G I N = " C I M _ S t o r a g e E x t e n t "   L O C A L = " t r u e "   T Y P E = " s t r i n g " > 
 
 < Q U A L I F I E R   N A M E = " C I M T Y P E "   L O C A L = " f a l s e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > 
 
 < V A L U E > < ! [ C D A T A [ s t r i n g ] ] > < / V A L U E > 
 
 < / Q U A L I F I E R > 
 
 < / P R O P E R T Y > 
 
 < P R O P E R T Y   N A M E = " S i z e "   C L A S S O R I G I N = " C I M _ L o g i c a l D i s k "   L O C A L = " t r u e "   T Y P E = " u i n t 6 4 " > 
 
 < Q U A L I F I E R   N A M E = " C I M T Y P E "   L O C A L = " f a l s e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > 
 
 < V A L U E > < ! [ C D A T A [ u i n t 6 4 ] ] > < / V A L U E > 
 
 < / Q U A L I F I E R > 
 
 < V A L U E > 3 9 4 8 1 0 1 6 3 2 < / V A L U E > 
 
 
 
 < / P R O P E R T Y > 
 
 < P R O P E R T Y   N A M E = " S t a t u s "   C L A S S O R I G I N = " C I M _ M a n a g e d S y s t e m E l e m e n t "   L O C A L = " t r u e "   T Y P E = " s t r i n g " > 
 
 < Q U A L I F I E R   N A M E = " C I M T Y P E "   L O C A L = " f a l s e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > 
 
 < V A L U E > < ! [ C D A T A [ s t r i n g ] ] > < / V A L U E > 
 
 < / Q U A L I F I E R > 
 
 < / P R O P E R T Y > 
 
 < P R O P E R T Y   N A M E = " S t a t u s I n f o "   C L A S S O R I G I N = " C I M _ L o g i c a l D e v i c e "   L O C A L = " t r u e "   T Y P E = " u i n t 1 6 " > 
 
 < Q U A L I F I E R   N A M E = " C I M T Y P E "   L O C A L = " f a l s e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > 
 
 < V A L U E > < ! [ C D A T A [ u i n t 1 6 ] ] > < / V A L U E > 
 
 < / Q U A L I F I E R > 
 
 < / P R O P E R T Y > 
 
 < P R O P E R T Y   N A M E = " S u p p o r t s F i l e B a s e d C o m p r e s s i o n "   C L A S S O R I G I N = " W i n 3 2 _ L o g i c a l D i s k "   L O C A L = " t r u e "   T Y P E = " b o o l e a n " > 
 
 < Q U A L I F I E R   N A M E = " C I M T Y P E "   L O C A L = " f a l s e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > 
 
 < V A L U E > < ! [ C D A T A [ b o o l e a n ] ] > < / V A L U E > 
 
 < / Q U A L I F I E R > 
 
 < V A L U E > T R U E < / V A L U E > 
 
 
 
 < / P R O P E R T Y > 
 
 < P R O P E R T Y   N A M E = " S y s t e m C r e a t i o n C l a s s N a m e "   C L A S S O R I G I N = " C I M _ L o g i c a l D e v i c e "   L O C A L = " t r u e "   T Y P E = " s t r i n g " > 
 
 < Q U A L I F I E R   N A M E = " C I M T Y P E "   L O C A L = " f a l s e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > 
 
 < V A L U E > < ! [ C D A T A [ s t r i n g ] ] > < / V A L U E > 
 
 < / Q U A L I F I E R > 
 
 < V A L U E > < ! [ C D A T A [ W i n 3 2 _ C o m p u t e r S y s t e m ] ] > < / V A L U E > 
 
 
 
 < / P R O P E R T Y > 
 
 < P R O P E R T Y   N A M E = " S y s t e m N a m e "   C L A S S O R I G I N = " C I M _ L o g i c a l D e v i c e "   L O C A L = " t r u e "   T Y P E = " s t r i n g " > 
 
 < Q U A L I F I E R   N A M E = " C I M T Y P E "   L O C A L = " f a l s e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > 
 
 < V A L U E > < ! [ C D A T A [ s t r i n g ] ] > < / V A L U E > 
 
 < / Q U A L I F I E R > 
 
 < V A L U E > < ! [ C D A T A [ W B E M _ T E C R A _ 2 ] ] > < / V A L U E > 
 
 
 
 < / P R O P E R T Y > 
 
 < P R O P E R T Y   N A M E = " V o l u m e N a m e "   C L A S S O R I G I N = " W i n 3 2 _ L o g i c a l D i s k "   L O C A L = " t r u e "   T Y P E = " s t r i n g " > 
 
 < Q U A L I F I E R   N A M E = " C I M T Y P E "   L O C A L = " f a l s e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > 
 
 < V A L U E > < ! [ C D A T A [ s t r i n g ] ] > < / V A L U E > 
 
 < / Q U A L I F I E R > 
 
 < V A L U E > < ! [ C D A T A [ ] ] > < / V A L U E > 
 
 
 
 < / P R O P E R T Y > 
 
 < P R O P E R T Y   N A M E = " V o l u m e S e r i a l N u m b e r "   C L A S S O R I G I N = " W i n 3 2 _ L o g i c a l D i s k "   L O C A L = " t r u e "   T Y P E = " s t r i n g " > 
 
 < Q U A L I F I E R   N A M E = " C I M T Y P E "   L O C A L = " f a l s e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > 
 
 < V A L U E > < ! [ C D A T A [ s t r i n g ] ] > < / V A L U E > 
 
 < / Q U A L I F I E R > 
 
 < V A L U E > < ! [ C D A T A [ 8 0 4 E 4 4 2 F ] ] > < / V A L U E > 
 
 
 
 < / P R O P E R T Y > 
 
 < / I N S T A N C E > 
 
 < / D E C L G R O U P > < / D E C L A R A T I O N > < / C I M > 
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\wmi\wbem\xmltransport\server\setup.txt ===
This file describes installation of the WMI XML/HTTP server on Win2k Server and
on (Win2KProfessional + IIS)

The description below uses the term WBEM Directory to refer to the directory in which the WMI Core files are installed. This is typically c:\winnt\system32\wbem


1. Create a subdirectory call xml under the WBEM directory
2. Place the DLLs wmixmlop.dll and wmi2xml.dll in the xml directory and run regsvr32 on them.
3. Create a subdirectory call iis under the above xml directory. Place the DLLs wmiisapi.dll and wmifilt.dll in this directory.
4. Register the DLL wmifilt.dll as an ISAPI filter with IIS under the name WMI XML Filter. 
5. Create a virtual directory in the IIS metabase for the path /cimhttp. 
6. Map this virtual directory to the physical directory $WBEM/xml/iis and set the following attributes on this virtual directory
	Run out-of-proc (most isolation) to IIS
	Enable Execute permissions 
	Enable Windows NT/Challenge Response authentication
	Disable all other forms of authentication
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\wmi\wbem\xmltransport\samples\xmltest\diskc.xml ===
< ? x m l   v e r s i o n = " 1 . 0 "   ? > 
 
 < C I M   C I M V E R S I O N = " 2 . 0 "   D T D V E R S I O N = " 2 . 0 "   > 
 
 < D E C L A R A T I O N > 
 
 < D E C L G R O U P > 
 
 < I N S T A N C E   C L A S S N A M E = " W i n 3 2 _ L o g i c a l D i s k " > 
 
 < Q U A L I F I E R   N A M E = " d y n a m i c "   L O C A L = " f a l s e "   T Y P E = " b o o l e a n "   T O S U B C L A S S = " f a l s e "   T O I N S T A N C E = " t r u e " > 
 
 < V A L U E > T R U E < / V A L U E > 
 
 < / Q U A L I F I E R > 
 
 < Q U A L I F I E R   N A M E = " L o c a l e "   L O C A L = " f a l s e "   T Y P E = " s i n t 3 2 "   T O S U B C L A S S = " f a l s e "   T O I N S T A N C E = " t r u e " > 
 
 < V A L U E > 1 0 3 3 < / V A L U E > 
 
 < / Q U A L I F I E R > 
 
 < Q U A L I F I E R   N A M E = " p r o v i d e r "   L O C A L = " f a l s e "   T Y P E = " s t r i n g "   T O S U B C L A S S = " f a l s e "   T O I N S T A N C E = " t r u e " > 
 
 < V A L U E > < ! [ C D A T A [ C I M W i n 3 2 ] ] > < / V A L U E > 
 
 < / Q U A L I F I E R > 
 
 < Q U A L I F I E R   N A M E = " U U I D "   L O C A L = " f a l s e "   T Y P E = " s t r i n g "   T O S U B C L A S S = " f a l s e "   T O I N S T A N C E = " t r u e " > 
 
 < V A L U E > < ! [ C D A T A [ { 8 5 0 2 C 4 B 7 - 5 F B B - 1 1 D 2 - A A C 1 - 0 0 6 0 0 8 C 7 8 B C 7 } ] ] > < / V A L U E > 
 
 < / Q U A L I F I E R > 
 
 < P R O P E R T Y   N A M E = " A c c e s s "   C L A S S O R I G I N = " C I M _ S t o r a g e E x t e n t "   L O C A L = " t r u e "   T Y P E = " u i n t 1 6 " > 
 
 < Q U A L I F I E R   N A M E = " C I M T Y P E "   L O C A L = " f a l s e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > 
 
 < V A L U E > < ! [ C D A T A [ u i n t 1 6 ] ] > < / V A L U E > 
 
 < / Q U A L I F I E R > 
 
 < / P R O P E R T Y > 
 
 < P R O P E R T Y   N A M E = " A v a i l a b i l i t y "   C L A S S O R I G I N = " C I M _ L o g i c a l D e v i c e "   L O C A L = " t r u e "   T Y P E = " u i n t 1 6 " > 
 
 < Q U A L I F I E R   N A M E = " C I M T Y P E "   L O C A L = " f a l s e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > 
 
 < V A L U E > < ! [ C D A T A [ u i n t 1 6 ] ] > < / V A L U E > 
 
 < / Q U A L I F I E R > 
 
 < / P R O P E R T Y > 
 
 < P R O P E R T Y   N A M E = " B l o c k S i z e "   C L A S S O R I G I N = " C I M _ S t o r a g e E x t e n t "   L O C A L = " t r u e "   T Y P E = " u i n t 6 4 " > 
 
 < Q U A L I F I E R   N A M E = " C I M T Y P E "   L O C A L = " f a l s e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > 
 
 < V A L U E > < ! [ C D A T A [ u i n t 6 4 ] ] > < / V A L U E > 
 
 < / Q U A L I F I E R > 
 
 < / P R O P E R T Y > 
 
 < P R O P E R T Y   N A M E = " C a p t i o n "   C L A S S O R I G I N = " C I M _ M a n a g e d S y s t e m E l e m e n t "   L O C A L = " t r u e "   T Y P E = " s t r i n g " > 
 
 < Q U A L I F I E R   N A M E = " C I M T Y P E "   L O C A L = " f a l s e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > 
 
 < V A L U E > < ! [ C D A T A [ s t r i n g ] ] > < / V A L U E > 
 
 < / Q U A L I F I E R > 
 
 < V A L U E > < ! [ C D A T A [ C : ] ] > < / V A L U E > 
 
 
 
 < / P R O P E R T Y > 
 
 < P R O P E R T Y   N A M E = " C o m p r e s s e d "   C L A S S O R I G I N = " W i n 3 2 _ L o g i c a l D i s k "   L O C A L = " t r u e "   T Y P E = " b o o l e a n " > 
 
 < Q U A L I F I E R   N A M E = " C I M T Y P E "   L O C A L = " f a l s e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > 
 
 < V A L U E > < ! [ C D A T A [ b o o l e a n ] ] > < / V A L U E > 
 
 < / Q U A L I F I E R > 
 
 < V A L U E > F A L S E < / V A L U E > 
 
 
 
 < / P R O P E R T Y > 
 
 < P R O P E R T Y   N A M E = " C o n f i g M a n a g e r E r r o r C o d e "   C L A S S O R I G I N = " C I M _ L o g i c a l D e v i c e "   L O C A L = " t r u e "   T Y P E = " u i n t 3 2 " > 
 
 < Q U A L I F I E R   N A M E = " C I M T Y P E "   L O C A L = " f a l s e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > 
 
 < V A L U E > < ! [ C D A T A [ u i n t 3 2 ] ] > < / V A L U E > 
 
 < / Q U A L I F I E R > 
 
 < / P R O P E R T Y > 
 
 < P R O P E R T Y   N A M E = " C o n f i g M a n a g e r U s e r C o n f i g "   C L A S S O R I G I N = " C I M _ L o g i c a l D e v i c e "   L O C A L = " t r u e "   T Y P E = " b o o l e a n " > 
 
 < Q U A L I F I E R   N A M E = " C I M T Y P E "   L O C A L = " f a l s e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > 
 
 < V A L U E > < ! [ C D A T A [ b o o l e a n ] ] > < / V A L U E > 
 
 < / Q U A L I F I E R > 
 
 < / P R O P E R T Y > 
 
 < P R O P E R T Y   N A M E = " C r e a t i o n C l a s s N a m e "   C L A S S O R I G I N = " C I M _ L o g i c a l D e v i c e "   L O C A L = " t r u e "   T Y P E = " s t r i n g " > 
 
 < Q U A L I F I E R   N A M E = " C I M T Y P E "   L O C A L = " f a l s e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > 
 
 < V A L U E > < ! [ C D A T A [ s t r i n g ] ] > < / V A L U E > 
 
 < / Q U A L I F I E R > 
 
 < V A L U E > < ! [ C D A T A [ W i n 3 2 _ L o g i c a l D i s k ] ] > < / V A L U E > 
 
 
 
 < / P R O P E R T Y > 
 
 < P R O P E R T Y   N A M E = " D e s c r i p t i o n "   C L A S S O R I G I N = " C I M _ M a n a g e d S y s t e m E l e m e n t "   L O C A L = " t r u e "   T Y P E = " s t r i n g " > 
 
 < Q U A L I F I E R   N A M E = " C I M T Y P E "   L O C A L = " f a l s e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > 
 
 < V A L U E > < ! [ C D A T A [ s t r i n g ] ] > < / V A L U E > 
 
 < / Q U A L I F I E R > 
 
 < V A L U E > < ! [ C D A T A [ L o c a l   F i x e d   D i s k ] ] > < / V A L U E > 
 
 
 
 < / P R O P E R T Y > 
 
 < P R O P E R T Y   N A M E = " D e v i c e I D "   C L A S S O R I G I N = " C I M _ L o g i c a l D e v i c e "   L O C A L = " t r u e "   T Y P E = " s t r i n g " > 
 
 < Q U A L I F I E R   N A M E = " C I M T Y P E "   L O C A L = " f a l s e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > 
 
 < V A L U E > < ! [ C D A T A [ s t r i n g ] ] > < / V A L U E > 
 
 < / Q U A L I F I E R > 
 
 < Q U A L I F I E R   N A M E = " k e y "   L O C A L = " f a l s e "   T Y P E = " b o o l e a n "   O V E R R I D A B L E = " f a l s e "   T O I N S T A N C E = " t r u e " > 
 
 < V A L U E > T R U E < / V A L U E > 
 
 < / Q U A L I F I E R > 
 
 < V A L U E > < ! [ C D A T A [ C : ] ] > < / V A L U E > 
 
 
 
 < / P R O P E R T Y > 
 
 < P R O P E R T Y   N A M E = " D r i v e T y p e "   C L A S S O R I G I N = " W i n 3 2 _ L o g i c a l D i s k "   L O C A L = " t r u e "   T Y P E = " u i n t 3 2 " > 
 
 < Q U A L I F I E R   N A M E = " C I M T Y P E "   L O C A L = " f a l s e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > 
 
 < V A L U E > < ! [ C D A T A [ u i n t 3 2 ] ] > < / V A L U E > 
 
 < / Q U A L I F I E R > 
 
 < V A L U E > 3 < / V A L U E > 
 
 
 
 < / P R O P E R T Y > 
 
 < P R O P E R T Y   N A M E = " E r r o r C l e a r e d "   C L A S S O R I G I N = " C I M _ L o g i c a l D e v i c e "   L O C A L = " t r u e "   T Y P E = " b o o l e a n " > 
 
 < Q U A L I F I E R   N A M E = " C I M T Y P E "   L O C A L = " f a l s e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > 
 
 < V A L U E > < ! [ C D A T A [ b o o l e a n ] ] > < / V A L U E > 
 
 < / Q U A L I F I E R > 
 
 < / P R O P E R T Y > 
 
 < P R O P E R T Y   N A M E = " E r r o r D e s c r i p t i o n "   C L A S S O R I G I N = " C I M _ L o g i c a l D e v i c e "   L O C A L = " t r u e "   T Y P E = " s t r i n g " > 
 
 < Q U A L I F I E R   N A M E = " C I M T Y P E "   L O C A L = " f a l s e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > 
 
 < V A L U E > < ! [ C D A T A [ s t r i n g ] ] > < / V A L U E > 
 
 < / Q U A L I F I E R > 
 
 < / P R O P E R T Y > 
 
 < P R O P E R T Y   N A M E = " E r r o r M e t h o d o l o g y "   C L A S S O R I G I N = " C I M _ S t o r a g e E x t e n t "   L O C A L = " t r u e "   T Y P E = " s t r i n g " > 
 
 < Q U A L I F I E R   N A M E = " C I M T Y P E "   L O C A L = " f a l s e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > 
 
 < V A L U E > < ! [ C D A T A [ s t r i n g ] ] > < / V A L U E > 
 
 < / Q U A L I F I E R > 
 
 < / P R O P E R T Y > 
 
 < P R O P E R T Y   N A M E = " F i l e S y s t e m "   C L A S S O R I G I N = " W i n 3 2 _ L o g i c a l D i s k "   L O C A L = " t r u e "   T Y P E = " s t r i n g " > 
 
 < Q U A L I F I E R   N A M E = " C I M T Y P E "   L O C A L = " f a l s e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > 
 
 < V A L U E > < ! [ C D A T A [ s t r i n g ] ] > < / V A L U E > 
 
 < / Q U A L I F I E R > 
 
 < V A L U E > < ! [ C D A T A [ F A T ] ] > < / V A L U E > 
 
 
 
 < / P R O P E R T Y > 
 
 < P R O P E R T Y   N A M E = " F r e e S p a c e "   C L A S S O R I G I N = " C I M _ L o g i c a l D i s k "   L O C A L = " t r u e "   T Y P E = " u i n t 6 4 " > 
 
 < Q U A L I F I E R   N A M E = " C I M T Y P E "   L O C A L = " f a l s e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > 
 
 < V A L U E > < ! [ C D A T A [ u i n t 6 4 ] ] > < / V A L U E > 
 
 < / Q U A L I F I E R > 
 
 < V A L U E > 2 8 9 4 7 2 5 1 2 < / V A L U E > 
 
 
 
 < / P R O P E R T Y > 
 
 < P R O P E R T Y   N A M E = " I n s t a l l D a t e "   C L A S S O R I G I N = " C I M _ M a n a g e d S y s t e m E l e m e n t "   L O C A L = " t r u e "   T Y P E = " d a t e t i m e " > 
 
 < Q U A L I F I E R   N A M E = " C I M T Y P E "   L O C A L = " f a l s e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > 
 
 < V A L U E > < ! [ C D A T A [ d a t e t i m e ] ] > < / V A L U E > 
 
 < / Q U A L I F I E R > 
 
 < / P R O P E R T Y > 
 
 < P R O P E R T Y   N A M E = " L a s t E r r o r C o d e "   C L A S S O R I G I N = " C I M _ L o g i c a l D e v i c e "   L O C A L = " t r u e "   T Y P E = " u i n t 3 2 " > 
 
 < Q U A L I F I E R   N A M E = " C I M T Y P E "   L O C A L = " f a l s e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > 
 
 < V A L U E > < ! [ C D A T A [ u i n t 3 2 ] ] > < / V A L U E > 
 
 < / Q U A L I F I E R > 
 
 < / P R O P E R T Y > 
 
 < P R O P E R T Y   N A M E = " M a x i m u m C o m p o n e n t L e n g t h "   C L A S S O R I G I N = " W i n 3 2 _ L o g i c a l D i s k "   L O C A L = " t r u e "   T Y P E = " u i n t 3 2 " > 
 
 < Q U A L I F I E R   N A M E = " C I M T Y P E "   L O C A L = " f a l s e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > 
 
 < V A L U E > < ! [ C D A T A [ u i n t 3 2 ] ] > < / V A L U E > 
 
 < / Q U A L I F I E R > 
 
 < V A L U E > 2 5 5 < / V A L U E > 
 
 
 
 < / P R O P E R T Y > 
 
 < P R O P E R T Y   N A M E = " M e d i a T y p e "   C L A S S O R I G I N = " W i n 3 2 _ L o g i c a l D i s k "   L O C A L = " t r u e "   T Y P E = " u i n t 3 2 " > 
 
 < Q U A L I F I E R   N A M E = " C I M T Y P E "   L O C A L = " f a l s e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > 
 
 < V A L U E > < ! [ C D A T A [ u i n t 3 2 ] ] > < / V A L U E > 
 
 < / Q U A L I F I E R > 
 
 < V A L U E > 1 2 < / V A L U E > 
 
 
 
 < / P R O P E R T Y > 
 
 < P R O P E R T Y   N A M E = " N a m e "   C L A S S O R I G I N = " C I M _ M a n a g e d S y s t e m E l e m e n t "   L O C A L = " t r u e "   T Y P E = " s t r i n g " > 
 
 < Q U A L I F I E R   N A M E = " C I M T Y P E "   L O C A L = " f a l s e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > 
 
 < V A L U E > < ! [ C D A T A [ s t r i n g ] ] > < / V A L U E > 
 
 < / Q U A L I F I E R > 
 
 < V A L U E > < ! [ C D A T A [ C : ] ] > < / V A L U E > 
 
 
 
 < / P R O P E R T Y > 
 
 < P R O P E R T Y   N A M E = " N u m b e r O f B l o c k s "   C L A S S O R I G I N = " C I M _ S t o r a g e E x t e n t "   L O C A L = " t r u e "   T Y P E = " u i n t 6 4 " > 
 
 < Q U A L I F I E R   N A M E = " C I M T Y P E "   L O C A L = " f a l s e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > 
 
 < V A L U E > < ! [ C D A T A [ u i n t 6 4 ] ] > < / V A L U E > 
 
 < / Q U A L I F I E R > 
 
 < / P R O P E R T Y > 
 
 < P R O P E R T Y   N A M E = " P N P D e v i c e I D "   C L A S S O R I G I N = " C I M _ L o g i c a l D e v i c e "   L O C A L = " t r u e "   T Y P E = " s t r i n g " > 
 
 < Q U A L I F I E R   N A M E = " C I M T Y P E "   L O C A L = " f a l s e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > 
 
 < V A L U E > < ! [ C D A T A [ s t r i n g ] ] > < / V A L U E > 
 
 < / Q U A L I F I E R > 
 
 < / P R O P E R T Y > 
 
 < P R O P E R T Y . A R R A Y   N A M E = " P o w e r M a n a g e m e n t C a p a b i l i t i e s "   C L A S S O R I G I N = " C I M _ L o g i c a l D e v i c e "   L O C A L = " t r u e "   T Y P E = " u i n t 1 6 " > 
 
 < Q U A L I F I E R   N A M E = " C I M T Y P E "   L O C A L = " f a l s e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > 
 
 < V A L U E > < ! [ C D A T A [ u i n t 1 6 ] ] > < / V A L U E > 
 
 < / Q U A L I F I E R > 
 
 < / P R O P E R T Y . A R R A Y > 
 
 < P R O P E R T Y   N A M E = " P o w e r M a n a g e m e n t S u p p o r t e d "   C L A S S O R I G I N = " C I M _ L o g i c a l D e v i c e "   L O C A L = " t r u e "   T Y P E = " b o o l e a n " > 
 
 < Q U A L I F I E R   N A M E = " C I M T Y P E "   L O C A L = " f a l s e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > 
 
 < V A L U E > < ! [ C D A T A [ b o o l e a n ] ] > < / V A L U E > 
 
 < / Q U A L I F I E R > 
 
 < / P R O P E R T Y > 
 
 < P R O P E R T Y   N A M E = " P r o v i d e r N a m e "   C L A S S O R I G I N = " W i n 3 2 _ L o g i c a l D i s k "   L O C A L = " t r u e "   T Y P E = " s t r i n g " > 
 
 < Q U A L I F I E R   N A M E = " C I M T Y P E "   L O C A L = " f a l s e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > 
 
 < V A L U E > < ! [ C D A T A [ s t r i n g ] ] > < / V A L U E > 
 
 < / Q U A L I F I E R > 
 
 < / P R O P E R T Y > 
 
 < P R O P E R T Y   N A M E = " P u r p o s e "   C L A S S O R I G I N = " C I M _ S t o r a g e E x t e n t "   L O C A L = " t r u e "   T Y P E = " s t r i n g " > 
 
 < Q U A L I F I E R   N A M E = " C I M T Y P E "   L O C A L = " f a l s e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > 
 
 < V A L U E > < ! [ C D A T A [ s t r i n g ] ] > < / V A L U E > 
 
 < / Q U A L I F I E R > 
 
 < / P R O P E R T Y > 
 
 < P R O P E R T Y   N A M E = " S i z e "   C L A S S O R I G I N = " C I M _ L o g i c a l D i s k "   L O C A L = " t r u e "   T Y P E = " u i n t 6 4 " > 
 
 < Q U A L I F I E R   N A M E = " C I M T Y P E "   L O C A L = " f a l s e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > 
 
 < V A L U E > < ! [ C D A T A [ u i n t 6 4 ] ] > < / V A L U E > 
 
 < / Q U A L I F I E R > 
 
 < V A L U E > 2 1 4 6 4 6 7 8 4 0 < / V A L U E > 
 
 
 
 < / P R O P E R T Y > 
 
 < P R O P E R T Y   N A M E = " S t a t u s "   C L A S S O R I G I N = " C I M _ M a n a g e d S y s t e m E l e m e n t "   L O C A L = " t r u e "   T Y P E = " s t r i n g " > 
 
 < Q U A L I F I E R   N A M E = " C I M T Y P E "   L O C A L = " f a l s e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > 
 
 < V A L U E > < ! [ C D A T A [ s t r i n g ] ] > < / V A L U E > 
 
 < / Q U A L I F I E R > 
 
 < / P R O P E R T Y > 
 
 < P R O P E R T Y   N A M E = " S t a t u s I n f o "   C L A S S O R I G I N = " C I M _ L o g i c a l D e v i c e "   L O C A L = " t r u e "   T Y P E = " u i n t 1 6 " > 
 
 < Q U A L I F I E R   N A M E = " C I M T Y P E "   L O C A L = " f a l s e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > 
 
 < V A L U E > < ! [ C D A T A [ u i n t 1 6 ] ] > < / V A L U E > 
 
 < / Q U A L I F I E R > 
 
 < / P R O P E R T Y > 
 
 < P R O P E R T Y   N A M E = " S u p p o r t s F i l e B a s e d C o m p r e s s i o n "   C L A S S O R I G I N = " W i n 3 2 _ L o g i c a l D i s k "   L O C A L = " t r u e "   T Y P E = " b o o l e a n " > 
 
 < Q U A L I F I E R   N A M E = " C I M T Y P E "   L O C A L = " f a l s e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > 
 
 < V A L U E > < ! [ C D A T A [ b o o l e a n ] ] > < / V A L U E > 
 
 < / Q U A L I F I E R > 
 
 < V A L U E > F A L S E < / V A L U E > 
 
 
 
 < / P R O P E R T Y > 
 
 < P R O P E R T Y   N A M E = " S y s t e m C r e a t i o n C l a s s N a m e "   C L A S S O R I G I N = " C I M _ L o g i c a l D e v i c e "   L O C A L = " t r u e "   T Y P E = " s t r i n g " > 
 
 < Q U A L I F I E R   N A M E = " C I M T Y P E "   L O C A L = " f a l s e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > 
 
 < V A L U E > < ! [ C D A T A [ s t r i n g ] ] > < / V A L U E > 
 
 < / Q U A L I F I E R > 
 
 < V A L U E > < ! [ C D A T A [ W i n 3 2 _ C o m p u t e r S y s t e m ] ] > < / V A L U E > 
 
 
 
 < / P R O P E R T Y > 
 
 < P R O P E R T Y   N A M E = " S y s t e m N a m e "   C L A S S O R I G I N = " C I M _ L o g i c a l D e v i c e "   L O C A L = " t r u e "   T Y P E = " s t r i n g " > 
 
 < Q U A L I F I E R   N A M E = " C I M T Y P E "   L O C A L = " f a l s e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > 
 
 < V A L U E > < ! [ C D A T A [ s t r i n g ] ] > < / V A L U E > 
 
 < / Q U A L I F I E R > 
 
 < V A L U E > < ! [ C D A T A [ W B E M _ T E C R A _ 2 ] ] > < / V A L U E > 
 
 
 
 < / P R O P E R T Y > 
 
 < P R O P E R T Y   N A M E = " V o l u m e N a m e "   C L A S S O R I G I N = " W i n 3 2 _ L o g i c a l D i s k "   L O C A L = " t r u e "   T Y P E = " s t r i n g " > 
 
 < Q U A L I F I E R   N A M E = " C I M T Y P E "   L O C A L = " f a l s e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > 
 
 < V A L U E > < ! [ C D A T A [ s t r i n g ] ] > < / V A L U E > 
 
 < / Q U A L I F I E R > 
 
 < V A L U E > < ! [ C D A T A [ ] ] > < / V A L U E > 
 
 
 
 < / P R O P E R T Y > 
 
 < P R O P E R T Y   N A M E = " V o l u m e S e r i a l N u m b e r "   C L A S S O R I G I N = " W i n 3 2 _ L o g i c a l D i s k "   L O C A L = " t r u e "   T Y P E = " s t r i n g " > 
 
 < Q U A L I F I E R   N A M E = " C I M T Y P E "   L O C A L = " f a l s e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > 
 
 < V A L U E > < ! [ C D A T A [ s t r i n g ] ] > < / V A L U E > 
 
 < / Q U A L I F I E R > 
 
 < V A L U E > < ! [ C D A T A [ 2 6 6 A 1 7 D C ] ] > < / V A L U E > 
 
 
 
 < / P R O P E R T Y > 
 
 < / I N S T A N C E > 
 
 < / D E C L G R O U P > < / D E C L A R A T I O N > < / C I M > 
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\wmi\wbem\xmltransport\samples\xmltest\diske.xml ===
< ? x m l   v e r s i o n = " 1 . 0 "   ? > 
 
 < C I M   C I M V E R S I O N = " 2 . 0 "   D T D V E R S I O N = " 2 . 0 "   > 
 
 < D E C L A R A T I O N > 
 
 < D E C L G R O U P > 
 
 < I N S T A N C E   C L A S S N A M E = " W i n 3 2 _ L o g i c a l D i s k " > 
 
 < Q U A L I F I E R   N A M E = " d y n a m i c "   L O C A L = " f a l s e "   T Y P E = " b o o l e a n "   T O S U B C L A S S = " f a l s e "   T O I N S T A N C E = " t r u e " > 
 
 < V A L U E > T R U E < / V A L U E > 
 
 < / Q U A L I F I E R > 
 
 < Q U A L I F I E R   N A M E = " L o c a l e "   L O C A L = " f a l s e "   T Y P E = " s i n t 3 2 "   T O S U B C L A S S = " f a l s e "   T O I N S T A N C E = " t r u e " > 
 
 < V A L U E > 1 0 3 3 < / V A L U E > 
 
 < / Q U A L I F I E R > 
 
 < Q U A L I F I E R   N A M E = " p r o v i d e r "   L O C A L = " f a l s e "   T Y P E = " s t r i n g "   T O S U B C L A S S = " f a l s e "   T O I N S T A N C E = " t r u e " > 
 
 < V A L U E > < ! [ C D A T A [ C I M W i n 3 2 ] ] > < / V A L U E > 
 
 < / Q U A L I F I E R > 
 
 < Q U A L I F I E R   N A M E = " U U I D "   L O C A L = " f a l s e "   T Y P E = " s t r i n g "   T O S U B C L A S S = " f a l s e "   T O I N S T A N C E = " t r u e " > 
 
 < V A L U E > < ! [ C D A T A [ { 8 5 0 2 C 4 B 7 - 5 F B B - 1 1 D 2 - A A C 1 - 0 0 6 0 0 8 C 7 8 B C 7 } ] ] > < / V A L U E > 
 
 < / Q U A L I F I E R > 
 
 < P R O P E R T Y   N A M E = " A c c e s s "   C L A S S O R I G I N = " C I M _ S t o r a g e E x t e n t "   L O C A L = " t r u e "   T Y P E = " u i n t 1 6 " > 
 
 < Q U A L I F I E R   N A M E = " C I M T Y P E "   L O C A L = " f a l s e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > 
 
 < V A L U E > < ! [ C D A T A [ u i n t 1 6 ] ] > < / V A L U E > 
 
 < / Q U A L I F I E R > 
 
 < / P R O P E R T Y > 
 
 < P R O P E R T Y   N A M E = " A v a i l a b i l i t y "   C L A S S O R I G I N = " C I M _ L o g i c a l D e v i c e "   L O C A L = " t r u e "   T Y P E = " u i n t 1 6 " > 
 
 < Q U A L I F I E R   N A M E = " C I M T Y P E "   L O C A L = " f a l s e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > 
 
 < V A L U E > < ! [ C D A T A [ u i n t 1 6 ] ] > < / V A L U E > 
 
 < / Q U A L I F I E R > 
 
 < / P R O P E R T Y > 
 
 < P R O P E R T Y   N A M E = " B l o c k S i z e "   C L A S S O R I G I N = " C I M _ S t o r a g e E x t e n t "   L O C A L = " t r u e "   T Y P E = " u i n t 6 4 " > 
 
 < Q U A L I F I E R   N A M E = " C I M T Y P E "   L O C A L = " f a l s e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > 
 
 < V A L U E > < ! [ C D A T A [ u i n t 6 4 ] ] > < / V A L U E > 
 
 < / Q U A L I F I E R > 
 
 < / P R O P E R T Y > 
 
 < P R O P E R T Y   N A M E = " C a p t i o n "   C L A S S O R I G I N = " C I M _ M a n a g e d S y s t e m E l e m e n t "   L O C A L = " t r u e "   T Y P E = " s t r i n g " > 
 
 < Q U A L I F I E R   N A M E = " C I M T Y P E "   L O C A L = " f a l s e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > 
 
 < V A L U E > < ! [ C D A T A [ s t r i n g ] ] > < / V A L U E > 
 
 < / Q U A L I F I E R > 
 
 < V A L U E > < ! [ C D A T A [ e : ] ] > < / V A L U E > 
 
 
 
 < / P R O P E R T Y > 
 
 < P R O P E R T Y   N A M E = " C o m p r e s s e d "   C L A S S O R I G I N = " W i n 3 2 _ L o g i c a l D i s k "   L O C A L = " t r u e "   T Y P E = " b o o l e a n " > 
 
 < Q U A L I F I E R   N A M E = " C I M T Y P E "   L O C A L = " f a l s e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > 
 
 < V A L U E > < ! [ C D A T A [ b o o l e a n ] ] > < / V A L U E > 
 
 < / Q U A L I F I E R > 
 
 < V A L U E > F A L S E < / V A L U E > 
 
 
 
 < / P R O P E R T Y > 
 
 < P R O P E R T Y   N A M E = " C o n f i g M a n a g e r E r r o r C o d e "   C L A S S O R I G I N = " C I M _ L o g i c a l D e v i c e "   L O C A L = " t r u e "   T Y P E = " u i n t 3 2 " > 
 
 < Q U A L I F I E R   N A M E = " C I M T Y P E "   L O C A L = " f a l s e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > 
 
 < V A L U E > < ! [ C D A T A [ u i n t 3 2 ] ] > < / V A L U E > 
 
 < / Q U A L I F I E R > 
 
 < / P R O P E R T Y > 
 
 < P R O P E R T Y   N A M E = " C o n f i g M a n a g e r U s e r C o n f i g "   C L A S S O R I G I N = " C I M _ L o g i c a l D e v i c e "   L O C A L = " t r u e "   T Y P E = " b o o l e a n " > 
 
 < Q U A L I F I E R   N A M E = " C I M T Y P E "   L O C A L = " f a l s e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > 
 
 < V A L U E > < ! [ C D A T A [ b o o l e a n ] ] > < / V A L U E > 
 
 < / Q U A L I F I E R > 
 
 < / P R O P E R T Y > 
 
 < P R O P E R T Y   N A M E = " C r e a t i o n C l a s s N a m e "   C L A S S O R I G I N = " C I M _ L o g i c a l D e v i c e "   L O C A L = " t r u e "   T Y P E = " s t r i n g " > 
 
 < Q U A L I F I E R   N A M E = " C I M T Y P E "   L O C A L = " f a l s e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > 
 
 < V A L U E > < ! [ C D A T A [ s t r i n g ] ] > < / V A L U E > 
 
 < / Q U A L I F I E R > 
 
 < V A L U E > < ! [ C D A T A [ W i n 3 2 _ L o g i c a l D i s k ] ] > < / V A L U E > 
 
 
 
 < / P R O P E R T Y > 
 
 < P R O P E R T Y   N A M E = " D e s c r i p t i o n "   C L A S S O R I G I N = " C I M _ M a n a g e d S y s t e m E l e m e n t "   L O C A L = " t r u e "   T Y P E = " s t r i n g " > 
 
 < Q U A L I F I E R   N A M E = " C I M T Y P E "   L O C A L = " f a l s e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > 
 
 < V A L U E > < ! [ C D A T A [ s t r i n g ] ] > < / V A L U E > 
 
 < / Q U A L I F I E R > 
 
 < V A L U E > < ! [ C D A T A [ L o c a l   F i x e d   D i s k ] ] > < / V A L U E > 
 
 
 
 < / P R O P E R T Y > 
 
 < P R O P E R T Y   N A M E = " D e v i c e I D "   C L A S S O R I G I N = " C I M _ L o g i c a l D e v i c e "   L O C A L = " t r u e "   T Y P E = " s t r i n g " > 
 
 < Q U A L I F I E R   N A M E = " C I M T Y P E "   L O C A L = " f a l s e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > 
 
 < V A L U E > < ! [ C D A T A [ s t r i n g ] ] > < / V A L U E > 
 
 < / Q U A L I F I E R > 
 
 < Q U A L I F I E R   N A M E = " k e y "   L O C A L = " f a l s e "   T Y P E = " b o o l e a n "   O V E R R I D A B L E = " f a l s e "   T O I N S T A N C E = " t r u e " > 
 
 < V A L U E > T R U E < / V A L U E > 
 
 < / Q U A L I F I E R > 
 
 < V A L U E > < ! [ C D A T A [ e : ] ] > < / V A L U E > 
 
 
 
 < / P R O P E R T Y > 
 
 < P R O P E R T Y   N A M E = " D r i v e T y p e "   C L A S S O R I G I N = " W i n 3 2 _ L o g i c a l D i s k "   L O C A L = " t r u e "   T Y P E = " u i n t 3 2 " > 
 
 < Q U A L I F I E R   N A M E = " C I M T Y P E "   L O C A L = " f a l s e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > 
 
 < V A L U E > < ! [ C D A T A [ u i n t 3 2 ] ] > < / V A L U E > 
 
 < / Q U A L I F I E R > 
 
 < V A L U E > 3 < / V A L U E > 
 
 
 
 < / P R O P E R T Y > 
 
 < P R O P E R T Y   N A M E = " E r r o r C l e a r e d "   C L A S S O R I G I N = " C I M _ L o g i c a l D e v i c e "   L O C A L = " t r u e "   T Y P E = " b o o l e a n " > 
 
 < Q U A L I F I E R   N A M E = " C I M T Y P E "   L O C A L = " f a l s e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > 
 
 < V A L U E > < ! [ C D A T A [ b o o l e a n ] ] > < / V A L U E > 
 
 < / Q U A L I F I E R > 
 
 < / P R O P E R T Y > 
 
 < P R O P E R T Y   N A M E = " E r r o r D e s c r i p t i o n "   C L A S S O R I G I N = " C I M _ L o g i c a l D e v i c e "   L O C A L = " t r u e "   T Y P E = " s t r i n g " > 
 
 < Q U A L I F I E R   N A M E = " C I M T Y P E "   L O C A L = " f a l s e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > 
 
 < V A L U E > < ! [ C D A T A [ s t r i n g ] ] > < / V A L U E > 
 
 < / Q U A L I F I E R > 
 
 < / P R O P E R T Y > 
 
 < P R O P E R T Y   N A M E = " E r r o r M e t h o d o l o g y "   C L A S S O R I G I N = " C I M _ S t o r a g e E x t e n t "   L O C A L = " t r u e "   T Y P E = " s t r i n g " > 
 
 < Q U A L I F I E R   N A M E = " C I M T Y P E "   L O C A L = " f a l s e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > 
 
 < V A L U E > < ! [ C D A T A [ s t r i n g ] ] > < / V A L U E > 
 
 < / Q U A L I F I E R > 
 
 < / P R O P E R T Y > 
 
 < P R O P E R T Y   N A M E = " F i l e S y s t e m "   C L A S S O R I G I N = " W i n 3 2 _ L o g i c a l D i s k "   L O C A L = " t r u e "   T Y P E = " s t r i n g " > 
 
 < Q U A L I F I E R   N A M E = " C I M T Y P E "   L O C A L = " f a l s e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > 
 
 < V A L U E > < ! [ C D A T A [ s t r i n g ] ] > < / V A L U E > 
 
 < / Q U A L I F I E R > 
 
 < V A L U E > < ! [ C D A T A [ F A T ] ] > < / V A L U E > 
 
 
 
 < / P R O P E R T Y > 
 
 < P R O P E R T Y   N A M E = " F r e e S p a c e "   C L A S S O R I G I N = " C I M _ L o g i c a l D i s k "   L O C A L = " t r u e "   T Y P E = " u i n t 6 4 " > 
 
 < Q U A L I F I E R   N A M E = " C I M T Y P E "   L O C A L = " f a l s e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > 
 
 < V A L U E > < ! [ C D A T A [ u i n t 6 4 ] ] > < / V A L U E > 
 
 < / Q U A L I F I E R > 
 
 < V A L U E > 1 2 8 3 7 8 4 7 0 4 < / V A L U E > 
 
 
 
 < / P R O P E R T Y > 
 
 < P R O P E R T Y   N A M E = " I n s t a l l D a t e "   C L A S S O R I G I N = " C I M _ M a n a g e d S y s t e m E l e m e n t "   L O C A L = " t r u e "   T Y P E = " d a t e t i m e " > 
 
 < Q U A L I F I E R   N A M E = " C I M T Y P E "   L O C A L = " f a l s e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > 
 
 < V A L U E > < ! [ C D A T A [ d a t e t i m e ] ] > < / V A L U E > 
 
 < / Q U A L I F I E R > 
 
 < / P R O P E R T Y > 
 
 < P R O P E R T Y   N A M E = " L a s t E r r o r C o d e "   C L A S S O R I G I N = " C I M _ L o g i c a l D e v i c e "   L O C A L = " t r u e "   T Y P E = " u i n t 3 2 " > 
 
 < Q U A L I F I E R   N A M E = " C I M T Y P E "   L O C A L = " f a l s e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > 
 
 < V A L U E > < ! [ C D A T A [ u i n t 3 2 ] ] > < / V A L U E > 
 
 < / Q U A L I F I E R > 
 
 < / P R O P E R T Y > 
 
 < P R O P E R T Y   N A M E = " M a x i m u m C o m p o n e n t L e n g t h "   C L A S S O R I G I N = " W i n 3 2 _ L o g i c a l D i s k "   L O C A L = " t r u e "   T Y P E = " u i n t 3 2 " > 
 
 < Q U A L I F I E R   N A M E = " C I M T Y P E "   L O C A L = " f a l s e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > 
 
 < V A L U E > < ! [ C D A T A [ u i n t 3 2 ] ] > < / V A L U E > 
 
 < / Q U A L I F I E R > 
 
 < V A L U E > 2 5 5 < / V A L U E > 
 
 
 
 < / P R O P E R T Y > 
 
 < P R O P E R T Y   N A M E = " M e d i a T y p e "   C L A S S O R I G I N = " W i n 3 2 _ L o g i c a l D i s k "   L O C A L = " t r u e "   T Y P E = " u i n t 3 2 " > 
 
 < Q U A L I F I E R   N A M E = " C I M T Y P E "   L O C A L = " f a l s e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > 
 
 < V A L U E > < ! [ C D A T A [ u i n t 3 2 ] ] > < / V A L U E > 
 
 < / Q U A L I F I E R > 
 
 < V A L U E > 1 2 < / V A L U E > 
 
 
 
 < / P R O P E R T Y > 
 
 < P R O P E R T Y   N A M E = " N a m e "   C L A S S O R I G I N = " C I M _ M a n a g e d S y s t e m E l e m e n t "   L O C A L = " t r u e "   T Y P E = " s t r i n g " > 
 
 < Q U A L I F I E R   N A M E = " C I M T Y P E "   L O C A L = " f a l s e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > 
 
 < V A L U E > < ! [ C D A T A [ s t r i n g ] ] > < / V A L U E > 
 
 < / Q U A L I F I E R > 
 
 < V A L U E > < ! [ C D A T A [ e : ] ] > < / V A L U E > 
 
 
 
 < / P R O P E R T Y > 
 
 < P R O P E R T Y   N A M E = " N u m b e r O f B l o c k s "   C L A S S O R I G I N = " C I M _ S t o r a g e E x t e n t "   L O C A L = " t r u e "   T Y P E = " u i n t 6 4 " > 
 
 < Q U A L I F I E R   N A M E = " C I M T Y P E "   L O C A L = " f a l s e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > 
 
 < V A L U E > < ! [ C D A T A [ u i n t 6 4 ] ] > < / V A L U E > 
 
 < / Q U A L I F I E R > 
 
 < / P R O P E R T Y > 
 
 < P R O P E R T Y   N A M E = " P N P D e v i c e I D "   C L A S S O R I G I N = " C I M _ L o g i c a l D e v i c e "   L O C A L = " t r u e "   T Y P E = " s t r i n g " > 
 
 < Q U A L I F I E R   N A M E = " C I M T Y P E "   L O C A L = " f a l s e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > 
 
 < V A L U E > < ! [ C D A T A [ s t r i n g ] ] > < / V A L U E > 
 
 < / Q U A L I F I E R > 
 
 < / P R O P E R T Y > 
 
 < P R O P E R T Y . A R R A Y   N A M E = " P o w e r M a n a g e m e n t C a p a b i l i t i e s "   C L A S S O R I G I N = " C I M _ L o g i c a l D e v i c e "   L O C A L = " t r u e "   T Y P E = " u i n t 1 6 " > 
 
 < Q U A L I F I E R   N A M E = " C I M T Y P E "   L O C A L = " f a l s e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > 
 
 < V A L U E > < ! [ C D A T A [ u i n t 1 6 ] ] > < / V A L U E > 
 
 < / Q U A L I F I E R > 
 
 < / P R O P E R T Y . A R R A Y > 
 
 < P R O P E R T Y   N A M E = " P o w e r M a n a g e m e n t S u p p o r t e d "   C L A S S O R I G I N = " C I M _ L o g i c a l D e v i c e "   L O C A L = " t r u e "   T Y P E = " b o o l e a n " > 
 
 < Q U A L I F I E R   N A M E = " C I M T Y P E "   L O C A L = " f a l s e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > 
 
 < V A L U E > < ! [ C D A T A [ b o o l e a n ] ] > < / V A L U E > 
 
 < / Q U A L I F I E R > 
 
 < / P R O P E R T Y > 
 
 < P R O P E R T Y   N A M E = " P r o v i d e r N a m e "   C L A S S O R I G I N = " W i n 3 2 _ L o g i c a l D i s k "   L O C A L = " t r u e "   T Y P E = " s t r i n g " > 
 
 < Q U A L I F I E R   N A M E = " C I M T Y P E "   L O C A L = " f a l s e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > 
 
 < V A L U E > < ! [ C D A T A [ s t r i n g ] ] > < / V A L U E > 
 
 < / Q U A L I F I E R > 
 
 < / P R O P E R T Y > 
 
 < P R O P E R T Y   N A M E = " P u r p o s e "   C L A S S O R I G I N = " C I M _ S t o r a g e E x t e n t "   L O C A L = " t r u e "   T Y P E = " s t r i n g " > 
 
 < Q U A L I F I E R   N A M E = " C I M T Y P E "   L O C A L = " f a l s e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > 
 
 < V A L U E > < ! [ C D A T A [ s t r i n g ] ] > < / V A L U E > 
 
 < / Q U A L I F I E R > 
 
 < / P R O P E R T Y > 
 
 < P R O P E R T Y   N A M E = " S i z e "   C L A S S O R I G I N = " C I M _ L o g i c a l D i s k "   L O C A L = " t r u e "   T Y P E = " u i n t 6 4 " > 
 
 < Q U A L I F I E R   N A M E = " C I M T Y P E "   L O C A L = " f a l s e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > 
 
 < V A L U E > < ! [ C D A T A [ u i n t 6 4 ] ] > < / V A L U E > 
 
 < / Q U A L I F I E R > 
 
 < V A L U E > 2 0 9 7 1 1 9 2 3 2 < / V A L U E > 
 
 
 
 < / P R O P E R T Y > 
 
 < P R O P E R T Y   N A M E = " S t a t u s "   C L A S S O R I G I N = " C I M _ M a n a g e d S y s t e m E l e m e n t "   L O C A L = " t r u e "   T Y P E = " s t r i n g " > 
 
 < Q U A L I F I E R   N A M E = " C I M T Y P E "   L O C A L = " f a l s e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > 
 
 < V A L U E > < ! [ C D A T A [ s t r i n g ] ] > < / V A L U E > 
 
 < / Q U A L I F I E R > 
 
 < / P R O P E R T Y > 
 
 < P R O P E R T Y   N A M E = " S t a t u s I n f o "   C L A S S O R I G I N = " C I M _ L o g i c a l D e v i c e "   L O C A L = " t r u e "   T Y P E = " u i n t 1 6 " > 
 
 < Q U A L I F I E R   N A M E = " C I M T Y P E "   L O C A L = " f a l s e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > 
 
 < V A L U E > < ! [ C D A T A [ u i n t 1 6 ] ] > < / V A L U E > 
 
 < / Q U A L I F I E R > 
 
 < / P R O P E R T Y > 
 
 < P R O P E R T Y   N A M E = " S u p p o r t s F i l e B a s e d C o m p r e s s i o n "   C L A S S O R I G I N = " W i n 3 2 _ L o g i c a l D i s k "   L O C A L = " t r u e "   T Y P E = " b o o l e a n " > 
 
 < Q U A L I F I E R   N A M E = " C I M T Y P E "   L O C A L = " f a l s e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > 
 
 < V A L U E > < ! [ C D A T A [ b o o l e a n ] ] > < / V A L U E > 
 
 < / Q U A L I F I E R > 
 
 < V A L U E > F A L S E < / V A L U E > 
 
 
 
 < / P R O P E R T Y > 
 
 < P R O P E R T Y   N A M E = " S y s t e m C r e a t i o n C l a s s N a m e "   C L A S S O R I G I N = " C I M _ L o g i c a l D e v i c e "   L O C A L = " t r u e "   T Y P E = " s t r i n g " > 
 
 < Q U A L I F I E R   N A M E = " C I M T Y P E "   L O C A L = " f a l s e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > 
 
 < V A L U E > < ! [ C D A T A [ s t r i n g ] ] > < / V A L U E > 
 
 < / Q U A L I F I E R > 
 
 < V A L U E > < ! [ C D A T A [ W i n 3 2 _ C o m p u t e r S y s t e m ] ] > < / V A L U E > 
 
 
 
 < / P R O P E R T Y > 
 
 < P R O P E R T Y   N A M E = " S y s t e m N a m e "   C L A S S O R I G I N = " C I M _ L o g i c a l D e v i c e "   L O C A L = " t r u e "   T Y P E = " s t r i n g " > 
 
 < Q U A L I F I E R   N A M E = " C I M T Y P E "   L O C A L = " f a l s e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > 
 
 < V A L U E > < ! [ C D A T A [ s t r i n g ] ] > < / V A L U E > 
 
 < / Q U A L I F I E R > 
 
 < V A L U E > < ! [ C D A T A [ W B E M _ T E C R A _ 2 ] ] > < / V A L U E > 
 
 
 
 < / P R O P E R T Y > 
 
 < P R O P E R T Y   N A M E = " V o l u m e N a m e "   C L A S S O R I G I N = " W i n 3 2 _ L o g i c a l D i s k "   L O C A L = " t r u e "   T Y P E = " s t r i n g " > 
 
 < Q U A L I F I E R   N A M E = " C I M T Y P E "   L O C A L = " f a l s e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > 
 
 < V A L U E > < ! [ C D A T A [ s t r i n g ] ] > < / V A L U E > 
 
 < / Q U A L I F I E R > 
 
 < V A L U E > < ! [ C D A T A [ ] ] > < / V A L U E > 
 
 
 
 < / P R O P E R T Y > 
 
 < P R O P E R T Y   N A M E = " V o l u m e S e r i a l N u m b e r "   C L A S S O R I G I N = " W i n 3 2 _ L o g i c a l D i s k "   L O C A L = " t r u e "   T Y P E = " s t r i n g " > 
 
 < Q U A L I F I E R   N A M E = " C I M T Y P E "   L O C A L = " f a l s e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > 
 
 < V A L U E > < ! [ C D A T A [ s t r i n g ] ] > < / V A L U E > 
 
 < / Q U A L I F I E R > 
 
 < V A L U E > < ! [ C D A T A [ 3 2 4 C 1 7 D C ] ] > < / V A L U E > 
 
 
 
 < / P R O P E R T Y > 
 
 < / I N S T A N C E > 
 
 < / D E C L G R O U P > < / D E C L A R A T I O N > < / C I M > 
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\wmi\wbem\xmltransport\samples\xmltest\diskf.xml ===
< ? x m l   v e r s i o n = " 1 . 0 "   ? > 
 
 < C I M   C I M V E R S I O N = " 2 . 0 "   D T D V E R S I O N = " 2 . 0 "   > 
 
 < D E C L A R A T I O N > 
 
 < D E C L G R O U P > 
 
 < I N S T A N C E   C L A S S N A M E = " W i n 3 2 _ L o g i c a l D i s k " > 
 
 < Q U A L I F I E R   N A M E = " d y n a m i c "   L O C A L = " f a l s e "   T Y P E = " b o o l e a n "   T O S U B C L A S S = " f a l s e "   T O I N S T A N C E = " t r u e " > 
 
 < V A L U E > T R U E < / V A L U E > 
 
 < / Q U A L I F I E R > 
 
 < Q U A L I F I E R   N A M E = " L o c a l e "   L O C A L = " f a l s e "   T Y P E = " s i n t 3 2 "   T O S U B C L A S S = " f a l s e "   T O I N S T A N C E = " t r u e " > 
 
 < V A L U E > 1 0 3 3 < / V A L U E > 
 
 < / Q U A L I F I E R > 
 
 < Q U A L I F I E R   N A M E = " p r o v i d e r "   L O C A L = " f a l s e "   T Y P E = " s t r i n g "   T O S U B C L A S S = " f a l s e "   T O I N S T A N C E = " t r u e " > 
 
 < V A L U E > < ! [ C D A T A [ C I M W i n 3 2 ] ] > < / V A L U E > 
 
 < / Q U A L I F I E R > 
 
 < Q U A L I F I E R   N A M E = " U U I D "   L O C A L = " f a l s e "   T Y P E = " s t r i n g "   T O S U B C L A S S = " f a l s e "   T O I N S T A N C E = " t r u e " > 
 
 < V A L U E > < ! [ C D A T A [ { 8 5 0 2 C 4 B 7 - 5 F B B - 1 1 D 2 - A A C 1 - 0 0 6 0 0 8 C 7 8 B C 7 } ] ] > < / V A L U E > 
 
 < / Q U A L I F I E R > 
 
 < P R O P E R T Y   N A M E = " A c c e s s "   C L A S S O R I G I N = " C I M _ S t o r a g e E x t e n t "   L O C A L = " t r u e "   T Y P E = " u i n t 1 6 " > 
 
 < Q U A L I F I E R   N A M E = " C I M T Y P E "   L O C A L = " f a l s e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > 
 
 < V A L U E > < ! [ C D A T A [ u i n t 1 6 ] ] > < / V A L U E > 
 
 < / Q U A L I F I E R > 
 
 < / P R O P E R T Y > 
 
 < P R O P E R T Y   N A M E = " A v a i l a b i l i t y "   C L A S S O R I G I N = " C I M _ L o g i c a l D e v i c e "   L O C A L = " t r u e "   T Y P E = " u i n t 1 6 " > 
 
 < Q U A L I F I E R   N A M E = " C I M T Y P E "   L O C A L = " f a l s e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > 
 
 < V A L U E > < ! [ C D A T A [ u i n t 1 6 ] ] > < / V A L U E > 
 
 < / Q U A L I F I E R > 
 
 < / P R O P E R T Y > 
 
 < P R O P E R T Y   N A M E = " B l o c k S i z e "   C L A S S O R I G I N = " C I M _ S t o r a g e E x t e n t "   L O C A L = " t r u e "   T Y P E = " u i n t 6 4 " > 
 
 < Q U A L I F I E R   N A M E = " C I M T Y P E "   L O C A L = " f a l s e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > 
 
 < V A L U E > < ! [ C D A T A [ u i n t 6 4 ] ] > < / V A L U E > 
 
 < / Q U A L I F I E R > 
 
 < / P R O P E R T Y > 
 
 < P R O P E R T Y   N A M E = " C a p t i o n "   C L A S S O R I G I N = " C I M _ M a n a g e d S y s t e m E l e m e n t "   L O C A L = " t r u e "   T Y P E = " s t r i n g " > 
 
 < Q U A L I F I E R   N A M E = " C I M T Y P E "   L O C A L = " f a l s e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > 
 
 < V A L U E > < ! [ C D A T A [ s t r i n g ] ] > < / V A L U E > 
 
 < / Q U A L I F I E R > 
 
 < V A L U E > < ! [ C D A T A [ f : ] ] > < / V A L U E > 
 
 
 
 < / P R O P E R T Y > 
 
 < P R O P E R T Y   N A M E = " C o m p r e s s e d "   C L A S S O R I G I N = " W i n 3 2 _ L o g i c a l D i s k "   L O C A L = " t r u e "   T Y P E = " b o o l e a n " > 
 
 < Q U A L I F I E R   N A M E = " C I M T Y P E "   L O C A L = " f a l s e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > 
 
 < V A L U E > < ! [ C D A T A [ b o o l e a n ] ] > < / V A L U E > 
 
 < / Q U A L I F I E R > 
 
 < V A L U E > F A L S E < / V A L U E > 
 
 
 
 < / P R O P E R T Y > 
 
 < P R O P E R T Y   N A M E = " C o n f i g M a n a g e r E r r o r C o d e "   C L A S S O R I G I N = " C I M _ L o g i c a l D e v i c e "   L O C A L = " t r u e "   T Y P E = " u i n t 3 2 " > 
 
 < Q U A L I F I E R   N A M E = " C I M T Y P E "   L O C A L = " f a l s e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > 
 
 < V A L U E > < ! [ C D A T A [ u i n t 3 2 ] ] > < / V A L U E > 
 
 < / Q U A L I F I E R > 
 
 < / P R O P E R T Y > 
 
 < P R O P E R T Y   N A M E = " C o n f i g M a n a g e r U s e r C o n f i g "   C L A S S O R I G I N = " C I M _ L o g i c a l D e v i c e "   L O C A L = " t r u e "   T Y P E = " b o o l e a n " > 
 
 < Q U A L I F I E R   N A M E = " C I M T Y P E "   L O C A L = " f a l s e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > 
 
 < V A L U E > < ! [ C D A T A [ b o o l e a n ] ] > < / V A L U E > 
 
 < / Q U A L I F I E R > 
 
 < / P R O P E R T Y > 
 
 < P R O P E R T Y   N A M E = " C r e a t i o n C l a s s N a m e "   C L A S S O R I G I N = " C I M _ L o g i c a l D e v i c e "   L O C A L = " t r u e "   T Y P E = " s t r i n g " > 
 
 < Q U A L I F I E R   N A M E = " C I M T Y P E "   L O C A L = " f a l s e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > 
 
 < V A L U E > < ! [ C D A T A [ s t r i n g ] ] > < / V A L U E > 
 
 < / Q U A L I F I E R > 
 
 < V A L U E > < ! [ C D A T A [ W i n 3 2 _ L o g i c a l D i s k ] ] > < / V A L U E > 
 
 
 
 < / P R O P E R T Y > 
 
 < P R O P E R T Y   N A M E = " D e s c r i p t i o n "   C L A S S O R I G I N = " C I M _ M a n a g e d S y s t e m E l e m e n t "   L O C A L = " t r u e "   T Y P E = " s t r i n g " > 
 
 < Q U A L I F I E R   N A M E = " C I M T Y P E "   L O C A L = " f a l s e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > 
 
 < V A L U E > < ! [ C D A T A [ s t r i n g ] ] > < / V A L U E > 
 
 < / Q U A L I F I E R > 
 
 < V A L U E > < ! [ C D A T A [ C D - R O M   D i s c ] ] > < / V A L U E > 
 
 
 
 < / P R O P E R T Y > 
 
 < P R O P E R T Y   N A M E = " D e v i c e I D "   C L A S S O R I G I N = " C I M _ L o g i c a l D e v i c e "   L O C A L = " t r u e "   T Y P E = " s t r i n g " > 
 
 < Q U A L I F I E R   N A M E = " C I M T Y P E "   L O C A L = " f a l s e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > 
 
 < V A L U E > < ! [ C D A T A [ s t r i n g ] ] > < / V A L U E > 
 
 < / Q U A L I F I E R > 
 
 < Q U A L I F I E R   N A M E = " k e y "   L O C A L = " f a l s e "   T Y P E = " b o o l e a n "   O V E R R I D A B L E = " f a l s e "   T O I N S T A N C E = " t r u e " > 
 
 < V A L U E > T R U E < / V A L U E > 
 
 < / Q U A L I F I E R > 
 
 < V A L U E > < ! [ C D A T A [ f : ] ] > < / V A L U E > 
 
 
 
 < / P R O P E R T Y > 
 
 < P R O P E R T Y   N A M E = " D r i v e T y p e "   C L A S S O R I G I N = " W i n 3 2 _ L o g i c a l D i s k "   L O C A L = " t r u e "   T Y P E = " u i n t 3 2 " > 
 
 < Q U A L I F I E R   N A M E = " C I M T Y P E "   L O C A L = " f a l s e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > 
 
 < V A L U E > < ! [ C D A T A [ u i n t 3 2 ] ] > < / V A L U E > 
 
 < / Q U A L I F I E R > 
 
 < V A L U E > 5 < / V A L U E > 
 
 
 
 < / P R O P E R T Y > 
 
 < P R O P E R T Y   N A M E = " E r r o r C l e a r e d "   C L A S S O R I G I N = " C I M _ L o g i c a l D e v i c e "   L O C A L = " t r u e "   T Y P E = " b o o l e a n " > 
 
 < Q U A L I F I E R   N A M E = " C I M T Y P E "   L O C A L = " f a l s e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > 
 
 < V A L U E > < ! [ C D A T A [ b o o l e a n ] ] > < / V A L U E > 
 
 < / Q U A L I F I E R > 
 
 < / P R O P E R T Y > 
 
 < P R O P E R T Y   N A M E = " E r r o r D e s c r i p t i o n "   C L A S S O R I G I N = " C I M _ L o g i c a l D e v i c e "   L O C A L = " t r u e "   T Y P E = " s t r i n g " > 
 
 < Q U A L I F I E R   N A M E = " C I M T Y P E "   L O C A L = " f a l s e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > 
 
 < V A L U E > < ! [ C D A T A [ s t r i n g ] ] > < / V A L U E > 
 
 < / Q U A L I F I E R > 
 
 < / P R O P E R T Y > 
 
 < P R O P E R T Y   N A M E = " E r r o r M e t h o d o l o g y "   C L A S S O R I G I N = " C I M _ S t o r a g e E x t e n t "   L O C A L = " t r u e "   T Y P E = " s t r i n g " > 
 
 < Q U A L I F I E R   N A M E = " C I M T Y P E "   L O C A L = " f a l s e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > 
 
 < V A L U E > < ! [ C D A T A [ s t r i n g ] ] > < / V A L U E > 
 
 < / Q U A L I F I E R > 
 
 < / P R O P E R T Y > 
 
 < P R O P E R T Y   N A M E = " F i l e S y s t e m "   C L A S S O R I G I N = " W i n 3 2 _ L o g i c a l D i s k "   L O C A L = " t r u e "   T Y P E = " s t r i n g " > 
 
 < Q U A L I F I E R   N A M E = " C I M T Y P E "   L O C A L = " f a l s e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > 
 
 < V A L U E > < ! [ C D A T A [ s t r i n g ] ] > < / V A L U E > 
 
 < / Q U A L I F I E R > 
 
 < V A L U E > < ! [ C D A T A [ C D F S ] ] > < / V A L U E > 
 
 
 
 < / P R O P E R T Y > 
 
 < P R O P E R T Y   N A M E = " F r e e S p a c e "   C L A S S O R I G I N = " C I M _ L o g i c a l D i s k "   L O C A L = " t r u e "   T Y P E = " u i n t 6 4 " > 
 
 < Q U A L I F I E R   N A M E = " C I M T Y P E "   L O C A L = " f a l s e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > 
 
 < V A L U E > < ! [ C D A T A [ u i n t 6 4 ] ] > < / V A L U E > 
 
 < / Q U A L I F I E R > 
 
 < V A L U E > 0 < / V A L U E > 
 
 
 
 < / P R O P E R T Y > 
 
 < P R O P E R T Y   N A M E = " I n s t a l l D a t e "   C L A S S O R I G I N = " C I M _ M a n a g e d S y s t e m E l e m e n t "   L O C A L = " t r u e "   T Y P E = " d a t e t i m e " > 
 
 < Q U A L I F I E R   N A M E = " C I M T Y P E "   L O C A L = " f a l s e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > 
 
 < V A L U E > < ! [ C D A T A [ d a t e t i m e ] ] > < / V A L U E > 
 
 < / Q U A L I F I E R > 
 
 < / P R O P E R T Y > 
 
 < P R O P E R T Y   N A M E = " L a s t E r r o r C o d e "   C L A S S O R I G I N = " C I M _ L o g i c a l D e v i c e "   L O C A L = " t r u e "   T Y P E = " u i n t 3 2 " > 
 
 < Q U A L I F I E R   N A M E = " C I M T Y P E "   L O C A L = " f a l s e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > 
 
 < V A L U E > < ! [ C D A T A [ u i n t 3 2 ] ] > < / V A L U E > 
 
 < / Q U A L I F I E R > 
 
 < / P R O P E R T Y > 
 
 < P R O P E R T Y   N A M E = " M a x i m u m C o m p o n e n t L e n g t h "   C L A S S O R I G I N = " W i n 3 2 _ L o g i c a l D i s k "   L O C A L = " t r u e "   T Y P E = " u i n t 3 2 " > 
 
 < Q U A L I F I E R   N A M E = " C I M T Y P E "   L O C A L = " f a l s e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > 
 
 < V A L U E > < ! [ C D A T A [ u i n t 3 2 ] ] > < / V A L U E > 
 
 < / Q U A L I F I E R > 
 
 < V A L U E > 2 2 1 < / V A L U E > 
 
 
 
 < / P R O P E R T Y > 
 
 < P R O P E R T Y   N A M E = " M e d i a T y p e "   C L A S S O R I G I N = " W i n 3 2 _ L o g i c a l D i s k "   L O C A L = " t r u e "   T Y P E = " u i n t 3 2 " > 
 
 < Q U A L I F I E R   N A M E = " C I M T Y P E "   L O C A L = " f a l s e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > 
 
 < V A L U E > < ! [ C D A T A [ u i n t 3 2 ] ] > < / V A L U E > 
 
 < / Q U A L I F I E R > 
 
 < V A L U E > 1 1 < / V A L U E > 
 
 
 
 < / P R O P E R T Y > 
 
 < P R O P E R T Y   N A M E = " N a m e "   C L A S S O R I G I N = " C I M _ M a n a g e d S y s t e m E l e m e n t "   L O C A L = " t r u e "   T Y P E = " s t r i n g " > 
 
 < Q U A L I F I E R   N A M E = " C I M T Y P E "   L O C A L = " f a l s e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > 
 
 < V A L U E > < ! [ C D A T A [ s t r i n g ] ] > < / V A L U E > 
 
 < / Q U A L I F I E R > 
 
 < V A L U E > < ! [ C D A T A [ f : ] ] > < / V A L U E > 
 
 
 
 < / P R O P E R T Y > 
 
 < P R O P E R T Y   N A M E = " N u m b e r O f B l o c k s "   C L A S S O R I G I N = " C I M _ S t o r a g e E x t e n t "   L O C A L = " t r u e "   T Y P E = " u i n t 6 4 " > 
 
 < Q U A L I F I E R   N A M E = " C I M T Y P E "   L O C A L = " f a l s e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > 
 
 < V A L U E > < ! [ C D A T A [ u i n t 6 4 ] ] > < / V A L U E > 
 
 < / Q U A L I F I E R > 
 
 < / P R O P E R T Y > 
 
 < P R O P E R T Y   N A M E = " P N P D e v i c e I D "   C L A S S O R I G I N = " C I M _ L o g i c a l D e v i c e "   L O C A L = " t r u e "   T Y P E = " s t r i n g " > 
 
 < Q U A L I F I E R   N A M E = " C I M T Y P E "   L O C A L = " f a l s e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > 
 
 < V A L U E > < ! [ C D A T A [ s t r i n g ] ] > < / V A L U E > 
 
 < / Q U A L I F I E R > 
 
 < / P R O P E R T Y > 
 
 < P R O P E R T Y . A R R A Y   N A M E = " P o w e r M a n a g e m e n t C a p a b i l i t i e s "   C L A S S O R I G I N = " C I M _ L o g i c a l D e v i c e "   L O C A L = " t r u e "   T Y P E = " u i n t 1 6 " > 
 
 < Q U A L I F I E R   N A M E = " C I M T Y P E "   L O C A L = " f a l s e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > 
 
 < V A L U E > < ! [ C D A T A [ u i n t 1 6 ] ] > < / V A L U E > 
 
 < / Q U A L I F I E R > 
 
 < / P R O P E R T Y . A R R A Y > 
 
 < P R O P E R T Y   N A M E = " P o w e r M a n a g e m e n t S u p p o r t e d "   C L A S S O R I G I N = " C I M _ L o g i c a l D e v i c e "   L O C A L = " t r u e "   T Y P E = " b o o l e a n " > 
 
 < Q U A L I F I E R   N A M E = " C I M T Y P E "   L O C A L = " f a l s e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > 
 
 < V A L U E > < ! [ C D A T A [ b o o l e a n ] ] > < / V A L U E > 
 
 < / Q U A L I F I E R > 
 
 < / P R O P E R T Y > 
 
 < P R O P E R T Y   N A M E = " P r o v i d e r N a m e "   C L A S S O R I G I N = " W i n 3 2 _ L o g i c a l D i s k "   L O C A L = " t r u e "   T Y P E = " s t r i n g " > 
 
 < Q U A L I F I E R   N A M E = " C I M T Y P E "   L O C A L = " f a l s e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > 
 
 < V A L U E > < ! [ C D A T A [ s t r i n g ] ] > < / V A L U E > 
 
 < / Q U A L I F I E R > 
 
 < / P R O P E R T Y > 
 
 < P R O P E R T Y   N A M E = " P u r p o s e "   C L A S S O R I G I N = " C I M _ S t o r a g e E x t e n t "   L O C A L = " t r u e "   T Y P E = " s t r i n g " > 
 
 < Q U A L I F I E R   N A M E = " C I M T Y P E "   L O C A L = " f a l s e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > 
 
 < V A L U E > < ! [ C D A T A [ s t r i n g ] ] > < / V A L U E > 
 
 < / Q U A L I F I E R > 
 
 < / P R O P E R T Y > 
 
 < P R O P E R T Y   N A M E = " S i z e "   C L A S S O R I G I N = " C I M _ L o g i c a l D i s k "   L O C A L = " t r u e "   T Y P E = " u i n t 6 4 " > 
 
 < Q U A L I F I E R   N A M E = " C I M T Y P E "   L O C A L = " f a l s e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > 
 
 < V A L U E > < ! [ C D A T A [ u i n t 6 4 ] ] > < / V A L U E > 
 
 < / Q U A L I F I E R > 
 
 < V A L U E > 1 9 0 4 8 4 4 8 < / V A L U E > 
 
 
 
 < / P R O P E R T Y > 
 
 < P R O P E R T Y   N A M E = " S t a t u s "   C L A S S O R I G I N = " C I M _ M a n a g e d S y s t e m E l e m e n t "   L O C A L = " t r u e "   T Y P E = " s t r i n g " > 
 
 < Q U A L I F I E R   N A M E = " C I M T Y P E "   L O C A L = " f a l s e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > 
 
 < V A L U E > < ! [ C D A T A [ s t r i n g ] ] > < / V A L U E > 
 
 < / Q U A L I F I E R > 
 
 < / P R O P E R T Y > 
 
 < P R O P E R T Y   N A M E = " S t a t u s I n f o "   C L A S S O R I G I N = " C I M _ L o g i c a l D e v i c e "   L O C A L = " t r u e "   T Y P E = " u i n t 1 6 " > 
 
 < Q U A L I F I E R   N A M E = " C I M T Y P E "   L O C A L = " f a l s e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > 
 
 < V A L U E > < ! [ C D A T A [ u i n t 1 6 ] ] > < / V A L U E > 
 
 < / Q U A L I F I E R > 
 
 < / P R O P E R T Y > 
 
 < P R O P E R T Y   N A M E = " S u p p o r t s F i l e B a s e d C o m p r e s s i o n "   C L A S S O R I G I N = " W i n 3 2 _ L o g i c a l D i s k "   L O C A L = " t r u e "   T Y P E = " b o o l e a n " > 
 
 < Q U A L I F I E R   N A M E = " C I M T Y P E "   L O C A L = " f a l s e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > 
 
 < V A L U E > < ! [ C D A T A [ b o o l e a n ] ] > < / V A L U E > 
 
 < / Q U A L I F I E R > 
 
 < V A L U E > F A L S E < / V A L U E > 
 
 
 
 < / P R O P E R T Y > 
 
 < P R O P E R T Y   N A M E = " S y s t e m C r e a t i o n C l a s s N a m e "   C L A S S O R I G I N = " C I M _ L o g i c a l D e v i c e "   L O C A L = " t r u e "   T Y P E = " s t r i n g " > 
 
 < Q U A L I F I E R   N A M E = " C I M T Y P E "   L O C A L = " f a l s e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > 
 
 < V A L U E > < ! [ C D A T A [ s t r i n g ] ] > < / V A L U E > 
 
 < / Q U A L I F I E R > 
 
 < V A L U E > < ! [ C D A T A [ W i n 3 2 _ C o m p u t e r S y s t e m ] ] > < / V A L U E > 
 
 
 
 < / P R O P E R T Y > 
 
 < P R O P E R T Y   N A M E = " S y s t e m N a m e "   C L A S S O R I G I N = " C I M _ L o g i c a l D e v i c e "   L O C A L = " t r u e "   T Y P E = " s t r i n g " > 
 
 < Q U A L I F I E R   N A M E = " C I M T Y P E "   L O C A L = " f a l s e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > 
 
 < V A L U E > < ! [ C D A T A [ s t r i n g ] ] > < / V A L U E > 
 
 < / Q U A L I F I E R > 
 
 < V A L U E > < ! [ C D A T A [ W B E M _ T E C R A _ 2 ] ] > < / V A L U E > 
 
 
 
 < / P R O P E R T Y > 
 
 < P R O P E R T Y   N A M E = " V o l u m e N a m e "   C L A S S O R I G I N = " W i n 3 2 _ L o g i c a l D i s k "   L O C A L = " t r u e "   T Y P E = " s t r i n g " > 
 
 < Q U A L I F I E R   N A M E = " C I M T Y P E "   L O C A L = " f a l s e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > 
 
 < V A L U E > < ! [ C D A T A [ s t r i n g ] ] > < / V A L U E > 
 
 < / Q U A L I F I E R > 
 
 < V A L U E > < ! [ C D A T A [ C D _ R O M ] ] > < / V A L U E > 
 
 
 
 < / P R O P E R T Y > 
 
 < P R O P E R T Y   N A M E = " V o l u m e S e r i a l N u m b e r "   C L A S S O R I G I N = " W i n 3 2 _ L o g i c a l D i s k "   L O C A L = " t r u e "   T Y P E = " s t r i n g " > 
 
 < Q U A L I F I E R   N A M E = " C I M T Y P E "   L O C A L = " f a l s e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > 
 
 < V A L U E > < ! [ C D A T A [ s t r i n g ] ] > < / V A L U E > 
 
 < / Q U A L I F I E R > 
 
 < V A L U E > < ! [ C D A T A [ 0 B 1 9 6 7 A 2 ] ] > < / V A L U E > 
 
 
 
 < / P R O P E R T Y > 
 
 < / I N S T A N C E > 
 
 < / D E C L G R O U P > < / D E C L A R A T I O N > < / C I M > 
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\wmi\wbem\xmltransport\samples\xmltest\diska.xml ===
< ? x m l   v e r s i o n = " 1 . 0 "   ? > 
 
 < C I M   C I M V E R S I O N = " 2 . 0 "   D T D V E R S I O N = " 2 . 0 "   > 
 
 < D E C L A R A T I O N > 
 
 < D E C L G R O U P > 
 
 < I N S T A N C E   C L A S S N A M E = " W i n 3 2 _ L o g i c a l D i s k " > 
 
 < Q U A L I F I E R   N A M E = " d y n a m i c "   L O C A L = " f a l s e "   T Y P E = " b o o l e a n "   T O S U B C L A S S = " f a l s e "   T O I N S T A N C E = " t r u e " > 
 
 < V A L U E > T R U E < / V A L U E > 
 
 < / Q U A L I F I E R > 
 
 < Q U A L I F I E R   N A M E = " L o c a l e "   L O C A L = " f a l s e "   T Y P E = " s i n t 3 2 "   T O S U B C L A S S = " f a l s e "   T O I N S T A N C E = " t r u e " > 
 
 < V A L U E > 1 0 3 3 < / V A L U E > 
 
 < / Q U A L I F I E R > 
 
 < Q U A L I F I E R   N A M E = " p r o v i d e r "   L O C A L = " f a l s e "   T Y P E = " s t r i n g "   T O S U B C L A S S = " f a l s e "   T O I N S T A N C E = " t r u e " > 
 
 < V A L U E > < ! [ C D A T A [ C I M W i n 3 2 ] ] > < / V A L U E > 
 
 < / Q U A L I F I E R > 
 
 < Q U A L I F I E R   N A M E = " U U I D "   L O C A L = " f a l s e "   T Y P E = " s t r i n g "   T O S U B C L A S S = " f a l s e "   T O I N S T A N C E = " t r u e " > 
 
 < V A L U E > < ! [ C D A T A [ { 8 5 0 2 C 4 B 7 - 5 F B B - 1 1 D 2 - A A C 1 - 0 0 6 0 0 8 C 7 8 B C 7 } ] ] > < / V A L U E > 
 
 < / Q U A L I F I E R > 
 
 < P R O P E R T Y   N A M E = " A c c e s s "   C L A S S O R I G I N = " C I M _ S t o r a g e E x t e n t "   L O C A L = " t r u e "   T Y P E = " u i n t 1 6 " > 
 
 < Q U A L I F I E R   N A M E = " C I M T Y P E "   L O C A L = " f a l s e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > 
 
 < V A L U E > < ! [ C D A T A [ u i n t 1 6 ] ] > < / V A L U E > 
 
 < / Q U A L I F I E R > 
 
 < / P R O P E R T Y > 
 
 < P R O P E R T Y   N A M E = " A v a i l a b i l i t y "   C L A S S O R I G I N = " C I M _ L o g i c a l D e v i c e "   L O C A L = " t r u e "   T Y P E = " u i n t 1 6 " > 
 
 < Q U A L I F I E R   N A M E = " C I M T Y P E "   L O C A L = " f a l s e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > 
 
 < V A L U E > < ! [ C D A T A [ u i n t 1 6 ] ] > < / V A L U E > 
 
 < / Q U A L I F I E R > 
 
 < / P R O P E R T Y > 
 
 < P R O P E R T Y   N A M E = " B l o c k S i z e "   C L A S S O R I G I N = " C I M _ S t o r a g e E x t e n t "   L O C A L = " t r u e "   T Y P E = " u i n t 6 4 " > 
 
 < Q U A L I F I E R   N A M E = " C I M T Y P E "   L O C A L = " f a l s e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > 
 
 < V A L U E > < ! [ C D A T A [ u i n t 6 4 ] ] > < / V A L U E > 
 
 < / Q U A L I F I E R > 
 
 < / P R O P E R T Y > 
 
 < P R O P E R T Y   N A M E = " C a p t i o n "   C L A S S O R I G I N = " C I M _ M a n a g e d S y s t e m E l e m e n t "   L O C A L = " t r u e "   T Y P E = " s t r i n g " > 
 
 < Q U A L I F I E R   N A M E = " C I M T Y P E "   L O C A L = " f a l s e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > 
 
 < V A L U E > < ! [ C D A T A [ s t r i n g ] ] > < / V A L U E > 
 
 < / Q U A L I F I E R > 
 
 < V A L U E > < ! [ C D A T A [ a : ] ] > < / V A L U E > 
 
 
 
 < / P R O P E R T Y > 
 
 < P R O P E R T Y   N A M E = " C o m p r e s s e d "   C L A S S O R I G I N = " W i n 3 2 _ L o g i c a l D i s k "   L O C A L = " t r u e "   T Y P E = " b o o l e a n " > 
 
 < Q U A L I F I E R   N A M E = " C I M T Y P E "   L O C A L = " f a l s e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > 
 
 < V A L U E > < ! [ C D A T A [ b o o l e a n ] ] > < / V A L U E > 
 
 < / Q U A L I F I E R > 
 
 < V A L U E > F A L S E < / V A L U E > 
 
 
 
 < / P R O P E R T Y > 
 
 < P R O P E R T Y   N A M E = " C o n f i g M a n a g e r E r r o r C o d e "   C L A S S O R I G I N = " C I M _ L o g i c a l D e v i c e "   L O C A L = " t r u e "   T Y P E = " u i n t 3 2 " > 
 
 < Q U A L I F I E R   N A M E = " C I M T Y P E "   L O C A L = " f a l s e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > 
 
 < V A L U E > < ! [ C D A T A [ u i n t 3 2 ] ] > < / V A L U E > 
 
 < / Q U A L I F I E R > 
 
 < / P R O P E R T Y > 
 
 < P R O P E R T Y   N A M E = " C o n f i g M a n a g e r U s e r C o n f i g "   C L A S S O R I G I N = " C I M _ L o g i c a l D e v i c e "   L O C A L = " t r u e "   T Y P E = " b o o l e a n " > 
 
 < Q U A L I F I E R   N A M E = " C I M T Y P E "   L O C A L = " f a l s e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > 
 
 < V A L U E > < ! [ C D A T A [ b o o l e a n ] ] > < / V A L U E > 
 
 < / Q U A L I F I E R > 
 
 < / P R O P E R T Y > 
 
 < P R O P E R T Y   N A M E = " C r e a t i o n C l a s s N a m e "   C L A S S O R I G I N = " C I M _ L o g i c a l D e v i c e "   L O C A L = " t r u e "   T Y P E = " s t r i n g " > 
 
 < Q U A L I F I E R   N A M E = " C I M T Y P E "   L O C A L = " f a l s e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > 
 
 < V A L U E > < ! [ C D A T A [ s t r i n g ] ] > < / V A L U E > 
 
 < / Q U A L I F I E R > 
 
 < V A L U E > < ! [ C D A T A [ W i n 3 2 _ L o g i c a l D i s k ] ] > < / V A L U E > 
 
 
 
 < / P R O P E R T Y > 
 
 < P R O P E R T Y   N A M E = " D e s c r i p t i o n "   C L A S S O R I G I N = " C I M _ M a n a g e d S y s t e m E l e m e n t "   L O C A L = " t r u e "   T Y P E = " s t r i n g " > 
 
 < Q U A L I F I E R   N A M E = " C I M T Y P E "   L O C A L = " f a l s e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > 
 
 < V A L U E > < ! [ C D A T A [ s t r i n g ] ] > < / V A L U E > 
 
 < / Q U A L I F I E R > 
 
 < V A L U E > < ! [ C D A T A [ 3   1 / 2   I n c h   F l o p p y   D r i v e ] ] > < / V A L U E > 
 
 
 
 < / P R O P E R T Y > 
 
 < P R O P E R T Y   N A M E = " D e v i c e I D "   C L A S S O R I G I N = " C I M _ L o g i c a l D e v i c e "   L O C A L = " t r u e "   T Y P E = " s t r i n g " > 
 
 < Q U A L I F I E R   N A M E = " C I M T Y P E "   L O C A L = " f a l s e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > 
 
 < V A L U E > < ! [ C D A T A [ s t r i n g ] ] > < / V A L U E > 
 
 < / Q U A L I F I E R > 
 
 < Q U A L I F I E R   N A M E = " k e y "   L O C A L = " f a l s e "   T Y P E = " b o o l e a n "   O V E R R I D A B L E = " f a l s e "   T O I N S T A N C E = " t r u e " > 
 
 < V A L U E > T R U E < / V A L U E > 
 
 < / Q U A L I F I E R > 
 
 < V A L U E > < ! [ C D A T A [ a : ] ] > < / V A L U E > 
 
 
 
 < / P R O P E R T Y > 
 
 < P R O P E R T Y   N A M E = " D r i v e T y p e "   C L A S S O R I G I N = " W i n 3 2 _ L o g i c a l D i s k "   L O C A L = " t r u e "   T Y P E = " u i n t 3 2 " > 
 
 < Q U A L I F I E R   N A M E = " C I M T Y P E "   L O C A L = " f a l s e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > 
 
 < V A L U E > < ! [ C D A T A [ u i n t 3 2 ] ] > < / V A L U E > 
 
 < / Q U A L I F I E R > 
 
 < V A L U E > 2 < / V A L U E > 
 
 
 
 < / P R O P E R T Y > 
 
 < P R O P E R T Y   N A M E = " E r r o r C l e a r e d "   C L A S S O R I G I N = " C I M _ L o g i c a l D e v i c e "   L O C A L = " t r u e "   T Y P E = " b o o l e a n " > 
 
 < Q U A L I F I E R   N A M E = " C I M T Y P E "   L O C A L = " f a l s e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > 
 
 < V A L U E > < ! [ C D A T A [ b o o l e a n ] ] > < / V A L U E > 
 
 < / Q U A L I F I E R > 
 
 < / P R O P E R T Y > 
 
 < P R O P E R T Y   N A M E = " E r r o r D e s c r i p t i o n "   C L A S S O R I G I N = " C I M _ L o g i c a l D e v i c e "   L O C A L = " t r u e "   T Y P E = " s t r i n g " > 
 
 < Q U A L I F I E R   N A M E = " C I M T Y P E "   L O C A L = " f a l s e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > 
 
 < V A L U E > < ! [ C D A T A [ s t r i n g ] ] > < / V A L U E > 
 
 < / Q U A L I F I E R > 
 
 < / P R O P E R T Y > 
 
 < P R O P E R T Y   N A M E = " E r r o r M e t h o d o l o g y "   C L A S S O R I G I N = " C I M _ S t o r a g e E x t e n t "   L O C A L = " t r u e "   T Y P E = " s t r i n g " > 
 
 < Q U A L I F I E R   N A M E = " C I M T Y P E "   L O C A L = " f a l s e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > 
 
 < V A L U E > < ! [ C D A T A [ s t r i n g ] ] > < / V A L U E > 
 
 < / Q U A L I F I E R > 
 
 < / P R O P E R T Y > 
 
 < P R O P E R T Y   N A M E = " F i l e S y s t e m "   C L A S S O R I G I N = " W i n 3 2 _ L o g i c a l D i s k "   L O C A L = " t r u e "   T Y P E = " s t r i n g " > 
 
 < Q U A L I F I E R   N A M E = " C I M T Y P E "   L O C A L = " f a l s e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > 
 
 < V A L U E > < ! [ C D A T A [ s t r i n g ] ] > < / V A L U E > 
 
 < / Q U A L I F I E R > 
 
 < V A L U E > < ! [ C D A T A [ F A T ] ] > < / V A L U E > 
 
 
 
 < / P R O P E R T Y > 
 
 < P R O P E R T Y   N A M E = " F r e e S p a c e "   C L A S S O R I G I N = " C I M _ L o g i c a l D i s k "   L O C A L = " t r u e "   T Y P E = " u i n t 6 4 " > 
 
 < Q U A L I F I E R   N A M E = " C I M T Y P E "   L O C A L = " f a l s e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > 
 
 < V A L U E > < ! [ C D A T A [ u i n t 6 4 ] ] > < / V A L U E > 
 
 < / Q U A L I F I E R > 
 
 < V A L U E > 4 5 0 5 6 0 < / V A L U E > 
 
 
 
 < / P R O P E R T Y > 
 
 < P R O P E R T Y   N A M E = " I n s t a l l D a t e "   C L A S S O R I G I N = " C I M _ M a n a g e d S y s t e m E l e m e n t "   L O C A L = " t r u e "   T Y P E = " d a t e t i m e " > 
 
 < Q U A L I F I E R   N A M E = " C I M T Y P E "   L O C A L = " f a l s e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > 
 
 < V A L U E > < ! [ C D A T A [ d a t e t i m e ] ] > < / V A L U E > 
 
 < / Q U A L I F I E R > 
 
 < / P R O P E R T Y > 
 
 < P R O P E R T Y   N A M E = " L a s t E r r o r C o d e "   C L A S S O R I G I N = " C I M _ L o g i c a l D e v i c e "   L O C A L = " t r u e "   T Y P E = " u i n t 3 2 " > 
 
 < Q U A L I F I E R   N A M E = " C I M T Y P E "   L O C A L = " f a l s e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > 
 
 < V A L U E > < ! [ C D A T A [ u i n t 3 2 ] ] > < / V A L U E > 
 
 < / Q U A L I F I E R > 
 
 < / P R O P E R T Y > 
 
 < P R O P E R T Y   N A M E = " M a x i m u m C o m p o n e n t L e n g t h "   C L A S S O R I G I N = " W i n 3 2 _ L o g i c a l D i s k "   L O C A L = " t r u e "   T Y P E = " u i n t 3 2 " > 
 
 < Q U A L I F I E R   N A M E = " C I M T Y P E "   L O C A L = " f a l s e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > 
 
 < V A L U E > < ! [ C D A T A [ u i n t 3 2 ] ] > < / V A L U E > 
 
 < / Q U A L I F I E R > 
 
 < V A L U E > 2 5 5 < / V A L U E > 
 
 
 
 < / P R O P E R T Y > 
 
 < P R O P E R T Y   N A M E = " M e d i a T y p e "   C L A S S O R I G I N = " W i n 3 2 _ L o g i c a l D i s k "   L O C A L = " t r u e "   T Y P E = " u i n t 3 2 " > 
 
 < Q U A L I F I E R   N A M E = " C I M T Y P E "   L O C A L = " f a l s e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > 
 
 < V A L U E > < ! [ C D A T A [ u i n t 3 2 ] ] > < / V A L U E > 
 
 < / Q U A L I F I E R > 
 
 < V A L U E > 5 < / V A L U E > 
 
 
 
 < / P R O P E R T Y > 
 
 < P R O P E R T Y   N A M E = " N a m e "   C L A S S O R I G I N = " C I M _ M a n a g e d S y s t e m E l e m e n t "   L O C A L = " t r u e "   T Y P E = " s t r i n g " > 
 
 < Q U A L I F I E R   N A M E = " C I M T Y P E "   L O C A L = " f a l s e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > 
 
 < V A L U E > < ! [ C D A T A [ s t r i n g ] ] > < / V A L U E > 
 
 < / Q U A L I F I E R > 
 
 < V A L U E > < ! [ C D A T A [ a : ] ] > < / V A L U E > 
 
 
 
 < / P R O P E R T Y > 
 
 < P R O P E R T Y   N A M E = " N u m b e r O f B l o c k s "   C L A S S O R I G I N = " C I M _ S t o r a g e E x t e n t "   L O C A L = " t r u e "   T Y P E = " u i n t 6 4 " > 
 
 < Q U A L I F I E R   N A M E = " C I M T Y P E "   L O C A L = " f a l s e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > 
 
 < V A L U E > < ! [ C D A T A [ u i n t 6 4 ] ] > < / V A L U E > 
 
 < / Q U A L I F I E R > 
 
 < / P R O P E R T Y > 
 
 < P R O P E R T Y   N A M E = " P N P D e v i c e I D "   C L A S S O R I G I N = " C I M _ L o g i c a l D e v i c e "   L O C A L = " t r u e "   T Y P E = " s t r i n g " > 
 
 < Q U A L I F I E R   N A M E = " C I M T Y P E "   L O C A L = " f a l s e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > 
 
 < V A L U E > < ! [ C D A T A [ s t r i n g ] ] > < / V A L U E > 
 
 < / Q U A L I F I E R > 
 
 < / P R O P E R T Y > 
 
 < P R O P E R T Y . A R R A Y   N A M E = " P o w e r M a n a g e m e n t C a p a b i l i t i e s "   C L A S S O R I G I N = " C I M _ L o g i c a l D e v i c e "   L O C A L = " t r u e "   T Y P E = " u i n t 1 6 " > 
 
 < Q U A L I F I E R   N A M E = " C I M T Y P E "   L O C A L = " f a l s e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > 
 
 < V A L U E > < ! [ C D A T A [ u i n t 1 6 ] ] > < / V A L U E > 
 
 < / Q U A L I F I E R > 
 
 < / P R O P E R T Y . A R R A Y > 
 
 < P R O P E R T Y   N A M E = " P o w e r M a n a g e m e n t S u p p o r t e d "   C L A S S O R I G I N = " C I M _ L o g i c a l D e v i c e "   L O C A L = " t r u e "   T Y P E = " b o o l e a n " > 
 
 < Q U A L I F I E R   N A M E = " C I M T Y P E "   L O C A L = " f a l s e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > 
 
 < V A L U E > < ! [ C D A T A [ b o o l e a n ] ] > < / V A L U E > 
 
 < / Q U A L I F I E R > 
 
 < / P R O P E R T Y > 
 
 < P R O P E R T Y   N A M E = " P r o v i d e r N a m e "   C L A S S O R I G I N = " W i n 3 2 _ L o g i c a l D i s k "   L O C A L = " t r u e "   T Y P E = " s t r i n g " > 
 
 < Q U A L I F I E R   N A M E = " C I M T Y P E "   L O C A L = " f a l s e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > 
 
 < V A L U E > < ! [ C D A T A [ s t r i n g ] ] > < / V A L U E > 
 
 < / Q U A L I F I E R > 
 
 < / P R O P E R T Y > 
 
 < P R O P E R T Y   N A M E = " P u r p o s e "   C L A S S O R I G I N = " C I M _ S t o r a g e E x t e n t "   L O C A L = " t r u e "   T Y P E = " s t r i n g " > 
 
 < Q U A L I F I E R   N A M E = " C I M T Y P E "   L O C A L = " f a l s e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > 
 
 < V A L U E > < ! [ C D A T A [ s t r i n g ] ] > < / V A L U E > 
 
 < / Q U A L I F I E R > 
 
 < / P R O P E R T Y > 
 
 < P R O P E R T Y   N A M E = " S i z e "   C L A S S O R I G I N = " C I M _ L o g i c a l D i s k "   L O C A L = " t r u e "   T Y P E = " u i n t 6 4 " > 
 
 < Q U A L I F I E R   N A M E = " C I M T Y P E "   L O C A L = " f a l s e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > 
 
 < V A L U E > < ! [ C D A T A [ u i n t 6 4 ] ] > < / V A L U E > 
 
 < / Q U A L I F I E R > 
 
 < V A L U E > 1 4 5 7 6 6 4 < / V A L U E > 
 
 
 
 < / P R O P E R T Y > 
 
 < P R O P E R T Y   N A M E = " S t a t u s "   C L A S S O R I G I N = " C I M _ M a n a g e d S y s t e m E l e m e n t "   L O C A L = " t r u e "   T Y P E = " s t r i n g " > 
 
 < Q U A L I F I E R   N A M E = " C I M T Y P E "   L O C A L = " f a l s e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > 
 
 < V A L U E > < ! [ C D A T A [ s t r i n g ] ] > < / V A L U E > 
 
 < / Q U A L I F I E R > 
 
 < / P R O P E R T Y > 
 
 < P R O P E R T Y   N A M E = " S t a t u s I n f o "   C L A S S O R I G I N = " C I M _ L o g i c a l D e v i c e "   L O C A L = " t r u e "   T Y P E = " u i n t 1 6 " > 
 
 < Q U A L I F I E R   N A M E = " C I M T Y P E "   L O C A L = " f a l s e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > 
 
 < V A L U E > < ! [ C D A T A [ u i n t 1 6 ] ] > < / V A L U E > 
 
 < / Q U A L I F I E R > 
 
 < / P R O P E R T Y > 
 
 < P R O P E R T Y   N A M E = " S u p p o r t s F i l e B a s e d C o m p r e s s i o n "   C L A S S O R I G I N = " W i n 3 2 _ L o g i c a l D i s k "   L O C A L = " t r u e "   T Y P E = " b o o l e a n " > 
 
 < Q U A L I F I E R   N A M E = " C I M T Y P E "   L O C A L = " f a l s e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > 
 
 < V A L U E > < ! [ C D A T A [ b o o l e a n ] ] > < / V A L U E > 
 
 < / Q U A L I F I E R > 
 
 < V A L U E > F A L S E < / V A L U E > 
 
 
 
 < / P R O P E R T Y > 
 
 < P R O P E R T Y   N A M E = " S y s t e m C r e a t i o n C l a s s N a m e "   C L A S S O R I G I N = " C I M _ L o g i c a l D e v i c e "   L O C A L = " t r u e "   T Y P E = " s t r i n g " > 
 
 < Q U A L I F I E R   N A M E = " C I M T Y P E "   L O C A L = " f a l s e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > 
 
 < V A L U E > < ! [ C D A T A [ s t r i n g ] ] > < / V A L U E > 
 
 < / Q U A L I F I E R > 
 
 < V A L U E > < ! [ C D A T A [ W i n 3 2 _ C o m p u t e r S y s t e m ] ] > < / V A L U E > 
 
 
 
 < / P R O P E R T Y > 
 
 < P R O P E R T Y   N A M E = " S y s t e m N a m e "   C L A S S O R I G I N = " C I M _ L o g i c a l D e v i c e "   L O C A L = " t r u e "   T Y P E = " s t r i n g " > 
 
 < Q U A L I F I E R   N A M E = " C I M T Y P E "   L O C A L = " f a l s e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > 
 
 < V A L U E > < ! [ C D A T A [ s t r i n g ] ] > < / V A L U E > 
 
 < / Q U A L I F I E R > 
 
 < V A L U E > < ! [ C D A T A [ W B E M _ T E C R A _ 2 ] ] > < / V A L U E > 
 
 
 
 < / P R O P E R T Y > 
 
 < P R O P E R T Y   N A M E = " V o l u m e N a m e "   C L A S S O R I G I N = " W i n 3 2 _ L o g i c a l D i s k "   L O C A L = " t r u e "   T Y P E = " s t r i n g " > 
 
 < Q U A L I F I E R   N A M E = " C I M T Y P E "   L O C A L = " f a l s e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > 
 
 < V A L U E > < ! [ C D A T A [ s t r i n g ] ] > < / V A L U E > 
 
 < / Q U A L I F I E R > 
 
 < V A L U E > < ! [ C D A T A [ ] ] > < / V A L U E > 
 
 
 
 < / P R O P E R T Y > 
 
 < P R O P E R T Y   N A M E = " V o l u m e S e r i a l N u m b e r "   C L A S S O R I G I N = " W i n 3 2 _ L o g i c a l D i s k "   L O C A L = " t r u e "   T Y P E = " s t r i n g " > 
 
 < Q U A L I F I E R   N A M E = " C I M T Y P E "   L O C A L = " f a l s e "   T Y P E = " s t r i n g "   T O I N S T A N C E = " t r u e " > 
 
 < V A L U E > < ! [ C D A T A [ s t r i n g ] ] > < / V A L U E > 
 
 < / Q U A L I F I E R > 
 
 < V A L U E > < ! [ C D A T A [ 0 0 0 0 0 0 0 0 ] ] > < / V A L U E > 
 
 
 
 < / P R O P E R T Y > 
 
 < / I N S T A N C E > 
 
 < / D E C L G R O U P > < / D E C L A R A T I O N > < / C I M > 
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\wmi\wbem\xmltransport\tools\readme.txt ===
This directory contains the conversion tools necessary to transform our
DTDs into XSD (XML Schema Documents) suitable for integration into the
VS7 XML editing environment.

Please be aware that currently this is a non-automated process. The steps
you need to carry out to do this are as follows:


1) If you haven't done so, install MSXML 2.6 on your host; this is needed
   for the final stage of the conversion.  The msxmlwr.exe included in
   this folder contains the latest (March 2000) web preview release of
   MXSML. You'll need to run this to install MSXML.

2) If a DTD file has changed, you will need to check out the following
   files from the .\DTD subdirectory

		<dtdname>.xdr
		<dtdname>.xds

   where <dtdname> is the DTD file prefix (e.g. CIM20, WMI20).

3) Run the dtd2schema.exe utility on the DTD, to generate the XDR file.

	dtd2schema -o ..\dtd\<dtdname>.xdr ..\dtd\<dtdname>.dtd

4) Hand-edit the .XDR file produced so that the following changes are
   made:

	- Wherever a DTD production of the form 

		<!ELEMENT FOO (BAR, BAR+)>

	  occurs (currently only the MULTIREQ and MULTIRSP elements fit
          this pattern), change the output in the XDR file from

	<ElementType name="FOO" content="eltOnly">
		<group order="seq">
			<element type="BAR"/>
			<element type="BAR"/>
		</group>
	</ElementType>

          to

	<ElementType name="FOO" content="eltOnly">
		<group order="seq">
			<element type="BAR"/>
			<element type="BAR" maxOccurs="*"/>
		</group>
	</ElementType>

5) Then run the convert.js utility on the XDR to generate the XDS file.

	cscript convert.js ..\dtd\<dtdname>.xdr ..\dtd\<dtdname>.xds

6) Hand-edit the XDS file generated to include the correct VS7 intellisense
   annotations. At the time of writing these are known to include

	1) Change the opening lines of the file

		<!--
		   [XDR-XDS] This schema automatically updated from an IE5-compatible XDR schema to W3C
		   XML Schema.
		-->
		<!DOCTYPE schema SYSTEM "xsd.dtd">
		<schema xmlns="http://www.w3.org/1999/XMLSchema" version="1.0">

	   to


		<?xml version='1.0' ?>
		<schema targetNamespace='http://schemas.microsoft.com/Schemas/WMI20Ex'
		        xmlns='http://www.w3.org/1999/XMLSchema' version="1.0"
		      	xmlns:wmi='http://schemas.microsoft.com/Schemas/WMI20Ex'>

	   but note in the above the following DTD-specific content in xmlns:wmi declaration

		WMI20Ex, WMI20 or CIM20		- use this as last component of URL depending on DTD


	2) All ref attributes on <element> which address CIM/WMI DTD items should
 	   have their values prefixed with "wmi:" e.g.

		<element ref="CLASSPATH">

	   becomes

		<element ref="wmi:CLASSPATH">

	3) All elements of the form

		<any namespace="##other"/>

	   should be removed.
		

7) Check in the modified XDR and XDS files.
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\base\boot\debug.txt ===
Q: How do i build the boot loader for debugging?

A: There are several things you must do.

First, you must set the ENABLE_LOADER_DEBUG environment variable
in your build window.  The var must be set to a string that specifies
the necessary debug settings for the machine that will be debugged.

Example: ENABLE_LOADER_DEBUG=debugport=com1##debugbaudrate=115200

Note the use of the '##' character.  The NT make files replace all
spaces in macro definitions with new lines, so you must use the
'##' character to specify that you REALLY want a space.  The above
example enables the kernel debugger in the boot loader and sets the
debug port to COM1 and the speed of the debug port to a baud rate
of 115200.

Another thing you must consider is the resulting size of the loader
binary.  The file must be kept below the 256k size or the loader will
hang your machine.  One may that you can expload the file size is
my disabling optimizations during compilation.  When you clean build
the BOOT directory your MSC_OPTIMIZATION variable must be set to
nothing.  This enables optimizations and results in the smallest file
size possible.  If you need to disable optimizations because of
debugging, you must do it selectivly.  This means clean building the
boot loader with optimizations enabled and then set MSC_OPTIMIZATION=/Odi
for the compilation of selective files.  Just be caureful to not
build to much of the boot loader this way or it will quickly grow
too large.

If you want to build the loader as a "free" build, but also get full
symbolic information for the debugger then use the following build
settings:

    set NTDEBUG=ntsdnodbg
    set NTDEBUGTYPE=windbg
    set MSC_OPTIMIZATION=
    set NTDBGFILES=1
    set ENABLE_LOADER_DEBUG=debugport=com1##debugbaudrate=115200

This will result in a free loader, with a dbg file containing full
symbolic information that can be used by i386kd/alphakd or even
by windbg for full source level debugging.

Addendum:

The following setting tells the loader to stop after loading symbols.

set ENABLE_LOADER_DEBUG=debugport=com1##debugbaudrate=115200##DEBUGSTOP


DbgPrint?

To get the loader to link, you need to also build ntos\rtl with the
ENABLE_LOADER_DEBUG flag set, otherwise DbgPrint will be unresolved.
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\base\boot\dbcs.txt ===
This file describes the nature of DBCS support in ntldr/setupldr.bin for x86.

On non-x86 machines we do nothing for now. The firmware is in control of the video
and thus the firmware is supposed to support displaying characters deemed necessary
by the system designer.

The x86 loaders operate using either standard 80x25 vga text mode or standard
640x480 graphics mode. In the latter case the loader display system paints
characters to simulate a console-type environment. Text mode is the default.

Early in initialization, the loader attempts to open a file called BOOTFONT.BIN
on the root of the drive from which boot is occurring (ie, in the same place where
it later expects to find ntdetect.com, boot.ini, etc). If that file is found and
is deemed valid, the display subsystem switches to graphics mode and is thus able
to display arbitrary glyphs. The font file gives such details as the dbcs lead byte
ranges, and so support in the loader display system is not dependent on any
particular codepage.

Thus we achieve single-binary and the ability to fully localize ntldr and
setupldr.bin for any locale.

See boot\lib\i386\bootfont.h for the format of the bootfont.bin file.

Note that Setup will install bootfont.bin. If this file becomes corrupt or the
user deletes it, the ntldr will fall back to sbcs support via vga text mode.
For this reason, it may be desirable to include English message resources
(as well as the ones for the particular localization) in ntldr so at least
the boot selection screens will be readable in English and not just display
as garbage.

Still to do some day, issues, problems, etc:

    - If non-x86 machines' firmware starts to support DBCS we should be able to
      extend support to these machines orthoganally since the x86 implementation
      is entirely 'hidden' in the ARC emulation layer. The only thing we would need
      is a mechanism to 'trigger' dbcs mode, which is performed by the presence of
      bootfont.bin on x86 machines.

    - The ARC console is driven by control sequences that are introduced with 0x9b.
      Unfortunately this is a valid lead byte char in several Far East code pages.
      In Japan this doesn't bite us because we don't actually use any characters that
      lead with 0x9b. The fix is to replace use of 0x9b with ESC[ (escape-left bracket)
      which is a synonym. However we don't know if all ARC firmware out there
      supports that as a synonym, so #ifdef _X86_ would probably be necessary
      (that would be ok since we are not enabling dbcs for non-x86 machines anyway).

- tedm, 7/11/95, Tokyo

=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\base\boot\bldr\spcrtest\readme.txt ===
This test will determine the existence and validity of an ACPI Serial Port Console Redirection (SPCR) table.  The test will attempt to detect this table, and if a valid table is discovered, several additional steps will be taken.

1. Several of the significant settings will be displayed.
2. The settings will be used to attempt initialization of a UART.

It is important to note that this test must be run in real-mode.  No OS support is required.  For that reason, the test poses as an OS loader and executes when the machines BIOS attempts to boot from media (putting the test on a floppy works very well).  The following steps should be used to prepare the test:

1. Format a floppy so that a boot sector gets written to it (this happens automatically under NT/Windows2000/Whistler).
2. Copy the test to the floppy, carefully renaming it "ntldr".
3. reboot the machine and allow it to boot from this floppy.



1. If no valid SPCR table is detected, a brief message is displayed on the system console informing the user.
2. Assuming a valid SPCR is found, several of the significant settings will be displayed.  The UART is then initialized and tested for authenticity (the data given in the SPCR table may not be pointing to a valid UART).
3. If the UART is deemed to be valid (a standard loopback test is used), then a validation message will be displayed.
4. If the UART is deemed to be valid, then a random string is generated.  The random string is then sent through the UART.  The test will then wait for the user to enter the string back.  The results of the users input are then tested against the original random string to ensure they match.
5. If the strings match, the user will see a confirmation message.
6. If the strings do *not* match, the user will see a confirmation message.
7. Once the test has completed, the test will create a file on the boot media called "spcrtest.txt".  A pass/failure message will be written to the logfile.
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\base\boot\bootfont\readme.txt ===
NOTE: To build bootfont.bin files, you MUST install and enable the language
support for the target language of the bootfont.bin you need to build.


To generate bootfont.bin files, you can build genfont.exe (in the genfont
directory).  Care should be taken to retrieve the proper fonttable.h file
*before* building genfont.exe.  The fonttable.h files for chs, cht, jpn,
and kor can be found on these directories.  Just drop these header files
into the genfont directory, then build and run genfont.exe.
To build the japanese bootfont.bin file using this method, you would:
1. start intl.cpl
2. Select "Japanese" language.  You might be required to have these support
   files installed from your installation media.
3. cd \nt\base\boot\bootfont\genfont
4. copy ..\jpn\fonttable.h .
5. build -cZP
6. obj\i386\genfont.exe .\bootfont.bin

To build a CHS, CHT, or KOR bootfont.bin file, just use the respective
fonttable.h files from those directories.
 


There is another way to build bootfont.bin files too.  You can
run convfont.exe, taking as input a legacy (circa build 2195) bootfont.bin
file and convfont.exe will convert this file into the new format.
To build the japanese bootfont.bin file using this method, you would:
1. start intl.cpl
2. Select "Japanese" language.  You might be required to have these support
   files installed from your installation media.
3. cd \nt\base\boot\bootfont\convert
5. build -cZP
6. obj\i386\convfont.exe ..\jpn\win2k_ver\bootfont.bin ..\jpn\bootfont.bin

To build any of the other bootfont.bin files, you must reset the language
via intl.cpl, reboot, then rerun convfont.exe on the target bootfont.bin file.


Here is a list of the current bootfont.bin files along with some other useful
data.

Locale Abbreviation         Locale                         Country Code     Locale String
===================         ======                         ============     =============      
BR                          Portuguese (Brazilian)         416              portuguese-brazilian
CHS                         Chinese PRC (simplified)       804              chinese-simplified
CHT                         Chinese Tiawan (traditional)   404              chinese-traditional
cS                          Czech                          405              czech
DA                          Danish                         406              danish
EL                          Greek                          408              greek
ES                          Spanish (default)              C0A              spanish
FI                          Finnish                        40B              finnish
FR                          French                         40C              french
GER                         German                         407              german
HU                          Hungarian                      40E              hungarian
IT                          Italian                        410              italian
JPN                         Japanese                       411              japanese
KOR                         Korean                         412              korean
NL                          Dutch (Netherlands)            413              dutch
NO                          Norwegian Bokmal               414              norwegian
PL                          Polish                         415              polish
PT                          Portuguese (default)           816              portuguese
RU                          Russian                        419              russian
SV                          Swedish                        41D              swedish
TR                          Turkish                        41F              turkish





-matth
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\base\boot\bootfont\btgen\readme.txt ===
btgen is a tool that the localization team has used to generate bootfont.bin formany languages.  Note that it uses a different process than the genfont.exe tool.

it's unclear where the source code for btgen is now located, but the executable is checked in for safekeeping.
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\base\boot\lib\amd64\amd64.txt ===
The AMD64 kernel is loaded with an X86 loader.  This is to enable a single
loader to dual-boot either an i386 or Amd64 build.  The remainder of this 
text refers to only the i386 version of the loader.

There are two new AMD64-specific exports in boot.lib:

    ARC_STATUS
    BlAmd64CheckForLongMode(
        IN     ULONG LoadDeviceId,
        IN OUT PCHAR KernelPath,
        IN     PCHAR KernelFileName
        );
    
    extern BOOLEAN BlAmd64UseLongMode;

BlAmd64CheckForLongMode() is called from the loader.  If an AMD64 kernel 
image is found, then the global BlAmd64UseLongMode is set to TRUE.  From
this point forward, all images are expected to be AMD64 images.

Almost all of the code specific to AMD64 support is found in 
boot\lib\amd64.  At present, the contents of this directory is available to 
only a few people.  However the loader, obviously, must build for 
everybody.

To facilitate this, _X86AMD64_ is defined while building the boot\lib 
directory if files within the amd64 directory are present on the build 
machine.  If they are not present, then a stub version of 
BlAmd64CheckForLongMode() is created.
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\base\boot\lib\i386\amd64.txt ===
The AMD64 kernel is loaded with an X86 loader.  This is to enable a single
loader to dual-boot either an i386 or Amd64 build.  The remainder of this 
text refers to only the i386 version of the loader.

There are two new AMD64-specific exports in boot.lib:

    ARC_STATUS
    BlAmd64CheckForLongMode(
        IN     ULONG LoadDeviceId,
        IN OUT PCHAR KernelPath,
        IN     PCHAR KernelFileName
        );
    
    extern BOOLEAN BlAmd64UseLongMode;

BlAmd64CheckForLongMode() is called from the loader.  If an AMD64 kernel 
image is found, then the global BlAmd64UseLongMode is set to TRUE.  From
this point forward, all images are expected to be AMD64 images.

Almost all of the code specific to AMD64 support is found in 
boot\lib\amd64.  At present, the contents of this directory is available to 
only a few people.  However the loader, obviously, must build for 
everybody.

To facilitate this, _X86AMD64_ is defined while building the boot\lib 
directory if files within the amd64 directory are present on the build 
machine.  If they are not present, then a stub version of 
BlAmd64CheckForLongMode() is created.
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\base\busdrv\acpi\acpienab\acpienab.txt ===
;
; Strings Section
;

[Strings]
MSFT="Microsoft"
GUID="ClassGUID"
SERVICE="Service"
REG_SZ=0x00000000
REG_DWORD=0x00010001


; ACPI CriticalDeviceDatabase Entry
CDD_ACPI="SYSTEM\CurrentControlSet\Control\CriticalDeviceDatabase\*PNP0C08"
ACPI_GUID="{4D36E97D-E325-11CE-BFC1-08002BE10318}"
ACPI_SERVICE="acpi"

; Keyboard CriticalDeviceDatabase Entries
CDD_*PNP0300="SYSTEM\CurrentControlSet\Control\CriticalDeviceDatabase\*PNP0300"
CDD_*PNP0301="SYSTEM\CurrentControlSet\Control\CriticalDeviceDatabase\*PNP0301"
CDD_*PNP0302="SYSTEM\CurrentControlSet\Control\CriticalDeviceDatabase\*PNP0302"
CDD_*PNP0303="SYSTEM\CurrentControlSet\Control\CriticalDeviceDatabase\*PNP0303"
CDD_*PNP0304="SYSTEM\CurrentControlSet\Control\CriticalDeviceDatabase\*PNP0304"
CDD_*PNP0305="SYSTEM\CurrentControlSet\Control\CriticalDeviceDatabase\*PNP0305"
CDD_*PNP0306="SYSTEM\CurrentControlSet\Control\CriticalDeviceDatabase\*PNP0306"
CDD_*PNP0309="SYSTEM\CurrentControlSet\Control\CriticalDeviceDatabase\*PNP0309"
CDD_*PNP030A="SYSTEM\CurrentControlSet\Control\CriticalDeviceDatabase\*PNP030A"
CDD_*PNP030B="SYSTEM\CurrentControlSet\Control\CriticalDeviceDatabase\*PNP030B"
CDD_*PNP0320="SYSTEM\CurrentControlSet\Control\CriticalDeviceDatabase\*PNP0320"
CDD_*CPQA0D7="SYSTEM\CurrentControlSet\Control\CriticalDeviceDatabase\*CPQA0D7"
KEYBOARD_GUID="{4D36E96B-E325-11CE-BFC1-08002BE10318}"
KEYBOARD_SERVICE="i8042prt"

; Mouse CriticalDeviceDatabase Entries
CDD_*PNP0F00="SYSTEM\CurrentControlSet\Control\CriticalDeviceDatabase\*PNP0F00"
CDD_*PNP0F01="SYSTEM\CurrentControlSet\Control\CriticalDeviceDatabase\*PNP0F01"
CDD_*PNP0F02="SYSTEM\CurrentControlSet\Control\CriticalDeviceDatabase\*PNP0F02"
CDD_*PNP0F03="SYSTEM\CurrentControlSet\Control\CriticalDeviceDatabase\*PNP0F03"
CDD_*PNP0F08="SYSTEM\CurrentControlSet\Control\CriticalDeviceDatabase\*PNP0F08"
CDD_*PNP0F09="SYSTEM\CurrentControlSet\Control\CriticalDeviceDatabase\*PNP0F09"
CDD_*PNP0F0A="SYSTEM\CurrentControlSet\Control\CriticalDeviceDatabase\*PNP0F0A"
CDD_*PNP0F0B="SYSTEM\CurrentControlSet\Control\CriticalDeviceDatabase\*PNP0F0B"
CDD_*PNP0F0C="SYSTEM\CurrentControlSet\Control\CriticalDeviceDatabase\*PNP0F0C"
CDD_*PNP0F0D="SYSTEM\CurrentControlSet\Control\CriticalDeviceDatabase\*PNP0F0D"
CDD_*PNP0F0E="SYSTEM\CurrentControlSet\Control\CriticalDeviceDatabase\*PNP0F0E"
CDD_*PNP0F0F="SYSTEM\CurrentControlSet\Control\CriticalDeviceDatabase\*PNP0F0F"
CDD_*PNP0F11="SYSTEM\CurrentControlSet\Control\CriticalDeviceDatabase\*PNP0F11"
CDD_*PNP0F12="SYSTEM\CurrentControlSet\Control\CriticalDeviceDatabase\*PNP0F12"
CDD_*PNP0F13="SYSTEM\CurrentControlSet\Control\CriticalDeviceDatabase\*PNP0F13"
CDD_*PNP0F15="SYSTEM\CurrentControlSet\Control\CriticalDeviceDatabase\*PNP0F15"
CDD_*PNP0F1E="SYSTEM\CurrentControlSet\Control\CriticalDeviceDatabase\*PNP0F1E"
MOUSE_GUID="{4D36E96F-E325-11CE-BFC1-08002BE10318}"
MOUSE_SERVICE="i8042prt"

; ACPI Control Key
ACPI_KEY="SYSTEM\CurrentControlSet\Services\ACPI"
START="Start"
ACPI_ENABLE_VALUE=0
ACPI_DISABLE_VALUE=4
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\base\busdrv\acpi\asl\grammar.doc ===
Microsoft Word Document MSWordDoc Word.Document.8microsoft System Power Management Interface  Title _PID_GUIDSystem Power Management Interface  Annie Pearson Normal Michael Tsang Microsoft Word 8.08"+D8 qs\,&U6 8ntG4 jpQM4 @\\RED-PRN-01\26N/3MC CORP0092 172.31.224.252 Ne03: HP LaserJet 4Si/4Si MX PS HP LaserJet 4Si/4Si MX PS \\RED-PRN-01\26N/3MC CORP0092 1 Letter \\RED-PRN-01\26N/3MC CORP0092 1 LetterWr{O{~/ Iwkeq5 WjspWD:\toosday\kenr\ken.doc OLE_LINK14D:\toosday\kenr\ken.doc OLE_LINK14D:\toosday\kenr\ken.doc OLE_LINK14VISIO 4 Drawing VISIO 4.0 Shapes Visio.Drawing.4 Arial "System  Arial Command Address Slave Addressjames kardachVisio (TM) Drawing  Arial) s New Ro gPJ?@ |cb4u4 K/]/o/ _IO[O +.5,c F?2o~U03NVb 0Mf~[ pM___q_  2|ei)d lo~e# Si PS -  Custo m page 1 WINSPO HP 5S i PS - N \\SCSO FFLAN001 \sc9-2e1 ] z] r] j] bJ] Z] R] \!B] U:] 2] *] "] U 0fO*?  M?_0 Uj?|5 EP!O3OEO lave Add resso 'mAo]ooo2 mmandc ;0{%0 T_f_xS  +/=/O/ _M?_?q? O)O;OMO_OqO J_\_n_ 0bCa9oKeq /0/B/T/f/ /7?{_[? f8OJO\OnO Y_k_}_ o1oCoUo V/h/z/ ?_?9? O#O5O3 LO^OpO ra_s_ BE/W/i/[?m? OU_C? _-_@S?Q_ o%o7m Xojo|o Page-1 k fill White Greeun Yellow  dash1 Hairq Short Arial c top le T/imes ] r] d] U ] G] <] -] VISIO 4 Drawing VISIO 4.0 Shapes Visio.Drawing.4 Arial "System  Arial Slave Address (A6-A0)  Arialjames kardachVisio (TM) Drawing  Arial) s New Ro gPJ?@ |cb4u4 K/]/o/ _IO[O +.5,c F?2o~U03NVb 0Mf~[ pM___q_  2|ei)d lo~e# Si PS -  Custo m page 1 WINSPO HP 5S i PS - N \\SCSO FFLAN001 \sc9-2e1 9"L!L ?x$?6?H12 p5Py? M%\~o>O Slave A ddress ( A6-A0) _H1h1Z 5/G/Y,U, ;0{}  X3G>W< Efx?x .O>/, ON/*O *?<?N?`?r? 2EP;OMO_O-_ 8oJo\o Page-1 k fill White Greeun Yellow  dash1 Hairq Short Arial c top le T/imes ] r] d] U ] G] <] -] ACPI Source Language (ASL) Reference  XE "ACPI Source Language (ASL)"   XE "ASL"  This section formally defines the ACPI Control Method Source Language (ASL). ASL is a source language for writing ACPI control methods. OEMs and BIOS developers write control methods in ASL and then use a translator tool (compiler) to generate ACPI Machine Language (AML) versions of the control methods. For a formal definition of AML, see the ACPI Control Method Machine Language (AML) Specification, section 16. AML and ASL are different languages though they are closely related. Every ACPI-compatible OSes must support AML. A given user can define some arbitrary source language (to replace ASL) and write a tool to translate it to AML.  An OEM or BIOS vendor needs to write ASL and be able to single step AML for debugging. (Debuggers and similar tools are expected to be AML level tools, not source level tools.) An ASL translator implementer must understand how to read ASL and generate AML. An AML interpreter author must understand how to execute AML. This section has two parts: The ASL grammar, which is the formal ASL specification and also serves as a quick reference. A full ASL reference, which repeats the ASL term syntax and adds information about the semantics of the language. ASL Language Grammar  XE "ASL:grammer"  The purpose of this section is to state unambiguously the grammar rules used by the syntax checker of an ASL compiler.  ASL statements declare objects.  Each object has three parts, two of which can be null. Object := ObjectType  FixedList  VariableList FixedList refers to a list, of known length, that supplies data that all instances of a given ObjectType must have. A fixed list is written as ( a , b , c ,   ) where the number of arguments depends on the specific ObjectType, and some elements can be nested objects, that is (a, b, (q, r, s, t), d). Arguments to a FixedList can have default values, in which case they can be skipped.  Thus, (a,,c) will cause the default value for the second argument to be used. Some ObjectTypes can have a null FixedList, which is simply omitted. Trailing arguments of some object types can be left out of a fixed list, in which case the default value is used. VariableList refers to a list, not of predetermined length, of child objects that help define the parent.  It is written as { x, y, z, aa, bb, cc } where any argument can be a nested object. ObjectType determines what terms are legal elements of the VariableList. Some ObjectTypes may have a null variable list, which is simply omitted. Other rules for writing ASL statements are the following: Multiple blanks are the same as one.  Blank, (, ),   and newline are all token separators. // marks the beginning of a comment, which continues from the // to the end of the line. /* marks the beginning of a comment, which continues from the /* to the next */.  surround an ASCII string. Numeric constants can be written in two ways: ordinary decimal, or hexadecimal, using the notation 0xdd nothing indicates  an empty item. For example { nothing } is equivalent to {} ASL Grammar Notation The notation used to express the ASL grammar is specified in the following table. Table 15-1  ASL Grammar Notation Notation Convention Description Example Term := Term Term  The term to the left of := can be expanded into the sequence of terms on the right. aterm := bterm cterm means that aterm can be expanded into the two-term sequence of bterm followed by cterm. Angle brackets (< > ) Used to group items. <a b> | <c d> means either  a b or c d.  Bar symbol ( | ) Separates alternatives. aterm := bterm | <cterm dterm> means the following constructs are possible:    bterm     cterm dterm aterm := <bterm | cterm> dterm means the following constructs are possible:    bterm dterm    cterm dterm Term Term Term Terms separated from each other by spaces form an ordered list. Word in bold. Denotes the name of a term in the ASL grammar, representing any instance of such a term. In the following ASL term definition: ThermalZone (ZoneName)                       {NamedObjectList} the item in bold is the name of the term.           Word in italics Names of arguments to objects that are replaced for a given instance. In the following ASL term definition: ThermalZone (ZoneName)                       {NamedObjectList} the italicized item is an argument. The item that is not bolded or italicized is defined elsewhere in the ASL grammar. Single quotes ( Indicate constant characters. Refers to a byte value expressed as 2 hexadecimal digits. 0x21 means a value of hexadecimal 21, or decimal 37. Note that a value expressed in hexadecimal must start with a leading zero (0).  Dash character ( - ) Indicates a range. 1-9 means a single digit in the range 1 to 9 inclusive. ASL Names  XE "ASL Names"  LeadNameChar NameChar  | LeadNameChar RootChar NameSeg := <LeadNameChar NameChar NameChar NameChar> | <LeadNameChar NameChar NameChar> | <LeadNameChar NameChar> | <LeadNameChar> NameString := <RootChar NamePath> | <PrefixPath NamePath> PrefixPath := Nothing | <  PrefixPath> NamePath := Nothing | <NameSeg NamePathTail> NamePathTail := Nothing | <  NameSeg NamePathTail> ASL Language and Terms  XE "ASL Language and Terms"  ASLCode := DefinitionBlockTerm DefinitionBlockTerm := DefinitionBlock( AMLFileName, //String TableSignature, //String ComplianceRevision, //ByteConst OEMID, //String TableID, //String OEMRevision //DWordConst ) {TermList} TermList := Nothing | <Term TermList> := Object | Type1Opcode | Type2Opcode CompilerDirective := IncludeTerm | ExternalTerm ObjectList := Nothing | <Object ObjectList> Object := CompilerDirective | NamedObject | NameSpaceModifier | UserTerm DataObject := BufferTerm | PackageTerm | LiteralData | DataMacros LiteralData := Integer | String | ConstTerm ComputationalData := Integer | String | BufferTerm DataMacros := EISAIDTerm | ResourceTemplateTerm NamedObject := BankFieldTerm | CreateBitFieldTerm | CreateByteFieldTerm | CreateDWordFieldTerm | CreateFieldTerm | CreateWordFieldTerm | DeviceTerm | EventTerm | FieldTerm | IndexFieldTerm | MethodTerm | MutexTerm | OpRegionTerm | PowerResTerm | ProcessorTerm | ThermalZoneTerm NameSpaceModifier := AliasTerm | NameTerm | ScopeTerm UserTerm := NameString( //NameString=>MethodTerm ArgList ) => DataObject ArgList := Nothing | <TermArg ArgListTail> ArgListTail := Nothing | <  TermArg ArgListTail> TermArg := Type2Opcode | DataObject | UserTerm | ArgTerm | LocalTerm Type1Opcode := BreakTerm | BreakPointTerm | FatalTerm | IfElseTerm | LoadTerm | NoOpTerm | NotifyTerm | ReleaseTerm | ResetTerm | ReturnTerm | SignalTerm | SleepTerm | StallTerm | UnloadTerm | WhileTerm // A Type1OpCode term can only be used standing alone on a // line of ASL code; because these types of terms do not // return a value so they cannot be used as a term in an // expression. Type2Opcode := AcquireTerm | AddTerm | AndTerm | ConcatTerm | CondRefOfTerm | DecTerm | DerefOfTerm | DivideTerm | FindSetLeftBitTerm | FindSetRightBitTerm | FromBCDTerm | IncTerm | IndexTerm | LAndTerm | LEqualTerm | LGreaterTerm | LGreaterEqualTerm | LLessTerm | LLessEqualTerm | LNotTerm | LNotEqualTerm | LOrTerm | MatchTerm | MultiplyTerm | NAndTerm | NOrTerm | NotTerm | ObjectTypeTerm | OrTerm | RefOfTerm | ShiftLeftTerm | ShiftRightTerm | SizeOfTerm | StoreTerm | SubtractTerm | ToBCDTerm | WaitTerm | XorTerm // A Type2Opcode term returns a value that can be used in // an expression. IncludeTerm := Include( IncFilePathName //String ExternalTerm := External( ObjName, //NameString ObjType //Nothing | ObjectTypeKeyword BankFieldTerm := BankField( RegionName, //NameString BankName, //NameString BankValue, //TermArg=>DWordConst AccessType, //AccessTypeKeyword LockRule, //LockRuleKeyword UpdateRule //UpdateRuleKeyword ) {FieldUnitList} FieldUnitList := Nothing | <FieldUnit FieldUnitListTail> FieldUnitListTail := Nothing | <  FieldUnit FieldUnitListTail> FieldUnit := FieldUnitEntry | OffsetTerm | AccessAsTerm FieldUnitEntry := <Nothing | NameSeg>   Integer OffsetTerm := Offset( ByteOffset //Integer AccessAsTerm := AccessAs( AccessType, //AccessTypeKeyword AccessAttribute //Nothing | ByteConst CreateBitFieldTerm := CreateBitField( SourceBuffer, //TermArg=>BufferTerm BitIndex, //TermArg=>Integer BitFieldName //NameString CreateByteFieldTerm := CreateByteField( SourceBuffer, //TermArg=>BufferTerm ByteIndex, //TermArg=>Integer ByteFieldName //NameString CreateDWordFieldTerm := CreateDWordField( SourceBuffer, //TermArg=>BufferTerm ByteIndex, //TermArg=>Integer DWordFieldName //NameString CreateFieldTerm := CreateField( SourceBuffer, //TermArg=>BufferTerm BitIndex, //TermArg=>Integer NumBits, //TermArg=>Integer FieldName //NameString CreateWordFieldTerm := CreateWordField( SourceBuffer, //TermArg=>BufferTerm ByteIndex, //TermArg=>Integer WordFieldName //NameString DeviceTerm := Device( DeviceName //NameString ) {ObjectList} EventTerm := Event( EventName //NameString FieldTerm := Field( RegionName, //NameString AccessType, //AccessTypeKeyword LockRule, //LockRuleKeyword UpdateRule //UpdateRuleKeyword ) {FieldUnitList} IndexFieldTerm := IndexField( IndexName, //NameString DataName, //NameString AccessType, //AccessTypeKeyword LockRule, //LockRuleKeyword UpdateRule //UpdateRuleKeyword ) {FieldUnitList} MethodTerm := Method( MethodName, //NameString NumArgs, //Nothing | ByteConst SerializeRule //Nothing | //SerializeRuleKeyword ) {TermList} MutexTerm := Mutex( MutexName, //NameString SyncLevel //ByteConst OpRegionTerm := OperationRegion( RegionName, //NameString RegionSpace, //RegionSpaceKeyword Offset, //TermArg=>DWordConst Length //TermArg=>DWordConst PowerResTerm := PowerResource( ResourceName, //NameString SystemLevel, //ByteConst ResourceOrder //WordConst ) {ObjectList} ProcessorTerm := Processor( ProcessorName, //NameString ProcessorID, //ByteConst PBlockAddress, //DWordConst PblockLength //ByteConst ) {ObjectList} ThermalZoneTerm := ThermalZone( ThermalZoneName //NameString ) {ObjectList} AliasTerm := Alias( SourceObject, //NameString AliasObject //NameString NameTerm := Name( ObjectName, //NameString Object //DataObject ScopeTerm := Scope( Location //NameString ) {ObjectList} BreakTerm := Break BreakPointTerm := BreakPoint FatalTerm := Fatal( Type, //ByteConst Code, //DWordConst //TermArg=>Integer IfElseTerm := IfTerm ElseTerm IfTerm := If( Predicate //TermArg=>Integer ) {TermList} ElseTerm := Nothing | <Else {TermList}> LoadTerm := Load( Object, //NameString DDBHandle //SuperName NoOpTerm := Noop NotifyTerm := Notify( Object, //SuperName NotificationValue //TermArg=>ByteConst ReleaseTerm := Release( SyncObject //SuperName ResetTerm := Reset( SyncObject //SuperName ReturnTerm := Return( //TermArg=>DataObject SignalTerm := Signal( SyncObject //SuperName SleepTerm := Sleep( MilliSecs //TermArg=>Integer StallTerm := Stall( MicroSecs //TermArg=>Integer UnloadTerm := Unload( DDBHandle //SuperName WhileTerm := While( Predicate //TermArg=>Integer ) {TermList} AcquireTerm := Acquire( SyncObject, //SuperName TimeoutValue //WordConst ) => Boolean //Ones means timed-out AddTerm := Add( Addend1, //TermArg=>Integer Addend2, //TermArg=>Integer Result //Nothing | SuperName ) => Integer AndTerm := And( Source1, //TermArg=>Integer Source2, //TermArg=>Integer Result //Nothing | SuperName ) => Integer ConcatTerm := Concatenate( Source1, //TermArg=>ComputationalData Source2, //TermArg=>ComputationalData Result //Nothing | SuperName ) => ComputationalData CondRefOfTerm := CondRefOf( Source, //SuperName Destination //SuperName ) => Boolean DecTerm := Decrement( Addend //SuperName ) => Integer DerefOfTerm := DerefOf( Source //TermArg=>ObjectReference //ObjectReference is an object //produced by terms such as //Index, RefOf or CondRefOf. ) => ObjectReference DivideTerm := Divide( Dividend, //TermArg=>Integer Divisor, //TermArg=>Integer Remainder, //Nothing | SuperName Result //Nothing | SuperName ) => Integer //returns Result FindSetLeftBitTerm := FindSetLeftBit( Source, //TermArg=>Integer Result //Nothing | SuperName ) => Integer FindSetRightBitTerm := FindSetRightBit( Source, //TermArg=>Integer Result //Nothing | SuperName ) => Integer FromBCDTerm := FromBCD( BCDValue, //TermArg=>Integer Result //Nothing | SuperName ) => Integer IncTerm := Increment( Addend //SuperName ) => Integer IndexTerm := Index( Source, //TermArg=> //<BufferTerm | PackageTerm> Index, //TermArg=>Integer Destination //Nothing | SuperName ) => ObjectReference LAndTerm := LAnd( Source1, //TermArg=>Integer Source2 //TermArg=>Integer ) => Boolean LEqualTerm := LEqual( Source1, //TermArg=>Integer Source2 //TermArg=>Integer ) => Boolean LGreaterTerm := LGreater( Source1, //TermArg=>Integer Source2 //TermArg=>Integer ) => Boolean LGreaterEqualTerm := LGreaterEqual( Source1, //TermArg=>Integer Source2 //TermArg=>Integer ) => Boolean LLessTerm := LLess( Source1, //TermArg=>Integer Source2 //TermArg=>Integer ) => Boolean LLessEqualTerm := LLessEqual( Source1, //TermArg=>Integer Source2 //TermArg=>Integer ) => Boolean LNotTerm := LNot( Source, //TermArg=>Integer ) => Boolean LNotEqualTerm := LNotEqual( Source1, //TermArg=>Integer Source2 //TermArg=>Integer ) => Boolean LOrTerm := LOr( Source1, //TermArg=>Integer Source2 //TermArg=>Integer ) => Boolean MatchTerm := Match( SearchPackage, //TermArg=>Package //MatchOpKeyword MatchObject1, //TermArg=>Integer //MatchOpKeyword MatchObject2, //TermArg=>Integer StartIndex //TermArg=>Integer ) => Ones | Integer MultiplyTerm := Multiply( Multiplicand, //TermArg=>Integer Multiplier, //TermArg=>Integer Result //Nothing | SuperName ) => Integer NAndTerm := NAnd( Source1, //TermArg=>Integer Source2 //TermArg=>Integer Result //Nothing | SuperName ) => Integer NOrTerm := NOr( Source1, //TermArg=>Integer Source2 //TermArg=>Integer Result //Nothing | SuperName ) => Integer NotTerm := Not( Source, //TermArg=>Integer Result //Nothing | SuperName ) => Integer ObjectTypeTerm := ObjectType( Object //SuperName ) => Integer OrTerm := Or( Source1, //TermArg=>Integer Source2 //TermArg=>Integer Result //Nothing | SuperName ) => Integer RefOfTerm := RefOf( Object //SuperName ) => ObjectReference ShiftLeftTerm := ShiftLeft( Source, //TermArg=>Integer ShiftCount //TermArg=>Integer Result //Nothing | SuperName ) => Integer ShiftRightTerm := ShiftRight( Source, //TermArg=>Integer ShiftCount //TermArg=>Integer Result //Nothing | SuperName ) => Integer SizeOfTerm := SizeOf( DataObject //SuperName=>DataObject ) => Integer StoreTerm := Store( Source, //TermArg=>DataObject Destination //SuperName ) => DataObject SubtractTerm := Subtract( Addend1, //TermArg=>Integer Addend2, //TermArg=>Integer Result //Nothing | SuperName ) => Integer ToBCDTerm := ToBCD( Value, //TermArg=>Integer Result //Nothing | SuperName ) => Integer WaitTerm := Wait( SyncObject, //SuperName TimeoutValue //TermArg=>Integer ) => Boolean XOrTerm := XOr( Source1, //TermArg=>Integer Source2 //TermArg=>Integer Result //Nothing | SuperName ) => Integer ObjectTypeKeyword := UnknownObj | IntObj | StrObj | BuffObj | PkgObj | FieldUnitObj | DeviceObj | EventObj | MethodObj | MutexObj | OpRegionObj | PowerResObj | ThermalZoneObj | BuffFieldObj | DDBHandleObj AcessTypeKeyword := AnyAcc | ByteAcc | WordAcc | DWordAcc | BlockAcc | SMBSendRecvAcc | SMBQuickAcc LockRuleKeyword := Lock | NoLock UpdateRuleKeyword := Preserve | WriteAsOnes | WriteAsZeros RegionSpaceKeyword := UserDefRegionSpace | SystemIO | SystemMemory | PCI_Config | EmbeddedControl | SMBus UserDefRegionSpace := 0x80-0xff SerializeRuleKeyword := Serialized | NotSerialized MatchOpKeyword := MTR | MEQ | MLE | MLT | MGE | MGT DMATypeKeyword := Compatibility | TypeA | TypeB | TypeF BusMasterKeyword := BusMaster | NotBusMaster XferTypeKeyword := Transfer8 | Transfer16 | Transfer8_16 ResourceTypeKeyword := ResourceConsumer | ResourceProducer MinKeyword := MinFixed | MinNotFixed MaxKeyword := MaxFixed | MaxNotFixed DecodeKeyword := SubDecode | PosDecode RangeTypeKeyword := ISAOnlyRanges | NonISAOnlyRanges | EntireRange MemTypeKeyword := Cacheable | WriteCombining | Prefetchable | NonCacheable ReadWriteKeyword := ReadWrite | ReadOnly InterruptTypeKeyword := Edge | Level InterruptLevel := ActiveHigh | ActiveLow ShareTypeKeyword := Shared | Exclusive IODecodeKeyword := Decode16 | Decode10 SuperName := NameString | ArgTerm | LocalTerm | DebugTerm | IndexTerm ArgTerm := Arg0 | Arg1 | Arg2 | Arg3 | Arg4 | Arg5 | Arg6 LocalTerm := Local0 | Local1 | Local2 | Local3 | Local4 | Local5 | Local6 | Local7 DebugTerm := Debug Integer := ByteConst | WordConst | DWordConst ByteConst := 0x00-0xff WordConst := 0x0000-0xffff DWordConst := 0x00000000-0xffffffff String  AsciiCharList  AsciiCharList := Nothing | <AsciiChar AsciiCharList> AsciiChar := 0x01-0x7f NullChar := 0x00 ConstTerm := Zero | One | Ones | Revision Boolean := True | False := Ones False := Zero BufferTerm := Buffer( BuffSize //Nothing | //TermArg=>Integer ) {String | ByteList} ByteList := Nothing | <ByteConst ByteListTail> ByteListTail := Nothing | <  ByteConst ByteListTail> DWordList := Nothing | <DWordConst DWordListTail> DWordListTail := Nothing | <  DWordConst DWordListTail> PackageTerm := Package( NumElements //Nothing | //ByteConst ) {PackageList} PackageList := Nothing | <PackageElement PackageListTail> PackageListTail := Nothing | <  PackageElement PackageListTail> PackageElement := DataObject | NameString EISAIDTerm := EISAID( EISAIDString //String ) => DWordConst ResourceTemplateTerm := ResourceTemplate() {ResourceMacroList} => BufferTerm ResourceMacroList := Nothing | <ResourceMacroTerm ResourceMacroList> ResourceMacroTerm := DMATerm | DWordIOTerm | DWordMemoryTerm | EndDependentFnTerm | FixedIOTerm | InterruptTerm | IOTerm | IRQNoFlagsTerm | IRQTerm | Memory24Term | Memory32FixedTerm | Memory32Term | QWordIOTerm | QWordMemoryTerm | StartDependentFnTerm | StartDependentFnNoPriTerm | VendorLongTerm | VendorShortTerm | WordBusNumberTerm | WordIOTerm DMATerm := DMA( DMAType, //DMATypeKeyword (_TYP) BusMaster, //BusMasterKeyword (_BM) XferType, //XferTypeKeyword (_SIZ) ResourceTag //Nothing | NameString ) {ByteList} //List of channels (0-17) DWordIOTerm := DWORDIO( ResourceType, //Nothing (ResourceConsumer)| //ResourceTypeKeyword MinType, //Nothing (MinNotFixed) | //MinKeyword (_MIF) MaxType, //Nothing (MaxNotFixed) | //MaxKeyword (_MAF) Decode, //Nothing (PosDecode) | //DecodeKeyword (_DEC) RangeType, //Nothing (EntireRange) | //RangeTypeKeyword (_RNG) AddressGranularity, //DWordConst (_GRA) MinAddress, //DWordConst (_MIN) MaxAddress, //DWordConst (_MAX) Translation, //DWordConst (_TRA) AddressLen, //DWordConst (_LEN) ResSourceIndex, //Nothing | ByteConst ResSource, //Nothing | String ResourceTag //Nothing | NameString DWordMemoryTerm := DWORDMemory( ResourceType, //Nothing (ResourceConsumer)| //ResourceTypeKeyword Decode, //Nothing (PosDecode) | //DecodeKeyword (_DEC) MinType, //Nothing (MinNotFixed) | //MinKeyword (_MIF) MaxType, //Nothing (MaxNotFixed) | //MaxKeyword (_MAF) MemType, //Nothing (NonCacheable) | //MemTypeKeyword (_MEM) ReadWriteType, //ReadWriteKeyword (_RW) AddressGranularity, //DWordConst (_GRA) MinAddress, //DWordConst (_MIN) MaxAddress, //DWordConst (_MAX) Translation, //DWordConst (_TRA) AddressLen, //DWordConst (_LEN) ResSourceIndex, //Nothing | ByteConst ResSource, //Nothing | String ResourceTag //Nothing | NameString EndDependentFnTerm := EndDependentFn() FixedIOTerm := FixedIO( AddressBase, //WordConst (_BAS) RangeLen, //ByteConst (_LEN) ResourceTag //Nothing | NameString InterruptTerm := Interrupt( ResourceType, //Nothing (ResourceConsumer)| //ResourceTypeKeyword InterruptType, //InterruptTypeKeyword //(_LL, _HE) InterruptLevel, //InterruptLevelKeyword //(_LL, _HE) ShareType, //Nothing (Exclusive) //ShareTypeKeyword (_SHR) ResSourceIndex, //Nothing | ByteConst ResSource, //Nothing | String ResourceTag //Nothing | NameString ) {DWordList} //list of interrupts (_INT) IOTerm := IO( IODecode, //IODecodeKeyword (_DEC) MinAddress, //WordConst (_MIN) MaxAddress, //WordConst (_MAX) Alignment, //ByteConst (_ALN) RangeLen, //ByteConst (_LEN) ResourceTag //Nothing | NameString IRQNoFlagsTerm := IRQNoFlags( ResourceTag //Nothing | NameString ) {ByteList} //list of interrupts (0-15) IRQTerm := IRQ( InterruptType, //InterruptTypeKeyword //(_LL, _HE) InterruptLevel, //InterruptLevelKeyword //(_LL, _HE) ShareType, //Nothing (Exclusive) //ShareTypeKeyword (_SHR) ResourceTag //Nothing | NameString ) {ByteList} //list of interrupts (0-15) Memory24Term := Memory24( ReadWriteType, //ReadWriteKeyword (_RW) MinAddress[23:8], //WordConst (_MIN) MaxAddress[23:8], //WordConst (_MAX) Alignment, //WordConst (_ALN) RangeLen, //WordConst (_LEN) ResourceTag //Nothing | NameString Memory32FixedTerm := Memory32Fixed( ReadWriteType, //ReadWriteKeyword (_RW) AddressBase, //DWordConst (_BAS) RangeLen, //DWordConst (_LEN) ResourceTag //Nothing | NameString Memory32Term := Memory32( ReadWriteType, //ReadWriteKeyword (_RW) MinAddress, //DWordConst (_MIN) MaxAddress, //DWordConst (_MAX) Alignment, //DWordConst (_ALN) RangeLen, //DWordConst (_LEN) ResourceTag //Nothing | NameString QWordIOTerm := QWORDIO( ResourceType, //Nothing (ResourceConsumer)| //ResourceTypeKeyword MinType, //Nothing (MinNotFixed) | //MinKeyword (_MIF) MaxType, //Nothing (MaxNotFixed) | //MaxKeyword (_MAF) Decode, //Nothing (PosDecode) | //DecodeKeyword (_DEC) RangeType, //Nothing (EntireRange) | //RangeTypeKeyword (_RNG) AddressGranularity, //QWordConst (_GRA) MinAddress, //QWordConst (_MIN) MaxAddress, //QWordConst (_MAX) Translation, //QWordConst (_TRA) AddressLen, //QWordConst (_LEN) ResSourceIndex, //Nothing | ByteConst ResSource, //Nothing | String ResourceTag //Nothing | NameString QWordMemoryTerm := QWORDMemory( ResourceType, //Nothing (ResourceConsumer)| //ResourceTypeKeyword Decode, //Nothing (PosDecode) | //DecodeKeyword (_DEC) MinType, //Nothing (MinNotFixed) | //MinKeyword (_MIF) MaxType, //Nothing (MaxNotFixed) | //MaxKeyword (_MAF) MemType, //Nothing (NonCacheable) | //MemTypeKeyword (_MEM) ReadWriteType, //ReadWriteKeyword (_RW) AddressGranularity, //QWordConst (_GRA) MinAddress, //QWordConst (_MIN) MaxAddress, //QWordConst (_MAX) Translation, //QWordConst (_TRA) AddressLen, //QWordConst (_LEN) ResSourceIndex, //Nothing | ByteConst ResSource, //Nothing | String ResourceTag //Nothing | NameString StartDependentFnTerm := StartDependentFn( CompatPriority, //ByteConst (0-2) PerfRobustPriority //ByteConst (0-2) ) {ResourceMacroList} StartDependentFnNoPriTerm :=StartDependentFnNoPri() {ResourceMacroList} VendorLongTerm := VendorLong( ResourceTag //Nothing | NameString ) {ByteList} VendorShortTerm := VendorShort( ResourceTag //Nothing | NameString ) {ByteList} //up to 7 bytes WordBusNumberTerm := WordBusNumber( ResourceType, //Nothing (ResourceConsumer)| //ResourceTypeKeyword MinType, //Nothing (MinNotFixed) | //MinKeyword (_MIF) MaxType, //Nothing (MaxNotFixed) | //MaxKeyword (_MAF) Decode, //Nothing (PosDecode) | //DecodeKeyword (_DEC) AddressGranularity, //WordConst (_GRA) MinAddress, //WordConst (_MIN) MaxAddress, //WordConst (_MAX) Translation, //WordConst (_TRA) AddressLen, //WordConst (_LEN) ResSourceIndex, //Nothing | ByteConst ResSource, //Nothing | String ResourceTag //Nothing | NameString WordIOTerm := WordIO( ResourceType, //Nothing (ResourceConsumer)| //ResourceTypeKeyword MinType, //Nothing (MinNotFixed) | //MinKeyword (_MIF) MaxType, //Nothing (MaxNotFixed) | //MaxKeyword (_MAF) Decode, //Nothing (PosDecode) | //DecodeKeyword (_DEC) RangeType, //Nothing (EntireRange) | //RangeTypeKeyword (_RNG) AddressGranularity, //WordConst _GRA) MinAddress, //WordConst (_MIN) MaxAddress, //WordConst (_MAX) Translation, //WordConst (_TRA) AddressLen, //WordConst (_LEN) ResSourceIndex, //Nothing | ByteConst ResSource, //Nothing | String ResourceTag //Nothing | NameString Full ASL Reference This reference section is for developers who are writing ASL code while developing definition blocks for platforms.  ASL Names  XE "ASL:names"  This section describes how to encode object names using ASL. The following table lists the characters legal in any position in an ASL object name.   Table 15-2  Control Method Named Object Reference Encodings Value Description 41-5A, 5F Lead character of name ( LeadNameChar 30-39, 41-5A,  5F Non-lead (trailing) character of name ( 0 - 9 NameChar The following table lists the name modifiers. Table 15-3  Definition Block Name Modifier Encodings Description NamePrefix := Followed by  Name space root ( RootPrefix  Name Parent name space ( ParentPrefix  Name Name extender: 1 DualNamePrefix  Name Name Name extender: N MultiNamePrefix  count  Namecount ASL Data Types  XE "ASL:data types"  The contents of an object, or the data it references, may be abstract entities (for example,  Device Object ) or can be one of three computational data types. The computational data type can be used as arguments to many of the ASL Operator terms. Table 15-4  Data Types Data Type Description Integer 32-bit little endian unsigned value.  Buffer Arbitrary fixed length array of bytes. String ASCIIZ string 1 to 200 characters in length (including NullChar).   ASL Terms  XE "ASL:terms"  This section describes all the ASL terms and provides sample ASL code that uses the terms. The ASL terms are grouped into the following categories: Definition block term Compiler directive terms Object terms Opcode terms User terms Data objects Miscellaneous objects Definition Block Term DefinitionBlockTerm := DefinitionBlock( AMLFileName, //String TableSignature, //String ComplianceRevision, //ByteConst OEMID, //String TableID, //String OEMRevision //DWordConst ) {TermList} The DefinitionBlock term specifies the unit of data and/or AML code that the OS will load as part of the Differentiated Definition Block or as part of an additional Definition Block. This unit of data and/or AML code describes either the base system or some large extension (such as a docking station). The entire DefinitionBlock will be loaded and compiled by the OS as a single unit, and can be unloaded by the OS as a single unit. Compiler Directive Terms The compiler directives are: Include term External term Include   Include Another ASL File IncludeTerm := Include( IncFilePathName //String IncFilePathname is the full OS file system path to another file that contains ASL terms to be included in the current file of ASL terms. External   Declare External Objects ExternalTerm := External( ObjName, //NameString ObjType //Nothing | ObjectTypeKeyword The External compiler directive is to let the assembler know that the object is declared external to this table so that the assembler will not complain about the undeclared object.  During compiling, the assembler will create the external object at the specified place in the name space (if a full path of the object is specified), or the object will be created at the current scope of the External term.  ObjType is optional.  If not specified, "UnknownObj" type is assumed. Object Terms Object terms includes: Named Object terms and Name Space Modifiers. Named Object Terms  XE "ASL:named object terms"   XE "named object terms" \t "See ASL"  The ASL terms that can be used to create named objects in a definition block are listed in the following table. Table 15-5  Named Object Terms ASL Statement Description BankField Declares fields in a banked configuration object. CreateBitField Declare a bit field object of a buffer object. CreateByteField Declare a byte field object of a buffer object. CreateDWordField Declare a dword field object of a buffer object. CreateField Declare a field object of any bit length of a buffer object. CreateWordField Declare a dword field object of a buffer object. Device Declares a bus/device object.  Event Declares an event synchronization object. Field Declares fields of an operation region object. IndexField Declares fields in an index/data configuration object. Method Declares a control method. Mutex Declares a mutex synchronization object. OperationRegion Declares an operational region. PowerResource Declares a power resource object. Processor Declares a processor package. ThermalZone Declares a thermal zone package. BankField - Declare Bank/Data Field BankFieldTerm := BankField( RegionName, //NameString BankName, //NameString BankValue, //TermArg=>DWordConst AccessType, //AccessTypeKeyword LockRule, //LockRuleKeyword UpdateRule //UpdateRuleKeyword ) {FieldUnitList} This statement creates data field objects. The contents of the created objects are obtained by a reference to a bank selection register. This encoding is used to define named data field objects whose data values are fields within a larger object selected by a bank selected register. Accessing the contents of a banked field data object will occur automatically through the proper bank setting, with synchronization occurring on the operation region that contains the BankName data variable, and on the global lock if specified by the LockRule.    The AccessType, LockRule, UpdateRule, and FieldUnitList are the same format as the Field operator. The following is a block of ASL sample code using BankField: Creates a 4-bit bank select register in system I/O space. Creates overlapping fields in the same system I/O space which are selected via the bank register. // define 256-byte operational region in SystemIO space // and name it GIO0  OperationRegion (GIO0, SystemIO, 0x125, 0x100) // create some field in GIO including a 4 bit bank select register  Field (GIO0, ByteAcc, NoLock, Preserve) { GLB1, 1, GLB2, 1, Offset(1), // move to offset for byte 1 BNK1, 4 // Create FET0 & FET1 in bank 0 at byte offset 0x30 BankField (GIO0, BNK1, 0, ByteAcc, NoLock, Preserve) { Offset (0x30), FET0, 1, FET1, 1 // Create BLVL & BAC in bank 1 at the same offset BankField (GIO0, BNK1, 1, ByteAcc, NoLock, Preserve) { Offset (0x30), BLVL, 7, BAC,  1 CreateBitField CreateBitFieldTerm := CreateBitField( SourceBuffer, //TermArg=>BufferTerm BitIndex, //TermArg=>Integer BitFieldName //NameString  XE "ASL:CreateBitField"   XE "CreateBitField" \t "See ASL"  SourceBuffer is evaluated as a buffer.  BitIndex is evaluated as an integer.  A new buffer field object BitFieldName is created for the bit of SourceBuffer at the bit index of BitIndex.  The bit-defined field within SourceBuffer must exist. CreateByteField CreateByteFieldTerm := CreateByteField( SourceBuffer, //TermArg=>BufferTerm ByteIndex, //TermArg=>Integer ByteFieldName //NameString  XE "ASL:CreateByteField"   XE "CreateByteField" \t "See ASL"  SourceBuffer is evaluated as a buffer.  ByteIndex is evaluated as an integer.  A new buffer field object ByteFieldName is created for the byte of SourceBuffer at the byte index of ByteIndex.  The byte-defined field within SourceBuffer must exist. CreateDWordField CreateDWordFieldTerm := CreateDWordField( SourceBuffer, //TermArg=>BufferTerm ByteIndex, //TermArg=>Integer DWordFieldName //NameString  XE "ASL:CreateDWordField"   XE "CreateDWordField" \t "See ASL"  SourceBuffer is evaluated as a buffer.  ByteIndex is evaluated as an integer.  A new buffer field object DWordFieldName is created for the DWord of SourceBuffer at the byte index of ByteIndex.  The DWord-defined field within SourceBuffer must exist. CreateField - Field CreateFieldTerm := CreateField( SourceBuffer, //TermArg=>BufferTerm BitIndex, //TermArg=>Integer NumBits, //TermArg=>Integer FieldName //NameString  XE "ASL:CreateField - Field"   XE "CreateField - Field" \t "See ASL"  SourceBuffer is evaluated as a buffer.  BitIndex and NumBits are evaluated as integers.  A new buffer field object FieldName is created for the bits of SourceBuffer at BitIndex for NumBits.  The entire bit range of the defined field within SourceBuffer must exist. CreateWordField  CreateWordFieldTerm := CreateWordField( SourceBuffer, //TermArg=>BufferTerm ByteIndex, //TermArg=>Integer WordFieldName //NameString  XE "ASL:CreateWordField"   XE "CreateWordField" \t "See ASL"  SourceBuffer is evaluated as a buffer.  ByteIndex is evaluated as an integer.  A new bufferfield object WordFieldName is created for the word of SourceBuffer at the word index of ByteIndex.  The word-defined field within SourceBuffer must exist. Device - Declare Bus/Device Package DeviceTerm := Device( DeviceName //NameString ) {ObjectList}  XE "ASL:Device-Declare Bus/Device Package"  Creates a Device object, which represents either a bus or a device or any other such entity of use. Device opens a name scope. A Bus/Device Package is one of the basic ways the Differentiated Definition Block describes the hardware devices in the system to the operating software. Each Bus/Device Package is defined somewhere in the hierarchical name space corresponding to that device s location in the system. Within the name space of the device are other names that provide information and control of the device, along with any sub-devices that in turn describe sub-devices, and so on. For any device, the BIOS provides only information that is added to the device in a non-hardware standard manner. This type of  value added  function is expressible in the ACPI Definition Block such that operating software can use the function.   The BIOS supplies Device Objects only for devices that are obtaining some system-added function outside the device s normal capabilities and for any Device Object required to fill in the tree for such a device. For example, if the system includes a PCI device (integrated or otherwise) with no additional functions such as power management, the BIOS would not report such a device; however, if the system included an integrated ISA device below the integrated PCI device (device is an ISA bridge), then the system would include a Device Package for the ISA device with the minimum feature being added being the ISA device s ID and configuration information and the parent PCI device, because it is required to get the ISA Device Package placement in the Name Space correct. The following block of ASL sample code shows a nested use of Device objects to describe an IDE controller connected to the root PCI bus.  Device (IDE0) { // primary controller Name(_ADR, 0) // put PCI Address (device/function) here // define region for IDE mode register OperationRegion (PCIC, PCI_Config, 0x50, 0x10) Field (PCIC, AnyAcc, NoLock, Preserve) { Device(PRIM) { //Primary adapter Name(_ADR, 0) //Primary adapter = 0 Device(MSTR) { // master channel Name(_ADR, 0) Name(_PR0, Package(){0, PIDE}) Method (_STM, 2) { Device(SLAV) { Name(_ADR, 1) Name(_PR0, Package(){0, PIDE}) Method (_STM, 2) { Event - Declare Event Synchronization Object EventTerm := Event( EventName //NameString Creates an event synchronization object named EventName.  XE "ASL:Event-Declare Event Synchcronization Object"  For more information about the uses of an event synchronization object, see the ASL definitions for the Wait, Signal, and Reset function operators. Field - Declare Field Objects FieldTerm := Field( RegionName, //NameString AccessType, //AccessTypeKeyword LockRule, //LockRuleKeyword UpdateRule //UpdateRuleKeyword ) {FieldUnitList}  XE "ASL:Field - Declare Field Objects"  Declares a series of named data objects whose data values are fields within a larger object. The fields are parts of the object named by RegionName, but their names appear in the same scope as the Field term. For example, the field operator allows a larger operation region that represents a hardware register to be broken down into individual bit fields that can then be accessed by the bit field names. Extracting and combining the component field from its parent is done automatically when the field is accessed.  Accessing the contents of a field data object provides access to the corresponding field within the parent object.   If the parent object supports Mutex synchronization, accesses to modify the component data objects  will acquire and release ownership of the parent object around the modification.  All accesses within the parent object are performed naturally aligned. If desired, AccessType can be used to force minimum access width. Note that the parent object must be able to accommodate the AccessType width.  For example, an access type of WordAcc cannot read the last byte of an odd-length operation region. Not all access types are meaningful for every type of operational region.  The following table relates region types declared with an OperationRegion term to the different access types supported for each region. Table 15-6  OperationRegion Region Types and Access Types  Region Types Access Type Description SystemMemory ByteAcc SystemIO WordAcc PCI_Config DWordAcc AnyAcc Read/Write Byte, Word, DWord access EmbeddedControl  ByteAcc SMBus ByteAcc Read/Write SMBus byte protocol WordAcc Read/Write SMBus word protocol BlockAcc Read/Write SMBus block protocol AnyAcc Read/Write linear SMBus byte, word, block protocol SMBSendRecvAcc Send/Receive SMBus protocol SMBQuickAcc QuickRead/QuickWrite SMBus protocol If LockRule is set to Lock, accesses to modify the component data objects will acquire and release the global lock. If both types of locking occur, the global lock is acquired after the parent object Mutex. UpdateRule is used to specify how the unmodified bits of a field are treated. For example, if a field defines a component data object of 4 bits in the middle of a WordAcc region, when those 4 bits are modified the UpdateRule specifies how the other 12 bits are treated.    The named data objects are provided in FieldList as a series of names and bit widths. Bits assigned no name (or NULL) are skipped. The ASL compiler supports an Offset(ByteOffset) macro within a FieldList to skip to the bit position of the supplied byte offset.   For support of non-linear address devices, such as SMBus devices, a protocol is required to be associated with each command value. The ASL compiler supports the AccessAs(AccessType, AccessAttribute) macro within a FieldList. The AccessAttribute portion of the macro is interpreted differently depending on the address space.  For SystemMemory, SystemIO, PCI_Config or EmbeddedControl space the AccessAttribute is reserved.  For SMBus devices the AccessAttribute indicates the command value of the SMBus device to use for the field being defined. The AccessAttribute allows a specific protocol to be associated with the fields following the macro and can contain any of the Access Type listed in the table. SMBus Slave Address  XE "ASL:SmBus slave address"  SMBus device Addressing supports both a linear and non-linear addressing mechanism.  This section clarifies how ACPI treats these types of devices and how they should be defined and accessed.  SMBus devices are defined to have a fixed 7-bit slave address.  This can be illustrated by the smart battery subsystem devices: Table 15-7  Examples of SMBus Devices and Slave Addresses SMBus Device Description Slave Address (A0-A6) SMBus Host Slave Interface SBS Charger SBS Selector SBS Battery The SMBus driver expects a 7-bit slave address for the device to be passed to it.  The 1.0 System Management Bus specification defines the address protocols (how data is passed on the wiggling pins) as: EMBED Unknown Figure 15-1  SMBus Slave Address Protocol This indicates that bit 0 of the protocol represents whether this access is a read or write cycle, and the next six bits represent the slave address. Note that the driver expects a zero-based address, not a one-based address.  For example, the SBS battery has a slave address of 0xB, or 0001011b (bits 0, 1 and 4 being set). This value is represented by 0x16 for writes or 0x17 for reads to the smart battery in the SMBus protocol format. The protocol format of the slave address and the actual slave address should not be confused as the SMBus driver expects the actual slave address, not the protocol format with the read/write value; the driver will shift the slave address left by 1 bit and mask in the read/write protocol. SMBus Addressing  XE "ASL:SMBus addressing"  Associated with each SMBus device is an 8-bit command register that represents an additional address space within the device, allowing up to 256 registers within an SMBus device. For some devices this is treated as a linear address space; for other devices such as the Smart Battery, this is treated as a non-linear address space.  The SMBus driver differentiates these types of devices so that it can understand how to use the different SMBus protocols on the device. A linear address device treats the command and slave address fields as a byte-linear 15-bit address space where the address is formed as follows: EMBED Unknown Figure 15-2  SMBus Linear Address Decode For example an SMBus memory device that consumes slave address 0x40 would be accessing a linear address range of 0x4000-0x40FF (256 bytes of address space). A byte access to 0x4000 (slave 0x40, command 0) would access byte location 0x4000 (slave 0x40, command 0), and a word access to 0x4000 (slave 0x40, command 0) would access byte locations 0x4000-0x4001 (slave 0x40, commands 0-1). For a device that behaves in this manner, ASL should indicate an AnyAcc in the field operator defining the SMBus device.  This indicates to the SMBus driver that it can use the read/write block, read/write word, or read/write byte protocols to access this device. A non-linear address device (such as the smart battery) defines each command value within the device to be a potentially different size.  The ACPI driver treats such a device differently from a linear address device by only accessing command values with the specified protocol only.  For example the smart battery device has a slave address of 0xB and a definition for the first two command values as follows: Table 15-8    XE "smart battery:example command codes"  Example Command Codes from the Smart Battery Command Address Data Type  Protocol to Access Manufacture Access Word Read/Write Remaining Capacity Alarm Word Read/Write Remaining Time Alarm Word Read/Write Manufacture Name Block Read/Write Device Name Block Read/Write The Smart Battery uses a non-linear programming model. Each command register can be a different size and has a specific SMBus protocol associated with it. For example command register 0x0 contains a word of data (which in a linear device would take up two command registers 0 and 1) that represents the  Manufacture Access  and command register 0x1 contains the next word of data (which in a linear device would take up two command registers 0 and 1) that represents the  Remaining Capacity.  In a linear address model these registers would overlap; however, this is legitimate SMBus device definition. As a further example command register 0x20 can represent up to 32 bytes of data (block read/write) and command register 0x21 also represents up to 32 bytes of data. SMBus Protocols  XE "ASL:SMBus protocols"  This section describes the different SMBus protocols and how the SMBus driver treats them. It also gives examples of how to define and then access such devices in ASL. Quick Protocol (QuickAcc)  XE "SMBus protocols:quick protocol (QuickAcc)"  The SMBus Quick protocol does not transfer any data. This protocol is used to control simple devices and consists of the slave address with the R/W bit set high or low. Therefore, two types of Quick commands can be generated:  QuickRead with the R/W protocol bit reset LOW or QuickWrite with the R/W protocol bit set HIGH. A device defined to use the quick protocol has no command registers, and consumes the entire 7-bit slave address.   To define a quick device an operation region is generated using the SMBus address type.  Next a field is generated in the operation region using the  QuickAcc  access type.  To generate a QuickWrite protocol to this device,  ASL would generate a write to this field.  To generate a QuickRead protocol to this device, ASL would generate a read to this field.  Note that even though the ASL read the field and a QuickRead protocol was sent to the device, the device does not return any data and the numeric result returned by the SMB driver to the ASL will be 0. For example, Device(\_SB.EC0) { Name(_HID, EISAID("PNP0C09")) Name(_CRS,  ResourceTemplate(){ // port 0x62 and 0x66 IO(Decode16, 0x62, 0x62, 0, 1), IO(Decode16, 0x66, 0x66, 0, 1) Name(_GPE, Zero) //EC is wired to bit 0 of GPE Device (SMB1) { Name(_ADR, "ACPI0001") Name(_EC, 0x8030) // EC offset(0x80), Query (0x30) OperationRegion(PHO1, SMBus, 0x61, 0x1) Device(DEVA){ Name(_ADR, 0x61) // Slave Address 0x61 Field(PHO1, QuickAcc, NoLock, Preserve) { QCKA, // end of DEVA // end of SMB1 // end of EC0 This example creates a quick SMBus device residing at slave address 0x61 called  .  Examples of generating the Quick0 and Quick1 commands from ASL is illustrated below: Method(Test){ Store(1, QCKA) // Generates a QuickRead command to slave address 0x61 Store(QCKA, Local0) // Generates a QuickWrite command to slave address 0x61 Send/Receive Command Protocol (SMBSendRecvAcc)  XE "SMBus protocols:send/receive command protocol (SMBusSendRecvAcc)"  The SMBus Send/Receive protocol transfers a byte of data between the selected SMBus slave address and the ASL code performing a read/write to the field.  The SMBus protocol for send-command is defined that the byte being written is presented in the  command  field, while the data returned from a read-command is defined to be the byte in the data field. The SMBus driver will read and write the data to a SMBSendRecvAcc field accordingly. To define a send/receive command to a device an operation region is generated using the SMBus address type.  Next a field is generated in the operation region using the  SMBSendRecvAcc  access type.  To generate a send byte protocol to this device,  ASL would generate a write to this field. To generate a receive byte protocol to this device, ASL would generate a read to this field. For example, Device(\_SB.EC0) { Name(_HID, EISAID("PNP0C09")) Name(_CRS,  ResourceTemplate(){ // port 0x62 and 0x66 IO(Decode16, 0x62, 0x62, 0, 1), IO(Decode16, 0x66, 0x66, 0, 1) Name(_GPE, Zero) //EC is wired to bit 0 of GPE Device (SMB1) { Name(_ADR, "ACPI0001") Name(_EC, 0x8030) // EC offset(0x80), Query (0x30) OperationRegion(PHO1, SMBus, 0x62, 0x1) Device(DEVB){ Name(_ADR, 0x62) // Slave Address 0x62 Field(PHO1, SMBSendRecvAcc, NoLock, Preserve) { TSTA, TSTB, TSTC, // end of DEVB // end of SMB1 // end of EC0 This example creates a send/receive byte SMBus device residing at slave address 0x62.  There are three fields that reference this single byte called   and  . Examples of generating the send/receive byte protocols from ASL are illustrated below: Method(Test){ Store(1, TSTA) // Sets TSTA, preserved TSTB and TSTC, sendbyte Store(0, TSTB) // Clears TSTB, preserved TSTA and TSTC, sendbyte Store(0x7, TSTC) // Sets TSTC to 0111b, preserved TSTA and TSTB, sendbyte Store(TSTA, Local0) // returns 1, receive byte Store(TSTB, Local0) // returns 0, receive byte Store(TSTC, Local0) // returns 7, receive byte Read/Write Byte Protocol (ByteAcc)  XE "SMBus protocols:read/write byte protocol (ByteAcc)"  The SMBus Read/Write Byte protocol transfers a byte of data between the selected SMBus slave address and command value. The command address is defined through the use of the AccessAs(AccessType, AccessAttribute) macro. In this case the AccessAtrribute represents the byte aligned command value, and AccessType would be set to ByteAcc. To define a ByteAcc device an operation region is generated using the SMBus address type.  Next a field is generated in the operation region using the  ByteAcc  access type.  In the field list an AccessAs(ByteAcc, command_value) macro is used to define what command address is associated with this field. The absence of the macro assume a starting command value of 0. The SMBus driver assumes that after the AccessAs(ByteAcc, command_value) macro is declared, the next 8-bits represent this command register. If a field is defined that crosses over this 8-bit boundary, then the SMBus driver assumes this field resides in multiple byte-wide command registers with a command address value of command_value+1 (for each new register) using the ByteAcc protocol. To generate a write byte protocol to this device,  ASL would generate a write to this field.  To generate a read byte protocol to this device, ASL would generate a read to this field. For example, Device(\_SB.EC0) { Name(_HID, EISAID("PNP0C09")) Name(_CRS,  ResourceTemplate(){ // port 0x62 and 0x66 IO(Decode16, 0x62, 0x62, 0, 1), IO(Decode16, 0x66, 0x66, 0, 1) Name(_GPE, Zero)  //EC is wired to bit 0 of GPE Device (SMB1) { Name(_ADR, "ACPI0001") Name(_EC, 0x8030) // EC offset(0x80), Query (0x30) OperationRegion(PHO1, SMBus, 0x63, 0x1) Device(DEVB){ Name(_ADR, 0x63) // Slave Address 0x63 Field(PHO1, ByteAcc, NoLock, Preserve) { AccessAs(ByteAcc, 0), TSTA, TSTB, TSTC, TSTD,  // this field spans command address 0 and 1 // end of DEVB // end of SMB1 // end of EC0 This example creates a read/write byte SMBus device residing at slave address 0x63.  There are four fields that use two command registers (0 and 1), called  , and  .  TSTA, TSTB and TSTC reference command register 0.  TSTD references both command registers 0 and 1: bit0 of TSTD represents bit 7 of command register 0, while bits 1-3 of field TSTD represent bits 0-2 of command register 1.  Examples of generating the read/write byte protocols from ASL is illustrated below: Method(Test){ Store(1, TSTA) // Sets TSTA, preserved TSTB and TSTC, write byte Store(0, TSTB) // Clears TSTB, preserved TSTA and TSTC, write byte Store(0x7, TSTC) // Sets TSTC to 0111b, preserved TSTA and TSTB, write byte Store(0xF, TSTD) // Sets TSTD to 0xF, command registers 0 and 1 Store(TSTA, Local0) // returns 1, read byte Store(TSTB, Local0) // returns 0, read byte Store(TSTC, Local0) // returns 7, read byte Store(TSTD, Local0) // returns 0xF from command registers 0 and 1 Read/Write Word Protocol (WordAcc)  XE "SMBus protocols:read/write word protocol (WordAcc)"  The SMBus Read/Write Word protocol transfers a word of data between the selected SMBus slave address and command value. The command address is defined through the use of the AccessAs(AccessType, AccessAttribute) macro. In this case the AccessAttribute represents the byte aligned command value, and AccessType should be set to WordAcc. To define a WordAcc device an operation region is generated using the SMBus address type. Next a field is generated in the operation region using the  WordAcc  access type. In the field list an AccessAs(WordAcc, command_value) macro is used to define what command address is associated with this field. The absence of the macro assume a starting command value of 0. The SMBus driver assumes that after the AccessAs(WordAcc, command_value) macro is declared, the next 16-bits represent this command register. If a field is defined that crosses over this 16-bit boundary, then the SMBus driver assumes this field resides in multiple word wide command registers with a command address value of command_value+2 (for each new register) using the WordAcc protocol. To generate a write word protocol to this device,  ASL would generate a write to this field. To generate a read word protocol to this device, ASL would generate a read to this field. Read/Write Block Protocol (BlockAcc)  XE "SMBus protocols:read/write block protocol (BlockAcc)"  The SMBus Read/Write Block protocol transfers up to a 32 byte buffer of data between the selected SMBus slave address and command value.  The command address is defined through the use of the AccessAs(AccessType, AccessAttribute) macro.  In this case the AccessAttribute represents the byte aligned command value, and AccessType would be set to BlockAcc. To define a BlockAcc device an operation region is generated using the SMBus address type. Next a field is generated in the operation region using the  BlockAcc  access type.  In the field list an AccessAs(BlockAcc, command_value) macro is used to define what command address is associated with this field. The absence of the macro assume a starting command value of 0. The SMBus driver assumes that after the AccessAs(BlockAcc, command_value) macro is declared the command register is 32 bytes or less. Each block field must start on the a command_value boundary. The SMBus driver passes block data to and from ASL through the buffer data type. The buffer is structured such that the byte count of the data to write is in record 0 followed by the buffer data. For example a 5 byte buffer with the contents of  1, 2, 3, 4  would be generated as: Buffer(5){4, 1, 2, 3, 4} Where the length of the buffer is its byte data width plus 1, and the first entry is the length of data (buffer length minus 1). On reads, ASL will return a buffer with the first entry set to the number of data bytes returned. For example, Device(\_SB.EC0) { Name(_HID, EISAID("PNP0C09")) Name(_CRS,  ResourceTemplate(){ // port 0x62 and 0x66 IO(Decode16, 0x62, 0x62, 0, 1), IO(Decode16, 0x66, 0x66, 0, 1) Name(_GPE, Zero)  //EC is wired to bit 0 of GPE Device (SMB1) { Name(_ADR, "ACPI0001") Name(_EC, 0x8030) // EC offset(0x80), Query (0x30) OperationRegion(PHO1, SMBus, 0x65, 0x1) Device(DEVB){ Name(_ADR, 0x65) // Slave Address 0x65 Field(PHO1, BlockAcc, NoLock, Preserve) { AccessAs(BlockAcc, 0), FLD1, AccessAs(BlockAcc, 0x10), FLD2, // end of DEVB // end of SMB1 // end of EC0 This example creates a read/write block SMBus device residing at slave address 0x65.  There are two fields that use two command registers (0 and 0x10), called  , and  . Examples of generating the read/write block protocols from ASL is illustrated below: Method(Test){ Name(BUF1, Buffer(){8, 1, 2, 3, 4, 5, 6, 7, 8} // 8 is the number of bytes Name(BUF2, Buffer(){4, 9, 10, 11, 12} // 4 is the number of bytes Store(BUF1, FLD1) // Sets FLD1 SMBus device block register Store(BUF2, FLD2) // Sets FLD2 SMBus device block register Store(FLD1, Local0) // local0 contains buf: 8,1,2,3,4,5,6,7,8 Store(FLD2, Local0) // local0 contains buf: 4,9,10,11,12 SMBus Memory Devices (AnyAcc)  XE "SMBus protocols:SMBus memory devices (AnyAcc)"  The AnyAcc access type allows any of the Read/Write byte, word or Block protocol transfers to be made to the selected SMBus slave address and command value.  The combined slave and command value generates a single byte granular address space. The command address (A0-A7 of the 15-bit address) is defined through the use of the AccessAs(AccessType, AccessAtrribute) macro. In this case the AccessAttribute represents the byte aligned command value, and AccessType would be set to AnyAcc. To define a AnyAcc device an operation region is generated using the SMBus address type.  Next a field is generated in the operation region using the  AnyAcc  access type. In the field list an AccessAs(AnyAcc, command_value) macro is used to define what command address is associated with this field. The absence of the macro assume a starting command value of 0. The SMBus driver assumes that after the AccessAs(AnyAcc, command_value) macro is declared then command registers are byte-granular and linear. If a field is defined that crosses over a byte boundary, then the SMBus driver assumes this field resides in multiple command registers with a command address value of command_valuet+1 (for each new register). The SMBus driver will use the most appropriate protocol for accessing the registers associated with the fields. For example, if a field spans more than three bytes a read/write block protocol access can be made, while if only spanning a byte then the read/write byte protocol can be used. For example, a 5-byte buffer with the contents of   would be generated as: Buffer(){ On reads, ASL will return a buffer with the first entry set to the number of data bytes returned. For example, Device(\_SB.EC0) { Name(_HID, EISAID("PNP0C09")) Name(_CRS,  ResourceTemplate(){ // port 0x62 and 0x66 IO(Decode16, 0x62, 0x62, 0, 1), IO(Decode16, 0x66, 0x66, 0, 1) Name(_GPE, Zero)  //EC is wired to bit 0 of GPE Device (SMB1) { Name(_ADR, "ACPI0001") Name(_EC, 0x8030) // EC offset(0x80), Query (0x30) OperationRegion(PHO1, SMBus, 0x66, 0x1) Device(DEVB){ Name(_ADR, 0x66) // Slave Address 0x66 Field(PHO1, AnyAcc, NoLock, Preserve) { FLD1, FLD2, FLD3, FLD4,  FLD5, // end of DEVB // end of SMB1 // end of EC0 This definition creates a linear SMBus device residing at slave address 0x66.  There are six fields that use 102 command registers (0-101), called   and  .  FLD1 references command registers 0-63 (first 64 bytes) and will be accessed by the block protocol (data is over 3 bytes).  FLD2 represents command registers 64-95 (next 32 bytes) and will be accessed by the block command protocol (data is over 3 bytes).  FLD3 represents command registers 96-99 (next four bytes) and will be accessed by the block command protocol (data is over 3 bytes).  FLD4 represents command registers 100-101 (next two bytes) and will be accessed by the word command protocol.  FLD5 represents command register 102 (next byte) and will be accessed by the byte command protocol.  Examples of generating the accesses from ASL is illustrated below: Method(Test){ Name(BUF1, Buffer(){ Hannibal Name(BUF2, Buffer(){ Scipio Africanus Name(BUF3, Buffer(){ Store(BUF1, FLD1) // writes  Hannibal  to linear addresses for FLD1 Store(BUF2, FLD2) // writes  Scipio Africanus  to linear addresses for FLD2 Store(BUF3, FLD3) // writes   to linear addresses for FLD3 Store(0xFF12, FLD4) // sets FLD4 to 0xFF12 Store(0xEF, FLD5) // sets FLD5 to 0xEF Store(FLD1, Local0) // local0 contains 64 byte buffer with:  Hannibal Store(FLD2, Local0) // local0 contains 32 byte buffer with:  Scipio Africanus Store(FLD3, Local0) // local0 contains 4 bytes:  Store(FLD4, Local0) // local0 contains 2 bytes: 0xFF12 Store(FLD5, Local0) // local0 contains 1 byte: 0xEF Mixed Example (AnyAcc)  XE "SMBus protocols:example of multiple protocols"  Some devices can be accessed through multiple protocols. This section gives an example of such a device. Device(\SB._EC0) { Name(_HID, EISAID("PNP0C09")) Name(_CRS,  ResourceTemplate(){ // port 0x62 and 0x66 IO(Decode16, 0x62, 0x62, 0, 1), IO(Decode16, 0x66, 0x66, 0, 1) Name(_GPE, Zero)  //EC is wired to bit 0 of GPE Device (SMB1) { Name(_ADR, "ACPI0001") Name(_EC, 0x8030) // EC offset(0x80), Query (0x30) OperationRegion(PHO1, SMBus, 0x67, 0x1) Device(DEVB){ Name(_ADR, 0x67) // Slave Address 0x67 Field(PHO1, ByteAcc, NoLock, Preserve) { AccessAs(AnyAcc, 0), FLD1, FLD2, FLD3, AccessAs(WordAcc, 0x70), FLD4,  AccessAs(ByteAcc, 0x80), FLD5, // end of DEVB // end of SMB1 // end of EC0 This definition creates an SMBus device using various protocols residing at slave address 0x67. There are three fields that use four command registers (0, 1, 2 and 3), called   and  .  FLD1 references command registers 0-1 (32 bytes per command register) and will be accessed by the byte, word and block linear protocols.  FLD2 represents command register 064 and will be accessed by the byte, word and block linear protocols.  FLD3 represents command register 96 and will be accessed by the byte, word and block linear protocols.  FLD4 represents command register 0x70 and will be accessed by the word command protocol.  FLD5 represents command register 0x80 and will be accessed by the byte command protocol.   IndexField - Declare Index/Data Fields IndexFieldTerm := IndexField( IndexName, //NameString DataName, //NameString AccessType, //AccessTypeKeyword LockRule, //LockRuleKeyword UpdateRule //UpdateRuleKeyword ) {FieldUnitList}  XE "ASL:IndexField-Declare Index/Data Fields"   XE "IndexField-Declare Index/Data Fields" \t "See ASL"  Creates a series of named data objects whose data values are fields within a larger object accessed by an index/data-style reference to IndexName and DataName. This encoding is used to define named data objects whose data values are fields within an index/data register pair. This provides a simple way to declare register variables that occur behind a typical index and data register pair.  Accessing the contents of an indexed field data object will automatically occur through the DataName object by using an IndexName object aligned on an AccessType boundary, with synchronization occurring on the operation region which contains the index data variable, and on the global lock if specified by LockRule.    AccessType, LockRule, UpdateRule, and FieldList are the same format as the Field term. The following is a block of ASL sample code using IndexField: Creates an index/data register in system I/O space made up of 8-bit registers. Creates a FET0 field within the indexed range. Method(_EX1){ // define 256-byte operational region in SystemIO space // and name it GIO0  OperationRegion (GIO0, 1, 0x125, 0x100) // create field named Preserve structured as a sequence // of index and data bytes  Field (GIO0, ByteAcc, NoLock, WriteAsZeros) { IDX0, 8, DAT0, 8, // Create an IndexField within IDX0 & DAT0 which has // FETs in the first two bits of indexed offset 0,  // and another 2 FETs in the high bit on indexed  // 2f and the low bit of indexed offset 30 IndexField (IDX0, DAT0, ByteAcc, NoLock, Preserve) { FET0, 1, FET1, 1, Offset(0x2f), // skip to byte offset 2f // skip another 7 bits FET3, 1, FET4, 1 // Clear FET3 (index 2f, bit 7) Store (Zero, FET3) Method - Declare Control Method MethodTerm := Method( MethodName, //NameString NumArgs, //Nothing | ByteConst SerializeRule //Nothing | //SerializeRuleKeyword ) {TermList}  XE "ASL:Method - Declare control method"   XE "Method - Declare control method" \t "See ASL"  Declares a named package containing a series of object references that collectively represent a control method, which is a procedure that can be invoked to perform computation. Method opens a name scope. System software executes a control method by referencing the objects in the package in order. For more information on  LINK Word.Document.6 "D:\\toosday\\kenr\\ken.doc" "OLE_LINK14"  \* MERGEFORMAT \a \r control method  execution, see section 5.5.3. The current name space location used during name creation is adjusted to be the current location on the name space tree. Any names created within this scope are  below  the name of this package. The current name space location is assigned to the method package, and all name space references that occur during control method execution for this package are relative to that location. If a method is declared as Serialized, an implicit mutex associated with the method object is acquired at SyncLevel 0.  The serialize-rule can be used to prevent re-entering of a method.  This is especially useful if the method creates name space objects.  Without the serialize-rule, the re-entering of a method will fail when it attempts to create the same name space object. Also note that all name space objects created by a method have temporary lifetime.  When method execution exits, the created objects will be destroyed. The following block of ASL sample code shows a use of Method for defining a control method that turns on a power resource.  Method(_ON) { Store (One, GIO.IDEP)   // assert power Sleep (10)              // wait 10ms Store (One, GIO.IDER)   // de-assert reset# Stall (10)              // wait 10us Store (Zero, GIO.IDEI)  // de-assert isolation Mutex - Declare Synchronization / Mutex Object MutexTerm := Mutex( MutexName, //NameString SyncLevel //ByteConst  XE "ASL:Mutex - Declare Synchronization/Mutex Object"   XE "Mutex - Declare Synchronization/Mutex Object" \t "See ASL"  Creates a data mutex synchronization object named MutexName, with level from 0 to 15 specified by SyncLevel. A synchronization object provides a  LINK Word.Document.6 "D:\\toosday\\kenr\\ken.doc" "OLE_LINK14"  \* MERGEFORMAT \a \r control method  with a mechanism for waiting for certain events. To prevent deadlocks, wherever more than one synchronization object must be owned, the synchronization objects must always be released in the order opposite the order in which they were acquired. The SyncLevel parameter declares the logical nesting level of the synchronization object. All Acquire terms must refer to a synchronization object with an equal or greater SyncLevel to current level, and all Release terms must refer to a synchronization object with equal or lower SyncLevel to the current level. Mutex synchronization provides the means for mutually exclusive ownership. Ownership is acquired using an Acquire term and is released using a Release term. Ownership of a Mutex must be relinquished before completion of any invocation.  For example, the top level  LINK Word.Document.6 "D:\\toosday\\kenr\\ken.doc" "OLE_LINK14"  \* MERGEFORMAT \a \r control method  cannot exit while still holding ownership of a Mutex. Acquiring ownership of a Mutex can be nested. The SyncLevel check is not performed on a Mutex when the ownership count is nesting. The SyncLevel of a thread before acquiring any mutexes is zero.  The SyncLevel of the global lock (\_GL) is zero.  A method marked serialized has an inherent mutex of SyncLevel 0. OperationRegion - Declare Operation Region OpRegionTerm := OperationRegion( RegionName, //NameString RegionSpace, //RegionSpaceKeyword Offset, //TermArg=>DWordConst Length //TermArg=>DWordConst  XE "ASL:OperationRegion - Declare Operation Region"   XE "OperationRegion - Declare Operation Region" \t "See ASL"  Declares an operation region. Offset is the offset within the selected RegionSpace at which the region starts (byte-granular), and Length is the length of the region in bytes. An Operation Region is a type of data object where read or write operations to the data object are performed in some hardware space. For example, the Definition Block can define an Operation Region within a bus, or system IO space. Any reads or writes to the named object will results in accesses to the IO space. Operation regions are regions in some space that contain hardware registers for exclusive use by ACPI control methods. In general, no hardware register (at least byte granular) within the operation region accessed by an ACPI control method can be shared with any accesses from any other source, with the exception of using the Global Lock to share a region with the firmware. The entire Operation Region can be allocated for exclusive use to the ACPI subsystem in the host OS. Operation Regions have  virtual content  and are only accessible via Field objects Operation Region objects may be defined down to actual bit controls using Field data object definitions. The actual bit content of a Field are bits from within a larger Buffer that are normalized for that field (i.e., shifted down and masked to the proper length), and as such the data type of a Field is Buffer. Therefore fields which are 32 bits or less in size may be read and stored as Integers. An Operation Region object implicitly supports Mutex synchronization. Updates to the object, or a Field data object for the region,  will automatically synchronize on the Operation Region object; however, a control method may also explicitly synchronize to a region to prevent other accesses to the region (from other control methods). Note that, according to the control method execution model, control method execution is non-preemptive. Because of this, explicit synchronization to an Operation Region needs to be done only in cases where a control method blocks or yields execution and where the type of register usage requires such synchronization. Originally there were five Operation Region types specified in ACPI: 0 = SystemMemory 1 = SystemIO 2 = PCI_Config 3 = EmbeddedControl 4 = SMBus These are now extended to include vendor-defined Operation Regions, with 0x80 to 0xFF user defined.  The following example ASL code shows the use of OperationRegion combined with Field to describe IDE 0 and 1 controlled through general IO space, using one FET.  OperationRegion (GIO, SystemIO, 0x125, 0x1) Field (GIO, ByteAcc, NoLock, Preserve) { IDEI, // IDEISO_EN    - isolation buffer IDEP, // IDE_PWR_EN   - power IDER, // IDERST#_EN   - reset# PowerResource - Declare Power Resource PowerResTerm := PowerResource( ResourceName, //NameString SystemLevel, //ByteConst ResourceOrder //WordConst ) {ObjectList}  XE "ASL:PowerResource"   XE "Power Resource - Declare Power Resource" \t "See ASL"  Declares a power resource. PowerResource opens a name scope.  For a definition of the PowerResource term, see section 7.1.  Processor - Declare Processor ProcessorTerm := Processor( ProcessorName, //NameString ProcessorID, //ByteConst PBlockAddress, //DWordConst PblockLength //ByteConst ) {ObjectList}  XE "ASL:Processor - Declare Processor"   XE "Processor - Declare Processor" \t "See ASL"  Declares a named processor object. Processor opens a name scope. Each processor is required to have a unique ProcessorID value from any other ProcessorID value. The ACPI BIOS declares one processor object per processor in the system under the \_PR name space. PBlockAddress provides the system IO address for the processors register block.  Each processor can supply a different such address. PBlockLength is the length of the processor register block, in bytes which is either 0 (for no P_BLK) or 6.  With one exception, all processors are required to have the same PBlockLength.  The exception is that the boot processor can have a non-zero PBlockLength when all other processors have a zero PBlockLength.  The following block of ASL sample code shows a use of the Processor term.  Processor( \_PR.CPU0, // name space name 0x120, // PBlk system IO address // PBlkLen ThermalZone - Declare Thermal Zone ThermalZoneTerm := ThermalZone( ThermalZoneName //NameString ) {ObjectList}  XE "ASL:ThermalZone - Declare Thermal Zone"   XE "ThermalZone - Declare Thermal Zone" \t "See ASL"  Declares a named Thermal Zone object. ThermalZone opens a name scope. Each use of a ThermalZone term declares one thermal zone in the system. Each thermal zone in a system is required to have a unique ThermalZoneName. For sample ASL code that uses a ThermalZone statement, see section   REF _Ref368051715 \n  Error! Reference source not found. Name Space Modifiers  XE "ASL:Name Space Modifier Terms"   XE "Name Space Modifier Terms" \t "See ASL"  The name space modifiers are as follows: Table 15-9   Name Space Modifiers ASL Statement Description Alias Defines a name alias  Defines a global name and attaches a buffer, literal data item, or package to it.  Scope Declares the placement of one or more object names in the ACPI name space when the definition block that contains the Scope statement is loaded.  Alias - Declare Name Alias AliasTerm := Alias( SourceObject, //NameString AliasObject //NameString  XE "ASL:Alias - Declare Name Alias"   XE "Alias - Declare Name Alias" \t "See Alias - Declare Name Alias"  Creates a new name, AliasObject, which refers to and acts exactly the same as SourceObject. AliasObject is created as an alias of SourceObject in the name space. The SourceObject name must already exist in the name space. If the alias is to a name within the same definition block the SourceObject name must be logically ahead of this definition in the block. The following example shows use of an Alias term: Alias(\SUS.SET.EVEN, SSE) Name - Declare Named Object NameTerm := Name( ObjectName, //NameString Object //DataObject  XE "Name - Declare Named Object" \t "See ASL"   XE "ASL:Name - Declare Named Object" \t ""  Attaches Object to ObjectName in the Global ACPI name space. This encoding is to create ObjectName in the name space, which references the Object.  The following example creates the name PTTX in the root of the name space that references a package. Name(\PTTX, // Port to Port Translate Table Package() { Package() { 0x43, 0x59 }, Package() { 0x90, 0xff }} The following example creates the name CNT in the root of the name space that references an integer data object with the value 5. Name(\CNT, 5) Scope - Declare Name Scope ScopeTerm := Scope( Location //NameString ) {ObjectList}  XE "ASL:Scope - Declare Name Scope"   XE "Scope - Declare Name Scope" \t "See ASL"  Gives a base scope to a collection of objects.  All object names defined within the scope act relative to Location. Note that Location does not have to be below the surrounding scope. Note also that the Scope term does not create objects, but only locates objects in the name space; the located objects are created by other ASL terms. The Scope term alters the current name space location to Location. This causes the defined objects within TermList to occur relative to the new location in the name space. The following example ASL code Scope(\PCI0) { Name(X, 3) Scope(\) { Method(_RQ) { Return(0) } Name(^Y, 4) places the defined objects in ACPI name space as shown in the following: \PCI0.X Opcode Terms  XE "ASL:Operator Terms"   XE "ASL:Type 1 Operator Term"  There are two types of ASL opcode terms: Type 1 opcodes and Type 2 opcodes.  A Type1 opcode term can only be used standing alone on a line of ASL code; because these types of terms do not return a value, they cannot be used as a term in an expression. A Type2 opcode term can be used in an expression because these types of terms return a value.  When used in an expression the argument that names the object in which to store the result can be optional. Note that in the opcode definitions below, when the definition says  result is stored in  this literally means that the Store operator is assumed and the  execution result  is the Source operand to the Store opcode. Type 1 Opcodes Type1Opcode := BreakTerm | BreakPointTerm | FatalTerm | IfElseTerm | LoadTerm | NoOpTerm | NotifyTerm | ReleaseTerm | ResetTerm | ReturnTerm | SignalTerm | SleepTerm | StallTerm | UnloadTerm | WhileTerm The Type 1 opcodes are listed in the following table. Table 15-10  Type 1 Opcodes ASL Statement Description Break Stop executing the current code package at this point BreakPoint Used for debugging.  Stops execution in the debugger Else  Fatal Fatal check Load differentiating definition block No operation Notify Notify the OS that a specified notification value for a NotifyObject has occurred Release Release a synchronization object Reset Reset a synchronization object Return Return from a control method, optionally setting a return value Signal Signal a synchronization object Sleep Sleep n milliseconds (yields the processor) Stall Delay n microseconds (does not yield the processor) Unload Unload differentiating definition block While While Break - Break BreakTerm := Break  XE "ASL:Break - Break"   XE "Break - Break" \t "See ASL"  The break operation causes the current package execution to complete.  BreakPoint - BreakPoint BreakPointTerm := BreakPoint  XE "ASL:BreakPoint - BreakPoint"  Used for debugging, the Breakpoint opcode stops the execution and enters the AML debugger. In the retail version of the interpreter, BreakPoint is equivalent to Noop. Else - Else Operator ElseTerm := Nothing | <Else {TermList}>  XE "ASL:Else - Else Operator"   XE "Else - Else Operator" \t "See ASL"  In an If term, if Predicate evaluates to 0, it is false, and the term list in the Else term is executed.  If Predicate evaluates to Not 0 on the If term, then it is considered true, and the term list in the Else term is not executed. The following example checks Local0 to be zero or non-zero.  On non-zero, CNT is incremented; otherwise, CNT is decremented. If (Local0) { Increment (CNT) } Else { Decrement (CNT) Fatal - Fatal Check FatalTerm := Fatal( Type, //ByteConst Code, //DWordConst //TermArg=>Integer  XE "ASL:Fatal - Fatal Check"   XE "Fatal - Fatal Check" \t "See ASL"  This operation is used to inform the OS that there has been an OEM-defined fatal error. In response, the OS must log the fatal event and perform a controlled OS shutdown in a timely fashion.  If Operator IfTerm := If( Predicate //TermArg=>Integer ) {TermList} Predicate is evaluated as an integer. If the integer is non-zero, the term list of the If term is executed.  XE "ASL:If - If Operator"   XE "If - If Operator" \t "See ASL"  The following examples all check for bit 3 in Local0 being set, and clear it if set. // example 1 if (And(Local0, 4)) { XOr (Local0, 4, Local0) // example 2 Store(4, Local2) if (And(Local0, Local2)) { XOr (Local0, Local2, Local0) Load - Load Differentiated Definition Block LoadTerm := Load( Object, //NameString DDBHandle //SuperName  XE "ASL:Load - Load Differentiated Definition Block"   XE "Load Differentiated Definition Block" \t "See ASL"  Performs a run time load of a Definition Block. The Object parameter can either refer to an operation region field or an operation region directly.  If the object is an operation region, the operation region must be in SystemMemory space.  The Definition Block should contain a DESCRIPTION_HEADER of type SSDT or PSDT. The Definition Block must be totally contained within the supplied operational region or operation region field. This table is read into memory, the checksum is verified, and then it is loaded into the ACPI name space. The DDBHandle parameter is the handle to the Differentiating Definition Block that can be used to unload the Definition Block at a future time.  The OS can also check the OEM Table ID and Revision ID against a database for a newer revision Definition Block of the same OEM Table ID and load it instead.  The default name space location to load the Definition Block is relative to the current name space. The new Definition Block can override this by specifying absolute names or by adjusting the name space location using the Scope operator. Loading a Definition Block is a synchronous operation. Upon completion of the operation, the Definition Block has been loaded. The control methods defined in the Definition Block are not executed during load time. Noop Code - No Operation NoOpTerm := Noop  XE "ASL:Noop Code - No Operation"   XE "Noop Code - No Operation" \t "See ASL"  This operation has no effect. Notify - Notify NotifyTerm := Notify( Object, //SuperName NotificationValue //TermArg=>ByteConst  XE "ASL:Notify - Notify"   XE "Notify - Notify" \t "See ASL"  Notifies the OS that the NotificationValue for the Object has occurred. Object must be a reference to a device or thermal zone object.  Notification values are determined by the Object type. For example, the notify values for a thermal zone object are different from the notify values used for a device object. Undefined notification values are treated as reserved and are ignored by the OS. For lists of defined Notification values, see section   REF _Ref369887208 \n  Error! Reference source not found. Release - Release a Mutex Synchronization Object ReleaseTerm := Release( SyncObject //SuperName  XE "ASL:Release - Release a Mutex Synchronization Object"   XE "Release - Release a Mutex Synchronization Object" \t "See ASL"  SynchObject must be a mutex synchronization object. If the mutex object is owned by the current invocation, ownership for the Mutex is released once. It is fatal to release ownership on a Mutex unless it is currently owned. A Mutex must be totally released before an invocation completes. Reset - Reset an Event Synchronization Object ResetTerm := Reset( SyncObject //SuperName SynchObject must be an Event synchronization object.  This encoding is used to reset an event synchronization object to a non-signaled state. See also the Wait and Signal function operator definitions  XE "ASL:Reset - Reset an Event Synchronization Object"   XE "Reset - Reset an Event Synchronization Object" \t "See ASL"  Return - Return ReturnTerm := Return( //TermArg=>DataObject  XE "ASL:Return - Return"   XE "Return - Return" \t "See ASL"  Returns control to the invoking control method, optionally returning a copy of the object named in Arg. Signal - Signal a Synchronization Event SignalTerm := Signal( SyncObject //SuperName  XE "ASL:Signal - Signal a Synchronization Event"   XE "Signal - Signal a Synchronization Event" \t "See ASL"  SynchObject must be an Event synchronization object. The Event object is signaled once, allowing one invocation to acquire the event. Sleep - Sleep SleepTerm := Sleep( MilliSecs //TermArg=>Integer  XE "ASL:Sleep - Sleep"   XE "Sleep - Sleep" \t "See ASL"  The Sleep term is used to implement long-term timing requirements. Execution is delayed for at least the required number of milliseconds. The implementation of Sleep is to round the request up to the closest sleep time supported by the OS and relinquish the processor.  Stall - Stall for a Short Time StallTerm := Stall( MicroSecs //TermArg=>Integer  XE "ASL:Stall - Stall for a Short Time" \t "  The Stall term is used to implement short-term timing requirements. Execution is delayed for at least the required number of microseconds. The implementation of Stall is OS-specific, but must not relinquish control of the processor. Because of this, delays longer than 100 microseconds must use Sleep instead of Stall.  Unload - Unload Differentiated Definition Block UnloadTerm := Unload( DDBHandle //SuperName  XE "ASL:Unload - Unload Differentiated Definition Block"   XE "Unload - Unload Differentiated Definition Block" \t "See ASL"  Performs a run time unload of a Definition Block that was loaded using a Load term. Loading or unloading a Definition Block is a synchronous operation, and no control method execution occurs during the function. On completion of the Unload operation, the Definition Block has been unloaded (all the name space objects created as a result of the corresponding Load operation will be removed from the name space). While - While WhileTerm := While( Predicate //TermArg=>Integer ) {TermList}  XE "ASL:While - While"   XE "While - While" \t "See ASL"  Predicate is evaluated as an integer.  If the integer is non-zero, the list of terms in TermList is executed. The operation repeats until the Predicate evaluates to zero. Type 2 Opcodes Type2Opcode := AcquireTerm | AddTerm | AndTerm | ConcatTerm | CondRefOfTerm | DecTerm | DerefOfTerm | DivideTerm | FindSetLeftBitTerm | FindSetRightBitTerm | FromBCDTerm | IncTerm | IndexTerm | LAndTerm | LEqualTerm | LGreaterTerm | LGreaterEqualTerm | LLessTerm | LLessEqualTerm | LNotTerm | LNotEqualTerm | LOrTerm | MatchTerm | MultiplyTerm | NAndTerm | NOrTerm | NotTerm | ObjectTypeTerm | OrTerm | RefOfTerm | ShiftLeftTerm | ShiftRightTerm | SizeOfTerm | StoreTerm | SubtractTerm | ToBCDTerm | WaitTerm | XorTerm | UserTerm  XE "ASL:Type 2 Operators"   XE "Type 2 Operators" \t "See ASL"  The ASL terms for Type 2 Opcodes are listed in the following table.  Table 15-11   Type 2 Opcodes ASL Statement Description Acquire Acquire a synchronization object Add two values Bitwise And Concatenate Concatenate two strings CondRefOf Conditional reference to an object Decrement Decrement a value. DerefOf Dereference of an object reference Divide Divide FindSetLeftBit Index of first set Lsb FindSetRightBit Index of first set Msb FromBCD Convert from BCD to numeric Increment Increment a value Index Reference the nth element of a package Logical And LEqual Logical Equal LGreater Logical Greater LGreaterEqual Logical Not less LLess Logical Less LLessEqual Logical Not greater Logical Not LNotEqual Logical Not equal Logical Or Match Search for match in package array Multiply Multiply Bitwise Nand Bitwise Nor Bitwise Not ObjectType Type of object Bitwise Or RefOf Reference to an object ShiftLeft Shift value left ShiftRight Shift value right SizeOf Get the size of a buffer, string, or package Store Store value Subtract Subtract values ToBCD Convert numeric to BCD Bitwise Xor Acquire - Acquire a Mutex Synchronization Object AcquireTerm := Acquire( SyncObject, //SuperName TimeoutValue //WordConst ) => Boolean //Ones means timed-out  XE "ASL:Acquire - Acquire a Mutex Synchronization Object"   XE "Acquire - Acquire a Mutex Synchronization Object" \t "See ASL"  SynchObject must be a mutex synchronization object.  It refers to the mutex to be acquired. Ownership of the Mutex is obtained. If the Mutex is already owned by a different invocation, the processor is relinquished until the owner of the Mutex releases it or until at least TimeoutValue milliseconds have elapsed. A Mutex can be acquired more than once by the same invocation.  This operation returns a non-zero value if a timeout occurred and the mutex ownership was not acquired. A TimeoutValue of 0xFFFF indicates that there is no time out and the operation will wait indefinitely. Add - Add AddTerm := Add( Addend1, //TermArg=>Integer Addend2, //TermArg=>Integer Result //Nothing | SuperName ) => Integer  XE "ASL:Add - Add"   XE "Add - Add" \t "See ASL"  Addend1 and Addend2 are evaluated as integer data types and are added, and the result is optionally stored into Result.   Overflow conditions are ignored. And - Bitwise And AndTerm := And( Source1, //TermArg=>Integer Source2, //TermArg=>Integer Result //Nothing | SuperName ) => Integer  XE "ASL:And - Bitwise And"   XE "And - Bitwise And" \t "See ASL"  Source1 and Source2 are evaluated as integer data types, a bit-wise AND is performed, and the result is optionally stored into Result. Concatenate - Concatenate  ConcatTerm := Concatenate( Source1, //TermArg=>ComputationalData Source2, //TermArg=>ComputationalData Result //Nothing | SuperName ) => ComputationalData  XE "ASL:Concatenate - Concatenate"   XE "Concatenate - Concatenate" \t "See ASL"  Source1 and Source2 are evaluated. Source1 and Source2 must be of the same data type (that is, both integers, both strings, or both buffers).  Source2 is concatenated to Source1 and the result data is optionally stored into Result. Table 15-12 Concatenate Data Types Source1 Data Type Source2 Data Type Result Data Type Integer Integer Buffer String String String Buffer Buffer Buffer CondRefOf - Conditional Reference Of CondRefOfTerm := CondRefOf( Source, //SuperName Destination //SuperName ) => Boolean  XE "ASL:CondRefOf - Conditional Reference Of"   XE "CondRefOf - Conditional Reference Of" \t "See ASL"  Attempts to set Destination to refer to Source. The Source of this operation can be any object type (e.g., data package, device object, etc.). On success, the Destination object is set to refer to Source and the execution result of this operation is the constant Ones object. On failure the execution result of this operation is the constant Zero object and the Destination object is unchanged. This can be used to reference items in the name space which may appear dynamically (e.g., from a dynamically loaded differentiation definition block). CondRefOf is equivalent to RefOf except that if the Source object does not exist, it is fatal for RefOf but not for CondRefOf. Decrement - Decrement DecTerm := Decrement( Addend //SuperName ) => Integer This operation decrement the   XE "ASL:Decrement - Decrement" \t "See Add"  Addend by one and the result is stored back to Addend. DerefOf   Dereference Of Operator DerefOfTerm := DerefOf( Source //TermArg=>ObjectReference ) => ObjectReference  XE "ASL:DerefOf  - Dereference Of Operator"   XE "DerefOf  - Dereference Of Operator" \t "See ASL"  Returns the object referred by the Source object reference.  The object returned can be any object type (for example, a package, a device object, and so on). Divide - Divide DivideTerm := Divide( Dividend, //TermArg=>Integer Divisor, //TermArg=>Integer Remainder, //Nothing | SuperName Result //Nothing | SuperName ) => Integer //returns Result  XE "ASL:Divide - Divide"   XE "Divide - Divide" \t "See ASL"  Dividend and Divisor are evaluated as integer data. Dividend is divided by Divisor, then the resulting remainder is optionally stored into Remainder and the resulting quotient is optionally stored into Result. Divide-by-zero exceptions are fatal. FindSetLeftBit   Find Set Left Bit FindSetLeftBitTerm := FindSetLeftBit( Source, //TermArg=>Integer Result //Nothing | SuperName ) => Integer  XE "ASL:FindSetLeftBit - Find Set Left Bit"   XE "FindSetLeftBit - Find Set Left Bit" \t "See ASL"  Source is evaluated as integer data type, and the one-based bit location of the first MSb (most significant set bit) is optionally stored into Result. The result of 0 means no bit was set, 1 means the left-most bit set is the first bit, 2 means the left-most bit set is the second bit, and so on. FindSetRightBit - Find Set Right Bit FindSetRightBitTerm := FindSetRightBit( Source, //TermArg=>Integer Result //Nothing | SuperName ) => Integer  XE "ASL:FindSetRightBit - Find Set Right Bit"   XE "FindSetRightBit - Find Set Right Bit" \t "See ASL"  Source is evaluated as integer data type, and the one-based bit location of the most LSb ( least significant set bit) is optionally stored in Result. The result of 0 means no bit was set, 32 means the first bit set is the 32nd bit, 31 means the first bit set is the 31st bit, and so on. FromBCD - Convert from BCD FromBCDTerm := FromBCD( BCDValue, //TermArg=>Integer Result //Nothing | SuperName ) => Integer  XE "ASL:FromBCD - Convert from BCD"   XE "FromBCD - Convert from BCD" \t "See ASL"  The FromBCD operation is used to convert BCDValue to a numeric format and store the numeric value in Result.  Increment - Increment IncTerm := Increment( Addend //SuperName ) => Integer  XE "ASL:Increment - Increment" \t "See Add"  Equivalent to Add(Addend, 1, Addend) Index - Index IndexTerm := Index( Source, //TermArg=> //<BufferTerm | PackageTerm> Index, //TermArg=>Integer Destination //Nothing | SuperName ) => ObjectReference  XE "ASL:Index - Index"   XE "Index - Index" \t "See ASL"  Source is evaluated to either buffer or package data type. Index is evaluated to an integer. The object at Index within Source is optionally stored as a reference into Destination. The following example ASL code shows a way to use the Index term to store into a local variable the sixth element of the first package of a set of nested packages: Name(IO0D, Package() {   Package() {   0x01, 0x03F8, 0x03F8, 0x01, 0x08, 0x01,  0x25, 0xFF, 0xFE, 0x00, 0x00    Package() {   0x01, 0x02F8, 0x02F8, 0x01, 0x08, 0x01,  0x25, 0xFF, 0xBE, 0x00, 0x00    Package() {   0x01, 0x03E8, 0x03E8, 0x01, 0x08, 0x01,  0x25, 0xFF, 0xFA, 0x00, 0x00    Package() {   0x01, 0x02E8, 0x02E8, 0x01, 0x08, 0x01,  0x25, 0xFF, 0xBA, 0x00, 0x00    Package() {   0x01, 0x0100, 0x03F8, 0x08, 0x08, 0x02,  0x25, 0x20, 0x7F, 0x00, 0x00,  //Get the 6th element of the first package Store(DeRefOf(Index(DeRefOf(Index(IO0D, 0)), 5)), Local0) The following example ASL code shows a way to store into the 3rd byte of a buffer: Name(BUFF, Buffer() { 0x01, 0x02, 0x03, 0x04, 0x05 //Store 0x55 into the third byte of the buffer Store(0x55, Index(BUFF, 2)) LAnd - Logical And LAndTerm := LAnd( Source1, //TermArg=>Integer Source2 //TermArg=>Integer ) => Boolean  XE "ASL:LAnd - Logical And"   XE "LAnd - Logical And" \t "See ASL"  Source1 and source2 are evaluated as integers. If both values are non-zero, the constant object Ones is returned, otherwise the constant object Zero is returned. LEqual - Logical Equal LEqualTerm := LEqual( Source1, //TermArg=>Integer Source2 //TermArg=>Integer ) => Boolean  XE "ASL:LEqual - Logical Equal"   XE "LEqual - Logical Equal" \t "See ASL"  Source1 and Source2 are evaluated as integers.  If the values are equal, the constant object Ones is returned; otherwise, the constant object Zero is returned. LGreater - Logical Greater LGreaterTerm := LGreater( Source1, //TermArg=>Integer Source2 //TermArg=>Integer ) => Boolean  XE "ASL:LGreater - Logical Greater"   XE "LGreater - Logical Greater" \t "See ASL"  Source1 and Source2 are evaluated as integers.  If Source1 is greater than Source2, the constant object Ones is returned; otherwise, the constant object Zero is returned. LGreaterEqual - Logical Greater Than Or Equal LGreaterEqualTerm := LGreaterEqual( Source1, //TermArg=>Integer Source2 //TermArg=>Integer ) => Boolean  XE "ASL:LGreaterEqual - Logical Greater Than Or Equal"   XE "LGreaterEqual - Logical Greater Than Or Equal" \t "See ASL"  Source1 and Source2 are evaluated as integers. If Source1 is greater than or equal to Source2, the constant object Ones is returned; otherwise, the constant object Zero is returned. LLess - Logical Less LLessTerm := LLess( Source1, //TermArg=>Integer Source2 //TermArg=>Integer ) => Boolean  XE "ASL:LLess - Logical Less"   XE "LLess - Logical Less" \t "See ASL"  Source1 and Source2 are evaluated as integers. If Source1 is less than Source2, the constant object Ones is returned; otherwise, the constant object Zero is returned. LLessEqual - Logical Less Than Or Equal LLessEqualTerm := LLessEqual( Source1, //TermArg=>Integer Source2 //TermArg=>Integer ) => Boolean  XE "ASL:LLessEqual - Logical Less Than Or Equal"   XE "LLessEqual - Logical Less Than Or Equal" \t "See ASL"  Source1 and Source2 are evaluated as integers. If Source1 is less than or equal to Source2, then the constant object Ones is returned; otherwise, the constant object Zero is returned. LNot - Logical Not LNotTerm := LNot( Source, //TermArg=>Integer ) => Boolean  XE "ASL:LNot - Logical Not"   XE "LNot - Logical Not" \t "See ASL"  Source1 is evaluated as an integer.  If the value is non-zero, the constant object Zero is returned; otherwise, the constant object Ones is returned. LNotEqual - Logical Not Equal LNotEqualTerm := LNotEqual( Source1, //TermArg=>Integer Source2 //TermArg=>Integer ) => Boolean  XE "ASL:LNot Equal - Logical Not Equal"   XE "LNot Equal - Logical Not Equal" \t "See ASL"  Source1 and Source2 are evaluated as integers.  If Source1 is not equal to Source2, then the constant object Ones is returned; otherwise, the constant object Zero is returned. LOr - Logical Or LOrTerm := LOr( Source1, //TermArg=>Integer Source2 //TermArg=>Integer ) => Boolean  XE "ASL:LOr - Logical Or"   XE "LOr - Logical Or" \t "See ASL"  Source1 and Source2 are evaluated as integers. If either values is non-zero, the constant object Ones is returned; otherwise, the constant object Zero is returned. Match - Find Object Match MatchTerm := Match( SearchPackage, //TermArg=>Package //MatchOpKeyword MatchObject1, //TermArg=>Integer //MatchOpKeyword MatchObject2, //TermArg=>Integer StartIndex //TermArg=>Integer ) => Ones | Integer  XE "ASL:Match - Find Object Match"   XE "Match - Find Object Match" \t "See ASL"  SearchPackage is evaluated to a package object and is treated as a one-dimension array.  A comparison is performed for each element of the package, starting with the index value indicated by StartIndex (0 is the first element). If the element of SearchPackage being compared against is called P[i], then the comparison is: if (P[i] Op1 MatchObject1) and (P[i] Op2 MatchObject2) then Match => i is returned. If the comparison succeeds, the index of the element that succeeded is returned; otherwise, the constant object Ones is returned. Op1 and Op2 have the following values and meanings listed in the following table. Table 15-13  Match Term Operator Meanings Operator Encoding Macro TRUE - a don t care, always returns TRUE EQ - returns TRUE if P[i] == MatchObject LE - returns TRUE if P[i] <= MatchObject LT - returns TRUE if P[i] < MatchObject GE - returns TRUE if P[i] >= MatchObject GT - returns TRUE if P[i] > MatchObject Following are some example uses of Match: Name(P1,  Package() {1981, 1983, 1985, 1987, 1989, 1990, 1991, 1993, 1995, 1997, 1999, 2001} // match 1993 == P1[i] Match(P1, MEQ, 1993, MTR, 0, 0) // -> 7, since P1[7] == 1993 // match 1984 == P1[i] Match(P1, MEQ, 1984, MTR, 0, 0) // -> ONES (not found) // match P1[i] > 1984 and P1[i] <= 2000 Match(P1, MGT, 1984, MLE, 2000, 0) // -> 2, since P1[2]>1984 and P1[2]<=2000 // match P1[i] > 1984 and P1[i] <= 2000, starting with 3rd element Match(P1, MGT, 1984, MLE, 2000, 3) // -> 3, first match at or past Start Multiply - Multiply MultiplyTerm := Multiply( Multiplicand, //TermArg=>Integer Multiplier, //TermArg=>Integer Result //Nothing | SuperName ) => Integer  XE "ASL:Multiply - Multiply"   XE "Multiply - Multiply" \t "See ASL"  Multiplicand and Multiplier are evaluated as integer data types. Multiplicand is multiplied by Multiplier, and the result is optionally stored into Result. Overflow conditions are ignored. NAnd - Bit-wise NAnd NAndTerm := NAnd( Source1, //TermArg=>Integer Source2 //TermArg=>Integer Result //Nothing | SuperName ) => Integer  XE "ASL:NAnd - Bit-wise NAnd"   XE "NAnd - Bit-wise NAnd" \t "See ASL"  Source1 and Source2 are evaluated as integer data types, a bit-wise NAND is performed, and the result is optionally stored in Result. NOr - Bitwise NOr NOrTerm := NOr( Source1, //TermArg=>Integer Source2 //TermArg=>Integer Result //Nothing | SuperName ) => Integer  XE "ASL:NOr - Bitwise NOr"   XE "NOr - Bitwise NOr" \t "See ASL"  Source1 and Source2 are evaluated as integer data types, a bit-wise NOR is performed, and the result is optionally stored in Result. Not - Not NotTerm := Not( Source, //TermArg=>Integer Result //Nothing | SuperName ) => Integer  XE "ASL:Not - Not"   XE "Not - Not" \t "See ASL"  Source1 is evaluated as an integer data type, a bit-wise NOT is performed, and the result is optionally stored in Result. ObjectType - Object Type ObjectTypeTerm := ObjectType( Object //SuperName ) => Integer  XE "ASL:ObjectType - Object Type"   XE "ObjectType - Object Type" \t "See ASL"  The execution result of this operation is an integer that has the numeric value of the object type for Object. The object type codes are listed in the following table.  Note that if this operation is performed on an object reference such as one produced by the Alias, Index or RefOf statements, the object type of the base object is returned.  For typeless objects such as scope names, type value  Uninitialized  is returned. Table 15-14  Values Returned By the ObjectType Operator Value Meaning Uninitialized Integer String Buffer Package Field Unit Device Event Method Mutex Operation Region Power Resource Processor Thermal Zone Buffer Field DDB Handle Debug Object Reserved Or - Bit-wise Or OrTerm := Or( Source1, //TermArg=>Integer Source2 //TermArg=>Integer Result //Nothing | SuperName ) => Integer  XE "ASL:Or - Bit-wise Or"   XE "Or - Bit-wise Or" \t "See ASL"  Source1 and Source2 are evaluated as integer data types, a bit-wide OR is performed, and the result is optionally stored in Result. RefOf - Reference Of RefOfTerm := RefOf( Object //SuperName ) => ObjectReference  XE "ASL:RefOf - Refernce Of"   XE "RefOf - Refernce Of" \t "See ASL"  Returns an object reference to Object.  Object can be any object type (for example, a package, a device object, and so on). If the Object does not exist, the result of a RefOf operation is fatal. Use the CondRefOf term in cases where the Object might not exist.  The primary purpose of RefOf() is to allow an object to be passed to a method as an argument to a method without the object being evaluated at the time of the method was loaded. ShiftLeft - Shift Left ShiftLeftTerm := ShiftLeft( Source, //TermArg=>Integer ShiftCount //TermArg=>Integer Result //Nothing | SuperName ) => Integer  XE "ASL:ShiftLeft - Shift Left"   XE "ShiftLeft - Shift Left" \t "See ASL"  Source and ShiftCount are evaluated as integer data types. Source is shifted left with the least significant bit zeroed ShiftCount times. The result is optionally stored into Result. ShiftRight - Shift Right ShiftRightTerm := ShiftRight( Source, //TermArg=>Integer ShiftCount //TermArg=>Integer Result //Nothing | SuperName ) => Integer  XE "ASL:ShiftRight - Shift Right"   XE "ShiftRight - Shift Right" \t "See ASL"  Source and ShiftCount are evaluated as integer data types. Source is shifted right with the most significant bit zeroed ShiftCount times.  The result is optionally stored into Result. SizeOf - SizeOf Data Object SizeOfTerm := SizeOf( DataObject //SuperName=>DataObject ) => Integer  XE "ASL:Siz  XE "SizeOf - Size Of Data Object" \t "See ASL"  eOf - Size Of Data Object"  Returns the size of a buffer, string, or package data object. For a buffer it returns the size in bytes of the data. For a string, it returns the size in bytes of the string NOT counting the trailing NULL. For a package, it returns the number of elements. Store - Store StoreTerm := Store( Source, //TermArg=>DataObject Destination //SuperName ) => DataObject  XE "ASL:Store - Store"   XE "Store - Store" \t "See ASL"  This operation evaluates Source converts to the data type of Destination and writes the results into Destination. If the Destination is of the type Uninitialized, then the Destination object is initialized as shown in the following table. Table 15-15  Store Operator Initialization Data Types for Uninitialized Destinations Data Type Description Integer Destination initialized as integer.  Buffer Destination initialized as buffer. String Destination initialized as string. The Buffer data type is a fixed length data type. If the source argument has a greater length than the destination size, extra data are truncated. If the source argument has a smaller length than the destination size, the rest of the destination data are zeroed.  Stores to Operational Region Field data types may relinquish the processor depending on the region type. All stores (of any type) to the constant zero, constant one, or constant ones object are not allowed.  Stores to read-only objects are fatal. The execution result of the operation is the same as the data written to Destination. The following example creates the name CNT that references an integer data object with the value 5 and then stores CNT to Local0. After the Store operation, Local0 is an integer object with the value 5. Name(CNT, 5) Store(CNT, Local0) Subtract - Subtract SubtractTerm := Subtract( Addend1, //TermArg=>Integer Addend2, //TermArg=>Integer Result //Nothing | SuperName ) => Integer  XE "ASL:Subtract - Subtract"   XE "Subtract - Subtract" \t "See ASL"  Addend1 and Addend2 are evaluated as integer data types. Addend2 is subtracted from Addend1, and the result is optionally stored into Result.  Underflow conditions are ignored. ToBCD - Convert to BCD ToBCDTerm := ToBCD( Value, //TermArg=>Integer Result //Nothing | SuperName ) => Integer  XE "ASL:ToBCD - Convert to BCD"   XE "ToBCD - Convert to BCD" \t "See ASL"  The ToBCD operation is used to convert Value from a numeric format to a BCD format and optionally store the numeric value in Result. Wait - Wait for a Synchronization Event WaitTerm := Wait( SyncObject, //SuperName TimeoutValue //TermArg=>Integer ) => Boolean  XE "ASL:Wait - Wait for a Synchronization Event"   XE "Wait - Wait for a Synchronization Event" \t "See ASL"  SynchObject must be an event synchronization object.  The calling method blocks waiting for the event to be signaled. The pending signal count is decremented. If there is no pending signal count, the processor is relinquished until a signal count is posted to the Event or until at least TimeoutValue milliseconds have elapsed.  This operation returns a non-zero value if a timeout occurred and a signal was not acquired. A TimeoutValue of 0xFFFF indicates that there is no time out and the operation will wait indefinitely. XOr - Bitwise XOr XOrTerm := XOr( Source1, //TermArg=>Integer Source2 //TermArg=>Integer Result //Nothing | SuperName ) => Integer  XE "ASL:XOr - Bit-wise XOr" \t "See"   XE "XOr - Bit-wise XOr" \t "See ASL"  Source1 and Source2 are evaluated as integer data types, a bit-wise XOR is performed, and the result is optionally stored in Result. User Terms UserTerm := NameString( //NameString=>MethodTerm ArgList ) => DataObject NameString must be referring to an existing method object in the Name Space.  It can either be an absolute Name Space path or else it must be accessible at the current scope of invocation.  The number of arguments in ArgList must match the number of arguments declared in the method object.  XE "ASL:XOr - Bit-wise XOr" \t "See"   XE "XOr - Bit-wise XOr" \t "See ASL"  Data Objects There are four different types of data objects: Buffer terms Package terms Literal data terms Data macros Buffer   Declare Buffer Object BufferTerm := Buffer( BuffSize //Nothing | //TermArg=>Integer ) {String | ByteList} Declares a Buffer, of size BuffSize and initial value of Initializer (ByteList). The optional BuffSize parameter specifies the size of the buffer and the initial value is specified in Initializer ByteList. If BuffSize is not specified, it defaults to the size of initializer. If the count is too small to hold the value specified by initializer, initializer size is used. For example, all four of the following examples generate the same datum in name space, although they have different ASL encodings: Buffer(10) { P00.00A Buffer(Arg0) {0x50 0x30 0x30 0x2e 0x30 0x30 0x41} Buffer(10) {0x50 0x30 0x30 0x2e 0x30 0x30 0x41 0x00 0x00 0x00} Buffer() {0x50 0x30 0x30 0x2e 0x30 0x30 0x41 0x00 0x00 0x00} Package   Declare Package Object PackageTerm := Package( NumElements //Nothing | //ByteConst ) {PackageList} Declares an unnamed aggregation of data items, constants, and/or references to control methods. The size of the package is NumElements. PackageList contains the list data items, constants, and/or control method references used to initialize the package. If NumElements is absent, it is set to match the number of elements in the PackageList. If NumElements is present and greater than the number of elements in the PackageList, the default entry Undefined is used to initialize the package elements beyond those initialized from the PackageList. Evaluating an undefined element will yield an error, but they can be assigned values to make them defined. It is an error for NumElements to be less than the number of elements in the PackageList  There are two types of package elements in the PackageList: data objects and references to control methods.  Note: If non method code package objects are implemented in an ASL compiler, evaluations of these objects are performed within the scope of the invoking method, and are performed when the containing definition block is loaded. This means that the targets of all stores, loads, and references to the locals, arguments, or constant terms are in the same name scope as the invoking method. Example 1:  Package () {  ACPI 1.0 COMPLIANT Package () {  CheckSum=> Package () {  Example 2: This example defines and initializes a two-dimensional array. Package () { Package () {11, 12, 13}, Package () {21, 22, 23} Example 3: This example is a legal encoding, but of no apparent use. Package (){} Example 4: This encoding allocates space for ten things to be defined later (see the Name and Index term definitions). Package (10) {} Literal Data Terms Literal Data terms include: Integers Strings Constant data terms Integers Integer := ByteConst | WordConst | DWordConst ByteConst := 0x00-0xff WordConst := 0x0000-0xffff DWordConst := 0x00000000-0xffffffff Using the above grammar to define an object containing the value of integer causes the ASL compiler to automatically generate the proper width of the defined integer (Byte, Word, or DWord). Strings String  AsciiCharList  AsciiCharList := Nothing | <AsciiChar AsciiCharList> AsciiChar := 0x01-0x7f NullChar := 0x00 The above grammar can be used to define an object containing a read-only string value. The default string value is the null string, which has 0 bytes available for storage of other values. Since literal strings are read-only constants, the following ASL statement (for example) is not supported: Store( However, the following sequence of statements is supported: Name(STR,  Store( , STR) Constant Data Terms ConstTerm := Zero | One | Ones | Revision  XE "constant terms" \t "See ASL"   XE "ASL:constant terms" \t ""  The constant declaration terms are Zero, One, Ones, and Revision. Zero - Constant Zero Object  XE "Zero-constant zero object" \t "See ASL"   XE "ASL:Zero-constant zero object" \t ""  The constant Zero object is an object of type Integer that will always read as all bits clear. Writes to this object are not allowed. One - Constant One Object  XE "ASL:one constant one object"   XE "one constant one object" \t "See ASL"  The constant One object is an object of type Integer that will always read the LSb as set and all other bits as clear  (that is, the value of 1). Writes to this object are not allowed. Ones - Constant Ones Object  XE "ones constant ones object" \t "See ASL"   XE "ASL:one constant one object" \t ""  The constant Ones object is an object of type Integer that will always read as all bits set. Writes to this object are not allowed. Revision   Constant Revision Object The constant Revision object is an object of type Integer that will always read as the revision of the AML interpreter. Data Macors The data macros  XE "data object declaration terms" \t "See ASL"   XE "ASL:data object declaration terms" \t ""   are: EISAID terms. ResourceTemplate terms. EISAID Macro - Convert EISA ID String To Integer EISAIDTerm := EISAID( EISAIDString //String ) => DWordConst  XE "ASL:EISAID - Convert EISA ID"   XE "EISAID - Convert EISA ID" \t "See ASL"  Converts EISAIDString, a 7-character text string argument, into its corresponding 4-byte numeric EISA ID encoding. The can be used when declaring IDs for devices that have EISA IDs. ResourceTemplate Macro   Convert Resource To Buffer Format ResourceTemplateTerm := ResourceTemplate() {ResourceMacroList} => BufferTerm For a full definition of the ResourceTemplateTerm macro, see section 6.4.1. Miscellaneous Objects Miscellaneous objects include: Debug objects ArgX objects LocalX objects Debug Data Object DebugTerm := Debug The debug data object  XE "ASL:debug data object"   XE "debug data object" \t "See ASL"   is a virtual data object.  Writes to this object provide debugging information. On at least debug versions of the interpreter any writes into this object are appropriately displayed on the system s native kernel debugger. All writes to the debug object are otherwise benign. If the system is in use without a kernel debugger, then writes to the debug object are ignored. The following table relates the ASL term types that can be written to the Debug object to the format of the information on the kernel debugger display.  Table 15-16  Debug Object Display Formats ASL Term Type Display Format Numeric data object All digits displayed in hexadecimal format. String data object String is displayed Object reference Information about the object is displayed (for example, object type and object name), but the object is not evaluated. The Debug object is a write-only object; attempting to read from the debug object is not supported. ArgX   Argument Data Objects ArgTerm := Arg0 | Arg1 | Arg2 | Arg3 | Arg4 | Arg5 | Arg6 Up to 7 argument object references can be passed to a control method. On entry to a control method, only the argument objects that are passed are usable. LocalX - Local Data Objects LocalTerm := Local0 | Local1 | Local2 | Local3 | Local4 | Local5 | Local6 | Local7 Up to 8 local objects can be referenced in a control method. On entry to a control method these objects are uninitialized and cannot be used until some value or reference is stored into the object. Once initialized, these objects are preserved in the scope of execution for that control method. ACPI Machine Language (AML) Specification  XE "ACPI Machine Language (AML):specification"   XE "AML:specification"  This section formally defines the ACPI Control Method Machine Language (AML) language. AML is the ACPI Control Method virtual machine language, machine code for a virtual machine which is supported by an ACPI-compatible OS. ACPI control methods can be written in AML, but humans ordinarily write control methods in ASL. AML is the language processed by the ACPI method interpreter. It is primarily a declarative language. It s best not to think of it as a stream of code, but rather as a set of declarations that the ACPI interpreter will compile into the ACPI name space at definition block load time. For example, notice that DefByte allocates an anonymous integer variable with a byte size initial value in ACPI space, and passes in an initial value. The byte in the AML stream that defines the initial value is not the address of the variable s storage location. An OEM or BIOS vendor needs to write ASL and be able to single step AML for debugging.  (Debuggers and other ACPI control method language tools are expected to be AML level tools, not source level tools.)  An ASL translator implementer must understand how to read ASL and generate AML.  An AML interpreter author must understand how to execute AML. AML and ASL  XE "AML and ASL:relation between"   are different languages though they are closely related. All ACPI-compatible OSes must support AML. A given user can define some arbitrary source language (to replace ASL) and write a tool to translate it to AML. However, the ACPI group will support a single translator for a single language, ASL. Notation Conventions  XE "AML:notation conventions"  The notation conventions in the table below help the reader to interpret the AML formal grammar. Table 16-1   AML Grammar Notation Conventions Notation Convention Description Example Refers to a byte value expressed as 2 hexadecimal digits. Number in bold. Denotes the encoding of the AML term. Term => Evaluated Type Shows the resulting type of the evaluation of Term. Single quotes ( Indicate constant characters.  => 0x41 Term := Term Term  The term to the left of := can be expanded into the sequence of terms on the right. aterm := bterm cterm means that aterm can be expanded into the two-term sequence of bterm followed by cterm. Term Term Term  Terms separated from each other by spaces form an ordered list. Angle brackets (< > ) Used to group items. <a b> | <c d> means either  a b or c d.  Bar symbol ( | ) Separates alternatives. aterm := bterm  |  [cterm  dterm]  means the following constructs are possible:    bterm    cterm  dterm aterm := [bterm | cterm] dterm  means the following constructs are possible:    bterm  dterm    cterm  dterm Dash character ( - ) Indicates a range. 1-9 means a single digit in the range 1 to 9 inclusive. Parenthesized term following another term. The parenthesized term is the repeat count of the previous term. aterm(3) means aterm aterm aterm. bterm(N) means N number of bterms. AML Grammar Definition  XE "AML:grammer definition"  This section defines the byte values that make up an AML byte stream. AMLCode := DefBlockHdr TermList DefBlockHdr := TableSig TableLen SpecCompliance CheckSum OemID OemTableID OemRev CreatorID CreatorRev TableSig := DWordConst //As defined in section 5.2.3. TableLen := DwordConst //Length of the table in bytes including the block //header. SpecCompliance := ByteConst //The revision of the structure. CheckSum := ByteConst //Byte checksum of the entire table. OemID := ByteConst(6) //OEM ID of up to 6 characters.  If the OEM ID is //shorter than 6 characters, it can be terminated //with a NULL character. OemTableID := ByteConst(8) //OEM Table ID of up to 8 characters.  If the OEM //Table ID is shorter than 8 characters, it can be //terminated with a NULL character. OemRev := DWordConst //OEM Table Revision. CreatorID := DWordConst //Vendor ID of the ASL assembler.  For example, //the Microsoft provided assembler has a vendor //ID  CreatorRev := DWordConst //Revision of the ASL assembler. The AML encoding can be categorized in the following groups: Name objects encoding Data objects encoding Package length encoding Term objects encoding Miscellaneous objects encoding Name Objects Encoding LeadNameChar NameChar  | LeadNameChar RootChar ParentPrefixChar := 0x41-0x5a := 0x5f := 0x30-0x39 := 0x5c := 0x5e NameSeg := <LeadNameChar NameChar NameChar NameChar> // Note that NameSegs shorter than 4 characters are // filled with trailing  NameString := <RootChar NamePath> | <PrefixPath NamePath> PrefixPath := Nothing | <  PrefixPath> NamePath := NullName | NameSeg | DualNamePath | MultiNamePath NullName := 0x00 DualNamePath := DualNamePrefix NameSeg NameSeg DualNamePrefix := 0x2e MultiNamePath := MultiNamePrefix SegCount NameSeg(SegCount) MultiNamePrefix := 0x2f SegCount := ByteData // SegCount can be from 1 to 255. // MultiNamePrefix(35) => 0x2f 0x23 // and following by 35 NameSegs. // So, the total encoding length // will be 1 + 1 + 35*4 = 142. // Note that: //   DualNamePrefix NameSeg NameSeg // has a smaller encoding than the // equivalent encoding of:   MultiNamePrefix(2) NameSeg NameSeg SuperName := NameString | ArgObj | LocalObj | DebugObj | DefIndex Data Objects Encoding DataObject := LiteralData | DefBuffer | DefPackage DataObjectList := Nothing | <DataObject DataObjectList> LiteralData := ByteConst | WordConst | DWordConst | String | ConstObj | RevisionOp ComputationalData := LiteralData | DefBuffer ByteConst := BytePrefix ByteData BytePrefix := 0x0a WordConst := WordPrefix WordData WordPrefix := 0x0b DWordConst := DWordPrefix DWordData DWordPrefix := 0x0c String := StringPrefix AsciiCharList NullChar StringPrefix := 0x0d ConstObj := ZeroOp | OneOp | OnesOp ByteList := Nothing | <ByteData ByteList> ByteData := 0x00-0xff WordData := ByteData ByteData // 0x0000-0xffff DWordData := ByteData ByteData ByteData ByteData // 0x00000000-0xffffffff AsciiCharList := Nothing | <AsciiChar AsciiCharList> AsciiChar := 0x01-0x7f NullChar := 0x00 ZeroOp := 0x00 OneOp := 0x01 OnesOp := 0xff RevisionOp := ExtOpPrefix 0x30 ExtOpPrefix := 0x5b Package Length Encoding PkgLength := PkgLeadByte | <PkgLeadByte ByteData> | <PkgLeadByte ByteData ByteData> | <PkgLeadByte ByteData ByteData ByteData> PkgLeadByte := <bit 7-6: follow ByteData count> <bit 5-4: reserved> <bit 3-0: least significant package length byte> // Note: The high 2 bits of the first byte reveal how many follow bytes are in the PkgLength.  If the PkgLength has only one byte, bit 0 through 5 are used to encode the package length (i.e. values 0-63).  If the package length value is more than 63, more than one byte must be used for the encoding in which case bit 5 and 4 of the PkgLeadByte are reserved and must be zero.  If multiple bytes encoding is used, bits 3-0 of the PkgLeadByte become the least significant 4 bits of the resulting package length value.  The next ByteData will become the next least significant 8 bits of the resulting value and so on. Term Objects Encoding TermObj := NameSpaceModifierObj | NamedObj | Type1Opcode | Type2Opcode | UserTermObj TermList := Nothing | <TermObj TermList> TermArg := Type2Opcode | DataObject | UserTermObj | ArgObj | LocalObj UserTermObj := NameString TermArgList TermArgList := Nothing | <TermArg TermArgList> ObjectList := Nothing | <Object ObjectList> Object := NameSpaceModifierObj | NamedObj Name Space Modifier Objects Encoding NameSpaceModifierObj := DefAlias | DefName | DefScope DefAlias := AliasOp NameString NameString AliasOp := 0x06 DefName := NameOp NameString DataObject NameOp := 0x08 DefScope := ScopeOp PkgLength NameString TermList ScopeOp := 0x10 Named Objects Encoding NamedObj := DefBankField | DefCreateBitField | DefCreateByteField | DefCreateDWordField | DefCreateField | DefCreateWordField | DefDevice | DefEvent | DefField | DefIndexField | DefMethod | DefMutex | DefOpRegion | DefPowerRes | DefProcessor | DefThermalZone DefBankField := BankFieldOp PkgLength NameString NameString BankValue FieldFlags FieldList BankFieldOp := ExtOpPrefix 0x87 BankValue := TermArg=>Integer FieldFlags := ByteData // bit 0-3: AccessType //    0: AnyAcc //    1: ByteAcc //    2: WordAcc //    3: DWordAcc //    4: BlockAcc //    5: SMBSendRecvAcc //    6: SMBQuickAcc // bit 4: LockRule //    0: NoLock //    1: Lock // bit 5-6: UpdateRule //    0: Preserve //    1: WriteAsOnes //    2: WriteAsZeros // bit 7: reserved (must be 0) FieldList := Nothing | <FieldElement FieldList> FieldElement := NamedField | ReservedField | AccessField NamedField := NameSeg PkgLength ReservedField := 0x00 PkgLength AccessField := 0x01 AccessType AccessAttrib AccessType := ByteData // Same as AccessType bits of FieldFlags AccessAttrib := ByteData DefCreateBitField := CreateBitFieldOp SourceBuff BitIndex NameString CreateBitFieldOp := 0x8d SourceBuff := TermArg=>BufferObj BitIndex := TermArg=>Integer DefCreateByteField := CreateByteFieldOp SourceBuff ByteIndex NameString CreateByteFieldOp := 0x8c ByteIndex := TermArg=>Integer DefCreateDWordField := CreateDWordFieldOp SourceBuff ByteIndex NameString CreateDWordFieldOp := 0x8a DefCreateField := CreateFieldOp SourceBuff BitIndex NumBits NameString CreateFieldOp := ExtOpPrefix 0x13 NumBits := TermArg=>Integer DefCreateWordField := CreateWordFieldOp SourceBuff ByteIndex NameString CreateWordFieldOp := 0x8b DefDevice := DeviceOp PkgLength NameString ObjectList DeviceOp := ExtOpPrefix 0x82 DefEvent := EventOp NameString EventOp := ExtOpPrefix 0x02 DefField := FieldOp PkgLength NameString FieldFlags FieldList FieldOp := ExtOpPrefix 0x81 DefIndexField := IndexFieldOp PkgLength NameString NameString FieldFlags FieldList IndexFieldOp := ExtOpPrefix 0x86 DefMethod := MethodOp PkgLength NameString MethodFlags TermList MethodOp := 0x14 MethodFlags := ByteData // bit 0-2: ArgCount (0-7) // bit 3: SerializeFlag //    0: NotSerialized //    1: Serialized // bit 4-7: reserved (must be 0) DefMutex := MutexOp NameString SyncFlags MutexOp := ExtOpPrefix 0x01 SyncFlags := ByteData // bit 0-3: SyncLevel (0x00-0x0f) // bit 4-7: reserved (must be 0) DefOpRegion := OpRegionOp NameString RegionSpace RegionOffset RegionLen OpRegionOp := ExtOpPrefix 0x80 RegionSpace := ByteData // 0x00: SystemMemory // 0x01: SystemIO // 0x02: PCI_Config // 0x03: EmbeddedControl // 0x04: SMBus // 0x80-0xff: user defined RegionOffset := TermArg=>DWordData RegionLen := TermArg=>DWordData DefPowerRes := PowerResOp PkgLength NameString SystemLevel ResourceOrder ObjectList PowerResOp := ExtOpPrefix 0x84 SystemLevel := ByteData ResourceOrder := WordData DefProcessor := ProcessorOp PkgLength NameString ProcID PBlkAddr PBlkLen ObjectList ProcessorOp := ExtOpPrefix 0x83 ProcID := ByteData PBlkAddr := DWordData PBlkLen := ByteData DefThermalZone := ThermalZoneOp PkgLength NameString ObjectList ThermalZoneOp := ExtOpPrefix 0x85 Type 1 Opcodes Encoding Type1Opcode := DefBreak | DefBreakPoint | DefFatal | DefIfElse | DefLoad | DefNoop | DefNotify | DefRelease | DefReset | DefReturn | DefSignal | DefSleep | DefStall | DefUnload | DefWhile DefBreak := BreakOp BreakOp := 0xa5 DefBreakPoint := BreakPointOp BreakPointOp := 0xcc DefElse := Nothing | <ElseOp PkgLength TermList> ElseOp := 0xa1 DefFatal := FatalOp FatalType FatalCode FatalArg FatalOp := ExtOpPrefix 0x32 FatalType := ByteData FatalCode := DWordData FatalArg := TermArg=>Integer DefIfElse := IfOp PkgLength Predicate TermList DefElse := 0xa0 Predicate := TermArg=>Integer DefLoad := LoadOp NameString DDBHandleObject LoadOp := ExtOpPrefix 0x20 DDBHandleObject := SuperName DefNoop := NoopOp NoopOp := 0xa3 DefNotify := NotifyOp NotifyObject NotifyValue NotifyOp := 0x86 NotifyObject := SuperName NotifyValue := TermArg=>Integer DefRelease := ReleaseOp MutexObject ReleaseOp := ExtOpPrefix 0x27 MutexObject := SuperName DefReset := ResetOp EventObject ResetOp := ExtOpPrefix 0x26 EventObject := SuperName DefReturn := ReturnOp ArgObject ReturnOp := 0xa4 ArgObject := TermArg=>DataObject DefSignal := SignalOp EventObject SignalOp := ExtOpPrefix 0x24 DefSleep := SleepOp MSecTime SleepOp := ExtOpPrefix 0x22 MsecTime := TermArg=>Integer DefStall := StallOp USecTime StallOp := ExtOpPrefix 0x21 UsecTime := TermArg=>ByteData DefUnload := UnloadOp DDBHandleObject UnloadOp := ExtOpPrefix 0x2a DefWhile := WhileOp PkgLength Predicate TermList WhileOp := 0xa2 Type 2 Opcodes Encoding Type2Opcode := DefAcquire | DefAdd | DefAnd | DefBuffer | DefConcat | DefCondRefOf | DefDecrement | DefDerefOf | DefDivide | DefFindSetLeftBit | DefFindSetRightBit | DefFromBCD | DefIncrement | DefIndex | DefLAnd | DefLEqual | DefLGreater | DefLGreaterEqual | DefLLess | DefLLessEqual | DefLNot | DefLNotEqual | DefLOr | DefMatch | DefMultiply | DefNAnd | DefNOr | DefNot | DefObjectType | DefOr | DefPackage | DefRefOf | DefShiftLeft | DefShiftRight | DefSizeOf | DefStore | DefSubtract | DefToBCD | DefWait | DefXOr DefAcquire := AcquireOp MutexObject Timeout AcquireOp := ExtOpPrefix 0x23 Timeout := WordData DefAdd := AddOp Operand1 Operand2 Target AddOp := 0x72 Operand1 := TermArg=>Integer Operand2 := TermArg=>Integer Target := SuperName | NullName DefAnd := AndOp Operand1 Operand2 Target AndOp := 0x7b DefBuffer := BufferOp PkgLength BufferSize ByteList BufferOp := 0x11 BufferSize := TermArg=>Integer DefConcat := ConcatOp Data1 Data2 Target ConcatOp := 0x73 Data1 := TermArg=>ComputationalData Data2 := TermArg=>ComputationalData DefCondRefOf := CondRefOfOp SuperName SuperName CondRefOfOp := ExtOpPrefix 0x12 DefDecrement := DecrementOp SuperName DecrementOp := 0x76 DefDerefOf := DerefOfOp ObjReference DerefOfOp := 0x83 ObjReference := TermArg=>ObjectReference //ObjectReference is an object produced by terms //such as Index, RefOf or CondRefOf. DefDivide := DivideOp Dividend Divisor Remainder Quotient DivideOp := 0x78 Dividend := TermArg=>Integer Divisor := TermArg=>Integer Remainder := Target Quotient := Target DefFindSetLeftBit := FindSetLeftBitOp Operand Target FindSetLeftBitOp := 0x81 Operand := TermArg=>Integer DefFindSetRightBit := FindSetRightBitOp Operand Target FindSetRightBitOp := 0x82 DefFromBCD := FromBCDOp BCDValue Target FromBCDOp := ExtOpPrefix 0x28 BCDValue := TermArg=>Integer DefIncrement := IncrementOp SuperName IncrementOp := 0x75 DefIndex := IndexOp BuffPkgObj IndexValue Target IndexOp := 0x88 BuffPkgObj := TermArg=>Buffer or Package object IndexValue := TermArg=>Integer DefLAnd := LAndOp Operand1 Operand2 LAndOp := 0x90 DefLEqual := LEqualOp Operand1 Operand2 LEqualOp := 0x93 DefLGreater := LGreaterOp Operand1 Operand2 LGreaterOp := 0x94 DefLGreaterEqual := LGreaterEqualOp Operand1 Operand2 LGreaterEqualOp := LNotOp LLessOp DefLLess := LLessOp Operand1 Operand2 LLessOp := 0x95 DefLLessEqual := LLessEqualOp Operand1 Operand2 LLessEqualOp := LNotOp LGreaterOp DefLNot := LNotOp Operand LNotOp := 0x92 DefLNotEqual := LNotEqualOp Operand1 Operand2 LNotEqualOp := LNotOp LEqualOp DefLOr := LOrOp Operand1 Operand2 LOrOp := 0x91 DefMatch := MatchOp SearchPkg Opcode1 Operand1 Opcode2 Operand2 StartIndex MatchOp := 0x89 SearchPkg := TermArg=>PackageObject Opcode1 := ByteData // 0: MTR // 1: MEQ // 2: MLE // 3: MLT // 4: MGE // 5: MGT Opcode2 := ByteData (same as Opcode1) StartIndex := TermArg=>Integer DefMultiply := MultiplyOp Operand1 Operand2 Target MultiplyOp := 0x77 DefNAnd := NAndOp Operand1 Operand2 Target NAndOp := 0x7c DefNOr := NOrOp Operand1 Operand2 Target NOrOp := 0x7e DefNot := NotOp Operand Target NotOp := 0x80 DefObjectType := ObjectTypeOp SuperName ObjectTypeOp := 0x8e DefOr := OrOp Operand1 Operand2 Target := 0x7d DefPackage := PackageOp PkgLength NumElements PackageElementList PackageOp := 0x12 NumElements := ByteData PackageElementList := Nothing | <PackageElement PackageElementList> PackageElement := DataObject | NameString DefRefOf := RefOfOp SuperName RefOfOp := 0x71 DefShiftLeft := ShiftLeftOp Operand ShiftCount Target ShiftLeftOp := 0x79 ShiftCount := TermArg=>Integer DefShiftRight := ShiftRightOp Operand ShiftCount Target ShiftRightOp := 0x7a DefSizeOf := SizeOfOp SuperName SizeOfOp := 0x87 DefStore := StoreOp Operand SuperName StoreOp := 0x70 DefSubtract := SubtractOp Operand1 Operand2 Target SubtractOp := 0x74 DefToBCD := ToBCDOp Operand Target ToBCDOp := ExtOpPrefix 0x29 DefWait := WaitOp EventObject Timeout WaitOp := ExtOpPrefix 0x25 DefXOr := XOrOp Operand1 Operand2 Target XOrOp := 0x7f Miscellaneous Objects Encoding Miscellaneous objects include: Arg objects Local objects Debug objects Arg Objects Encoding ArgObj := Arg0Op | Arg1Op | Arg2Op | Arg3Op | Arg4Op | Arg5Op | Arg6Op Arg0Op := 0x68 Arg1Op := 0x69 Arg2Op := 0x6a Arg3Op := 0x6b Arg4Op := 0x6c Arg5Op := 0x6d Arg6Op := 0x6e Local Objects Encoding LocalObj := Local0Op | Local1Op | Local2Op | Local3Op | Local4Op | Local5Op | Local6Op | Local7Op Local0Op := 0x60 Local1Op := 0x61 Local2Op := 0x62 Local3Op := 0x63 Local4Op := 0x64 Local5Op := 0x65 Local6Op := 0x66 Local7Op := 0x67 Debug Objects Encoding DebugObj := DebugOp DebugOp := ExtOpPrefix 0x31 AML Byte Stream Byte Values  XE "AML:byte stream"   XE "AML:byte values"  The following table lists all the byte values that can be found in an AML byte stream and the meaning of each byte value. This table is useful for debugging AML code. Table 16-2  AML Byte Stream Byte Values  Encoding Value Encoding Name Encoding Group Fixed List Arguments Variable List Arguments ZeroOp Data Object OneOp Data Object 0x02-0x05 AliasOp Term Object NameString NameString NameOp Term Object NameString DataObject BytePrefix Data Object ByteData WordPrefix Data Object WordData DwordPrefix Data Object DWordData StringPrefix Data Object AsciiCharList NullChar 0x0E-0x0F ScopeOp Term Object NameString TermList BufferOp Term Object TermArg ByteList PackageOp Term Object ByteData DataObjectList MethodOp Term Object NameString ByteData TermList 0x15-0x2D 0x2E ( DualNamePrefix Name Object NameSeg NameSeg 0x2F ( MultiNamePrefix Name Object ByteData NameSeg(N) 0x30-0x40 0x41-0x5A ( NameChar Name Object 0x5B ( ExtOpPrefix ByteData 0x5B 0x01 MutexOp Term Object NameString ByteData 0x5B 0x02 EventOp Term Object NameString 0x5B 0x12 CondRefOfOp Term Object SuperName SuperName 0x5B 0x13 CreateFieldOp Term Object TermArg TermArg TermArg NameString 0x5B 0x20 LoadOp Term Object NameString SuperName 0x5B 0x21 StallOp Term Object TermArg 0x5B 0x22 SleepOp Term Object TermArg 0x5B 0x23 AcquireOp Term Object SuperName WordData 0x5B 0x24 SignalOp Term Object SuperName 0x5B 0x25 WaitOp Term Object SuperName TermArg 0x5B 0x26 ResetOp Term Object SuperName 0x5B 0x27 ReleaseOp Term Object SuperName 0x5B 0x28 FromBCDOp Term Object TermArg Target 0x5B 0x29 ToBCD Term Object TermArg Target 0x5B 0x2A UnloadOp Term Object SuperName 0x5B 0x30 RevisionOp Data Object 0x5B 0x31 DebugOp Debug Object 0x5B 0x32 FatalOp Term Object ByteData DWordData TermArg 0x5B 0x80 OpRegionOp Term Object NameString ByteData TermArg TermArg 0x5B 0x81 FieldOp Term Object NameString ByteData FieldList 0x5B 0x82 DeviceOp Term Object NameString ObjectList 0x5B 0x83 ProcessorOp Term Object NameString ByteData DWordData ByteData ObjectList 0x5B 0x84 PowerResOp Term Object NameString ByteData WordData ObjectList 0x5B 0x85 ThermalZoneOp Term Object NameString ObjectList 0x5B 0x86 IndexFieldOp Term Object NameString NameString ByteData FieldList 0x5B 0x87 BankFieldOp Term Object NameString NameString TermArg ByteData FieldList 0x5C ( RootChar Name Object 0x5E ( ParentPrefixChar Name Object 0x60 ( Local0Op Local Object 0x61 ( Local1Op Local Object 0x62 ( Local2Op Local Object 0x63 ( Local3Op Local Object 0x64 ( Local4Op Local Object 0x65 ( Local5Op Local Object 0x66 ( Local6Op Local Object 0x67 ( Local7Op Local Object 0x68 ( Arg0Op Arg Object 0x69 ( Arg1Op Arg Object 0x6A ( Arg2Op Arg Object 0x6B ( Arg3Op Arg Object 0x6C ( Arg4Op Arg Object 0x6D ( Arg5Op Arg Object 0x6E ( Arg6Op Arg Object StoreOp Term Object TermArg SuperName RefOfOp Term Object SuperName  AddOp Term Object TermArg TermArg Target ConcatOp Term Object TermArg TermArg Target SubtractOp Term Object TermArg TermArg Target IncrementOp Term Object SuperName DecrementOp Term Object SuperName MultiplyOp Term Object TermArg TermArg Target DivideOp Term Object TermArg TermArg Target Target ShiftLeftOp Term Object TermArg TermArg Target ShiftRightOp Term Object TermArg TermArg Target AndOp Term Object TermArg TermArg Target NAndOp Term Object TermArg TermArg Target Term Object TermArg TermArg Target NOrOp Term Object TermArg TermArg Target XOrOp Term Object TermArg TermArg Target NotOp Term Object TermArg Target FindSetLeftBitOp Term Object TermArg Target FindSetRightBitOp Term Object TermArg Target DerefOfOp Term Object TermArg 0x84-0x85 NotifyOp Term Object SuperName TermArg SizeOfOp Term Object SuperName IndexOp Term Object TermArg TermArg Target MatchOp Term Object TermArg ByteData TermArg ByteData TermArg TermArg CreateDWordFieldOp Term Object TermArg TermArg NameString CreateWordFieldOp Term Object TermArg TermArg NameString CreateByteFieldOp Term Object TermArg TermArg NameString CreateBitFieldOp Term Object TermArg TermArg NameString ObjectTypeOp Term Object SuperName LAndOp Term Object TermArg TermArg LOrOp Term Object TermArg TermArg LNotOp Term Object TermArg 0x92 0x93 LNotEqualOp Term Object TermArg TermArg 0x92 0x94 LLessEqualOp Term Object TermArg TermArg 0x95 0x92 LGreaterEqualOp Term Object TermArg TermArg LEqualOp Term Object TermArg TermArg LGreaterOp Term Object TermArg TermArg LLessOp Term Object TermArg TermArg 0x96-0x9F Term Object TermArg TermList ElseOp Term Object TermList WhileOp Term Object TermArg TermList NoopOp Term Object ReturnOp Term Object TermArg BreakOp Term Object 0xA6-0xCB BreakPointOp Term Object 0xCD-0xFE OnesOp Data Object AML Encoding of Names in the Name Space Assume the following name space exists: Assume further that a definition block is loaded that creates a node \S0.CPU.SET, and loads a block using it as a root. Assume the loaded block contains the following names: ^^PCI0 ^^PCI0.SBS \S2.ISA.COM1 ^^^S3 ^^^S2.MEM ^^^S2.MEM.SET Scope(\S0.CPU.SET.STP1) { ^ABC.DEF This will be encoded in AML as: 'STP1' ParentPrefixChar 'GET_' ParentPrefixChar ParentPrefixChar 'PCI0' ParentPrefixChar ParentPrefixChar DualNamePrefix 'PCI0' 'SBS_' RootChar 'S2__' RootChar MultiNamePrefix 3 'S2__'  'ISA_'  'COM1' ParentPrefixChar ParentPrefixChar ParentPrefixChar 'S3__' ParentPrefixChar ParentPrefixChar ParentPrefixChar DualNamePrefix 'S2__'  'MEM_' ParentPrefixChar ParentPrefixChar ParentPrefixChar MultiNamePrefix 3 'S2__'  'MEM_'  'SET_' After the block is loaded, the name space will look like this (names added to the name space by the loading operation are shown in italics). Intel/Microsoft/Toshiba Intel/Microsoft/Toshiba Intel/Microsoft/Toshiba Intel/Microsoft/Toshiba print \p page " /ndf{1 index where{pop pop pop}{dup xcheck{bind}if def} ifelse}bind def /ed{exch def}bind def /SetPageOffset{neg wp$y add/dTop ed/dLeft ed}ndf /SetPageSize {neg dTop add/dBot ed dLeft add/dRight ed}ndf /DoCropMarks{gsave 0 setgray /dopaint true def 0.25 setlinewidth   dLeft 76 sub dTop moveto 72 0 rlineto dLeft 76 sub dBot moveto 72 0 rlineto   dRight 4 add dTop moveto 72 0 rlineto dRight 4 add dBot moveto 72 0 rlineto   dLeft dTop 76 add moveto 0 -72 rlineto dRight dTop 76 add moveto 0 -72 rlineto   dLeft dBot 4 sub moveto 0 -72 rlineto dRight dBot 4 sub moveto 0 -72 rlineto   stroke grestore}ndf /DoPageBox {gsave 0 setgray /dopaint true def 0.25 setlinewidth   dLeft dTop moveto dRight dTop lineto dRight dBot lineto dLeft dBot lineto   closepath stroke grestore}ndf 40.5 72 SetPageOffset 531 648 SetPageSize DoCropMarks DoPageBox" print \p page " /ndf{1 index where{pop pop pop}{dup xcheck{bind}if def} ifelse}bind def /ed{exch def}bind def /SetPageOffset{neg wp$y add/dTop ed/dLeft ed}ndf /SetPageSize {neg dTop add/dBot ed dLeft add/dRight ed}ndf /DoCropMarks{gsave 0 setgray /dopaint true def 0.25 setlinewidth   dLeft 76 sub dTop moveto 72 0 rlineto dLeft 76 sub dBot moveto 72 0 rlineto   dRight 4 add dTop moveto 72 0 rlineto dRight 4 add dBot moveto 72 0 rlineto   dLeft dTop 76 add moveto 0 -72 rlineto dRight dTop 76 add moveto 0 -72 rlineto   dLeft dBot 4 sub moveto 0 -72 rlineto dRight dBot 4 sub moveto 0 -72 rlineto   stroke grestore}ndf /DoPageBox {gsave 0 setgray /dopaint true def 0.25 setlinewidth   dLeft dTop moveto dRight dTop lineto dRight dBot lineto dLeft dBot lineto   closepath stroke grestore}ndf 40.5 72 SetPageOffset 531 648 SetPageSize DoCropMarks DoPageBox" print \p page " /ndf{1 index where{pop pop pop}{dup xcheck{bind}if def} ifelse}bind def /ed{exch def}bind def /SetPageOffset{neg wp$y add/dTop ed/dLeft ed}ndf /SetPageSize {neg dTop add/dBot ed dLeft add/dRight ed}ndf /DoCropMarks{gsave 0 setgray /dopaint true def 0.25 setlinewidth   dLeft 76 sub dTop moveto 72 0 rlineto dLeft 76 sub dBot moveto 72 0 rlineto   dRight 4 add dTop moveto 72 0 rlineto dRight 4 add dBot moveto 72 0 rlineto   dLeft dTop 76 add moveto 0 -72 rlineto dRight dTop 76 add moveto 0 -72 rlineto   dLeft dBot 4 sub moveto 0 -72 rlineto dRight dBot 4 sub moveto 0 -72 rlineto   stroke grestore}ndf /DoPageBox {gsave 0 setgray /dopaint true def 0.25 setlinewidth   dLeft dTop moveto dRight dTop lineto dRight dBot lineto dLeft dBot lineto   closepath stroke grestore}ndf 40.5 72 SetPageOffset 531 648 SetPageSize DoCropMarks DoPageBox" haZSO }vrkd]VOH qlgb]XSN zupkfa\W ~ytoje`[ ~ytoje`[ ~ytoje`[ ~ytoje`[ ~ytoje`[ ~ytoje`[ ~ytoje`[ ~ytoje`[ zvspkd]VO {mje^WSL ~thc`ROH ~wple^ZSL }vokd]YR {vqlgb]XS tfa^[XURO ~ytoj\W yrng`YU |unjc\UQN }zwrolgb] spda^[ }xjgda\W }xsnida^[ |wtqlgb] |wrmhc^Y zupmje`[ }xsnid_Z ~ytoje`[V ~ytoje`[V snkheb {xurmhc^ {wkfc`[V ~{xupkfXU xtmfb[TP {tpib^WP snkhc^YTO yungc\UQ {tpib^WP }vokd]YR {wpie^WS snkheWRO |ykfc`RM mhdaa\WRa\WRa snk]X }vohd]VOK {vqlgb]XS |uqjc_XQM {tpib^WP ~yvhc`]ZL P-1&P P-1&P
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\base\busdrv\acpi\asl\dochange.txt ===
History of ASL/AML grammar changes in the ACPI Specification

Date        Description of Changes
----        ----------------------
11/23/98    In section 16.2.4.4, change:
                Data1 := ComputationalData
                Data2 := ComputationalData
              to:
                Data1 := TermArg=>ComputationalData
                Data2 := TermArg=>ComputationalData
            Clarification of the note in section 15.2.3.6.2, titled
              "Package - Declare Package Object".
            Added Object type 16 as the DebugObj type in section 15.2.3.4.2.28.
            Added clarification in section 15.2.3.4.2.30, titled
              "RefOf - Reference Of" to state the purpose of RefOf.
            Added clarification in section 15.2.3.3.1.12, titled
              "Mutex - Declare Synchronization Mutex Object" to state the
              default SyncLevel of various mutexes.
            Changed the AML grammar of DefPackage in section 16.2.4.4 to allow
              NameString as an package element.
            Added top level AML grammar definitions.
            Changed the AML grammar of UserTerm so that it returns DataObject
              instead of ComputationalData.
            Added the IfElse Term to the AML grammar that parallels the ASL
              grammar section.
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\base\busdrv\acpi\asl\resnames.txt ===
_AC0
_AC1
_AC2
_AC3
_AC4
_AC5
_AC6
_AC7
_AC8
_AC9
_ADR
_AL0
_AL1
_AL2
_AL3
_AL4
_AL5
_AL6
_AL7
_AL8
_AL9
_ALN
_BAS
_BBN
_BDN
_BIF
_BM_
_BST
_BTP
_CID
_CRS
_CRT
_CST
_DCK
_DDN
_DEC
_DIS
_DMA
_EC_
_EJ0
_EJ1
_EJ2
_EJ3
_EJ4
_EJD
_Exx
_FDE
_FDI
_GLK
_GL_
_GPE
_GRA
_GTF
_GTM
_HE_
_HID
_INI
_INT
_IRC
_LCK
_LEN
_LID
_LL_
_Lxx
_MAF
_MAX
_MEM
_MIF
_MIN
_MSG
_OFF
_ON_
_OS_
_OSI
_PCL
_PCT
_PIC
_PR0
_PR1
_PR2
_PRS
_PRT
_PRW
_PR_
_PS0
_PS1
_PS2
_PS3
_PSC
_PSL
_PSR
_PSS
_PSV
_PSW
_PTC
_PTS
_Qxx
_REG
_REV
_RMV
_RNG
_RQ_
_RW_
_S0_
_S1D
_S1_
_S2D
_S2_
_S3D
_S3_
_S4D
_S4_
_S5_
_SBS
_SB_
_SCP
_SHR
_SIZ
_SI_
_SRS
_SST
_STA
_STM
_SUN
_TC1
_TC2
_TMP
_TRA
_TSP
_TYP
_TZ_
_UID
_WAK
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\base\busdrv\acpi\asl\readme.txt ===
ACPI Source Language Assembler Release History

Version 1.0.12 (c) Copyright 1999, Microsoft Corporation.  All rights reserved.

Version	Description
-------	-----------
0.9.8	Generates spec. v1.0 description header.
	Make semantics and opcode type synchronize to spec. v1.0.
	Added support for 3rd optional argument of "Method" (i.e. SyncType).
	Added support for the SMBus access types.
	Changed "Buffer" argument from "Byte" to "Opcode".
	Added 3rd argument (optional SuperName) to "Index".
	Changed argument type of "SizeOf" from "NameStr" to "SuperName".
	Changed "BankValue" of "BankField" from "DWord" to "Opcode".
	Changed "TimeOut" of "Acquire" from "DWord" to "Word".
	Added optional "SuperName" argument to a lot of Type2Opcodes.
	Changed "Load" syntax according to 1.0 spec.
	Changed "NotificationValue" of "Notify" from "Byte" to "Opcode".
	Changed "SyncObject" of "Reset" from "NameStr" to "SuperName".
	Changed "Sleep" and "Stall" arguments from "Word"/"Byte" to "Opcode".
	Changed "Unload" argument to "NameStr".
	Changed "TimeOut" of "Wait" from "DWord" to "Opcode".
	Fixed the encoding of NameStr if it contains only "\" or "^", in which
	  case, a NULL is appended as boundary mark to separate potential
	  following NameStr.
	Added support for methods invoking other methods with arugments.
	Changed "Buffer" to support reserved size bigger than initializer size.

0.9.9	Fixed "Alias" code generation.

0.9.10	Added spec. 1.0 compliant phrase in banner.

0.9.11	Fixed fault if buffer initializer size exceeds 255.

0.9.12	Changed Creator ID from MS to MSFT.
	Fixed default method mode to NOT_SERIALIZED.
	Optimized FieldList code generation so that an unnamed field with 0
	bits won't be generated.
	Added support to allow Index() to be part of SuperName so that it is
	  now legal to do "Store(Zero, Index(PKG, 2))".
	Added _STM to the reserved name table.
	Don't allow offset() to go backward.
	
0.9.13	Added DerefOf() support.

0.9.14	Added AccessAs() macro.

0.9.15	Added _PRT as valid reserved name.
        Added PNP Macro support except for auto CreateXField generation.
	
0.9.16	Added command line option to allow overriding AML file name.
	Added command line option to allow specifying LST file name.
	Renamed some of the command line options.
	Cleaned up the reserved name table (get rid of the obsolete ones
	  and added the missing ones).
	
0.9.17	Checksum in the EndTag of the PNP macros is now zero.

0.9.18  Added support for QWord Address Space Descriptor in PNP macros.
        Added length field in Word, DWord, QWord Address Space Descriptors.
        Added _INI object in reserved name table.
	
0.9.19	Fixed the IF-ELSE-ELSE problem so that we don't allow this any more.
	Added intensive semantic error checking.
        Added the /n option (NameSpace dump).

0.9.20  Improved the NameSpace Paths dump.
        Added CreateXField support for PNP macro.  So now you can do:
            Name(BUF0, ResourceTemplate() {
                        IRQ(Edge, ActiveHigh, Shared, IRQ0) {
                                3,4,5,7,9,10,11,14,15
                        }
                        IO(Decode16, 0x100, 0x3ff, 3, 8, IO0)
                       }
            )
            CreateWordField(BUF0, IRQ0._INT, INTR)
            CreateWordField(BUF0, IO0._MIN, IOL)

0.9.21  Cleaned up error messages.
        Fixed a fault when generating .LST file.
        Added more semantic error checks.
        Allowed Index() as well as CreateXField to use PNP macro labels.
          For example:
            Index(BUF0, IRQ0._INT, Local0)

0.9.22  Added a new compiler directive "External".  The syntax is:
            External(<ObjName>, <ObjType>)
        This directive is to let the assembler know that the object is declared
          external to this table so that the assembler will not complain about
          the undeclared object.  During compiling, the assembler will create
          the external object at the specified place in the name space (if a
          full path of the object is specified), or the object will be created
          at the current scope of the External statement.  <ObjType> is
          optional.  If not specified, "UnknownObj" type is assumed.  Valid
          values of <ObjType> are:
            UnknownObj
            IntObj
            StrObj
            BuffObj
            PkgObj
            FieldUnitObj
            DeviceObj
            EventObj
            MethodObj
            MutexObj
            OpRegionObj
            PowerResObj
            ThermalZoneObj
            BuffFieldObj
            DDBHandleObj

0.9.23  Added _PIC in reserved object table.
        Added .ASM file generation.
        Improved .LST file generation.
        Renamed some of the command line options to be more like the Microsoft
          C compiler.

0.9.24  Fixed command usage help text.
        .ASM/.LST: Fixed Method invocation.
        .ASM/.LST: Fixed constant terms in Package and Name.
        .ASM/.LST: Fixed keyword arguments.

0.9.25  Optimized EISAID() code generation.

0.9.26  Added a check to make sure Fields and BankFields do not have an offset
          outside of the OperationRegion range.
	Added _DCK in the reserved name table.
	
0.9.27	Added _FDI in the reserved name table.

1.0.0   Renamed to be ver 1.0.0 (the first final release candidate).

1.0.1   Added _DDN, _BDN in the reserved name table.
	Added type checking on SuperName to disallow PNP macro labels.
	
1.0.2	Added '*' for objects in NSD files to indicate object has temporary
	  life (i.e. objects created in methods).
	Added more semantic check code for checking proper child term class.
	
1.0.3	Fixed a bug on checking child term class involving nested "Include".
	Fixed a bug to complain on ASL source file without DefinitionBlock.
        CreateXField are now Object Creators instead of Type1Opcode.
        If, Else and While scopes will now allow Object Creator terms.
	
1.0.4	Added _REG in the reserved name table.

1.0.5   Added check to make sure integer values cannot exceed DWORD maximum.
        Added error message when offset in FieldUnit exceeds 0x1ffffff or
          field length exceeds 0x10000000.

1.0.6   Added code to allow specifying region space in OperationRegion as a
          number so that region space can be extended beyond the standard
          regions.
        Added _BBN in the reserved name table.

1.0.7   Added code to print AML code offset to NameSpace object dump at which
          the NameSpace object was created.
	
1.0.8	Redefined Interrupt Vector Flags of the Extended Interrupt Descriptor
	  resource macro so that low-active-edge and high-active-level are
	  allowed.

1.0.9   Added _SxD in the reserved name table.

1.0.10  Added code to fail forward references of PNP resource objects.
        Added code to check for incorrect number of arguments during method
          invocation.
        Fixed a bug that may result in skipping some object type/existence
          validations.

1.0.11  Added _GLK, _FDE, _S0D and _S5D in the reserved name table.

1.0.12	Added _BCL, _BCM, _DCS, _DDC, _DGS, _DOD, _DOS, _DSS and _ROM in the
	  reserved name table.
	  
1.0.13	Added an optional third argument to External so that it can be used
	  to specify the number of argument to the MethodObj.  If the third
	  argument is missing, it is assumed 0.  Currently, if the object
	  is not MethodObj, this optional argument is ignored.
	  e.g. External(ABCD, MethodObj, 2)

1.0.14 Added _PCT, _PSS, _PTC, _OSI, _CST
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\base\busdrv\acpi\sld\placefil.txt ===
;
; See public\sdk\lib\placefil.txt for info about placefil's in general.
;


APC_UPS.sld                         mantis
HID_UPS_Battery.sld                 mantis
ACPI_Control_Method_Battery.sld     mantis
AC_Adapter.sld                      mantis
APM_Legacy_Battery.sld              mantis
Smart_Battery_Subsystem.sld         mantis
Smart_Battery.sld                   mantis
PowerWare_UPS.sld                   mantis
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\base\busdrv\acpi\tools\acpisim\readme.txt ===
ACPI BIOS Simulator Components

This directory contains the necessary components to build and use the ACPI BIOS Simulator.

\DRIVER - This directory contains the DDK version of the ACPI BIOS Simulator (requires LIB, INC dirs)

\INC - This directory contains the header file necessary to use the ACPI BIOS Simulator driver library

\LIB - This directory contains the code to build the ACPI BIOS Simulator driver library

\SIMULATION - This directory contains the ACPI BIOS Simulations, updated driver, and tools
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\base\busdrv\acpi\tools\pmte\bt_finish.ini ===
[RESTART_TESTS]

[WAIT]
Arg1=7

[PAUSE_TESTS]
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\base\busdrv\acpi\tools\pmte\bt_rs.ini ===
[RESTART_TESTS]

[WAIT]
Arg1=30

[PAUSE_TESTS]

[STOP_RESTART]
Arg1="boot_test.ini"
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\base\busdrv\acpi\tools\pmte\nowait.ini ===
[ENABLE_HIBER]
Arg1=1

//
// Test devices
//

[RESTART_TESTS]

[WAIT]
Arg1=30

[PAUSE_TESTS]

[WAIT]
Arg1=5

//
// Sleep 
//

[SLEEP]
Arg1=1  //Sleep Type 
Arg2=1  // RTC in minutes
Arg3=3  // Flags

//
// Test devices
//

[RESTART_TESTS]

[WAIT]
Arg1=30

[PAUSE_TESTS]
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\base\busdrv\acpi\tools\pmte\po.ini ===
\registry\machine\system\currentcontrolset\Control\Session Manager
    PowerPolicySimulate = REG_DWORD 0x1000
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\base\busdrv\acpi\tools\pmte\pmte1.ini ===
[PMTE]

//
// If the client dosn't conect in the below specified time
// the clinet process will be terminated. This number is in seconds.
// A 0 indecates we will wait for ever
//
MaxClientConectTimeLatency=40

// Maximume time a test must complet the state change and
// acknolege it. If not done with in that time it is a failure.
// This number is in seconds. A 0 indecates we will wait for ever 
// for the cliant to ack.

MaxClientStateChangeAckLatency=60

DenyQuertSuspend = 0
UiIfAllowed = 0
PowerActionFlags=3
WakeUpLatencyInSeconds=60
DeviceTypesNotToTestString="VIDEO"


[PMTE_TEST_SCIPTS]
s1="Stress_Without_Critical.ini"
s2="Stress_With_Critical.ini"
s3="Boot_Test.ini"
s4="Manual.ini"
s5="Stress_With_Diff_RTC_Values.ini"
s6="test_pmte.ini"


[DEVICE_DEFAULT]
TestName=DEFAULT
Type="unknown"

[DISK_DEFAULT]
//
// TestName        
TestName=DISK
Type="DISK"

[CDROM_DEFAULT]
TestName=CD_ROM
Type="CD_ROM"

[FLOPPY_DEFAULT]
TestName=FLOPPY
Type="FLOPPY"

[COMPORT_DEFAULT]
TestName=com
Type="COMPORT"

[LPT_DEFAULT]
TestName=LPT
Type="Parallel"

[VIDEO_DEFAULT]
TestName=powerman
Type="VIDEO"

[SOUND_DEFAULT]
TestName=sound
Type="SOUND"

[NET_DEFAULT]
TestName=NET
Type="NET"

[IRDA_DEFAULT]
TestName=IRDA
Type="IRDA"

[DEVNODES_DEFAULT]
TestName=DEVNODES
Type="DEVNODES"

[DEFAULT_TEST_INFO]
// Maximume number of instances I can run this 
// test at the same time. 0 Indecates unlimeted.
// This affects all tests in this section. If a specific test
// has a different Instance count repeat this 
// in the test specific section
MaxInstances=0
TestDisplayName="UNKNOWN"
ErrorDllName="gendev.dll"
DeviceNameFilterType="NON"
ValidateTestDeviceMethodType="ValidateDefaultMethod"
BinaryName="NON"
Param1="NON" 

[SDSTRESS_TEST_INFO]
// TestFormatString : sprintf() format string to create the CreateProcess string
//                    first %s is the exe name. Second %s is the device name .
//                    third %s is the log file name.
TestFormatString="%s /S:%s /Log:%s.log /pmte /p:100000 /r"
TestDisplayName="Disk Stress"	
DeviceNameFilterType="FIRST_CHAR_OF_DEVICE_NAME"
ValidateTestDeviceMethodType="ValidateDiskMethod"
BinaryName=sdstress

[POWERMAN_TEST_INFO]
TestFormatString="%s %s.log"	
TestDisplayName="Video" 
BinaryName=powerman

[SOUND_TEST_INFO]
TestFormatString="%s /D: %s /LOG: %s /TF: %lu"
TestDisplayName="Sound (Did you hear sound?)" 
ErrorDllName="gendev.dll"
BinaryName=pmtedt

[NET_TEST_INFO]
TestFormatString="%s /D: %s /LOG: %s /fl /TF: %lu"
Arg="\\hctpro\pmte"
TestDisplayName="Net Read Write I/O"
ValidateTestDeviceMethodType="ValidateDiskMethod"
DeviceNameFilterType="NetArgPlusUniqueName"
BinaryName=pmtedt

[COM_TEST_INFO]
TestFormatString="%s /D: %s /LOG: %s /fl /TF: %lu"	
TestDisplayName="Parallel port Ioctl"
ValidateTestDeviceMethodType="ValidateDiskMethod"
BinaryName=pmtedt

[LPT_TEST_INFO]
TestFormatString="%s /D: %s /LOG: %s /fl /TF: %lu"	
TestDisplayName="COMX Read Write I/O"
ValidateTestDeviceMethodType="ValidateDiskMethod"
BinaryName=pmtedt

[DISK_TEST_INFO]
TestFormatString="%s /D: %s /TS: 20  /LOG: %s /fl /TF: %lu"		
TestDisplayName="Disk Read Write I/O"
DeviceNameFilterType="AppendUniqueName"
ValidateTestDeviceMethodType="ValidateDiskMethod"
BinaryName=pmtedt

[FLOPPY_TEST_INFO]
TestFormatString="%s /D: %s /TS: 3  /LOG: %s /fl /TF: %lu"			
TestDisplayName="Floppy Read Write I/O"
DeviceNameFilterType="AppendUniqueName"
ValidateTestDeviceMethodType="ValidateDiskMethod"
BinaryName=pmtedt

[CD_ROM_TEST_INFO]
TestFormatString="%s /D: %s /TS: 20  /LOG: %s /fl /TF: %lu"	
TestDisplayName="CD-ROM Read test"
DeviceNameFilterType="NON"
ValidateTestDeviceMethodType="ValidateDiskMethod"
BinaryName=pmtedt

[IRDA_TEST_INFO]
TestFormatString="%s /D: %s /LOG: %s /fl /TF: %lu"	
TestDisplayName="Irda test"
ValidateTestDeviceMethodType="ValidateDiskMethod"
BinaryName=pmtedt

[DEVNODES_TEST_INFO]
TestFormatString="%s /D: %s /LOG: %s"
TestDisplayName="Seach for devnodes with problems"
ErrorDllName="pmcs.dll"
BinaryName=popnp

[DUMY_TEST_INFO]
TestFormatString="%s %s"
TestDisplayName="Dumy testtest"
BinaryName=rs
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\base\busdrv\acpi\tools\pmte\pmte2.ini ===
[PMTE]

//
// If the client dosn't conect in the below specified time
// the clinet process will be terminated. This number is in seconds.
// A 0 indecates we will wait for ever
//
MaxClientConectTimeLatency=40

// Maximume time a test must complet the state change and
// acknolege it. If not done with in that time it is a failure.
// This number is in seconds. A 0 indecates we will wait for ever 
// for the cliant to ack.

MaxClientStateChangeAckLatency=180

DenyQuertSuspend = 0
UiIfAllowed = 0
PowerActionFlags=3
WakeUpLatencyInSeconds=120
DeviceTypesNotToTestString="VIDEO"


[PMTE_TEST_SCIPTS]
s1="Stress_Without_Critical.ini"
s2="Stress_With_Critical.ini"
s3="Boot_Test.ini"
s4="Manual.ini"
s5="Stress_With_Diff_RTC_Values.ini"
s6="test_pmte.ini"
s7="hct.ini"



[DEVICE_DEFAULT]
TestName=DEFAULT
Type="unknown"

[DISK_DEFAULT]
//
// TestName        
TestName=DISK
Type="DISK"

[CDROM_DEFAULT]
TestName=CD_ROM
Type="CD_ROM"

[FLOPPY_DEFAULT]
TestName=FLOPPY
Type="FLOPPY"

[COMPORT_DEFAULT]
TestName=com
Type="COMPORT"

[LPT_DEFAULT]
TestName=LPT
Type="Parallel"

[VIDEO_DEFAULT]
TestName=powerman
Type="VIDEO"

[SOUND_DEFAULT]
TestName=sound
Type="SOUND"

[NET_DEFAULT]
TestName=NET
Type="NET"

[NETIO_DEFAULT]
TestName=NET_IO
Type="NET"

[IRDA_DEFAULT]
TestName=IRDA
Type="IRDA"

[DEVNODES_DEFAULT]
TestName=DEVNODES
Type="DEVNODES"

[DEFAULT_TEST_INFO]
// Maximume number of instances I can run this 
// test at the same time. 0 Indecates unlimeted.
// This affects all tests in this section. If a specific test
// has a different Instance count repeat this 
// in the test specific section
MaxInstances=0
TestDisplayName="UNKNOWN"
ErrorDllName="gendev.dll"
DeviceNameFilterType="NON"
ValidateTestDeviceMethodType="ValidateDefaultMethod"
BinaryName="NON"
Param1="NON" 

[SDSTRESS_TEST_INFO]
// TestFormatString : sprintf() format string to create the CreateProcess string
//                    first %s is the exe name. Second %s is the device name .
//                    third %s is the log file name.
TestFormatString="%s /S:%s /Log:%s.log /pmte /p:100000 /r"
TestDisplayName="Disk Stress"	
DeviceNameFilterType="FIRST_CHAR_OF_DEVICE_NAME"
ValidateTestDeviceMethodType="ValidateDiskMethod"
BinaryName=sdstress

[POWERMAN_TEST_INFO]
TestFormatString="%s %s.log"	
TestDisplayName="Video" 
BinaryName=powerman

[SOUND_TEST_INFO]
TestFormatString="%s /D: %s /LOG: %s /TF: %lu /CHOP"
TestDisplayName="Sound (Did you hear sound?)" 
ErrorDllName="gendev.dll"
BinaryName=pmtedt


[NET_TEST_INFO]
TestFormatString="%s /D: %s /LOG: %s /TF: %lu"
TestDisplayName="Net enum and ping test"
ValidateTestDeviceMethodType="ValidateDiskMethod"
BinaryName=pmtedt

[NET_IO_TEST_INFO]
TestFormatString="%s /D: %s /LOG: %s /fl /TF: %lu"
Arg="\\hctpro\pmte"
TestDisplayName="Net Read Write I/O"
ValidateTestDeviceMethodType="ValidateDiskMethod"
DeviceNameFilterType="NetArgPlusUniqueName"
BinaryName=pmtedt

[COM_TEST_INFO]
TestFormatString="%s /D: %s /LOG: %s /TF: %lu /CHOP"	
TestDisplayName="COMX Read Write I/O"
ValidateTestDeviceMethodType="ValidateDiskMethod"
BinaryName=pmtedt

[LPT_TEST_INFO]
TestFormatString="%s /D: %s /LOG: %s /fl /TF: %lu /CHOP"	
TestDisplayName="Parallel port Ioctl"
ValidateTestDeviceMethodType="ValidateDiskMethod"
BinaryName=pmtedt

[DISK_TEST_INFO]
TestFormatString="%s /D: %s /TS: 20  /LOG: %s /fl /TF: %lu /CHOP"		
TestDisplayName="Disk Read Write I/O"
DeviceNameFilterType="AppendUniqueName"
ValidateTestDeviceMethodType="ValidateDiskMethod"
BinaryName=pmtedt

[FLOPPY_TEST_INFO]
TestFormatString="%s /D: %s /TS: 3  /LOG: %s /fl /TF: %lu /CHOP"			
TestDisplayName="Floppy Read Write I/O"
DeviceNameFilterType="AppendUniqueName"
ValidateTestDeviceMethodType="ValidateDiskMethod"
BinaryName=pmtedt

[CD_ROM_TEST_INFO]
TestFormatString="%s /D: %s /TS: 20  /LOG: %s /fl /TF: %lu /CHOP"	
TestDisplayName="CD-ROM Read test"
DeviceNameFilterType="NON"
ValidateTestDeviceMethodType="ValidateDiskMethod"
BinaryName=pmtedt

[IRDA_TEST_INFO]
TestFormatString="%s /D: %s /LOG: %s /fl /TF: %lu /CHOP"	
TestDisplayName="Irda test"
ValidateTestDeviceMethodType="ValidateDiskMethod"
BinaryName=pmtedt

[DEVNODES_TEST_INFO]
TestFormatString="%s /D: %s /LOG: %s"
TestDisplayName="Seach for devnodes with problems"
ErrorDllName="pmcs.dll"
BinaryName=popnp

[DUMY_TEST_INFO]
TestFormatString="%s %s"
TestDisplayName="Dumy testtest"
BinaryName=rs
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\base\busdrv\acpi\tools\pmte\pmte.ini ===
[PMTE]

//
// If the client dosn't conect in the below specified time
// the clinet process will be terminated. This number is in seconds.
// A 0 indecates we will wait for ever
//
MaxClientConectTimeLatency=40

// Maximume time a test must complet the state change and
// acknolege it. If not done with in that time it is a failure.
// This number is in seconds. A 0 indecates we will wait for ever 
// for the cliant to ack.

MaxClientStateChangeAckLatency=480

DenyQuertSuspend = 0
UiIfAllowed = 0
PowerActionFlags=3
WakeUpLatencyInSeconds=420
DeviceTypesNotToTestString="MEMLEAK"
PooltagErrorPercentage=1000

[DEVICE_DEFAULT]
TestName=DEFAULT
Type="unknown"

[DISK_DEFAULT]
//
// TestName        
TestName=DISK
Type="DISK"

[CDROM_DEFAULT]
TestName=CD_ROM
Type="CD_ROM"

[FLOPPY_DEFAULT]
TestName=FLOPPY
Type="FLOPPY"

[COMPORT_DEFAULT]
TestName=com
Type="COMPORT"

[LPT_DEFAULT]
TestName=LPT
Type="Parallel"

[VIDEO_DEFAULT]
TestName=video
Type="VIDEO"

[SOUND_DEFAULT]
TestName=sound
Type="SOUND"

[NET_DEFAULT]
TestName=NET
Type="NET"

[NETIO_DEFAULT]
TestName=NET_IO
Type="NET"

[IRDA_DEFAULT]
TestName=IRDA
Type="IRDA"

[MEMLEAK_DEFAULT]
TestName=MEMLEAK
Type="MEMLEAK"

[PROCESSOR_DEFAULT]
TestName=processor
Type="PROCESSOR"

[DEVNODES_DEFAULT]
TestName=DEVNODES
Type="DEVNODES"

[DEFAULT_TEST_INFO]
// Maximume number of instances I can run this 
// test at the same time. 0 Indecates unlimeted.
// This affects all tests in this section. If a specific test
// has a different Instance count repeat this 
// in the test specific section
MaxInstances=0
TestDisplayName="UNKNOWN"
ErrorDllName="gendev.dll"
DeviceNameFilterType="NON"
ValidateTestDeviceMethodType="ValidateDefaultMethod"
BinaryName="NON"
Param1="NON" 

//#define TI_FLAGS_TEST_SUPPORT_CHOP_PARAMETER  ((DWORD)0x1)
//#define TI_FLAGS_TEST_SUPPORT_FL_PARAMETER    ((DWORD)0x2)
//#define TI_FLAGS_TEST_SUPPORT_IO_ON_SUSPEND   ((DWORD)0x4)
//#define TI_FLAGS_TEST_NEEDS_CHOP_ON_SUSPEND   ((DWORD)0x8)

TestCapabilitieFlags=0

[SDSTRESS_TEST_INFO]
// TestFormatString : sprintf() format string to create the CreateProcess string
//                    first %s is the exe name. Second %s is the device name .
//                    third %s is the log file name.
TestFormatString="%s /S:%s /Log:%s.log /pmte /p:100000 /r"
TestDisplayName="Disk Stress"	
DeviceNameFilterType="FIRST_CHAR_OF_DEVICE_NAME"
ValidateTestDeviceMethodType="ValidateDiskMethod"
BinaryName=sdstress

[VIDEO_TEST_INFO]
TestFormatString="%s /D: %s /LOG: %s"
TestDisplayName="Video" 
BinaryName=pmtedt
TestCapabilitieFlags=1

[PROCESSOR_TEST_INFO]
TestFormatString="%s /D: %s /LOG: %s"
TestDisplayName="Processor" 
BinaryName=pmtedt
TestCapabilitieFlags=1

[SOUND_TEST_INFO]
TestFormatString="%s /D: %s /LOG: %s /TF: %lu"
TestDisplayName="Sound (Did you hear sound?)" 
ErrorDllName="gendev.dll"
BinaryName=pmtedt
TestCapabilitieFlags=4


[NET_TEST_INFO]
TestFormatString="%s /D: %s /LOG: %s /TF: %lu"
TestDisplayName="Net enum and ping test"
ValidateTestDeviceMethodType="ValidateDiskMethod"
BinaryName=pmtedt
TestCapabilitieFlags=1

[NET_IO_TEST_INFO]
TestFormatString="%s /D: %s /LOG: %s /fl /TF: %lu"
Arg="\\hctpro\pmte"
TestDisplayName="Net Read Write I/O"
ValidateTestDeviceMethodType="ValidateDiskMethod"
DeviceNameFilterType="NetArgPlusUniqueName"
BinaryName=pmtedt
TestCapabilitieFlags=10

[COM_TEST_INFO]
TestFormatString="%s /D: %s /LOG: %s /TF: %lu"	
TestDisplayName="COMX Read Write I/O"
ValidateTestDeviceMethodType="ValidateDiskMethod"
BinaryName=pmtedt
TestCapabilitieFlags=10

[LPT_TEST_INFO]
TestFormatString="%s /D: %s /LOG: %s /TF: %lu"	
TestDisplayName="Parallel port Ioctl"
ValidateTestDeviceMethodType="ValidateDiskMethod"
BinaryName=pmtedt
TestCapabilitieFlags=1

[DISK_TEST_INFO]
TestFormatString="%s /D: %s /TS: 20  /LOG: %s /TF: %lu"		
TestDisplayName="Disk Read Write I/O"
DeviceNameFilterType="AppendUniqueName"
ValidateTestDeviceMethodType="ValidateDiskMethod"
BinaryName=pmtedt
TestCapabilitieFlags=7


[FLOPPY_TEST_INFO]
TestFormatString="%s /D: %s /TS: 3  /LOG: %s /TF: %lu"			
TestDisplayName="Floppy Read Write I/O"
DeviceNameFilterType="AppendUniqueName"
ValidateTestDeviceMethodType="ValidateDiskMethod"
BinaryName=pmtedt
TestCapabilitieFlags=10


[CD_ROM_TEST_INFO]
TestFormatString="%s /D: %s /TS: 14  /LOG: %s /fl /TF: %lu"	
TestDisplayName="CD-ROM Read test"
DeviceNameFilterType="NON"
ValidateTestDeviceMethodType="ValidateDiskMethod"
BinaryName=pmtedt
TestCapabilitieFlags=11

[IRDA_TEST_INFO]
TestFormatString="%s /D: %s /LOG: %s /fl /TF: %lu"	
TestDisplayName="Irda test"
ValidateTestDeviceMethodType="ValidateDiskMethod"
BinaryName=pmtedt
TestCapabilitieFlags=0

[DEVNODES_TEST_INFO]
TestFormatString="%s /D: %s /LOG: %s /MD"
TestDisplayName="Seach for devnodes with problems"
ErrorDllName="pmcs.dll"
BinaryName=popnp
TestCapabilitieFlags=0

[MEMLEAK_TEST_INFO]
TestFormatString="%s /D: %s /LOG: %s"
TestDisplayName="Memory leak detection"
BinaryName=pmtedt
TestCapabilitieFlags=0

[DUMY_TEST_INFO]
TestFormatString="%s %s"
TestDisplayName="Dumy testtest"
BinaryName=rs
TestCapabilitieFlags=0
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\base\busdrv\acpi\tools\spsim\spsim.doc ===
Microsoft Word Document MSWordDoc Word.Document.8Personal TitleAdam Glass Normal Adam Glass Microsoft Word 9.0.F<gTVbjbjU Service Processor Simulator  TIME \@ "M/d/yyyy"  7/18/2000 Purpose The purpose of this document is to describe the function and operation of the Service Processor Simulator (hereafter referred to as SPSIM).  This software simulates a service processor like you might find in a machine supporting dynamic partitioning.  This service processor controls the insertion and ejection of registered devices from the machine.  In this context, a registered device is one that has been hooked into the SPSIM infrastructure. SPSIM simulates the insertion/ejection of hardware by a service processor through these three components: A kernel mode driver that provides an operation region space that registered devices use to answer the _STA method.  The registered device objects also update this  STA space  when the device is ejected. A user-mode application that allows the user to control the _STA behavior of registered devices and notify those devices as well.  The application also provides higher-level insert and eject commands. Sample ASL code that can be compiled into existing ACPI bioses or added dynamicly via ACPILOAD or loaded by the ACPI via the Load command. This code needs to be modified to fit the application and is described in the   REF _Ref488515169 \h  Registering an ACPI device object with SPSIM  section. SPSIM also serves as a demo of writing an operation region space driver. Kernel Mode Driver (SPSIM.SYS) SPSIM.SYS is a function driver that will be loaded in on ACPI enumerated device objects that specify their _HID value as  SPSIMUL .  The driver registers an operation region space that can be modified by the SPCTL application through a device interface and associated IOCTLs that the driver supports. The ioctls supported by SPSIM.SYS are declared in the SPSIMIOCT.H file.  These IOCTLs are: Ioctl Function IOCTL_SPSIM_GET_MANAGED_DEVICES Enumerate the devices managed (registered with) SPSIM. IOCTL_SPSIM_ACCESS_STA Read/Write the STA value associated with a device. IOCTL_SPSIM_NOTIFY_DEVICE     Send an ACPI notify code to the device IOCTL_SPSIM_GET_DEVICE_NAME Get a text name for the device SPSIM assumes the presence of the ASL infrastructure described later in this document.  The ASL defines which devices SPSIM controls, how to notify those devices, and how to describe them in the user-mode application.  The kernel mode driver provides the path through which the user-mode application can enumerate the  registered  devices, modify their _STA values and generate ACPI notifications. Note: The driver implements an additional operation region space for simulating PNP memory modules.  This code is not essential to SPSIM but is provided as an additional working example of software-implemented operation region spaces. SPCTL This is a user-mode command-line application that uses IOCTLs to control the operation of the simulated service processor (SPSIM.SYS). When invoked with no command-line arguments, SPCTL dumps the list of devices controlled by the simulated service processor and the current values being provided by the driver via the operation region space for their _STA methods. Dev 0 : _STA is 0x0 Name \_SB_.PMM0 Dev 1 : _STA is 0xf Name \_SB_.PMM1 Dev 2 : _STA is 0x0 Name \_SB_.PMM2 Dev 3 : _STA is 0xf Name \_SB_.PMM3 Dev 4 : _STA is 0xf Name \_SB_.PMM4 Dev 5 : _STA is 0x0 Name \_SB_.PMM5 Dev 6 : _STA is 0x0 Name \_SB_.PMM6 Dev 7 : _STA is 0x0 Name \_SB_.PMM7 The first column lists the  devnum  associated with each device.  This is useful in addressing that device to other SPCTL commands.  The hex number in the middle is the value currently being provided in the operation region space for that device s _STA value.  The idea is that the ACPI device object for the registered device is modified to reference the operation region to retrieve the value it returns for it s _STA method.  However, there is no requirement that the ACPI device object return this value directly i.e it may make it device presence  dependent on other factors as well, etc. The support SPCTL commands are: notify devnum code setsta devnum value insert [devnum | * ] eject [devnum | * ] <no arguments> prints device status above. Where   is a ACPI notification code and  value  is a valid result for the _STA method.  Using these primitives you can simulate successful insertion/ejection as well as surprise removal and other variations. Any other input will result in output describing the command line usage of SPCTL. ASL Infrastructure SPSIM includes sample ASL code that shows SPSIM in use.  The following is a walkthrough of that ASL code indicating the function of each piece. SPSIMUL device object This first ASL code fragment declares a device object of HID SPSIMUL which will result in ACPI enumerating an ACPI\SPSIMUL device on which SPSIM.SYS will be loaded (if you point the Add New Hardware wizard at the appropriate INF).         Device(XXSP) {             Name(_HID, "SPSIMUL")             Method(_STA) {                 return (0xF)             } This next fragment declares the operation region that is used to communicate _STA information between user-mode, the driver, and the registered device objects.  For each device object registered with SPSIM, there should be 8 bit area declared in the operation region.  This is the area in which the device object will store and retrieve _STA information provided/maintained by SPSIM.             OperationRegion(DSTA, 0x99, 0, 0x10)             Field(DSTA, ByteAcc, NoLock, Preserve) {                 SMM0, 8,                 SMM1, 8,                 SMM2, 8,                 SMM3, 8,                 SMM4, 8,                 SMM5, 8,                 SMM6, 8,                 SMM7, 8             } This next fragment declares a variable to be referenced to see if the SPSIM operation space is online.  Registered objects should check this value before reading/writing the STA operation region.  The _REG method will update this value when SPSIM is started or removed.             Name(AVAL, 0)             Method(_REG, 2) {                 Store(Arg1, AVAL)             } This fragment defines the SNAM package which contains a list of strings naming each device.  These names are associated on a 1:1 basis with the STA values found in the operation region field and are used only in the user-mode user-interface.             Name(SNAM,                 Package() {                     \_SB.PMM0,                     \_SB.PMM1,                     \_SB.PMM2,                     \_SB.PMM3,                     \_SB.PMM4,                     \_SB.PMM5,                     \_SB.PMM6,                     \_SB.PMM7                 }             ) This fragment defines NOFD method that contains a notify for each device listed in SNAM and the operation region field.  This method is used to pass on notify requests from user-mode.  The first argument is the devnum and the second argument is the notify value to be applied.             Method(NOFD, 2) {                 if (LEqual(Arg0, 0)) {                     Notify(\_SB.PMM0, Arg1)                 }                 if (LEqual(Arg0, 1)) {                     Notify(\_SB.PMM1, Arg1)                 }                 if (LEqual(Arg0, 2)) {                     Notify(\_SB.PMM2, Arg1)                 }                 if (LEqual(Arg0, 3)) {                     Notify(\_SB.PMM3, Arg1)                 }                 if (LEqual(Arg0, 4)) {                     Notify(\_SB.PMM4, Arg1)                 }                 if (LEqual(Arg0, 5)) {                     Notify(\_SB.PMM5, Arg1)                 }                 if (LEqual(Arg0, 6)) {                     Notify(\_SB.PMM6, Arg1)                 }                 if (LEqual(Arg0, 7)) {                     Notify(\_SB.PMM7, Arg1)                 }             }        registered  device object This device object is registered with SPSIM via it s presence in the operation region field, SNAM and its use of references to the SPSIM operation region space.         Device(PMM0) { Note that the _STA method has been altered to first check to see if the SPSIM STA operation region space is available before trusting any data retrieved from it.             Method(_STA) {                 If (\_SB.XXSP.AVAL) {                    Store(\_SB.XXSP.SMM0, Local0)                    return (Local0)                 }                 return (0) // not here unless SPSIM is up.             } Similarly an _EJx method has been defined.  This method would do everything to make the device go away and not return until it had.  In this case, it notes in the operation region space that future _STA methods should return 0 i.e device not present.             Method(_EJ0, 1) {                 Store(0, \_SB.XXSP.SMM0)             }         } Registering an ACPI device object with SPSIM To make an ACPI device object controllable from SPSIM, you make the following changes in the supplied ASL sample: Add a field entry to the STA operation region space from which this device object will retrieve it s _STA value. Add a string to the SNAM package at the same index as the field in the _STA operation region space.  This name will appear in the SPCTL UI only. Modify the NOFD method to include a notification statement for the device object.  Arg0 will be the 0th-based index of the device in the SNAM package and Arg1 will contain the notify code.  Ex.:           If (Lequal(Arg0, 3)) {               Notify(\_SB.PMM3, Arg1)           } Modify the ACPI device object s _STA implementation to reference the field entry in the STA operation region space.  It is not required to directly return the value from the operation region, i.e. it might need to be conditional on other parameters, etc.  Don t forget to check the AVAL variable of the SPSIMUL object to make sure the operation region is valid before believing any data from it. Modify the ACPI device object s _EJx or _RMV implementation to make appropriate changes to the device s _STA value via the operation region space as appropriate. Installation The SPSIMUL object needs to be added to your ACPI namespace either by modifying the ACPI bios or by loading additional tables via ACPILOAD.
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\base\busdrv\pccard\placefil.txt ===
pcmcia.sys     retail
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\base\busdrv\pci\pci.ini ===
\registry\machine\system\currentcontrolset\services\pci
    DisplayName = REG_SZ "PCI Bus Extender"
    ErrorControl = REG_DWORD 0x00000001
    Group = REG_SZ "extended base"
    ImagePath = REG_EXPAND_SZ "\SystemRoot\System32\drivers\pci.sys"
    Start = REG_DWORD 0x00000001
    Type = REG_DWORD 0x00000001
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\base\cluster\placefil.txt ===
;
; Microsoft Cluster Server binaries
;

clussvc.exe     retail
resrcmon.exe    retail
clussprt.dll    retail
clusprxy.exe    retail
clusres.dll     retail
clusdisk.sys    retail
cluster.inf     retail
cluscfg.exe     retail
cluscfg.hlp     retail
timeserv.exe    retail
clusnet.sys     retail
wshclus.dll     retail

;
; Cluster Management
;

CluAdmin.exe    retail
CluAdmEx.dll    retail
ClAdmWiz.dll    retail
CluAdMMC.dll    retail
ClusMMC.dll     retail
DebugEx.dll     retail
CluAdmin.cnt    retail
CluAdmin.hlp    retail

;
; Cluster Configuration Server
;
ClCfgSrv.dll    retail
ClCfgSrv.inf    retail

;
; Cluster Service WMI Provider
;
ClusWMI.dll     retail
ClusWMI.mof     retail

;
; Cluster Componentization
;
MSCS_Cluster_Management_Support_{E106EAC5-51A5-4C0A-9B53-ABD61851C5A8}.sld mantis
MSCS_Cluster_Management_Tools_{DC33DD24-C569-4063-A6FC-D53DA76A898A}.sld mantis
MSCS_Clustering_Service_{2043E5C0-9C02-4202-B5DB-FFD33722DC3B}.sld mantis

;
; Microsoft Cluster Server binaries that are distributed on WKS, SRV, and ENT
;

clusapi.dll     retail
resutils.dll    retail
cluster.exe     retail
msclus.dll      retail

; These files are to be distributed on Enterprise only.

clusocm.dll     retail
clusocm.inf     retail

;
; DHCP and WINS DLLs that will eventually be owned by that team.
;
clnetres.dll    retail
clnetrex.dll    retail

; The following files are to be distributed on Enterprise only. It is to be
; installed during an UPGRADE from NT 4.0. It will become obsolete with the
; availability of an IIS Virtual Root resource DLL that works with IIS 5.

iisclus3.dll    retail
iisclex3.dll    retail

; The following files are required for the Compatibility Check performed by
; winnt32.

ClusComp.dll    winnt32\winntupg ; Cluster Compatibility DLL
; moved to \nt\MergedComponents\SetupInfs\compdata ClusComp.htm    winnt32\CompData ; Cluster Compatibility message in HTML format
; moved to \nt\MergedComponents\SetupInfs\compdata ClusComp.txt    winnt32\CompData ; Cluster Compatibility message in text format

; clusoc.inf is a stand in for sysoc.inf when installing private cluster files.
; It is not distributed on any NT product.

clusoc.inf      retail

; clusoc.txt is used by Configure Your Server to install only the Clustering
; Service optional component.

clusoc.txt      retail

xchgclus.dll    cluster\dump

;
; NT Cluster test files
;

setuptst.bat    cluster\support
castest.bat     cluster\support
cluadms.pcd     cluster\support
english.cas     cluster\support
casread.txt     cluster\support
mtrun.exe       cluster\support
mstest40.dll    cluster\support
msvcrt40.dll    cluster\support
ntlog.dll       cluster\support
wpbug.txt       cluster\support
kdcn.dll        cluster\support
kdcd.dll        cluster\support
clusexts.dll    cluster\support
leaks.dll       cluster\support
cluspw.exe      cluster\support
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\base\cluster\coffbase.txt ===
;
; This file defines the base virtual address for Dynamic Link Libraries (DLL)
; that are part of the Windows NT System.  The first token on a line is the name
; of the DLL and the second token is the base virtual address, in hexidecimal.
; The third token is the maximum size of the DLL image file, including symbols.
;
;  NOTE:  Unused areas are marked as _FREE_.

clusres    0x79000000  0x00080000
iisclus3   0x79000000  0x00010000
resutils   0x79000000  0x00020000
wshclus    0x79000000  0x00010000
rpcltccl   0x79000000  0x00010000
rpcltscl   0x79000000  0x00010000
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\base\cluster\admin\cluadmex\readme.txt ===
========================================================================
       MICROSOFT FOUNDATION CLASS LIBRARY : CluAdmEx
========================================================================


AppWizard has created this Microsoft Windows NT Cluster Administrator
Extension DLL for you.  This DLL not only demonstrates the basics of using
the Microsoft Foundation classes but is also a starting point for writing
your DLL.

This file contains a summary of what you will find in each of the files that
make up your Microsoft Windows NT Cluster Administrator Extension DLL.

CluAdmEx.h
    This is the main header file for the DLL.  It declares the
    CCluAdmExApp class.

CluAdmEx.cpp
    This is the main DLL source file.  It contains the class CCluAdmExApp.
    It also contains the OLE entry points required of inproc servers.

CluAdmEx.rc
    This is a listing of all of the Microsoft Windows resources that the
    program uses.  It includes the icons, bitmaps, and cursors that are stored
    in the RES subdirectory.  This file can be directly edited in Microsoft
    Developer Studio.

res\CluAdmEx.rc2
    This file contains resources that are not edited by Microsoft 
    Developer Studio.  You should place all resources not
    editable by the resource editor in this file.

CluAdmEx.def
    This file contains information about the DLL that must be
    provided to run with Microsoft Windows.  It defines parameters
    such as the name and description of the DLL.  It also exports
    functions from the DLL.

CluAdmEx.clw
    This file contains information used by ClassWizard to edit existing
    classes or add new classes.  ClassWizard also uses this file to store
    information needed to create and edit message maps and dialog data
    maps and to create prototype member functions.

Extensn.h
    This is the header file which defines the classes which implement the
    IShellExtInit and IShellPropSheetExt interfaces, which are the interfaces
    used by the Microsoft Windows NT Cluster Administrator program for adding
    property pages.  Modify the CCluAdminExtension::XPropSheetExt::AddPages
    method to add new pages.  It defines the CCluAdminExtension class.

Extensn.cpp
    This is the source file which implements the CCluAdminExtension class.

BasePage.h
    This is the header file which defines a class which provides base
    property page functionality for use by extension property pages.  It
    defines the CBasePropertyPage class.

BasePage.cpp
    This the source file which implements the CBasePropertyPage class.

/////////////////////////////////////////////////////////////////////////////
Other standard files:

StdAfx.h, StdAfx.cpp
    These files are used to build a precompiled header (PCH) file
    named CluAdmEx.pch and a precompiled types file named StdAfx.obj.

Resource.h
    This is the standard header file, which defines new resource IDs.
    Microsoft Developer Studio reads and updates this file.

/////////////////////////////////////////////////////////////////////////////
Property page files:

ResProp.h
    This is the header file which defines a property page titled "Parameters"
    to add to property sheets for resources for which your extension DLL is
    written.  It defines the CResourceParamsPage class.

ResProp.cpp
    This is the source file which implements the CResourceParamsPage class.

/////////////////////////////////////////////////////////////////////////////
Other notes:

AppWizard uses "TODO:" to indicate parts of the source code you
should add to or customize.

/////////////////////////////////////////////////////////////////////////////
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\base\cluster\admin\cluadmin\readme.txt ===
========================================================================
       MICROSOFT FOUNDATION CLASS LIBRARY : CluAdmin
========================================================================


AppWizard has created this CluAdmin application for you.  This application
not only demonstrates the basics of using the Microsoft Foundation classes
but is also a starting point for writing your application.

This file contains a summary of what you will find in each of the files that
make up your CluAdmin application.

CluAdmin.h
    This is the main header file for the application.  It includes other
    project specific headers (including Resource.h) and declares the
    CClusterAdminApp application class.

CluAdmin.cpp
    This is the main application source file that contains the application
    class CClusterAdminApp.

CluAdmin.rc
    This is a listing of all of the Microsoft Windows resources that the
    program uses.  It includes the icons, bitmaps, and cursors that are stored
    in the RES subdirectory.  This file can be directly edited in Microsoft
	Developer Studio.

res\CluAdmin.ico
    This is an icon file, which is used as the application's icon.  This
    icon is included by the main resource file CluAdmin.rc.

res\CluAdmin.rc2
    This file contains resources that are not edited by Microsoft 
	Developer Studio.  You should place all resources not
	editable by the resource editor in this file.

CluAdmin.reg
    This is an example .REG file that shows you the kind of registration
    settings the framework will set for you.  You can use this as a .REG
    file to go along with your application or just delete it and rely
    on the default RegisterShellFileTypes registration.

CluAdmin.odl
    This file contains the Object Description Language source code for the
    type library of your application.

CluAdmin.clw
    This file contains information used by ClassWizard to edit existing
    classes or add new classes.  ClassWizard also uses this file to store
    information needed to create and edit message maps and dialog data
    maps and to create prototype member functions.

/////////////////////////////////////////////////////////////////////////////

For the main frame window:

MainFrm.h, MainFrm.cpp
    These files contain the frame class CMainFrame, which is derived from
    CMDIFrameWnd and controls all MDI frame features.

res\Toolbar.bmp
    This bitmap file is used to create tiled images for the toolbar.
    The initial toolbar and status bar are constructed in the
    CMainFrame class.  Edit this toolbar bitmap along with the
    array in MainFrm.cpp to add more toolbar buttons.

/////////////////////////////////////////////////////////////////////////////

AppWizard creates one document type and one view:

ClusDoc.h, ClusDoc.cpp - the document
    These files contain your CClusterDoc class.  Edit these files to
    add your special document data and to implement file saving and loading
    (via CClusterDoc::Serialize).

TreeView.h, TreeView.cpp - the view of the document
    These files contain your CClusterTreeView class.
    CClusterTreeView objects are used to view CClusterDoc objects.

res\ClusDoc.ico
    This is an icon file, which is used as the icon for MDI child windows
    for the CClusterDoc class.  This icon is included by the main
    resource file CluAdmin.rc.

/////////////////////////////////////////////////////////////////////////////

Help Support:

MakeHelp.bat
    Use this batch file to create your application's Help file, CluAdmin.hLP.

CluAdmin.hpj
    This file is the Help Project file used by the Help compiler to create
    your application's Help file.

hlp\*.bmp
    These are bitmap files required by the standard Help file topics for
    Microsoft Foundation Class Library standard commands.

hlp\*.rtf
    This file contains the standard help topics for standard MFC
    commands and screen objects.

/////////////////////////////////////////////////////////////////////////////
Other standard files:

StdAfx.h, StdAfx.cpp
    These files are used to build a precompiled header (PCH) file
    named CluAdmin.pch and a precompiled types file named StdAfx.obj.

Resource.h
    This is the standard header file, which defines new resource IDs.
    Microsoft Developer Studio reads and updates this file.

/////////////////////////////////////////////////////////////////////////////
Other notes:

AppWizard uses "TODO:" to indicate parts of the source code you
should add to or customize.

If your application uses MFC in a shared DLL, and your application is 
in a language other than the operating system's current language, you
will need to copy the corresponding localized resources MFC40XXX.DLL
from the Microsoft Visual C++ CD-ROM onto the system or system32 directory,
and rename it to be MFCLOC.DLL.  ("XXX" stands for the language abbreviation.
For example, MFC40DEU.DLL contains resources translated to German.)  If you
don't do this, some of the UI elements of your application will remain in the
language of the operating system.

/////////////////////////////////////////////////////////////////////////////
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\base\cluster\admin\cluadmin\hlp\afxcore.rtf ===
{\rtf1\ansi \deff0\deflang1033{\fonttbl{\f0\froman\fcharset0\fprq2 Tms Rmn;}{\f1\froman\fcharset2\fprq2 Symbol;}{\f2\fswiss\fcharset0\fprq2 Helv;}{\f3\fmodern\fcharset0\fprq1 Courier;} {\f4\froman\fcharset0\fprq2 Times New Roman;}{\f5\fswiss\fcharset0\fprq2 Arial;}{\f6\froman\fcharset0\fprq2 MS Serif;}{\f7\fswiss\fcharset0\fprq2 MS Sans Serif;}{\f8\froman\fcharset0\fprq2 Times;}{\f9\fswiss\fcharset0\fprq2 Helvetica{\*\falt Arial};} {\f10\fswiss\fcharset0\fprq2 System;}{\f11\fmodern\fcharset0\fprq1 Courier New;}{\f12\froman\fcharset0\fprq2 New York;}{\f13\fswiss\fcharset0\fprq2 Geneva;}{\f14\fmodern\fcharset0\fprq1 Fixedsys;}{\f15\fmodern\fcharset255\fprq1 Terminal;} {\f16\fswiss\fcharset0\fprq2 Small Fonts;}{\f17\fswiss\fcharset0\fprq2 MS Dialog;}{\f18\fswiss\fcharset0\fprq2 MS Dialog Light;}{\f19\fswiss\fcharset0\fprq2 MS SystemEx;}{\f20\fnil\fcharset2\fprq2 Marlett;}{\f21\fnil\fcharset2\fprq2 Wingdings;} {\f22\fmodern\fcharset2\fprq1 MS LineDraw;}{\f23\fdecor\fcharset0\fprq2 Algerian;}{\f24\fswiss\fcharset0\fprq2 Arial Rounded MT Bold;}{\f25\froman\fcharset0\fprq2 Bookman Old Style;}{\f26\fdecor\fcharset0\fprq2 Braggadocio;} {\f27\fswiss\fcharset0\fprq2 Britannic Bold;}{\f28\fscript\fcharset0\fprq2 Brush Script MT;}{\f29\fswiss\fcharset0\fprq2 Century Gothic;}{\f30\fdecor\fcharset0\fprq2 Colonna MT;}{\f31\fdecor\fcharset0\fprq2 Desdemona;} {\f32\froman\fcharset0\fprq2 Footlight MT Light;}{\f33\fswiss\fcharset0\fprq2 Impact;}{\f34\fdecor\fcharset0\fprq2 Kino MT;}{\f35\froman\fcharset0\fprq2 Wide Latin;}{\f36\fscript\fcharset0\fprq2 Matura MT Script Capitals;} {\f37\fdecor\fcharset0\fprq2 Playbill;}}{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128; \red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;}{\stylesheet{\nowidctlpar \fs20 \snext0 Normal;}{\s1\sb240\nowidctlpar \b\f2\ul  \sbasedon0\snext0 heading 1;}{\s2\sb120\nowidctlpar \b\f2 \sbasedon0\snext0 heading 2;}{\s3\li360\nowidctlpar \b \sbasedon0\snext17 heading 3;}{\s4\li360\nowidctlpar \ul \sbasedon0\snext17 heading 4;}{\s5\li720\nowidctlpar \b\fs20 \sbasedon0\snext17  heading 5;}{\s6\li720\nowidctlpar \fs20\ul \sbasedon0\snext17 heading 6;}{\s7\li720\nowidctlpar \i\fs20 \sbasedon0\snext17 heading 7;}{\s8\li720\nowidctlpar \i\fs20 \sbasedon0\snext17 heading 8;}{\s9\li720\nowidctlpar \i\fs20 \sbasedon0\snext17  heading 9;}{\*\cs10 \additive Default Paragraph Font;}{\*\cs15 \additive\f0\fs16\up6\lang1033 \sbasedon10 footnote reference;}{\s16\nowidctlpar \fs20 \sbasedon0\snext16 footnote text;}{\s17\li720\nowidctlpar \fs20 \sbasedon0\snext17 Normal Indent;}{ \s18\fi-240\li480\sb80\nowidctlpar\tx480 \f9 \sbasedon0\snext18 nscba;}{\s19\fi-240\li240\sa20\nowidctlpar \f9 \sbasedon0\snext19 j;}{\s20\li480\sa20\nowidctlpar \f9 \sbasedon0\snext20 ij;}{\s21\sb80\sa20\nowidctlpar \f9 \sbasedon0\snext21 btb;}{ \s22\fi-240\li2400\sb20\sa20\nowidctlpar \f9\fs20 \sbasedon0\snext22 ctcb;}{\s23\fi-240\li480\sa40\nowidctlpar\tx480 \f9 \sbasedon0\snext23 ns;}{\s24\sa120\nowidctlpar \f9\fs28 \sbasedon0\snext24 TT;}{\s25\fi-240\li2400\sa20\nowidctlpar \f9  \sbasedon0\snext25 crtj;}{\s26\fi-240\li480\nowidctlpar\tx480 \f9 \sbasedon0\snext26 nsca;}{\s27\sa20\nowidctlpar \f9 \sbasedon0\snext27 bt;}{\s28\li240\sb120\sa40\nowidctlpar \f9 \sbasedon0\snext28 Hf;}{\s29\li240\sb120\sa40\nowidctlpar \f9  \sbasedon0\snext29 Hs;}{\s30\li480\sb120\sa40\nowidctlpar \f9 \sbasedon0\snext30 RT;}{\s31\fi-2160\li2160\sb240\sa80\nowidctlpar\tx2160 \f9 \sbasedon0\snext31 c;}{\s32\li2160\sa20\nowidctlpar \f9 \sbasedon0\snext32 ct;}{\s33\li240\sa20\nowidctlpar \f9  \sbasedon0\snext33 it;}{\s34\li480\nowidctlpar \f9\fs20 \sbasedon0\snext34 nsct;}{\s35\fi-160\li400\sb80\sa40\nowidctlpar \f9 \sbasedon0\snext35 nscb;}{\s36\fi-2640\li2880\sb120\sa40\nowidctlpar\brdrb\brdrs\brdrw15 \brdrbtw\brdrs\brdrw15 \tx2880 \f9  \sbasedon0\snext36 HC2;}{\s37\fi-2640\li2880\sb120\sa20\nowidctlpar\tx2880 \f9 \sbasedon0\snext37 C2;}{\s38\fi-240\li2400\sa20\nowidctlpar \f9\fs20 \sbasedon0\snext38 ctc;}{\s39\li2160\sb160\nowidctlpar \f9 \sbasedon0\snext39 crt;}{ \s40\li480\sb20\sa40\nowidctlpar \f9 \sbasedon0\snext40 or;}{\s41\fi-259\li360\sb40\sa40\nowidctlpar\tx360 \f7\fs20 \sbasedon0\snext41 Ln1;}{\s42\li115\sb80\sa80\nowidctlpar \f7\fs20 \sbasedon0\snext0 *Intro;}{\s43\li115\sb80\sa80\keepn\nowidctlpar \b\f7  \sbasedon3\snext42 *Title;}{\s44\fi-245\li360\sb80\nowidctlpar \f7\fs20 \snext44 *Jl;}{\s45\li360\sb40\sa40\nowidctlpar \f7\fs20 \snext0 Lp1;}{\s46\fi-1800\li1915\sb60\sl-240\slmult0\nowidctlpar\tx1915 \f7\fs20 \sbasedon0\snext46 Tph;}{ \s47\li115\sb120\sa80\nowidctlpar \b\f7\fs20 \snext41 Proch;}{\*\cs48 \additive\super \sbasedon10 endnote reference;}}{\info{\title AFXCORE}{\subject MFC Core RTF Help}{\author AFX}{\creatim\yr1992\mo10\dy7\hr11\min4}{\version1}{\edmins1}{\nofpages0} {\nofwords0}{\nofchars0}{\vern49221}}\widowctrl\ftnbj\aenddoc\hyphcaps0 \fet0\sectd \linex576\endnhere {\*\pnseclvl1\pnucrm\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl2\pnucltr\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl3 \pndec\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl4\pnlcltr\pnstart1\pnindent720\pnhang{\pntxta )}}{\*\pnseclvl5\pndec\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl6\pnlcltr\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}} {\*\pnseclvl7\pnlcrm\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl8\pnlcltr\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl9\pnlcrm\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}\pard\plain \sl240\slmult0\widctlpar  \fs20 {\cs15\fs16\up6 #{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 #} main_index}}{\fs16\up6   }{\b\f2\fs24\up6 <<YourApp>> Help Index}{\b\f2  \par }{\f9  \par }{\b\f2 How To ... \par }{\f2 \tab <<add your application-specific "how to" topics here>>}{\f9\ulw  \par  \par }{\b\f2 Commands \par }{\f2 \tab }{\f2\uldb File menu}{\v\f2 menu_file}{\f2  \par \tab }{\f2\uldb Edit menu}{\v\f2 menu_edit}{\f2\uldb  \par }{\f2 \tab }{\f2\uldb Record menu}{\v\f2 menu_record}{\f2  \par \tab }{\f2\uldb View menu}{\v\f2 menu_view}{\f2  \par \tab }{\f2\uldb Window menu}{\v\f2 menu_window}{\f2  \par \tab }{\f2\uldb Help menu}{\v\f2 menu_help}{\f2  \par \page }{\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} menu_file}K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} files: managing}}{\f2  }{\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar  \fs20 {\cs15\fs16\up6 $} File menu commands}}{\f2  }{\b\f2 File menu commands}{\f2  \par  \par The File menu offers the following commands: \par  \par }\trowd \trgaph108\trleft-108 \cellx1302\cellx8622 \pard \sl240\slmult0\widctlpar\intbl {\f2\uldb New}{\v\f2 HID_FILE_NEW}{\f2 \cell Creates a new document.\cell }\pard \widctlpar\intbl {\f2 \row }\trowd \trgaph108\trleft-108 \cellx1302\cellx8622 \pard  \sl240\slmult0\widctlpar\intbl {\f2\uldb Open}{\v\f2 HID_FILE_OPEN}{\f2\uldb \cell }{\f2 Opens an existing document.\cell }\pard \widctlpar\intbl {\f2 \row }\pard \sl240\slmult0\widctlpar\intbl {\f2\uldb Close}{\v\f2 HID_FILE_CLOSE}{\f2\uldb \cell }{\f2  Closes an opened document.\cell }\pard \widctlpar\intbl {\f2 \row }\pard \sl240\slmult0\widctlpar\intbl {\f2\uldb Save}{\v\f2 HID_FILE_SAVE}{\f2\uldb \cell }{\f2 Saves an opened document using the same file name.\cell }\pard \widctlpar\intbl {\f2 \row  }\pard \sl240\slmult0\widctlpar\intbl {\f2\uldb Save As}{\v\f2 HID_FILE_SAVE_AS}{\f2\uldb \cell }{\f2 Saves an opened document to a specified file name.\cell }\pard \widctlpar\intbl {\f2 \row }\pard \sl240\slmult0\widctlpar\intbl {\f2\uldb Print}{\v\f2  HID_FILE_PRINT}{\f2\uldb \cell }{\f2 Prints a document.\cell }\pard \widctlpar\intbl {\f2 \row }\pard \sl240\slmult0\widctlpar\intbl {\f2\uldb Print Preview}{\v\f2 HID_FILE_PRINT_PREVIEW}{\f2\uldb \cell }{\f2  Displays the document on the screen as it would appear printed.\cell }\pard \widctlpar\intbl {\f2 \row }\pard \sl240\slmult0\widctlpar\intbl {\f2\uldb Print Setup}{\v\f2 HID_FILE_PRINT_SETUP}{\f2\uldb \cell }{\f2 Selects a printer and printer connection. \cell }\pard \widctlpar\intbl {\f2 \row }\pard \sl240\slmult0\widctlpar\intbl {\f2\uldb Send...}{\v\f2 HID_FILE_SEND_MAIL}{\f2\uldb \cell }{\f2 Sends the active document through electronic mail.\cell }\pard \widctlpar\intbl {\f2 \row }\trowd  \trgaph108\trleft-108 \cellx1302\cellx8622 \pard \sl240\slmult0\widctlpar\intbl {\f2\uldb Exit}{\v\f2 HID_APP_EXIT}{\f2 \tab  \par }{\f2\uldb \cell }{\f2 Exits <<YourApp>>.\cell }\pard \widctlpar\intbl {\f2 \row }\pard \sl240\slmult0\widctlpar {\f2  \par \page }{\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} menu_edit}}{\b\f2 Edit menu commands}{\f2  \par  \par The Edit menu offers the following commands: \par }\pard \fi-720\li720\sl240\slmult0\widctlpar {\f2  \par }\trowd \trgaph108\trleft-108 \cellx1497\cellx10212 \pard \sl240\slmult0\widctlpar\intbl {\f2\uldb Undo}{\v\f2 HID_EDIT_UNDO}{\f2 \cell Reverse previous editing operation.\cell }\pard \widctlpar\intbl {\f2 \row }\trowd \trgaph108\trleft-108 \cellx1497 \cellx10212 \pard \sl240\slmult0\widctlpar\intbl {\f2\uldb Cut}{\v\f2 HID_EDIT_CUT}{\f2\uldb \cell }{\f2 Deletes data from the document and moves it to the clipboard.\cell }\pard \widctlpar\intbl {\f2 \row }\pard \sl240\slmult0\widctlpar\intbl {\f2\uldb  Copy}{\v\f2 HID_EDIT_COPY}{\f2\uldb \cell }{\f2 Copies data from the document to the clipboard.\cell }\pard \widctlpar\intbl {\f2 \row }\pard \sl240\slmult0\widctlpar\intbl {\f2\uldb Paste}{\v\f2 HID_EDIT_PASTE}{\f2\uldb \cell }{\f2  Pastes data from the clipboard into the document.\cell }\pard \widctlpar\intbl {\f2 \row }\pard \sl240\slmult0\widctlpar\intbl {\f2\uldb Paste Link}{\v\f2 HID_EDIT_PASTE_LINK}{\f2\uldb \cell }{\f2  Pastes from the clipboard a link to data in another application.\cell }\pard \widctlpar\intbl {\f2 \row }\pard \sl240\slmult0\widctlpar\intbl {\f2\uldb Insert New Object}{\v\f2\uldb HID_OLE_INSERT_NEW}{\f2\uldb \cell }{\f2  Inserts and embeds an object, such as a chart or an equation in a document.\cell }\pard \widctlpar\intbl {\f2 \row }\trowd \trgaph108\trleft-108 \cellx1497\cellx10212 \pard \sl240\slmult0\widctlpar\intbl {\f2\uldb Links}{\v\f2 HID_OLE_EDIT_LINKS}{ \f2\uldb \cell }{\f2 List and edit links to embedded documents.\cell }\pard \widctlpar\intbl {\f2 \row }\pard \fi-720\li720\sl240\slmult0\widctlpar {\f2  \par }\pard \sl240\slmult0\widctlpar {\f2 \tab \page }{\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} menu_view}}{\b\f2 View menu commands}{\f2  \par  \par The View menu offers the following commands: \par  \par }\trowd \trgaph108\trleft-108 \cellx1272\cellx7452 \pard \sl240\slmult0\widctlpar\intbl {\f2\uldb Toolbar}{\v\f2 HID_VIEW_TOOLBAR}{\f2\uldb \cell }{\f2 Shows or hides the toolbar.\cell }\pard \widctlpar\intbl {\f2 \row }\trowd \trgaph108\trleft-108  \cellx1272\cellx7452 \pard \sl240\slmult0\widctlpar\intbl {\f2\uldb Status Bar}{\v\f2 HID_VIEW_STATUS_BAR}{\f2\uldb \cell }\pard \fi-720\li720\sl240\slmult0\widctlpar\intbl {\f2 Shows or hides the status bar. \par }\pard \sl240\slmult0\widctlpar\intbl {\f2 \cell }\pard \widctlpar\intbl {\f2 \row }\pard \sl240\slmult0\widctlpar {\f2 \page }{\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} menu_window}}{\b\f2  Window menu commands}{\f2  \par  \par The Window menu offers the following commands, which enable you to arrange multiple views of multiple documents in the application window: \par  \par }\trowd \trgaph108\trleft-108 \cellx1572\cellx7752 \pard \sl240\slmult0\widctlpar\intbl {\f2\uldb New Window}{\v\f2 HID_WINDOW_NEW}{\f2\uldb \cell }{\f2 Creates a new window that views the same document.\cell }\pard \widctlpar\intbl {\f2 \row }\trowd  \trgaph108\trleft-108 \cellx1572\cellx7752 \pard \sl240\slmult0\widctlpar\intbl {\f2\uldb Cascade}{\v\f2 HID_WINDOW_CASCADE}{\f2\uldb \cell }{\f2 Arranges windows in an overlapped fashion.\cell }\pard \widctlpar\intbl {\f2 \row }\pard \sl240\slmult0 \widctlpar\intbl {\f2\uldb Tile}{\v\f2 HID_WINDOW_TILE}{\f2\uldb \cell }{\f2 Arranges windows in non-overlapped tiles.\cell }\pard \widctlpar\intbl {\f2 \row }\pard \sl240\slmult0\widctlpar\intbl {\f2\uldb Arrange Icons}{\v\f2 HID_WINDOW_ARRANGE}{ \f2\uldb \cell }\pard \fi-720\li720\sl240\slmult0\widctlpar\intbl {\f2 Arranges icons of closed windows.\cell }\pard \widctlpar\intbl {\f2 \row }\pard \sl240\slmult0\widctlpar\intbl {\f2\uldb Split}{\v\f2 HID_WINDOW_SPLIT}{\f2\uldb \cell }\pard  \fi-720\li720\sl240\slmult0\widctlpar\intbl {\f2 Split the active window into panes.\cell }\pard \widctlpar\intbl {\f2 \row }\trowd \trgaph108\trleft-108 \cellx1572\cellx7752 \pard \sl240\slmult0\widctlpar\intbl {\f2\uldb Window 1, 2, ...}{\v\f2  HID_WINDOW_ALL}{\f2\uldb \cell }\pard \fi-720\li720\sl240\slmult0\widctlpar\intbl {\f2 Goes to specified window.\cell }\pard \widctlpar\intbl {\f2 \row }\pard \fi-720\li720\sl240\slmult0\widctlpar {\f2  \par }\pard \sl240\slmult0\widctlpar {\f2  \par \page }{\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} menu_help}}{\b\f2 Help menu commands}{\f2  \par  \par The Help menu offers the following commands, which provide you assistance with this application:  \par  \par }\trowd \trgaph108\trleft-108 \cellx1077\cellx7257 \pard \sl240\slmult0\widctlpar\intbl {\f2\uldb Help Topics}{\v\f2 HID_HELP_INDEX}{\f2\uldb \cell }\pard \fi-720\li720\sl240\slmult0\widctlpar\intbl {\f2  Offers you an index to topics on which you can get help.\cell }\pard \widctlpar\intbl {\f2 \row }\trowd \trgaph108\trleft-108 \cellx1077\cellx7257 \pard \sl240\slmult0\widctlpar\intbl {\f2\uldb About}{\v\f2 HID_APP_ABOUT}{\f2\uldb \cell }\pard  \fi-720\li720\sl240\slmult0\widctlpar\intbl {\f2 Displays the version number of this application.\cell }\pard \widctlpar\intbl {\f2 \row }\pard \fi-720\li720\sl240\slmult0\widctlpar {\f2  \par  \par }\pard \sl240\slmult0\widctlpar {\f2 \page }{\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} HID_FILE_NEW}K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} files: managing}}{\f2  }{\cs15\fs16\up6 $ {\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} File New command}}{\f2  }{\b\f2 New command (File menu)}{\f2  \par  \par Use this command to create a new document in <<YourApp>>.  Select the type of new file you want to create in the }{\f2\uldb File New dialog box}{\v AFX_HIDD_NEWTYPEDLG}.  {\f2  << Remove previous sentence if your application supports only one document type. >> \par  \par You can open an existing document with the }{\f2\uldb Open command}{\v HID_FILE_OPEN}{\f2 . \par  \par }{\b\f2 Shortcuts \par }\pard \fi-1080\li1440\sl240\slmult0\widctlpar\tx1440 {\f2 Toolbar:\tab \{bmc filenew.bmp\} \par Keys:\tab CTRL+N \par }\pard \sl240\slmult0\widctlpar {\f2  \par \page }{\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} AFX_HIDD_NEWTYPEDLG}}{\b\f2 File New dialog box \par }{\f2  \par << Delete this help topic if your application supports only one document type. >> \par  \par Specify the type of document you wish to create: \par << List your application's document types here >>\page }{\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} HID_FILE_OPEN}K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} files: managing}}{\f2  }{ \cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} File Open command}}{\f2  }{\b\f2 Open command (File menu)}{\f2  \par  \par Use this command to open an existing document in a new window.  You can open multiple documents at once.  Use the Window menu to switch among the multiple open documents.  See }{\f2\uldb Window 1, 2, ... command}{\v\f2 HID_WINDOW_ALL}{\f2 . \par  \par You can create new documents with the }{\f2\uldb New command}{\v HID_FILE_NEW}{\f2 . \par  \par }{\b\f2 Shortcuts \par }\pard \fi-1080\li1440\sl240\slmult0\widctlpar\tx1440 {\f2 Toolbar:\tab \{bmc fileopen.bmp\} \par Keys:\tab CTRL+O \par }\pard \li360\sl240\slmult0\widctlpar {\f2  \par }\pard \sl240\slmult0\widctlpar {\f2 \page }{\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} AFX_HIDD_FILEOPEN}}{\b\f2 File Open dialog box \par }{\f2  \par The following options allow you to specify which file to open: \par }\pard \sb60\sl240\slmult0\widctlpar {\b\f2 File Name \par }\pard \li360\sl240\slmult0\widctlpar {\f2 Type or select the filename you want to open.  This box lists files with the extension you select in the List Files of Type box.  \par }\pard \sb60\sl240\slmult0\widctlpar {\b\f2 List Files of Type \par }\pard \li360\sl240\slmult0\widctlpar {\f2 Select the type of file you want to open: \par << List your application's file types here. >> \par }\pard \sb60\sl240\slmult0\widctlpar {\b\f2 Drives \par }\pard \li360\sl240\slmult0\widctlpar {\f2 Select the drive in which <<YourApp>> stores the file that you want to open.  \par }\pard \sb60\sl240\slmult0\widctlpar {\b\f2 Directories \par }\pard \li360\sl240\slmult0\widctlpar {\f2 Select the directory in which <<YourApp>> stores the file that you want to open. \par }\pard \sb60\sl240\slmult0\widctlpar {\b\f2 Network... \par }\pard \li360\sl240\slmult0\widctlpar {\f2 Choose this button to connect to a network location, assigning it a new drive letter.  \par  \par }\pard \sl240\slmult0\widctlpar {\f2 \page }{\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} HID_FILE_CLOSE}K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} files: managing}}{\f2  }{\cs15\fs16\up6 $ {\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} File Close command}}{\f2  }{\b\f2 Close command (File menu)}{\f2  \par  \par Use this command to close all windows containing the active document.  <<YourApp>> suggests that you save changes to your document before you close it.  If you close a document without saving, you lose all changes made since the last time you saved it.  B efore closing an untitled document, <<YourApp>> displays the }{\f2\uldb Save As dialog box}{\v AFX_HIDD_FILESAVE}{\f2  and suggests that you name and save the document. \par  \par You can also close a document by using the Close icon on the document's window, as shown below: \par \{bml scmenu.bmp\} \par \page }{\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} HID_FILE_SAVE}K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} files: managing}}{\f2  }{\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar  \fs20 {\cs15\fs16\up6 $} File Save command}}{\f2  }{\b\f2 Save command (File menu)}{\f2  \par  \par Use this command to save the active document to its current name and directory.  When you save a document for the first time, <<YourApp>> displays the }{\f2\uldb Save As dialog box}{\v AFX_HIDD_FILESAVE}{\f2   so you can name your document.  If you want to change the name and directory of an existing document before you save it, choose the }{\f2\uldb Save As command}{\v HID_FILE_SAVE_AS}{\f2 . \par  \par }{\b\f2 Shortcuts \par }\pard \fi-1080\li1440\sl240\slmult0\widctlpar\tx1440 {\f2 Toolbar:\tab \{bmc filesave.bmp\} \par Keys:\tab CTRL+S \par }\pard \li360\sl240\slmult0\widctlpar {\f2  \par }\pard \sl240\slmult0\widctlpar {\f2  \par \page }{\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} HID_FILE_SAVE_AS}K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} files: managing}}{\f2  }{\cs15\fs16\up6 ${\footnote \pard\plain  \s16\widctlpar \fs20 {\cs15\fs16\up6 $} File Save As command}}{\f2  }{\b\f2 Save As command (File menu)}{\f2  \par  \par Use this command to save and name the active document.  <<YourApp>> displays the }{\f2\uldb Save As dialog box}{\v AFX_HIDD_FILESAVE}{\f2  so you can name your document.   \par  \par To save a document with its existing name and directory, use the }{\f2\uldb Save command}{\v HID_FILE_SAVE}{\f2 . \par  \par \page }{\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} HID_FILE_SEND_MAIL}}{\b\f2 Send command (File menu)}{\f2  \par  \par Use this command to send the active document through electronic mail.  This command presents a mail window with the active document attached to it.  You may then fill out the To: field, Subject: field, etc., and add text to the body of the message if you  wish.  When you are finished you may click the "Send" button to send the message. \par \page }{\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} AFX_HIDD_FILESAVE}}{\b\f2 File Save As dialog box \par }{\f2  \par The following options allow you to specify the name and location of the file you're about to save: \par }\pard \sb60\sl240\slmult0\widctlpar {\b\f2 File Name \par }\pard \li360\sl240\slmult0\widctlpar {\f2  Type a new filename to save a document with a different name.  A filename can contain up to eight characters and an extension of up to three characters.  <<YourApp>> adds the extension you specify in the Save File As Type box. \par }\pard \sb60\sl240\slmult0\widctlpar {\b\f2 Drives \par }\pard \li360\sl240\slmult0\widctlpar {\f2 Select the drive in which you want to store the document. \par }\pard \sb60\sl240\slmult0\widctlpar {\b\f2 Directories \par }\pard \li360\sl240\slmult0\widctlpar {\f2 Select the directory in which you want to store the document. \par }\pard \sb60\sl240\slmult0\widctlpar {\b\f2 Network... \par }\pard \li360\sl240\slmult0\widctlpar {\f2 Choose this button to connect to a network location, assigning it a new drive letter.  \par  \par }\pard \sl240\slmult0\widctlpar {\f2 << Add other File Save As dialog box options depending on which ones your application chooses via the OFN_ flags of the OPENFILENAME structure used by the CFileDialog. >> \par \page }{\cs15\fs16\up6 #{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 #} HID_FILE_MRU_FILE1}}{\f2  }{\cs15\fs16\up6 K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} files: managing}}{\f2  }{\cs15\fs16\up6 ${\footnote  \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 $} File 1, 2, 3, 4 command}}{\f2  }{\b\f2 1, 2, 3, 4 command (File menu)}{\f2  \par  \par Use the numbers and filenames listed at the bottom of the File menu to open the last four documents you closed.  Choose the number that corresponds with the document you want to open. \par \page }{\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} HID_APP_EXIT}K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} exit}}{\f2  }{\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20 { \cs15\fs16\up6 $} File Exit command}}{\f2  }{\b\f2 Exit command (File menu)}{\f2  \par  \par Use this command to end your <<YourApp>> session.  You can also use the Close command on the application Control menu.  <<YourApp>> prompts you to save documents with unsaved changes. \par } \par {\b\f2 Shortcuts \par }\pard \fi-1080\li1440\sl240\slmult0\widctlpar\tx1440 {\f2 Mouse:\tab Double-click the application's Control menu button. \par \tab \{bmc appexit.bmp\} \par Keys:\tab ALT+F4 \par }\pard \sl240\slmult0\widctlpar \page {\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} HID_EDIT_UNDO}}{\b\f2 Undo/Can't Undo command (Edit menu)}{\f2  \par  \par << Your application's user interface for Undo may differ from the one described below.  Modify this help text accordingly. >> \par  \par Use this command to reverse the last editing action, if possible.   The name of the command changes, depending on what the last action was.  The Undo command changes to Can't Undo on the menu if you cannot reverse your last action. \par  \par }{\b\f2 Shortcuts \par }\pard \fi-1080\li1440\sl240\slmult0\widctlpar\tx1440 {\f2 Toolbar:\tab \{bmc editundo.bmp\} \par Keys:\tab CTRL+Z or \par \tab ALT-BACKSPACE\tab  \par }\pard \sl240\slmult0\widctlpar {\f2  \par \page }{\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} HID_EDIT_REDO}}{\b\f2 Redo command (Edit menu)}{\f2  \par  \par << Write application-specific help here. >> \par \page }{\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} HID_EDIT_CUT}}{\b\f2 Cut command (Edit menu)}{\f2  \par  \par Use this command to remove the currently selected data from the document and put it on the clipboard.  This command is unavailable if there is no data currently selected. \par  \par Cutting data to the clipboard replaces the contents previously stored there. \par  \par }{\b\f2 Shortcuts \par }\pard \fi-1080\li1440\sl240\slmult0\widctlpar\tx1440 {\f2 Toolbar:\tab \{bmc editcut.bmp\} \par Keys:\tab CTRL+X \par }\pard \sl240\slmult0\widctlpar {\f2  \par \page }{\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} HID_EDIT_COPY}}{\b\f2 Copy command (Edit menu)}{\f2  \par  \par Use this command to copy selected data onto the clipboard.  This command is unavailable if there is no data currently selected. \par  \par Copying data to the clipboard replaces the contents previously stored there. \par  \par }{\b\f2 Shortcuts \par }\pard \fi-1080\li1440\sl240\slmult0\widctlpar\tx1440 {\f2 Toolbar:\tab \{bmc editcopy.bmp\} \par Keys:\tab CTRL+C \par }\pard \sl240\slmult0\widctlpar {\f2  \par \page }{\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} HID_EDIT_PASTE}}{\b\f2 Paste command (Edit menu)}{\f2  \par  \par Use this command to insert a copy of the clipboard contents at the insertion point.  This command is unavailable if the clipboard is empty. \par  \par }{\b\f2 Shortcuts \par }\pard \fi-1080\li1440\sl240\slmult0\widctlpar\tx1440 {\f2 Toolbar:\tab \{bmc editpast.bmp\} \par Keys:\tab CTRL+V \par }\pard \sl240\slmult0\widctlpar {\f2  \par \page }{\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} HID_VIEW_TOOLBAR}K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} toolbar}}{\f2  }{\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20  {\cs15\fs16\up6 $} View Toolbar command}}{\f2  }{\b\f2 Toolbar command (View menu)}{\f2  \par  \par Use this command to display and hide the Toolbar, which includes buttons for some of the most common commands in <<YourApp>>, such as File Open.  A check mark appears next to the menu item when the Toolbar is displayed. \par  \par See }{\f2\uldb Toolbar}{\v\f2 AFX_HIDW_TOOLBAR}{\f2  for help on using the toolbar. \par \page }{\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} AFX_HIDW_TOOLBAR}K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} toolbar}}{\f2  }{\cs15\fs16\up6 ${\footnote \pard\plain \s16\widctlpar \fs20  {\cs15\fs16\up6 $} toolbar}}{\f2  }{\b\f2 Toolbar}{\f2  \par \{bml hlptbar.bmp\} \par  \par The toolbar is displayed across the top of the application window, below the menu bar.  The toolbar provides quick mouse access to many tools used in <<YourApp>>, \par  \par To hide or display the Toolbar, choose Toolbar from the View menu (ALT, V, T). \par  \par << Add or remove toolbar buttons from the list below according to which ones your application offers. >> \par  \par }\pard \sl240\slmult0\widctlpar\brdrb\brdrs\brdrw15\brsp20 \tx1080 {\b\f2 Click\tab To}{\f2  \par }\pard \fi-1080\li1080\sl240\slmult0\widctlpar\tx1080 {\f2 \{bmc filenew.bmp\}\tab Open a new document. \par  \par \{bmc fileopen.bmp\}\tab Open an existing document.  <<YourApp>> displays the Open dialog box, in which you can locate and open the desired file. \par  \par \{bmc filesave.bmp\}\tab Save the active document or template with its current name.  If you have not named the document, <<YourApp>> displays the Save As dialog box. \par  \par \{bmc fileprnt.bmp\}\tab Print the active document. \par  \par \{bmc editcut.bmp\}\tab Remove selected data from the document and stores it on the clipboard. \par  \par \{bmc editcopy.bmp\}\tab Copy the selection to the clipboard. \par  \par \{bmc editpast.bmp\}\tab Insert the contents of the clipboard at the insertion point. \par  \par \{bmc editundo.bmp\}\tab Reverse the last editing.  Note:  You cannot undo some actions. \par  \par \{bmc recfirst.bmp\}\tab Go to the first record in the current selection. \par  \par \{bmc recprev.bmp\}\tab Go to the previous record in the current selection. \par  \par \{bmc recnext.bmp\}\tab Go to the next record in the current selection. \par  \par \{bmc reclast.bmp\}\tab Go to the last record in the current selection. \par  \par }\pard \sl240\slmult0\widctlpar {\f2 \page }{\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} HID_VIEW_STATUS_BAR}K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} status bar}}{\f2  }{\cs15\fs16\up6 $ {\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 $} View Status Bar Command}}{\b\f2 Status Bar command (View menu) \par }{\f2  \par Use this command to display and hide the Status Bar, which describes the action to be executed by the selected menu item or depressed toolbar button, and keyboard latch state. A check mark appears next to the menu item when the Status Bar is displayed. \par  \par See }{\f2\uldb Status Bar}{\v\f2 AFX_HIDW_STATUS_BAR}{\f2  for help on using the status bar. \par \page }{\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} AFX_HIDW_STATUS_BAR}K{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 K} status bar}}{\f2  }{\cs15\fs16\up6 ${\footnote \pard\plain \sl240\slmult0 \widctlpar \fs20 {\cs15\fs16\up6 $} status bar}}{\b\f2 Status Bar}{\f2  \par \{bml hlpsbar.bmp\} \par  \par The status bar is displayed at the bottom of the <<YourApp>> window.  To display or hide the status bar, use the Status Bar command in the View menu. \par  \par The left area of the status bar describes actions of menu items as you use the arrow keys to navigate through menus.  This area similarly shows messages that describe the actions of toolbar buttons as you depress them, before releasing them.  If after vie wing the description of the toolbar button command you wish not to execute the command, then release the mouse button while the pointer is off the toolbar button. \par  \par The right areas of the status bar indicate which of the following keys are latched down: \par  \par }\pard \sl240\slmult0\widctlpar\tx1440 {\b\f2 Indicator\tab Description}{\f2  \par }\pard \fi-1440\li1440\sa120\sl240\slmult0\widctlpar\tx1440 {\f2 CAP\tab The Caps Lock key is latched down. \par NUM\tab The Num Lock key is latched down. \par SCRL\tab The Scroll Lock key is latched down. \par }\pard \sl240\slmult0\widctlpar {\f2 \page }{\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} HID_WINDOW_NEW}}{\b\f2 New command (Window menu)}{\f2  \par  \par Use this command to open a new window with the same contents as the act ive window.  You can open multiple document windows to display different parts or views of a document at the same time.  If you change the contents in one window, all other windows containing the same document reflect those changes.  When you open a new w indow, it becomes the active window and is displayed on top of all other open windows. \par  \par \page }{\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} HID_WINDOW_CASCADE}}{\b\f2 Cascade command (Window menu)}{\f2  \par  \par Use this command to arrange multiple opened windows in an overlapped fashion.  \par  \par \page }{\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} HID_WINDOW_TILE}}{\b\f2 Tile command (Window menu)}{\f2  \par  \par Use this command to arrange multiple opened windows in a non-overlapped fashion. \par  \par  \par \page }{\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} HID_WINDOW_TILE_HORZ}}{\b\f2 Tile Horizontal command (Window menu)}{\f2  \par  \par Use this command to vertically arrange multiple opened windows in a non-overlapped fashion. \par \page }{\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} HID_WINDOW_TILE_VERT}}{\b\f2 Tile Vertical command (Window menu)}{\f2  \par  \par Use this command to arrange multiple opened windows side by side. \par \page }{\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} HID_WINDOW_ARRANGE}}{\b\f2 Window Arrange Icons Command}{\f2  \par  \par Use this command to arrange the icons for minimized windows at the bottom of the main window.  If there is an open document window at the bottom of the main window, then some or all of the icons may not be visible because they will be underneath this docu ment window.\page }{\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} HID_WINDOW_SPLIT}}{\b\f2 Split Command (Window menu) \par  \par }{\f2 Use this command to split the active window into panes.  You may then use the mouse or the keyboard arrows to move the splitter bars.  When you are finished, press the mouse button or enter to le ave the splitter bars in their new location.  Pressing escape keeps the splitter bars in their original location.  << In a single document interface application, this command will appear on the View menu. >>\page }{\cs15\fs16\up6 #{\footnote \pard\plain  \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} HID_WINDOW_ALL}}{\b\f2 1, 2, ... command (Window menu)}{\f2  \par  \par <<YourApp>> displays a list of currently open document windows at the bottom of the Window menu.  A check mark appears in front of the document name of the active window.  Choose a document from this list to make its window active.   \par \page }{\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} HID_HELP_INDEX}}{\b\f2 Index command (Help menu) \par }{\f2  \par Use this command to display the opening screen of Help.  From the opening screen, you can jump to step-by-step instructions for using <<YourApp>> and various types of reference information.   \par  \par Once you open Help, you can click the Contents button whenever you want to return to the opening screen. \par  \par \page }{\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} HID_HELP_USING}}{\b\f2 Using Help command (Help menu) \par }{\f2  \par Use this command for instructions about using Help. \par \page }{\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} HID_APP_ABOUT}}{\b\f2 About command (Help menu) \par }{\f2  \par Use this command to display the copyright notice and version number of your copy of <<YourApp>>. \par \page }{\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} HID_CONTEXT_HELP}${\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 $} Help Using Help Command}}{\b\f2 Context Help command  \par }{\f2 \{bml curhelp.bmp\} \par  \par Use the Context Help command to obtain help on some portion of <<YourApp>>.  When you choose the Toolbar's Context Help button, the mouse pointer will change to an arrow and question mark.  Then click somewhere in the <<YourApp>> window, such as another T oolbar button.  The Help topic will be shown for the item you clicked. \par  \par }{\b\f2 Shortcut \par }\pard \fi-1080\li1440\sl240\slmult0\widctlpar\tx1440 {\f2 Keys:\tab SHIFT+F1 \par }\pard \sl240\slmult0\widctlpar {\f2 \page }{\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} HID_HT_CAPTION}}{\b\f2 Title Bar} \par  \par {\f2 << Show your application's title bar here. >> \par  \par }\pard\plain \s42\fi-360\li360\widctlpar\tx360 \f7\fs20 {\f2 The title bar is located along the top of a window.  It contains the name of the application and document. \par }\pard\plain \widctlpar \fs20 {\f2  \par }\pard\plain \s42\fi-360\li360\widctlpar\tx360 \f7\fs20 {\f2 To move the window, drag the title bar.  Note: You can also move dialog boxes by dragging their title bars. \par }\pard\plain \widctlpar \fs20 {\f2  \par }\pard \fi-360\li360\widctlpar\tx360 {\f2 A title bar may contain the following elements: \par }\pard\plain \s41\fi-360\li360\sb40\sa40\widctlpar\tx360 \f7\fs20 {\f2 \{bmc bullet.bmp\}\tab Application Control-menu button \par \{bmc bullet.bmp\}\tab Document Control-menu button \par \{bmc bullet.bmp\}\tab Maximize button \par \{bmc bullet.bmp\}\tab Minimize button \par \{bmc bullet.bmp\}\tab Name of the application \par \{bmc bullet.bmp\}\tab Name of the document \par \{bmc bullet.bmp\}\tab Restore button \par }\pard\plain \sl240\slmult0\widctlpar \fs20 {\f2 \page }{\cs15\fs16\up6 #{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 #} scrollbars}}{\f2  }{\b\f2 Scroll bars}{\f2  \par  \par Displayed at the right and bottom edges of the document window.  The scroll boxes inside the scroll bars indicate your vertical and horizontal location in the document.  You can use the mouse to scroll to other parts of the document. \par  \par << Describe the actions of the various parts of the scrollbar, according to how they behave in your application. >> \par \page }{\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} HID_SC_SIZE}}{\b\f2 Size command (System menu)} \par  \par {\f2 Use this command to display a four-headed arrow so you can size the active window with the arrow keys. \par \{bml curarw4.bmp\} \par  \par After the pointer changes to the four-headed arrow: \par }\pard \fi-360\li360\sb60\sl240\slmult0\widctlpar {\f2 1.\tab Press one of the DIRECTION keys (left, right, up, or down arrow key) to move the pointer to the border you want to move.   \par 2.\tab Press a DIRECTION key to move the border. \par 3.\tab Press ENTER when the window is the size you want. \par }\pard \sl240\slmult0\widctlpar {\f2  \par Note:  This command is unavailable if you maximize the window. \par } \par {\b\f2 Shortcut}{\b  \par }\pard \fi-1080\li1440\sl240\slmult0\widctlpar\tx1440 {\f2 Mouse:\tab Drag the size bars at the corners or edges of the window. \par }\pard \li360\sl240\slmult0\widctlpar {\f2  \par }\pard \sl240\slmult0\widctlpar {\f2 \page }{\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} HID_SC_MOVE}}{\b\f2 Move command (Control menu) \par }{\f2  \par Use this command to display a four-headed arrow so you can move the active window or dialog box with the arrow keys. \par \{bmc curarw4.bmp\} \par  \par Note:  This command is unavailable if you maximize the window. \par  \par }{\b\f2 Shortcut \par }\pard \fi-1080\li1440\sl240\slmult0\widctlpar\tx1440 {\f2 Keys:\tab CTRL+F7 \par  \par }\pard \sl240\slmult0\widctlpar\tx1440 {\f2 \page }{\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} HID_SC_MINIMIZE}${\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 $} System Minimize Command} }{\b\f2 Minimize command (application Control menu) \par }\pard \sl240\slmult0\widctlpar {\f2  \par Use this command to reduce the <<YourApp>> window to an icon. \par }\pard \fi-360\li360\sl240\slmult0\widctlpar {\b  \par }{\b\f2 Shortcut}{\f2  \par }\pard \fi-1080\li1440\sl240\slmult0\widctlpar\tx1440 {\f2 Mouse:\tab Click the minimize icon \{bmc scmin.bmp\} on the title bar. \par Keys:\tab ALT+F9 \par }\pard \fi-360\li1080\sl240\slmult0\widctlpar  \par \pard \sl240\slmult0\widctlpar {\f2 \page }{\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} HID_SC_MAXIMIZE}}{\b\f2 Maximize command (System menu) \par }{\f2  \par Use this command to enlarge the active window to fill the available space. \par }\pard \fi-360\li360\sl240\slmult0\widctlpar {\b\f2  \par Shortcut}{\f2  \par }\pard \fi-1080\li1440\sl240\slmult0\widctlpar\tx1440 {\f2 Mouse:\tab Click the maximize icon \{bmc scmax.bmp\} on the title bar; or double-click the title bar. \par Keys:\tab CTRL+F10 enlarges a document window. \par }\pard \fi-360\li1080\sl240\slmult0\widctlpar  \par \pard \sl240\slmult0\widctlpar {\f2 \page }{\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} HID_SC_NEXTWINDOW}}{\b\f2 Next Window command (document Control menu) \par }{\f2  \par Use this command to switch to the next open document window.  <<YourApp>> determines which window is next according to the order in which you opened the windows. \par  \par }{\b\f2 Shortcut \par }\pard \fi-1080\li1440\sl240\slmult0\widctlpar\tx1440 {\f2 Keys:\tab CTRL+F6 \par }\pard \sl240\slmult0\widctlpar {\f2  \par \page }{\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} HID_SC_PREVWINDOW}}{\b\f2 Previous Window command (document Control menu) \par }{\f2  \par Use this command to switch to the previous open document window.  <<YourApp>> determines which window is previous according to the order in which you opened the windows. \par  \par }{\b\f2 Shortcut \par }\pard \fi-1080\li1440\sl240\slmult0\widctlpar\tx1440 {\f2 Keys:\tab SHIFT+CTRL+F6 \par }\pard \sl240\slmult0\widctlpar {\f2  \par \page }{\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} HID_SC_CLOSE}}{\b\f2 Close command (Control menus) \par }{\f2  \par Use this command to close the active window or dialog box. \par  \par Double-clicking a Control-menu box is the same as choosing the Close command. \par \{bml appexit.bmp\} \par  \par Note:  If you have multiple windows open for a single document, the Close command on the document Control menu closes only one window at a time.  You can close all windows at once with the Close command on the File menu. \par  \par }{\b\f2 Shortcuts \par }\pard \fi-1080\li1440\sl240\slmult0\widctlpar\tx1440 {\f2 Keys: \tab CTRL+F4 closes a document window \par \tab ALT+F4 closes the <<YourType>> window or dialog box \par }\pard \sl240\slmult0\widctlpar {\f2 \tab \tab \tab \page }{\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} HID_SC_RESTORE}}{\b\f2 Restore command (Control menu) \par }{\f2  \par Use this command to return the active window to its size and position before you chose the Maximize or Minimize command. \par \page }{\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} HID_SC_TASKLIST}}{\b\f2 Switch to command (application Control menu) \par }{\f2  \par Use this command to display a list of all open applications.  Use this "Task List" to switch to or close an application on the list. \par  \par }{\b\f2 Shortcut \par }\pard \fi-1080\li1440\sl240\slmult0\widctlpar\tx1440 {\f2 Keys:\tab CTRL+ESC \par }\pard \sl240\slmult0\widctlpar {\f2  \par }{\b\f2 Dialog Box Options \par }{\f2 When you choose the Switch To command, you will be presented with a dialog box with the following options: \par }\pard \sb60\sl240\slmult0\widctlpar {\b\f2 Task List \par }\pard \li360\sl240\slmult0\widctlpar {\f2 Select the application you want to switch to or close. \par }\pard \sb60\sl240\slmult0\widctlpar {\b\f2 Switch To \par }\pard \li360\sl240\slmult0\widctlpar {\f2 Makes the selected application active. \par }\pard \sb60\sl240\slmult0\widctlpar {\b\f2 End Task \par }\pard \li360\sl240\slmult0\widctlpar {\f2 Closes the selected application. \par }\pard \sb60\sl240\slmult0\widctlpar {\b\f2 Cancel \par }\pard \li360\sl240\slmult0\widctlpar {\f2 Closes the Task List box. \par }\pard \sb60\sl240\slmult0\widctlpar {\b\f2 Cascade \par }\pard \li360\sl240\slmult0\widctlpar {\f2 Arranges open applications so they overlap and you can see each title bar.  This option does not affect applications reduced to icons. \par }\pard \sb60\sl240\slmult0\widctlpar {\b\f2 Tile \par }\pard \li360\sl240\slmult0\widctlpar {\f2 Arranges open applications into windows that do not overlap.  This option does not affect applications reduced to icons. \par }\pard \sb60\sl240\slmult0\widctlpar {\b\f2 Arrange Icons \par }\pard \li360\sl240\slmult0\widctlpar {\f2 Arranges the icons of all minimized applications across the bottom of the screen. \par }\pard \sl240\slmult0\widctlpar {\f2 \page }{\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} HID_VIEW_RULER}${\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 $} View Ruler Command}}{\b\f2  Ruler command (View menu) \par  \par }{\f2 << Write application-specific help here. >> \par \page }{\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} AFX_HIDD_FONT}${\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 $} Choose Font Dialog}}{\b\f2 Choose Font dialog box \par  \par }{\f2 << Write application-specific help here. >> \par \page }{\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} AFX_HIDD_COLOR}${\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 $} Choose Color Dialog}}{\b\f2 Choose Color dialog box \par  \par }{\f2 << Write application-specific help here. >> \par \page }{\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} HID_EDIT_FIND}${\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 $} Edit Find Command}}{\b\f2 Find command (Edit menu) \par  \par }{\f2 << Write application-specific help here. >> \par \page }{\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} AFX_HIDD_FIND}${\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 $} Find Dialog}}{\b\f2 Find dialog box \par  \par }{\f2 << Write application-specific help here. >> \par \page }{\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} HID_EDIT_REPLACE}${\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 $} Edit Replace Command}}{\b\f2 Replace command (Edit menu) \par  \par }{\f2 << Write application-specific help here. >> \par \page }{\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} AFX_HIDD_REPLACE}${\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 $} Replace Dialog}}{\b\f2 Replace dialog box \par  \par }{\f2 << Write application-specific help here. >> \par \page }{\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} HID_EDIT_REPEAT}${\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 $} Edit Repeat Command}}{\b\f2 Repeat command (Edit menu) \par  \par }{\f2 Use this command to repeat the last editing command carried out.  The Repeat menu item changes to Can't Repeat if you cannot repeat your last action. \par  \par }{\b\f2 Shortcut \par }\pard \fi-1080\li1440\sl240\slmult0\widctlpar\tx1440 {\f2 Key:\tab F4 \par }\pard \sl240\slmult0\widctlpar {\f2  \par \page }{\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} HID_EDIT_CLEAR}${\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 $} Edit Clear Command}}{\b\f2 Clear command (Edit menu) \par  \par }{\f2 << Write application-specific help here. >> \par \page }{\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} HID_EDIT_CLEAR_ALL}${\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 $} Edit Clear All}}{\b\f2 Clear All command (Edit menu) \par  \par }{\f2 << Write application-specific help here. >> \par \page }{\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} HID_NEXT_PANE}${\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 $} Next Pane Command}}{\b\f2 Next Pane \par  \par }{\f2 << Write application-specific help here. >> \par \page }{\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} HID_PREV_PANE}${\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 $} Prev Pane Command}}{\b\f2 Prev Pane \par  \par }{\f2 << Write application-specific help here. >> \par \page }{\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} HIDR_DOC1TYPE}}{\b\f2 Modifying the Document \par }{\f2  \par << Write application-specific help here that provides an overview of how the user should modify a document using your application.   \par  \par If your application supports multiple document types and you want to have a distinct help topic for each, then use the help context i.d. generated by running the MAKEHELP.BAT file produced by AppWizard.  Alternatively, run MAKEHM as follows: \par  \par \tab makehm IDR_HIDR_,0x2000 resource.h \par  \par If the IDR_ symbol for one of your document types is, for example, IDR_CHARTTYPE, then the help context i.d. generated by MAKEHM will be HIDR_CHARTTYPE. \par  \par Note, AppWizard defines the HIDR_DOC1TYPE help context i.d. used by this help topic for the first document type supported by your appl ication.  AppWizard produces an alias in the .HPJ file for your application, mapping HIDR_DOC1TYPE to the HIDR_ produced by MAKEHM for that document type. >> \par  \par \page  \par \page }{\cs15\fs16\up6 #{\footnote \pard\plain \sl240\slmult0\widctlpar \fs20 {\cs15\fs16\up6 #} HID_HT_NOWHERE}}{\b\f2 No Help Available} \par  \par {\f2 No help is available for this area of the window. \par \page }{\cs15\fs16\up6 #{\footnote \pard\plain \s16\widctlpar \fs20 {\cs15\fs16\up6 #} AFX_HIDP_default \par }}{\f2  }{\b\f2 No Help Available \par } \par {\f2 No help is available for this message box. \par } \par {\f2 << If you wish to author help specific  to each message box prompt, then remove the AFX_HIDP_xxx values from the [ALIAS] section of your .HPJ file, and author a topic for each AFX_HIDP_xxx value.  For example, AFX_HIDP_INVALID_FILENAME is the help topic for the Invalid Filename message box. >> \par  \par }\pard \widctlpar  \par }
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\base\cluster\admin\debugex\readme.txt ===
========================================================================
       CLUSTER ADMINISTRATOR EXTENSION : Debug
========================================================================


AppWizard has created this Cluster Administrator Extension DLL for you.
This DLL demonstrates the basics of modifying the interface of
Cluster Administrator and is also a starting point for writing your DLL.

This file contains a summary of what you will find in each of the files that
make up your Cluster Administrator Extension DLL.

DebugEx.h
    This is the main header file for the DLL.  It declares the
    CDebugApp class.

DebugEx.cpp
    This is the main DLL source file.  It contains the class CDebugApp.
    It also contains the OLE entry points required of inproc servers.

DebugEx.rc
    This is a listing of all of the Microsoft Windows resources that the
    program uses.  It includes the icons, bitmaps, and cursors that are stored
    in the RES subdirectory.  This file can be directly edited in Microsoft
    Developer Studio.

res\DebugEx.rc2
    This file contains resources that are not edited by Microsoft 
    Developer Studio.  You should place all resources not
    editable by the resource editor in this file.

DebugEx.def
    This file contains information about the DLL that must be
    provided to run with Microsoft Windows.  It defines parameters
    such as the name and description of the DLL.  It also exports
    functions from the DLL.

DebugEx.clw
    This file contains information used by ClassWizard to edit existing
    classes or add new classes.  ClassWizard also uses this file to store
    information needed to create and edit message maps and dialog data
    maps and to create prototype member functions.

ExtObj.h
    This is the header file which defines the classes which implement the
    COM interfaces by the Microsoft Windows NT Cluster Administrator program
    for adding property pages, wizard pages, or context menu items.  It
    defines the CExtObject class.

ExtObj.cpp
    This is the source file which implements the CExtObject class.

ExtObjID.idl
    This the Interface Definition Language source file for defining
    the COM object implemented by the extension DLL.  This is the object
    that will be loaded by the Cluster Administrator program.

BasePage.h
    This is the header file which defines a class which provides base
    property page functionality for use by extension property pages.  It
    defines the CBasePropertyPage class.

BasePage.cpp
    This is the source file which implements the CBasePropertyPage class.

BasePage.inl
    This is the source file which implements inline functions for the
    CBasePropertyPage class.

PropList.h
    This is the header file which defines classes for manipulating
    cluster property lists.  It defines the CClusPropList and CObjectProperty
    classes.

PropList.cpp
    This is the source file which implements the CClusPropList and
    CObjectProperty classes for manipulating cluster property lists.

/////////////////////////////////////////////////////////////////////////////
Other standard files:

StdAfx.h, StdAfx.cpp
    These files are used to build a precompiled header (PCH) file
    named Debug.pch and a precompiled types file named StdAfx.obj.

Resource.h
    This is the standard header file, which defines new resource IDs.
    Microsoft Developer Studio reads and updates this file.

/////////////////////////////////////////////////////////////////////////////
Property page files:

ResProp.h
    This is the header file which defines a property page titled "Parameters"
    to add to property sheets for resources for which your extension DLL is
    written.  It defines the CDebugParamsPage class.

ResProp.cpp
    This is the source file which implements the CDebugParamsPage class.

/////////////////////////////////////////////////////////////////////////////
Other notes:

This application uses the ActiveX Template Library (ATL) V1.1.  ATL V1.1
will need to be installed before your application will build.

To register your extension DLL so that it can be used with the Cluster
Administrator program, use the RegClAdm.exe SDK tool on each machine on
which the Cluster Administrator is to be executed.  RegCladm.exe is
located in the BIN sub-directory of your Visual C++ Installation Directory
(typically C:\MSDEV\BIN):

    RegClAdm [/cclustername] DebugEx.dll

AppWizard uses "TODO:" to indicate parts of the source code you
should add to or customize.

**************************************************************************
  NOTE: You must use the MIDL compiler from NT 4.0,
  version 3.00.44 or greater
**************************************************************************

/////////////////////////////////////////////////////////////////////////////
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\base\cluster\clusdisk\tracewpp.ini ===
FUNC CDLOG{LEVEL=DEFAULT}(MSG,...);
FUNC CDLOGF(LEVEL,MSG,...);

WPP_FLAGS(-km);

TYPEMACRO(diskstate,     ItemListLong(DiskOffline,DiskOnline,DiskFailed,DiskStalled) );
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\base\cluster\clusnet\inc\tracewpp.ini ===
FUNC CnTrace(LEVEL,NULL,MSG,...);

WPP_FLAGS(-km);

TYPEMACRO(mmstate, ItemListLong(Alive,Joining,Dead,NotConfigured) );
TYPEMACRO(msgtype, ItemListByte(Invalid,Heartbeat,Poison,Membership) );
TYPEMACRO(ifstate, ItemListLong(Offline,OfflinePending,Unreachable,OnlinePending,Online) );
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\base\cluster\mgmt\clusocm\clusoc.txt ===
;
;   This file is intended to be used by Configure Your Server to install only
;   the Clustering Service optional component.
;
[Components]
cluster=ON
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\base\cluster\mgmt\inc\readme.txt ===
//////////////////////////////////////////////////////////////////////////////
//
//  Copyright (c) 1999-2000 Microsoft Corporation
//
//  Module Name:
//      README.TXT
//
//  Maintained By:
//      Geoffrey Pease (GPEASE) 22-NOV-1999
//
//////////////////////////////////////////////////////////////////////////////

THE QUICK AND DIRTY HOW TO INCLUDE THE DEBUG LIBRARY:

1. Create a DEBUG.CPP and CITRACKER.CPP in your project.

2. In DEBUG.CPP include DebugSrc.CPP from this directory.
   In CITRACKER.CPP include CITrackerSrc.CPP from this directory.
   Example of DEBUG.CPP:
    #include "pch.h"          // your pre-compiled header for your project.
    #include "DebugSrc.cpp"   // pull in the common version.

3. Your code must contain an instance of the following global variables:
        HINSTANCE g_hInstance;  // module instance
        LONG      g_cObjects;   // COM object instance counter

4. Call TraceInitializeProcess( ... ) when you are started. For DLLs, call 
   this in your DllMain( ). For applications, call this in your Win/main( ).

5. Call TraceTerminateProcess( ... ) before you terminate. For DLLs, call this 
   in your DllMain( ) for DLL_PROCESS_DETACH. For applications, call this just 
   before your Win/main( ) returns.
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\base\cluster\resdll\clnetres\clnetres\readme.txt ===
========================================================================
       CLUSTER RESOURCE DLL : DHCP Service (ClNetRes)
========================================================================


AppWizard has created this DHCP Service resource DLL for you.  This
DLL not only demonstrates the basics of using the Cluster API but is
also a starting point for writing your DLL.

This file contains a summary of what you will find in each of the files
that make up your DHCP Service resource DLL.

ClNetRes.c
    This is the main DLL source file.  It contains implementations for
    all required resource DLL entry points along with some helper
    functions.

ClNetRes.rc
    This is a listing of all of the Microsoft Windows resources that
    the program uses.  This file can be directly edited in Microsoft
    Developer Studio.

ClNetRes.def
    This file contains information about the DLL that must be
    provided to run with the cluster software.  It defines parameters
    such as the name and description of the DLL.  It also exports
    functions from the DLL.

/////////////////////////////////////////////////////////////////////////////
Adding your resource type to the cluster:

To add your resource type to the cluster, use cluster.exe.

    cluster resourcetype "DHCP Service" /create /dllname:ClNetRes.dll

If you don't specify a path to your resource DLL, Cluster Server will search
for it first in the cluster directory and then on the system path.

You can now create resources of type "DHCP Service" using either
Cluster Administrator or cluster.exe.  To use Cluster Administrator to
create resources, create a Cluster Administrator Extension DLL for your
resource.  This is highly recommended.  To create a resource using cluster.exe,
use a command like the following:

    cluster resource "My DHCP Service" /create /group:"My Group" /type:"DHCP Service"
    cluster resource "My DHCP Service" /privproperties
        DatabasePath="value"
        BackupPath="value"

/////////////////////////////////////////////////////////////////////////////
Other notes:

AppWizard uses "TODO:" to indicate parts of the source code you should add
to or customize.

AppWizard uses "ADDPARAM:" to indicate parts of the source code you should
modify if you add or remove parameters.

/////////////////////////////////////////////////////////////////////////////
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\base\cluster\resdll\clnetres\clnetresex\readme.txt ===
========================================================================
       CLUSTER ADMINISTRATOR EXTENSION : ClNetRes
========================================================================


AppWizard has created this Cluster Administrator Extension DLL for you.
This DLL demonstrates the basics of modifying the interface of
Cluster Administrator and is also a starting point for writing your DLL.

This file contains a summary of what you will find in each of the files that
make up your Cluster Administrator Extension DLL.

ClNetResEx.h
    This is the main header file for the DLL.  It declares the
    CClNetResApp class.

ClNetResEx.cpp
    This is the main DLL source file.  It contains the class CClNetResApp.
    It also contains the OLE entry points required of inproc servers.

ClNetResEx.rc
    This is a listing of all of the Microsoft Windows resources that the
    program uses.  It includes the icons, bitmaps, and cursors that are stored
    in the RES subdirectory.  This file can be directly edited in Microsoft
    Developer Studio.

res\ClNetResEx.rc2
    This file contains resources that are not edited by Microsoft 
    Developer Studio.  You should place all resources not
    editable by the resource editor in this file.

ClNetResEx.def
    This file contains information about the DLL that must be
    provided to run with Microsoft Windows.  It defines parameters
    such as the name and description of the DLL.  It also exports
    functions from the DLL.

ClNetResEx.clw
    This file contains information used by ClassWizard to edit existing
    classes or add new classes.  ClassWizard also uses this file to store
    information needed to create and edit message maps and dialog data
    maps and to create prototype member functions.

ExtObj.h
    This is the header file which defines the classes which implement the
    COM interfaces by the Microsoft Windows NT Cluster Administrator program
    for adding property pages, wizard pages, or context menu items.  It
    defines the CExtObject class.

ExtObj.cpp
    This is the source file which implements the CExtObject class.

ExtObjID.idl
    This the Interface Definition Language source file for defining
    the COM object implemented by the extension DLL.  This is the object
    that will be loaded by the Cluster Administrator program.

RegExt.h
    This is the header file which declares the functions used to register
    the Cluster Administrator extension DLL with both the cluster and the
    client machine.

RegExt.cpp
    This is the source file which implements registration for the Cluster
    Administrator extension DLL.

/////////////////////////////////////////////////////////////////////////////
Other standard files:

StdAfx.h, StdAfx.cpp
    These files are used to build a precompiled header (PCH) file
    named ClNetRes.pch and a precompiled types file named StdAfx.obj.

Resource.h
    This is the standard header file, which defines new resource IDs.
    Microsoft Developer Studio reads and updates this file.

/////////////////////////////////////////////////////////////////////////////
Property page files:

BasePage.h
    This is the header file which defines a class which provides base
    property page functionality for use by extension property pages.  It
    defines the CBasePropertyPage class.

BasePage.cpp
    This is the source file which implements the CBasePropertyPage class.

BasePage.inl
    This is the source file which implements inline functions for the
    CBasePropertyPage class.

PropList.h
    This is the header file which defines classes for manipulating
    cluster property lists.  It defines the CClusPropList and CObjectProperty
    classes.

PropList.cpp
    This is the source file which implements the CClusPropList and
    CObjectProperty classes for manipulating cluster property lists.

ResProp.h
    This is the header file which defines a property page titled "Parameters"
    to add to property sheets for resources for which your extension DLL is
    written.  It defines the CClNetResParamsPage class.

ResProp.cpp
    This is the source file which implements the CClNetResParamsPage class.

/////////////////////////////////////////////////////////////////////////////
Other notes:

To register your extension DLL so that it can be used with the Cluster
Administrator program, use the RegClAdm.exe SDK tool on each machine on
which the Cluster Administrator is to be executed.  RegCladm.exe is
located in the BIN sub-directory of your Visual C++ Installation Directory
(typically C:\MSDEV\BIN):

    RegClAdm [/cclustername] ClNetResEx.dll

AppWizard uses "TODO:" to indicate parts of the source code you
should add to or customize.

This DLL uses MFC.  Because the Enterprise Edition of Microsoft Windows NT
Server includes MFC DLLs from Visual C++ 4.2, you will need to distribute
MFC42U.DLL from the version of Visual C++ that builds your extension DLL.

/////////////////////////////////////////////////////////////////////////////
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\base\cluster\resdll\dummyex\readme.txt ===
========================================================================
       CLUSTER ADMINISTRATOR EXTENSION : Dummy
========================================================================


AppWizard has created this Cluster Administrator Extension DLL for you.
This DLL demonstrates the basics of modifying the interface of
Cluster Administrator and is also a starting point for writing your DLL.

This file contains a summary of what you will find in each of the files that
make up your Cluster Administrator Extension DLL.

DummyEx.h
    This is the main header file for the DLL.  It declares the
    CDummyApp class.

DummyEx.cpp
    This is the main DLL source file.  It contains the class CDummyApp.
    It also contains the OLE entry points required of inproc servers.

DummyEx.rc
    This is a listing of all of the Microsoft Windows resources that the
    program uses.  It includes the icons, bitmaps, and cursors that are stored
    in the RES subdirectory.  This file can be directly edited in Microsoft
    Developer Studio.

res\DummyEx.rc2
    This file contains resources that are not edited by Microsoft 
    Developer Studio.  You should place all resources not
    editable by the resource editor in this file.

DummyEx.def
    This file contains information about the DLL that must be
    provided to run with Microsoft Windows.  It defines parameters
    such as the name and description of the DLL.  It also exports
    functions from the DLL.

DummyEx.clw
    This file contains information used by ClassWizard to edit existing
    classes or add new classes.  ClassWizard also uses this file to store
    information needed to create and edit message maps and dialog data
    maps and to create prototype member functions.

ExtObj.h
    This is the header file which defines the classes which implement the
    COM interfaces by the Microsoft Windows NT Cluster Administrator program
    for adding property pages, wizard pages, or context menu items.  It
    defines the CExtObject class.

ExtObj.cpp
    This is the source file which implements the CExtObject class.

ExtObjID.idl
    This the Interface Definition Language source file for defining
    the COM object implemented by the extension DLL.  This is the object
    that will be loaded by the Cluster Administrator program.

RegExt.h
    This is the header file which declares the functions used to register
    the Cluster Administrator extension DLL with both the cluster and the
    client machine.

RegExt.cpp
    This is the source file which implements registration for the Cluster
    Administrator extension DLL.

/////////////////////////////////////////////////////////////////////////////
Other standard files:

StdAfx.h, StdAfx.cpp
    These files are used to build a precompiled header (PCH) file
    named Dummy.pch and a precompiled types file named StdAfx.obj.

Resource.h
    This is the standard header file, which defines new resource IDs.
    Microsoft Developer Studio reads and updates this file.

/////////////////////////////////////////////////////////////////////////////
Property page files:

BasePage.h
    This is the header file which defines a class which provides base
    property page functionality for use by extension property pages.  It
    defines the CBasePropertyPage class.

BasePage.cpp
    This is the source file which implements the CBasePropertyPage class.

BasePage.inl
    This is the source file which implements inline functions for the
    CBasePropertyPage class.

PropList.h
    This is the header file which defines classes for manipulating
    cluster property lists.  It defines the CClusPropList and CObjectProperty
    classes.

PropList.cpp
    This is the source file which implements the CClusPropList and
    CObjectProperty classes for manipulating cluster property lists.

ResProp.h
    This is the header file which defines a property page titled "Parameters"
    to add to property sheets for resources for which your extension DLL is
    written.  It defines the CDummyParamsPage class.

ResProp.cpp
    This is the source file which implements the CDummyParamsPage class.

/////////////////////////////////////////////////////////////////////////////
Other notes:

To register your extension DLL so that it can be used with the Cluster
Administrator program, use the RegClAdm.exe SDK tool on each machine on
which the Cluster Administrator is to be executed.  RegCladm.exe is
located in the BIN sub-directory of your Visual C++ Installation Directory
(typically C:\MSDEV\BIN):

    RegClAdm [/cclustername] DummyEx.dll

AppWizard uses "TODO:" to indicate parts of the source code you
should add to or customize.

This DLL uses MFC.  Because the Enterprise Edition of Microsoft Windows NT
Server includes MFC DLLs from Visual C++ 4.2, you will need to distribute
MFC42U.DLL from the version of Visual C++ that builds your extension DLL.

/////////////////////////////////////////////////////////////////////////////
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\base\cluster\resdll\vsstask\placefil.txt ===
;
; volume shadow copy service task resource - minimal task scheduler resource
; for VSS. Should go away when real task scheduler resource is available.
;
vsstask.dll     retail
vsstskex.dll   retail
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\base\crts\log_64.txt ===
******************************************************************************
******************************************************************************
***                                                                        ***
***   This file contains the change history for the initial Win64 version  ***
***   of the C/C++ Run-Time Libraries (that is, modifications since v6.0). ***
***   The file should always be edited at the top so that the most recent  ***
***   changes are at the beginning of the file (immediately after this     ***
***   comment) and the oldest changes are at the end.                      ***
***                                                                        ***
******************************************************************************
******************************************************************************

-----------------------------------------------------------------

Fri 26-Feb-99   (GregF)

crtw32\h\sys\stat.h, timeb.h, types.h, utime.h
libw32\include\sys\stat.h, timeb.h, types.h, utime.h
    Fixed the time_t typedef to be __int64

-----------------------------------------------------------------

Thu 25-Feb-99   (rlanser)

crtw32\misc\ia64\longjmp.s
    Bug occurs when the local RSE frame spans across the boundary
    where the RNAT register is saved.  The fix is to replace the
    line at label Lj40.

	*****
	Lj40:
        	cmp.gt     pt2, pt3 = t5, zero
        	;;
	*****
	Lj40:
        	cmp.le     pt2, pt3 = 63, t5
	        ;;
	*****

-----------------------------------------------------------------

Tue 23-Feb-99   (rlanser)

crtw32\startup\ia64\chkstk.s
    Add section attributes.

-----------------------------------------------------------------

Tue 11-Feb-99   (rlanser)

crtw32\h\trnsctrl.h
crtw32\eh\frame.cpp
crtw32\eh\ia64\trnsctrl.cpp
    IA64 EH catch bug fixes.

-----------------------------------------------------------------

Tue 02-Feb-99   (rlanser)

libw32\msvcrt.src
    Add IA64 generic versions of single precision math routines.

-----------------------------------------------------------------

Thu 31-Jan-99   (rlanser)

fpw32\tran\ia64
    Add generic versions of single precision math routines.
fpw32\tran\lsources
    Add IA64 generic versions of single precision math routines.
srcrel\pd-b
        Add IA64 generic versions of single precision math routines.

-----------------------------------------------------------------

Thu 28-Jan-99   (rlanser)

crtw32\h\math.h
libw32\include\math.h
    IA64:  Use inline version of modff and hypotf.

-----------------------------------------------------------------

Tue 26-Jan-99   (rlanser)

makefile
makefile.inc
srcrel\objects.mkf
srcrel\pd-b
crtw32\startup\lsources
crtw32\startup\ia64\chkstk.s
    IA64:  Add _chkstk

-----------------------------------------------------------------

Thu 21-Jan-99   (rlanser)

makefile.sub
    IA64:  Add -D__assembler to .s preprocessing and hazard
           checking to ias.

-----------------------------------------------------------------

Tue 21-Jan-99   (rlanser)

fpw32\tran\ia64\frnd.s
    Add stop bits for assembler hazard.

-----------------------------------------------------------------

Thu 21-Jan-99   (GregF)

crtw32\startup\tlssup.c
        Added cast

-----------------------------------------------------------------

Tue 12-Jan-99   (rlanser)

crtw32\h\math.h
libw32\include\math.h
    Added IA64 back to the single precision math routine
    exclusion (intrinsics for IA64 also).

-----------------------------------------------------------------

Tue 15-Jan-99   (GregF)

crtw32\convert\atof.c, mbstowcs.c, strtod.c, wcstombs.c
crtw32\dos\fullpath.c
crtw32\eh\oldexcpt.cpp, oldexcpt.cpp
crtw32\exec\cenvarg.c
crtw32\h\crtdbg.h, direct.h, internal.h, malloc.h, mbstring.h, memory.h, new.h,
         nlsint.h, search.h, stddef.h, stdexcpt.h, stdio.h, stdlib.h, string.h
         time.h, wchar.h
crtw32\heap\calloc.c, expand.c, malloc.c, new.cpp, realloc.c, sbheap.c
crtw32\iostream\_strstre.cpp, ostream.cpp, stdiostr.cpp
crtw32\lowio\cputs.c
crtw32\mbstring\mbsnbcol.c, mbsnbico.c, mbsncoll.c, mbsnicol.c
crtw32\misc\bsearch.c, dbgheap.c, dbgnew.cpp, dbgrpt.c, getenv.c, onexit.c,
        perror.c, qsort.c, setlocal.c, w_env.c, wperror.c, wsetloca.c
crtw32\startup\crt0msg.c, stdenvp.c
crtw32\stdcpp\xstrcoll.c, xstrxfrm.c, xwcscoll.c, xwcsxfrm.c
crtw32\stdio\fputs.c, fputws.c, _flsbuf.c, fread.c, fwrite.c, output.c, puts.c,
        setvbuf.c, sprintf.c, sscanf.c, swprintf.c, swscanf.c, tempnam.c,
        vsprintf.c, vswprint.c
crtw32\string\strncoll.c, strnicol.c, strxfrm.c, wcsncoll.c, wcsnicol.c,
        wcsxfrm.c
crtw32\time\wcsftime.c
libw32\msvcrt.src
libw32\include\crtdbg.h, direct.h, malloc.h, mbstring.h, memory.h, new.h,
        search.h, stddef.h, stdexcpt.h, stdio.h, stdlib.h, string.h, time.h,
        wchar.h
    Large package of mostly small changes to accomodate changing size_t to be
    a 64-bit type. 

libw32\include\setjmp.h, vararg.h
    Brought into sycnc with their uncleansed counterparts (in crtw32\h).

-----------------------------------------------------------------

Mon 14-Dec-98   (JamesMa)

srcrel\pd-b
    Removed references to crtw32\eh\axp64 directory, which v-kimpe
    apparently removed from VSS project on 12/7/98.

-----------------------------------------------------------------

Fri 11-Dec-98   (JamesMa)

IA64 merge:

makefile
    set _BUILD_IA64 switch, remove chkstk.obj
makefile.inc
    add memcpys.obj, memsets.obj; remove chkstk.obj, memcpy.obj, memset.obj
crtw32\dllstuff\crtexe.c, crtdll.c, cinitexe.c
crtw32\eh\unhandld.cpp
crtw32\startup\crt0dat.c
    restored section attributes for CRT$X** sections.
crtw32\eh\frame.cpp
crtw32\eh\ia64\ehstate.cpp, handlerc.cpp, trnsctrl.obj, handlers.s
    merged in changes from IA64CRT tree.
crtw32\eh\lsources
    Added ehstate.obj, handlers.obj & trnsctrl.obj
crtw32\heap\calloc.c, expand.c, malloc.c, realloc.c
    Disabled small-block heap for 0-sized allocations.
crtw32\misc\lsources
    Added memcpys.obj & memsets.obj
crtw32\misc\ia64\memcpys.s, memsets.s
    New files
crtw32\startup\lsources, startup.mkf
    Removed chkstk.obj
crtw32\string\lsources
    removed memcpy.obj & memset.obj
crtw32\string\sources.nt
    removed memcpys.s & memsets.s
crtw32\string\ia64
    Removed memcpys.s & memsets.s
fpw32\tran\lsources
    Added emfloat.obj
fpw32\tran\ia64\filter.c
    Merged in changes from IA64CRT tree.
libw32\msvcrt.src
    Added ??2@YAPEAXI@Z & ??3@YAXPEAX@Z to exports.
srcrel\pd-b
    Added crtw32\misc\ia64\memcpys.s, crtw32\misc\ia64\memsets.s, libw32\lib\ia64
    Removed crtw32\alpha64, crtw32\alpha64\chkstk.s, crtw32\string\ia64\memcpy.s, crtw32\string\ia64\memset.s
srcrel\objects.mkf
    Added memcpys.obj & memsets.obj, removed chkstk.obj

-----------------------------------------------------------------

Wed 21-Jan-98   (Gregf)

crtw32\h\setlocal.h
crtw32\misc\nlsdata2.c, setlocal.c
crtw32\string\strcoll.c, stricoll.c, strncoll.c, strnicol.c, strxfrm.c,
        wcscoll.c, wcsicoll.c, wcsncoll.c, wcsnicol.c, wcsxfrm.c
crtw32\stdcpp\xstrcoll.c, xstrxfrm.c, xwcscoll.c, xwcsxfrm.c
    Added new internal global, __lc_collate_cp, to keep track of and use the
    proper codepage for LC_COLLATE stuff. This fixes VC98 bug #25645.

crtw32\time\ftime.c
    Completely rewritten to fix the determination of DST status. This fixes
    VC98 bug #25763.

    Changes copied over from crt60 tree.

-----------------------------------------------------------------

Mon 15-Dec-97   (Gregf)

crtw32\misc\initctyp.c
    When no codepage is defined, use LOCALE_IDEFAULTANSICODEPAGE, rather than
    LOCALE_IDEFAULTCODEPAGE.

crtw32\stdcpp\xstrcoll.c, xstrxfrm.c, xwcscoll.c, xwcsxfrm.c
crtw32\string\strcoll.c, stricoll.c, strncoll.c, strnicol.c, strxfrm.c,
              wcscoll.c, wcsicoll.c, wcsncoll.c, wcsnicol.c, wcsxfrm.c
    Use __lc_codepage in the locale-dependent string functions.

-----------------------------------------------------------------

Thu 11-Dec-97   (Gregf)

crtw32\stdhpp\functional
    Added const to () definition in mem_fun* (e.g., mem_fun_t) template classes.
    This fixes VS 98 bug #21393.

-----------------------------------------------------------------

Tue 09-Dec-97   (Gregf)

crtw32\heap\sbheap.c
    Release the address space reserved for a region when that region is
    is discarded. This fixes VS98 #21538.

-----------------------------------------------------------------

Fri 07-Nov-97   (GregF)

crtw32\mbstring\mbsncoll.c
    Small fix for POSIX build from Roger Lanser (already in ia64 tree).

-----------------------------------------------------------------

Thu 06-Nov-97   (GregF)

crtw32\heap\calloc.c, expand.c, free.c, malloc.c, msize.c, realloc.c
    Small fixes for POSIX build from Roger Lanser.

crtw32\h\wchar.h
libw32\include\wchar.h
    Enclosed macro and inline defs of isleadbyte() in #ifndef 
    _CTYPE_DISABLE_MACROS. Affected NT build.

-----------------------------------------------------------------

Mon 22-Oct-97   (GregF)

crtw32\stdhpp\list
libw32\include\list
    Added constructor (for list) for a pair of const _Ty * -s. This fixes
    VS98 bug #1478.

-----------------------------------------------------------------

Tue 21-Oct-97   (JamesMa)

log.txt -> log_v60.txt
    Renamed old LOG.TXT from V6.0 and started a new LOG.TXT (this file).

-----------------------------------------------------------------


******************************************************************************
******************************************************************************
***									   ***
***  This file contains the history for the initial Win64 CRTs (relative   ***
***  to v6.0). The file should always be edited at the top so that the     ***
***  most recent changes are at the beginning of the file and the oldest   ***
***  changes are at the end of the file.  This comment marks the end.      ***
***									   ***
******************************************************************************
******************************************************************************
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\base\crts\log.txt ===
***************************************************************************
***************************************************************************
***                                                                     ***
***   This file contains the change history for the MSVC++ v7.1 C/C++   ***
***   Run-Time Libraries (that is, modifications since since 7.0).      ***
***   The file should always be edited at the top so that the most      ***
***   recent changes are at the beginning of the file (immediately      ***
***   after this comment) and the oldest changes are at the end.        ***
***                                                                     ***
***************************************************************************
***************************************************************************

-----------------------------------------------------------------

Tue 07-May-02   (Gautamb)

crtw32\string\wcscat.c wcscmp.c wcslen.c wcsset.c

    Added #pragma function for wcscat, wcscmp, wcscpy, wcslen, wcsset
    which are intrinsic on IA64.

-----------------------------------------------------------------

Mon 06-May-02   (Gautamb)

crtw32\time\strftime.c

    Fix for VS7#513874. earlier strftime() truncated am/pm string to 2 char,
    which was wrong e.g. in Mexican/Spanish locale.
 

-----------------------------------------------------------------

Mon 06-May-02   (Gautamb)
crtw32\h\ctype.h
crtw32\misc\ctype.c, nlsdata2.c

    Fix for VS7#339660, by adding extra array of __newctype with 384
    elements so that bbt can't break it up for static build. For DLL
    build, things remain as they were, we will need to add KeepTogether
    and KeepAlive for _ctype and __tmpctype.

-----------------------------------------------------------------

Fri 03-May-02   (Gautamb)
crtw32\misc\setenv.c

    VS7#340665, Putting off prefast warnings.

-----------------------------------------------------------------

Thu 02-May-02   (Gautamb)
crtw32\rtc\init.cpp

    VS7#339926, Wrapped all the locks, unlocks in try finally.

-----------------------------------------------------------------

Thu 02-May-02   (Gautamb)

crtw32/eh/typinfo.cpp typname.cpp
crtw32/h/mtdll.h
crtw32/iostream/mtlock.c
crtw32/lowio/cgets.c cgetws.c dup.c getch.c getwch.c osfinfo.c putch.c
crtw32/misc/dbgdel.cpp winsig.c
crtw32/startup/crt0dat.c mlock.c
crtw32/stdcpp/_tolower.c _toupper.c xmbtowc.c	xstrcoll.c xstrxfrm.c xwcscoll.c xwcsxfrm.c xwctomb.c
crtw32/time/tzset.c

    VS7#339926, Wrapped all the locks, unlocks in try finally fot MT version.

-----------------------------------------------------------------

Wed 01-May-02   (Gautamb)

crtw32\misc\initctype.c ctype.c setlocal.c
crtw32\string\ i386\_ctype.asm ia64\_ctype.s
crtw32\h\ctype.h, setlocal.h
srcrel\pd-b
makefile.inc
doc\copysource.bat

    VS7#339660. Modified the way isupper or any isxx macro would look to _ctype
    array. Previously there was no way to distinguish between EOF and 0xff. Now
    we have moved _ctype to asm files so that _ctype points in middle of array
    with first 127 elements ranging from 0x80 to 0xfe, element at _ctype (EOF) then
    256 elements.

-----------------------------------------------------------------

Wed 01-May-02   (PhilipLu)

makefile

    Add loadcfg.obj to the chelper.lib compiler helpers lib.

-----------------------------------------------------------------

Tue 30-Apr-02   (PhilipLu)

crtw32\convert\xtow.c

    VS7#525627 Calling _itow with a radix of 2 will overrun an internal
    buffer used to convert ANSI to Unicode.

crtw32\stdio\fdopen.c

    VS7#526205 Passing an illegal mode string to _fdopen would hit an AV
    that left a file critsec owned, leading to deadlocks.

crtw32\misc\dbgheap.c

    VS7#530559 There's a potential deadlock between _HEAP_LOCK and
    _SETLOCALE_LOCK when _CrtMemDumpAllObjectsSince calls isprint, if the
    locale is being changed by another thread.

crtw32\heap\resetstk.c

    VS7#530044 _resetstkoflw will put the guard page back too close to the
    end of the stack allocation block, so the next stack overflow may not
    have any stack available for exception handling of the overflow.  The
    guard page should be one page higher than currently.

crtw32\misc\i386\eh3valid.c

    VS7#522476 The new SafeSEH _except_handler3 validation code calls
    VirtualQuery, which takes a kernel trip and is thus much slower than the
    old version.  The URT had an EH-heavy test degrade by up to 400%.
    Recover the perf by adding an LRU of recently-validated pages holding
    scopetables, avoiding the VirtualQuery call.

libw32\msvcprt.src, sysprt.src, sysptr64.src

    VS7#514769 The compiler is going to stop automatically issuing the
    /export directives to supply the old name decorations for exported
    template functions, so manually add them to the .def file for the
    C++ Standard Library.

-----------------------------------------------------------------

Thu 05-Apr-02   (Gautamb)

crtw32\misc\setlocal.c

    VS7#342716. Fixed buffer overrun bug in __lc_strloc function.

crtw32\startup\tidtable.c
crtw32\h\mtdll.h

    VS7#508599. All the calls to Tls and Fls go through same function
    pointers, this way we can have consistiency which avoids the kind of
    problems that appverifier was running into.

-----------------------------------------------------------------

Thu 04-Apr-02   (PhilipLu)

crtw32\iostream\ostrptr.cpp

    VSW#2505 Old iostream ostream::operator<<(const void *) has a buffer
    overrun on 64-bit platforms.

libw32\msvcrt.src, syscrt.src, syscrt64.src

    VSW#13883 Names defined in crtw32\misc\ia64\miscs.s need to be added
    to the msvcr*.dll .def files so they are exported.

crtw32\stdhpp64\new
libw32\inc64\new

    VSW#17046 The old VC6 version of <new> needs to pick up a fix from
    the VC7 version, putting everything related to std::nothrow_t under
    a "#ifndef __NOTHROW_T_DEFINED".

-----------------------------------------------------------------

Mon 01-Apr-02   (PhilipLu)

doc\copysrc.bat

    Need to copy new files loadcfg.c and secchk.c for user rebuild of CRT.

-----------------------------------------------------------------

Wed 27-Mar-02   (PhilipLu)

crtw32\stdhpp64\xlocnum
libw32\inc64\xlocnum

    VS98#68551 Fix buffer overrun in fixed-format floating point output
    in the old 6.0 Std C++ Library sources.

-----------------------------------------------------------------

Tue 26-Mar-02   (PhilipLu)

crtw32\string\lsources, sources.nt,
crtw32\string\ia64\memcpy.s, memcpyi.s [NEW], memset.s, memseti.s [NEW],
srcrel\objects.mkf, pd-b,
makefile, makefile.inc,

    Modify previous checkin of McKinley versions of memcpy & memset.
    Rename the Itanium versions to _mem{cpy,set}_ita, with a leading
    underscore for standards conformance.  Split the Itanium versions out
    into their own objects, so we don't drag them into an image all the
    time.  Intentionally do not export these Itanium versions from the
    CRT DLLs, but just leave them as static link components of the implibs,
    so we can drop support for them in the future.

-----------------------------------------------------------------

Wed 20-Mar-02   (PhilipLu)

crtw32\stdhpp\algorithm, iterator, xutility, yvals.h
crtw32\tools\win32\relinc.if
libw32\include\algorithm, iterator, xutility, yvals.h

    (integrated from vs7evestage 112160, 112380, 113190)
    Add part of the partial specialization changes from the latest
    Dinkumware drop.  Don't have time for a full integration right now,
    but we need to get the changes dependent on iterator_trait partial
    specializations in to unblock work on the front-end and at alpha test
    sites.

-----------------------------------------------------------------

Wed 20-Mar-02   (PhilipLu)

    All integrated from Everett:

crtw32\eh\i386\ehprolg2.c, trnsctrl.cpp
crtw32\h\exsup.inc
crtw32\misc\lsources
crtw32\misc\i386\eh3valid.c [NEW], exsup3.asm
crtw32\misc\dll\sources
crtw32\misc\dlllib\sources
crtw32\misc\mt\sources
crtw32\misc\nt\sources
crtw32\misc\psx\sources
crtw32\misc\st\sources
srcrel\objects.mkf, pd-b
makefile, makefile.inc

    Safe exceptions work part 3.  Protect all CRT exception handlers
    against hacker attacks.  Add several tests to validate the registration
    node for _except_handler3.  Prevent _except_handler3 from leaking
    useful data in registers to exploit code.  Add the random security
    cookie into the internal handlers in trnsctrl.cpp to prevent spoofing.

crtw32\eh\special.mak
crtw32\misc\special.mak [NEW]
libw32\tools\i386\aliasobj.exe
libw32\tools\ia64\aliasobj.exe
srcrel\pd-b
makefile.sub

    Safe exceptions work part 2.  Using one-off build rules in special.mak,
    add .sxdata for the 2 internal exception handlers in trnsctrl.cpp and
    the 1 handler in exsup.asm, using the new 'sxgen' obj munging tool
    (this is temporary until we get a new assembler directive to do this).
    Globally add the new assembler switch /safeseh to put the @feat.00
    symbol in all asm-built objs.  Check in new versions of aliasobj.exe
    which create the aliases with @feat.00 in them so they won't get in the
    way of creating safe images.

crtw32\h\internal.h
crtw32\misc\lsources, secchk.c [NEW], seccinit.c, seccook.c
crtw32\misc\i386\loadcfg.c [NEW]
crtw32\misc\dll\sources
crtw32\misc\dlllib\sources
crtw32\misc\mt\sources
crtw32\misc\nt\sources
crtw32\misc\psx\sources
crtw32\misc\st\sources
srcrel\pd-b
makefile, makefile.inc

    Safe exceptions work part 1.  Add the default load config struct to
    be pulled in by the linker when .sxdata is present.  Split seccook.c
    in two, putting most of the code in secchk.c, and leaving just the
    definition of __security_cookie in seccook.c, so a build without /GS
    but with .sxdata won't drag in all the /GS code due to the reference
    to __security_cookie in the load config.  Finally, don't reinitialize
    __security_cookie if it has already been initialized (generally, by
    the OS loader).

-----------------------------------------------------------------

Wed 20-Mar-02   (PhilipLu)

crtw32\stdcpp\locale.cpp, locale0.cpp, wlocale.cpp
crtw32\stdhpp\fstream
libw32\include\fstream

    (integrated from 03-Mar-02 checkin @110182 in 7.01 tree)
    VS7#319508 Unnecessary dependencies between parts of the C++ Std Lib
    almost tripled the size of a trivial Hello World app using I/O Streams
    in VC7.0 (64K to 168K).  Remove those dependencies by getting rid of
    an unneeded element std::locale std::basic_filebuf::_Loc, replacing by
    a same sized dummy to keep object compatibility with 7.0, and moving
    some definitions of various std::locale::id facet IDs to a central
    location.

-----------------------------------------------------------------

Wed 13-Mar-02   (v-vadimp)

crtw32\misc\ia64\jmpuwind.s
crtw32\string\ia64\strcat.s, strcmp.s, strcpy.s, strlen.s
    added missing unwind descriptors

crtw32\string\ia64\memcpy.s, memset.s
    added McKinley versions; Itanium versions renamed to *_ita

-----------------------------------------------------------------

Wed 13-Mar-02   (PhilipLu)

crtw32\dllstuff\crtlib.c

    VS7#338020 Change TlsSetValue to FLS_SETVALUE.  Missed one spot when
    the per-fiber data change was made.

-----------------------------------------------------------------

Mon 04-Mar-02   (PhilipLu)

crtw32\h\malloc.h, stdlib.h
libw32\include\malloc.h, stdlib.h
libw32\inc64\malloc.h, stdlib.h
srcrel\msvc40.if

    Add _CRTNOALIAS and _CRTRESTRICT declspecs to C library heap APIs.
    These are only in the user headers, and turned off in the CRT build,
    since there's no guarantee they are true internal to the CRT, since
    e.g. noalias means in effect no side-effects, but the CRT can certainly
    see side-effects in its internal heap implementations.  Those side-
    effects just aren't visible to users.

-----------------------------------------------------------------

Thu 14-Feb-02   (PhilipLu)

crtw32\stdhpp\deque, list, string, utility, vector, xhash, xstring, xtree
libw32\include\deque, list, string, utility, vector, xhash, xstring, xtree

    VS7#338170 New compiler conformance work means we need to use a
    conformant version of std::swap specializations for various collection
    classes, instead of the "friend void swap" class member declaration
    that was used before as a hack around missing partial ordering.

-----------------------------------------------------------------

Wed 30-Jan-02   (gautamb)

crtw32\h\setloc.h, mtdll.h
crtw32\misc\nlsdata2.c, setloc.c, getqloc.c

    VSWhidbey#13307. Fixed the problem due to static variables in getqloc.
    Made all static variables by setlocale to per thread locale this is done
    to minimize the code under setlocale lock.

-----------------------------------------------------------------

Wed 23-Jan-02   (PhilipLu)

makefile

    Add -debugtype:pdata for 64-bit SysCRT targets

-----------------------------------------------------------------

Tue 22-Jan-02   (gautamb)

crtw32\h\setloc.h
crtw32\misc\nlsdata2.c, setloc.c

    Changed LCID *__lc_handle to LCID __lc_handle[]. This change was made
    for backward compatiblity.

-----------------------------------------------------------------

Tue 18-Dec-01   (gautamb)

crtw32\h\ctype.h, locale.h, setlocal.h
crtw32\misc\nlsdata2.c, setlocal.c, wsetloca.c
crtw32\startup\tidtable.c
crtw32\stdhpp\wctype.h
crtw32\stdhpp64\wctype.h
libw32\inc64\locale.h
libw32\include\locale.h, wctype.h

    Added _configthreadlocale with all the flags needed to configure the thread
    locale.

-----------------------------------------------------------------
Mon 17-Dec-01   (Gautamb)

makefile

    Added chelper.lib as crt build library. This library will be used for 
    compiler helper functions.

-----------------------------------------------------------------

Tue 30-Nov-01   (PhilipLu)

makefile, makefile.inc
crtw32\helper\ia64\divhelp.c [NEW]
crtw32\helper\lsources, sources.nt
doc\copysrc.bat
srcrel\pd-b

    VSWhidbey#2362 Add compiler helpers for -Os div/rem operations.

-----------------------------------------------------------------

Wed 28-Nov-01   (gautamb)

fpw32\tran\amd64\fpsr.asm

    VS7.1#2727. Added prologue to the _get_fpsr. All other functions were leaf
    functions that did not require prologue.

-----------------------------------------------------------------

Mon 26-Nov-01   (gautamb)

libw32\msvcrt.src, syscrt.src, syscrt64.src

    VS7.1#4730,Added rotl64, rotr64, byteswap routines and abs64 to crt exports.

-----------------------------------------------------------------

Wed 21-Nov-01   (gautamb)

crtw32\convert\_ctype.c, _mbslen.c, atox.c, gcvt.c, isctype.c, iswctype.c,
    mblen.c, mbstowcs.c, mbtowc.c, strtol.c, strtoq.c, tolower.c, toupper.c,
    towlower.c, towupper.c, wcstol.c, wcstombs.c, wcstoq.c, wctomb.c
crtw32\dllstuff\crtlib.c
crtw32\h\ctype.h, mtdll.h, nlsint.h, setlocal.h, stdlib.h, wchar.h
crtw32\mbstring\mbctype.c
crtw32\misc\a_cmp.c, a_loc.c, a_map.c, a_str.c, ctype.c, initcoll.c, initctyp.c,
    initmon.c, initnum.c, inittime.c, lconv.c, nlsdata2.c, setlocal.c, w_cmp.c,
    w_loc.c, w_map.c, w_str.c
crtw32\startup\crt0dat.c, tidtable.c
crtw32\stdcpp64\_tolower.c, _toupper.c, xmbtowc.c, xstrcoll.c, xstrxfrm.c,
    xwctomb.c
crtw32\stdhpp\wctype.h
crtw32\stdio\input.c, output.c
crtw32\string\memicmp.c, strcoll.c, stricmp.c, stricoll.c, strlwr.c, strncoll.c,
    strnicmp.c, strnicol.c, strupr.c, strxfrm.c, wcscoll.c, wcsicmp.c,
    wcsicoll.c, wcslwr.c, wcsncoll.c, wcsnicmp.c, wcsnicol.c, wcsupr.c, wcsxfrm.c
crtw32\time\strftime.c, tzset.c, wcsftime.c
fpw32\conv\cvt.c, strgtold.c
libw32\inc64\ctype.h, stdlib.h, wchar.h, wctype.h
libw32\include\ctype.h, stdlib.h, wchar.h, wctype.h, syscrt64.src
srcrel\msvc40.if

    Added ground work for implementing true per thread locale. In this ground
    work, all the dependencies of setlocale on global variables is elemenated,
    instead they modify locale struct passed to them. This way any change will be
    limited to this particular locale struct.

-----------------------------------------------------------------

Tue 20-Nov-01   (gautamb)
crtw32\h\float.h

    Added _CW_DEFAULT for AMD64.

crtw32\convert\fcvt.c, gcvt.c
crtw32\h\fltintrn.h
crtw32\stdio\output.c
fpw32\conv\cfin.c, cfout.c cvt.c fltinf.c intrncvt.c
fpw32\include\cv.h
srcrel\msvc40.if

    Replaced DOUBLE with _CRT_DOUBLE and FLOAT with _CRT_FLOAT. The reason behind
    this is that windows.h used DOUBLE and FLOAT.

-----------------------------------------------------------------

Thu 08-Nov-01   (gautamb)

crtw32\h\sect_attribs.h
crtw32\misc\setlocal.c
crtw32\startup\crt0.c, crt0dat.c, stdenvp.c
crtw32\stdio\_file.c

    Changes for minimizing CRT leaks in debug builds.

-----------------------------------------------------------------

Tue 06-Nov-01   (PhilipLu)

crtw32\h\malloc.h
crtw32\heap\heapinit.c
libw32\include\malloc.h
libw32\inc64\malloc.h
libw32\msvcrt.src

    VS98#67228 Add new API _get_heap_handle, so IIS can enable the new
    Low Fragmentation Heap on the CRT heap.

-----------------------------------------------------------------

Fri 19-Oct-01   (PhilipLu)

crtw32\misc\i386\sehprolg.asm

    VS7#313643 __SEH_prolog was setting FS:0, establishing a new link in
    the EH handler frame chain, before it finished initializing the new
    frame.  If a stack overflow then happened in __SEH_prolog before the
    frame was fully initialized, the stack overflow exception was
    dispatched to __except_handler3 with bogus data, causing recursing
    AVs that exhausted the stack and the process was silently terminated.

-----------------------------------------------------------------

Tue 16-Oct-01   (gautamb)

crtw32\dllstuff\crtlib.c
crtw32\h\mtdll.h
crtw32\startup\dllcrt0.c, thread.c, threadex.c, tidtable.c

    Enabled fiber aware CRT. Fixes fiber related bugs on OS with new fiber
    related APIs. Mostly the changes were related to per thread data
    allocations.  If possible these changes will use per thread data on per
    fiber basis.

-----------------------------------------------------------------

Sun 23-Sep-01   (gautamb)

fpw32\tran\ia64\acos.s, acosf.s, asin.s, asinf.s, atan.s, atan2.s, atan2f.s,
    atanf.s, ceilf.s, cosh.s, coshf.s, exp.s, expf.s, fabs.s, fabsf.s, floor.s,
    floorf.s, fmod.s, fmodf.s, isnan.s, isnanf.s, ldexp.s, ldexpf.s,
    libm_atan2_reg.s, libm_error.c, libm_reduce.s, log.s, logb.s, logbf.s,
    logf.s, modf.s, modff.s, pow.s, powf.s, sincosf.s, sinh.s, sinhf.s, sqrt.s,
    sqrtf.s, tan.s, tanf.s
srcrel\pd-b

[Added:]
fpw32\tran\ia64\tanh.s, tanhf.s

[Deleted:]
fpw32\tran\ia64\tanhf.c

    Updating math library to intel version 5.6. Also adding tanh.s to fix
    VS7#273640. Modifying libm_error.c to fix VS7#132405.

-----------------------------------------------------------------

Fri 21-Sep-01   (GautamB)

crtw32\eh\frame.cpp, ia64\ehstate.cpp trnsctrl.cpp
crtw32\h\trnsctrl.h ehstate.h mtdll.h

    New C++ implementation for IA64.
 
-----------------------------------------------------------------

Fri 21-Sep-01   (GautamB)

crtw32\eh\i386\trnsctrl.cpp

    VS7#305455. Temp fix for C++Eh to works with apps with fibers. This is
    more of a reverse compatiblith issue as this fix doesn't really fix the 
    problem in C++Eh when fiber is switched between C++Eh (mostly when
    executing in catch block).

-----------------------------------------------------------------

Thu 20-Sep-01   (PhilipLu)

crtw32\eh\frame.cpp
langapi\include\ehdata.h

    Buildfix - the 18-Sep-01 checkin for exception specification support
    broke the compiler backend.  We can't redefine the value of
    EH_MAGIC_NUMBER1 and add EH_MAGIC_NUMBER1_OLD.  Instead, leave
    EH_MAGIC_NUMBER1 with the original value and add EH_MAGIC_NUMBER2.
    The new magic number should only be used in function info that is
    using the new ES data.  The throw object should still be using the
    old magic number.

crtw32\misc\ia64\longjmp.s

    VS7#304879 Port IA64 longjmp bugfix from NT CRT tree.  The wrong value
    for RNAT can be loaded in some cases.

crtw32\string\ia64\strlen.s

    VS7#304529 IA64 strlen.s is returning the wrong result for strings
    over 4G long.

-----------------------------------------------------------------

Tue 18-Sep-01   (GautamB)

crtw32\string\ia64\memcpy.s

    Optimized version of memcpy.s from eugene, with no use of r23/r24.

-----------------------------------------------------------------

Tue 18-Sep-01   (GautamB)

crtw32\h\mtdll.h
crtw32\eh\frame.cpp, ia64\trnsctrl.cpp, i386\trnsctrl.cpp
libw32\msvcrt.src, syscrt.src, syscrt64.src

    Added Support for ExceptionSpecification. Changes mainly made by Arturl.

-----------------------------------------------------------------

Fri 12-Sep-01   (GautamB)

crtw32\string\ia64\memcpy.s

    Optimized version of memcpy.s from eugene.

-----------------------------------------------------------------

Wed 29-Aug-01   (PhilipLu)

crtw32\stdhpp64\complex
libw32\inc64\complex

    Buildfix for IA64 Sys CRTs build with 7.1 compiler.  Fix bug VS7#302850
    in the old C++ headers as a workaround for a build breakage due to
    unneccesary code in dlldef.cpp I'd rather not remove right now.

-----------------------------------------------------------------

Tue 21-Aug-01   (PhilipLu)

libw32\msvcirt.rc, msvcprt.rc, msvcrt.rc, syscrt.rc, sysirt.rc, sysprt.rc

    Update the version info to 7.10 for V.Next.

-----------------------------------------------------------------

Tue 14-Aug-01   (PhilipLu)

crtw32\stdio\output.c

    VS7#298618 The local variable 'buffer' in _output() is not protected
    against buffer overruns/underruns on extreme precision values.
    Underruns can occur on integer conversions, which can trigger stack
    overflows (e.g. %.2000000d).  Overruns can occur on FP conversions,
    which can overwrite the return address 0x30303030 and crash  (e.g.
    %.2000f).  Cap the precision at 512.  For FP conversions, allocate
    the buffer dynamically if 'buffer' still isn't enough (a conversion
    of %.512f can actually require 815 chars).

-----------------------------------------------------------------

Thu 09-Aug-01   (PhilipLu)

fpw32\tran\i386\log_pentium4.asm, log10_pentium4.asm

    VS7#298130 Work around unexpected BBT behavior.  16 bytes of data at
    label place_R was being removed because place_R is never referenced
    by name.  But that data was being loaded as edx+place_L with EDX==16.
    Get rid of the place_R labels so BBT won't assume the data there is
    unused.

crtw32\stdhpp64\locale
libw32\inc64\locale

    Buildfix for IA64 SysCRT - disable new 7.1 warning C4675 about Koening
    lookup changing the overload resolution.

-----------------------------------------------------------------

Wed 01-Aug-01   (PhilipLu)

crtw32\misc\setlocal.c, wsetloca.c

    VS7#283330 Prompted by QFE VS98#67185.  _wsetlocale can do a double
    free and crash when called from multiple threads at the same time.
    Add a lock on _SETLOCALE_LOCK to prevent that.  Also, note that the
    return string from _wsetlocale will currently be freed by a later call
    to _wsetlocale, which is another potential crash (much rarer).  To
    avoid that, only allocate the return value buffer once, the first
    time through.  The same problem exists for setlocale, but that's not
    being fixed here, as it's a much riskier fix and this customer isn't
    open to that (as long as he's just using _wsetlocale).  See bug
    VS7#294369 for that issue, to be fixed in VC7.1.

    Also fix a related problem noticed in setlocale(...,NULL).  That
    codepath wasn't acquiring _SETLOCALE_LOCK because it thought it would
    just retrieve info.  That's not true - it'll also potentially allocate
    the global buffer for the return value, so failing to lock can lead
    to multiple threads in setlocale modifying global variable
    __lc_category[category].locale at the same time.

crtw32\stdhpp\xdebug, xmemory
libw32\include\xdebug, xmemory

    VS7#289498 Reported by a beta customer.  We had a template method
        template<T> std::allocator::allocate(size_t, const T *)
    but the standard says we're just supposed to have non-template method
        std::allocator::allocate(size_t, const void *)
    That template version causes code that worked with VC6 to fail when
    calling myalloc.allocate(sz, 0), since the compiler couldn't deduce a
    pointer type from the 0.  Make the same change for allocator child
    class _DebugHeapAllocator, too.

    Getting rid of the template member means the change for VS7#221135
    can be reverted, which I've done.

crtw32\heap\newopnt.cpp

    VS7#293336 The nothrow_t placement scalar new should call the
    non-placement scalar new, not duplicate what the default non-placement
    scalar new implementation does.  That way, users who write their own
    non-placement scalar new but don't replace the other 3 replaceable
    forms of operator new will not break code which uses nothrow new.  This
    is important given all the work that was done for VS7#237394.

makefile

    VS7#293060 User rebuild of the CRT is broken because winver.h has been
    moved in the default installation.  It was previously found in
        \Program Files\Microsoft Visual Studio.NET\Vc7\include
    but is now found in
        \Program Files\Microsoft Visual Studio .NET\Vc7\PlatformSDK\include
    Adjust the settings of VCTOOLS and VCTOOLSINC in the rebuild makefile
    accordingly.

-----------------------------------------------------------------

Fri 20-Jul-01   (GautamB)

crtw32\string\ia64\memcpy.s, memmove.s

    Changing use of register r23, r24 to use r27, r28. This is done on request
    from David Gillies from BBT.

-----------------------------------------------------------------

Thu 19-Jul-01   (GautamB)

crtw32\eh\frame.cpp

    VS7#276150 Modified com+ C++Eh implementation.

-----------------------------------------------------------------

Sun 15-Jul-01   (PhilipLu)

clean.cmd, cleanbld.cmd, makefile, makefile.inc, makefile.sub
crtw32\dirs
crtw32\eh\frame.cpp, lsources, sources.nt, typname.cpp
crtw32\eh\dll\sources
crtw32\eh\mt\sources
crtw32\eh\nt\sources
crtw32\eh\st\sources
crtw32\h\crtdbg.h, cruntime.h, ehstate.h, excpt.h, float.h, fltintrn.h, heap.h,
    internal.h, malloc.h, math.h, mbstring.h, memory.h, mtdll.h, setjmp.h,
    setjmpex.h, stdarg.h, stdio.h, stdlib.h, string.h, trnsctrl.h, varargs.h,
    wchar.h, winheap.h
crtw32\helper\lsources, sources.nt
crtw32\misc\assert.c, lsources
crtw32\misc\dll\sources
crtw32\misc\mt\sources
crtw32\misc\nt\sources
crtw32\misc\psx\sources
crtw32\misc\st\sources
crtw32\rtc\error.cpp, stack.cpp
crtw32\startup\crt0dat.c, crt0init.c, tidtable.c, tlssup.c
crtw32\startup\dll\sources
crtw32\startup\dlllib\sources
crtw32\startup\mt\sources
crtw32\startup\nt\sources
crtw32\startup\psx\sources
crtw32\startup\st\sources
crtw32\stdio\output.c
crtw32\string\lsources, memcpy.c, memmove.c, memset.c, sources.nt, strset.c
crtw32\tools\win32\relinc.if, relinc64.if
fpw32\conv\tenpow.c
fpw32\include\cv.h, trans.h
fpw32\tran\fabs.c, fpexcept.c, lsources, sincosh.c, sources.nt, tanh.c
libw32\inc64\crtdbg.h, excpt.h, float.h, malloc.h, math.h, mbstring.h,
    memory.h, setjmp.h, setjmpex.h, stdarg.h, stdio.h, stdlib.h, string.h,
    varargs.h, wchar.h
libw32\include\crtdbg.h, excpt.h, float.h, malloc.h, math.h, mbstring.h,
    memory.h, setjmp.h, setjmpex.h, stdarg.h, stdio.h, stdlib.h, string.h,
    varargs.h, wchar.h
libw32\msvcirt.src, msvcrt.src, syscrt.src, syscrt64.src, sysirt.src,
    sysirt64.src
srcrel\clnsrcrel.bat, common.mkf, external.mkf, makefile, mkclnmkf.c,
    msvc40.if, objects.mkf, pd-b

[DELETED:]
crtw32\eh\alpha\bridge.h, bridge.s, ehunwind.c, ehunwind.h, trnsctrl.cpp,
    xcptmisc.h, xcptmisc.s
crtw32\helper\alpha\divdat.s, divide2.s, extv.s, extvvol.s, extzv.s,
    extzvvol.s, fastdiv.s, insv.s, insvvol.s, memcmp_.s, ots_as.hs,
    ots_defs.hs, otsdiv.s, otsnote.txt, scmpeql.s, scmpeqlp.s, scmpleq.s,
    scmpleqp.s, scmplss.s, scmplssp.s, sfill.s, sfillx.s, sfwdcpy.s, sloc.s,
    smove.s, smovem.s, strans.s, strcmp_.s, strcpy_.s, strlen_.s, szero.s
crtw32\misc\alpha\chandler.c, chkesp.c, ghandler.c, jmpuwind.s, longjmp.s,
    otsjmp.s, otsjmpex.s, otsuwind.s, setjmp.s, setjmpex.s
crtw32\startup\alpha\chkstk.s
crtw32\string\alpha\strcat.c, strcmps.s, strcpys.s, strlens.s
doc\copycrt.bat
fpw32\tran\alpha\acos.s, acosf.s, asin.s, asinacos.s, asinf.s, ata_tabs.s,
    ata_tabt.s, atan2f.s, atan2s.s, atanf.s, atans.s, cabs.s, cabsf.s,
    captcont.s, ceilf.s, ceils.s, chopt.s, copysgnf.s, cos_vo.s, cosf.s,
    cosf_vo.s, cosh.s, coshf.s, coss.s, cot.s, cotf.s, dpml_com.s, dpml_exc.c,
    expf.s, exph.c, exps.s, F_acos.s, F_acosf.s, F_asin.s, F_asinf.s, F_atan.s,
    F_atan2.s, F_atan2f.s, F_atanf.s, F_cos.s, F_cosf.s, F_exp.s, F_expf.s,
    F_hypot.s, F_hypotf.s, F_log.s, F_log10.s, F_log10f.s, F_logf.s, F_pow.s,
    F_powf.s, F_sin.s, f_sincof.s, F_sincos.s, F_sinf.s, F_sqrt.s, F_sqrtf.s,
    F_tan.s, F_tanf.s, fabsf.s, fabss.s, filter.c, finitef.s, floorf.s,
    floors.s, fmodf.s, fmods.s, fp_clasf.s, fpctrl.s, fpint.s, frexp.s,
    frexpf.s, frnd.s, getsetrg.c, huge.s, hypotf.s, hypoth.c, hypots.s, ieee.c,
    invtrigs.s, invtrigt.s, isnanf.s, j0f.s, j1f.s, jnf.s, l10_tabt.s, ldexp.s,
    log10f.s, log10s.s, log_tabt.s, logbf.s, logf.s, logs.s, modff.s, modfs.s,
    nextaftf.s, pow_tabt.s, powcerr.s, powf.s, pows.s, rsqrt.s, rsqrtf.s,
    sin_tabt.s, sin_vo.s, sincofvo.s, sincos.s, sincosf.s, sincosvo.s, sinf.s,
    sinf_vo.s, sinh.s, sinhcosf.s, sinhcosh.s, sinhf.s, sins.s, specexp.s,
    specexpf.s, sqr_tabt.s, sqrt.c, sqrtf.s, sqrts.s, tan_tabt.s, tanf.s,
    tanh.s, tanhf.s, tans.s, trig_rdf.s, trig_rdx.s, trig_tab.s, y0f.s, y1f.s,
    ynf.s
fpw32\tran\axp64\acos.s, acosf.s, asin.s, asinacos.s, asinf.s, ata_tabs.s,
    ata_tabt.s, atan2f.s, atan2s.s, atanf.s, atans.s, cabs.s, cabsf.s,
    captcont.s, ceilf.s, ceils.s, chopt.s, copysgnf.s, cos_vo.s, cosf.s,
    cosf_vo.s, cosh.s, coshf.s, coss.s, cot.s, cotf.s, dpml_com.s, expf.s,
    exps.s, f_acos.s, f_acosf.s, f_asin.s, f_asinf.s, f_atan.s, f_atan2.s,
    f_atan2f.s, f_atanf.s, f_cos.s, f_cosf.s, f_exp.s, f_expf.s, f_hypot.s,
    f_hypotf.s, f_log.s, f_log10.s, f_log10f.s, f_logf.s, f_pow.s, f_powf.s,
    f_sin.s, f_sincof.s, f_sincos.s, f_sinf.s, f_sqrt.s, f_sqrtf.s, f_tan.s,
    f_tanf.s, fabsf.s, fabss.s, finitef.s, floorf.s, floors.s, fmodf.s,
    fmods.s, fp_clasf.s, fpctrl.s, fpint.s, frexp.s, frexpf.s, frnd.s, huge.s,
    hypotf.s, hypots.s, invtrigs.s, invtrigt.s, isnanf.s, j0f.s, j1f.s, jnf.s,
    l10_tabt.s, ldexp.s, log10f.s, log10s.s, log_tabt.s, logbf.s, logf.s,
    logs.s, modff.s, modfs.s, nextaftf.s, pow_tabt.s, powcerr.s, powf.s,
    pows.s, rsqrt.s, rsqrtf.s, sin_tabt.s, sin_vo.s, sincofvo.s, sincos.s,
    sincosf.s, sincosvo.s, sinf.s, sinf_vo.s, sinh.s, sinhcosf.s, sinhcosh.s,
    sinhf.s, sins.s, specexp.s, specexpf.s, sqr_tabt.s, sqrtf.s, sqrts.s,
    tan_tabt.s, tanf.s, tanh.s, tanhf.s, tans.s, trig_rdf.s, trig_rdx.s,
    trig_tab.s, y0f.s, y1f.s, ynf.s
libw32\buildcrt.nt
libw32\tools\alpha\aliasobj.exe, detab.exe, ifstrip.exe, pd.exe, striphdr.exe,
    tolwrupr.exe, trailing.exe, whackline.exe

    Massive cleanup to remove all references to Alpha, MIPS, or PPC.

makefile
srcrel\external.mkf, mkclnmkf.c, objects.mkf, pd-b

    Remove BBT/LEGO refs and targets (zst/zmt/zdll), since the release
    build is already fully BBT-ready (full debug info).

-----------------------------------------------------------------

Sun 15-Jul-01   (PhilipLu)

log.txt -> log_v70.txt
    Renamed old LOG.TXT from V7.0 and started a new LOG.TXT (this file).

-----------------------------------------------------------------


***************************************************************************
***************************************************************************
***                                                                     ***
***  This file contains the history for MSVC++ v7.1 (relative to v7.0)  ***
***  The file should always be edited at the top so that the most       ***
***  recent changes are at the beginning of the file and the oldest     ***
***  changes are at the end of the file.  This comment marks the end.   ***
***                                                                     ***
***************************************************************************
***************************************************************************
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\base\crts\log_v42.txt ===
***************************************************************************
***************************************************************************
***									***
***   This file contains the change history for the MSVC++ v4.2 C/C++	***
***   Run-Time Libraries (that is, modifications since since 4.1).	***
***   The file should always be edited at the top so that the most	***
***   recent changes are at the beginning of the file (immediately	***
***   after this comment) and the oldest changes are at the end.	***
***									***
***************************************************************************
***************************************************************************


-----------------------------------------------------------------

Tue 14-Jun-96   (V-rogerl)

fpw32\tran\mips\powm.s
	YAPF (Yet Another Pow Fix) BBT found branch to delay slot.

-----------------------------------------------------------------

Tue 13-Jun-96   (V-rogerl)

fpw32\tran\mips\powm.s
	subu in Lnormal should be dsubu.  Regression only occurs
	on MIPS 4600 processor for some strange reason.

-----------------------------------------------------------------

Tue 11-Jun-96	(JamesMa)

crtw32\dllstuff\crtlib.c
	Changed "MSVCRT40.DLL" to "MSVCRT.DLL" (Speed 8607).

-----------------------------------------------------------------

Mon 10-Jun-96	(GregF)

crtw32\misc\aw_env.c
        If/when __crtGetEnvironmentStringsA is called a 2nd time, two local
        pointers are not initialized before they are tested against NULL. 
        This is closely related to SPEED 7885 (actually, it's the same bug, 
        but the circumstances under which symptoms will manifest are quite
        different in Win32s). I fixed the bug by initializing the two local
        pointers to NULL.

-----------------------------------------------------------------

Thu 06-Jun-96	(v-KimPe)

srcrel\pd-b, libw32\msvcrt.src
fpw32\tran\lsources, sources.nt
fpw32\tran\alpha\*.s (all of them)
	Updated ALPHA floating point to latest Digital math library to
	fix some bugs (Speed 7763) (ntraid 37629 and 40953) and to add
	the MIPS API for single precision math routines (e.g. sinf and cosf)
	and the API for fast (and less precise) double routines (F_sin and F_cos).

-----------------------------------------------------------------

Thu 06-Jun-96	(JamesMa)

crtw32\h\math.h, libw32\include\math.h
	Added pow(int,int) specialization (Speed 8371).

-----------------------------------------------------------------

Wed 05-Jun-96	(JamesMa)

Numerous routines and operators in the ANSI C++ libs were not being
declared as __cdecl, effectively breaking /Gr and /Gz compilations
(Speed 6353). The affected files:

crtw32\stdhpp\exception, fstream, xlocale, xlocnum, xstddef, xstring
crtw32\stdcpp\delop.cpp, fiopen.cpp, locale.cpp, locale0.cpp, newop.cpp,
	newop2.cpp, nomemory.cpp, string.cpp, uncaught.cpp, wlocale.cpp,
	xlocale.cpp
crtw32\h\wchar.h
libw32\include\wchar.h

-----------------------------------------------------------------

Wed 05-Jun-96	(GregF)

crtw32\h\setlocal.h
libw32\msvcrt.src
        Plauger's C++ libs use __lc_handle and __lc_codepage which were not 
        being exported properly from msvcrt.dll. This was the cause of SPEED
        bug #8006. I marked the decls for these two as _CRTIMP in setlocal.h.
        I marked them as DATA (along with four other variables added to the 
        def file at the same time) in msvcrt.src. Voila, another bug bites 
        the dust!

-----------------------------------------------------------------

Fri 31-May-96	(SteveSa)

crtw32\lowio\open.c
crtw32\lowio\pipe.c
	Fixed two expression errors of the form "(x & FLAG == 0)" wherein
	what was intended was "((x & FLAG) == 0)".  The original expression
	was interpreted as "(x & (FLAG == 0))", which was not correct.

-----------------------------------------------------------------

Thu 30-May-96	(SteveSa)

makefile
makefile.inc
crtw32\eh\lsources
crtw32\eh\oldexcpt.cpp  (new file!)
crtw32\eh\oldexcpt.h  (new file!)
libw32\msvcrt40.src
srcrel\makefile
srcrel\objects.mkf
srcrel\pd-b
	To properly support the old MSVC 4.0/4.1 C++ class "logic_error"
	in the forwarder DLL (msvcrt40.dll), we have to compile the file
	stdexcept.cpp file using the v4.1 semantics, and then we put that
	object in msvcirt{,d}.dll and export the set of relevant symbols.
	The files stdexcpt.cpp and stdexcpt.h were modified to support
	the old v4.1 semantics and renamed oldexcpt.* for this purpose.

-----------------------------------------------------------------

Thu 30-May-96	(JamesMa)

fpw32\tran\i386\testfdiv.c
	No longer loops through affinity mask; instead, uses MarkL's new
	IsProcessorFeaturePresent() API if possible, only tests 1st processor
	if not.

-----------------------------------------------------------------

Wed 29-May-96	(JamesMa)

crtw32\stdhpp\new
	All flavors of operators new & delete are now __cdecl (Speed 6353)
crtw32\stdhpp\stl.h
	Multiset template now uses key's allocator (bug reported by JonCaves).

-----------------------------------------------------------------

Wed 29-May-96	(GregF)

crtw32\exec\dospawn.c
crtw32\h\msdos.h
crtw32\lowio\dup.c, dup2.c, ioinit.c, open.c, pipe.c

        Work-around for a nasty bug in NT. If one calls GetFileType on a pipe
        handle, and there is a "blocking read" pending on that pipe, the
        GetFileType never returns. Email I received from Ken Peery and Darryl
        Havens made it clear NT isn't going to fix this (or even admit it's 
        bug).

        I introduced FNOINHERIT, to tag non-inheritable handles, and changed
        the spawn code to NOT pass info on such handles to the child process. 
        This eliminated the main reason for using GetFileType in that startup
        code. Then, I changed the startup code to NOT call GetFileType when 
        the inherited handle was tagged as being a pipe. For 5.0, I intend to
        stop calling GetFileType on inherited file handles altogether!

-----------------------------------------------------------------

Sat 25-May-96	(V-rogerl)

crtw32\eh\mips\rtlmisc.s

	Restore extended context exclusively.

-----------------------------------------------------------------

Fri 24-May-96	(BryanT)

crtw32\helper\ppc\icall.s
crtw32\helper\lsources
crtw32\helper\sources.nt

        Add more PPC helper routines (from ChuckL)

-----------------------------------------------------------------

Wed 22-May-96	(V-rogerl)

fpw32\tran\mips\ieee.c

	Changed _clearfp() to return old status word versus new one.

-----------------------------------------------------------------

Wed 22-May-96	(GregF)

crtw32\heap\sbheap.c
        Fixed very nasty typo in __sbh_resize_block. The conditional clause
        of a for statement had an = instead of an == ...major oops! Probably
        the cause of the problems the IDE was seeing (they use realloc a lot
        I believe).

-----------------------------------------------------------------

Tue 21-May-96	(SteveSa)

makefile -
	Change base addresses for MSVCRT{,D}.DLL, MSVCRT40.DLL,
	MSVCIRT{,D}.DLL, and MSVCP42{,D}.DLL per BryanT's suggestions.

-----------------------------------------------------------------

Mon 20-May-96	(GregF)

crtw32\startup\dllcrt0.c
crtw32\dllstuff\crtdll.c, crtlib.c
        Changed the way a failure is handled during the initialization we do
        upon process attach notification. The __proc_attached flag is now set
        to indicate successful completion of initialization. This fixes
        several minor problems including a bug reported by NT about our mis-
        handling of the case where the user's DllMain returns failure upon
        process attach notification.

-----------------------------------------------------------------

Wed 15-May-96	(BryanT)

crtw32\h\stdlib.h, libw32\include\stdlib.h
        Add POSIX wrappers for environ definitions

-----------------------------------------------------------------

Wed 15-May-96	(JamesMa)

crtw32\h\math.h, libw32\include\math.h
	Minor fix to remove a C4244 warning from the Pow_int template.

-----------------------------------------------------------------

Tue 14-May-96	(JamesMa)

crtw32\stdcpp\xstrcoll.c
	Bug fix to _Strcoll(): error path failed to unlock properly.
crtw32\stdhpp\*
	Added pack(push,8) and pack(pop) pragmas to ANSI headers (Speed 7746).

-----------------------------------------------------------------

Tue 14-May-96	(SteveSa)

	Further changes to better support the forwarder DLL (MSVCRT40.DLL).
	The exported data (variables as opposed to functions) forwarded by
	the DLL must be described to the librarian (LINK -LIB) when building
	the exports file (MSVCRT40.EXP).  The new dummy object imp_data.obj
	declares all of the exported data as global uninitialized data.
	That object is only passed to the LINK -LIB step, not the step that
	actually builds the DLL (a LINK step).

crtw32/dllstuff/imp_data.c - new file!
libw32/msvcrt40.src - Removed _imp_ prefix from all entries
makefile - fix the way we build the forwarder DLL
makefile.inc
srcrel/pd-b - pick up new file

-----------------------------------------------------------------

Mon 13-May-96	(BryanT)

crtw32\convert\xtow.c and wtox.c

        Fix _NTSUBSET_ variant so we can export these from ntdll for OLE.

-----------------------------------------------------------------

Mon 13-May-96	(SteveSa)

	Various changes to better support the forwarder DLL (MSVCRT40.DLL).
	It *MUST* have actual imports from both MSVCRT.DLL and MSVCIRT.DLL.
	I also set up a DllMain for MSVCIRT.DLL and a dummy variable which
	is exported, providing something for MSVCRT40.DLL to import.  The
	forwarder DLL is apparently not fully correct yet, however.

crtw32/dllstuff/fwdr_dll.c - new file!
crtw32/dllstuff/ios_dll.c - new file!
libw32/msvcrt40.src - minor change
makefile
makefile.inc
srcrel/pd-b - pick up new files (not only my 2, but some MIPS FP tests)

-----------------------------------------------------------------

Wed 08-May-96   (V-dougme)

crtw32\helper\mips\llcvt.s
		   lldivrem.s

	First step at eradicating odd FP register usage in preparation for
	moving to 32 64-bit floating point register model for MIPS3 (NT40).

-----------------------------------------------------------------

Wed 08-May-96   (V-rogerl)

srcrel\mkfiles.sed
srcrel\mkdirs.sed

	Add mips\tests, mips\tests\perf_tests, and mips2.
	Don't copy these directories/files anywhere.

-----------------------------------------------------------------

Tue 07-May-96   (V-rogerl)

fpw32\tran\mips\asincosm.s
		atanm.s
		cabsm.s
		coshm.s
		dtoul.s
		expm.s
		fatan.s
		fexp.s
		floorm.s
		fmodm.s
		hypotm.s
		logm.s
		powm.s
		sinhm.s
		sqrtm.s
		tanhm.s
		trigm.s

	First step at eradicating odd FP register usage in preparation for
	moving to 32 64-bit floating point register model for MIPS3 (NT40).

-----------------------------------------------------------------

Mon 06-May-96   (JamesMa)

crtw32\h\math.h, libw32\include\math.h
	Inlines are now #ifndef _M_M68K (speed bug #7409).

-----------------------------------------------------------------

Mon 06-May-96   (GregF)

crtw32\stdio\output.c
        Removed NT_BUILD so that the NT extensions are now part of the retail
        build. Also, took a stab at fixing a problem with %ws in the printf
        family (NT RAID 37620) which shows up in DBCS locales.

crtw32\misc\dbgheap.c
        Don't include heap.h for WINHEAP builds.

-----------------------------------------------------------------

Thu 03-May-96   (V-rogerl)

srcrel/pd-b
fpw32\tran\mips\rint.s
	Removed another file that should have never been there:
		fpw32\tran\mips\rint.s

-----------------------------------------------------------------

Thu 02-May-96   (V-rogerl)

srcrel/pd-b
fpw32\tran\mips\sqrt3000.c
fpw32\tran\mips\sqrt4000.c
fpw32\tran\mips\xsqrt.s
	Removed files that should have never been there:
		fpw32\tran\mips\sqrt3000.c
		fpw32\tran\mips\sqrt4000.c
		fpw32\tran\mips\xsqrt.s

-----------------------------------------------------------------

Thu 02-May-96   (SteveSa)

crtw32/h/mtdll.h
crtw32/misc/setlocal.c
libw32/msvcrt.src
	The ANSI Std C++ DLL (msvcp42.dll) requires the use of the locale
	locaking variables __setlc_active and __unguarded_readlc_active,
	which are located in MSVCRT.DLL and must be exported from there.

-----------------------------------------------------------------

Wed 01-May-96	(SteveSa)

log.txt
makefile
libw32/msvcrt40.rc -- NEW FILE!
libw32/msvcrt40.src -- NEW FILE!
srcrel/pd-b
srcrel/mkclnmkf.c
srcrel/objects.mkf
srcrel/pd-b
srcrel/relmkf.sed
	Added code to produce "forwarder" DLLs named MSVCRT40.DLL and
	MSVCR40D.DLL which will forward all of their symbols to the
	DLLs named MSVCRT.DLL and MSVCRTD.DLL, respectively.  This way
	apps built with MSVC++ v4.0 and v4.1 will get the benefits of the
	much faster heap (as well as other bug fixes) in Visual C++ v4.2.

-----------------------------------------------------------------

Tue 30-Apr-96   (GregF)

crtw32\heap\heapchk.c
        _heapset() is obsolete and I turned it into a simple call to
        _heapchk(). The originally intended functionality was neither well-
        defined nor useful on Win32 platforms. This fixes Speed 2134 (which
        says it didn't work on Win95 anyway).

-----------------------------------------------------------------

Mon 29-Apr-96   (JamesMa)

2 minor bug fixes:
crtw32\misc\dbgrpt.c
	_crtAsssertBusy was being decremented prematurely in _CrtDbgReport().
crtw32\stdhpp\yvals.h
	_FPOSOFF now only #ifndef _FPOS_T_DEFINED, for stdio.h compatibility.

-----------------------------------------------------------------

Thu 25-Apr-96   (JamesMa)

crtw32\stdhpp\iomanip, crtw32\stdcpp\iomanip.cpp
	setiosflags(), resetiosflags(), setbase(), setprecision() &
	setw() are now all __cdecl.
crtw32\heap\calloc.c, free.c, heapinit.c, malloc.c, msize.c, realloc.c
	Backed out Bryant's "Fix POSIX variant" changes to crtw32\heap,
	which had some errant preprocessor directives.

-----------------------------------------------------------------

Wed 24-Apr-96   (BryanT)

crtw32\heap\calloc.c, free.c, heapinit.c, malloc.c, msize.c, realloc.c
       Fix POSIX variant

crtw32\convert\*.c
crtw32\h\wchar.h, tchar.h, stdlib.h
libw32\msvcrt.src
    Fix POSIX build and add __int64 variants

crtw32\h\setjmp*.h
crtw32\misc\mips\setjmp*.s
libw32\lib\msvcrt.src
    V5 MIPS (and NT 4.0) defines a faster setjmp (setjmpVfp).

crtw32\string\mips\memorym.s
    Fast qword copy routines

libw32\lib\dirs, sources.nt, dll40\sources, dll40\crt40.*
    Check in changes from NT to build msvcrt40 forwarder dll.

-----------------------------------------------------------------

Wed 24-Apr-96   (GregF)

crtw32\heap\hpaort.c
        My changes of yesterday broke the build on this file. Oops. To fix, I
        removed the #include <heap.h>. This header is now obsolete, and never
        was necessary in this particular source.

-----------------------------------------------------------------

Tue 23-Apr-96   (GregF)

crtw32\dllstuff\crtlib.c
crtw32\h\cmsgs.h, internal.h, rterr.h
crtw32\heap\heapinit.c
crtw32\startup\crt0.c, crt0msg.c, dllcrt0.c
        Changed _heap_init to return a success/failure code. Changed the
        startups to check it. Added a RTE for the .EXE startup. During this,
        I discovered _NMSG_WRITE wouldn't work if the lowio initialization
        code hadn't been called, so I fixed this as well.

-----------------------------------------------------------------

Mon 22-Apr-96   (JamesMa)

crtw32\misc\dbgrpt.c
	MAX_MSG increased from 512 to 4096 characters (Speed bug 6849).

-----------------------------------------------------------------

Fri 19-Apr-96   (GregF)

crtw32\stdcpp\_tolower,c, _toupper.c, xmbtowc.c, xstrcoll.c, xstrxfrm.c,
              xcwscoll.c, xwcsxfrm.c, xwctomb.c
        Revised to use the current scheme of multi-thread locking for
        locale data. Also, many cosmetic changes to make the code more
        readable and the formatting consistent with our own.

-----------------------------------------------------------------

Thu 18-Apr-96   (JamesMa)

crtw32\h\stdio.h
	Inline definitions of getwchar(), putwchar, getwc() & putwc() removed.
crtw32\stdhpp
	Ubiquitous "_T"s replaced by "_TYPE" in 25 files, to prevent conflict
	with tchar.h's _T macro.

-----------------------------------------------------------------

Wed 17-Apr-96   (JamesMa)

crtw32\misc\dbgheap.c, crtw32\h\dbgint.h
	_CrtSetDbgBlockType() is now _CRTIMP.

-----------------------------------------------------------------

Tue 16-Apr-96   (JamesMa)

crtw32\h\useoldio.h
libw32\include\useoldio.h
crtw32\stdhpp\use_ansi.h
	New files consisting of various '#pragma comment(lib,...)'s.
crtw32\h\fstream.h, iomanip.h, ios.h, iostream.h, istream.h,
		ostream.h, stdiostr.h, streamb.h, strstrea.h
libw32\include\fstream.h, iomanip.h, ios.h, iostream.h, istream.h,
		ostream.h, stdiostr.h, streamb.h, strstrea.h
	Added '#include <useoldio.h>', removed '#pragma comment(lib,"cirt")'
crtw32\stdhpp\yvals.h
	Removed '#pragma comment(lib,"cprt")'
crtw32\stdhpp\* (ALL but new, exception, xstddef, xlocinfo.h & yvals.h)
	Added '#include <use_ansi.h>'
srcrel\pd-b
	Added useoldio.h, use_ansi.h
crtw32\tools\win32\relinc.cmd
	Added useoldio.h
makefile
	Added -nodefaultlib directives to link response files for
	ANSI C++ & old iostreams dlls
doc\copycrt.bat
	Added old iostream libs/dlls

-----------------------------------------------------------------

Mon 15-Apr-96   (JamesMa)

crtw32\h\fstream.h, iomanip.h, ios.h, iostream.h, istream.h,
		ostream.h, stdiostr.h, streamb.h, strstrea.h
libw32\include\fstream.h, iomanip.h, ios.h, iostream.h, istream.h,
		ostream.h, stdiostr.h, streamb.h, strstrea.h
	Added '#pragma comment(lib,"cirt")', removed #ifndef _OLD_IOSTREAMS

crtw32\stdhpp\yvals.h
	Added '#pragma comment(lib,"cprt")'

-----------------------------------------------------------------

Mon 15-Apr-96   (JamesMa)

Numerous changes to the crtw32\stdcpp and crtw32\stdhpp directories,
incorporating Plauger's 4/8/96 release.

crtw32\stdcpp\locale0.cpp, uncaught.cpp, wiostrea.cpp, xlocale.cpp
crtw32\stdhpp\stl.h
	New files.

crtw32\stdcpp\xtolower.c, xtoupper.c
crtw32\stdhpp\xios, xwctype.h, yxvals.h
	Removed.

crtw32\stdcpp\*, crtw32\stdhpp\*
	Updated, based on Plauger's 4/8/96 release.

crtw32\h\wchar.h, libw32\include\wchar.h
	Added Wint_t typedef.

crtw32\makefile.inc, srcrel\pd-b
	Updated to reflect above additions and deletions.

-----------------------------------------------------------------

Thu 11-Apr-96   (GregF)

crtw32\heap\sbheap.c
crtw32\h\winheap.c
        Several optimizations (see revision history comments in sbheap.c).

crtw32\heap\expand.c, free.c, msize.c, realloc.c
        Return type of __sbh_find_block, and the 3rd arg types of
        __sbh_free_block and __sbh_resize_block, all changed to __map_t * (a
        result of the optimizations to sbheap.c).

crtw32\misc\dbgheap.c
        _CrtIsValidHeapPointer was changed to return failure when passed a
        pointer to a free block in the small-block heap.

-----------------------------------------------------------------

Thu 04-Apr-96   (GregF)

crtw32\heap\sbheap.c
        Two bug fixes courtesy of Steve Wood. First, in __sbh_release_region,
        I had a reference to the region descriptor *after* is had been freed.
        Second, in __sbh_decommit_pages, I was not updating the global count
        of decommitable pages.

-----------------------------------------------------------------

Wed 03-Apr-96   (SteveSa)

makefile
makefile.inc
srcrel\mkdirs.sed
srcrel\mkfiles.sed
srcrel\pd-b
	Changes to support building the old IOSTREAMS as a separate library.
	The DLL models are not yet built because of DLL model problems.

The following files were renamed to work around conflicts with the new
standard C++ library files of the same names:

crtw32\iostream\ios.cpp --> _ios.cpp
crtw32\iostream\iostream.cpp --> _iostream.cpp
crtw32\iostream\strstrea.cpp --> _strstre.cpp

-----------------------------------------------------------------

Thu 28-Mar-96   (GregF)

crtw32\dos\fullpath.c
        Fixed potential memory leak (Speed bug 5818). Detab-ed. Also, cleaned
        up the Mac version formatting and changed ismbcscode to __ismbcscode.

crtw32\lowio\mktemp.c
        Detab-ed. Also, changed ismbcscode to __ismbcscode.

-----------------------------------------------------------------

Tue 26-Mar-96   (GregF)

crtw32\misc\dbgheap.c
        Added support for small block heap (should have been part of
        yesterday's checkin).

-----------------------------------------------------------------

Mon 25-Mar-96   (GregF)

makefile.inc

crtw32\h\malloc.h, winheap.h

crtw32\heap\calloc.c, expand.c, free.c, heapchk.c, heapinit.c, heapmin.c,
            malloc.c, msize.c, realloc.c, sbheap.c (new file)

libw32\msvcrt.src

libw32\include\malloc.h

srcrel\pd-b

        Small-block heap. Core code is in sbheap.c, with most of the new
        types and constants being in winheap.h.

-----------------------------------------------------------------

Fri 22-Mar-96   (JamesMa)

crtw32\stdhpp\xutility - min & max templates renamed to _cpp_min, _cpp_max.
crtw32\stdhpp\new - set_new_handler() now _CRTIMP.
crtw32\stdhpp\yvals.h - true & false now if !defined(...).
crtw32\stdhpp\xlocale - various occurrences of _M1 & _M2 replaced with
	_M01 and _M02.
crtw32\stdhpp\algorithm, deque, limits, list, map, vector, xmemory - various
	occurrences of _T replaced with _TYPE.

-----------------------------------------------------------------

Fri 22-Mar-96   (GregF)

crtw32\time\tzset.c
        Clear _dstbias when there is no DST. In NT 3.51, and maybe other
        builds, GetTimeZoneInformation will return TIME_ZONE_ID_DAYLIGHT
        if automatic DST adjustment is shut off in the control panel. This
        leads to a bug in the CRT's time() function (Speed bug 5252).

-----------------------------------------------------------------

Tue 19-Mar-96   (JamesMa)

crtw32\h\math.h - bug fix in _Pow_int template.
crtw32\h\minmax.h - new file, contains old-style min/max macros (for MFC).
crtw32\stdhpp\minmax - file removed (MFC can't use min/max templates).
crtw32\stdhpp\xutility - min & max templates restored, <minmax> removed.
srcrel\pd-b - stdhpp\minmax removed, crtw32\h\minmax.h added.

-----------------------------------------------------------------

Mon 18-Mar-96   (JamesMa)

crtw32\stdhpp\xutility - min & max macros broken out, includes <minmax>.
crtw32\stdhpp\minmax - new file, containing min & max templates (for MFC).
crtw32\stdhpp\exception - now includes <eh.h>.
crtw32\h\eh.h - added terminate_handler, unexpected_handler.
crtw32\h\ctype.h - ifxxx inlines are now gone altogether.
crtw32\h\tchar.h - 'extern "C"' blocks no longer nested.
libw32\include\eh.h, ctype.h, tchar.h - as above.
srcrel\pd-b - stdhpp\minmax added.

-----------------------------------------------------------------

Mon 18-Mar-96	(SteveSa)

crtw32\dllstuff\crtlib.c
crtw32\h\stdlib.h
libw32\msvcrt.src
libw32\include\stdlib.h
	Fix declaration and definition of global variable "_fileinfo" so that
	it works with the /MD models.  In VC++ v4.0/4.1 the variable is not
	declared at all for the /MD and /MDd models.

-----------------------------------------------------------------

Sat 16-Mar-96	(RichardS)

crtw32\h\doscalls.h
crtw32\h\error.h
crtw32\h\error2.h
crtw32\h\oscalls.h
srcrel\makefile
srcrel\pd-b
	Remove doscalls.h, error.h, error2.h

-----------------------------------------------------------------

Fri 15-Mar-96	(RichardS)

makefile
makefile.sub
doc\copycrt.bat
doc\crtdrop.xls
libw32\buildall.cmd
libw32\makefile
srcrel\external.mkf
srcrel\mkclnmkf.c
srcrel\objects.mkf
	Replaced lego and puma references with bbt

-----------------------------------------------------------------

Mon 04-Mar-96   (JamesMa)

crtw32\exec\cenvarg.c - now calls __crtGetEnvironmentStringsA() as needed;
	frees env. buffers on exit.
crtw32\h\math.h, libw32\include\math.h - #ifdef __cplusplus no longer
	ifstripped out.

-----------------------------------------------------------------

Tue 05-Mar-96   (SteveSa)

makefile -
	Add crtw32/stdcpp to list of target directories in which to build

makefile.inc
	Add "stdcpp.lib" to list of targets, and define its constituent OBJs.

makefile.sub
	Add -I../stdhpp to the options when compiling C++ sources.
	This picks up the new C++ header files when compiling C++ files.

crtw32/stdcpp/_tolower.c
crtw32/stdcpp/_toupper.c
crtw32/stdcpp/xmbtowc.c
crtw32/stdcpp/xstrcoll.c
crtw32/stdcpp/xstrxfrm.c
crtw32/stdcpp/xwcscoll.c
crtw32/stdcpp/xwcsxfrm.c
crtw32/stdcpp/xwctomb.c -
	Various edits to fix problems with multi-threaded support and so on.

crtw32/stdhpp/typeinfo
	Add _CRTIMP to the base class upon which exception is defined.
	Since exception itself is _CRTIMP, what it is based upon must also be.

srcrel/pd-b -
	updated to include recently added files

srcrel/msvc40.if -
	Added new symbols mentioned in new and changed header files

-----------------------------------------------------------------

Mon 04-Mar-96   (JamesMa)

The following headers were modified to incorporate PlumHall work:
	stdexcpt.h, new.h, ctype.h, wchar.h, stdio.h

The following headers were modified to simply include the corresponding
PlumHall header, #ifndef _OLD_IOSTREAMS:
	fstream.h, iomanip.h, ios.h, iostream.h, istream.h, ostream.h,
	streambuf.h, strstrea.h

The following header was essentially removed - the whole body is now
#ifdef _OLD_IOSTREAMS:
	stdiostr.h

The PlumHall header file EXCEPTION was modified to remove material duplicated
in eh.h.

Also, time\strftime.c was modified to incorporate PlumHall locale work.

-----------------------------------------------------------------

Wed 28-Feb-96   (SteveSa)

srcrel/pd-b
	Brought up to date with v4.2 project

srcrel/makefile
	Modified to allow automated regeneration of srcrel/pd-b

srcrel/mkclnmkf.c
	Support added to copy crtw32/stdcpp and crtw32/stdhpp directories.

srcrel/mkfiles.sed
	Ignore files of the form *.scc when cleansing/copying sources

Also, five header files in the crtw32/stdhpp directory were deleted because
they were modified versions of files already in crtw32/h.  These were math.h,
stdio.h, stdlib.h, string.h, and wchar.h.

-----------------------------------------------------------------

Tue 28-Feb-96   (SteveSa)

crtw32/stdcpp/* - new directory and files
crtw32/stdhpp/* - new directory and files

Add new directories crtw32/stdcpp and crtw32/stdhpp which contain the new
Standard C++ source files and header files, respectively.

-----------------------------------------------------------------

Wed 21-Feb-96   (SteveSa)

log_v41.txt
crtw32\misc\dbgheap.c
	Propogated from the v4.1 tree (last minute bug fix)
	Protected call to HeapValidate() in _CrtIsValidHeapPtr() so
	that it is only made on Windows NT.  HeapValidate() is NOT
	supported on Windows 95 or Win32s.

-----------------------------------------------------------------

Tue 19-Feb-96   (SteveSa)

crtw32/startup/stdenvp.c -
	Global pointer _aenvptr/_wenvptr is set to NULL after the block
	to which it points (a copy of the environment strings) is freed.

srcrel/_sample_.rc
	Some edits to make this file more closely match libw32/msvcrt.rc

-----------------------------------------------------------------

Mon 18-Feb-96   (SteveSa)

log_v41.txt
crtw32\lowio\osfinfo.c
	propogated from the v4.1 tree (last minute bug fix)

-----------------------------------------------------------------

Thu 15-Feb-96	(SteveSa)

log.txt -> log_v41.txt
	Renamed old LOG.TXT from V4.1 and started a new LOG.TXT (this file).

Then I made two major changes:

1) renamed the output DLLs:
	MSVCRT40.DLL to MSVCRT.DLL
and	MSVCR40D.DLL to MSVCRTD.DLL

2) removed IOSTREAMS from the libraries

To accomplish this, I renamed the following source files (contents unchanged):

crtw32/dllstuff/macdll/
	msvcrt40.def -> msvcrt.def
	msvcrt40.r   -> mscvrt.r
	msvcr40d.def -> msvcrtd.def

libw32/
	msvcrt40.rc  -> msvcrt.rc

Files modified:

	libw32/msvcrt.src
	makefile
	makefile.inc
	srcrel/external.mkf
	srcrel/mkclnmkf.c
	srcrel/mkdirs.sed
	srcrel/mkfiles.sed
	srcrel/objects.mkf
	srcrel/pd-b

-----------------------------------------------------------------
***************************************************************************
***************************************************************************
***									***
***  This file contains the history for MSVC++ v4.2 (relative to v4.1)	***
***  The file should always be edited at the top so that the most	***
***  recent changes are at the beginning of the file and the oldest	***
***  changes are at the end of the file.  This comment marks the end.	***
***									***
***************************************************************************
***************************************************************************
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\base\crts\log_v60.txt ===
***************************************************************************
***************************************************************************
***                                                                     ***
***   This file contains the change history for the MSVC++ v6.0 C/C++   ***
***   Run-Time Libraries (that is, modifications since since 5.0).      ***
***   The file should always be edited at the top so that the most      ***
***   recent changes are at the beginning of the file (immediately      ***
***   after this comment) and the oldest changes are at the end.        ***
***                                                                     ***
***************************************************************************
***************************************************************************

-----------------------------------------------------------------

Thu 04-Feb-99   (GregF)

crtw32\startup\crt0dat.c
crtw32\dllstuff\crtdll.c
    Changed terminator execution loop slightly so that atexit() routines may
    register additional atexit routines.  This fixes VisualStudio7 6787

crtw32\convert\wcstol.c
    Added a range check on each wide char before calling __ascii_isw*() with 
    it.  This fixes NTBug 287463.

-----------------------------------------------------------------

Fri 18-Dec-98   (GregF)

crtw32\startup\tidtable.c
    Forgot to delete the code to unlink the thread locale info struct from the
    list (these structs are no longer kept in a list).

-----------------------------------------------------------------

Mon 14-Dec-98   (GregF)

crtw32\misc\initmon.c, initnum.c, setlocal.c
crtw32\start\tidtable.c
    Fixed a number of bugs beginning with a performance bug (Monte Carlo 
    #11418) which concealed the others.  The performance bug was the per-thread
    pointer to the locale information struct was not being updated.

-----------------------------------------------------------------

Fri 04-Dec-98   (JamesMa)

crtw32\eh\comerr.cpp, crtw32\h\comerr.h, libw32\include\comerr.h
    Removed.
crtw32\h\mtdll.h, crtw32\startup\tidtable.c
    Removed all references to _pceh as part of comerr removal.
makefile, makefile.inc, crtw32\eh\lsources, srcrel\pd-b, srcrel\objects.mkf,
crtw32\tools\win32\relinc.cmd
    Removed all references to comerr.cpp & comerr.h.
srcrel\bldnt.cmd, srcrel\bldwin95.bat
    Replaced references to VC6.0 with VC6.1 (MC bugs 8019, 8020) and pulled
    references to Mac builds from the usage messages.

-----------------------------------------------------------------

Wed 02-Dec-98   (KFrei)

crtw32\rtc\memory.cpp
    Fixed MC 11240 - I was trying to allocating memory, 
    even if allocation wasn't enabled

-----------------------------------------------------------------

Wed 02-Dec-98   (GregF)

crtw32\heap\expand.c
    Removed extra _munlock.  This fixes Monte Carlo #11187

-----------------------------------------------------------------

Tue 01-Dec-98   (KFrei)

crtw32\misc\dbgheap.c, crtw32\rtc\shadow.cpp
    Fixed RTC bug involving dbg versions of realloc & expand (another)
    Monte Carlo #11029

crtw32\rtc\memory.cpp
    Added some DebugString output when the RTC stuff is built for debugging
    I also fixed Greg's date from 01-Nov-98 to 01-Dec-98

-----------------------------------------------------------------

Tue 01-Dec-98   (GregF)

crtw32\misc\onexit.c
    Grow the atexit/_onexit more quickly. This fixes Monte Carlo #9897.

-----------------------------------------------------------------

Mon 30-Nov-98   (KFrei)

crtw32\misc\dbgheap.c
    Fixed RTC bug involving dbg versions of realloc & expand

-----------------------------------------------------------------

Tue 25-Nov-98   (KFrei)

crtw32\rtc\init.cpp, crtw32\rtc\userapi.cpp
    Fixed bug MC 10777 - Delay loaded DLLs & -RTCm crash

-----------------------------------------------------------------

Tue 24-Nov-98   (KFrei)

crtw32\h\rtcapi.h, crtw32\h\rtcsup.h, crtw32\misc\i386\chkesp.c
crtw32\rtc\init.cpp, libw32\include\rtcapi.h
    Added a new RTC callback, to be used by memory functions for -RTCm checks
    rtcapi also got new callbacks for more extensive memory checking

crtw32\h\rtcpriv.h, crtw32\rtc\shadow.cpp
    Fixed MC #10665 - problem with page tables and shadow memory
    Added parameter and reg0 (return value) pointer checking API

-----------------------------------------------------------------

Tue 24-Nov-98   (GregF)

crtw32\h\setlocal.h
crtw32\misc\setlocal.c
    Changed to handle longer specifications for the codepage, and to handle
    too long specifications without crashing. This fixes Monte Carlo 8162

crtw32\stdio\ungetwc.c
    Changed to NOT push characters back onto a string. This fixes Monte Carlo
    8052.

-----------------------------------------------------------------

Tue 24-Nov-98   (KFrei)

crtw32\rtc\shadow.cpp

    Removed a reference to InterlockedCompareExchange, which isn't available
    on Win95.

-----------------------------------------------------------------

Mon 23-Nov-98   (GregF)

crtw32\h\winheap.h
crtw32\heap\calloc.c, expand.c, free.c, heapchk.c, heapinit.c, heapmin.c,
    malloc.c, msize.c, realloc.c, sbheap.c
crtw32\misc\dbgheap.c

    Package of changes which resurrect the VC++ 5.0 small-block heap and
    implement a selection method to choose between the VC++ 6.0 small-block
    heap, the VC++ 5.0 small-block heap and no small-block heap at all.

-----------------------------------------------------------------

Thu 19-Nov-98   (JamesMa)

makefile.inc, srcrel\pd-b
    Added heap\new2.cpp, stdcpp\delaop.cpp, stdcpp\newaop.cpp, stdcpp\newaop2.cpp,
    stdcpp\delaop_s.cpp, stdcpp\newaop_s.cpp & stdcpp\newaop2_s.cpp
crtw32\heap\heap.mkf, crtw32\heap\lsources
    Added new2.obj
crtw32\heap\new.cpp
    Split off new[] to new2.cpp for better granularity.
crtw32\misc\dbgheap.c
    _crtDbgFlag now has _CRTDBG_CHECK_ALWAYS_DF set by default; also removed 2 tests
    prone to false positives and silenced error reporting from within CheckBytes().
crtw32\stdcpp\*, crtw32\stdhpp\*
    Updated all files to Plauger's drop of 11/13.
libw32\include
    Updated all STL headers to Plauger's drop of 11/13.

-----------------------------------------------------------------

Thu 29-Oct-98   (JamesMa)

crtw32\helper\i386\lldvrm.asm, crtw32\helper\i386\ulldvrm.asm
    New compiler helper files, courtesy of Simon Koeman.
crtw32\makefile, crtw32\makefile.inc
crtw32\srcrel\external.mkf, crtw32\srcrel\objects.mkf, crtw32\srcrel\pd-b
crtw32\helper\lsources, crtw32\helper\sources.nt
    Added lldvrm & ulldvrm to build process.

-----------------------------------------------------------------

Tue 27-Oct-98   (JamesMa)

crtw32\stdcpp\ios.cpp, crtw32\stdhpp\iosfwd, libw32\include\iosfwd
    Definition of BADOFF moved from ios.cpp to iosfwd for compatibility with 6.0 (MC bug #7642)

-----------------------------------------------------------------

Thu 22-Oct-98   (JamesMa)

makefile.sub
    Now uses batch-mode compilation.

-----------------------------------------------------------------

Tue 13-Oct-98   (gregf)

crtw32\heap\sbheap.c
    Added a check to __sbh_free_block for an already freed block. In case such
    a block is found, simply return with no other action.

crtw32\mbstring\ismbalph.c
    Minor typo, MT should have been _MT.

-----------------------------------------------------------------

Thu 08-Oct-98   (gregf)

crtw32\dllstuff\crtlib.c

crtw32\h\stdlib.h, winheap.h

crtw32\heap\calloc.c, expand.c, free.c, heapchk.c, heapinit.c, heapmin.c,
        malloc.c, msize.c. realloc.c, sbheap.c

crtw32\misc\getqloc.c

crtw32\startup\crt0.c, crt0dat.c, dllcrt0.c

libw32\msvcrt.src

libw32\include\stdlib.h

    Package of changes intended to suppress the small-block heap, by default,
    on NT 5.0. As part of this, use of GetVersion was replaced by GetVersionEx
    and a global variable, _osplatform, was introduced to distinguish between 
    NT and Win9x.

-----------------------------------------------------------------

Mon 28-Sep-98   (gregf)

crtw32\time\localtim.c, loctim64.c
    Fixed very minor error in determinin of DST status at the ends of the 
    Epoch. This was Monte Carlo 2842.

crtw32\time\tzset.c
    Fixed error in calculation of DST transition date (when the transition day
    is the first day of the month). This was Monte Carlo #1059

-----------------------------------------------------------------

Thu 24-Sep-98   (gregf)

crtw32\lowio\eof.c
    Use _lseeki64_lk instead of _lseek_lk so that _eof works with very large
    files. This was Monte Carlo bug 3834.

crtw32\misc\wperror.c
    Fixed handling of NULL, or empty, message string argument. This was Monte
    Carlo bug 2757.

-----------------------------------------------------------------

Tue 22-Sep-98   (gregf)

crtw32\stdio\input.c, output.c
    Added support for %I and %I32 size modifiers. %I is equivalent to %I32 in
    Crts for Win32 (and equivalent to %I64 in Crts for Win64).

-----------------------------------------------------------------

Sun 20-Sept-98   (JamesMa)

crtw32\stdhpp\xlocale, xlocnum
libw32\include\xlocale, xlocnum
        Restored explicit casts.

-----------------------------------------------------------------

Sat 12-Sept-98   (JamesMa)

srcrel\external.mkf
        Fixed translation of sampl[d|e]_.def (MC bug #5419).
crtw32\stdcpp\dlldef.obj
        Re-enabled warning 4667 (MC bug #3995, fixed in Plauger's 1st 6.1 drop).

-----------------------------------------------------------------

Fri 11-Sept-98   (JamesMa)

makefile, makefile.inc

crtw32\h\fpieee.h

crtw32\stdcpp\_tolower.c, _toupper.c, delop.cpp, delop_s.cpp, dlldef.cpp, fiopen.cpp,
        iomanip.cpp, ios.cpp, iostream.cpp, limits.cpp [NEW], locale.cpp, locale0.cpp, newop.cpp,
        newop_s.cpp, newop2.cpp, newop2_s.cpp, nomemory.cpp, stdthrow.cpp [NEW], string.cpp,
        strstrea.cpp, uncaught.cpp, wctrans.c, wctype.c,wiostrea.cpp, wlocale.cpp, xcosh.c,
        xdnorm.c, xdscale.c, xdtest.c, xexp.c, xfcosh.c,xfdnorm.c, xfdscale.c, xfdtest.c,
        xfexp.c, xfsinh.c, xfvalues.c, xlcosh.c, xldnorm.c,xldscale.c, xldtest.c, xlexp.c,
        xlocale.cpp, xlock.cpp, xlpoly.c, xlsinh.c, xlvalues.c,xmath.h, xmbtowc.c, xpoly.c,
        xsinh.c, xstod.c, xstrcoll.c, xstrxfrm.c, xvalues.c,xwcscoll.c, xwcsxfrm.c, xwctomb.c

crtw32\stdhpp\algorithm, bitset, cassert, cctype, cerrno, cfloat, ciso646, climits,
        clocale, cmath, complex, csetjmp, csignal, cstdarg, cstddef, cstdio, cstdlib, cstring,
        ctime, cwchar, cwctype, deque, exception, fstream, functional, iomanip, ios, iosfwd,
        iostream, iso646.h, istream, iterator, limits, list, locale, map, memory, new, numeric,
        ostream, queue, set, sstream, stack, stdexcept, stl.h, streambuf, string, strstream,
        typeinfo, use_ansi.h, utility, valarray, vector, wctype.h, xcomplex, xiosbase, xlocale,
        xlocinfo, xlocinfo.h, xlocmon, xlocmes [NEW], xlocnum, xloctime, xmemory, xstddef,
        xstring, xtree, xutility, ymath.h, yvals.h

fpw32\tran\lsources

fpw32\tran\i386\filter.c, filter_simd.c [NEW], xmmi_fp_emul.c [NEW], filter.h [NEW],
        temp_context.h [NEW], xmmi_types.h [NEW]

libw32\msvcp61.rc [NEW]

libw32\include\algorithm, bitset, cassert, cctype, cerrno, cfloat, ciso646, climits, clocale, cmath,
        complex, csetjmp, csignal, cstdarg, cstddef, cstdio, cstdlib, cstring, ctime, cwchar,
        cwctype, deque, exception, fpieee.h, fstream, functional, iomanip, ios, iosfwd, iostream,
        iso646.h, istream, iterator, limits, list, locale, map, memory, new, numeric, ostream,
        queue, set, sstream, stack, stdexcept, stl.h, streambuf, string, strstream, typeinfo,
        use_ansi.h, utility, valarray, vector, wctype.h, xcomplex, xiosbase, xlocale, xlocinfo,
        xlocinfo.h, xlocmon, xlocmes [NEW], xlocnum, xloctime, xmemory, xstddef, xstring, xtree,
        xutility, ymath.h, yvals.h

srcrel\external.mkf, mkclnmkf.c, objects.mkf, pd-b

-----------------------------------------------------------------

Fri 11-Sep-98   (GregF)

crtw32\misc\a_cmp.c, a_loc.c, a_map.c, a_str.c, w_cmp.c, w_loc.c, w_map.c,
        w_str.c
    Revised method of temporary allocations so that _malloc_crt is used if the
    attempt to use _alloca fails.

crtw32\misc\aw_com.c, mbtowenv.c, putenv.c, w_env.c, wtombenv.c
    Fixed cases where CP_ACP should have been used, but wasn't

crtw32\startup\i386\chkstk.asm
    Fixed handling of small frames

makefile.inc
crtw32\convert\_ctype.c, _mbslen.c, atox.c, isctype.c, iswctype.c, mblen.c,
        mbstowcs.c, mbtowc.c, strtol.c, tolower.c, toupper.c, towlower.c,
        towupper.c, wcstol.c, wcstombs.c, wctomb.c, xtow.c
crtw32\h\ctype.h, mtdll.h, setlocal.h, stdlib.h, string.h
crtw32\misc\initctyp.c, initmon.c, initnum.c, inittime.c, setlocal.c
crtw32\startup\tidtable.c
crtw32\string\lsources, memicmp.c, strcoll.c, stricmp.c, stricoll.c, strlwr.c,
        strncoll.c, strnicmp.c, strnicol.c, strupr.c, strxfrm.c, wcscoll.c,
        wcsicmp.c, wcsicoll.c, wcslwr.c, wcsncoll.c, wcsnicmp.c, wcsnicol.c,
        wcsupr.c, wcsxfrm.c
crtw32\string\i386\_memicmp.asm (renamed from memicmp.asm), _stricmp.asm
        (renamed from stricmp.asm), _strnicm.asm(renamed from strnicmp.asm)
crtw32\time\strftime.c, tzset.c, wcsftime.c
    Converted handling of locale data in multithread apps from a scheme of
    serializing access with our 'locks' to a scheme somewhat akin to per-thread
    data. More specifically, each thread has its own pointer to a copy of the
    locale info.

-----------------------------------------------------------------

Thu 30-July-98   (JamesMa)

crtw32\rtc\userapi.cpp
    Bug fix from KFrei: errnum is now type _RTC_ErrorNumber throughout.

-----------------------------------------------------------------

Tue 28-July-98   (JamesMa)

crtw32\rtc\bintree.cpp, callsite.cpp, chsyheap.cpp, contain.cpp, convert.cpp,
        error.cpp, fileio.cpp, init.cpp, memory.cpp, pdblkup.cpp, shadow.cpp,
        stack.cpp, userapi.cpp, lsources
    New directory & files - KFrei's RTC support.
crtw32\heap\calloc.c, delete.cpp, expand.c, free.c, malloc.c, new.cpp, realloc.cpp
misc\dbgdel.cpp, dbgheap.c, dbgnew.cpp, i386\chkesp.c
    RTC update.
crtw32\h\rtcsup.h, rtcapi.h, rtcpriv.h
    RTC headers (last 2 new).
crtw32\eh\comerr.cpp, lsources
    COM+ EH support routines from JonCaves (1st file new)
crtw32\startup\tidtable.c
    Per-thread COM+ EH variable initialization
crtw32\h\comerr.h, mtdll.h
    COM+ EH headers (1st file new)
crtw32\bsku\bsku.cpp, lsources
    New directory & files - support for 'Book SKU' version of CRTs.
libw32\include\rtcapi.h, comerr.h
    Release versions of new headers.
makefile, makefile.inc
srcrel\pd-b, objects.mkf, external.mkf, makefile
    Build support for RTC, COM+ EH & Book SKU.

-----------------------------------------------------------------

Tue 07-July-98   (JamesMa)

libw32\msvcrt.rc, msvcirt.rc, msvcp60.rc
    Version strings revved to 6.10 (Monte Carlo bug #3289).

-----------------------------------------------------------------

Mon 15-June-98   (GregF)

crtw32\time\gmtime64.c
    Fixed elapsed years calculation.

-----------------------------------------------------------------

Fri 12-June-98   (GregF)

crtw32\time\ftime64.c, gmtime64.c
    Fixed compiler warnings about assignments of __int64 values to ints or
    longs.

-----------------------------------------------------------------

Thu 11-June-98   (GregF)

crtw32\dos\stat64.h
crtw32\h\tchar.h, time.h
crtw32\lowio\fstat64.c
makefile.inc
    Fixes to the 6/8 checkin, plus one file (makefile.inc) that I forgot to
    check in.

-----------------------------------------------------------------

Mon 08-June-98   (GregF)

crtw32\direct\findf64.c, lsources, wfndf64.c
crtw32\dos\lsources, stat64.c, wstat64.c
crtw32\h\ctime.h, internal.h, io.h, tchar.h, time.h, wchar.h
crtw32\h\sys\stat.h, timeb.h, types.h, utime.h
crtw32\lowio\fstat64.c, lsources
crtw32\time\ctime64.c, dtoxtm64.c, ftime64.c, gmtime64.c, loctim64.c, lsources,
    mktime64.c, time64.c, tzset.c, utime64.c, wctime64.c
doc\copycrt.bat
srcrel\pd-b
    Implementation of support for a 64-bit time_t-like type. The new type is
    called __time64_t. For each old time_t-dependent type or function, there
    is a type or function using __time64_t in place of time_t.

crtw32\time\time.c
    Get UTC time directly from the system. Previously, UTC was computed from
    local time (for compatibility with Win32S).

-----------------------------------------------------------------

Tue 09-June-98   (JamesMa)

fpw32\conv\intrncvt.c
    Fixed long-standing off-by-1 error in _RoundMan().
crtw32\h\crtdbg.h
    Minor cleanups.
libw32\include\iso646.h, wctype.h, ymath.h, yvals.h, new
    Files were out-of-ssync with crtw32\h, primarily RTC and #pragma once changes.
libw32\include\crtdbg.h
    Updated copyright.

-----------------------------------------------------------------

Thu 28-May-98   (GregF)

crtw32\misc\a_cmp.c, a_map.c, w_cmp.c, w_map.c
    Fixed internal, string-length utilities, strncnt and wcsncnt. This
    fixes RAID VS98 45402.

-----------------------------------------------------------------

Wed 27-May-98   (GregF)

srcrel\pd-b
doc\copysrc.bat
    Build changes for ntcsup.h

-----------------------------------------------------------------

Tue 26-May-98   (GregF)

crtw32\h\ntcsup.h
    Added header needed by the immediately preceeding checkin.

-----------------------------------------------------------------

Fri 22-May-98   (JamesMa)

crtw32\heap\malloc.c, crtw32\heap\calloc.c, crtw32\heap\realloc.c, crtw32\heap\free.c,
        crtw32\heap\new.cpp, crtw32\heap\delete.cpp, crtw32\misc\dbgheap.c,
        crtw32\misc\dbgnew.cpp, crtw32\misc\dbgdel.cpp, crtw32\misc\i386\chkesp.c,
        crtw32\stdcpp\newop.cpp, crtw32\stdcpp\newop2.cpp, crtw32\stdcpp\delop.cpp,
        crtw32\stdhpp\new, crtw32\h\crtdbg.h, libw32\include\crtdbg.h, libw32\msvcrt.src
    Support for KFrei's RTC work, and operators new[] and delete[].
fpw32\tran\i386\filter.c
    Fix for VS98 bug 40117.

-----------------------------------------------------------------

Fri 01-May-98   (GregF)

crtw32\h\mbctype.h, mbdata.h, mbstring.h, mtdll.h
crtw32\mbstring\ismbalnm.c, ismbalph.c, ismbdgt.c, ismbgrph.c, ismblgl.c,
                ismblwr.c, ismbprn.c, ismbpunc.c, ismbsle.c, ismbspc.c,
                ismbstr.c, ismbupr.c, mbbtype.c, mbccpy.c, mbclen.c,
                mbclevel.c, mbctype.c, mbsbtype.c, mbschr.c, mbscmp.c,
                mbscoll.c, mbscspn.c, mbsdec.c, mbsicmp.c, mbsicoll.c,
                mbsinc.c, mbslen.c, mbslwr.c, mbsnbcat.c, mbsnbcmp.c,
                mbsnbcnt.c, mbsnbcol.c, mbsnbcpy.c, mbsnbicm.c, mbsnbico.c,
                mbsncat.c, mbsnccnt.c, mbsncmp.c, mbsncoll.c, mbsncpy.c,
                mbsnextc.c, mbsnicmp.c, mbsnicol.c, mbsnset.c, mbsrchr.c,
                mbsrev.c, mbsspn.c, mbsstr.c, mbstok.c, mbsupr.c,
                mbtolwr.c, mbtoupr.c, tojisjms.c
crtw32\misc\splitpat.c
crtw32\startup\tidtable.c
libw32\include\mbctype.h, mbstring
    Package of changes converting the multithread flavor of the mbc support
    over to using per-thread copies of the mbc info rather directly 
    referencing the global vars and arrays. The idea is that each thread has
    a private reference to a struct containing all the mbc info, and the logic
    to update that reference at the start of each function using it. While 
    many threads may be using the same struct (indeed, ideally they all are),
    each thread's reference is a per-thread datum. The structs themselves are 
    created, as needed, destroyed when no longer used by any thread, but never
    modified (except for a reference count field).

-----------------------------------------------------------------

Wed 29-Apr-98   (GregF)

srcrel\makefile
    Changed references to crt60 to crt60a.

-----------------------------------------------------------------

Fri 03-Apr-98   (JamesMa)

crtw32\startup\tlssup.c
    _tls_start & _tls_end are no longer initialized (VS98 bug #34711).

-----------------------------------------------------------------

Thu 26-Mar-98   (Gregf)

crtw32\dos\drive.c, getcwd.c
crtw32\heap\calloc.c, expand.c, free.c, heapchk.c, heapmin.c, malloc.c,
    msize.c, realloc.c
crtw32\lowio\chsize.c, close.c, commit.c, dup.c, dup2.c, eof.c, flength.c,
    fleni64.c, fstat.c, locking.c, lseek.c, lseeki64.c, open.c, pipe.c,
    read.c, setmode.c, write.c
crtw32\misc\dbgheap.c, getenv.c, onexit.c, perror.c, putenv.c, winsig.c,
    wperror.c
crtw32\stdio\clearerr.c, closeall.c, fclose.c, fdopen.c, fflush.c, fgetc.c,
    fgets.c, fgetwc.c, fopen.c, fprintf.c, fputc.c, fputs.c, fputwc.c,
    fputws.c, fread.c, freopen.c, fscanf.c, fseek.c, fseeki64.c, ftell.c,
    ftelli64.c, fwprintf.c, fwrite.c, fwscanf.c, gets.c, getw.c, popen.c,
    printf.c, puts.c, putw.c, rewind.c, rmtmp.c, scanf.c, setmaxf.c, setvbuf.c,
    stream.c, tempnam.c, tmpfile.c, ungetc.c, ungetwc.c, vfprintf.c,
    vfwprint.c, vprintf.c, vwprintf.c, wprintf.c, wscanf.c

    Exception-safe locking.

-----------------------------------------------------------------
Tues 10-Mar-98	(v-jfujii)

fpw32\tran\alpha\dpml_exc.c
	fix for bug#146614, invalid exception handling broken, found by the NT group

makefile
	removed "-filealign:8192" to Alpha linker flags

-----------------------------------------------------------------
Mon 9-Mar-98	(v-jfujii)

makefile
	added "-filealign:8192" to Alpha linker flags

-----------------------------------------------------------------

Tue 17-Feb-98   (JamesMa)

makefile
    Added "-filealign:4096" to x86 linker flags, per DanS's suggestion.
libw32\msvcrt.rc, msvcirt.rc, msvcp60.rc
    Now include verstamp.h instead of version.h and use 'rbld' as final
    field of FILEVERSION & PRODUCTVERSION.

-----------------------------------------------------------------
Thu 5-Feb-98	(v-jfujii)

crtw32\h\math.h
libw32\include\math.h
    add ALPHA declaration for ceil and floor

-----------------------------------------------------------------

Fri 30-Jan-98   (Gregf)

crtw32\convert\iswctype.c
    Allow meaningful processing of wide characters in the C locale. This is
    vaguely against the letter of ISO (which says locale does affect the isw*
    functions), but consistent with our own doc and far more useful than 
    treating every wide char > 255 as an error. Fixes NT bug 129235.

crtw32\time\tzset.c
    If no locale has been set for LC_ALL or LC_CTYPE, use the default ANSI 
    codepage when trying to convert the time zone name strings from UNICODE to
    multibyte. This fixes NT bug 100144.

-----------------------------------------------------------------

Thu 22-Jan-98   (JamesMa)

crtw32\stdhpp\deque, libw32\include\deque
    Fix for VS98 bug #26947.
crtw32\stdhpp\<all except cassert>, libw32\include\<all Std. C++ headers except cassert>
    Added "#pragma once" (VS98 bug #26683).

-----------------------------------------------------------------

Tue 20-Jan-98   (Gregf)

crtw32\h\setlocal.h
crtw32\misc\nlsdata2.c, setlocal.c
crtw32\string\strcoll.c, stricoll.c, strncoll.c, strnicol.c, strxfrm.c,
        wcscoll.c, wcsicoll.c, wcsncoll.c, wcsnicol.c, wcsxfrm.c
crtw32\stdcpp\xstrcoll.c, xstrxfrm.c, xwcscoll.c, xwcsxfrm.c
    Added new internal global, __lc_collate_cp, to keep track of and use the
    proper codepage for LC_COLLATE stuff. This fixes VC98 bug #25645.

crtw32\time\ftime.c
    Completely rewritten to fix the determination of DST status. This fixes
    VC98 bug #25763.

-----------------------------------------------------------------

Mon 19-Jan-98   (JamesMa)

crtw32\h\crtdbg.h, libw32\include\crtdbg.h
    At request of DeanM, made debug prototypes of new() & delete()
    #ifndef _MFC_OVERRIDES_NEW.

-----------------------------------------------------------------

Fri 09-Jan-98   (JamesMa)

makefile.sub
    Line number info is now removed from BBT-enabled dll .objs for which no
    source is shipped (VS98 bug #10687).
libw32\tools\i386\whackline.exe
    New file; removes line number info from .objs, courtesy of DanS/KHerold.
crtw32\tools\win32\newline.sed, crtw32\tools\win32\delblank.sed
    New files; needed for 'whackline' processing.
srcrel\pd-b
    Added libw32\tools\i386\whackline.exe, crtw32\tools\win32\newline.sed and
    crtw32\tools\win32\delblank.sed
makefile
    .pdbs for BBT-enabled dlls are now created in bbt\dll_pdb subdirectory.

-----------------------------------------------------------------

Fri 19-Dec-97   (JamesMa)

crtw32\stdhpp\xlocnum, libw32\include\xlocnum
    Fixed buffer-overflow problem (VS98 #4706) by enlarging internal buffers.

-----------------------------------------------------------------

Mon 15-Dec-97   (Gregf)

crtw32\misc\initctyp.c
    When no codepage is defined, use LOCALE_IDEFAULTANSICODEPAGE, rather than
    LOCALE_IDEFAULTCODEPAGE.

crtw32\stdcpp\xstrcoll.c, xstrxfrm.c, xwcscoll.c, xwcsxfrm.c
crtw32\string\strcoll.c, stricoll.c, strncoll.c, strnicol.c, strxfrm.c,
              wcscoll.c, wcsicoll.c, wcsncoll.c, wcsnicol.c, wcsxfrm.c
    Use __lc_codepage in the locale-dependent string functions.

-----------------------------------------------------------------

Fri 12-Dec-97   (JamesMa)

crtw32\h\eh.h, libw32\include\eh.h, crtw32\h\process.h,
        libw32\include\process.h, crtw32\h\setjmp.h, libw32\include\setjmp.h 
    All __declspec(noreturn)s are now #ifdef _MSC_VER >= 1200 (VS98 #22226).
crtw32\h\stdlib.h, libw32\include\stdlib.h
    Protos for abort, exit & _exit are now __declspec(noreturn) (VS98 #22223).
cleanbld.cmd, srcrel\external.mkf, srcrel\makefile, srcrel\objects.mkf
    Now builds CRTs into a directory specified by CRT_BUILDDIR environment
    variable; default is \msdev, as always.

-----------------------------------------------------------------

Thu 11-Dec-97   (Gregf)

crtw32\stdhpp\functional
    Added const to () definition in mem_fun* (e.g., mem_fun_t) template classes.
    This fixes VS 98 bug #21393.

-----------------------------------------------------------------

Tue 09-Dec-97   (Gregf)

crtw32\heap\sbheap.c
    Release the address space reserved for a region when that region is
    is discarded. This fixes VS98 #21538.

-----------------------------------------------------------------

Mon 08-Dec-1997	(v-jfujii)

makefile
	add -Gy to Alpha specific CC_OPTS and AS_OPTS

fpw32\tran\alpha\pows.s
	change .eflag value from 128 to 4

-----------------------------------------------------------------

Thu 04-Dec-97   (JamesMa)

crtw32\stdhpp\utility, libw32\include\utility
    Added constructor for pair cv-conversion bug (VS98 #16727).
crtw32\stdhpp\queue, libw32\include\queue
    Includes <functional> (VS98 #20113).
crtw32\stdhpp\list, libw32\include\list
    _Next & _Prev are now _Node *, not void * (VS98 #1491).
crtw32\stdhpp\xtree, libw32\include\xtree
    _Next, _Parent & _Right are now _Node *, not void * (VS98 #1491).
    (Kudos to MMalone for observing that these last 2 fixes are now feasible!)

-----------------------------------------------------------------

Tues 25-Nov-97 (v-jfujii)

crtw32\helper\alpha\smove.s, smovem.s - check in the fixes to OtsMove and OtsMoveMinimum to prevent them from prefetching beyond their buffers.
  
-----------------------------------------------------------------

Fri 21-Nov-97   (JamesMa)

crtw32\h\process.h, libw32\include\process.h
    _cexit() & _c_exit() are no longer __declspec(noreturn).
makefile
    .pdbs for the debug dlls are now generated in a dll_pdb subdirectory with
    their 'natural' names.
doc\copycrt.bat
    .pdbs for the debug dlls are now copied from a dll_pdb subdirectory.

-----------------------------------------------------------------

Wed 19-Nov-97   (JamesMa)

crtw32\h\math.h, libw32\include\math.h
    Cleaned up _Pow_int to prevent C4146.
crtw32\stdhpp\new, libw32\include\new
    Removed extern _New_hand (VS98 #18416).
crtw32\stdhpp\xcomplex, libw32\include\xcomplex
    Added redefiniton guard (VS98 #18346).
crtw32\stdhpp\xtree, libw32\include\xtree
    Tidied up redefinition guard (_XTREE_ instead of _TREE_).

-----------------------------------------------------------------

Thu 13-Nov-97   (JamesMa)

crtw32\makefile
    Image base of msvcp60d.dll moved from 10400000 to 10480000 (VS98 #4687). 

-----------------------------------------------------------------

Fri 07-Nov-97   (GregF)

crtw32\mbstring\mbsncoll.c
    Small fix for POSIX build from Roger Lanser (already in ia64 tree).

-----------------------------------------------------------------

Thu 06-Nov-97   (GregF)

crtw32\heap\calloc.c, expand.c, free.c, malloc.c, msize.c, realloc.c
    Small fixes for POSIX build from Roger Lanser.

crtw32\h\wchar.h
libw32\include\wchar.h
    Enclosed macro and inline defs of isleadbyte() in #ifndef 
    _CTYPE_DISABLE_MACROS. Affected NT build.

-----------------------------------------------------------------

Mon 03-Nov-97   (v-jfujii)
crtw32\helper\alpha\sfill.s 
    check in fix for NTBUG#115659, Win16 apps on Alpha - most dialog title 
    bars contain garbage text "yyyyyyy|||||||||".

-----------------------------------------------------------------

Mon 03-Nov-97   (JamesMa)

crtw32\convert\wtox.c
    Fixed buffer-size bug in __int64 version (VS98 #15991).

-----------------------------------------------------------------

Thu 30-Oct-97   (JamesMa)

cleanbld.cmd
    Added 'DELNODE' argument; returns errlev.
makefile
    Debug dll .pdbs now named msvcxxx_dll.pdb.
doc\copycrt.bat
    New msvcxxx_dll.pdbs copied to debug\msvcxxx.pdb.
srcrel\external.mkf
    Striplin.exe now built with default compiler.
srcrel\makefile
    Mkclnmkf.exe now built with default compiler.
crtw32\h\eh.h, libw32\include\eh.h
    terminate() & unexpected() now __declspec(noreturn).
crtw32\h\process.h, libw32\include\process.h
    abort(), exit(), _exit(), _cexit() and _c_exit() now __declspec(noreturn).
crtw32\h\setjmp.h, libw32\include\setjmp.h
    longjmp() now __declspec(noreturn).

-----------------------------------------------------------------

Mon 22-Oct-97   (GregF)

crtw32\stdhpp\list
libw32\include\list
    Added constructor (for list) for a pair of const _Ty * -s. This fixes
    VS98 bug #1478.

-----------------------------------------------------------------

Fri 17-Oct-97   (GregF)

crtw32\stdhpp\vector
libw32\include\vector
    Changed relational operators (==, et al) from member functions to template
    functions. This fixes VS98 #1047.

-----------------------------------------------------------------

Tue 14-Oct-97   (GregF)

crtw32\stdhpp\map
libw32\include\map
    Added assignment operator to map and multimap templates

crtw32\stdhpp\set
crtw32\include\set
    Made the const and non-const iterator types in the set and multiset 
    templates distinct, same for const and non-const reference types. Added
    versions of appropriate methods for non-const iterators. This fixes
    VS98 bug #1458.

crt tests\test\old\slconform\t23a.cpp
    Removed the const from the defs of Ptrty so that it is distinct from 
    Cptrty. This goes with the change to the set header above.

-----------------------------------------------------------------

Fri 10-Oct-97   (v-jfujii)

crtw32\helper\alpha\insv.s - check in a fix that made it into the NT pool 
    but not here.  see raid db VS98 #11884

-----------------------------------------------------------------

Mon 06-Oct-97   (JamesMa)

makefile.inc
    Non-debug version of chkesp.obj now used exclusively (bug #10687).
crtw32\heap\malloc.c
    Minor Posix fix - wrong #endifs corrected.
crtw32\h\assert.h, conio.h, ctype.h, direct.h, dos.h, eh.h, errno.h, excpt.h,
        float.h, fpieee.h, io.h, locale.h, malloc.h, math.h, mbctype.h,
        mbstring.h, memory.h, new.h, process.h, search.h, setjmp.h, signal.h,
        stddef.h, stdio.h, stdlib.h, string.h, time.h, wchar.h,
        crtw32\h\sys\stat.h, timeb.h, utime.h, crtw32\stdhpp\wctype.h,
        libw32\include\assert.h, conio.h, ctype.h, direct.h, dos.h, eh.h, errno.h,
        excpt.h, float.h, fpieee.h, io.h, locale.h, malloc.h, math.h, mbctype.h,
        mbstring.h, memory.h, new.h, process.h, search.h, setjmp.h, signal.h,
        stddef.h, stdio.h, stdlib.h, string.h, time.h, wchar.h, wctype.h,
        libw32\include\sys\stat.h, timeb.h, utime.h
    Restored not-so-obsolete _CRTAPI1 macro.
crtw32\h\mbdata.h, crtw32\h\stdio.h, libw32\include\stdio.h
    Incorporated BryanT's _POSIX #ifdefs.

-----------------------------------------------------------------

Tue 30-Sep-97   (BryanT)

crtw32\heap\calloc.c, expand.c, free.c, heapinit.c, heapmin.c,
    malloc.c, msize.c, realloc.c

crtw32\mbstring\ismbalnm.c, ismbalph.c, ismbdgt.c, ismbgrph.c,
    ismblwr.c, ismbprn.c, ismbpunc.c, ismbspc.c, ismbupr.c, mbctype.c
    mbscoll.c, mbsicmp.c, mbsicoll.c, mbslwr.c, mbsnbcol.c, mbsnbico.c
    mbsncoll.c, mbsnicol.c, mbsupr.c, mbtolwr.c, mbtoupr.c

crtw32\misc\perror.c

crtw32\startup\crt0dat.c, tidtable.c

crtw32\stdio\_file.c, fdopen.c

fpw32\tran\alpha\*.s, *.c

<Lots of DIRS/SOURCES/SOURCES.NT files)

makefile

    Fix POSIX build and resync with the NT sources.

-----------------------------------------------------------------

Tue 30-Sep-97   (GregF)

crt60\makefile
    Changed the base address of the load image of msvcp60d.dll to 0x10400000.
    This fixes (one hopes!) VS98 bug #4687.

-----------------------------------------------------------------

Tue 23-Sep-97   (GregF)

crtw32\convert\xtoa.c
    Put in the one line of code needed to handle negative __int674 values.
    This fixes VS98 bug #9170.

crtw32\heap\sbheap.c
    Conditioned (#if 0) out DumpEntry from the build, but left it in the
    source. It was obviously leftover from when Rich was debugging his new
    heap scheme. This fixes VS98 bug #10075.

-----------------------------------------------------------------

Mon 22-Sep-97   (JamesMa)

crtw32\mbstring\mbbtype.c, crtw32\misc\w_loc.c, crtw32\misc\w_map.c,
        crtw32\misc\w_str.c, crtw32\misc\w_cmp.c, crtw32\misc\w_env.c,
        crtw32\misc\a_loc.c, crtw32\misc\a_map.c, crtw32\misc\a_atr.c,
        crtw32\misc\a_cmp.c, crtw32\misc\aw_com.c
    Trivial return statements added to avoid new C4715 warnings.
crtw32\stdcpp\xmbtowc.c
    Non-trivial return statement added to avoid new C4715 warning.
crtw32\heap\handler.cpp
    "OBSOLETE" warning removed from _set_new_handler() (VS98 bug #9126).
libw32\msvcrt.rc, libw32\msvcirt.rc, libw32\msvcp60.rc
    Revved version & copyright strings (VS98 bug #9826).
crtw32\tools\win32\relinc.cmd
    Now ifstrips crtw32\stdhpp headers.
crtw32\tools\win32\relinc.if
    Now removes "#ifdef __FORCE_INSTANCE" blocks.
libw32\include\complex, fstream, ios, istream, locale, sstream, streambuf,
        string, wctype.h, xcomplex, xlocale, xlocmon, xlocnum, xloctime,
        xstddef, xstring, yvals.h
    Ifstripped to remove "#ifdef CRTDLL2" & "#ifdef __FORCE_INSTANCE"
    blocks and "#ifndef CRTDLL2" statements.
libw32\include\ostream
    Ifstripped as above; fix of 8/7/97 to crtw32\stdhpp version propagated.

-----------------------------------------------------------------

Mon 15-Sep-97   (JamesMa)

crtw32\stdhpp\deque, libw32\include\deque
    Fixed several memory-corruption bugs, including VS98 #879.
crtw32\stdhpp\utility, libw32\include\utility
    Prevented C4700 warnings (VS98 #6932).
crtw32\stdhpp\xstring, libw32\include\xstring
    No longer disables C4700, per fix to VS98 #6932.
crtw32\h\math.h, libw32\include\math.h
    Removed bogus single-line comment (VS98 #7870).

-----------------------------------------------------------------

Fri 12-Sep-97   (JamesMa)

crtw32\h\tchar.h, libw32\include\tchar.h
    Restored mapping of _tcslen to strlen (VS98 #9443).

-----------------------------------------------------------------

Fri 12-Sep-97   (GregF)

crtw32\h\mbdata.h
    Added declaration for __ismbcodepage, and the _ISMBCP and _ISNOTMBCP
    macros.

crtw32\mbstring\ismbalnm.c, ismbalph.c, ismbdgt.c, ismbgrph.c, ismblwr.c,
                ismbprn.c, ismbpunc.c, ismbsle.c, ismbspc.c, ismbstr.c,
                ismbupr.c,mbsbtype.c, mbschr.c, mbscmp.c, mbscspn.c, mbsdec.c,
                mbsicmp.c, mbslen.c, mbsnbcat.c, mbsnbcmp.c, mbsnbcpy.c,
                mbsnbicm.c, mbsnbset.c, mbsncat.c, mbsncmp.c, mbsncpy.c,
                mbsnicmp.c, mbsnset.c, mbsrchr.c, mbsrev.c, mbsset.c, mbsspn.c,
                mbsstr.c, mbstok.c
    Replaced occurence of the expressions (__mbcodepage == 0) and )0 ==
    __mbcodepage) with the macro _ISNOTMBCP. Also, fixed up some indents while
    I was at it. This fixes VS98 bug #8704.

crtw32\mbstring\mbctype.c
    Added __ismbcodepage to keep track of whether or not the current code page
    is really a multibyte code page. Used this restore the old return semantics
    of _getmbcp(). This fixes VS98 bug #9443.

-----------------------------------------------------------------

Mon 08-Sep-97   (GregF)

crtw32\stdhpp\algorithm
libw32\include\algorithm
    Initialize _D1n and _D2n to 0 as per VS98 bug #5754.

crtw32\stdhpp\memory
libw32\include\memory
    Better version of the fix below (i.e., it doesn't break self-assignment).
    This fixes VS98 bug #2678 (trust me).

-----------------------------------------------------------------

Tue 02-Sep-97   (GregF)

crtw32\stdhpp\memory
    Revised auto_ptr's assignment overload so as to transfer ownership status
    from the rhs to the lhs, and ensure the rhs no longer owns the allocation.
    This fixes VS98 bug #2678.

-----------------------------------------------------------------
Fri 29-Aug-1997 (v-jfujii)

fpw32\tran\alpha\frexp.s
    add alpha specific implementation of frexp()

fpw32\tran\alpha\ldexp.s
    add alpha specific implementation of ldex()

fpw32\tran\alpha\dpml_exc.c
    fix vs98 #4102 and #1474

fpw32\tran\alpha\ieee.c
    fix vs98 #4103

fpw32\tran\alpha\pows.s
    fix long standing bug, pow(0,-1) should return +INF instead of -INF

fpw32\tran\lsources
    add -Gy to alpha specific CFLAGS and AFLAGS

-----------------------------------------------------------------

Fri 29-Aug-97   (GregF)

crtw32\lowio\osfinfo.c
    Changed _open_osfhandle to propagate the _O_NOINERIT flag to the lowio
    flags. This fixes VS98 bug #7762.

-----------------------------------------------------------------

Thu 28-Aug-97   (GregF)

crtw32\time\tzset.c
    Fixed the underflow adjustment in cvtdate(). This fixed VS98 bug #881.
    Also, removed some obsolete Win32S support and detab-ed.

-----------------------------------------------------------------

Wed 27-Aug-97   (GregF)

crtw32\time\clock.c
    Use the GetSystemTimeAsFileTime API. Also, detab-ed. This fixes VS98
    bug #442.

-----------------------------------------------------------------

Mon 25-Aug-97   (JamesMa)

crtw32\misc\i386\chkesp.c
    New file: CRT component of KendricS's stack-checking routines - x86 only.
makefile.inc, crtw32\misc\lsources, srcrel\objects.mkf
    Added chkesp.obj.
srcrel\pd-b
    Added crtw32\misc\i386\chkesp.c.
libw32\msvcrt.src
    Added _chkesp.
fpw32\tran\i386\trig.asm
    Fix for VS98 bug #6160.

-----------------------------------------------------------------

Fri 22-Aug-97   (GregF)

crtw32\misc\inittime.c
    Get the time format string from Win32 rather than making up our own
    version. I don't know when this support went into NT, but it's in both
    NT 4.0 and Win95!
crtw32\time\strftime.c
    Added support for an AM/PM suffix to the time string.

-----------------------------------------------------------------

Fri 15-Aug-97   (GregF)

crtw32\h\tchar.h
libw32\include\tchar.h
    _ttoi64 now maps to _atoi64 (VC98 bug #1511)

crtw32\h\tchar.h
makefile
    Map _tcslen to _mbslen when _MBCS is defined (via alias record built by
    makefile) (VC98 bug #2729). Also, added comments to explain why this is
    not necessary for _tcscat, _tcscpy and _tcsdup.

crtw32\h\crtdbg.h, ctype.h, malloc.h, mbctype.h, stdio.h, stdlib.h, time.h
         wchar.h
libw32\include\crtdbg.h, ctype.h, malloc.h, mbctype.h, stdio.h, stdlib.h,
       time.h, wchar.h
    Strip out __p_ prototypes from the 'release' version of the header files.
    This addresses VC98 bug #2244

crtw32\h\crtdbg.h
libw32\include\crtdbg.h
    Moved the constant and type definitions out of the #ifndef _DEBUG - #else
    - #endif block. Thus, these constants and types are ALWAYS defined when
    the header is #include-d. This address VC98 #1400.

-----------------------------------------------------------------

Fri 15-Aug-97   (JamesMa)

stdhpp\functional, libw32\include\functional
    Fix for VC98 Bug #3140.
stdhpp\iosfwd, stdhpp\xmemory, libw32\include\iosfwd, libw32\include\xmemory
    Minor syntax clean-ups (VC98 Bug #1494).

-----------------------------------------------------------------

Thu 14-Aug-97   (JamesMa)

cleanbld.cmd, clns_bld.bat, makefile, srcrel\bldnt.cmd,
srcrel\bldwin95.bat, srcrel\external.mkf, srcrel\makefile
    V5TOOLS => V6TOOLS (VC98 bug #4064).
srcrel\mkclnmkf.c, srcrel\_sample_.r
    Revved version numbers from 4.0 to 6.0 (VC98 bug #4064).
srcrel\_sample_.rc
    Revved version numbers from 5.0 to 6.0 (VC98 bug #4064).
crtw32\convert\_fptostr.c
    strcpy() replaced by memmove() (VC98 Bug #1473).
crtw32\h\new.h, libw32\include\new.h
    set_new_handler() now __cdecl. (VC98 Bug #3034).
crtw32\h\strstrea.h, libw32\include\strstrea.h
    Title in comment now "strstrea.h", not "strstream.h" (VCBug #3133).
crtw32\heap\handler.cpp, crtw32\heap\setnewh.cpp, crtw32\heap\new_mode.cpp
    All routines now appropriately __cdecl.
crtw32\stdcpp\x{f|l}[cosh|sinh|exp].c
    All routines now appropriately __cdecl (VCBug #6039).
crtw32\stdhpp\ymath.h, libw32\include\ymath.h
    All routines now appropriately __cdecl (VCBug #6039);
    unwanted prototypes for _Log & _Sin removed.
crtw32\stdhpp\istream, libw32\include\istream
    Fix for VCBug #1308.
crtw32\stdhpp\limits, libw32\include\limits
    "ignaling" => "signaling" (VCBug #3112).
crtw32\stdhpp\xstring, libw32\include\xstring
    _Nullstr now __cdecl (VCBug #438).

-----------------------------------------------------------------

Fri 08-Aug-97   (GregF)

crtw32\stdio\tmpfile.c
    Removed unused local from the multithread version of _ttmpfile(). The new
    and much pickier frontend issued a warning and broke our build. Also,
    detab-ed it.

crtw32\dllstuff\crtlib.c
    Rearranged ifdef-s so the local, ptd, is only defined when ANSI_NEW_HANDLER
    is defined (which is the only case where it is needed).

-----------------------------------------------------------------

Thu 07-Aug-97   (JamesMa)

crtw32\stdhpp\xstring
    Fixed memory overwrite problem (VC98 bugs 1451 & 3159).

crtw32\eh\ehveccvb.cpp, frame.cpp, unhandld.cpp, user.cpp
    Disabled new compiler warning C4191.

crtw32\eh\rtti.cpp, fpw32\conv\cvt.c, fpw32\conv\tenpow.c, crtw32\stdhpp\ostream
    Removed unused locals to avoid new compiler warning C4189.

crtw32\h\internal.h, crtw32\heap\sbheap.c, crtw32\stdcpp\xdscale, crtw32\stdcpp\xfdscale.cpp
    Minor modifications to avoid new compiler warning c4554.

-----------------------------------------------------------------

Wed 06-Aug-97   (GregF)

crtw32\startup\crt0.c, crt0dat.c
    Moved definition of __mbsctype_initialized from crt0.c to crt0dat.c

-----------------------------------------------------------------

Tue 15-July-97   (JamesMa)

crtw32\h\sys\stat.h, libw32\include\sys\stat.h
    Restored oldnames for stat() & fstat() (VC98 bug 3809).

-----------------------------------------------------------------

Mon 07-July-97   (GregF)

crt60\makefile.sub
    Changed compiler opt switch to 'size' rather than 'speed'.

crt60\crtw32\misc\getqloc.c
    Made use of a suggestion of Dean McCrory's, the arrays of data are now
    __declspec( selectany ) (note that I had to make all of them global in
    order to do this). This allows the linker to eliminate them from the load
    image when possible (don't ask, it's voodoo to me too).

-----------------------------------------------------------------
Mon 30-Jun-97	(v-jfujii)

fpw32\tran\alpha\dpml_exc.c
     fixes a bug found in the previous version checked in

fpw32\tran\alpha\captcont.s, dpml_com.s
     latest release of the above files.  actually dpml_com.s did not change.

-----------------------------------------------------------------

Mon 23-Jun-97   (v-jfujii)

fpw32\tran\lsources
     added alpha-specific assembler flag

fpw32\tran\alpha\cabs.s, cabsf.s
     replace previous checkin of wrong versions of the above files

fpw32\tran\alpha\dpml_exc.c
     checkin the latest dpml_exc.c

-----------------------------------------------------------------

Mon 23-June-97   (GregF)

crtw32\h\math.h
    Fixed minor typo introduced by DEC checkin on 6/19. Inline acosf() body
    was missing ';'. Oddly, the cleansed libw32\include\math.h didn't have the
    typo!

-----------------------------------------------------------------

Fri 20-Jun-97   (v-kimpe)

fpw32\tran\alpha\*.s
     update all files with the latest.  this fixes a number of exception
     handling problems

-----------------------------------------------------------------

Fri 20-June-97   (GregF)

crtw32\startup\mlock.c
crtw32\stdio\_file.c
    Moved stdio-level file locking from mlock.c to _file.c. While in mlock.c,
    it caused most of stdio to be pulled into any multithread app, whether
    the app actually used stdio-level i/o or not.

-----------------------------------------------------------------

Fri 13-June-97   (GregF)

makefile.inc

crtw32\misc\aw_cmp.c -> a_cmp.c and w_cmp.c
            aw_env.c -> a_env.c and w_env.c
            aw_loc.c -> a_loc.c and w_loc.c
            aw_map.c -> a_map.c and w_map.c
            aw_str.c -> a_str.c and w_str.c

doc\copysrc.bat

srcrel\pd-b

    Split the multibyte and wide character versions into different source
    files. Also, replaced the use of malloc/free with _alloca and cleaned
    up some brain-damage in the code.

-----------------------------------------------------------------

Wed 04-June-97   (JamesMa)

crtw32\makefile.inc
crtw32\stdcpp\delop_s.cpp, newop_s.cpp, newop2_s.cpp
    Static components of msvcprt.lib now built with .pdb info in msvcprt[d].pdb
crtw32\stdcpp\dlldef.cpp
    Cleaned up export of basic_ostream<wchar_t ...> insertion operator.
crtw32\stdhpp\xlocale
    Added export of ctype<wchar_t>
crtw32\stdhpp\fstream
    Cosmetic change only - bogus _Fiopen() member removed altogether.

-----------------------------------------------------------------

Mon 02-Jun-97   (Richk)

crtw32\h\winheap.h
crtw32\heap\calloc.c, expand.c, free.c, heapchk.c, heapinit.c, heapmin.c,
            malloc.c, msize.c, realloc.c, sbheap.c
crtw32\misc\dbgheap.c
    Implemented new small-block heap scheme.

-----------------------------------------------------------------

Thu 22-May-97   (JamesMa)

crtw32\makefile
crtw32\stdcpp\dlldef.cpp, fiopen.cpp, locale.cpp, xlocale.cpp, wlocale.cpp
crtw32\stdhpp\complex, fstream, ios, iosfwd, istream, locale, ostream,
        sstream, streambuf, string, typeinfo, utility, xcomplex,
        xlocale, xlocmon, xlocnum, xloctime, xstring
libw32\include\complex, fstream, ios, iosfwd, istream, locale, ostream,
        sstream, streambuf, string, typeinfo, utility, xcomplex,
        xlocale, xlocmon, xlocnum, xloctime, xstring
libw32\msvcprt.src, msvcp60.rc (new file)
srcrel\external.mkf, mkclnmkf.c, objects.mkf, pd-b

    This package of changes restores most of the exports missing from
    msvcp50[d].dll as a result of changes to the post-VC++5.0 compiler
    and renames the C++ .dll to msvcp60[d].dll

-----------------------------------------------------------------

Mon 12-May-97   (Richk)

crtw32\stdcpp\dlldef.cpp
    Provided basic_string npos defintion flavor for VC 5.0 compiler.

-----------------------------------------------------------------

Mon 12-May-97   (JamesMa)

crtw32\stdhpp\locale, crtw32\stdhpp\xlocnum, libw32\include\locale, libw32\include\xlocnum
    Inline 2-parameter isdigit() moved from locale to xlocnum.

-----------------------------------------------------------------

Mon 21-Apr-97   (JamesMa)

crtw32\h\crtdbg.h, libw32\include\crtdbg.h
    4-parameter operator delete() now #ifdef _MSC_VER >=1200.
crtw32\stdcpp\string.cpp, strstrea.cpp, wiostrea.cpp,
        iomanip.cpp, iostream.cpp, fiopen.cpp
    Added #include <locale> to pick up 2-param isdigit().

-----------------------------------------------------------------

Tue 22-Apr-97   (JamesMa)

libw32\include\crtdbg.h, libw32\include\new.h, libw32\include\new,
        libw32\include\string, libw32\include\xlocnum
    Updated with yesterday's changes.

-----------------------------------------------------------------

Mon 21-Apr-97   (JamesMa)

crtw32\h\crtdbg.h
    Added operator delete() corresponding to debug operator new().
crtw32\h\new.h, crtw32\stdhpp\new
    Placement delete() now #if _MSC_VER > 1200
crtw32\stdcpp\dlldef.cpp,crtw32\stdhpp\string, crtw32\stdhpp\xlocnum
    Syntax modified to agree with 6.0 compiler.

-----------------------------------------------------------------

Fri 18-Apr-97   (JamesMa)

crtw32\eh\frame.cpp
    In __InternalCxxFrameHandler(), 'recursive' changed to BOOLEAN.
crtw32\h\new.h, crtw32\stdhpp\new, libw32\include\new.h, libw32\h\new
    Placement operator delete() added.
crtw32\heap\sbheap.c, crtw32\mbstring\mbctype.c, crtw32\stdio\fputwc.c,
        crtw32\stdio\fgetwc.c, crtw32\stdcpp\strstrea.cpp, crtw32\stdcpp\xmbtowc.c,
        crtw32\stdcpp\xdscale.c, crtw32\stdcpp\xfdscale.c, crtw32\stdhpp\xlocale,
        libw32\include\xlocale, crtw32\stdhpp\xlocmon, libw32\include\xlocmon,
        crtw32\stdhpp\xlocnum, libw32\include\xlocnum, crtw32\stdhpp\xloctime,
        libw32\include\xloctime, crtw32\stdhpp\fstream, libw32\include\fstream,
        crtw32\stdhpp\istream, libw32\include\istream, crtw32\stdhpp\xlocale,
        libw32\include\xlocale, crtw32\stdhpp\iosfwd, libw32\include\iosfwd
    Explicit casts added to avoid new C4242 warnings.

-----------------------------------------------------------------

Fri 18-Apr-97   (GregF)

crtw32\h\stdlib.h, internal.h
libw32\include\stdlib.h
    Restored macros (see change notes for April 4, below) for _[w]pgmptr and
    _[w]initenv.

-----------------------------------------------------------------

Fri 04-Apr-97   (GregF)

crtw32\h\stdlib.h
libw32\include\stdlib.h
    Restored some of the macros defining globals as dereferenced functions in
    the DLL (removed as part of the change below). These may be useful in
    later performance work.

-----------------------------------------------------------------

Mon 31-Mar-97	(GregF)

crtw32\h\assert.h, cmsgs.h, conio.h, crtdbg.h, cruntime.h, ctime.h, ctype.h,
         cvt.h, dbgint.h, direct.h, dos.h, dostypes.h, eh.h, ehassert.h,
         ehhooks.h, ehstate.h, errmsg.h, errno.h, excpt.h, fcntl.h, file2.h,
         float.h, fltintrn.h, fpieee.h, fstream.h, heap.h, internal.h, io.h,
         iomanip.h, ios.h, iostream.h, istream.h, limits.h, locale.h,
         malloc.h, math.h, mbctype.h, mbdata.h, mbstring.h, memory.h,
         minmax.h, msdos.h, mtdll.h, mtest.h, new.h, nlsint.h, oscalls.h,
         ostream.h, plstring.h, process.h, rterr.h, rtti.h, search.h,
         setjmp.h, setjmpex.h, setlocal.h, share.h, signal.h, sizeptr.h,
         stdarg.h, stddef.h, stdexcpt,h, stdio.h, stdiostr.h, stdlib.h,
         streamb.h, string.h, strstrea.h, syserr.h, tchar.h, time.h,
         trnsctrl.h, typeinfo.h, useoldio.h, v2tov3.h, varargs.h, wchar.h,
         winheap.h

crtw32\h\sys\stat.h, timeb.h, types.h, utime.h

crtw32\stdhpp\wctype.h

libw32\include\*.h (headers corresponding to the ones listed above)

    Large package of minor changes. I deleted the support for/usage of the
    obsolete macros: _CALLTYPE*, _CRTAPI*, DLL_FOR_WIN32S and _NTSDK. I also
    removed other macros supporting Win32s. Where appropriate I replaced
    defined(_M_MPPC) && defined(_M_M68K) with defined(_MAC). I detab-ed the
    headers and made other minor cosmetic changes while I was at it.

-----------------------------------------------------------------

Thu 27-Mar-97	(Richk)

crtw32\convert\isctype.c
crtw32\convert\tolower.c
crtw32\convert\toupper.c
crtw32\dllstuff\crtlib.c
crtw32\dllstuff\imp_data.c
crtw32\dllstuff\macdll\msvcrt.def
crtw32\dllstuff\macdll\msvcrtd.def
crtw32\h\awint.h
crtw32\h\mbctype.h
crtw32\h\mbdata.h
crtw32\mbstring\ismbalnm.c
crtw32\mbstring\ismbalph.c
crtw32\mbstring\ismbdgt.c
crtw32\mbstring\ismbgrph.c
crtw32\mbstring\ismblwr.c
crtw32\mbstring\ismbprn.c
crtw32\mbstring\ismbpunc.c
crtw32\mbstring\ismbspc.c
crtw32\mbstring\ismbupr.c
crtw32\mbstring\mbctype.c
crtw32\mbstring\mbsicmp.c
crtw32\mbstring\mbslwr.c
crtw32\mbstring\mbsnbicm.c
crtw32\mbstring\mbsnicmp.c
crtw32\mbstring\mbsupr.c
crtw32\mbstring\mbtolwr.c
crtw32\mbstring\mbtoupr.c
crtw32\misc\aw_map.c
crtw32\misc\aw_str.c
crtw32\misc\initctyp.c
crtw32\stdcpp\_tolower.c
crtw32\stdcpp\_toupper.c
crtw32\stdcpp\xstrxfrm.c
crtw32\string\strlwr.c
crtw32\string\strupr.c
crtw32\string\strxfrm.c
libw32\include\mbctype.h
    Calling _setmbcp with a single-byte codepage now uses that
    codepage for upper/lowercase translations for OEM characters.

-----------------------------------------------------------------

Tue 18-Mar-97	(v-JohnMo)

crtw32\eh\ppc\handlers.s
crtw32\helper\ppc\memcpy_.s
crtw32\startup\ppc\chkstk.s
crtw32\string\ppc\memmovep.s
fpw32\include\trans.h
fpw32\tran\ppc\fpctrl.s
fpw32\tran\ppc\sqrtp.s
    Various late fixes for PowerPC/NT specific code.

-----------------------------------------------------------------

Mon 26-Feb-97	(Richk)

crtw32\misc\getqloc.c
    Fixes to make Win95 operation compatible with shipped CRT version.

-----------------------------------------------------------------

Mon 21-Feb-97	(Richk)

crtw32\misc\getqloc.c
    Fixed problem for where language string starting with nonletter
    returned default locale instead of error.

-----------------------------------------------------------------

Wed 19-Feb-97	(GregF)

crtw32\startup\dllcrt0.c
    Deleted obsolete test for Win32s and PharLap's TNT. Also, made a few
    cosmetic changes.

-----------------------------------------------------------------

Mon 17-Feb-97	(Richk)

crtw32\misc\aw_cmp.c, aw_loc.c, aw_map.c, aw_str.c
    For the ANSI versions of the CRT routines, try to use the WIDE NLS
    calls before trying the ANSI versions.  This will permit Windows NT
    program to use the WIDE NLS routines so the current codepage can
    be used to translate the parameters strings from/to Unicode.  Using
    the ANSI NLS calls use only the ANSI codepage, causing incorrect
    results.
crtw32\misc\getqloc.c
    Complete rewrite of module to qualify CRT locale strings.  The
    system LCIDs are now enumerated instead of using a fixed table, so
    new locales can be recognized dynamically.  Fixed random errors of
    incorrect language/country translations.
crtw32\h\setlocal.h
    Changed CP_MAX_LEN to 8 to handle 5-digit codepage numbers.
    Commented out now-unused definitions for getqloc.c.

-----------------------------------------------------------------

Mon 11-Feb-97	(v-KimPe)

crtw32\eh\alpha\bridge.s
crtw32\eh\alpha\trnsctrl.cpp
crtw32\h\trnsctrl.h
crtw32\misc\alpha\chandler.c
crtw32\misc\alpha\ghandler.c
crtw32\misc\alpha\jmpuwind.s
crtw32\misc\alpha\longjmp.s
    change _NLG* declarations to __NLG* to match the changes in the debugger

-----------------------------------------------------------------

Mon 11-Feb-97	(v-KimPe)

fpw32\tran\lsources
fpw32\tran\sources.nt
fpw32\tran\alpha\rsqrt.s
fpw32\tran\alpha\rsqrtf.s
libw32\msvcrt.src
srcrel\makefile
srcrel\pd-b
    Added Alpha __rsqrt and __rsqrtf functions which are called by compiler
    This was fixed on the side for the Alpha VC 5.0 product.
    Corrected makefile to use crt60 tree.  This resulted in some significant
    changes to pd-b:
        mssccprj.scc files removed
        lego subdirectories added to lib\[platform] directories
        libw32\msvcp42.rc added
        libw32\lib\i386\win32s subdirectory added
        log_v50.txt added

-----------------------------------------------------------------

Mon 11-Feb-97	(v-KimPe)

crtw32\h\math.h
libw32\include\math.h
    Separated Alpha single precision math declarations from MIPS to allow
    intrinsics to be applied to them. This was fixed on the side for the
    Alpha VC 5.0 product.

-----------------------------------------------------------------

Mon 11-Feb-97	(v-KimPe)

fpw32\tran\alpha\atan2f.s
fpw32\tran\alpha\atan2s.s
fpw32\tran\alpha\cotf.s
fpw32\tran\alpha\f_atan2.s
fpw32\tran\alpha\f_atan2f.s
fpw32\tran\alpha\f_hypot.s
fpw32\tran\alpha\f_hypotf.s
fpw32\tran\alpha\f_sqrt.s
fpw32\tran\alpha\f_sqrtf.s
fpw32\tran\alpha\fmodf.s
fpw32\tran\alpha\fmods.s
fpw32\tran\alpha\hypotf.s
fpw32\tran\alpha\hypots.s
fpw32\tran\alpha\j0f.s
fpw32\tran\alpha\j1f.s
fpw32\tran\alpha\jnf.s
fpw32\tran\alpha\log10f.s
fpw32\tran\alpha\log10s.s
fpw32\tran\alpha\logbf.s
fpw32\tran\alpha\logf.s
fpw32\tran\alpha\logs.s
fpw32\tran\alpha\nextaftf.s
fpw32\tran\alpha\powf.s
fpw32\tran\alpha\pows.s
fpw32\tran\alpha\sqrtf.s
fpw32\tran\alpha\sqrts.s
fpw32\tran\alpha\tanhf.s
fpw32\tran\alpha\trig_rdx.s
fpw32\tran\alpha\y0f.s
fpw32\tran\alpha\y1f.s
fpw32\tran\alpha\ynf.s
    Corrected alignment in assembly code to before the label, instead of
    after.  This caused error in sqrt(0) as well as returning a null
    function name with matherr. This was fixed on the side for the Alpha
    VC 5.0 product. This fixes DevStudio96 22172

-----------------------------------------------------------------

Mon 10-Feb-97	(GregF)

crtw32\stdio\_sftbuf.c
    Added code to better handle it when malloc fails while attempting to
    allocate the buffer. In this case, temporarily use the _charbuf field
    as the buffer. This fixes NTBUG #20000.

-----------------------------------------------------------------

Mon 20-Jan-97	(GregF)

crtw32\startup\crt0.c
    Changed startup code so if _heapinit() or _mtinit() fails, ExitProcess
    is called directly rather than _exit() (_exit uses a lock!). This was NT
    RAID #51100.

crtw32\startup\tidtable.c
    Changed _freeptd() so the thread's copy of the exception-action table is
    freed up. This was DevStudio96 #20282.

-----------------------------------------------------------------

Fri 10-Jan-97	(JamesMa)

log.txt -> log_v50.txt
	Renamed old LOG.TXT from V5.0 and started a new LOG.TXT (this file).

-----------------------------------------------------------------


***************************************************************************
***************************************************************************
***									***
***  This file contains the history for MSVC++ v6.0 (relative to v5.0)	***
***  The file should always be edited at the top so that the most	***
***  recent changes are at the beginning of the file and the oldest	***
***  changes are at the end of the file.  This comment marks the end.	***
***									***
***************************************************************************
***************************************************************************
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\base\crts\log_v41.txt ===
***************************************************************************
***************************************************************************
***									***
***   This file contains the change history for the MSVC++ v4.1 C/C++	***
***   Run-Time Libraries (that is, modifications since since 4.0).	***
***   The file should always be edited at the top so that the most	***
***   recent changes are at the beginning of the file (immediately	***
***   after this comment) and the oldest changes are at the end.	***
***									***
***************************************************************************
***************************************************************************
-----------------------------------------------------------------

Wed 21-Feb-96   (SteveSa)

crtw32\misc\dbgheap.c
	Protected the call to HeapValidate() in _CrtIsValidHeapPtr(), so
	that it is skipped on Win32s and Windows 95, which don't support
	HeapValidate().  Previous fix (14-Feb) was for Win32s DLL only.

-----------------------------------------------------------------

Mon 18-Feb-96   (SteveSa)

crtw32\lowio\osfinfo.c
	Fixed error in file handle locking code that occurred on the
	first file handle in a new block file handles.  The wrong handle
	was locked, which shows up dramatically in Windows NT v4.0.

-----------------------------------------------------------------

Wed 14-Feb-96   (SteveSa)

crtw32\misc\dbgheap.c
	Again removed call to HeapValidate() in _CrtIsValidHeapPtr(),
	BUT ONLY for Win32s DLL.  The call remains for Windows 95/NT.

-----------------------------------------------------------------

Wed 31-Jan-96   (JamesMa)

fpw32\tran\i386\testfdiv.c
        Now resets process affinity mask, not system affinity mask - at
	the 'suggestion' of MarkL.

-----------------------------------------------------------------

Mon 22-Jan-96   (SteveSa)

crtw32\misc\dbgheap.c
	Restored call to HeapValidate() to _CrtIsValidHeapPtr().  This call
	was commented out last summer because of problems with the Debug IDE
	BVTs (tests).  Those problems cannot be reproduced.

-----------------------------------------------------------------

Fri 19-Jan-96   (GregF)

crtw32\time\tzset.c
        Added bit of code to ensure the _tzname[] strings are terminated with
        a null character. This was Speed bug 4552.

-----------------------------------------------------------------

Wed 03-Jan-96   (JamesMa)

fpw32\tran\i386\87triga.asm
        Atan2(0,0) now returns 0 (Speed bug 2176).

-----------------------------------------------------------------

Tue 02-Jan-96   (JamesMa)

crtw32\misc\dbgdel.cpp
        New file, split from dbgnew.cpp (Speed bug 3715).

crtw32\heap\setnewh.cpp
        New file, split from handler.cpp (Speed bug 4130).

crtw32\misc\dbgnew.cpp, crtw32\heap\handler.cpp

makefile, makefile.inc, srcrel\pd-b, doc\copycrt.bat,
crtw32\misc\lsources, crtw32\heap\lsources

-----------------------------------------------------------------

Mon 01-Jan-96	(BryanT)

crtw32\h\limits.h
libw32\include\limits.h
	Define LINK_MAX for POSIX

crtw32\h\wchar.h
libw32\include\wchar.h
        Don't define some types for POSIX

-----------------------------------------------------------------

Thu 28-Dec-95   (GregF)

crt\crtw32\h\stdio.h

crt\crtw32\stdio\setmaxf.c, fflush.c

crt\libw32\msvcrt.src

crt\libw32\include\stdio.h

        Fixed a rather badly broken _setmaxstdio() and a related bug in
        flsall() (see fflush.c). Also added _getmaxstdio(). This fixes SPEED
        bugs 2158 and 4327.

-----------------------------------------------------------------

Thu 21-Dec-95   (JamesMa)

crt\crtw32\convert\gcvt.c
        '.' was replaced by *__decimal_point (Speed bug 2145).

-----------------------------------------------------------------

Thu 21-Dec-95   (GregF)

crt\crtw32\string\i386\strncpy.asm
        Much faster version from Intel.

-----------------------------------------------------------------

Tue 19-Dec-95   (JamesMa)

crtw32\h\*.h, crtw32\h\sys\*.h, libw32\include\*.h, libw32\include\sys\*.h
        '#pragma once' removed from assert.h; all other occurrences
	bracketed by '#if _MSC_VER > 1000/#endif'.

-----------------------------------------------------------------

Tue 19-Dec-95   (GregF)

crt\crtw32\string\i386\strncat.asm
        Much faster version from Intel (with several bug fixes from me).

-----------------------------------------------------------------

Mon 18-Dec-95   (JamesMa)

crtw32\eh\typname.cpp
        Debug version now allocates buffer as _CRT_BLOCK.

crtw32\startup\crt0dat.c
        Doexit() can no longer recurse.

crtw32\h\*.h, crtw32\h\sys\*.h, libw32\include\*.h, libw32\include\sys\*.h
        Add '#pragma once' to all headers.

-----------------------------------------------------------------

Thu 14-Dec-95   (BryanT)

crtw32\eh\mips\trnsctrl.cpp, handlers.s, rtlmisc.s
        Fix for new 64-bit CONTEXT structures.

crtw32\helper\ppc\dtou.s
        Fix from ChuckL.

libw32\lib\dll\makefile.inc
        Add dependency on msvcrt.src.

-----------------------------------------------------------------

Wed 13-Dec-95   (SteveSa)

crt/fpw32/tran/i386/testfdiv.c -
	Change call to LoadLibrary("kernel32") to GetModuleHandle(...)
	since KERNEL32.DLL will ALWAYS be loaded.

-----------------------------------------------------------------

Wed 13-Dec-95   (GregF)

crt\crtw32\time\time.c
        Had gmt and gmt_cache switched in a key assigment, effectively
        disabling my workaround for the slow NT API. Mistake found and
        reported by Phil Lucido.

-----------------------------------------------------------------

Tue 12-Dec-95   (SteveSa)

crt/fpw32/tran/i386/testfdiv.c -
	Reorganized the multi-processor check for a Pentium with the FDIV bug
	so that the check is done only once on single-processor systems.
	Previously the test was done twice on uni-processor systems -- once at
	the beginning of the routine and once in the loop to check all CPUs.

-----------------------------------------------------------------

Thu 07-Dec-95   (SteveSa)

crt/crtw32/convert/wctomb.c
crt/crtw32/convert/wcstombs.c
crt/crtw32/h/mtdll.h
crt/crtw32/stdio/_filbuf.c
crt/crtw32/stdio/_flsbuf.c
	Fixed misspellings of _NTSUBSET_.  It was only misspelled in comments
	in the four files other than <mtdll.h>.  But there it was in an #if.

-----------------------------------------------------------------

Wed 06-Dec-95   (GregF)

crt\crtw32\string\i386\strstr.asm
        Faster version from Intel.

-----------------------------------------------------------------

Tue 05-Dec-95   (SteveSa)

crt/crtw32/lowio/cgets.c
crt/crtw32/lowio/cputs.c
crt/crtw32/lowio/getch.c
crt/crtw32/lowio/putch.c
crt/crtw32/lowio/initcon.c
	To improve DLL load time, the console I/O handles _confh and _coninpfh
	are no longer initialized at CRTL start-up but rather are initialized
	on demand.  From initial tests, this seems to speed up the loading of
	MSVCRT40.DLL by 4-20%.

	Revised Fri 08-Dec-95 to work correctly under Win32s, and to save code.

-----------------------------------------------------------------

Thu 30-Nov-95   (SteveSa)

crt/crtw32/misc/cmiscdat.c -
	VC++ 4.1 (SPEED) bug 2188 - removed obsolete comments which were
	relevant in the 16-bit world but are no longer.  Updated copyright.

-----------------------------------------------------------------

Thu 30-Nov-95   (GregF)

crt\crtw32\string\i386\strchr.asm, strlen.asm
        The new strchr() is a much faster (also fatter) version from Intel.
        The only change to strlen.asm was to align the main loop entry on
        a 16-byte boundary (for 486 and P6).

-----------------------------------------------------------------

Tue 28-Nov-95   (SteveSa)

crtw32/dos/stat.c -
	Change special case code that handles root directories (such as
	'C:/' or 'X:\') to also handle UNC names such as '//server/share/'
	or '\\server\share\'.  Note that Win32 requires the trailing slash.

-----------------------------------------------------------------

Mon 27-Nov-95   (BryanT)

crtw32\h\stdlib.h
libw32\include\stdlib.h
        Add __cdecl to _sleep/_beep/_seterrormode prototypes.

-----------------------------------------------------------------

Sun 26-Nov-95   (BryanT)

crtw32\string\stricoll.c
libw32\msvcrt.src
        Since stricmp() is merely a wrapper for strcmpi(), call strcmpi() directly
	if possible.

-----------------------------------------------------------------

Thu 16-Nov-95   (BryanT)

crtw32\crt32.nt
fpw32\fp32.nt
        Define _WIN32 for ASM files (to get proper .586 designation)

crtw32\h\cruntime.inc
        Fix POSIX build (it needs .586 also to compile string\strcat.asm)

crtw32\misc\dlllib\sources
crtw32\misc\i386\exsup.asm
        Don't link global_unwind2 into each image... Import from the CRT dll instead
        (this removes the last required reference to kernel32.dll)

crtw32\startup\mlock.c
        #pragma optimiza("y", off) is only needed when you're going to run on the
        checked version of NT 3.1...  Since the NT libs never do that, no need to
        disable it here.

fpw32\tran\i386\87fmod.asm
fpw32\tran\i386\87tran.asm
        Remove more fdiv workarounds.

-----------------------------------------------------------------

Wed 15-Nov-95   (GregF)

crtw32\time\tzset.c

        Set the year fields of dststart and dstend to -1 to ensure they
        are recomputed after a call to _tzset.

-----------------------------------------------------------------

Tue 14-Nov-95	(BryanT)

crtw32\misc\splitpat.c
        Don't use MBCS on splitpath for NTSUBSET

crtw32\startup\nt\sources
        Add crt0fp.c

fpw32\fp32.nt
fpw32\conv\fpinit.c
fpw32\tran\sources.nt
fpw32\tran\i386\87tran.asm
fpw32\tran\i386\87fmod.asm
        Don't use CRT workaround for P5 FDIV problem.  The NT run-times
	will alway run on a system that handles it.

-----------------------------------------------------------------

Tue 14-Nov-95	(GregF)

crtw32\string\i386\stricmp.asm

        Define/declare _strcmpi with a proc rather than a label directive.
        This was the last bit required to fix 2108.

crtw32\string\i386\strcat.asm

        Aligned strcat to a paragraph boundary.

-----------------------------------------------------------------

Sun 12-Nov-95	(BryanT)

crtw32\string\wcsicmp.c
crtw32\string\wcsnicmp.c
crtw32\string\wcsxfrm.c
crtw32\string\strxfrm.c
crtw32\misc\dlllib\sources
crtw32\startup\dlllib\sources

        NT build fixes

-----------------------------------------------------------------

Fri 10-Nov-95	(v-rogerl)

crt32\string\mips\strcpym.s
crt32\string\mips\strcatm.s
crt32\string\mips\memcpym.s

        Replace ALTERNATE_ENTRY with .weakext for -Gy build.

-----------------------------------------------------------------

Thu 09-Nov-95   (GregF)

crtw32\dllstuff\crtlib.c

        Changed "ISTNT" to "IsTNT".

crtw32\string\i386\memcmp.asm

        Checked in faster version from Intel. The last problem (i.e., the
        reason I had to back this out several months ago) was edi and esi
        were being pushed in the wrong order.

-----------------------------------------------------------------

Wed 08-Nov-95   (GregF)

crtw32\time\tzset.c

        Fixed typo in _isindst(). Second call to _mlock(_TIME_LOCK) should
        have been _munlock(_TIME_LOCK).

-----------------------------------------------------------------

Tue 31-Oct-95   (GregF)

crtw32\h\conio.h

        Backed out last change. The inp* and outp* functions are intrinsics
        so they cannot be _CRTIMP.

-----------------------------------------------------------------

Tue 31-Oct-95	(GregF)

crtw32\h\conio.h
libw32\msvcrt.src
        Export inp*, outp* for x86 msvcr*.dll. This was Olympus0 10299 and
        Olympus 1811.

crtw32\string\strcoll.c, stricoll.c, strncoll.c, strnicol.c, wcscoll.c
              wcsicoll.c, wcsncoll.c, wcsnicol.c

        Pass SORT_STRINGSORT flag to CompareString* API (actually, to our own
        crtCompareString*, which then passes it on to the Win32 API) so that
        characters such as the dash and apostrophe are not ignored in
	comparisons. This was Olympus0 14755.

-----------------------------------------------------------------

Fri 27-Oct-95	(v-rogerl)

fpw32\tran\mips\exptable.s
fpw32\tran\mips\logtable.s
fpw32\tran\mips\xsqrt.s

        Fix bogus mips code.  Align .rdata 8 bytes so tables that
        are entered as words can work as double values.

-----------------------------------------------------------------

Fri 27-Oct-95	(GregF)

crt\crtw32\stdio\fdopen.c

        Added check (for both Win32 and Mac builds) that the file handle
        passed to _fdopen() is open. This was Olympus0 10153.

crt\crtw32\h\stdlib.h
crt\libw32\include\stdlib.h

        #ifdef-out toupper/tolower for ANSI builds. The decls cannot be
        removed completely because they are documented (see the descripion
        of tolower and toupper in the Runtime Library Reference). The doc
        should be changed so that we may remove these decls in the future.
        This was Olympus 1314.

-----------------------------------------------------------------

Tue 24-Oct-95   (GregF)

crt\crtw32\misc\searchen.c

        Use an internal buffer to construct the full pathname from the
        environment variable value and the file name. This was OLYMPUS0 9336.


crt\crtw32\time\time.c

        Revised to minimize calls to GetTimeZoneInformation with used in a
        loop by only updating the DST status on whole minutes. This was done
        because GetTimeZoneInformation very expensive on NT 3.51.

-----------------------------------------------------------------

Tue 17-Oct-95	 (SteveSa)

crtw32/eh/mac/pmac/lowhelpr.asm
crtw32/eh/mac/pmac/trnsctrl.cpp
	Propogate GlennN's and APennell's final EH fix to the PowerMac CRTL
	(after v4.0 for Intel X86 shipped).

-----------------------------------------------------------------

Tue 17-Oct-95	 (GregF)

crtw32\convert\_mbslen.c, mbstowcs.c, mbtowc.c, tolower.c, toupper.c,
        towlower.c, towupper.c

crtw32\h\ctype.h, mtdll.h

crtw32\misc\setlocal.c

crtw32\startup\mlock.c

crtw32\string\memicmp.c, strcoll.c, stricmp.c, stricoll.c, strlwr.c,
        strncoll.c, strnicmp.c, strnicol.c, strupr.c, strxfrm.c, wcscoll.c,
        wcsicmp.c, wcsicoll.c, wcslwr.c, wcsncoll.c, wcsnicmp.c, wcsnicol.c,
        wcsupr.c, wcsxfrm.c

crtw32\string\i386\memicmp.asm, stricmp.asm, strnicmp.asm

crtw32\time\strftime.c

        Package of changes implementing a more efficient scheme for 'locking'
        locale references. The basic idea is access to locale data only has to
        be serialized if at least one thread is executing setlocale().

        Also, memicmp.asm contains a fix for Olympus 2196 (< and > returns
        are reversed for non-C locales).

-----------------------------------------------------------------

Fri 06-Oct-95	 (SteveSa)

crtw32\direct\findfile.c
crtw32\h\io.h
libw32\include\io.h

	The filespec argument to _*findfirst should be CONST char *, not just
	char *.  Also added missing underscores to func names in the comments.

	This was Olympus0 bug #13287.


crtw32\h\new.h -
	updated so that when cleansed, it matches the new.h in libw32\include.
	(added missing __cdecl in the prototype of new_handler).

crtw32\h\tchar.h -
	Fix Olympus0 bug #1175 here as well as in libw32\include\tchar.h
	(See Thu-05-Oct fixes)

libw32\include\time.h
	updated for GregF's change today for crtw32\h\time.h

-----------------------------------------------------------------

Fri 06-Oct-95	 (GregF)

crtw32\direct\findfile.c

crtw32\dos\stat.h

crtw32\h\internal.h

crtw32\lowio\fstat.h

crtw32\time\dtoxtime.c, time.c

	Package of changes to properly handle the overlapping clock times
	which occur at the transition from DST back to Standard Time.

	This was Olympus 2128.

-----------------------------------------------------------------

Fri 06-Oct-95	 (GregF)

crtw32\dllstuff\crtlib.c

crtw32\h\time.h, win32s.h

crtw32\time\dtoxtime.c, mktime.c, localtim.c, timeset.c, tzset.c

libw32\msvcrt.src

	Package of changes to fully support Win32 timezones. Main changes
	were to fix _isindst() to work with non-USA transition rules and
	to use _dstbias instead of a constant value (-3600) for the bias
	in seconds.

	This was Olympus0 3231.

-----------------------------------------------------------------

Thu 05-Oct-95    (SteveSa)

srcrel\mkfiles.sed
	Remove stdio\maketabc.c from the list of files to be copied/cleansed.
	This file should not have been released in MSVC++ v4.0.  No big deal.
	Also remove stdio\mac\initstd.c from that list.  Same story.  NBD.

srcrel\makefile
	Change the rule to create pd-b to use the v4.1 source file server
	(\\lang1\slmv4.1) instead of the v4.0 name (\\lang1\v3slm).

log.txt -> log_v40.txt
	renamed the v4.0 history file and started a new one

crtw32\lowio\getch.c -- Olympus0 Bug #2193
	removed two lines of debugging code that were commented out with //

libw32\include\tchar.h - Olympus0 Bug #1175
	__far is #defined to nothing -- should be unnecessary in 32-bit code!

makefile -
	Change the rules for the oldnames and tcmap and tcmapdll object file
	directories so that oldnames.lib and tcmap.lib and tcmapdll.lib do
	not get incorrectly rebuilt.  This occurs due to a bug in Windows NT
	v3.5x wherein sometimes a subdirectory has a creation time OLDER
	than the creation time of its parent directory.

-----------------------------------------------------------------

***************************************************************************
***************************************************************************
***									***
***  This file contains the history for MSVC++ v4.1 (relative to v4.0)	***
***  The file should always be edited at the top so that the most	***
***  recent changes are at the beginning of the file and the oldest	***
***  changes are at the end of the file.  This comment marks the end.	***
***									***
***************************************************************************
***************************************************************************

-----------------------------------------------------------------
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\base\crts\log_v70.txt ===
***************************************************************************
***************************************************************************
***                                                                     ***
***   This file contains the change history for the MSVC++ v7.0 C/C++   ***
***   Run-Time Libraries (that is, modifications since since 6.0).      ***
***   The file should always be edited at the top so that the most      ***
***   recent changes are at the beginning of the file (immediately      ***
***   after this comment) and the oldest changes are at the end.        ***
***                                                                     ***
***************************************************************************
***************************************************************************

-----------------------------------------------------------------

Fri 21-Sep-01   (GautamB)

crtw32\eh\i386\trnsctrl.cpp

    VS7#305455. Temp fix for C++Eh to works with apps with fibers. This is
    more of a reverse compatiblith issue as this fix doesn't really fix the 
    problem in C++Eh when fiber is switched between C++Eh (mostly when
    executing in catch block).

-----------------------------------------------------------------

Tue 10-Jul-01   (PhilipLu)

crtw32\stdhpp\xstring
libw32\msvcprt.src
makefile

    Get rid of all _RETAIN_OLD_CRT_CODE uses, for final VC7 LKG CRT.

-----------------------------------------------------------------

Tue 03-Jul-01   (GautamB)

crtw32\eh\frame.cpp
libw32\msvcrt.src syscrt.src syscrt64.src

    VS7#275954 Added a new function CxxCallUnwindVecDtor for COM+ eh stuff.

-----------------------------------------------------------------

Fri 29-Jun-01   (PhilipLu)

makefile.sub

    VS7#270726 CRT components which get distributed in binary form, not
    source, must be compiled /Z7 instead of /Zi so the CRT rebuild creates
    a usable PDB that won't produce LNK4099 warnings.

makefile

    VS7#268410 Move msvc*.dll base address from 0x5d0?0000 to 0x7c0?0000.

-----------------------------------------------------------------

Sun 17-Jun-01   (PhilipLu)

crtw32\h\new.h
crtw32\stdhpp\new
libw32\inc64\new.h
libw32\include\new, new.h

    Tweak Friday's checkin for VS7#237394 to better cooperate with the
    VS build.  Add declarations of nothrow_t placement new/delete ops to
    <new.h>, and move those declarations in both <new> and <new.h> under
    #ifndef __NOTHROW_T_DEFINED (so redef errors in VS build can be
    avoided).  Also, bracket headers <new> and <new.h> with
    #pragma push_macro("new")/#undef new/.../#pragma pop_macro("new")
    so VS attempts to #define new don't trash these headers.

-----------------------------------------------------------------

Fri 15-Jun-01   (PhilipLu)

crtw32\h\new.h
crtw32\heap\lsources, nothrow0.cpp [NEW]
crtw32\linkopts\lsources, sources, thrownew.cpp [NEW]
crtw32\stdcpp\lsources, sources.nt
crtw32\stdhpp\new
doc\copysrc.bat
libw32\inc64\new.h
libw32\include\new, new.h
libw32\msvcprt.src
makefile, makefile.inc
srcrel\makefile, mkclnmkf.c, msvc40.if, pd-b

[RENAMED/MOVED]
crtw32\stdcpp\delaop2.cpp -> crtw32\heap\delaopnt.cpp
crtw32\stdcpp\delop2.cpp  -> crtw32\heap\delopnt.cpp
crtw32\stdcpp\newaop2.cpp -> crtw32\heap\newaopnt.cpp
crtw32\stdcpp\newop2.cpp  -> crtw32\heap\newopnt.cpp

[DELETED]
crtw32\stdcpp\delaop2_s.cpp, delop2_s.cpp, newaop2_s.cpp, newop2_s.cpp

    VS7#237394 Reconfigure global operator new/delete.  We intentionally
    have two versions of operator new.  The main CRT defines a legacy
    version that returns NULL on failure, the C++ Std Lib defines the
    conformant version that throws std::bad_alloc on failure.

    The first problem is that it is possible to get the wrong version
    linked into a program.  If an app links to the C++ Std Lib, it must
    use the throwing version of new, since the C++ Std Lib doesn't check
    for null returns on memory allocations, instead assuming exceptions
    will be used.  Usually, the order of /defaultlib directives in objects
    will cause the correct throwing new to be loaded, but it is possible
    for this to fail.  To work around that, I'm adding a new linkopts
    object, thrownew.obj.  Explicitly linking in thrownew.obj will forcibly
    use a throwing version of new.

    The second problem concerns the difficulty in producing a .lib which
    can't be sure if it will end up linked to the throwing or non-throwing
    version of new (e.g. third-party libs).  Such a lib may not want to
    force a dependency on the Std C++ Lib, but still want to work in case
    the final link module uses the Std C++ Lib.  The proper way to handle
    this is for that third-party lib to use the nothrow_t placement new,
    which will always return NULL on failure.

    To make that work and still not force a dependency on the Std C++ Lib,
    nothrow_t placement new and associated routines are moved out of the
    Std C++ Lib and into the main CRT.  In addition, constant std::nothrow
    is also moved into the main CRT, while still being left in the Std C++
    Lib for backwards-compatibility (it was exported from the DLL).

-----------------------------------------------------------------

Fri 15-Jun-01   (GautamB)

crtw32\eh\frame.cpp

    Added stubs for IA64 com+ nothing working yet.

-----------------------------------------------------------------

Fri 15-Jun-01   (PhilipLu)

crtw32\startup\mlock.c, tidtable.c

    VS7#267669/Windows#414059 _mtinit needs to call _mtterm to free
    resources if a failure is encountered.

-----------------------------------------------------------------

Wed 13-Jun-01   (PhilipLu)

crtw32\string\i386\_memicmp.asm, _stricmp.asm, _strnicm.asm, memccpy.asm,
    memchr.asm, memcmp.asm, memcpy.asm, memset.asm, strcat.asm, strchr.asm,
    strcmp.asm, strlen.asm, strncat.asm, strncmp.asm, strncpy.asm, strnset.asm,
    strrchr.asm, strrev.asm, strset.asm, strspn.asm, strstr.asm

    VS7#267015 Replace INC/DEC by ADD/SUB by 1 in string/memory .asm
    routines, for better Pentium 4 performance.

crtw32\h\conio.h, excpt.h, fpieee.h, rtcapi.h, setjmp.h, wchar.h
crtw32\h\i386\emmintrin.h
libw32\include\conio.h, emmintrin.h, excpt.h, fpieee.h, rtcapi.h, setjmp.h,
    wchar.h
libw32\inc64\conio.h, excpt.h, fpieee.h, rtcapi.h, setjmp.h, wchar.h

    VS7#267063 Fix headers usable by C code so /Za /W4 won't warn.
    Primarily, get rid of C++-style comments.

-----------------------------------------------------------------

Mon 11-Jun-01   (PhilipLu)

crtw32\stdhpp\exception
libw32\include\exception
makefile

    VS7#266694 Fix user CRT rebuild so the no-exceptions configuration
    supplied by Dinkumware (-D_HAS_EXCEPTIONS=0) at least builds.  The
    user rebuild makefile can now be invoked with STDCPP_NOEH=YES to
    enable the no-exceptions build, and header <exception> has been
    fixed so the _HAS_EXCEPTIONS=0 branch will actually build.  No testing
    has been done to verify any sort of usability of this configuration,
    which is undocumented and unsupported for VC7.0, but since it is
    discoverable by anyone perusing the source, I decided to go ahead and
    fix the build.

-----------------------------------------------------------------

Mon 11-Jun-01   (GautamB)

fpw32\tran\ia64\ieee.c

    VS7#216001 Added support for Flush-to-Zero mode using _controlfp().

-----------------------------------------------------------------

Wed 06-Jun-01   (PhilipLu)

crtw32\stdhpp\xutility
libw32\include\xutility

    VS7#256042 The global function operator- for the diff of two
    std::reverse_iterator instances was returning a size_t instead of a
    ptrdiff_t.

makefile

    VS7#264114 Debug CRT DLLs need to be built /debugtype:cv,fixup, not
    just /debugtype:cv, for proper Vulcan support.  Also, strip all
    references to /debugtype out of the makefile that gets shipped for the
    user CRT rebuild, since this is an undocumented linker switch.

-----------------------------------------------------------------

Tue 05-Jun-01   (PhilipLu)

crtw32\heap\resetstk.c

    VS7#264306 _resetstkoflw() should not attempt to shrink the committed
    stack.  Also, it should not do anything if a guard page is already
    present.  Done so the WinXP app verifier /stacks will work.

-----------------------------------------------------------------

Wed 15-May-01   (tentzen)

crtw32\h\stdarg.h
libw32\inc64\stdarg.h
libw32\include\stdarg.h

    Implement va_start, va_arg, and va_end as intrinsics for IJW/IA64.
    To simplify BE code generation, _APALIGN(t,ap) is passed as 3rd parameter
    in va_arg() intrinsic instead of __builtin_alignof(t). This part need be
    fixed once COM+ start supporting va-arg family.

-----------------------------------------------------------------

Wed 09-May-01   (SHanson, PhilipLu)

crtw32\h\string.h, wchar.h
crtw32\string\ia64\memcpy.s, memmove.s [NEW]
crtw32\string\lsources, sources.nt
libw32\inc64\string.h, wchar.h
libw32\include\string.h, wchar.h
libw32\msvcrt.src, syscrt.src, syscrt64.src
makefile, makefile.inc
srcrel\objects.mkf, pd-b

    VS7#195834 (sort of) Replace IA64 memcpy and memmove, and move memcpy,
    memmove, and memset so they are static-link components of the IA64 CRT
    DLL, to avoid the overhead of calling into the DLL.  Maintain the
    existing exports of these routines from the DLL for old code.  Also,
    since memmove used to be dllimport, keep the __imp_ definition in the
    implib by marking memmove as a DATA export in the def files, allowing
    existing .obj files to find the necessary definition.

-----------------------------------------------------------------

Mon 07-May-01   (PhilipLu)

crtw32\stdhpp\fstream
libw32\include\fstream

    VS7#249553 Bad interaction between wifstream and tellg turned out to
    be bugs in basic_filebuf::seekoff and seekpos, which failed to properly
    handle pushback characters (which get used all the time for wchar_t
    streams).

-----------------------------------------------------------------

Thu 03-May-01   (PhilipLu)

crtw32\stdhpp\xlocale
libw32\include\xlocale

    VS7#248580 I recently changed std::_Maklocstr, adding a 3rd argument
    of type std::_Locinfo::_Cvtvec&.  That's illegal under /Za, since a
    non-const ref can only be bound to an lvalue.  The arg should have been
    const std::_Locinfo::_Cvtvec&.

crtw32\stdhpp\list, vector
libw32\include\list, vector

    VS7#248877 The ctors for std::vector(size_type _Count) and
    std::list(size_type _Count) could both potentially leak resources if
    constructing the default fill value threw.

-----------------------------------------------------------------

Wed 02-May-01   (PhilipLu)

crtw32\h\i386\ivec.h
libw32\include\ivec.h

    VS7#239974 Disable C4799 inside ivec.h if _SILENCE_IVEC_C4799 is defined.
    As written, this header will generate that warning, but that is to be
    expected, since the code uses MMX intrinsics without an EMMS or _m_empty
    in each function.  Allow users to shut up the warning, but don't do so
    unconditionally, since clients of ivec.h need to understand the potential
    for problems if they don't use EMMS in their own code.

-----------------------------------------------------------------

Wed 02-May-01   (GautamB)

crtw32\rtc\error.cpp
makefile

    VS7#241349 Removed the runtmchk.lib dependencies on CRT by adding obj to
    runtmchk.lib. earlier runtmchk.lib was same as rtc.lib but now it also
    includes exsup.obj exsup3.obj sehprolog.obj chkstk.obj.

-----------------------------------------------------------------

Thu 26-Apr-01   (GautamB)

crtw32\eh\frame.cpp

    VS7#236286 Fixed a problem with a rethrow without a throw and catch(...)

-----------------------------------------------------------------

Wed 25-Apr-01   (PhilipLu)

crtw32\misc\initcrit.c

    VS7#244210 It isn't safe to call LoadLibrary/FreeLibrary during DllMain,
    so use GetModuleHandle instead in __crtInitCritSecAndSpinCount.

-----------------------------------------------------------------

Tue 24-Apr-01   (PhilipLu)

crtw32\rtc\error.cpp
crtw32\stdhpp\xlocale
libw32\include\xlocale
makefile
langapi\undname\testundn.mak, undname.inl, undname.mak

    VS7#243471 Build the CRT with /Zc:forScope, and get rid of all
    instances of non-conformant for scoping in the build.  Also change the
    standalone makefiles used for langapi\undname to use /Zc:forScope, to
    prevent CRT build problems appearing after FE checkins to undname.

-----------------------------------------------------------------

Thu 19-Apr-01   (PhilipLu)

crtw32\h\malloc.h
crtw32\heap\resetstk.c
libw32\include\malloc.h
libw32\inc64\malloc.h

    VS7#239962 _resetstkoflw did not work on Win9x.  Simplified some tests
    which were not correct for Win9x, tweaked the test for attempting to
    set a guard page too low (Win9x and WinNT have different requirements),
    and set a guard page as PAGE_NOACCESS instead of PAGE_GUARD for Win9x.
    Also changed the return from void to int, and return a nonzero success
    code if the stack reset worked.

-----------------------------------------------------------------

Fri 13-Apr-01   (KarlSi)

makefile

    VS7#233650 Move the location of the VC CRT build's DLL PDB files out
    of the dll_pdb subdirectory, back to the same directory as the DLLs.
    Part of allowing the build lab to build VC CRTs without full paths
    in the PDB info.  For now, the Sys CRTs still have their DLL PDB files
    down under dll_pdb.

-----------------------------------------------------------------

Fri 13-Apr-01   (GautamB)

crtw32\eh\frame.cpp

    VS7#236286 Fixed problem of rethrow of Seh to be caught by __except.

-----------------------------------------------------------------

Fri 13-Apr-01   (PhilipLu)

crtw32\stdhpp\complex, sstream, xlocmon, xstring
libw32\include\complex, sstream, xlocmon, xstring
libw32\msvcprt.src

    VS7#226252 Remove explicit dllexport/import of some internal template
    base classes (_Complex_base, _Mpunct, _String_val), now that the C++
    frontend will implicitly apply dllexport/import for these base classes.

    More importantly, stop dllimporting std::allocator just because xstring
    has been included.  That breaks people who define their own operator
    new, and expect that new to be used for STL collection classes.  That
    wasn't happening in modules that included xstring, but was for other
    modules, leading to cross-heap delete crashes.

    std::allocator is not a base class of basic_string; it's a member of
    the _String_val base class.  So the fix here is to get rid of the
    explicit _CRTIMP2 specialization of allocator in xstring, and to
    disable the C4251 warning complaining about an object member not being
    dllimport in a class that is dllimport.  That warning isn't a problem
    here, because every use of the allocator member is within a member
    function that will be dllimported, and thus hidden away.

    Until the next LKG update, the C++ CRT DLL must still export the
    allocator members, but these are now private exports so they don't
    appear in the implib.

-----------------------------------------------------------------

Thu 12-Apr-01   (PhilipLu)

crtw32\stdcpp\wlocale.cpp
crtw32\stdhpp\xlocale, xlocmon, xlocnum, xloctime
libw32\include\xlocale, xlocmon, xlocnum, xloctime

    VS7#230612 The Dinkumware code had a number of problems with wchar_t
    facets in Asian locales that use MBCS.  Underneath the wchar_t facet,
    all real work was done in MBCS, but the conversion between Unicode and
    MBCS didn't handle leadbytes at all.  Fixes were made to _MAKLOCSTR,
    ctype<wchar_t>::do_widen & do_narrow, and time_put<wchar_t>::do_put.

-----------------------------------------------------------------

Mon 09-Apr-01   (PhilipLu)

crtw32\stdcpp\iosptrs.cpp, locale.cpp, locale0.cpp
crtw32\stdhpp\xlocale, xmemory
libw32\msvcprt.src

    Remove code under _RETAIN_OLD_CRT_CODE that isn't needed now that the
    9176 LKG update has taken place.  There is still some code present
    under _RETAIN_OLD_CRT_CODE, for the 21-Mar-01 checkin.

crtw32\stdhpp\cctype, cerrno, clocale, cmath, csetjmp, csignal, cstdarg,
    cstddef, cstdio, cstdlib, cstring, ctime, cwchar, cwctype, deque,
    exception, hash_map, hash_set, list, map, memory, set, typeinfo, vector,
    xdebug, xhash, xmemory, xstring, xtree, yvals.h
crtw32\tools\win32\relinc.if, relinc64.if
libw32\include\cctype, cerrno, clocale, cmath, csetjmp, csignal, cstdarg,
    cstddef, cstdio, cstdlib, cstring, ctime, cwchar, cwctype, deque,
    exception, hash_map, hash_set, list, map, memory, set, typeinfo, vector,
    xdebug, xhash, xmemory, xstring, xtree, yvals.h

    Remove references to _GLOBAL_USING and _HAS_MEMBER_TEMPLATES_REBIND,
    now that the LKG update has picked up these being permanently enabled.
    All code under the #if arms for these names not set has been removed,
    at the request of Dinkumware.

-----------------------------------------------------------------

Mon 09-Apr-01   (GautamB)

crtw32\eh\frame.cpp

    VS7#234115 uncaught_exception was not working for CLR. Fixed it.

-----------------------------------------------------------------

Fri 06-Apr-01   (PhilipLu)

crtw32\dllstuff\crtlib.c

    VS7#235781 If CRT DLL is unloading without doexit() having been called
    already, then we need to call _cexit, not _c_exit, to make sure all the
    terminators are called (flush stdio, remove tmpfiles, ...).  This can
    happen more easily now with the URT dynamically loading and unloading
    the CRT DLL for C#/VB calling into the CRT DLL via P/Invoke.

fpw32\tran\i386\87cdisp.asm

    VS7#132450 sinh was incorrectly reporting an _UNDERFLOW error to
    _matherr on denormal inputs.  Turns out the internal error handling
    for the CHECKOVER case was doing the same thing as the CHECKRANGE case,
    checking for overflow and underflow, when it's supposed to only look
    for overflow.  CHECKOVER is only used by sinh and cosh, and cosh will
    never underflow, since cosh(x) >= 1, so sinh is the only FP API that
    could be hit by this longstanding (1992 or so) bug.

-----------------------------------------------------------------

Thu 05-Apr-01   (PhilipLu)

crtw32\stdhpp\xhash
libw32\include\xhash

    PJP noticed an additional change, to _Hash<T>::clear(), that was
    missing in the Mar 25 and Apr 4 updates.

-----------------------------------------------------------------

Wed 04-Apr-01   (PhilipLu)

crtw32\convert\tolower.c, toupper.c
crtw32\stdcpp\_tolower.c, _toupper.c
crtw32\stdcpp64\_tolower.c, _toupper.c

    VS7#232853 _tolower, _toupper, and the Dinkumware equivalents, when
    returning a double-byte char, were returning (leadbyte + trailbyte<<8).
    It's supposed to be (leadbyte<<8 + trailbyte).

crtw32\stdhpp\xhash
libw32\include\xhash

    VS7#233708 The fix for 230612 on Mar 25 was incomplete, breaking
    hash_map.  Fix _Hashval() to use _Mask instead of _Vec.size().

-----------------------------------------------------------------

Wed 28-Mar-01   (PhilipLu)

crtw32\bsku\bsku.cpp
crtw32\dllstuff\atonexit.c, crtexe.c, crtlib.c, dll_argv.c, dllargv.c
crtw32\eh\unhandld.cpp
crtw32\h\internal.h
crtw32\linkopts\noarg.c, noenv.c, setargv.c, wsetargv.c
crtw32\lowio\ioinit.c
crtw32\mbstring\mbctype.c
crtw32\misc\charmax.c, lcnvinit.c, onexit.c
crtw32\startup\crt0.c, crt0dat.c, crt0init.c, dllcrt0.c, stdargv.c, stdenvp.c
crtw32\stdio\_file.c
crtw32\time\clock.c
fpw32\tran\i386\cpu_disp.c

    VS7#231220 Stop almost all instances of _amsg_exit fatal errors from
    showing up in the CRT DLL or a DLL linked with the CRT DLL.  Make all
    the various startup routines, including those in the .CRT$XI* startup
    array, return errors back to the DllMain or mainCRTStartup level instead
    of calling _amsg_exit.  EXEs will still call _amsg_exit, but now from
    the mainCRTStartup level.  DLLs, include the CRT DLL, will now just
    return FALSE from DLL_PROCESS_ATTACH, failing the load.

    One subtlety here: the .CRT$XI* array is processed in EXEs linked to
    the CRT DLL, but not in DLLs linked to the CRT DLL.  That's because
    the only possible .CRT$XI* entry in these circumstances will be for
    __lconv_init, if the component was compiled with -J.  We only want to
    run that initializer for an EXE, not a DLL, because DLLs linked to the
    CRT DLL should not override the localeconv() settings of an EXE linked
    to the CRT DLL.  Since __lconv_init is the only possible entry here,
    and it never returns an error, we will process the .CRT$XI* array in
    the EXE startup with _initterm instead of _initterm_e (which will
    propogate an error code back), so any error will go undetected.  That
    means we don't have to add a new export to the CRT DLL that would
    damage backwards-compatibility.

    Of course none of this confusing behavior was documented in the code.
    It is now.

crtw32\dllstuff\crtlib.c
crtw32\heap\heapinit.c
crtw32\misc\assert.c, dbgrpt.c, secfail.c, seclocf.c
crtw32\rtc\pdblkup.cpp
crtw32\startup\crt0msg.c, stdargv.c

    VS7#231284 GetModuleFileName will not zero-terminate the output buffer
    when a name must be truncated to fit.  None of the CRT calls to GMFN
    accounted for that, exposing them to buffer-overrun problems.

-----------------------------------------------------------------

Tue 27-Mar-01   (PhilipLu)

crtw32\dllstuff\crtlib.c
crtw32\rtc\error.cpp
crtw32\startup\crt0.c, dllcrt0.c

    VS7#230286 Always use GetVersionExA, not GetVersionEx, so we don't run
    into problems running on Win9x.

srcrel\pd-b
[DELETED:]
crtw32\dllstuff\i386\cinitexe.a, cinitexe.mak
crtw32\lowio\i386\cinitcon.a
crtw32\misc\i386\cinitone.a
crtw32\startup\i386\crt0init.a, crt0init.mak
crtw32\stdio\i386\cinitstd.a, cinittmp.a
crtw32\time\i386\cinitclk.a

    Get rid of ancient files that haven't been used since 1994 or so.  An
    early part of the fix for VS7#231220.

-----------------------------------------------------------------

Mon 26-Mar-01   (PhilipLu)

crtw32\stdhpp\xdebug
libw32\include\xdebug

    Back out Saturday's VS buildfix, now that compiler bug VS7#230468 has
    been fixed.

-----------------------------------------------------------------

Sun 25-Mar-01   (PhilipLu)

crtw32\h\mtdll.h, setlocal.h
crtw32\misc\inittime.c
crtw32\time\strftime.c

    VS7#196892 strftime specifiers %c, %x, and %X return a time formatted
    accorded to the current locale data, as specified in the Regional
    Settings control panel page, but we weren't handling these correctly.
    For calendars more complicated than the basic localized Gregorian, we
    can't simply translate the locale formatting string ourself, since it
    assumes a large base of knowledge of era/period strings, modified
    years, etc. (e.g. this is year 4334 according to one of the Korean
    calendar types).  For these types, we should just call Win32 APIs
    GetDateFormat/GetTimeFormat to handle the formatting.  I'm not doing
    this for calendar type 1, localized Gregorian, because that seems a
    bit riskier in that we might slightly change the existing output when
    what we're doing now is fine.

    Also fixed the handling of leading zero suppression in _store_winword,
    which handles these localized date/time formats (now for calendar type
    1 only).  Previously, leading zero suppression wasn't happening at all,
    which became clear when I compared the results against that returned
    by GetDateFormat/GetTimeFormat.

crtw32\stdhpp\xhash
libw32\include\xhash

    VS7#230612 P. J. Plauger sent me a fix for a bug a customer of his
    recently ran into.  The hash_set/hash_map containers could hit an
    infinite loop.  In the test case, this happened after a specific list
    of about 250 inserts and erases.

-----------------------------------------------------------------

Sat 24-Mar-01   (PhilipLu)

crtw32\stdhpp\xdebug
libw32\include\xdebug

    Rolling VS buildfix.  Work around compiler bug VS7#230468 exposed by
    fix for VS7#201153.  Don't declare placement vector operator new/delete
    in case non-placement vector new/delete aren't declared.  Workaround
    will be removed in a day or two.

crtw32\startup\stdargv.c, wincmdln.c

    VS7#229081 _acmdln and _wcmdln can be NULL under certain error
    conditions, so check them before dereferencing.

crtw32\stdhpp\xlocinfo.h
libw32\include\xlocinfo.h

    Add _CRTIMP2 and _CRTIMP to various prototypes in xlocinfo.h.

crtw32\stdhpp\xutility, yvals.h
libw32\include\xutility, yvals.h

    Move _cpp_max/_cpp_min #defines from yvals.h to xutility.

crtw32\h\fpieee.h
libw32\include\fpieee.h
libw32\inc64\fpieee.h

    Remove workaround for x86 backend bug #163574, error using
    __declspec(align) on function parameters (I think).

crtw32\stdhpp\exception
libw32\include\exception

    Remove workaround for VS7#227182, VS build problem caused by the
    VC debugger having a header named eh.h, the same as a CRT header.
    The debugger team has deleted the unneeded header.

crtw32\startup\tlssup.c

    The pointer to the callback array in the IMAGE_TLS_DIRECTORY is off by
    one, pointing at a NULL, so dynamic TLS inits never had a chance of
    working.  Bump the pointer to the first actual function pointer.  Still
    need linker and frontend work to really enable this, which will have to
    wait for post-VC7.0.

-----------------------------------------------------------------

Fri 23-Mar-01   (PhilipLu)

crtw32\rtc\error.cpp
crtw32\stdhpp\sstream, streambuf, strstream
libw32\include\sstream, streambuf, strstream

    Rolling buildfix.  More /Wp64 warnings just got enabled at /W3 and
    are firing in RTC and I/O Streams code, so add more casts to shut
    them up.

crtw32\stdcpp\_tolower.c, ios.cpp, locale.cpp, locale0.cpp, lsources,
    sources.nt, strstrea.cpp, wlocale.cpp, xdebug.cpp [NEW], xlocale.cpp,
    xmutex.cpp
crtw32\stdhpp\fstream, locale, streambuf, xdebug [NEW], xlocale, xlocmes,
    xlocmon, xlocnum, xloctime
crtw32\time\strftime.c
crtw32\tools\win32\relinc.cmd
doc\copysrc.bat
libw32\include\fstream, locale, streambuf, xdebug [NEW], xlocale, xlocmes,
    xlocmon, xlocnum, xloctime
srcrel\pd-b
makefile.inc

    VS7#201153 Customers trying to use _CrtDumpMemoryLeaks() instead of
    _CRTDBG_LEAK_CHECK_DF were seeing all the internal allocations for the
    C++ Standard Library appearing as leaks.  The C++ library needed to
    make all internal allocations _CRT_BLOCKs, so they are ignored by the
    leak detection routines.  That includes defining derivatives of
    std::allocator and std::basic_string that use the debug CRT heap with
    _CRT_BLOCK tagging.

-----------------------------------------------------------------

Thu 22-Mar-01   (PhilipLu)

crtw32\h\crtdbg.h, mtdll.h
crtw32\misc\dbgrpt.c
crtw32\startup\mlock.c
libw32\inc64\crtdbg.h
libw32\include\crtdbg.h

    VS7#124998 Implement _CrtSetReportHook2.  Uses a doubly-linked list to
    record registered debug report hook functions.  The original function,
    _CrtSetReportHook, doesn't meet ATL Server's needs when DLLs try to
    register hooks, but cannot guarantee hooks will be added and removed
    in LIFO order.  In that case, we can end up pointing at a hook function
    that has been unloaded.

-----------------------------------------------------------------

Wed 21-Mar-01   (PhilipLu)

crtw32\eh\stdexcpt.cpp
crtw32\h\typeinfo.h
crtw32\stdhpp\exception, new, stdexcept, typeinfo
libw32\inc64\typeinfo.h
libw32\include\exception, new, stdexcept, typeinfo, typeinfo.h
libw32\msvcprt.src, msvcrt.src, syscrt.src, syscrt64.src
makefile

    VS7#5327, #5417, #127825 Make a set of exception classes used for RTTI
    support, ::bad_cast, ::bad_typeid, and ::__non_rtti_object, identical
    to those names in the std namespace, via using directives.  Trickier
    than it sounds, because the preexisting global and std namespace
    definitions were not identical, and I need to preserve the same class
    layout and exported methods as existed previously.  The slimiest hack
    involves the need for ::bad_cast to now have two incompatible ctors,
    bad_cast(const char*) and bad_cast(const char* const&).  The latter was
    the only ctor before, but the former had to be added so std::bad_cast
    kept its preexisting ctor.  I got rid of bad_cast(const char* const&),
    added a private ctor bad_cast(const char* const*), and since the two
    of those have identical codegen, added an alias '=' declaration in the
    .def file for the main CRT DLL.

    The .def file for the C++ DLL now has a number of forwarder lines, e.g.
        ??1bad_cast@std@@UAE@XZ = BASECRT.??1bad_cast@@UAE@XZ PRIVATE
    to preserve the existing exports from that DLL.  These can be removed
    once the next LKG update with this code takes place.

    The stdhpp changes are to put _Doraise, a protected virtual member of
    the exception hierarchy classes in the Dinkumware code, under control
    of "#if !_HAS_EXCEPTIONS", since this function is only used by the
    special non-throwing version of the C++ Library, which does not need
    to use the main CRT's exception classes.

crtw32/stdcpp/stdthrow.cpp

    Minor bug noticed while working on the previous checkin.  A reference
    to stderr should be to _cpp_stderr, for _STATIC_CPPLIB compatibility.
    This wasn't detected before because stdthrow is only used for a C++
    Library build with _HAS_EXCEPTIONS == 0, which we don't use.

-----------------------------------------------------------------

Tue 20-Mar-01   (PhilipLu for KFrei)

crtw32\rtc\error.cpp, pdblkup.cpp
makefile

    VS7#227306 Fix buffer overrun problems in RTC support, and configure
    so /GS will not insert cookie checks in any RTC support code, by using
    _alloca to allocate any local string buffers.

    VS7#224261 Reenable /GS in the CRT build.  The static link components
    of the msvcrt[d].lib implib must not have any /GS checks in them, since
    that adds new dependencies to user code that wasn't previously needing
    to run the CRT startup code.  Now that the /GS checks in RTC have been
    removed, /GS is OK.

srcrel\external.mkf, makefile

    A request from the build lab.  Unconditionally clear _CL_ in these
    makefiles if we're doing a cross-hosted CRT build (i.e. IA64 CRT built
    on x86).  These makefiles are used to build native-hosted tools needed
    during the CRT build, and the lab uses _CL_ to point to the boot-phase
    cross-compiler passes during the self-build.  Right now, clearing _CL_
    is under a define set by the lab only, but they're changing the define
    and there's no good reason this can't be unconditional.

-----------------------------------------------------------------

Sun 18-Mar-01   (PhilipLu)

crtw32\stdhpp\exception
libw32\include\exception

    VS7#5283 Names terminate, set_terminate, terminate_handler, unexpected,
    set_unexpected, and unexpected_handler all need to be placed in
    namespace std, as well as the global namespace where they exist now.

crtw32\h\stdexcpt.h
libw32\include\stdexcpt.h
libw32\inc64\stdexcpt.h

    Cleanup noticed while making the change for VS7#5283.  There's a block
    of code that's been under an "#elif 0" for 5 years.  It can be removed.

crtw32\h\cruntime.h, new.h
crtw32\heap\setnewh.cpp
crtw32\stdcpp\stdhndlr.cpp
crtw32\tools\win32\relinc.if, relinc64.if
libw32\msvcrt.src, syscrt.src
libw32\include\new.h
srcrel\msvc40.if

    VS7#194908 Headers new.h and new were incompatible if you tried to use
    set_new_handler.  The main CRT had an archaic version of
    ::set_new_handler, in setnewh.cpp, which asserted if you passed in
    anything except NULL.  This has been superceded by the implementation
    of std::set_new_handler in the Dinkumware-supplied stdhndlr.cpp, but
    the headers botched forcing any use of set_new_handler to the std one.

    Fixed so including <new> will define std::set_new_handler and
    std::new_handler, while including <new.h> will define those two names,
    and inject them with using directives as ::set_new_handler and
    ::new_handler.

    setnewh.cpp, with the old definition of ::set_new_handler, is retained
    for backwards compatibility with old binaries, but this routine is
    no longer available through the headers.  The old function is forcibly
    exported from the main CRT DLL.

    Defined _USE_OLD_STDCPP in cruntime.h when the old stdcpp64/stdhpp64
    files are used, so the changes to new.h can be done only when using
    stdcpp/stdhpp instead.  Configured the relinc process so the include
    files for Win64 syscrts use the old new.h definitions, everything else
    uses the new ones.

crtw32\stdhpp\new
libw32\include\new

    Noticed while making the change for VS7#194908 that the fix for
    VS98#18416 had been undone.  A declaration of a non-existant "_New_hand"
    had slipped back into the header.

makefile

    Back out the actual makefile enabling of /GS that was checked in
    yesterday.  The VS build is failing because of the extra CRT
    dependencies this causes, and I need to investigate why.

-----------------------------------------------------------------

Sat 17-Mar-01   (PhilipLu)

crtw32\dllstuff\crtlib.c
crtw32\startup\crt0.c, dllcrt0.c
makefile

    VS7#224261 Turn on /GS in the x86 CRT.  Not totally trivial, because
    the startup code that initializes the global guard cookie can't trigger
    the compiler's local buffer overrun guard logic, since the global cookie
    on entry will differ from that on exit.  Worked around by allocating the
    OSVERSIONINFO via _alloca.

crtw32\stdhpp\xloctime
libw32\include\xloctime

    VS7#159194 Addition to Dinkumware drop 3.10.  The time_get facet was
    not accepting dates in the same format as time_put was outputting.

crtw32\stdhpp\streambuf
libw32\include\streambuf

    Tweak to the Dinkumware drop 3.10, to bring changes I made in line with
    the official Dinkumware version.  Just moved a _Mutex base class in
    basic_streambuf to be the first data member instead, and added _Lock
    and _Unlock non-virtual member functions.

-----------------------------------------------------------------

Fri 16-Mar-01   (PhilipLu)

crtw32\stdhpp\complex, fstream, ios, istream, locale, ostream, sstream,
    streambuf, string, xcomplex, xlocale, xlocmes, xlocmon, xlocnum, xloctime,
    xstring
crtw32\tools\win32\relinc.if, relinc64.cmd, relinc64.if [new]
libw32\include\complex, fstream, ios, istream, locale, ostream, sstream,
    streambuf, string, xcomplex, xlocale, xlocmes, xlocmon, xlocnum, xloctime,
    xstring

    VS7#216778 The frontend now allows "template class __declspec(dllimport)
    myclass<char>" to mean an explicit specialization should be imported from
    a DLL.  Previously, you needed to say "extern" at the front of that, which
    was an extension, so using it failed under /Za with an error, and under /Ze
    you got a C4231 warning.  Since the frontend has changed, I've removed the
    unneeded extern, along with the pragmas to suppress C4231, allowing the
    C++ Standard Library headers to be used /Za /MD[d].

    The relinc changes are necessary because now the stdhpp header cleanse
    treats __FORCE_INSTANCE as always on, but stdhpp64 must still treat it
    as always off.  The same relinc.if can no longer be used for both sets
    of headers.

-----------------------------------------------------------------

Thu 15-Mar-01   (PhilipLu)

langapi\undname\testundn.cxx, undname.cxx

    VS7#5674 Fix of 10-Dec-99 was incomplete.  We should use a lock in
    __unDNameEx as well as __unDName.  Also, added a -x switch to testundn,
    the undecorator verification test app, to test __unDNameEx instead of
    __unDName.  Added heap leak detection to testundn, too, to head off
    future problems (no leaks currently).

-----------------------------------------------------------------

Wed 14-Mar-01   (PhilipLu)

crtw32\stdhpp\xmemory

    VS7#225243 As part of the 3.10 Dinkumware integration, I removed some
    stuff under _RETAIN_OLD_CRT_CODE that I thought was unnecessary.  I was
    wrong.  The code removed is needed until the next LKG update, when the
    LKG headers will pick up the enabling of _HAS_MEMBER_TEMPLATES_REBIND.

crtw32\string\strlwr.c

    VS7#224860 _strlwr will leak the heap buffer malloc'd if _alloca can't
    be used because the stack is almost full.  Also some minor formatting
    and comment changes to make this file and strupr.c look the same.

crtw32\lowio\getch.c

    VS7#224864 _kbhit will leak the heap buffer malloc'd if _alloca can't
    be used because the stack is almost full.

crtw32\stdio\input.c

    VS7#224990 _input/_winput should only allocate the bit map used for
    handling the %[...] spec the first time one of those is seen.  The code
    was allocating it each time, leaking 8K for the _winput case when the
    stack was almost full and malloc was used instead of _alloca.

crtw32\string\strupr.c

    VS7#224974 _strupr has a race condition because it passes 0 instead of
    the proper per-thread codepage to __crtLCMapStringA.  If another thread
    changes the global locale between entry to _strupr and the load of the
    locale in __crtLCMapStringA, the wrong codepage will be used.  Also
    some minor formatting and comment changes to make this file and
    strlwr.c look the same (which is how this turned up).

-----------------------------------------------------------------

Tue 13-Mar-01   (PhilipLu)

crtw32\stdcpp\_tolower.c, _toupper.c

    VS7#190902 std::ctype<>::tolower and toupper use helper functions
    _Tolower and _Toupper, which take a pointer to the ctype's locale info,
    which may not match the current C library's global locale.  But the
    helpers weren't using that specific locale when checking if a character
    below 0x100 was upper/lowercase.

crtw32\stdcpp\newop2.cpp

    VS7#112077 The nothrow version of operator new needs to call malloc
    under the try/catch, instead of just calling _callnewh there.  That's
    because malloc can itself call _callnewh, if _set_new_mode(1) is active.

crtw32\stdcpp\newop.cpp, newop2.cpp

    VS7#221760 _callnewh needs to be marked throw(...), so the optimizer
    won't discard the try/catch in the nothrow version of operator new.
    Also fixed the _callnewh prototype in the throwing operator new for
    consistency.

-----------------------------------------------------------------

Mon 12-Mar-01   (PhilipLu)

crtw32\stdcpp\cerr.cpp, cin.cpp, clog.cpp, cout.cpp, delaop2.cpp, delop2.cpp,
    fiopen.cpp, instances.cpp, iomanip.cpp, ios.cpp, iosptrs.cpp, iostream.cpp,
    locale.cpp, locale0.cpp, newaop.cpp, newaop2.cpp, newop2.cpp, nomemory.cpp,
    nothrow.cpp, raisehan.cpp, stdhndlr.cpp, stdthrow.cpp, string.cpp,
    strstrea.cpp, uncaught.cpp, wcerr.cpp, wcin.cpp, wclog.cpp, wcout.cpp,
    wctrans.c, wctype.c, wiostrea.cpp, wlocale.cpp, xcosh.c, xdateord.cpp,
    xdnorm.c, xdscale.c, xdtest.c, xexp.c, xfcosh.c, xfdnorm.c, xfdscale.c,
    xfdtest.c, xferaise.c, xfexp.c, xfsinh.c, xfvalues.c, xgetwctype.c,
    xlcosh.c, xldnorm.c, xldscale.c, xldtest.c, xlexp.c, xlocale.cpp,
    xlock.cpp, xlpoly.c, xlsinh.c, xlvalues.c, xmath.h, xmbtowc.c, xmtx.c,
    xmtx.h, xmutex.cpp, xpoly.c, xsinh.c, xstod.c, xtowlower.c, xtowupper.c,
    xvalues.c
crtw32\stdhpp\algorithm, bitset, cassert, cctype, cerrno, cfloat, ciso646,
    climits, clocale, cmath, complex, csetjmp, csignal, cstdarg, cstddef,
    cstdio, cstdlib, cstring, ctime, cwchar, cwctype, deque, exception,
    fstream, functional, hash_map, hash_set, iomanip, ios, iosfwd, iostream,
    iso646.h, istream, iterator, limits, list, locale, map, memory, new,
    numeric, ostream, queue, set, sstream, stack, stdexcept, stl.h, streambuf,
    string, strstream, utility, valarray, vector, xcomplex, xhash, xiosbase,
    xlocale, xlocinfo, xlocinfo.h, xlocmes, xlocmon, xlocnum, xloctime,
    xmemory, xstddef, xstring, xtree, xutility, ymath.h, yvals.h
libw32\include\algorithm, bitset, cassert, cctype, cerrno, cfloat, ciso646,
    climits, clocale, cmath, complex, csetjmp, csignal, cstdarg, cstddef,
    cstdio, cstdlib, cstring, ctime, cwchar, cwctype, deque, exception,
    fstream, functional, hash_map, hash_set, iomanip, ios, iosfwd, iostream,
    iso646.h, istream, iterator, limits, list, locale, map, memory, new,
    numeric, ostream, queue, set, sstream, stack, stdexcept, stl.h, streambuf,
    string, strstream, utility, valarray, vector, xcomplex, xhash, xiosbase,
    xlocale, xlocinfo, xlocinfo.h, xlocmes, xlocmon, xlocnum, xloctime,
    xmath.h, xmemory, xstddef, xstring, xtree, xutility, ymath.h, yvals.h

    Integrate the 010208 drop of the Dinkumware C++ Library, version 3.10.
    Fixes bugs VS7#150517 and 157130.  Also has a start of the fix for
    VS7#188201, but the fix appears to need more work.  Most of the work is
    some internal framework shuffling to make sure lazy facets aren't
    leaked.

crtw32\stdhpp\xutility
libw32\include\xutility

    VS7#188201 Permit comparisons between an iterator on the LHS and the
    corresponding const_iterator on the RHS, for _Ptrit-based iterators.
    The opposite order, const_iterator on the LHS, already worked fine
    because we have a ctor that will convert the non-const iterator to the
    corresponding const_iterator.  For non-const on the left, add global
    template functions that match non-const LHS, const RHS and invert the
    comparison order so the RHS will get converted to a const_iterator.

crtw32\h\i386\dvec.h, fvec.h, ivec.h
libw32\include\dvec.h, fvec.h, ivec.h

    VS7#127210 The Intel-supplied headers [dfi]vec.h, for easier access
    to the MMX/SSE/SSE2 intrinsics, used the old I/O streams, and thus
    got a deprecated warning when used.  Switched to using the supported
    Dinkumware I/O streams instead, and moved all the uses under an #ifdef
    _ENABLE_VEC_DEBUG, since we don't want to require compiling /GX or
    bloating the code whenever these are used.

    Also fixed level 1 warnings and a "cout <<" instead of "os <<" that
    I ran across while fixing this.

-----------------------------------------------------------------

Fri 09-Mar-01   (PhilipLu)

eh\i386\lowhelpr.asm
misc\i386\exsup.asm, exsup3.asm

    VS7#221754 Add .FPO directives to the asm code that calls into the user
    code for C++ EH and SEH, so callstacks are correct.  Added FPO data for
    _CallSettingFrame, _except_handler3, _abnormal_termination, and
    _local_unwind2.

makefile, makefile.inc, makefile.sub

    Fix and clean the user-rebuild makefiles.  My 26-Feb change to the CRT
    build broke the user CRT rebuild scenario when the path to the include
    directory has spaces in it, as is the default.  I needed to put quotes
    around $(VCTOOLSINC) in the recursive make invocations.  I also noticed
    some text in the cleansed makefiles which shouldn't have been there.
    There were references to BLD_SYSCRT and DEVBUILD, as well as to the
    stdcpp64 directory and some private CRT build tools.  Removed them all
    using additional STRIPLIN comments.

-----------------------------------------------------------------

Thu 08-Mar-01   (PhilipLu)

crtw32\h\math.h
fpw32\tran\ceil.c, floor.c, lsources, modf.c, sources.nt
fpw32\tran\i386\87ctran.asm, atan.asm, atan_pentium4.asm [NEW],
    atan_table.c [NEW], ceil_pentium4.asm [NEW], cpu_disp.c [NEW],
    disp_pentium4.inc [NEW], exp_pentium4.asm [NEW], floor_pentium4.asm [NEW],
    ftol2.asm [NEW], libm_error.c [NEW], libm_support.h [NEW], log.asm,
    log10_pentium4.asm [NEW], log_pentium4.asm [NEW], modf_pentium4.asm [NEW],
    pow.asm, pow_pentium4.asm [NEW]
libw32\inc64\math.h
libw32\include\math.h
libw32\msvcrt.src, syscrt.src
srcrel\objects.mkf, pd-b
makefile, makefile.inc

    VS7#215249 Pick up improved floating point functions from Intel.  Most
    of this consists of SSE2-specific versions of ceil, floor, modf, atan,
    exp, log, log10, and pow, which are automatically called if running on
    an SSE2-capable CPU (i.e. the Pentium4).

    This has been in the works for a couple months, and includes a few
    minor bugfixes in the existing non-SSE2 code that turned up in
    validating the routines:

        modf(x) for x a negative integer should return a fractional part
            of -0.0, not +0.0
        log and log10(-denormal) were not setting an errno of EDOM
        pow(+/-0, -denorm) was returning 0 instead of infinity

    Note that the SSE2 implementations can be unavoidably different in the
    LSB, since SSE2 uses 8-byte FP, and the x87 stack 10 byte.  To allow
    users to force use of the old routines, I've added new function
    _set_SSE2_enable().

    So that existing apps using MSVCRT.DLL won't suddenly get different
    results on a Pentium4, I've made the system CRT default to not using
    the new SSE2 code.  You can still call _set_SSE2_enable(TRUE) to
    switch to the new routines when running on a Pentium4.

    Finally, there's _ftol2, a replacement for _ftol which doesn't need
    to change the rounding mode, so it avoids the FLDCW stalls.  A new name
    is required because it uses 2 slots on the x87 stack, while _ftol only
    uses 1.  The compiler will have to switch the name of the helper.  I've
    made _ftol2 statically linked even in msvcrt.lib, so we don't take an
    unnecessary indirect branch to get into the CRT DLL.

srcrel\common.mkf, external.mkf, makefile, objects.mkf
makefile

    Some additional build work, continuing what was done for VS7#214893
    back on 26-Feb.  Print out the current TARGET_CPU, LLP64, and
    BLD_SYSCRT settings.  More importantly, detect attempts to use a
    pre-existing build tree that had different values for these vars, or
    attempts to use stdcpp when the tree already has stdcpp64 (or vice-
    versa), and issue a fatal NMAKE error.

-----------------------------------------------------------------

Wed 07-Mar-01   (PhilipLu)

    VS7#221122 My 20-Feb-01 checkin to remove _RT_LOCK fatal errors broke
    the CRT running on Win9x, and probably broke it elsewhere too, but NT
    was too kind to mention that.  I was releasing the _HEAP_LOCK critsec
    before I was finished using the heap.  Change to free all normal
    locks first, so they can be freed from the heap, then free all the
    preallocated locks, including _HEAP_LOCK.

-----------------------------------------------------------------

Tue 06-Mar-01   (PhilipLu)

crtw32\stdhpp\xmemory
libw32\include\xmemory

    VS7#221135 Turning on _HAS_MEMBER_TEMPLATES_REBIND broke anyone who
    wrote their own operator new, compiled /MD[d], and had container
    classes (except basic_string) specialized on char, wchar_t or unsigned
    short.  The problem is std::allocator<T> for those types is dllimported
    from msvcp70 (thanks to questionable declarations in xstring), but now,
    std::allocator::allocate is a member template function, which means it
    is always locally generated, and never specialized.  So allocate()
    would use the local operator new, and the dllimported deallocate()
    would use the CRT operator new, triggering a quick crash.

    Fix is just to make the member-template allocate() stop calling global
    template function _Allocate() directly, and instead call through a
    non-template member form of allocate(), which will be dllimported to
    match deallocate().

crtw32\h\i386\mm3dnow.h
libw32\include\mm3dnow.h

    VS7#199371 Add prototypes for new 3DNow intrinsics _m_from_float and
    _m_to_float.

-----------------------------------------------------------------

Mon 05-Mar-01   (PhilipLu)

fpw32\tran\i386\debug.c, filter_simd.c, xmmi2_fp_emul.c, xmmi_fp_emul.c,
    xmmi_types.h

    VS7#215249 Pick up Intel's support for the Pentium4 DAZ bit in
    _fpieee_flt.

crtw32\stdhpp\xlocale, yvals.h
libw32\include\xlocale, yvals.h

    VS7#212255 std::_Tidyfac<_Facet>::_Tidy must be __declspec(unmanaged)
    for /clr compiles.  This function is registered for callback via atexit,
    but by the time it is called, the URT has already been shut down.  In
    general, any function run at DLL unload must be unmanaged.

crtw32\startup\stdenvp.c

    VS7#174755 Fix a null deref problem reported by NT.  If
    __crtGetEnvironmentStrings[AW] fails and returns a NULL during startup,
    _[aw]envptr will be NULL on entry to _setenvp, which failed to check
    for that before dereferencing it.  Just added a NULL check, issuing
    the same _RT_SPACEENV fatal error used elsewhere in _setenvp in
    out-of-memory situations.

-----------------------------------------------------------------

Tue 27-Feb-01   (PhilipLu)

crtw32\convert\isctype.c

    VS7#213380 Code that compiled /D_DEBUG /ML and was fine in VC6 could
    fail to link in VC7.  That's because we added a debug test to ctype.h,
    which called a routine that was only present in debug CRTs.  The CRT
    headers use _DEBUG as the flag that a debug CRT is being used, but in
    this case, by manually defining _DEBUG, the user is fooling that logic.

    The problem is that _DEBUG has been hijacked by other, non-CRT code.
    If we had more CRT header code under _DEBUG, the proper fix would
    probably be to have cl.exe define both _DEBUG and _CRT_DEBUG if the
    /M[LTD]d switches are used, and key the header tests off _CRT_DEBUG
    instead.  But that can wait until we add more debug header tests.
    For now, this is a minor case that only shows up when using /ML and
    compiling C, not C++.  So we're going with the simpler fix of defining
    the missing entrypoint, _chvalidator, in libc.lib, and not in the
    other retail CRTs.

srcrel\common.mkf

    Tweak the new common.mkf file added yesterday for VS7#214893.  If
    %VCFLAVOR% exists in the environment, then we look for the native
    toolset at, e.g. %DEVTOOLS%\x86\%VCFLAVOR%.  If it's not defined,
    look for the VC7 and VCLKG trees as before.

-----------------------------------------------------------------

Mon 26-Feb-01   (PhilipLu)

srcrel\common.mkf [NEW], external.mkf, makefile, pd-b
cleanbld.cmd, makefile

    VS7#214893 Some CRT build changes to make it easier for other devs to
    build the CRT.  Previously, the build relied on %VCTOOLS%, and after my
    14-Feb-01 checkin, some fixed paths under %DEVTOOLS%\*\vc7.  That's
    problematic for people who use vclkg instead of vc7 under devtools.

    I'm changing the build so the only thing necessary is %DEVTOOLS%.  The
    makefiles will search for the flavor of VC that's present under there,
    with VC7 taking precedence over VCLKG.

    You can also directly specify all the various paths needed, using
    %VCTOOLS% or %VCTOOLSINC% for the main CRT build, and %DEVTOOLSBIN%,
    %DEVTOOLSLIB%, %DEVTOOLSINC%, and %DEVTOOLSSDKLIB% for the srcrel
    tools build.

    Makefile and srcrel\common.mkf now have extensive error messaging that
    explains what's required if the setup is in some way incorrect.

mk.bat

    Trivial change - have mk.bat (which builds the CRT in-place in the
    source tree under the build directory) save the build log to bld.log
    instead of build.log, so mkbld and mk don't overwrite the other's log.

crtw32\eh\frame.cpp

    VS7#217108 Finish up work on new helper function __CxxCallUnwindDtor.
    I noticed that the __except(terminate()) should probably be
    __except(FrameUnwindFilter(exception_info())), to match the unmanaged
    case.  That permits SEH to pass out of a dtor unwind, but a throw to
    result in a call to terminte().  After testing, MarkLe agreed, so now
    it's changed.

-----------------------------------------------------------------

Sun 25-Feb-01   (PhilipLu)

crtw32\stdhpp\yvals.h

    VS7#218235 Dinkumware support for MBCS in mbrtowc and other such
    routines was busted by the checkin for vs7#202930.  The definition
    for _cpp_isleadbyte(c) needlessly shifts 'c' right by 8 bits, breaking
    the Dinkumware code in locales with leadbytes like Japanese.

-----------------------------------------------------------------

Sat 24-Feb-01   (PhilipLu)

crtw32\eh\frame.cpp
libw32\msvcrt.src, syscrt.src, syscrt64.src

    VS7#217108 Add helper function __CxxCallUnwindDtor from MarkLe.  It
    is called by managed code to handle calling a destructor during an
    unwind so that terminate() will be called if the dtor throws.

crtw32\h\i386\dvec.h, emmintrin.h, fvec.h, ivec.h, mmintrin.h, xmmintrin.h
libw32\include\dvec.h, emmintrin.h, fvec.h, ivec.h, mmintrin.h, xmmintrin.h

    VS7#217691 Remove "INTEL CONFIDENTIAL" from dvec.h/emmintrin.h, since
    SSE2 is now publicly released.  Also clean up the header comments,
    getting rid of source control system comments and a revision comment.

crtw32\stdhpp\deque, iterator, list, xtree, xutility
libw32\include\deque, iterator, list, xtree, xutility

    VS7#216777 Remove #pragma warning controls for C4284 from these C++
    Library headers.  That warning no longer exists, and a /Wall compile
    will issue C4619 complaining about a non-existant warning number being
    used by #pragma warning.

-----------------------------------------------------------------

Fri 23-Feb-01   (gautamb)

fpw32\tran\ia64\acos.s, acosf.s, asin.s, asinf.s, atan2.s, atan2f.s, exp.s,
    expf.s, ldexp.s, ldexpf.s, pow.s, powf.s, sinh.s, sinhf.s
makefile

    VS7#212094 changed the function names in almap.lib to correct ones for ia64
    specific case.

    Added new math update libm ver 5.5.104

-----------------------------------------------------------------

Fri 23-Feb-01   (gautamb)

crtw32\convert\wcstod.c, wtof.c
crtw32\eh\typname.cpp
crtw32\startup\wild.c
crtw32\stdio\input.c, popen.c

    VS7#215477 Added check for return values for malloc. This will avoid some
    unwanted AVs in low memory conditions.

-----------------------------------------------------------------

Wed 21-Feb-01   (PhilipLu)

crtw32\misc\initcrit.c

    Buildfix - Yesterday's change to initcrit.c would use
    InitializeCriticalSectionAndSpinCount on Win98/WinME, but that API on
    those OSes is broken.  It should return a BOOL success code, but
    instead is a VOID return.  Just use InitializeCriticalSection there.

langapi\undname\undname.cxx

    Forgot to check in the langapi component of VS7#172586.

-----------------------------------------------------------------

Tue 20-Feb-01   (PhilipLu)

crtw32\h\exsup.inc, internal.h, mtdll.h
crtw32\lowio\ioinit.c, osfinfo.c
crtw32\misc\initcrit.c
crtw32\startup\mlock.c, tidtable.c
crtw32\stdio\popen.c, rmtmp.c, stream.c, tempnam.c, tmpfile.c
srcrel\pd-b

[DELETED:]
fpw32/inc/i386/os2dll.inc

    VS7#172586 Stop issuing _RT_LOCK fatal errors.  This is an out-of-memory
    error when a critical section could not be allocated.  CRT fatal errors
    have to be avoided if at all possible, because the CRT DLL could be
    used by some long-lived server app (e.g. IIS), and calling ExitProcess,
    as CRT fatal errors do, is unacceptable in such an app.  We now
    preallocate all named locks, as well as the FILE* locks for stdin,
    stdout, and stderr.  We don't preallocate 4 named locks, but always
    call _mtinitlocknum to allocate those before every use, so failure to
    allocate on the first call can be detected.

    This currently gives 14 preallocated locks, as compared to the 4 we
    previously used.  We also detect a failure to allocate a lock for other
    files, and fail the file open instead of abort.  Note that one instance
    of _RT_LOCK still exists, when a _lock call is issued on a lock which
    hasn't been allocated yet, but that should never happen.  If it does,
    it's an internal error in the CRT.

    As part of this, got rid of file os2dll.inc, which is no longer used,
    and had a number of ancient, incorrect, asm equates for the named locks.
    Also got rid of a bunch of obsolete named locks that are never used.

-----------------------------------------------------------------

Wed 14-Feb-01   (PhilipLu)

cleanbld.cmd
srcrel\external.mkf, makefile

    The VS team devtools project is being reorganized, so now the CRT build
    requires environment variable DEVTOOLS to be set.  Use %DEVTOOLS% to
    find the proper native-hosted components when building the srcrel tools
    during a cross-hosted Win64 CRT build.

-----------------------------------------------------------------

Mon 12-Feb-01   (PhilipLu)

crtw32\stdhpp\yvals.h
crtw32\include\yvals.h

    VS7#5292 Turn on _GLOBAL_USING to wrap C library in namespace std, once
    again.  The new LKG compiler fixes the bugs that prevented this back on
    Dec 8, 2000.

    Also turn on _HAS_MEMBER_TEMPLATES_REBIND now that the compiler is
    capable of handling it, and the VS build has fixed three places
    where a std::map had a const key type.  That's illegal - the key must
    be assignable, and _HAS_MEMBER_TEMPLATES_REBIND exposed that problem
    because it generated an allocator<const int>.

-----------------------------------------------------------------

Thu 08-Feb-01   (GautamB)

crtw32\h\stdlib.h
crtw32\misc\bswap.c
libw32\inc64\stdlib.h
libw32\include\stdlib.h

    VS7#209247 added __cdecl before byteswap functions.

-----------------------------------------------------------------

Thu 08-Feb-01   (PhilipLu)

libw32\syscrt64.src

    Buildfix for 64-bit sys CRTs.

-----------------------------------------------------------------

Wed 07-Feb-01   (PhilipLu)

crtw32\h\ctype.h, wchar.h
crtw32\misc\initctyp.c
libw32\include\ctype.h
libw32\inc64\ctype.h

    Buildfixes to complete fix for VS7#202930.

crtw32\h\math.h, stdio.h
libw32\inc64\math.h, wchar.h
libw32\include\math.h, wchar.h

    Cosmetic changes.

-----------------------------------------------------------------

Wed 7-Feb-01   (GautamB)

crtw32\h\ctype.h, mtdll.h, setlocal.h, stdio.h, stdlib.h
crtw32\misc\ctype.c, initctyp.c, setlocal.c
crtw32\stdcpp\_tolower.c, _toupper.c, cerr.cpp, cin.cpp, clog.cpp, cout.cpp,
    stdthrow.cpp, wcerr.cpp, wcin.cpp, wclog.cpp, wcout.cpp, xdateord.cpp,
    xmbtowc.c, xstrcoll.c, xstrxfrm.c, xwcscoll.c, xwcsxfrm.c, xwctomb.c
crtw32\stdhpp\xlocale, yvals.h
crtw32\stdio\_file.c
libw32\inc64\stdlib.h
libw32\include\stdlib.h, xlocale
libw32\msvcrt.src, syscrt.src, syscrt64.src

    VS7#202930 Fixed problem with _STATIC_CPPLIB to work. there were some
    problem with data being exported from dll.

crtw32\h\math.h
libw32\include\math.h
libw32\inc64\math.h

    VS7#193177 Now we need to define _USE_MATH_DEFINES to define math
    constants

-----------------------------------------------------------------

Wed 07-Feb-01   (PhilipLu)

fpw32\tran\ia64\modf.s, modff.s

    VS7#209420 modf/modff can improperly raise on Invalid Exception if
    passed an FP value greater than the _INT64_MAX.  An fcvt.fx.trunc
    should be using .s1 instead of .s0.

makefile.sub

    VS7#209816 Don't use IA64 compiler option -QIA64_A0 any longer.
    Cl.exe already supplies the proper default.

-----------------------------------------------------------------

Thu 14-Dec-00   (PhilipLu)  Ported Tue 06-Feb-01   (KarlSi)

crtw32\stdcpp\xlock.cpp
crtw32\stdhpp\istream, ostream, streambuf, xloctime, yvals.h
libw32\include\istream, ostream, streambuf, xloctime, yvals.h

    Enable new breaking CRT changes that have been waiting for next LKG
    update under _CRT_NEW_STL_DROP.  This is only going into the nextVCLKG
    branch for now.  These edits change the size of some types exported
    from msvcp70.dll, so they can only happen at LKG updates.

-----------------------------------------------------------------

Mon 05-Feb-01   (PhilipLu)

crtw32\h\stdarg.h
libw32\include\stdarg.h
libw32\inc64\stdarg.h

    VS7#201535 Fix va_start(ap,v) for C++, where it is incorrect to use &v,
    since v may be an instance of a class that defines an operator&.

-----------------------------------------------------------------

Thu 18-Jan-01   (PhilipLu)

libw32\inc64\xlocale, xstring

    Forgot to update the relinc headers for the previous checkin.

-----------------------------------------------------------------

Tue 16-Jan-01   (PhilipLu)

crtw32\stdcpp64\strstrea.cpp
crtw32\stdhpp64\xlocale, xstring

    IA64 Sys CRT buildfix.  Add casts to shut up new frontend warning, same as
    was done for the IA64 VC CRT on Friday.

-----------------------------------------------------------------

Fri 12-Jan-01   (PhilipLu)

crtw32\tools\win32\newline.sed

    Tweak sed script so it works for sed V1.08 used on x86 and V2.05 used on
    IA64.

crtw32\stdcpp\strstrea.cpp

    IA64 rolling build fix.  Add (int) cast to shut up new frontend warning.

-----------------------------------------------------------------

Thu 04-Jan-01   (GautamB)

crtw32\h\stdlib.h
crtw32\misc\rotl.h, rotr.h, abs.h
makefile.inc

    Added 64 bit intrinsics _abs64, _rtol64, _rotr64 etc. also added
    __byte_swap intrinsic functions.

libw32\msvcrt.rc, msvcirt.rc, msvcprt.rc, msvcrt40.rc, syscrt.rc, sysirt.rc,
    sysprt.rc, syscrt64.rc, sysirt64.rc, sysprt64.rc

    Copyright changes to match the product.

-----------------------------------------------------------------

Thu 15-Dec-00   (PhilipLu)

<<< 212 files not worth listing individually >>>

    Copyright update part 3.  Update P.J. Plauger's copyrights to 2001,
    with his approval.

-----------------------------------------------------------------

Mon 11-Dec-00   (PhilipLu)

crtw32\h\stdio.h
crtw32\stdio\tempnam.c
libw32\include\stdio.h
libw32\inc64\stdio.h

    VS7#5416 Fix comments about L_tmpnam in stdio.h, and fix double-free
    bug in _tempnam() I noticed while investigating this bug.

crtw32\h\crtdbg.h
libw32\include\crtdbg.h
libw32\inc64\crtdbg.h

    VS7#166572 The non-_DEBUG macro definitions of _CrtSetReportHook,
    _CrtSetReportFile, _CrtSetAllocHook, and _CrtSetDumpClient should be
    typed the same as the _DEBUG function definitions.

crtw32\h\tchar.h
libw32\include\tchar.h
libw32\inc64\tchar.h

    VS7#180102 Fix _strnextc for chars >= 0x80.

crtw32\h\cmacros.inc
crtw32\tools\fixcopyright.pl [NEW]
fpw32\conv\cfout.c, constpow.c, cvt.c
fpw32\inc\i386\cmacros.inc, elem87.inc, mathmac.inc, os2supp.inc
fpw32\tran\bessel.c, hypot.c
fpw32\tran\i386\87cdisp.asm, 87csqrt.asm, 87ctran.asm, 87ctrig.asm,
    87ctriga.asm, 87ctrigh.asm, 87disp.asm, 87fmod.asm, 87sqrt.asm, 87tran.asm,
    87trig.asm, 87triga.asm, 87trigh.asm, acos.asm, adj_fdiv.asm, asin.asm,
    atan.asm, common.asm, cos.asm, fpctrl.c, frnd.c, ftol.asm, ieee.c,
    ieee87.c, ldsplit.asm, log.asm, log10.asm, pow.asm, sin.asm, sqrt.asm,
    tan.asm, trig.asm, triga.asm, xmmi_types.h
fpw32\tran\ia64\fpctrl.c, ieee.c
libw32\msvcrt40.rc

    Copyright update part 1.  In preparation for updating copyright text
    from 2000 to 2001, check in a perl script which updates the copyrights
    and outputs warnings for files where the copyright does not have the
    proper form.  Fix all those warnings, so the script runs warning-clean.

<<< 1,218 files not worth listing individually >>>

    Copyright update part 2.  Update copyrights to run up to 2001.

-----------------------------------------------------------------

Sun 10-Dec-00   (PhilipLu)

crtw32\dllstuff\crtexe.c
crtw32\startup\crt0.c

    VS7#167293 Tighten up the check for a managed EXE in case it ever
    sees a PE+ on x86 or PE on IA64, or an image without a COM Descriptor
    directory entry.

crtw32\h\stdio.h
libw32\include\stdio.h
libw32\inc64\stdio.h

    VS7#122990 Define _FPOSOFF for _POSIX_ so C++ I/O Streams can be
    compiled.

-----------------------------------------------------------------

Fri 08-Dec-00   (PhilipLu)

crtw32\stdhpp\yvals.h
libw32\include\yvals.h

    Turn off _GLOBAL_USING temporarily.  Turning it on back on Wednesday,
    to wrap the C library in namespace std has triggered bugs in the C++
    compiler frontend (VS7#190308, 190674).  This will be reenabled once
    the frontend is fixed.

crtw32\h\malloc.h
libw32\include\malloc.h
libw32\inc64\malloc.h

    Fix the _POSIX_ (NT) build by moving prototype for _resetstkoflw out
    from under #ifndef _POSIX_.

-----------------------------------------------------------------

Thu 07-Dec-00   (PhilipLu)

crtw32\stdcpp\xgetwctype.c

    Fix the 64-bit VC CRT build (missing cast from size_t -> int).

-----------------------------------------------------------------

Wed 06-Dec-00   (PhilipLu)

makefile.inc
crtw32\stdcpp\lsources, sources.nt, xdateord.cpp, xgetwctype.c, xmath.h,
    xtowlower.c, xtowupper.c
crtw32\stdhpp\algorithm, fstream, ios, iosfwd, memory, sstream, utility,
    vector, xcomplex, xhash, xlocinfo, xlocinfo.h, xloctime, xmemory, xutility,
    yvals.h
libw32\include\algorithm, fstream, ios, iosfwd, memory, sstream, utility,
    vector, xcomplex, xhash, xlocinfo, xlocinfo.h, xloctime, xmath.h, xmemory,
    xutility, yvals.h
libw32\msvcrt.src, syscrt.src, syscrt64.src

    Integrate the 001118 drop of the Dinkumware C++ Library.  Fixes bugs
    VS7#149387, 155323, and 182248.  Also contains a fix for VS7#161213,
    but that can't be turned on until an LKG update.  Also contains a start
    on the fixes for VS7#150517 and 157130.

    Also turning on _GLOBAL_USING in yvals.h, so VS7#5292 is finally fixed,
    with the C library properly wrapped in the std namespace.  This can be
    done now that the Beta 1 C++ compiler has been promoted to the LKG
    toolset.

crtw32\stdcpp\cerr.cpp, cin.cpp, clog.cpp, cout.cpp, delaop2.cpp, delop2.cpp,
    fiopen.cpp, instances.cpp, iomanip.cpp, ios.cpp, iosptrs.cpp, iostream.cpp,
    locale.cpp, locale0.cpp, newaop.cpp, newaop2.cpp, newop2.cpp, nomemory.cpp,
    nothrow.cpp, raisehan.cpp, stdhndlr.cpp, stdthrow.cpp, string.cpp,
    strstrea.cpp, uncaught.cpp, wcerr.cpp, wcin.cpp, wclog.cpp, wcout.cpp,
    wctrans.c, wctype.c, wiostrea.cpp, wlocale.cpp, xcosh.c, xdnorm.c,
    xdscale.c, xdtest.c, xexp.c, xfcosh.c, xfdnorm.c, xfdscale.c, xfdtest.c,
    xferaise.c, xfexp.c, xfsinh.c, xfvalues.c, xlcosh.c, xldnorm.c, xldscale.c,
    xldtest.c, xlexp.c, xlocale.cpp, xlock.cpp, xlpoly.c, xlsinh.c, xlvalues.c,
    xmtx.c, xmtx.h, xmutex.cpp, xpoly.c, xsinh.c, xstod.c, xvalues.c
crtw32\stdhpp\bitset, cassert, cctype, cerrno, cfloat, ciso646, climits,
    clocale, cmath, complex, csetjmp, csignal, cstdarg, cstddef, cstdio,
    cstdlib, cstring, ctime, cwchar, cwctype, deque, exception, functional,
    hash_map, hash_set, iomanip, iostream, iso646.h, istream, iterator, limits,
    list, locale, map, new, numeric, ostream, queue, set, stack, stdexcept,
    stl.h, streambuf, string, strstream, valarray, xiosbase, xlocale, xlocmes,
    xlocmon, xlocnum, xstddef, xstring, xtree, ymath.h
libw32\include\bitset, cassert, cctype, cerrno, cfloat, ciso646, climits,
    clocale, cmath, complex, csetjmp, csignal, cstdarg, cstddef, cstdio,
    cstdlib, cstring, ctime, cwchar, cwctype, deque, exception, functional,
    hash_map, hash_set, iomanip, iostream, iso646.h, istream, iterator, limits,
    list, locale, map, new, numeric, ostream, queue, set, stack, stdexcept,
    stl.h, streambuf, string, strstream, valarray, xiosbase, xlocale, xlocmes,
    xlocmon, xlocnum, xstddef, xstring, xtree, ymath.h

    Dinkumware files unchanged by the 001118 drop except for a change in
    the version comment from V3.06:0009 to V3.09:0009

-----------------------------------------------------------------

Tue 05-Dec-00   (PhilipLu)

doc\copysrc.bat
srcrel\external.mkf, nmktobat.c, pd-b

[RENAME]
srcrel\bldwin95.bat -> srcrel\bldwin9x.bat

    VS7#178683 Rename bldwin95.bat to bldwin9x.bat, since VS won't be
    supporting Win95 any longer.  Also renamed some references to Win95
    to Win9x instead.

srcrel\makefile

    Minor cleanup - hide the rule to create srcrel\pd-b under !if 0.
    This file is always hand-edited nowadays, not generated, and it
    was getting overwritten whenever the timestamp for pd-exe was newer
    than that for pd-b (as in a newly enlisted project with pd-b then
    copied from elsewhere).

crtw32\h\wchar.h
libw32\include\wchar.h
libw32\inc64\wchar.h

    VS7#186936 The inline definition of mbsinit() in wchar.h was a
    stub that just returned 1.  Changed that to the proper definition,
    which is just a simple (p == NULL || *p == 0).

-----------------------------------------------------------------

Mon 04-Dec-00   (PhilipLu)

[NEW]
crtw32\stdcpp\xdateord.cpp, xgetwctype.c, xtowlower.c, xtowupper.c

doc\copysrc.bat
srcrel\pd-b

    Check in dummy placeholders for new files that will be required for
    the next Dinkumware integration.  This is to meet a 12/8/00 deadline
    for entering new files into FLDB for the VS7 setup.

-----------------------------------------------------------------

Wed 29-Nov-00   (Gautamb)

Delete
crtw32\mbstring\i386\mbscat.asm
crtw32\mbstring\mbscat.c mbsdup.c

Edit
makefile
makefile.inc
doc\copysrc.bat
srcrel\external.mkf objects.mkf pd-b
crtw32\string\stricmp.c stricoll.c
crtw32\mbstring\sources.nt lsources
libw32\msvcrt.src syscrt.src syscrt64.src

    VS7#100359 Added an alias lib for duplicate functions with same code.

-----------------------------------------------------------------

Tue 28-Nov-00   (Gautamb)

crtw32\stdio\input.c

    VS7#162114, 167304. Bug fix for use of uninitialized variable and for
    wscanf crashing due to low stack.

-----------------------------------------------------------------

Mon 27-Nov-00   (PhilipLu)

crtw32\stdhpp\istream, xlocale, xlocnum, xstring
libw32\include\istream, xlocale, xlocnum, xstring

    Buildfix for IA64 VC CRT.  Add casts to silence warnings about 64 bit
    to 32 bit truncations.

fpw32\tran\ia64\acos.s, acosf.s, asin.s, asinf.s

    VS7#186484 LIBM v5.4 turned off exceptions on errors in acos, acosf,
    asin, and asinf.  Turn the exceptions back on.

fpw32\tran\lsources, sources.nt
srcrel\pd-b

[DELETED:]
fpw32\tran\ia64\em_types.h, emfloat.s, remainder.s, remainderf.s, scalb.s,
    scalbf.s

    Get rid of more IA64 LIBM files that are unneeded.  Files em_types.h
    and emfloat.s are old _fpieee_flt support files that are no longer
    needed.  The remainder and scalb files are for LIBM v5.4 code that we
    don't have on the x86 side and thus don't currently want for IA64.

fpw32\tran\ia64\isnan.s, isnanf.s, logb.s, logbf.s
fpw32\tran\ieeemisc.c

    Get the implementations of _isnan and _logb from the IA64 LIBM asm
    code instead of ieeemisc.c.  Add an underscore prefix to the routine
    names in the LIBM .s files, since that's what we document and declare
    in the headers.

-----------------------------------------------------------------

Fri 24-Nov-00   (PhilipLu)

crtw32\h\conio.h, stdio.h, wchar.h
crtw32\lowio\putwch.c
crtw32\stdio\fputwc.c, fputwchr.c, output.c
libw32\include\conio.h, stdio.h, wchar.h
libw32\inc64\conio.h, stdio.h, wchar.h

    VS7#176345 putwchar appeared twice in wchar.h, once with a wint_t arg,
    once with wchar_t, leading to errors when compiling /Zc:wchar_t.  On
    examination, it turns out that several functions were wrongly declared
    with wint_t args: fputwc, _fputwchar, putwc, putwchar, and _putwch.
    Switch all of them to take a wchar_t arg instead.

-----------------------------------------------------------------

Wed 22-Nov-00   (PhilipLu)

clean.cmd, cleanbld.cmd, makefile
srcrel\clnsrcrel.bat, external.mkf, makefile, mkclnmkf.c, objects.mkf, pd-b

    Checking in changes to enable a native IA64-hosted CRT build.
    Currently, you still need to specify LLP64=1 in the environment.

fpw32\tran\sources.nt
fpw32\tran\ia64\acos.s, acosf.s, asin.s, asinf.s, atan.s, atan2.s, atan2f.s,
    atanf.s, ceil.s, ceilf.s, cosh.s, coshf.s, exp.s, expf.s, floor.s,
    floorf.s, fmod.s, fmodf.s, hypot.s, hypotf.s, ldexp.s, ldexpf.s,
    libm_atan2_reg.s, libm_error.c, libm_reduce.s, libm_tan.s, log.s, logb.s,
    logbf.s, logf.s, pow.s, powf.s, remainder.s, remainderf.s, scalb.s,
    scalbf.s, sincos.s, sincosf.s, sinh.s, sinhf.s, sqrt.s, sqrtf.s, tan.s,
    tanf.s
srcrel\pd-b

[DELETED:]
fpw32\tran\ia64\asincosf.c, atan2f.c, atanf.c, ceilf.c, expf.c, fabsf.c,
    floorf.c, fmodf.c, fp80.s, fp80c.c, log10f.c, logf.c, powf.c, sincosf.c,
    sincoshf.c, sqrtf.c, tanf.c

    Update to IA64 LIBM v5.4 108 from Intel, dated 09/21.  Also get rid of
    a bunch of tran\ia64\*.c files which should have been removed when we
    first switched from the C-based to asm-based LIBM.

-----------------------------------------------------------------

Mon 20-Nov-00   (PhilipLu)

crtw32\h\setjmp.h
crtw32\misc\ia64\longjmp.s, setjmp.s, setjmpex.s
libw32\include\setjmp.h
libw32\inc64\setjmp.h

    Back out VS7#182574, so IA64 setjmp/longjmp once again will save/restore
    the FPSR.  NT rethought its decision on this.

[Added:]
libw32\tools\ia64\aliasobj.exe, detab.exe, ifstrip.exe, pd.exe, striphdr.exe,
    tolwrupr.exe, trailing.exe, whackline.exe

    Add IA64 versions of tools needed for a native-hosted IA64 CRT build.

-----------------------------------------------------------------

Fri 17-Nov-00   (PhilipLu)

crtw32\misc\ia64\longjmp.s

    VS7#184669 The IA64 setjmp/longjmp change made on Monday for vs7#182574
    can crash the OS and cause an immediate reboot without hitting the BSOD
    when using _setjmpex for safe longjmps.  That's because a safe longjmp
    uses RtlUnwind2 to unwind and restore state back to the setjmp point,
    and the code in RtlUnwind2 still assumes that the jmp_buf holds a valid
    saved FPSR.  Apparently, a bogus FPSR is enough to bring the machine
    down!

    Fixed by changing longjmp to save the ambient FPSR in the jmp_buf just
    before calling RtlUnwind2 in the safe longjmp path.

-----------------------------------------------------------------

Mon 13-Nov-00   (PhilipLu)

fpw32\tran\lsources, sources.nt
fpw32\tran\ia64\modf.s, modff.s
srcrel\pd-b

    VS7#180200 modff is declared in math.h but wasn't available.  Rather than
    add an inline modff in math.h (which was removed for VS7#2515), I'm instead
    adding the Intel IA64 libm modf.s and modff.s.  There are a number of libm
    routines which we don't make available, but for now, I'm just going to fix
    this particular pair.

crtw32\h\setjmp.h
crtw32\misc\ia64\longjmp.s, setjmp.s, setjmpex.s
libw32\include\setjmp.h
libw32\inc64\setjmp.h

    VS7#182574 Setjmp/longjmp on IA64 should not save/restore the FPSR any
    longer.  That maintains compatibility with the other platforms.  Also,
    rename unused fields in the IA64 _JUMP_BUFFER to Reserved[12].

crtw32\stdhpp64\fstream, streambuf, xiosbase
libw32\inc64\fstream, streambuf, xiosbase

    VS7#181246 Clean up some /Wp64 warnings in the old stdhpp64 headers for
    NT.  Introduce casts to silence the warnings.

-----------------------------------------------------------------

Mon 06-Nov-00   (PhilipLu)

srcrel\pd-b

    Get rid of references to MIPS and PPC files that have already been
    deleted from the source tree.

crtw32\misc\initnum.c, setlocal.c

    VS7#181380 Fix pageheap-detected use-after-free bugs in LC_MONETARY
    and LC_NUMERIC setlocale data when a thread exits and removes the last
    reference to data which is still pointed to by the global locale.  We
    can only free data with a zero refcount if that data is not also in
    the global locale.

crtw32\convert\atox.c

    Trivial checkin which avoids a warning in the _NTSUBSET_ build of the
    CRT.

-----------------------------------------------------------------

Fri 03-Nov-00   (PhilipLu)

crtw32\stdhpp\xlocnum
libw32\include\xlocnum

    Bandaid build breakage fix for VS7#170063, which is now appearing in
    the 32-bit /Wp64 build after a recent compiler change.  We're warning
    on a cast from unsigned long to void *, since that's not /Wp64 clean.
    Change it to 'ptr = (void*)(uintptr_t)ulval;' to silence the warning.
    This doesn't fix the bug, though - the code should be using unsigned
    __int64 on Win64.  Leave that for later.

-----------------------------------------------------------------

Wed 25-Oct-00   (PhilipLu)

crtw32\string\ia64\memcpy.s

    VS7#178057 Remove superfluous reference to exit(), which triggers undesired
    dependency on other CRT functions.

-----------------------------------------------------------------

Mon 23-Oct-00   (PhilipLu)

crtw32\string\ia64\strcmp.s

    VS7#176998 IA64 strcmp should compare unsigned chars, not signed, for
    compatibility with x86.  Also for x86 compatibility, canonicalize the
    result to be -1, 0, +1 instead of just <0, 0, >0.

-----------------------------------------------------------------

Sun 22-Oct-00   (PhilipLu)

srcrel\pd-b

[Deleted:]
crtw32\crt.mkf, infer.mkf, oldnames.mkf
crtw32\convert\convert.mkf
crtw32\dos\dos.mkf
crtw32\eh\eh.mkf
crtw32\exec\exec.mkf
crtw32\heap\heap.mkf
crtw32\iostream\iostream.mkf
crtw32\linkopts\linkopts.mkf
crtw32\lowio\lowio.mkf
crtw32\mbstring\mbstring.mkf
crtw32\misc\misc.mkf
crtw32\startup\startup.mkf
crtw32\stdio\stdio.mkf
crtw32\string\string.mkf
crtw32\time\time.mkf
fpw32\fp.mkf, infer.mkf
fpw32\conv\conv.mkf
fpw32\tran\tran.mkf
libw32\buildall.cmd, makefile

    Build system cleanup - get rid of old make files that haven't been used
    in years.

-----------------------------------------------------------------

Thu 19-Oct-00   (PhilipLu)

crtw32\lowio\ioinit.c

    VS7#176001 Avoid alignment fault when mixing printf and wprintf to stdout
    when stdout not available in a GUI or server app, by forcing __badioinfo
    to text mode.

-----------------------------------------------------------------

Tue 17-Oct-00   (PhilipLu)

crtw32\lowio\pipe.c

    VS7#173087 Remove potential deadlock on race condition in _alloc_osfhnd
    called from _pipe.  Do not call _alloc_osfhnd a second time without first
    unlocking the _ioinfo returned by the first call.  Also, don't initialize
    the returned handle values until we know the operation succeeded.

-----------------------------------------------------------------

Mon 16-Oct-00   (PhilipLu)

crtw32\string\lsources
crtw32\string\ia64\memcpy.s, memset.s, strcat.s, strcmp.s, strlen.s
srcrel\objects.mkf, pd-b
makefile.inc

    VS7#173518 Pick up optimized IA64 mem/str routines from Intel.  These
    asm routines get built in the pre-build and copied over to the post-build.

-----------------------------------------------------------------

Thu 12-Oct-00   (PhilipLu)

crtw32\misc\initmon.c, initnum.c

    VS7#169596 Don't call fix_grouping when initializing monetary locale info
    if any error is detected, since the mon_grouping member may not be valid.

-----------------------------------------------------------------

Thu 12-Oct-00   (GautamB)

crtw32\string\wcsxfrm.c

    VS7#164393, changed wcsxfrm.c to be similar to strxfrm.c which fixes the
    bug.

crtw32\misc\setlocale.c

    VS7#159775, changed setlocale_set_cat to return if this locale is same as
    current locale for the same category.

crtw32\convert\wtof.c

    VS7#166022, Fixed buffer overrun.

crtw32\h\useoldio.h

    VS7#172378, added comments for the _OLD_IOSTREAMS_ARE_DEPRECATED

-----------------------------------------------------------------

Wed 11-Oct-00   (PhilipLu)

crtw32\string\lsources
srcrel\objects.mkf, pd-b
makefile.inc

    VS7#101018 Fix IA64 build so memcpy.c and memset.c are built.  Since early
    August, the IA64 build has been importing memcpy and memset from kernel32
    instead of including them from the CRT sources.  For now, don't use the
    IA64 asm routines under crtw32\string\ia64.

crtw32\h\tchar.h
libw32\include\tchar.h
libw32\inc64\tchar.h

    VS7#166192 Add missing _MBCS mapping for _tcserror.

-----------------------------------------------------------------

Wed 27-Sep-00   (PhilipLu)

makefile, makefile.inc, makefile.sub

    Get rid of references to dead platforms MIPS and PPC.  Hide references
    to ALPHA and ALPHA64 platforms so they get stripped out of released
    versions of makefiles.

crtw32\convert\strtoq.c
crtw32\heap\align.c
crtw32\stdcpp64\xmbtowc.c

    Fix format of file header comments so revision history is properly
    cleansed by build process.

srcrel\makefile

    Need to cleanse several files from stdcpp/stdcpp64 instead of just copying
    them, so the revision history is removed.

-----------------------------------------------------------------

Tue 26-Sep-00   (GautamB)

crtw32\lowio\putch.c
libw32\msvcrt.rc, msvcprt.rc, msvcirt.rc, syscrt.rc, sysprt.rc, sysiprt.rc,
syscrt64.rc, sysprt64.src, sysirt64.rc, msvcrt40.rc
srcrel\_sample_.rc
crtw32\misc\winsig.c, winxfltr.c
crtw32\direct\seterrm,c
crtw32\string\memcpy.c, memmove.c, i386\memcpy.asm

    VS7#116063 Changed the copyright info.

-----------------------------------------------------------------

Tue 26-Sep-00   (PhilipLu)

crtw32\h\crtdbg.h
libw32\include\crtdbg.h
libw32\inc64\crtdbg.h

    VS7#166894 Fix _ASSERT* and _RPT* macros so they compile /W4-clean.
    Replaced the do{...}while(0) construct with an expression-form instead,
    much like the one used by assert.h.  This only works when _CrtDebugBreak()
    is a function call, so the old form is still used when compiling with
    pre-VC7 x86 compilers, where _CrtDebugBreak turns into inline asm.

libw32\msvcrt.src, syscrt.src, syscrt64.src

    VS7#45611 Export _control87 from the IA64 CRT DLL, since it's already
    available for IA64 in the static models.  Not sure it makes sense to have
    _control87 instead of _controlfp for IA64, but this makes it easier to port
    existing code over.

crtw32\startup\ia64\chkstk.s

    VS7#156660 Get rid of the version of _chkstk that uses B6 as the link reg.
    Only the B7 version should be available.

crtw32\eh\ia64\handlers.s
crtw32\startup\ia64\chkstk.s

    VS7#166899 Use Soft2.6 unwind info (version 3) instead of the old version 2
    info that was there.  Also, stop hardcoding the unwind info, and use the
    IAS directives that generate the table automatically.

-----------------------------------------------------------------

Mon 25-Sep-00   (PhilipLu)

makefile.inc
srcrel\object.mkf

    Add undname.obj to the list of object files no longer needed for the
    user CRT rebuild.

makefile

    Change the default value of VCTOOLS during the user CRT rebuild from
    \Program Files\Microsoft Visual Studio 7\Vc7 to
    \Program Files\Microsoft Visual Studio.NET\Vc7

-----------------------------------------------------------------

Mon 25-Sep-00   (PhilipLu)

makefile

    VS7#160801 Standalone version of the RTC support, runtmchk.lib, was not
    being built.  Drop the release DLL prebuild rtc.lib as runtmchk.lib, since
    that version is built /Z7 with no dependency on any CRT pdbs.

makefile, makefile.inc
libw32\msvcrt.src, syscrt.src, syscrt64.src
srcrel\objects.mkf

    Replace 184 object files in the crt\src\{platform}\*_lib dirs with two
    libs, eh.lib and rtc.lib, in each of the 6 CRT models.  The build was
    needlessly copying all the components in eh.lib and rtc.lib over from
    the prebuild to the postbuild, and then dropping them out for the
    user CRT rebuild.  Instead, just copy those two libs from the prebuild,
    for a net reduction of 172 files that get shipped.

makefile
fpw32\tran\lsources
srcrel\pd-b

    Get rid of all warnings from IA64 build. Tcmap build was using mbslen.obj
    twice instead of mbslen.obj and mbslen.obf.  Tran lsources specified
    ldexp.obj and tanh.obj twice each.  Pd-b specified tanhf.c twice.

-----------------------------------------------------------------

Thu 21-Sep-00   (PhilipLu)

crtw32\misc\seccinit.c

    VS7#165188 The /GS security cookie initialization was too non-random.
    We now combine a number of sources of randomness, especially the high
    frequency counter returned by QueryPerformanceCounter.

crtw32\stdhpp\list, xtree
libw32\include\list, xtree

    VS7#5312 The node pointers in std::list and std::_Tree no longer need to
    be typed void*, since the compiler properly delays instantiating template
    class members until they are used, allowing us to implicitly instantiate
    std::allocator on an incomplete type.  The pointers are now typed with the
    actual type, allowing full dumping of lists and trees in the debugger.

crtw32\h\stdarg.h
libw32\include\stdarg.h
libw32\inc64\stdarg.h

    VS7#103357 The IA64 definition of va_start for C++ needed changes
    coordinated with the backend and frontend.

-----------------------------------------------------------------

Mon 18-Sep-00   (PhilipLu)

crtw32\stdcpp\xlock.cpp
crtw32\stdhpp\istream, ostream, streambuf, yvals.h
libw32\include\istream, ostream, streambuf, yvals.h

    VS7#163945 The 09/15/00 Dinkumware checkin fails to maintain compatibility
    between old libs/headers and the new dll.  The problem is the introduction
    of multiple locks, especially the per-stream locks.  That caused everything
    in the ostream, istream, and streambuf heirarchies to get larger.  Changing
    the sizes of types exported from the C++ DLL can only happen at LKG toolset
    updates, since that is a rebuild-everything kind of change.

    Backed out the multiple locks.  Everything now uses a single lock, as it
    did before Friday's checkin.  The new code is still there, under
    #if _CRT_STL_NEW_DROP, ready to be reenabled at the next LKG update.

crtw32\tools\win32\relinc.if
libw32\include\cctype, cerrno, clocale, cmath, csetjmp, csignal, cstdarg,
    cstddef, cstdio, cstdlib, cstring, ctime, cwchar, cwctype

    Friday's drop did not turn on _GLOBAL_USING, as I stated below.  All the
    wrapping of C functions in the std namespace was being stripped out of
    the headers by relinc.  Stop stripping it out, but turn _GLOBAL_USING off
    for now, until a compiler bug I found, vs7#163702, gets fixed.

-----------------------------------------------------------------

Sun 17-Sep-00   (PhilipLu)

crtw32\misc\crtmbox.c

    VS7#123291 __crtMessageBoxA needs to set MB_SERVICE_NOTIFICATION on WinNT
    in non-interactive processes like services, so the message box is visible
    on the console (and the program doesn't hang).

crtw32\misc\seccinit.c, seccook.c

    VS7#162619 Initialization of the /GS buffer overrun global security must
    happen earlier.  Also, make sure the cookie is never zero, so a buffer
    overrun setting the local cookie and return address to the same value
    will always be detected.

-----------------------------------------------------------------

Fri 15-Sep-00   (GautamB)
crtw32\stdio\sscanf.c swscanf.c lsources snscanf.c snwscanf.c
crtw32\h\stdio.h wchar.h tchar.h
srcrel\pd-b
libw32\msvcrt.src, syscrt.src, sys64crt.src

    VS7#103628 Added new functions _snscanf and _snwscanf

-----------------------------------------------------------------

Fri 15-Sep-00   (PhilipLu)

makefile.inc
crtw32\stdcpp\cerr.cpp, cin.cpp, clog.cpp, cout.cpp, delaop2.cpp, delop2.cpp,
    fiopen.cpp, instances.cpp, iomanip.cpp, ios.cpp, iosptrs.cpp, iostream.cpp,
    locale.cpp, locale0.cpp, lsources, newaop.cpp, newaop2.cpp, newop2.cpp,
    nomemory.cpp, nothrow.cpp, raisehan.cpp, sources.nt, stdhndlr.cpp,
    stdthrow.cpp, string.cpp, strstrea.cpp, uncaught.cpp, wcerr.cpp, wcin.cpp,
    wclog.cpp, wcout.cpp, wctrans.c, wctype.c, wiostrea.cpp, wlocale.cpp,
    xcosh.c, xdnorm.c, xdscale.c, xdtest.c, xexp.c, xfcosh.c, xfdnorm.c,
    xfdscale.c, xfdtest.c, xferaise.c, xfexp.c, xfsinh.c, xfvalues.c, xlcosh.c,
    xldnorm.c, xldscale.c, xldtest.c, xlexp.c, xlocale.cpp, xlock.cpp,
    xlpoly.c, xlsinh.c, xlvalues.c, xmath.h, xmtx.c [NEW], xmtx.h [NEW],
    xmutex.cpp [NEW], xpoly.c, xsinh.c, xstod.c, xvalues.c
crtw32\stdhpp\algorithm, bitset, cassert, cctype, cerrno, cfloat, ciso646,
    climits, clocale, cmath, complex, csetjmp, csignal, cstdarg, cstddef,
    cstdio, cstdlib, cstring, ctime, cwchar, cwctype, deque, exception,
    fstream, functional, hash_map, hash_set, iomanip, ios, iosfwd, iostream,
    iso646.h, istream, iterator, limits, list, locale, map, memory, new,
    numeric, ostream, queue, set, sstream, stack, stdexcept, stl.h, streambuf,
    string, strstream, utility, valarray, vector, xcomplex, xhash, xiosbase,
    xlocale, xlocinfo, xlocinfo.h, xlocmes, xlocmon, xlocnum, xloctime,
    xmemory, xstddef, xstring, xtree, xutility, ymath.h, yvals.h
doc\copysrc.bat
libw32\include\algorithm, bitset, cassert, cctype, cerrno, cfloat, ciso646,
    climits, clocale, cmath, complex, csetjmp, csignal, cstdarg, cstddef,
    cstdio, cstdlib, cstring, ctime, cwchar, cwctype, deque, exception,
    fstream, functional, hash_map, hash_set, iomanip, ios, iosfwd, iostream,
    iso646.h, istream, iterator, limits, list, locale, map, memory, new,
    numeric, ostream, queue, set, sstream, stack, stdexcept, stl.h, streambuf,
    string, strstream, utility, valarray, vector, xcomplex, xhash, xiosbase,
    xlocale, xlocinfo, xlocinfo.h, xlocmes, xlocmon, xlocnum, xloctime,
    xmath.h, xmemory, xstddef, xstring, xtree, xutility, ymath.h, yvals.h
srcrel\pd-b

    Integrate the 000718 drop of Dinkumware C++ Library.  It implements a more
    graceful locking mechanism.  Instead of a single critical section for all
    the C++ Library use, there are now individual locks for each I/O stream,
    as well as separate locks for locale and global stream data structures.

    I'm also turning on _GLOBAL_USING, so the C headers are properly wrapped
    in the std namespace.  This can be done now that compiler bugs preventing
    this have been fixed.  This fixes VS7#5292.

-----------------------------------------------------------------

Thu 07-Sep-00   (PhilipLu)

crtw32\h\wchar.h
crtw32\stdhpp\wctype.h
crtw32\stdhpp64\wctype.h
libw32\include\wchar.h, wctype.h
libw32\inc64\wchar.h, wctype.h

    More for VS7#147943. Buildfix for IA64 syscrt build, and add _wctype and
    const changes in a few headers missed before.

-----------------------------------------------------------------

Thu 07-Sep-00   (PhilipLu)

crtw32\misc\getqloc.c

    VS7#81673 For geopolitical correctness, refer to "country/region", not
    "country", in a comment.  Also, move all the data tables to .rdata.

crtw32\startup\tlssup.c

    VS7#154062 _tls_start and _tls_end only need to be 1 byte long, not
    sizeof(void*).

crtw32\eh\rtti.cpp, stdexcpt.cpp, typinfo.cpp, typname.cpp
crtw32\time\strftime.c

    VS7#159463 Get rid of /lib:libcp{mt}[d] or /lib:msvcprt[d] directives from
    main CRT objects that include stdhpp headers.

crtw32\h\internal.h, mbstring.h, stdarg.h, stdio.h, wchar.h
libw32\include\mbstring.h, stdarg.h, stdio.h, wchar.h
libw32\inc64\mbstring.h, stdarg.h, stdio.h, wchar.h

    VS7#159777 Remove _M_CEE-specific definition of va_list.

crtw32\startup\crt0dat.c

    Remove obsolete reference to Mac version of CRT.

crtw32\stdio\ftell.c

    Reindent and reformat file for easier reading.

-----------------------------------------------------------------

Thu 07-Sep-00   (GautamB)
fpw32\tran\ia64\fmod.s, fmodf.s

    VS7#126122. Fixed the problem with matherr getting wrong arguments.

-----------------------------------------------------------------

Thu 07-Sep-00   (GautamB)
crtw32\dllstuff\crtlib.c
crtw32\h\mtdll.h, setlocal.h, wchar.h, ctype.h
crtw32\misc\initctype.c, ctype.c, setlocal.c
crtw32\convert\iswctype.c

    VS7#147943. pwctype was a locale dependent wctype table. Which should not
    ever be local dependent. removed all the wctype and pwctype from thread
    local data, and made wctype as first 256 unicode character type tabel

-----------------------------------------------------------------

Wed 06-Sep-00   (GautamB)
crtw32\startup\stdargv.c

    VS7#147806. there was problem with parsing commandline. e.g.
    "c:\test\"foo.exe would result in two arguments arg0 c:\test\
    and arg1 as foo.exe. fixed

-----------------------------------------------------------------

Tue 05-Sep-00   (GautamB)
fpw32\conv\cfout.c, cvt.c
crtw32\h\fltintrn.h
crtw32\convert\fcvt.c, gcvt.c

    VS7#156300. Fixed the problem with printf generating overflow or underflow
    floating point exception when used to print doubles.The problem was
    exposed when doubles like 4.94e-324 were used. This was due to the
    functions being passed double as agrument and instructions like fld would
    generate fp underflow exception.

-----------------------------------------------------------------

Tue 29-Aug-00   (PhilipLu)

crtw32\h\stdlib.h
crtw32\misc\seccook.c, secfail.c, seclocf.c
libw32\msvcrt.src, syscrt.src
libw32\include\stdlib.h
libw32\inc64\stdlib.h

    Change the /GS support implementation so it can be easily extended in the
    future.  The error handler is now called __security_error_handler, and it
    now takes a code for the type of failure (only _SECERR_BUFFER_OVERRUN is
    defined for now) and a void* pointer to an extra data packet (unused for
    now).  Also add a documented function for registering a new failure
    handler.

-----------------------------------------------------------------

Wed 30-Aug-00   (GautamB)
fpw32\tran\ia64\filter.c

    VS7#154760 fixed problem with inexact exception thrown by fcvt
    instruction.

-----------------------------------------------------------------

Tue 29-Aug-00   (PhilipLu)

crtw32\eh\rtti.cpp

    VS7#156255 - IA64 bug: dynamic_cast<> and typeid need to use the image base
    for the object's _RTTICompleteObjectLocator, not the return address of the
    call to __RTDynamicCast or __RTtypeid.

cleanbld.cmd

    Make the DELOBJ option clean the generated .def files, so setting
    BLD_TESTCRT=1 and running a DELOBJ build will work.

-----------------------------------------------------------------

Fri 25-Aug-00   (PhilipLu)

crtw32\stdhpp64\xtree
libw32\inc64\xtree

    VS7#152018 Propogate fix for VC6SP5 bugfix VS98#66191 to the VC6-based
    64-bit STL headers.  The 10-Jul-00 change to xtree removed too many locks,
    leaving std::_Tree::erase open to a race condition bug that was reported
    by the NT group.

crtw32\stdhpp64\fstream
libw32\inc64\fstream

    VS7#155221 Propogate fix for VC6SP6 bugfix VS98#61009.  The routine
    std::basic_filebuf::overflow will fail when outputting DBCS, because the
    size and count args to an fwrite call were reversed.

crtw32\h\dbgint.h

    VS7#153113 On IA64, the debug CRT heap was not returning 16 byte aligned
    memory, even though the Win32 Heap routines do, because the debug preheader
    struct _CrtMemBlockHeader wasn't set up for 64-bits.  The struct's size
    wasn't a multiple of 16 bytes, which is needed to maintain alignment.
    Swapping the order of two fields reduced the size from 56 to 48 bytes, and
    eliminated gaps between fields.  This was only done for IA64, to avoid
    breaking any x86 client code that looked in this struct (in an
    undocumented manner - this is done by Visual Studio).

makefile

    The linker no longer supports -debugtype:both, so switch to -debugtype:cv
    for IA64, the same as all the other platforms.

-----------------------------------------------------------------

Thu 24-Aug-00   (GautamB)
crtw32\eh\frame.cpp

    Fixed Problem with BuildCatchObject when called from __CxxExceptionFilter.

-----------------------------------------------------------------

Thu 24-Aug-00   (PhilipLu)

crtw32\eh\rtti.cpp

    VS7#154575 - dynamic_cast<> wasn't thread-safe on IA64.

-----------------------------------------------------------------

Wed 24-Aug-00   (KFrei)
crtw32\rtc\error.cpp
crtw32\h\rtcapi.h
libw32\include\rtcapi.h

    VS7#153812, 153067, 154281. Initialization was messed up,
    and _RTC_IsEnabled is dead (so I removed it from the headers)

-----------------------------------------------------------------

Wed 23-Aug-00   (GautamB)
fpw32\tran\ia64\pow.s, atan.s

    VS7#109539. The new drop from intel fixes the problem with pow()
    and atan()
fpw32\tran\ia64\libm_error.c
    VS7#153477  Removed calls to fputs from libm_error support.

-----------------------------------------------------------------

Tue 22-Aug-00   (GautamB)

crtw32\setlocal.c

    vs7#151944. clike stuff was not working as it should. FIxed it.

crtw32\dllstuff\crtlib.c
crtw32\startup\dllcrt0.c

    Fixed possible leak of ptd in _CRT_INIT functions.

crtw32\string\stricmp

    VS7#100359. strcmpi was just a wrapper function around stricmp. To
    increase performance, selfincluded the file so that strcmpi can use
    the same code again.

-----------------------------------------------------------------

Tue 22-Aug-00   (GautamB)

crtw32\h\awint.h
crtw32\misc\a_str.c, a_cmp.c, a_map.c, w_cmp.c, w_str.c, w_map.c
Addfile
crtw32\misc\convrtcp.c

    VS7#5671. All the crt implementation of Win String APIs did not
    work with any code page other than Ansi code page. Fixed this by
    converting to ansi codepage and then calling WinAPI.

-----------------------------------------------------------------

Fri 17-Aug-00   (GautamB)

crtw32\h\ctype.h
crtw32\misc\wcstol.c, wchtodig.c

    VS7#152362 Fixed MACRO __ascii_iswalpha and __ascii_iswdigit
    Addfile wchtodig.c which contains new api wchtodig()

-----------------------------------------------------------------

Thu 17-Aug-00   (PhilipLu)

crtw32\stdhpp\xhash
libw32\include\xhash

    VS7#151623 Relational comparisons for hash_maps were comparing only the
    keys, not the entire pair.  Same bug as 97336, this time for hash_map
    instead of map.

-----------------------------------------------------------------

Wed 16-Aug-00   (PhilipLu)

doc\copysrc.bat

    VS7#150831 (and 5437, reopened)  Copysrc.bat needs to copy the makefiles
    from the CRT build using xcopy /r, so that read-only files get replaced.
    The build lab wasn't picking up the latest versions of these files because
    of this.

    Also added a few recent additional files that were missing from the
    script, and expanded the usage comments.

-----------------------------------------------------------------

Wed 09-Aug-00   (PhilipLu)

crtw32\misc\seccook.c, secfail.c

    VS7#147203 /GS failed with the debug CRTs because __security_check_cookie
    wasn't preserving EAX.  Rewrite as __declspec(naked) inline asm so /Od
    builds won't trash EAX.  Also changed code so in case of a failure,
    control can never return to the user code (barring some sort of longjmp
    in a user-installed handler).  Instead, just ExitProcess if a reporting
    handler returns.

-----------------------------------------------------------------

Tue 08-Aug-00   (GautamB)

crtw32\string\lsources
srcrel\object.mkf, pd-b
makefile.inc

    Backed out the changes for new string routines.

-----------------------------------------------------------------

Tue 08-Aug-00   (GautamB)

crtw32\stdhpp\complex fstream iosfwd istream locale ostream sstream
              streambuf string xlocale xlocmes xlocmon xlocnum xloctime
              xmemory xstring yvals.h
libw32\include\limits, yvals.h

    VS7#146241 Changed the _NATIVE_CRTBLD_WCHAR_T to _CRTBLD_NATIVE_WCHAR_T
    for the all the headers except limits. And instead used
    _CRTBLD_NATIVE_WCHAR_T include unsigned short version of wchar_t while
    building CRT with wchar_t as native data type.

-----------------------------------------------------------------

Tue 08-Aug-00   (PhilipLu)

crtw32\misc\qsort.c

    VS7#123134  The fix for vs7#99674 would cause the compare function to be
    called with the same pointer passed for both arguments, which triggered
    asserts in some user code that wasn't expecting self-compares (even though
    that's fine by the standard).  In the interest of backwards-compatibility,
    tweak qsort() so it will never issue a self-compare.  Also uncovered a
    couple more minor performance wins, so the self-compare avoidance doesn't
    slow down qsort().

crtw32\h\winheap.h

    Make sure __active_heap isn't available for _WIN64 builds.

-----------------------------------------------------------------

Sun 06-Aug-00   (PhilipLu)

crtw32\dllstuff\crtexe.c
crtw32\startup\crt0.c, crt0dat.c

    VS7#117746 Replace references to COM+ or complus with "managed."

fpw32\tran\i386\filter_simd.c, xmmi_types.h

    Placeholder fix for new DAZ status bit in C-step Pentium 4 - don't handle
    WNI exceptions if DAZ bit set.  Last minute change from Intel for VC6PP,
    propogated to VC7.

crtw32\heap\calloc.c, expand.c, malloc.c, realloc.c

    VS7#131005 When using the system heap, don't round up allocations to
    paragraph-multiples, since that defeats pageheap overrun detection.  Keep
    doing the rounding for the V5 and V6 heaps (even when the block is too
    big for the small block heap), so we don't modify the behavior there and
    potentially break existing (buggy) apps.

crtw32\startup\thread.c, threadex.c

    VS7#118688 Detect and give errno EINVAL on NULL threadproc in _beginthread
    and _beginthreadex.

-----------------------------------------------------------------

Tue 01-Aug-00   (Gautamb)

crtw32\string\wcsstr.c
    VS7#145615 Fix for wcsstr("", "").

crtw32\convert\wcstol.c, wcstoq.c
    VS7#5679, Added multilingual support for wcstol().

-----------------------------------------------------------------

Tue 01-Aug-00   (Gautamb)

makefile, makefile.inc
srcrel\makefile, object.mkf, pd-b
crtw32\string\lsources, sources.nt

Addfile
crtw32\string\ia64\memcpy.s, memset.s, strcmp.s, strcpy.s, strcat.s, strlen.s

    Added intels drop for string routines

-----------------------------------------------------------------

Wed 26-Jul-00   (Gautamb)

crtw32\eh\frame.cpp

    VS7#124342, Fixed the multiple destruction of exception object.

-----------------------------------------------------------------

Thu 20-Jul-00   (Gautamb)

crtw32\h\conio.h, stdio.h, wchar.h, ctypes.h, tchar.h
crtw32\stdhpp\wctype.h

    Changed the typedef wchar_t wint_t to typedef unsigned short wint_t. This
    is useful when wchar_t is native type.

-----------------------------------------------------------------

Thu 20-Jul-00   (PhilipLu)

makefile

    Make sure the retail CRT DLLs are linked with /opt:icf to enable identical
    comdat folding.  Chops about 50K off msvcp70.dll after the duplication
    of unsigned short and wchar_t specializations checked in on 7/17.

crtw32\h\i386\dvec.h
libw32\include\dvec.h

    VS7#127201 Iu16vec8 ctor with 8 args was wrong in this file from Intel.

crtw32\misc\dbgheap.c

    VS7#129571 _CrtIsValidHeapPointer should only test that the debug heap
    block header can be read, not written.  Testing that it is writeable would
    require taking the heap lock to avoid multi-threaded corruption, and is
    unnecessary.

crtw32\stdhpp\yvals.h
libw32\include\yvals.h

    VS7#126171 Add #define of _CPPLIB_VER so we can do conditional compilation
    based on version of the C++ Standard Library.  Current version is 304.

-----------------------------------------------------------------

Mon 17-Jul-00   (GautamB)

crtw32\stdhpp\complex, fstream, ios, iosfwd, istream, limits, locale, ostream,
    sstream, streambuf, string, xlocale, xlocmes, xlocmon, xloctime, xmemory,
    xstring
crtw32\stdcpp\instances.cpp, locale.cpp, lsources, wcerr.cpp, wcin.cpp,
    wclog.cpp, wcout.cpp, wiostrea.cpp
libw32\include\iosfwd
crtw32\tools\win32\relinc.if
srcrel\pd-b
makefile, makefile.inc

Addfile:
crtw32\ushcerr.cpp, ushcin.cpp, ushclog.cpp, ushcout.cpp, ushiostr.cpp

    VS7#123149 On compiling with -Zc:wchar_t, we would have replace all the
    entry points in the msvcp70.dll with wchar_t version. Now the problem was
    no programs compiling without -Zc:wchar_t would not be able to use this
    dll. Fixed this problem by including both wchar_t version and unsigned
    short versions of all the entrypoints.

-----------------------------------------------------------------

Fri 14-Jul-00   (GautamB)

crtw32\h\useoldio.h, wchar.h
libw32\inc64\useoldio.h, wchar.h
libw32\include\useoldio.h, wchar.h

    VS7#5709 Adding defination for memcpy and memmove in the inline function
    gave warning on PREFIX tools. move the definations out of the functions to
    solve the problem.

    VS7#127305 _OLD_IOSTREAMS_ARE_DEPRECATED warning was also given on IA64
    which should not be there at this point.

-----------------------------------------------------------------

Mon 10-Jul-00   (PhilipLu)

crtw32\stdhpp64\xtree
libw32\inc64\xtree

    Propogate VC6SP4 fix for vs98#56775 (deadlock in xtree) to the old Win64
    headers.

crtw32\tools\win32\relinc64.cmd, relinc64.sed [NEW]

    64-bit release headers should not get _STATIC_CPPLIB change of Jul 6.  This
    is a partial fix - "do_relinc 64" is still not doing exactly the right
    thing for wchar.h.

-----------------------------------------------------------------

Mon 10-Jul-00   (PhilipLu)

mkbld.cmd [NEW]

    Script to call cleanbld.cmd, save output in "build.log", and grep output
    for errors or warnings when done.

srcrel\msvc40.if

    Silence cleansing-stage warnings about setjmp and _STATIC_CPPLIB.

libw32\msvcprt.src

    Fix VC IA64 CRT build broken by Dinkumware 000524 integration.

-----------------------------------------------------------------

Fri 07-Jul-00   (PhilipLu)

makefile.inc
crtw32\stdcpp\delaop2.cpp, delop2.cpp, fiopen.cpp, instances.cpp, locale.cpp,
    locale0.cpp, lsources, newaop.cpp, newaop2.cpp, sources.nt, xcosh.c,
    xdscale.c, xdtest.c, xexp.c, xfcosh.c, xfdscale.c, xfdtest.c,
    xferaise.c [NEW], xfexp.c, xfsinh.c, xfvalues.c, xlcosh.c, xldscale.c,
    xldtest.c, xlexp.c, xlsinh.c, xlvalues.c, xsinh.c, xvalues.c
crtw32\stdhpp\algorithm, bitset, cassert, cctype, cerrno, cfloat, ciso646,
    climits, clocale, cmath, csetjmp, csignal, cstdarg, cstddef, cstdio,
    cstdlib, cstring, ctime, cwchar, cwctype, deque, fstream, hash_map,
    hash_set, ios, iosfwd, iso646.h, istream, iterator, limits, list, locale,
    map, memory, new, ostream, queue, set, sstream, stl.h, streambuf, vector,
    xcomplex, xhash, xiosbase, xlocale, xlocinfo.h, xlocnum, xmemory, xstring,
    xtree, xutility, ymath.h, yvals.h
crtw32\tools\win32\relinc.if
doc\copysrc.bat
libw32\msvcprt.src
libw32\include\algorithm, bitset, cassert, cctype, cerrno, cfloat, ciso646,
    climits, clocale, cmath, csetjmp, csignal, cstdarg, cstddef, cstdio,
    cstdlib, cstring, ctime, cwchar, cwctype, deque, fstream, hash_map,
    hash_set, ios, iosfwd, iso646.h, istream, iterator, limits, list, locale,
    map, memory, new, ostream, queue, set, sstream, stl.h, streambuf, vector,
    xcomplex, xhash, xiosbase, xlocale, xlocinfo.h, xlocnum, xmemory, xstring,
    xtree, xutility, ymath.h, yvals.h
srcrel\pd-b

    Finish integrating 000524 drop of Dinkumware C++ Library.  This fixes VS7
    bugs 5294, 5311, 72100, 97336, 113256

    This code checks in a number of changes currently under #ifdef.  Code under
    _GLOBAL_USING and _HAS_MEMBER_TEMPLATES_REBIND is waiting for the next
    vcLKG compiler update before being enabled.  The code under
    _HAS_TEMPLATE_PARTIAL_REORDERING is waiting for a potential compiler fix
    in the VC7 timeframe.  If that doesn't happen, the code will have to stay
    disabled to avoid compiler errors (code is for optimization only, not
    correctness).  I've also got code under _RETAIN_OLD_CRT_CODE that is there
    so that msvcp70.dll doesn't lose any exports.  Once the next vcLKG update
    takes place, the _RETAIN_OLD_CRT_CODE sections can be removed.

    Finally, I've added _DEPRECATED (__declspec(deprecated)) to a number of
    locale-related functions from VC6 which are being retained for backwards
    compatibility but have been superceded by standard-conforming versions.

-----------------------------------------------------------------

Wed 06-July-00  (GautamB)

crtw32\h\wchar.h, internal.h
crtw32\stdhpp\yvals.h, string, xloctime, xlocnum, xlocmon, xlocmes, xlocale,
    xcomplex, wctype.h, complex, fstream, ios, iosfwd, istream, locale,
    use_ansi.h, typeinfo, string, streambuf, sstream, ostream, locale,
    istream, iosfwd

    Changed the headers so as to be able to statically link to STL even when
    compiling with /MD option.

-----------------------------------------------------------------

Wed 06-July-00  (GautamB)

fpw32\tran\ia64
    VS7#126252, VS7#126122, VS7#125822.
    The original libm_error_support used to set return values for domain
    errors which was not compatible with MS libm stuff (fixed). Also fixed the
    cases where matherr did not worked for float math functions.

-----------------------------------------------------------------

Fri 23-Jun-00   (PhilipLu)

crtw32\stdcpp\cerr.cpp, cin.cpp, clog.cpp, cout.cpp, delaop2.cpp, delop2.cpp,
    fiopen.cpp, instances.cpp, iomanip.cpp, ios.cpp, iosptrs.cpp, iostream.cpp,
    locale.cpp, locale0.cpp, newaop.cpp, newaop2.cpp, newop.cpp, newop2.cpp,
    nomemory.cpp, nothrow.cpp, raisehan.cpp, stdhndlr.cpp, stdthrow.cpp,
    string.cpp, strstrea.cpp, uncaught.cpp, wcerr.cpp, wcin.cpp, wclog.cpp,
    wcout.cpp, wctrans.c, wctype.c, wiostrea.cpp, wlocale.cpp, xcosh.c,
    xdnorm.c, xdscale.c, xdtest.c, xexp.c, xfcosh.c, xfdnorm.c, xfdscale.c,
    xfdtest.c, xfexp.c, xfsinh.c, xfvalues.c, xlcosh.c, xldnorm.c, xldscale.c,
    xldtest.c, xlexp.c, xlocale.cpp, xlpoly.c, xlsinh.c, xlvalues.c, xmath.h,
    xpoly.c, xsinh.c, xstod.c, xvalues.c
crtw32\stdhpp\algorithm, bitset, complex, deque, exception, fstream,
    functional, hash_map, hash_set, iomanip, ios, iosfwd, iostream, iso646.h,
    istream, iterator, limits, list, locale, map, memory, new, numeric,
    ostream, queue, set, sstream, stack, stdexcept, stl.h, streambuf, string,
    strstream, typeinfo, utility, valarray, vector, xcomplex, xhash, xiosbase,
    xlocale, xlocinfo, xlocinfo.h, xlocmes, xlocmon, xlocnum, xloctime,
    xmemory, xstddef, xstring, xtree, xutility, ymath.h, yvals.h
libw32\stdhpp\algorithm, bitset, complex, deque, exception, fstream,
    functional, hash_map, hash_set, iomanip, ios, iosfwd, iostream, iso646.h,
    istream, iterator, limits, list, locale, map, memory, new, numeric,
    ostream, queue, set, sstream, stack, stdexcept, stl.h, streambuf, string,
    strstream, typeinfo, utility, valarray, vector, xcomplex, xhash, xiosbase,
    xlocale, xlocinfo, xlocinfo.h, xlocmes, xlocmon, xlocnum, xloctime,
    xmath.h, xmemory, xstddef, xstring, xtree, xutility, ymath.h, yvals.h

    First step in integrating 000524 drop of Dinkumware C++ Library.
    Reformatting sources and renaming some variables to bring in line with
    the new drop, while not changing semantics at all (verified by doing
    binary compares of the compiled libraries).  Done so I can cleanly compare
    the current sources against the new drop.

-----------------------------------------------------------------

Wed 21-Jun-00   (PhilipLu)

crtw32\stdhpp\iso646.h
libw32\include\iso646.h

    VS7#23138 The names #defined in iso646.h are keywords in C++ under /Za
    only, so for /Ze, the defines should stay.

crtw32\stdhpp\exception, typeinfo
crtw32\stdhpp64\exception, typeinfo
libw32\include\exception, typeinfo
libw32\inc64\exception

    Remove obsolete references to _NTSDK in conditional definition of _CRTIMP.

-----------------------------------------------------------------

Wed 21-Jun-00   (GautamB)

Modified
crtw32\eh\frame.cpp
    VS7#107054 Fixed differece in order of destruction depending on inlining.

crtw32\heap\align.c
crtw32\misc\dbgheap.c
    VS7#116389 Changed _aligned_realloc to mimic _realloc.

fpw32\tran\fpexcept.c
    VS7#122777 Added _logb in the list of get_fname() so that matherr could be
    called for _logb.

crtw32\h\useoldio.h
    Added #pragma deprecated(_OLD_IOSTREAMS_ARE_DEPRECATED) to generate
    warning for _OLD_IOSTREAMS_ARE_DEPRECATED.

fpw32\tran\ia64\libm_error.c libm_support.h
    VS7#120653 Added _MS_ as new LIB_VARIABLE to support ms matherr handling.

-----------------------------------------------------------------

Tue 20-Jun-00   (PhilipLu)

crtw32\eh\hooks.cpp

    Improve stackwalk through terminate() or _inconsistency() by getting rid
    of unnecessary __try/__finally protection, since __try/__except already
    present.

crtw32\mbstring\mbctype.c

    Reenable 6/3/00 fix for VS7#115987.  Prevent reoccurence of VS7#116902 by
    getting rid of circular pprev/pnext linked list pointers in threadmbcinfo
    struct.  Fix _POSIX_ problem that could fail to initialize fSystemSet.
    Fix minor performance issue in _setmbcp that would unnecessarily update
    __ptmbcinfo when setting codepage _MB_CP_OEM/_MP_CP_ANSI/_MB_CP_LOCALE that
    was already set.

crtw32\startup\tidtable.c

    VS7#118174 _freeptd shouldn't free thread mbcinfo if its the same as
    global __ptmbcinfo.

crtw32\h\mbctype.h, mbdata.h, mbstring.h, mtdll.h, setlocal.h
srcrel\msvc40.if

    Remove threadmbcinfo.{pprev,pnext}, and rename THREADMBCINFO to
    _THREADMBCINFO, THREADLOCALEINFO to _THREADLOCALEINFO.

crtw32\stdcpp\newaop.cpp, newop.cpp
crtw32\stdhpp\new, xstddef
libw32\include\new, xstddef

    VS7#112746 Use _THROW1(exception) instead of _THROW0(/*exception*/) so
    /EHs compiles get proper throw info.  Also define _THROW1(x) as (...) to
    avoid warning C4290.

crtw32\h\trnsctrl.h
crtw32\eh\frame.cpp
crtw32\eh\ia64\trnsctrl.cpp

    VS7#111429 (From RLanser/TiborL) IA64 workaround for SQL crash while
    handling a throw.

-----------------------------------------------------------------

Tue 06-Jun-00   (KFrei)

Modified
crtw32\rtc\pdblkup.cpp

    VS7#110178 Modified Src/Line# lookup to use PDB7 format

-----------------------------------------------------------------

Wed 07-Jun-00   (GautamB)

Modified
crtw32\stdhpp64\deque
libw32\inc64\deque

    VS7#78357 Fixed Leaks in deque.

-----------------------------------------------------------------

Wed 07-Jun-00   (PhilipLu)

crtw32\mbstring\mbctype.c

    VS7#116902 Back out the fix of Jun 3 for vs7#115987.  That fix exposes a
    bug in the circular linked list insertion in multithread version of
    _setmbcp.  The fix for 115987 will be reinstated with a fix for the
    _setmbcp bug next week, after we split the trees for the PDC.

-----------------------------------------------------------------

Sun 04-Jun-00   (PhilipLu)

cleanbld.cmd, clns_bld.bat, makefile
srcrel\bldnt.cmd, bldwin95.bat, external.mkf, makefile

    Change the environment variable pointing to the VC++ tools installation
    from V6TOOLS to VCTOOLS.  The old environment variable V6TOOLS is still
    supported for now for internal builds, but not in the user CRT rebuild.

cleanbld.cmd

    Tweaking the CRTMKDEP and DELOBJ options of cleanbld.cmd to make the
    V6TOOLS->VCTOOLS switch go smoothly.  CRTMKDEP will regenerate the
    depend.def dependency files even if they already exist.  DELOBJ will now
    delete the %CRT_BUILDDIR%\srcrel directory tree (an oversite I should have
    done when the files produced from the %CRTSRC%\srcrel stuff was moved into
    the %CRT_BUILDDIR% directory).

makefile

    VS7#5678 The makefile should default VCTOOLS to the default installation
    point for VC7, not "\MSDEV", so the user CRT rebuild will work in a clean
    installation without user intervention.

-----------------------------------------------------------------

Sat 03-Jun-00   (PhilipLu)

crtw32\mbstring\mbctype.c

    VS7#115987 __updatetmbcinfo wasn't updating the per-thread mbcinfo(!).
    Every call to something like _ismbcspace would thus call __updatetmbcinfo,
    which takes a lock, so multithread apps using the MBCS APIs can exhibit
    a big performance loss when moving from NT4 (with a VC6 CRT) to Win2K
    (with a VC6.1 CRT).

crtw32\mbstring\ismbdgt.c, ismbspc.c

    VS7#116057 speed up multithread version of _ismbcspace and _ismbcdigit.

crtw32\stdhpp\xhash
libw32\include\xhash

    VS7#85385 hash_set/hash_map could crash because of bugs in growing the
    underlying hash structure.  Surgically applying fix from Dinkumware.

crtw32\stdcpp\ios.cpp, locale.cpp, locale0.cpp
crtw32\stdhpp\xlocale
libw32\include\xlocale

    VS7#116039 Lock instantiations of the form "_Lockit _Lock(_LOCK_LOCALE);"
    were useless because _LOCK_LOCALE was defined to nothing, turning the
    object definition into a prototype for a function _Lock, so no lock was
    actually taken.

-----------------------------------------------------------------

Fri 02-Jun-00   (GautamB)

Modified
crtw32\convert\strtoq.c, wcstoq.c

    VS7#115219  Fixed the special case for _I64_MIN. Previously underflow
    occurred at -_I64_MAX.

-----------------------------------------------------------------

Thu 01-Jun-00   (PhilipLu)

crtw32\h\crtdbg.h
crtw32\misc\dbgheap.c
libw32\include\crtdbg.h
libw32\inc64\crtdbg.h

    VS7#55049 Add new routine _CrtReportBlockType which can be called from a
    client block dumper (as called by _CrtDoForAllClientObjects) to retrieve
    the block type, allowing the subblock types of _CLIENT_BLOCK's to be
    queried.

makefile

    VS7#109278 Base the VC++ CRTs into the 0x5D?????? range so they don't
    conflict with the URT DLLs.

crtw32\startup\threadex.c

    VS7#114394 If _beginthreadex is called with a NULL thrdaddr parameter,
    call CreateThread with a pointer to a dummy location to store the thread
    ID.  CreateThread on Win9x cannot be called with a non-NULL final argument.

-----------------------------------------------------------------

Thu 01-Jun-00   (GautamB)

Modified
crtw32\h\setjmpex.h

    VS7#113737 fixed the macro redefination problem arising due to order of
    including the header setjmp.h and setjmpex.h. Now for the case on IA64,
    inclusion of setjmpex.h will define setjmp to _setjmpex on matter if
    setjmp.h is included or not.

-----------------------------------------------------------------

Tue 30-May-00   (GautamB)

Modified
crtw32\h\setjmpex.h

    VS7#113737 fixed the macro redefination problem arising due to order of
    including the header setjmp.h and setjmpex.h

Modified
crtw32\misc\ia64\setjmp.s
libw32\msvcrt.src, syscrt.src, syscrt64.src

    VS7#103476 Added entry point for _setjmp() along with setjmp() in setjmp.s
    to make it compatible to what function we have on x86. The problem was
    that we had setjmp() on x86 and _setjmp() on ia64.

crtw32\stdio\input.c

    vs7#5473 Fixed the problem with scanf while reading octal or hex integers
    when format specifier is %d. Which was not according to the standards

-----------------------------------------------------------------

Wed 31-May-00   (KFrei)

crtw32\rtc\error.cpp
crtw32\rtc\init.cpp
crtw32\rtc\initsect.cpp
crtw32\rtc\userapi.cpp

    VS7#95387,110897 initialization simplified - no more locking


-----------------------------------------------------------------

Tue 30-May-00   (PhilipLu)

crtw32\h\i386\fvec.h
libw32\include\fvec.h

    VS7#101068 add missing functions simd_avg (from Intel).

-----------------------------------------------------------------

Tue 30-May-00   (GautamB)

Modified
crtw32\eh\frame.cpp

    VS7#112630 Some more COM+ bug fixes for rethrows from different points.

-----------------------------------------------------------------

Wed 24-May-00   (GautamB)

Modified
Makefile.sub

    VS7#84575 The retail IA64 CRT is currently built with /Zx (use debuggable
    optimizations).  This is removed from makefile.sub.

Modified
crtw32\eh\frame.cpp

    VS7#5704 Handling STATUS_BREAKPOINT by catch() was not intended. Fixed
    this for cases when this exception could be caught by catch(...) of any
    other catch by use of __set_se_translator().

-----------------------------------------------------------------

Tue 23-May-00   (GautamB)

modified
crtw32\misc\setenv.c

    VS7#100392 Fixed setenv to return error for the case when
    SetEnvironmentVariable() returns error even if the variable is set in CRT
    environment.

Modified
crtw32\convert\atox.c, wtox.c, lsources, sources.nt
crtw32\h\tchar.h, wchar.h, stdlib.h
Add File
crtw32\convert\wtof.c

    VS7#5708 Added new function _wtof and macros for _wtof, _wtoi, _wtoi64

Modified
doc\copysrc.bat

    vs7# 110154Added the filenames of newly added file.

-----------------------------------------------------------------

Thu 18-May-00   (GautamB)

modified
crtw32\misc\w_cmp.c
crtw32\lowio\getwch.c, putwch.c

    VS7#100392 Fixed the return values when W API return with error not equal
    to ERROR_CALL_NOT_IMPLEMENTED.

-----------------------------------------------------------------

Wed 17-May-00   (PhilipLu)

crtw32\h\stdarg.h, varargs.h
libw32\include\stdarg.h, varargs.h
libw32\inc64\stdarg.h, varargs.h

    VS7#109619 - support soft2.5 changes to varargs handling of structs.
    Changes to _APALIGN macro required for IA64, using __alignof intrinsic.

-----------------------------------------------------------------

Wed 17-May-00   (GautamB)

modified
crtw32\misc\getqloc.c

    VS7#62160 For most LCIDs, the combination of the expanded English-language
    Language/Country pair is unique, but that's not true for 0414 and 0814 on
    NT5.  They both map to Norwegian/Norway.  Taking LCID 0814 as special
    case, we return Langauge name as Norwegian-Nynorsk.

-----------------------------------------------------------------

Wed 17-May-00   (GautamB)

modified
crtw32\misc\a_cmp.c, a_env.c, a_loc.c, a_map.c, a_str.c, aw_com.c, w_cmp.c,
w_env.c, w_loc.c, w_map.c, w_str.c
crtw32\lowio\getwch.c, cgetws.c, putwch.c

    VS7#100392. Used error = ERROR_CALL_NOT_IMPLEMENTED to check for
    availablity of Unicode version of APIs. This prevents quick fall back to
    A version of APIs.

-----------------------------------------------------------------

Wed 17-May-00   (PhilipLu)

crtw32\h\i386\emmintrin.h, mmintrin.h, xmmintrin.h
libw32\include\i386\emmintrin.h, mmintrin.h, xmmintrin.h

    For JasonSh - the __m128, __m64, __m128i, and __m128d are now declared in
    the headers, instead of automatically being defined by the C/C++ frontend.

-----------------------------------------------------------------

Mon 15-May-00   (PhilipLu)

makefile, makefile.inc
crtw32\eh\ehvccctr.cpp [NEW], ehvcccvb.cpp [NEW], lsources
crtw32\eh\dll\sources
crtw32\eh\dlllib\sources
crtw32\eh\i386\ehcrt.mak
crtw32\eh\ia64\ehcrt.mak
crtw32\eh\mt\sources
crtw32\eh\nt\sources
crtw32\eh\st\sources
libw32\makefile
srcrel\objects.mkf, pd-b

    VS7#103362 - Add new compiler support routines for EH-aware vector copy
    constructors.  When the compiler generates a default copy-ctor for an
    object which has a data member that's an array of constructable types, and
    exceptions are enabled, it needs to call a helper which unwinds the
    partially constructed array in case a copy-ctor of an array element throws.

-----------------------------------------------------------------

Mon 15-May-00   (GautamB)

modified
fpw32\tran\lsources
srcrel\pd-b
fpw32\tran\ia64\atan.s, atanf.s, powf.s, pow.s, hypot.s, hypotf.s

    Newer version of atan used uninitialised states and causing wrong
    calculations. Restored the older version of atan. Newer version of pow did
    not handle errors correctly. Restored the older version.

delfile
fpw32\tran\ia64\matherr.c, matherrf.c, math_err.c math_errf.c

    Deleted the intel math error handling files so as to use CRT math error
    handling functions.

-----------------------------------------------------------------

Thu 11-May-00   (PhilipLu)

makefile.sub

    IA64 build: if debug info is enabled, then add "-d debug" switch to ias
    cmdlines.

-----------------------------------------------------------------

Thu 11-May-00   (GautamB)

crtw32\startup\crt0msg.c

    VS7#104567 Modified _NMSG_WRITE so not to call _CrtDbgReport for _RT_BANNER.

-----------------------------------------------------------------

Thu 11-May-00   (PhilipLu)

crtw32\misc\qsort.c

    VS7#99674 Performance tuning on qsort().  Sorting the pathological case
    of 0,1,0,1,... sped up by 2500x(!).  Also made sure all comments about
    invariant conditions are up-to-date.

-----------------------------------------------------------------

Wed 10-May-00   (GautamB)

fpieee\tran\i386\87triga.asm

    VS7#99780. fixed atan2(-0.0, 1.0) to return -0.0.

-----------------------------------------------------------------

Wed 03-May-00   (Build Lab for PhilipLu)

crtw32\stdhpp\sstream, xiosbase, xlocnum, xstring
libw32\include\sstream, xiosbase, xlocnum, xstring

    Check in files from the 000202 Dinkumware drop that break backward
    compatibility with the C++ Library DLL entrypoint list.  Done as part of
    updating the devtools LKG toolset.

-----------------------------------------------------------------

Wed 03-May-00   (PhilipLu)

makefile.sub

    The DLL build should always be built /Z7, not just when doing a build on
    a multi-proc machine.  Don't want the build producing a different set of
    files depending on how many CPUs the build machine happens to have.

libw32\inc64\math.h, stdlib.h

    Backing out BryanT's last checkin of these headers.  The math.h checkin
    wipes out a change made last year, and the stdlib.h checkin wipes out some
    CRT DLL entrypoints which are obsolete, but should probably be preserved.
    The stdlib.h change is actually an overly-aggressive fix for the problem
    noted in VS7#22423.

srcrel\mkclnmkf.c

    Fix trivial typo reported by X-Box (== should have been =).

-----------------------------------------------------------------

Mon 01-May-00   (BryanT)

makefile
crtw32\crt32.nt, dirs
crtw32\eh\dirs
crtw32\helper\nt\sources
crtw32\linkopts\sources
crtw32\small\makefile.inc, sources
fpw32\fp32.nt
fpw32\tran\sources.nt
libw32\dirs
libw32\lib\sources.nt
libw32\lib\dll\makefile.inc
libw32\lib\dll40\sources
libw32\lib\exsup\makefile, sources
    NT Build cleanup.

crtw32\heap\malloc.c, sbheap.c
crtw32\startup\crt0dat.c
crtw32\string\strlwr.c, strupr.c
    POSIX changes

crtw32\startup\crt0.c
libw32\inc64\deque, list, math.h, stdlib.h, typeinfo, vector, xlocale, xlocnum
    WIN64 changes

-----------------------------------------------------------------

Mon 01-May-00   (GautamB)

Addfile
fpieee\tran\ia64\acos.s, acosf.s, asin.s, asinf.s, atan.s, atan2.s, atan2f.c,
    atan2f.s, atanf.c, atanf.s, ceil.s, ceilf.c, ceilf.s, ceill.s, cosh.s,
    coshf.s, exp.s, expf.c, expf.s, fabs.s, fabsf.s, floor.s, floorf.s, fmod.s,
    fmodf.c, fmodf.s, hypot.s, hypotf.s, isnan.s, isnanf.s, ldexp.s, ldexpf.s,
    libm_atan2_reg.s, libm_error.c, libm_reduce.s, libm_support.h, libm_tan.s,
    log.s, logb.s, logbf.s, logf.s, pow.s, powf.s, remainder.s, remainderf.s,
    scalb.s, scalbf.s, sincos.s, sincosf.s, sinh.s, sinhf.s, sqrt.s, sqrtf.s,
    tan.s, tanf.s

    Added new IA64 math routines files in assembly.

-----------------------------------------------------------------

Mon 01-May-00   (GautamB)

fpeee\tran\i386\log.asm, pow.asm, sqrt.asm, trig.asm, triga.asm

    VS7#86209 Speeding up the math routines by assuming (Guranteed for
    optimisation for speed) that the esp will be offset by 4 byte from
    alignment on 8 and then subtracting 4 extra bytes to align it to 8 for
    faster float excess.

-----------------------------------------------------------------

Mon 01-May-00   (BryanT)

crtw32\eh\mips
crtw32\eh\ppc
crtw32\helper\mips
crtw32\helper\ppc
crtw32\misc\mips
crtw32\misc\ppc
crtw32\small\mips
crtw32\startup\mips
crtw32\startup\ppc
crtw32\string\mips
crtw32\string\ppc
fpw32\tran\mips
fpw32\tran\ppc
libw32\lib\mips
libw32\lib\ppc
    Delete dead code for mips and ppc.  Don't delete dirs in case someone
    wants to resurrect code at a later date...

-----------------------------------------------------------------

Tue 25-Apr-00   (GautamB)

addfile
crtw32\lowio\getwch.c, cgetws.c
crtw32\stdio\cwscanf.c

modified
crtw32\h\wchar.h, tchar.h, conio.h (libw32\include and libw32\inc64)
libw32\msvcrt.src, syscrt.src, syscrt64.src
srcrel\pd-b
makefile.inc

    VS7#86398. Added Unicode version of console input functions.

-----------------------------------------------------------------

Tue 25-Apr-00   (PhilipLu)

fpw32\tran\i386\debug.c, debug.h, filter.c, filter_simd.c, xmmi2_fp_emul.c

    VS7#90752, 90760, 90764, 90769, 90775, 90779, 90782, 91746 - fixes for SIMD
    support in _fpieee_flt from Intel.

makefile, makefile.sub

    Add BLD_CRT_LTCG to makefiles, to enable building a CRT with Link Time
    CodeGen enabled.  Off by default, only there for internal use.

-----------------------------------------------------------------

Mon 24-Apr-00   (PhilipLu)

crtw32\misc\ia64\memcpys.s, memsets.s

    UTC_P7#1509 - memset and memcpy were truncting the size to 32-bits.
    Propogate RLanser's fix from the \\lang5\v7.ia64sdk3!crt SLM tree.

crtw32\stdcpp64\xdnorm.c, xfdnorm.c, xfvalues.c, xlvalues.c, xvalues.c

    Work around new warning C4554 for code like "1 << _OFF + 1".  Added parens
    to give "1 << (_OFF + 1)".  The old code was fine, just needed to shut up
    the warning.

crtw32\misc\sbheap.c

    Fix memset typo reported by X-Box.  Count and value args were reversed.
    Only in V5 SBH code, so not a big deal.

-----------------------------------------------------------------

Fri 21-Apr-00   (PhilipLu)

crtw32\eh\rtti.cpp
crtw32\h\rtti.h
    Disable new warning C4297 about a throw in an extern "C" function by
    adding explicit exception specification to compiler helpers for
    dynamic_cast and RTTI.

-----------------------------------------------------------------

Wed 19-Apr-00   (GautamB)

crtw32\eh\frame.cpp

    VS7#96508 96370 96341 93684 89697 Bug fixes.

-----------------------------------------------------------------

Tue 18-Apr-00   (GautamB)

crtw32\eh\frame.cpp

    Minor Bug fixes.

-----------------------------------------------------------------
Thu 14-Apr-00   (GautamB)

crtw32\stdcpp\xdnorm.c, xfdnorm.c, xvalues.c, xfvalues.c, xlvalues.c

    Fixed warning no. C4554 about the precedence of - and << operator.

-----------------------------------------------------------------
Thu 06-Apr-00   (GautamB)

crtw32\eh\frame.cpp
    Add more functions for C++ eh support in com+

-----------------------------------------------------------------

Wed 05-Apr-00   (PhilipLu)

makefile

    Buildfix for msvcp* C++ DLL.  Stdhndlr.obj wasn't being included in the
    DLL.

-----------------------------------------------------------------

Wed 05-Apr-00   (PhilipLu)

crtw32\eh\ia64\trnsctrl.cpp

    New version of macro GetLanguageSpecificData copied from ntia64.h, supplied
    by Steve Hanson.

-----------------------------------------------------------------

Wed 05-Apr-00   (PhilipLu)

crtw32\misc\i386\sehprolg.asm [NEW]
crtw32\misc\lsources
crtw32\misc\dll\sources
crtw32\misc\dlllib\sources
crtw32\misc\mt\sources
crtw32\misc\nt\sources
crtw32\misc\psx\sources
crtw32\misc\st\sources
srcrel\makefile, objects.mkf, pd-b
makefile, makefile.inc

    Add __SEH_prolog compiler helper for /O1 SEH support.

-----------------------------------------------------------------

Tue 28-Mar-00   (GautamB)

crtw32\eh\frame.cpp

    VS7#88408. HT_DISPCATCH is used to detect no object (catch by type) for
    native, but doesn't work for COM+ - check for a null in the catch object.

-----------------------------------------------------------------

Mon 27-Mar-00   (PhilipLu)

makefile, makefile.inc
libw32\msvcrt.src, syscrt.src
srcrel\makefile, mkclnmkf.c

    Enable 64-bit VC CRT build by setting SYS_BLDCRT=0 and LLP64=1 during
    build.  Will build CRT DLLs with the VC7.0 names instead of the old
    system names.

crtw32\stdcpp\strstrea.cpp
crtw32\stdhpp\istream, strstream, xiosbase
libw32\include\istream, strstream, xiosbase

    Bugfixes to enable building VC7.0 C++ Standard Library for Win64.

crtw32\stdhpp\fstream, sstream, streambuf
libw32\include\fstream, sstream, streambuf

    Temporary casts to enable building VC7.0 C++ Standard Library for Win64.
    Looks like some C++ Standard methods assume an int can be used for
    stream offsets, others use "streamsize" which we currently set to signed
    __int64 on Win64.  Until those can be reconciled, add casts to silence
    warnings.  Code currently can experience problems with file sizes > 2 GB.

-----------------------------------------------------------------

Mon 27-Mar-00   (PhilipLu)

crtw32\eh\ehvecctr.cpp, ehveccvb.cpp, ehvecdtr.cpp, frame.cpp, rtti.cpp,
    throw.cpp
crtw32\eh\ia64\handlers.s, trnsctrl.cpp
crtw32\misc\ia64\jmpuwind.s
makefile.sub, ntia64bld.cmd
langapi\include\ehdata.h, rttidata.h

    Remove CC_P7_SOFT25 references from IA64 build, and make it the default.

-----------------------------------------------------------------

Tue 21-Mar-00   (GautamB)

crtw32\misc\dbgheap.c
crtw32\heap\align.c

    ReOrganised _aligned_offset routines. Fixed vs7#87724. Made
    _aligned_malloc and _aligned_realloc as one liner that would return the
    value from _aligned_offset routines with offset = 0.

-----------------------------------------------------------------

Fri 17-Mar-00   (PhilipLu)

crtw32\time\strftime.c

    VS7#9374 std::time_put::put failed because time formatting for _Strftime
    wasn't initializing the final element ww_timefmt.  Fix from PJP (actually,
    it's been there since mid-'98 in a file I didn't understand should be
    merged into the main CRT tree).

-----------------------------------------------------------------

Thu 16-Mar-00   (GautamB)

crtw32\misc\dbgheap.c
crtw32\heap\align.c

    VS7#86467 Offset >= size doesn't make any sense. If offset is >=, then
    1) assert for debug version, 2) return EINVAL error.

-----------------------------------------------------------------

Thu 16-Mar-00   (GautamB)

crtw32\misc\dbgheap.c
crtw32\heap\align.c

    VS7#87084, 86467. Aligned routines were using 1 extra byte. (fixed). Also
    checked to -ve values of offset.

-----------------------------------------------------------------

Thu 16-Mar-00   (GautamB)

crtw32\convert\toupper.c, tolower.c

    VS7#9616 The performance enhancement changes were only visible for
    _tolower(). __tolower_mt() is also used at a lot of places. Modified code
    such that the performance changes are visible for both of them.

-----------------------------------------------------------------

Thu 16-Mar-00   (GautamB)

crtw32\lowio\putwch.c

    VS7#58257 _putwch was using GetConsoleCP() for conversion from Unicode to
    MBCS. Changed it to more suitable GetConsoleOutputCP().

-----------------------------------------------------------------

Wed 15-Mar-00   (GautamB)

crtw32\stdio\sprintf.c swprintf.c vsprint.c vswprint.c
crtw32\h\stdio.h wchar.h tchar.h
libw32\include\stdio.h wchar.h tchar.h
libw32\inc64\stdio.h wchar.h tchar.h

    Added a set of new functions which can be used to count the number of
    characters needed for printing formatted data using printf or any such
    function. (_scprintf(), _scwprintf(), _vscprintf(), _vscwprintf())

-----------------------------------------------------------------

Fri 10-Mar-00   (GautamB)

crtw32\convert\tolower.c, toupper.c
crtw32\string\stricmp.c, stnicmp.c, memicmp.c

    Moved the performance enhancement stuff from stricmp routines to
    conversion routines.

-----------------------------------------------------------------

Fri 10-Mar-00   (GautamB)

crtw32\stdio\output.c, sprintf.c vsprintf.c

    VS7#83962 - Modified sprintf and vsprintf so as to return length of the
    formatted even on passing NULL pointer for destination string

-----------------------------------------------------------------

Thu 09-Mar-00   (PhilipLu)

crtw32\h\i386\xmmintrin.h
libw32\include\xmmintrin.h

    VSPP#78 - xmmintrin.h should not declare _mm_malloc and _mm_free when
    using VC.  It should include malloc.h to get them, instead.

srcrel\pd-b

    Copy over the Intel- and AMD-supplied headers from libw32\include to the
    build tree.

-----------------------------------------------------------------

Wed 08-Mar-00   (PhilipLu)

crtw32\h\i386\emmintrin.h, fvec.h, ivec.h, mmintrin.h, xmmintrin.h
libw32\include\emmintrin.h, fvec.h, ivec.h, mmintrin.h, xmmintrin.h

    Latest versions of Intel-supplied FP intrinsics headers.

-----------------------------------------------------------------

Tue 07-Mar-00   (PhilipLu)

fpw32\tran\ia64\huge.s

    UTC_P7#1386 - _HUGE was 4-byte aligned, should be 8.

-----------------------------------------------------------------

Mon 06-Mar-00   (PhilipLu)

crtw32\h\internal.h
crtw32\startup\crt0.c, crt0dat.c, mlock.c

    VS7#83663 - Call __crtExitProcess instead of ExitProcess.  __crtExitProcess
    checks to see if this is a COM+ app by doing a GetModuleHandle on
    mscoree.dll, then looking for the CorExitProcess entrypoint, and calling
    that instead of ExitProcess if it's found.  This allows COM+ to clean up
    cleanly when using the CRT, so the FinalizerThread has a chance to do its
    exit processing.

-----------------------------------------------------------------

Mon 06-Mar-00   (PhilipLu)

Propogate fixes/changes made to the VC6 ProcessorPack CRT:

crtw32\eh\i386\trnsctrl.cpp

    Warning C4851 is gone for VC6 and VC7, now just C4731.

crtw32\h\fpieee.h
fpw32\tran\lsources
fpw32\tran\i386\debug.c [NEW], debug.h [NEW], filter.h, filter_simd.c,
    xmmi2_fp_emul.c [NEW], xmmi_fp_emul.c, xmmi_types.h
libw32\include\fpieee.h
libw32\inc64\fpieee.h
srcrel\pd-b

    New WNI support and KNI bugfixes for _fpieee_flt.

crtw32\h\i386\dvec.h [NEW], emmintrin.h [NEW], fvec.h [NEW], ivec.h [NEW],
    mm3dnow.h [NEW], mmintrin.h [NEW], xmmintrin.h [NEW]
libw32\include\dvec.h [NEW], emmintrin.h [NEW], fvec.h [NEW], ivec.h [NEW],
    mm3dnow.h [NEW], mmintrin.h [NEW], xmmintrin.h [NEW]
srcrel\makefile, pd-b

    New headers of vendor-supplied FP intrinsics.  These do not get used by
    the CRT build; they are simply there to be dropped to users.

crtw32\tools\win32\relinc.cmd

    Handle new vendor-supplied FP intrinsic headers for 32-bit includes.

-----------------------------------------------------------------

Fri 03-Mar-00   (PhilipLu)

crtw32\misc\ia64\chandler.c

    Fix for SEH support from Intel.

-----------------------------------------------------------------

Fri 03-Mar-00   (GautamB)

crtw32\h\trnsctrl.h
crtw32\eh\frame.cpp
libw32\msvcrt.src, syscrt.src, syscrt64.src

    Exported __DestructExceptionObject from dll and made slight changes to
    definition of __CxxExceptionFilter.

-----------------------------------------------------------------

Thu 02-Mar-00   (PhilipLu)

crtw32\eh\i386\trnsctrl.cpp

    VS7#83643 - _UnwindNestedFrames must preserve callee-save regs EBX, ESI,
    and EDI, since RtlUnwind will trash them all.

-----------------------------------------------------------------

Mon 28-Feb-00   (PhilipLu)

makefile, makefile.inc
crtw32\stdcpp\cerr.cpp, cin.cpp, clog.cpp, cout.cpp, delaop2.cpp, delop2.cpp,
    fiopen.cpp, instances.cpp, iomanip.cpp, ios.cpp, iosptrs.cpp, iostream.cpp,
    locale.cpp, locale0.cpp, lsources, newaop.cpp, newaop2.cpp, newop2.cpp,
    nomemory.cpp, nothrow.cpp [NEW], raisehan.cpp, sources.nt, stdhndlr.cpp,
    stdthrow.cpp, string.cpp, strstrea.cpp, uncaught.cpp, wcerr.cpp, wcin.cpp,
    wclog.cpp, wcout.cpp, wctrans.c, wctype.c, wiostrea.cpp, wlocale.cpp,
    xcosh.c, xdnorm.c, xdscale.c, xdtest.c, xexp.c, xfcosh.c, xfdnorm.c,
    xfdscale.c, xfdtest.c, xfexp.c, xfsinh.c, xfvalues.c, xlcosh.c, xldnorm.c,
    xldscale.c, xldtest.c, xlexp.c, xlocale.cpp, xlpoly.c, xlsinh.c,
    xlvalues.c, xmath.h, xpoly.c, xsinh.c, xstod.c, xvalues.c
crtw32\stdhpp\algorithm, bitset, cassert, cctype, cerrno, cfloat, ciso646,
    climits, clocale, cmath, complex, csetjmp, csignal, cstdarg, cstddef,
    cstdio, cstdlib, cstring, ctime, cwchar, cwctype, deque, exception,
    fstream, functional, hash_map, hash_set, iomanip, ios, iosfwd, iostream,
    iso646.h, istream, iterator, limits, list, locale, map, memory, new,
    numeric, ostream, queue, set, sstream, stack, stdexcept, streambuf, string,
    strstream, utility, valarray, vector, xcomplex, xhash, xiosbase, xlocale,
    xlocinfo, xlocinfo.h, xlocmes, xlocmon, xlocnum, xloctime, xmemory,
    xstddef, xstring, xtree, xutility, ymath.h, yvals.h
doc\copysrc.bat
libw32\msvcprt.src
libw32\include\algorithm, bitset, cassert, cctype, cerrno, cfloat, ciso646,
    climits, clocale, cmath, complex, csetjmp, csignal, cstdarg, cstddef,
    cstdio, cstdlib, cstring, ctime, cwchar, cwctype, deque, exception,
    fstream, functional, hash_map, hash_set, iomanip, ios, iosfwd, iostream,
    iso646.h, istream, iterator, limits, list, locale, map, memory, new,
    numeric, ostream, queue, set, sstream, stack, stdexcept, streambuf, string,
    strstream, utility, valarray, vector, xcomplex, xhash, xiosbase, xlocale,
    xlocinfo, xlocinfo.h, xlocmes, xlocmon, xlocnum, xloctime, xmath.h,
    xmemory, xstddef, xtree, xutility, ymath.h, yvals.h
srcrel\pd-b

    Integrate the 000202 drop of the C++ Library from Dinkumware.  Main change
    is to reformat all the headers and use longer identifiers.  Header xstring
    not yet integrated, because basic_string was rewritten too much to maintain
    compatibility between old libs and new MSVCP*.DLL.  Other new code which
    cannot be turned on yet under #if _CRT_NEW_STL_DROP.

    Removes code which was previously under _RETAIN_OLD_CRT_CODE, and puts
    old code which must be maintained until next LKG toolset update under
    _RETAIN_OLD_CRT_CODE.

makefile.sub

    Enable /Wp64 in the x86 build.

-----------------------------------------------------------------

Fri 25-Feb-00   (PhilipLu)

crtw32\h\crtdbg.h
libw32\include\crtdbg.h
libw32\inc64\crtdbg.h

    VS7#79719 - The _CrtDbgBreak macro should use the __debugbreak intrinsic
    when _MSC_VER >= 1300.

crtw32\h\setjmp.h
libw32\include\setjmp.h
libw32\inc64\setjmp.h

    VS7#81945 - setjmp.h is now allowed with /com+.

-----------------------------------------------------------------

Thu 24-Feb-00   (PhilipLu)

doc\copysrc.bat

    Add 'platdst <path>' option to copy platform-specific files to different
    directory from main files.  Wanted by the build lab for copying to
    devtools\common and devtools\%PLATFORM%.

-----------------------------------------------------------------

Thu 24-Feb-00   (GautamB)

crtw32\misc\setenv.c

    VS7#66530 _wputenv didn't use to work on Win9x as there was call in it
    SetEnvironmentVariable() which pointed to SetEnvironVariableW() and this
    API is not on Win9x so in effect environment didn't get updated. Fixed
    this.

-----------------------------------------------------------------

Thu 24-Feb-00   (GautamB)

crtw32\h\wchar.h

    VS7#80515 Checked all othe cases where order of including wchar.h with
    other header file does not make any difference. Only stdio.h had this
    problem. which is fixed.

-----------------------------------------------------------------

Tue 16-Feb-00   (GautamB)

crtw32\dllstuff\crtexe.c

    VS7#79603 Left out files for earlier checkin.

-----------------------------------------------------------------

Tue 15-Feb-00   (PhilipLu)

cleanbld.cmd
srcrel\clnsrcrel.bat, external.mkf, makefile

    The cleanbld.cmd build no longer creates files in %CRT_SRC%\srcrel.
    Instead, any srcrel-related files that get built are created in
    %CRT_BUILDDIR%\srcrel\%PLATFORM% instead.  That allows Win32 and Win64
    builds to more easily share the same enlistment.

-----------------------------------------------------------------

Tue 15-Feb-00   (GautamB)

crtw32\lowio\lowio.mkf, lsources, putwch.c (New)
crtw32\stdio\lsources, makdfile.c, output.c, cwprintf.c (New)
crtw32\h\wchar.h, conio.h, tchar.h
srcrel\pd-b
makefile
makefile.inc

    VS7#58257 Added unicode versions for cprintf, _putch and _cputs.
    (_cwprintf, _putwch, _cputws respectively).

-----------------------------------------------------------------

Tue 15-Feb-00   (GautamB)

crtw32\convert\convert.mkf, lsources, sources.nt, strtoq.c, wcstoq.c(New)
crtw32\h\wchar.h, stdlib.h, tchar.h

    VS7#5427 Added strtoi64, strtoui64, wcstoi64 and wcstoui64, which converts
    string to __int64.

-----------------------------------------------------------------

Tue 15-Feb-00   (GautamB)

crtw32\startup\crt0.c

    VS7#79603 Changed GetModuleHandle() in check_complus_app() to
    GetModuleHandleA(). GetModuleHandle() maps to GetModuleHandleW() for
    UNICODE main (wmain) which breaks the app on Win9X.

-----------------------------------------------------------------

Tue 15-Feb-00   (GautamB)

crtw32\eh\frame.cpp

    VS7#79598 Added a function CxxExceptionFilter for use in COM+ EH. This
    function can be used to turn "try{...}catch(foo a){...}" to
    "try{...} except(_CxxExceptionFilter(foo.typeinfo, _exception_info(), &a)){...}".

-----------------------------------------------------------------

Tue 15-Feb-00   (PhilipLu)

crtw32\eh\frame.cpp

    VS7#79460 std::uncaught_exception() support broke unwinding.  We were
    putting a __try/__finally around the call to _UnwindNestedFrames, which
    calls RtlUnwind, but _UnwindNestedFrames will only work if the top-most
    exception frame is from the exception dispatcher, not anything of ours.

-----------------------------------------------------------------

Mon 14-Feb-00   (PhilipLu)

crtw32\eh\i386\trnsctrl.cpp

    Warning C4851, disabled in Jan 31 checkin, is actually C4731 in the VC7
    backend.

-----------------------------------------------------------------

Fri 11-Feb-00   (GautamB)

crtw32\dllstuff\crtlib.c
crtw32\startup\dllcrt0.c, thread.c, threadex.c

    VS7#47322 There were two problem in the way threads were created. 1) if we
    called some locale dependent function, it would result in leak of ptd
    allocated during the call to the function. Second we would like to know if
    the thread is created ASAP, even if theread is created by some call to API
    so that later on when we could allocate memory for ptd failing in which
    results in termination of thread creation process. Earlier failing in
    alloting the memory for ptd, once the thread is created would terminate
    the whole process.

-----------------------------------------------------------------

Thu 03-Feb-00   (PhilipLu)

libw32\syscrt.rc, sysirt.rc, sysprt.rc
srcrel\external.mkf, objects.mkf
makefile

    Tweak the system CRT build.  Version number is 7.0, not 6.1.  The implibs
    are created as msvcrt.lib etc., not syscrt.lib.  And the C++ Library DLL is
    now named syspr70.dll, not msvcp??.dll, so we can still have a versioned
    C++ DLL name, but have it for the system only.

libw32\msvcrt.rc

    The internal filename in the version resource should be MSVCR70.DLL,
    not MSVCRT70.dll.

-----------------------------------------------------------------

Tue 01-Feb-00   (PhilipLu)

makefile.inc

    VS7#76534 Win64 static CRTs are not being built with delop2.cpp that was
    added for the Win64 CRT DLL build back in early Dec '99.

-----------------------------------------------------------------

Mon 31-Jan-00   (PhilipLu)

crtw32\eh\i386\trnsctrl.cpp

    Disable new warning C4851 about EBP being modified by inline-asm.

srcrel\external.mkf, makefile

    Checkin for the build lab doing 64-bit builds.  Clear _CL_ when we need
    to use the 32-bit compiler to build an .EXE, since the build lab uses
    _CL_ to point to the 64-bit compiler passes while self-building.

-----------------------------------------------------------------

Sun 30-Jan-00   (PhilipLu)

srcrel\makefile

    Clean up IA64 build so x86 components aren't copied over to crtbld\crt\src.

doc\copysrc.bat

    Copy proper files for IA64 build, and don't copy CRT rebuild components
    when doing a SYSCRT copy.  Also, copy files to the destination root, not
    dest-root\crt\src.

-----------------------------------------------------------------

Fri 28-Jan-00   (GautamB)

crtw32/string/stricmp.c, memicmp.c, strnicmp.c
crtw32/h/setlocale.h, mtdll.h
crtw32/misc/setlocale.c, nlsdata2.c

    VS7#9616   Enhanced the performance for locale based case insensitive
    comparision. What we do here is check if the current CTYPE locale has
    first 127 characters same as CLOCALE. If yes the we can convert the UPPER
    case character less then 127 to LOWER without calling time consuming
    tolower.

-----------------------------------------------------------------

Fri 28-Jan-00   (GautamB)

crtw32/stdio/popen.c

    VS7#16833  Changed the way popen used to work. Also made if threadsafe.
    What popen used to do was first duplicate the current stdio handle that
    we were supposed to trap, then close the local copy and set the one end
    of the pipe as that handle, then spawn the new process and then again
    setting up and new handle for stdio. Now we just pass the existing pipe
    to new process as the handle we wish to trap.

-----------------------------------------------------------------

Fri 28-Jan-00   (GautamB)

crtw32/align.c

    Performance enhancement of _aligned_realloc and _aligned_offset_realloc.

-----------------------------------------------------------------

Thu 27-Jan-00   (PhilipLu)

makefile

    VS7#5437 - The user rebuild scenario wasn't creating PDBs for the DLL
    CRTs.  Actually, it was creating them, in the root directory!

makefile

    VS7#14930 - Uses of the V6TOOLS macro need to be quote-protected in case
    V6TOOLS is a path with spaces in it.

libw32\msvcrt.src
srcrel\external.mkf, makefile
makefile, makefile.inc, makefile.sub

    VS7#16831 - The user rebuild scenario was pretty thoroughly broken.  This
    repairs it and cleans it up significantly, removing references to things
    like BLD_SYSCRT from the cleansed makefiles.

doc\copysrc.bat

    Major cleanup on this file, which can now be used to copy the result of
    a CRT build using cleanbld.cmd into a separate tree to create the image
    that would be installed as %VC-ROOT%\crt\src.

-----------------------------------------------------------------

Tue 25-Jan-00   (PhilipLu)

crtw32\h\sect_attribs.h
crtw32\misc\lsources, seccinit.c [NEW], seccook.c [NEW], secfail.c [NEW],
    seclocf.c [NEW]
doc\copysrc.bat
libw32\msvcrt.src, syscrt.src
srcrel\pd-b
makefile, makefile.inc

    Implement the CRT support for compiler switch /GS.  This is used to protect
    against overwriting a local buffer variable and wiping out a return
    address, which can allow a hacker to hijack a program's execution.

crtw32\startup\crt0msg.c

    Fix a buffer overwrite problem (!) I happened to notice while doing the
    /GS support.  _NMSG_WRITE could overflow a local buffer when creating the
    text to display in a message box.

-----------------------------------------------------------------

Mon 24-Jan-00   (GautamB)

crtw32\heap\align.c

    Modified the _aligned_realloc reoutines to save the content of memblock
    that is reallocated as much as possible.

-----------------------------------------------------------------

Mon 24-Jan-00   (PhilipLu)

crtw32\h\wchar.h
libw32\include\wchar.h
libw32\inc64\wchar.h

    VS7#74640 - _wexec* and _wspawn* prototypes in wchar.h should return
    intptr_t, not int, for compatibility with process.h and definitions.

-----------------------------------------------------------------

Thu 20-Jan-00   (PhilipLu)

crtw32\h\stdarg.h, varargs.h
libw32\include\stdarg.h, varargs.h
libw32\inc64\stdarg.h, varargs.h
srcrel\msvc40.if

    VS7#73359 - Remove __epcg__ references.  This was an old Intel define that
    they no longer need.

-----------------------------------------------------------------

Mon 17-Jan-00   (v-vadimp)

crtw32\eh\ia64\handlers.s
crtw32\eh\ia64\trnsctrl.cpp

    Fixed 2.5 IA64 software convention deficiencies in the previous checkins

-----------------------------------------------------------------

Fri 14-Jan-00   (v-vadimp)

crtw32\eh\frame.cpp
crtw32\eh\ia64\handlers.s
crtw32\eh\ia64\trnsctrl.cpp
crtw32\misc\ia64\jmpuwind.s

    NLG support for the debugger, some macro defs to make code backward
    compatible with 2.4, __NLG_Destination & __NLG_Dispatch got an extra "_"
    for IA64

-----------------------------------------------------------------

Wed 12-Jan-00   (gautamb)

crtw32\h\malloc.h

    vs7#71409 fixed the macro _mm_free which was supposed to have one parameter.

-----------------------------------------------------------------

Mon 10-Jan-00   (PhilipLu)

crtw32\exec\dospawn.c

    VS7#71206 - _spawn* called with _P_WAIT needs to sign-extend the exit
    code into an intptr_t for WIN64.

-----------------------------------------------------------------

Thu 06-Jan-00   (rlanser)

crtw32\eh\frame.cpp
crtw32\eh\throw.cpp
crtw32\eh\ia64\trnsctrl.cpp
crtw32\h\mtdll.h
crtw32\h\trnsctrl.h

    IA64:  SOFT25 Image Relative bug fixes.

-----------------------------------------------------------------

Wed 05-Jan-00   (Gautamb)

crtw32\h\dbgint.h, crtdbg.h
crtw32\misc\dbgheap.c
crtw32\heap\align.c
libw32\include\crtdbg.h
libw32\inc64\crtdbg.h

    Added debug support for aligned routines.

-----------------------------------------------------------------

Tue 04-Jan-00   (Gautamb)

libw32\tools\source\ifstrip\eval.c ifstrip.c
libw32\tools\source\striphdr\striphdr.c

    Added support for internal CRT build.

-----------------------------------------------------------------

Wed 29-Dec-99   (Gautamb)

crtw32\heap\align.c

    Fixed some serious bug in _aligned_offset_**() routines.

-----------------------------------------------------------------

Fri 17-Dec-99   (PhilipLu)

makefile

    VS7#65276 - Create alias records for data symbols and function descriptors,
    not just function entrypoints, e.g. create alias timezone -> _timezone,
    not just .timezone -> ._timezone.

-----------------------------------------------------------------

Thu 16-Dec-99   (GautamB)

modified
crtw32\h\limits.h
crtw32\stdio\fputwc.c, ungetwc.c

    VS7#5414 - Updated the value of MB_LEN_MAX to 5 and modified functions
    fputwc() and ungetwc() accordingly.

-----------------------------------------------------------------

Thu 16-Dec-99   (GautamB)

modified
all files

    VS7#30929 - Modified the Copyright years for Microsoft files to -2000.

-----------------------------------------------------------------

Thu 16-Dec-99   (GautamB)

modified
crtw32\malloc.h

    VS7#49169 - Modified HEAP_MAXREQ to 0xFFFFFFFFFFFFFFE0 for win64

-----------------------------------------------------------------

Thu 16-Dec-99   (PhilipLu)

makefile

    VS7#45623 - Build of tcmapdll.lib for IA64 was incorrect, so alias records
    for _t* names to the equivalent _mb* names weren't working.

    Also, added a new build flag.  Set BLD_TESTCRT=1, then the build will
    create CRT DLLs testcrt[d], testprt[d] and testirt[d] instead of the
    normal names.  This allows building CRTs which can be safely tested without
    interfering with system protected files or the existing CRTs.

-----------------------------------------------------------------

Fri 10-Dec-99   (GautamB)

modified

makefile.inc
libw32\msvcrt.src, syscrt.src, syscrt64.src
srcrel\pd-b
crtw32\h\malloc.h
crtw32\heap\heap.mkf, lsources
crtw32\misc\a_cmp.c, a_loc.c, a_map.c, a_str.c, w_cmp.c, w_loc.c, w_map.c,
    w_str.c
crtw32\string\strlwr.c, strupr.c, wcslwr.c, wcsupr.c, wcsxfrm.c
crtw32\time\wcsftime.c
crtw32\lowio\getch.c

Add file

crtw32\heap\resetstk.c

    VS7#62239 Secured the use of _alloca in case of stackoverflow. Also
    introduced a new function (_resetstkoflw() )which recovers for
    stackoverflow.

-----------------------------------------------------------------

Fri 10-Dec-99   (GautamB)

modified

makefile.inc
libw32\msvcrt.src, syscrt.src, syscrt64.src
srcrel\pd-b
crtw32\h\malloc.h
crtw32\heap\heap.mkf, lsources
crtw32\heap\mt\lsources
crtw32\heap\dll\lsources
libw32\include\malloc.h
libw32\inc64\malloc.h

addfile

crtw32\heap\align.c

    Added _aligned_malloc, _aligned_realloc, _aligned_offset_malloc,
    _aligned_offset_realloc and _aligned_free functions.

-----------------------------------------------------------------

Fri 10-Dec-99   (GautamB)

modified

crtw32\h\mtdll.h
crtw32\startup\mlock.h
langapi\undname\undname.cxx

    VS7#5674 Added a new lock for critical section in unDName()

-----------------------------------------------------------------

Fri 10-Dec-99   (GautamB)

modified

crtw32\h\ctime.h
crtw32\time\dtoxtime.c

    VS7#21083 Modified localtotime for taking into account leap years upto
              2999. Also changed _MAX_YEAR for Win64 to 1099

-----------------------------------------------------------------

Fri 10-Dec-99   (GautamB)

modified

crtw32\startup\i386\crtstk.asm

    VS7#27118 Converted _chkstk and _alloca_probe to procedure

-----------------------------------------------------------------

Fri 10-Dec-99   (GautamB)

modified

crtw32\h\eh.h, mtdll.h
crtw32\eh\frame.cpp
crtw32\stdcpp\UNCAUGHT.cpp

    VS#5340 Added a new function (our version of uncaught_exception) which is
            then used by uncaught_exception for doing it's work. Also
            introduced new flag in struct tiddata for keeping a look on
            exception.

-----------------------------------------------------------------

Fri 10-Dec-99   (GautamB)

modified

crtw32\h\wchar.h

    VS#5709 Modified wmemcpy and wmemmove for faster perfomance.

-----------------------------------------------------------------


Sat 08-Dec-99   (rlanser)

crtw32\stdhpp64\new
libw32\inc64\new

    Change "operator delete(void *, const std::nothrow_t&)" to _WIN64.

-----------------------------------------------------------------

Sat 04-Dec-99   (rlanser)

crtw32\stdcpp64\delop2.cpp, delop2_s.cpp, lsources, sources.nt
crtw32\stdhpp64\new
libw32\inc64\new
srcrel\pd-b

    Add "operator delete(void *, const std::nothrow_t&)" to the
    hacked NT headers etal (stdhpp64, stdcpp64, inc64).

-----------------------------------------------------------------

Fri 03-Dec-99   (PhilipLu)

crtw32\h\math.h
libw32\include\math.h
libw32\inc64\math.h

    VS7#65291 - the headers do '#if _M_MRX000' in one place, and
    '#if defined(_M_MRX000)' in another.  That interferes with a new warning
    the frontend wants to make available.  Change to use defined(_M_MRX000)
    everywhere.

srcrel\makefile

    We should not be copying trnsctrl.h into the crt\src user rebuild dir,
    since we don't ship source for the EH support and this header isn't used
    for the user rebuild scenario.  Looks like this header was being shipped
    accidentally.  Change the build cleansing procedure to stop copying this
    file over for shipping.

crtw32\h\crtdbg.h, direct.h, heap.h, malloc.h, mbstring.h, memory.h, mtdll.h,
    new.h, nlsint.h, process.h, search.h, stdarg.h, stddef.h, stdexcpt.h,
    stdio.h, stdlib.h, string.h, varargs.h
crtw32\heap\sbheap.c
crtw32\lowio\write.c
srcrel\msvc40.if

    The build cleansing procedure was issuing a bunch of warnings while running
    the ifstrip tool.  Get rid of them all.

-----------------------------------------------------------------

Thu 02-Dec-99   (PhilipLu)

libw32\msvcprt.src

    VS7#66372 - The _RETAIN_OLD_CRT_CODE fix of Nov 14 was incomplete.  All of
    the exception class methods and vtables which are no longer dllimport must
    be added as private exports in the .def file for msvcp*.dll so they will
    not appear in the msvcprt*.lib import lib.

-----------------------------------------------------------------

Wed 01-Dec-99   (GautamB)

modified

crtw32\h\string.h
crtw32\misc\lsources, strerror.c, _strerr.c

add files

crtw32\misc\wcserror.c, _wcserr.c

    VS#5706 Added wide char version for strerror() and _strerror()

-----------------------------------------------------------------

Wed 01-Dec-99   (rlanser)

crtw32\misc\ia64\chandler.c

    [v-willc] Support for reordering blocks in a try scope.

-----------------------------------------------------------------

Wed 01-Dec-99   (PhilipLu)

makefile.sub

    Enable CC_P7_SOFT25 when building for IA64.

-----------------------------------------------------------------

Wed 01-Dec-99   (GautamB)

crtw32\tchar.h
libw32\include\tchar.h
libw32\inc64\tchar.h

    Add alias for _tpgmptr

-----------------------------------------------------------------

Tue 30-Nov-99   (PhilipLu)

crtw32\eh\i386\trnsctrl.cpp
crtw32\h\winheap.h
crtw32\heap\sbheap.c
crtw32\rtc\error.cpp, init.cpp, pdblkup.cpp
crtw32\startup\tlssup.c
crtw32\stdhpp\xlocale
crtw32\stdio\output.c
fpw32\tran\i386\filter.c, filter_simd.c
libw32\include\xlocale

    Add casts, minor fixes, and #pragma warnings to compile cleanly on x86
    with /Wp64.

crtw32\h\crtdbg.h
libw32\include\crtdbg.h
libw32\inc64\crtdbg.h

    Forward declare _CrtMemBlockHeader to work around vs7#63059.

cleanbld.cmd, makefile, makefile.sub

    Default to building release builds with debug info, and multiprocessor
    compile for DLL.  Get rid of makefile flags BLD_REL_DBINFO and _VCBUILD.
    Add BLD_REL_NO_DBINFO to allow building release builds without debug info.

-----------------------------------------------------------------

Thu 18-Nov-99   (PhilipLu)

makefile, makefile.inc
crtw32\eh\lsources
crtw32\eh\dll\sources
crtw32\eh\i386\ehprolg2.c [NEW]
crtw32\eh\mt\sources
crtw32\eh\st\sources
crtw32\libw32\msvcrt.src, syscrt.src, syscrt64.src
srcrel\makefile, objects.mkf, pd-b

    VS7#57098 - Add new compiler helper __EH_prolog2 as a static link component
    whose source does not get shipped.  Needed to handle stack frame creation
    in a function compiled /Os with both a C++ EH frame and a stack that must
    be aligned thanks to __declspec(align()) locals.  Also changing the older
    compiler helper __EH_prolog so it is always statically linked, instead of
    being used from the CRT DLL.

-----------------------------------------------------------------

Wed 17-Nov-99   (GautamB)

crtw32\dostypes.h
    Vs7#37766 Deleted this file as this file was not used anymore.

-----------------------------------------------------------------

Tue 16-Nov-99   (PhilipLu)

makefile, makefile.inc
crtw32\dllstuff\crtexe.c, lsources
crtw32\dllstuff\dlllib\sources
crtw32\startup\crt0.c, lsources
crtw32\startup\mt\sources
crtw32\startup\st\sources
doc\copysrc.bat
libw32\makefile
srcrel\msvc40.if, pd-b

[delfiled:]
crtw32\dllstuff\corexe.c, corexew.c, wcorexe.c, wcorexew.c
crtw32\startup\cor0.c, wcor0.c, wincor0.c, wwincor0.c

    VS7#61850 (again) - The fix on 13-Nov won't work, because the linker must
    choose an entrypoint before starting library searching, but may not know
    if an app is COM+ until after it drags in a library object with metadata.
    So back out the previous fix and implement a new one.  On entry, search the
    image header of the process EXE to see if the COM+ Descriptor entry in the
    Image Directory is empty, and handle as a COM+ app if it not.

-----------------------------------------------------------------

Sun 14-Nov-99   (PhilipLu)

makefile
crtw32\stdcpp\instances.cpp
crtw32\stdhpp\exception, new, stdexcept, xlocinfo, xstring, yvals.h
crtw32\tools\win32\relinc.if
libw32\include\xlocinfo, yvals.h

    Buildfix - msvcp70[d].dll must maintain all existing exports except at
    major updates of the vcLKG toolset.  Restore all the old exports which were
    lost at the STL integration of 9-Nov-99.  The functions corresponding to
    these exports are reintroduced into the headers in stdhpp by placing them
    under #if _RETAIN_OLD_CRT_CODE, which is only defined when compiling the
    STL DLL.  Also, this #if is cleansed from the headers by relinc.cmd, so
    the released headers are unchanged and new code will not see any definition
    of the old exports.  Once we update vcLKG and VS is built with the new
    headers, the old code under #if can be removed totally.

    As part of this, removing private copy-ctor and assign-ops declarations
    (without definitions) for _Locinfo and _Lockit, so the compiler generated
    defaults again appear as exports.  I originally added these definitions to
    work around an integration problem which doesn't exist any longer.

crtw32\tools\win32\relinc.cmd, relinc64.cmd

    Trivial cleanup - detabify and line up file.

-----------------------------------------------------------------

Sat 13-Nov-99   (PhilipLu)

makefile, makefile.inc
crtw32\dllstuff\corexe.c [NEW], corexew.c [NEW], crtexe.c, crtexew.c, lsources,
    wcorexe.c [NEW], wcorexew.c [NEW], wcrtexe.c, wcrtexew.c
crtw32\dllstuff\dlllib\sources
crtw32\startup\ cor0.c [NEW], crt0.c, lsources, wcor0.c [NEW], wcrt0.c,
    wincor0.c [NEW], wincrt0.c, wwincor0.c [NEW], wwincrt0.c
crtw32\startup\mt\sources
crtw32\startup\st\sources
doc\copysrc.bat
libw32\makefile
srcrel\pd-b

    VS7#61850 - Apps using COM+ IJW, with a native CRT startup object linked to
    a COM+ MSIL app, have to use a special COM+-aware version of the CRT
    startup code.  For now, all this code does differently is return back to
    COM+ instead of calling exit().  Introduces 4 new entrypoints which the
    linker knows about and uses when linking a COM+ app, with the basic name
    being mainCorCRTStartup.

crtw32\h\internal.h, io.h, time.h, wchar.h
libw32\inc64\io.h, time.h, wchar.h
libw32\include\io.h, time.h, wchar.h
srcrel\msvc40.if

    Wrap the definition of _time64_t under #ifndef _TIME64_T_DEFINED instead
    of putting in under _TIME_T_DEFINED, so it's easier to mix and match VC6
    and VC7 CRT headers.

-----------------------------------------------------------------

Fri 12-Nov-99   (GautamB)

crtw32\lowio\fstat64.c
crtw32\dos\stat64.c

    VS7#57599 - Modified fstat64 and stat64 to take DST into account.

-----------------------------------------------------------------

Fri 12-Nov-99   (PhilipLu)

crtw32\misc\getqloc.c

    Setlocale should first try to use the language string given before using
    the substituted abbreviation from __rg_language[].  That's because there
    are language names which map to multiple abbreviations.  On NT5, language
    'Chinese' can be abbreviation CHS or CHT.  Because of this, it's possible
    to have setlocale(LC_ALL,setlocale(LC_ALL,NULL)) fail, even though setlocale
    should always return a settings dump that is valid input to reset the
    locale.  If the substitution table is used first, then Chinese_Taiwan.950
    will be searched for as CHS_Taiwan.950, but the LCID actually corresponds
    to CHT_Taiwan.950.  This happened because NT5 changed the language name
    for Taiwan from 'Chinese(Taiwan)' to 'Chinese' (vs7#61130, ntbug#426382).

makefile, makefile.inc
crtw32\stdcpp\lsources, sources.nt
doc\copysrc.bat
doc\pjp\makefile, makefile.inc, pd-b
srcrel\pd-b

[delfiled:]
crtw32\stdcpp\delaop.cpp, delaop_s.cpp, delop.cpp, delop_s.cpp

    VS7#5435 - C++ Library should not define its own one-arg versions of
    operator delete/delete[] (the nothrow_t versions are OK).  This was a
    problem because the C++ Library version of delete called free, but in a
    debug build, it should call _free_dbg in case we're not deleting a
    _NORMAL_BLOCK.  Rather than change the definitions, it makes more sense
    just to get rid of them.

-----------------------------------------------------------------

Tue 09-Nov-99   (GautamB)

\crtw32\lowio\write.c

    VS7#52023 - Fixed the bug by replacing lseek_lk by lseeki64_lk.

-----------------------------------------------------------------

Tue 09-Nov-99   (PhilipLu)

makefile, makefile.inc
\crtw32\eh\stdexcpt.cpp
\crtw32\stdcpp\cerr.cpp, cin.cpp, clog.cpp, cout.cpp, delaop.cpp,
    delaop2.cpp [NEW], delaop2_s.cpp [NEW], delop.cpp, delop2.cpp [NEW],
    delop2_s.cpp [NEW], fiopen.cpp, instances.cpp [NEW], iomanip.cpp, ios.cpp,
    iosptrs.cpp, iostream.cpp, locale.cpp, locale0.cpp, lsources, newaop.cpp,
    newaop2.cpp, newop2.cpp, nomemory.cpp, raisehan.cpp, sources.nt,
    stdhndlr.cpp, stdthrow.cpp, string.cpp, strstrea.cpp, uncaught.cpp,
    wcerr.cpp, wcin.cpp, wclog.cpp, wcout.cpp, wctrans.c, wctype.c,
    wiostrea.cpp, wlocale.cpp, xcosh.c, xdnorm.c, xdscale.c, xdtest.c, xexp.c,
    xfcosh.c, xfdnorm.c, xfdscale.c, xfdtest.c, xfexp.c, xfsinh.c, xfvalues.c,
    xlcosh.c, xldnorm.c, xldscale.c, xldtest.c, xlexp.c, xlocale.cpp, xlpoly.c,
    xlsinh.c, xlvalues.c, xmath.h, xpoly.c, xsinh.c, xstod.c, xvalues.c
\crtw32\stdhpp\algorithm, bitset, cassert, cctype, cerrno, cfloat, ciso646,
    climits, clocale, cmath, complex, csetjmp, csignal, cstdarg, cstddef,
    cstdio, cstdlib, cstring, ctime, cwchar, cwctype, deque, exception,
    fstream, functional, hash_map, hash_set, iomanip, ios, iosfwd, iostream,
    iso646.h, istream, iterator, limits, list, locale, map, memory, new,
    numeric, ostream, queue, set, sstream, stack, stdexcept, streambuf, string,
    strstream, utility, valarray, vector, xcomplex, xhash, xiosbase, xlocale,
    xlocinfo, xlocinfo.h, xlocmes, xlocmon, xlocnum, xloctime, xmemory,
    xstddef, xstring, xtree, xutility, ymath.h, yvals.h
\doc\copysrc.bat
\doc\pjp\makefile, makefile.inc, pd-b
\libw32\include\algorithm, bitset, cassert, cctype, cerrno, cfloat, ciso646,
    climits, clocale, cmath, complex, csetjmp, csignal, cstdarg, cstddef,
    cstdio, cstdlib, cstring, ctime, cwchar, cwctype, deque, exception,
    fstream, functional, hash_map, hash_set, iomanip, ios, iosfwd, iostream,
    iso646.h, istream, iterator, limits, list, locale, map, memory, new,
    numeric, ostream, queue, set, sstream, stack, stdexcept, streambuf, string,
    strstream, utility, valarray, vector, xcomplex, xhash, xiosbase, xlocale,
    xlocinfo, xlocinfo.h, xlocmes, xlocmon, xlocnum, xloctime, xmath.h,
    xmemory, xstddef, xstring, xtree, xutility, ymath.h, yvals.h
\srcrel\pd-b

[delfiled:]
crtw32\stdcpp\dlldef.cpp, limits.cpp

    Integrate the 990718 drop of the C++ Library from Dinkumware.

-----------------------------------------------------------------

Tue 09-Nov-99   (GautamB)

crtw32\h\cmsgs.h

    VS7#27275 - Fixed the message abort pops up.

-----------------------------------------------------------------

Tue 09-Nov-99   (PhilipLu)

crtw32\h\crtdbg.h
libw32\msvcrt.src, syscrt.src, syscrt64.src
libw32\include\crtdbg.h
libw32\inc64\crtdbg.h

    VS7#16060 - Don't mark the debug operator new/new[] _CRTIMP in crtdbg.h,
    and add them to the .def files so they still get exported.  Makes it easier
    for users to intercept these (something VSEE does).

-----------------------------------------------------------------

Mon 08-Nov-99   (PhilipLu)

crtw32\h\ctype.h, stdio.h, tchar.h, wchar.h
crtw32\stdcpp\wctrans.c
crtw32\stdhpp\wctype.h
crtw32\stdhpp64\wctype.h
libw32\include\ctype.h, stdio.h, tchar.h, wchar.h, wctype.h
libw32\inc64\ctype.h, stdio.h, tchar.h, wchar.h, wctype.h

    Buildfix.  New frontend enabled wchar_t as a native type, exposing bug in
    definition of wctype_t.  Was a wchar_t, but wctype_t is really an unsigned
    short collection of bitflags.

fpw32\tran\i386\xmmi_fp_emul.c

    KNI exception handler fixes from Intel.

-----------------------------------------------------------------

Fri 05-Nov-99   (PhilipLu)

crtw32\stdhpp64\xiosbase, xlocmon
libw32\inc64\xiosbase, xlocmon

    Disable warning C4786 in a couple more files to fix IA64 build.

-----------------------------------------------------------------

Thu 04-Nov-99   (PhilipLu)

crtw32\h\string.h
libw32\include\string.h
libw32\inc64\string.h

    Back out checkin for VS7#33641 - breaking too much existing code, need to
    rethink if this will just be "won't fix".  Leaving in the change I made to
    wchar.h (moved the secondary definitions under the #ifndef _WSTRING_DEFINED)
    so it should at least be safer to #include string.h and wchar.h together.

crtw32\h\crtdbg.h
libw32\include\crtdbg.h
libw32\inc64\crtdbg.h

    Work around useless warning C4507.  This warning is being removed, but it
    needs to be ignored until we drop a compiler without it.

-----------------------------------------------------------------

Wed 03-Nov-99   (GautamB)

crtw32\stdio\output.c

    VS7#5431    Deleted unnecessary #ifs for fixing the bug with L format
    specifier used with wprintf.

-----------------------------------------------------------------

Wed 03-Nov-99   (PhilipLu)

crtw32\h\string.h, wchar.h
libw32\include\string.h, wchar.h
libw32\inc64\string.h, wchar.h

    VS7#33641 - wcschr, wcsrchr, wcsstr, and wcspbrk must be defined in
    string.h the same as in wchar.h, with two versions for C++.

crtw32\h\crtdbg.h, math.h
libw32\include\crtdbg.h, math.h
libw32\inc64\crtdbg.h, math.h

    Place any C++ definitions within an extern "C++" block, so the header
    can be safely included inside an extern "C" block.  (Also for string.h
    and wchar.h)

crtw32\h\internal.h, mbstring.h, stdio.h, wchar.h
libw32\include\mbstring.h, stdio.h, wchar.h
libw32\inc64\mbstring.h, stdio.h, wchar.h

    Continuation of VS7#54572 - Add _M_CEE version of va_list definition to
    all other files defining it, not just stdarg.h.

crtw32\h\cruntime.h
crtw32\tools\win32\relinc.sed

    Get rid of unneeded _VA_LIST_T.

crtw32\startup\crt0.c, tidtable.c
crtw32\time\localtim.c

    Checkins from RLanser.  Fix some Win64 warnings in the _POSIX_ and
    _NTSUBSET_ builds.

-----------------------------------------------------------------

Mon 01-Nov-99   (PhilipLu)

crtw32\eh\frame.cpp, hooks.cpp, throw.cpp, validate.cpp
crtw32\eh\i386\trnsctrl.cpp
crtw32\h\ehassert.h, mtdll.h, trnsctrl.h

    VS7#5361 - A rethrow could lead to the thrown object being destroyed twice.
    The C++ EH code would destroy a exception object on exit from a catch block
    if the exit was not due to a rethrow, even if the exception object was from
    a rethrow inside a catch we were nested in.  The fix for this is x86-only,
    since it introduces a FRAMEINFO linked list to track currently available
    exception objects.  All RISC platforms already have a FRAMEINFO list, but
    use it in a different enough way that porting this fix requires more work.
    In particular, I'm popping items from the FRAMEINFO list inside the
    __finally handler in CallCatchBlock.  All RISC platforms are instead doing
    this in normal code in CatchIt, which I think is error-prone.

    Also improved the /DENABLE_EHTRACE EH tracing dump using indenting to
    indicate the depth on the callstack of the current function, and with more
    data about what's actually being thrown/caught/destroyed/filtered/....

-----------------------------------------------------------------

Fri 29-Oct-99   (PhilipLu)

crtw32\h\math.h
libw32\include\math.h
libw32\inc64\math.h

    VS7#22017 - add useful math constants a la UNIX's math.h, to make porting
    easier.

crtw32\misc\ia64\jmpuwind.s

    Bugfix for IA64 from TiborL.

crtw32\stdhpp64\utility
libw32\inc64\utility

    Disable warning C4786, which appeared building dlldef.cpp for IA64 with a
    new frontend.

-----------------------------------------------------------------

Thu 28-Oct-99   (Gautamb)

crtw32\h\tchar.h
libw32\include\tchar.h
libw32\inc64\tchar.h

    VS7#5418 - fixed _tcsnextc() for handling MBCS.

-----------------------------------------------------------------

Thu 28-Oct-99   (PhilipLu)

crtw32\stdhpp\iosfwd
crtw32\stdhpp64\iosfwd
libw32\include\iosfwd
libw32\inc64\iosfwd

    On Win64, std::streamoff and std::streamsize should be __int64, not long
    and int.

crtw32\h\memory.h, string.h
crtw32\string\memccpy.c, memicmp.c
libw32\include\memory.h, string.h
libw32\inc64\memory.h, string.h

    VS7#22416 - _memccpy, _memicmp and __ascii_memicmp should take a size_t
    count, not an unsigned int.

crtw32\stdio\input.c

    VS7#10705 - scanf format %p was totally broken on Win64.

-----------------------------------------------------------------

Wed 27-Oct-99   (Gautamb)

crtw32\lowio\fstat.c
crtw32\lowio\fstat64.c
crtw32\dos\stat.c
crtw32\dos\stat64.c
crtw32\time\ftime.c
crtw32\time\ftime64.c
crtw32\time\utime.c
crtw32\time\utime64.c

    VS7#37766. Deleted the #include<dostypes.h> in all the file as it is of no
    use.

-----------------------------------------------------------------

Wed 27-Oct-99   (GautamB)
crtw32\lowio\open.c

    VS7#14742 Fixed the _sopen for opening the same by file in share as well as
    O_TEMPORARY mode.

-----------------------------------------------------------------

Wed 27-Oct-99   (PhilipLu)

crtw32\misc\ia64\jmpuwind.s

    New implementation of __jump_unwind for CC_P7_SOFT25 calling convention
    on IA64 from TiborL.

cleanbld.cmd, makefile, makefile.inc, makefile.sub
crtw32\mbstring\lsources
crtw32\stdcpp\lsources
crtw32\stdcpp64\lsources [NEW]

    More makefile tweaks:
    * Repair in-place build for IA64.
    * Fix dependency creation (nmake depend) for in-place build.
    * Enable building with browser info under BLD_BROWSE=1.
    * For x86 asm files whose source is not shipped, assemble files with full
    pathnames, so a developer build (DEVBUILD=1) or in-place build will allow
    debugger to automatically bring up asm source without an open file popup.
    * add DELOBJ option to cleanbld.cmd to delete all objects before building,
    but leaving all sources - avoids file copy/cleanse cycle.
    * Use undocumented -ignore link switch to silence linker warnings.  Switch
    is cleansed from user-rebuild makefiles.
    * Add "-N so" option to ias.exe invocation (equiv of -nologo).

crtw32\eh\frame.cpp, unhandld.cpp, validate.cpp
crtw32\eh\i386\ehcrt.mak [NEW]
crtw32\h\ehassert.h

    Add an x86 version of ehcrt.mak, used to build the C++ EH support into a
    stand-alone lib for test purposes.  Tweak some EH support code to fix
    problems in the stand-alone lib with ENABLE_EHTRACE on.  Also added an
    EHTRACE_FMT1 dump of the 'this' pointer to _DestructExceptionObject.

-----------------------------------------------------------------

Tue 26-Oct-99   (GautamB)

crtw32\h\ctype.h
crtw32\convert\isctype.c
libw32\include\ctype.h
libw32\inc64\ctype.h
libw32\msvcrt.src
libw32\syscrt.src
libw32\syscrt64.src

    VS7#5695 - Added additional function for debug version to check the
    validity of call for character checking functions

-----------------------------------------------------------------

Mon 25-Oct-99   (PhilipLu)

crtw32\h\setjmp.h, stdarg.h, varargs.h
crtw32\tools\win32\relinc.if
libw32\include\setjmp.h, stdarg.h, varargs.h
libw32\inc64\setjmp.h, stdarg.h, varargs.h
srcrel\msvc40.if

    VS7#54572 - Add _M_CEE support for varargs to stdarg.h, issue error if
    varargs.h or setjmp.h used with _M_CEE.
    VS7#51838 - Fix varargs.h for IA64.

-----------------------------------------------------------------

Mon 25-Oct-99   (PhilipLu)

makefile, makefile.inc, makefile.sub, mk.bat
crtw32\dllstuff\lsources
crtw32\eh\lsources
crtw32\heap\lsources
crtw32\iostream\lsources
crtw32\startup\lsources
crtw32\stdcpp\lsources [NEW]

    Repair in-place build to build\<arch> in the source tree, for development
    use.  Faster than copy-and-cleanse build used for released CRTs, and allows
    building isolated CRT versions (st, mt, dll, xst, xmt, xdll).  Also fixes
    to allow using CFLAGS or AFLAGS as nmake args to specify compiler/assembler
    flags for special builds.

crtw32\eh\frame.cpp, hooks.cpp, validate.cpp
crtw32\eh\i386\trnsctrl.cpp
crtw32\h\ehassert.h

    Implement EH tracing, debug output recording path through EH support
    routines.  Need to compile special CRT with /DENABLE_EHTRACE to turn this
    on.  See EHTRACE_* macros in ehassert.h.

-----------------------------------------------------------------

Fri 22-Oct-99   (PhilipLu)

crtw32\eh\frame.cpp, rtti.cpp
crtw32\eh\ia64\ehstate.cpp, trnsctrl.cpp

    IA64 exception handling changes from TiborL.

-----------------------------------------------------------------

Fri 22-Oct-99   (PhilipLu)

makefile.inc
crtw32\heap\delete.cpp, delete2.cpp [NEW], heap.mkf, lsources
crtw32\heap\dll\sources
crtw32\heap\mt\sources
crtw32\heap\st\sources
crtw32\misc\dbgdel.cpp
doc\copysrc.bat
srcrel\pd-b

    VS7#53440 - operator delete and operator delete[] must be implemented in
    separate files, to avoid multiple definition link errors if user only
    supplies definition for one of the two.  Also, only need one definition
    of delete[], in delete2.cpp, so get rid of the debug definition in
    dbgdel.cpp.

-----------------------------------------------------------------

THU 21-Oct-99   <rlanser>

crtw32\eh\sources.nt

    Binl is a C++ flag for the libcntpr build.  Changed for IA64.

-----------------------------------------------------------------

THU 21-Oct-99   <GautamB>

crtw32\misc\assert.c

    VS7#4731 Fixed the way the output of the filenames that were too long
    was displayed.

-----------------------------------------------------------------

Mon 18-Oct-99   (PhilipLu)

makefile.inc
crtw32\h\internal.h, rtcpriv.h
crtw32\lowio\osfinfo.c
crtw32\misc\initcrit.c [NEW], lsources
crtw32\misc\dll\sources
crtw32\misc\mt\sources
crtw32\misc\psx\sources
crtw32\misc\st\sources
crtw32\startup\mlock.c
crtw32\stdio\stream.c
doc\copysrc.bat
srcrel\pd-b

    VS7#49164, NtBug#413400 - Where available (NT4SP3 or better), set a
    spin count on critical sections when they are initialized.  Also detect
    exceptions raised by InitializeCriticalSection.

fpw32\tran\i386\filter.c

    VS7#5422 - Push/pop FP register save area when fixing up an FP exception,
    instead of just incrementing/decrementing the Top counter.

crtw32\eh\frame.cpp

    VS7#5419 - During unwind, set EH state before entering each unwind funclet,
    instead of once after all funclets called, to better handle case of SEH
    during unwind.

srcrel\makefile
srcrel\mkclnmkf.c

    Add -noclean option to mkclnmkf, triggered by set NOCLEAN=1, to copy all
    source files to build tree instead of cleansing them.  Preparation for
    getting -DDEBUG working again.

-----------------------------------------------------------------

Tue 12-Oct-99   (PhilipLu)

fpw32\tran\i386\filter.c

    VS7#6472 - Prevent _fpieee_flt from overwriting exception handling stack
    frame when an FP instruction exception was writing to a no-longer-existing
    stack local.

-----------------------------------------------------------------

Mon 11-Oct-99   (KFrei)

crtw32\rtc\init.cpp

    VS7#48979 - fix bug in removing image from list of active RTC images during
    shutdown.

-----------------------------------------------------------------

Mon 11-Oct-99   (PhilipLu)

crtw32\heap\sbheap.c
libw32\msvcrt.src, syscrt.src, syscrt64.src

    VS7#49546 - Win64 build must define stubs for _{get,set}_sbh_threshold,
    even though small block heap is disabled there.

-----------------------------------------------------------------

Mon 11-Oct-99   (PhilipLu)

fpw32\tran\ia64\frnd.s

    VS7#15807 - Port new implementation of _frnd from CRT 64 sourcesafe tree.
    Old version failed whenever abs(arg) >= 2^63.

crtw32\misc\ia64\chandler.c, cinitone.s, jmpuwind.s, longjmp.s, memcpys.s,
    memsets.s, miscs.s, setjmp.s, setjmpex.s
crtw32\startup\ia64\chkstk.s, fp8.c
fpw32\tran\ia64\asincosf.c, atan2f.c, atanf.c, ceilf.c, em_types.h, emfloat.s,
    expf.c, fabsf.c, filter.c, floorf.c, fmodf.c, fp80.s, fp80c.c, fpctrl.c,
    fpieee_flt.h, frnd.s, huge.s, ieee.c, log10f.c, logf.c, powf.c, sincosf.c,
    sincoshf.c, sqrtf.c, tanf.c, tanhf.c

    Intel has given permission to check the IA64-specific routines into the
    main CRT tree, so these files have been addfiled from the SLM project at
    \\lang3\p7!crt_ia64_asm.

-----------------------------------------------------------------

Thu 07-Oct-99   (PhilipLu)

crtw32\eh\ia64\trnsctrl.cpp

    Port SHanson change from CRT 64 sourcesafe tree.  utc_p7#1126: sysmode
    test eh\extest fails /Ox.

-----------------------------------------------------------------

Thu 07-Oct-99   (PhilipLu)

crtw32\h\crtdbg.h, direct.h, heap.h, internal.h, io.h, malloc.h, mbstring.h,
    memory.h, mtdll.h, new.h, nlsint.h, process.h, search.h, stdarg.h,
    stddef.h, stdexcpt.h, stdio.h, stdlib.h, string.h, time.h, wchar.h
fpw32\include\trans.h
libw32\include\crtdbg.h, direct.h, io.h, malloc.h, mbstring.h, memory.h, new.h,
    process.h, search.h, stdarg.h, stddef.h, stdexcpt.h, stdio.h, stdlib.h,
    string.h, time.h, wchar.h
libw32\inc64\crtdbg.h, direct.h, io.h, malloc.h, mbstring.h, memory.h, new.h,
    process.h, search.h, stdarg.h, stddef.h, stdexcpt.h, stdio.h, stdlib.h,
    string.h, time.h, wchar.h
srcrel\msvc40.if

    VS7#29043 - Update CRTs to support /Wp64 by adding __w64 modifier as
    appropriate to typedefs of size_t, ptrdiff_t, time_t, intptr_t, uintptr_t.

crtw32\misc\dbgheap.c

    VS7#5677 - Debug heap output needs to use %p when outputting pointers, %Iu
    when outputting size_t data.

crtw32\stdio\fdopen.c, fopen.c, tmpfile.c

    VS7#16832 - Set errno to EMFILE when fopen and related functions run out
    of streams.

fpw32\conv\cfin.c, fltinf.c

    VS7#5672 - Prevent underflow exception during strtod by copying bytes
    instead of a double (which might use FP instrs) in _fltin.

-----------------------------------------------------------------

Thu 30-Sep-99   (PhilipLu)

crtw32\time\tzset.c
    Fix double-free bug in tzset() when freeing lastTZ (ntbug#390281).

crtw32\heap\heapinit.c
    Change handling of env var __MSCVRT_HEAP_SELECTED in heap init - don't
    use any routine that requires the heap to be available (vs7#44259).  Also,
    check the env var before checking for NT5.0 or better, so we can change
    heap selection even on Win2000 (only here, not in the CRT60a tree used
    to build the Win2K system CRT).

-----------------------------------------------------------------

Wed 29-Sep-99   (PhilipLu)

Port recent fixes from CRT 64 SourceSafe tree:

crtw32\makefile.sub
    Build IA64 with cl flags /QIA64_A0 and /Zx (release only), and ias flag
    -X explicit.

crtw32\misc\ia64\setjmp.s
    All branch registers weren't being saved.

crtw32\misc\ia64\longjmp.s
    Fix RSE hazard.

-----------------------------------------------------------------

Thu 23-Sep-99   (PhilipLu)

crtw32\stdhpp64\xlocnum
libw32\inc64\xlocnum

    Fix previous checkin - use %Id, not %Ld, to sprintf an __int64.

-----------------------------------------------------------------

Fri 17-Sep-99   (PhilipLu)

crtw32\stdhpp64\istream, ostream, xlocnum
libw32\inc64\istream, ostream, xlocnum

    VS7#5291 - backport __int64 support for iostream << and >> to the old
    64-bit C++ headers.

crtw32\eh\typname.cpp
crtw32\stdhpp64\xlocale
libw32\inc64\xlocale

    Add typecasts to fix 64-bit warnings with newest IA64 compiler.

-----------------------------------------------------------------

Thu 02-Sep-99   (PhilipLu)

langapi\undname\undname.cxx, undname.inl

    Attempt to fix VS7#23225 - reports that undecorator suballocator in
    HeapManager::getMemory is causing unaligned allocations.  Make sure that
    Win32 and Win64 CRT versions of the undecorator use 8 byte alignment
    (should have been happening already anyway, but make more explicit), and
    that an attempt to suballocate 0 bytes will not trigger unaligned
    allocations (but I can't see anywhere that would try to allocate 0 bytes).

langapi\undname\stubmain.cxx, testundn.cxx

    Fix build of stand-along undecorator and undecorator verifier test app
    using the CRT __unDName.

makefile
srcrel\msvc40.if

    Define _SYSCRT when doing a system CRT build.

crtw32\dllstuff\crtlib.c

    Noticed by RichardS - CRT DLL issues a popup and refuses to run if started
    on Win32s.  The popup references "MSVCRT.DLL".  Change to do this for
    system CRT only, since the name for the VC CRT DLL is different and there's
    no good reason to keep checking for Win32s there.

-----------------------------------------------------------------

Mon 30-Aug-99   (PhilipLu)

makefile, makefile.inc
crtw32\dllstuff\lsources, wdll_av.c [NEW]
crtw32\dllstuff\dlllib\sources
doc\copysrc.bat
libw32\makefile
srcrel\pd-b

    VS7#5425 - ___wsetargv was missing from msvcrt[d].lib, so linking with
    wsetargv.obj when using the CRT DLL gave a link error.  Add new source
    file wdll_av.c corresponding to the ANSI version dll_argv.c.

-----------------------------------------------------------------

Mon 30-Aug-99   (PhilipLu)

Minor issues uncovered during Y2K code review

crtw32\time\ctime.c, ctime64.c, difftime.c, systime.c

    Fix function header comments.

crtw32\time\mktime.c

    Replace 'long' with 'time_t'.

crtw32\time\strftime.c

    Don't overflow buffer on finding mbcs leadbyte in store_winword.

crtw32\h\crtdbg.h
libw32\inc64\crtdbg.h
libw32\include\crtdbg.h

    Remove unprintable character from comment (confused 'findstr /p').

-----------------------------------------------------------------

Thu 12-Aug-99   (v-JohnMo)

fpw32\tran\lsources,sources.nt

    Alpha/Alpha64: build using correct FP support flags

fpw32\tran\alpha\dpml_exc.c

    Alpha/Alpha64: remove unneeded declaration

fpw32\tran\alpha\getsetrg.c

    Alpha/Alpha64: supply default return value to avoid warning

libw32\msvcrt.src

    Alpha/Alpha64: export new UTC compiler helper functions

-----------------------------------------------------------------

Wed 11-Aug-99   (PhilipLu for v-ABorni)

makefile.inc
crtw32\helper\lsources, sources.nt
crtw32\helper\alpha\memcmp_.s [NEW], otsnote.txt
srcrel\objects.mkf, pd-b

    Alpha/Alpha64: add new memcmp intrinsic.

-----------------------------------------------------------------

Wed 11-Aug-99   (PhilipLu for RLanser, SHanson)

Porting recent checkins to the CRT64 sourcesafe tree

makefile.sub
crtw32\misc\ia64\setjmp.s

    Hazard fixes.  Requires new Intel assembler (1.7) that checks for hazards.

crtw32\misc\ia64\miscs.s

    Remove InterlockedExchangeAdd() since it's an intrinsic.

crtw32\eh\ehvecctr.cpp, ehveccvb.cpp, ehvecdtr.cpp, frame.cpp
crtw32\eh\ia64\trnsctrl.cpp

    IA64 EH image relative changes (SW 2.5 convention) under
    #if defined(CC_P7_SOFT25).

-----------------------------------------------------------------

Tue 10-Aug-99   (PhilipLu for RichardS)

crtw32\h\sect_attribs.h
crtw32\rtc\initsect.cpp

    Use external symbols for RTC initializer/terminator table boundaries for
    BBT support.

-----------------------------------------------------------------

Mon 09-Aug-99   (PhilipLu)

makefile
libw32\msvcirt.rc, msvcirt.src, msvcrt.src, syscrt.rc [NEW], syscrt.src [NEW],
    syscrt64.rc [NEW], syscrt64.src [NEW], sysirt.rc [NEW], sysirt.src [NEW],
    sysirt64.rc [NEW], sysirt64.src [NEW], sysprt.rc [NEW], sysprt.src [NEW],
    sysprt64.rc [NEW], sysprt64.src [NEW]
srcrel\external.mkf, makefile, mkclnmkf.c, objects.mkf, pd-b, relmkf.sed

    Complete configuration of build for system CRT.  Building with BLD_SYSCRT=1
    will build the system CRT instead of the VC crt.  Building with LLP64=1
    implies building a system CRT, but for Win64 instead of Win32.  Addfiled
    new .rc/.src files specific to Win32-system and Win64-system CRTs.

-----------------------------------------------------------------

Wed 04-Aug-99   (PhilipLu)

makefile
libw32\msvcirt.rc, msvcirt.src, msvcprt.rc [NEW], msvcprt.src, msvcrt.rc,
    msvcrt.src
srcrel\_sample_.rc, external.mkf, mkclnmkf.c, objects.mkf, pd-b, relmkf.sed

    Rename CRT: msvcrt.dll   -> msvcr70.dll
                msvcrtd.dll  -> msvcr70d.dll
                msvcp61.dll  -> msvcp70.dll
                msvcp61d.dll -> msvcp70d.dll
                msvcirt.dll  -> msvci70.dll
                msvcirtd.dll -> msvci70d.dll
    Also began configuration for build with BLD_SYSCRT=1 to build the system
    CRT instead of the VC crt.  This is not complete yet.

[delfiled:]
libw32\msvcp42.rc, msvcp50.rc, msvcp60.rc, msvcp61.rc

    Replaced by msvcprt.rc

crtw32\misc\setenv.c

    Fix use-after-free bug in __crtsetenv() when removing an existing
    enviroment variable.

crtw32\stdio\vsprintf.c, vswprint.c

    Minor function header fix

-----------------------------------------------------------------

Wed 04-Aug-99   (KFrei)

crtw32\h\rtcsup.h rtcpriv.h
crtw32\rtc\bintree.cpp chsyheap.cpp memory.cpp shadow.cpp init.cpp
crtw32\misc\i386\chkesp.c
crtw32\misc\alpha\chkesp.c
    Added _RTC_ to all external objects.  Added comments to keep versioning
    issues in your face.  Fixed some seriously leaking handles in the init code

-----------------------------------------------------------------

Fri 09-Jul-99   (GregF)

crtw32\h\winheap.h
crtw32\heap\calloc.c, expand.c, free.c, heapchk.c, heapinit.c, heapmin.c,
    malloc.c, msize.c, realloc.c, sbheap.c
crtw32\misc\dbgheap.c
    Removed VC 5.0 small-block heap, and the selection logic to enable it, from
    the static libraries.  This was intended only for the DLL which was not
    affected by this change.

-----------------------------------------------------------------

Wed 07-Jul-99   (GregF)

crtw32\dllstfull\crtlib.c
    Don't clean up system resources if the process is known to be terminating.
    This fixes VS7 #16829

-----------------------------------------------------------------

Wed 16-Jun-99   (PhilipLu)

makefile
makefile.sub

    Partially back out checkin of 8-Jun-99.  Release build no longer built by
    default with debug info.  Necessary until I can get the build lab to drop
    the associated PDBs along with the libs and dlls.  Debug info for release
    build can be selected by setting BLD_REL_DBINFO in the environment.

-----------------------------------------------------------------

Mon 14-Jun-99   (PhilipLu)

crtw32\tools\win32\relinc.if
libw32\include\rtcapi.h
libw32\inc64\rtcapi.h

    Cleanse #ifdef _RTC from header rtcapi.h, with _RTC on (vs7#22400).

makefile
makefile.sub
srcrel\pd-b

    Fix use of whackline.exe in Alpha build (vs7#23911).

-----------------------------------------------------------------

Thu 10-Jun-99   (GregF)

crtw32\time\tzset.c
    Fixed handling of non-existent or empty TZ environment variable.  This
    fixes VS7 #16203.

-----------------------------------------------------------------

Tue 08-Jun-99   (PhilipLu)

makefile
makefile.sub
libw32\tools\alpha\whackline.exe [NEW]

    BBT/Vulcan support - build debug and release targets with full debug info,
    running whackline over objs for which we don't ship source.  This gets rid
    of the need to have a separate bbt target, but the bbt target remains until
    the build lab switches to using the release target instead.  Also, if built
    with DEVBUILD=1 in the environment, whackline won't be run, so full line
    number info is available for all sources, allowing developer builds to step
    into these routines.

-----------------------------------------------------------------

Mon 07-Jun-99   (PhilipLu)

crtw32\h\float.h
crtw32\startup\ia64\fp8.c
libw32\include\float.h
libw32\inc64\float.h

    For IA64, default to _PC_64 bit mode, not _PC_53.

crtw32\h\math.h
libw32\include\math.h
libw32\inc64\math.h

    modff and hypotf are intrinsics for IA64 (vs7#2515).

crtw32\h\process.h
libw32\include\process.h
libw32\inc64\process.h

    The oldnames (!__STDC__) versions of the exec/spawn APIs need to use
    intptr_t, not int, for the handle arg/return vals, same as the real APIs.

[delfile:]
libw32\tools\ia64\aliasobj.exe, detab.exe, ifstrip.exe, pd.exe, striphdr.exe,
    tolwrupr.exe, trailing.exe

    These are actually x86 executables.  The x86-based cross-build for IA64
    now pulls these tools from libw32\tools\i386, as it should, so these are
    no longer needed.  Once we have native IA64 builds, the IA64 executables
    will go here.

srcrel\pd-b

    Remove libw32\tools\{ia64,ppc,mips}\*.exe.  The ppc and mips tools were
    delfiled a while ago by Rich Shupak.

srcrel\makefile

    Fix typo for Alpha64 build ("!else if" should be "!elseif")

-----------------------------------------------------------------

Thu 03-Jun-99   (PhilipLu)

makefile

    Fix oldnames.lib build for IA64.

crtw32\h\float.h
libw32\inc64\float.h
libw32\include\float.h

    Define _CW_DEFAULT for IA64 (vs7#22100).

libw32\inc64\rtcapi.h
libw32\inc64\typeinfo.h

    Pick up Win64 cleansed headers from recent checkins.

-----------------------------------------------------------------

Wed 02-Jun-99   (PhilipLu)

crtw32\convert\mbstowcs.c, mbtowc.c, wcstombs.c
fpw32\tran\alpha\filter.c

    Warning fixes from v-kimpe for _NTSUBSET_ and Alpha build.

-----------------------------------------------------------------

Wed 02-Jun-99   (GregF)

crtw32\h\internal.h
crtw32\misc\putenv.c, setenv.c

    Fixed several leaks which manifested in _putenv().  A copy of the arg
    string is made in _putenv first thing, but it was not subsequently freed
    in some cases when it should have been.  This fixes VS7 #18971.

-----------------------------------------------------------------

Tue 01-Jun-99   (PhilipLu)

makefile.inc
crtw32\eh\stdexcpt.cpp
crtw32\h\internal.h, typeinfo.h
crtw32\stdcpp\cerr.cpp, cin.cpp, clog.cpp, cout.cpp, delaop.cpp, delop.cpp,
    dlldef.cpp, fiopen.cpp, iomanip.cpp, ios.cpp, iosptrs.cpp, iostream.cpp,
    locale.cpp, locale0.cpp, newaop.cpp, newaop2.cpp, newop.cpp, newop2.cpp,
    nomemory.cpp, raisehan.cpp [NEW], sources.nt, stdhndlr.cpp [NEW],
    stdthrow.cpp, string.cpp, strstrea.cpp, uncaught.cpp, wcerr.cpp, wcin.cpp,
    wclog.cpp, wcout.cpp, wctrans.c, wctype.c, wiostrea.cpp, wlocale.cpp,
    xcosh.c, xdnorm.c, xdscale.c, xdtest.c, xexp.c, xfcosh.c, xfdnorm.c,
    xfdscale.c, xfdtest.c, xfexp.c, xfsinh.c, xfvalues.c, xlcosh.c, xldnorm.c,
    xldscale.c, xldtest.c, xlexp.c, xlocale.cpp, xlock.cpp, xlpoly.c, xlsinh.c,
    xlvalues.c, xmath.h, xpoly.c, xsinh.c, xstod.c, xstrcoll.c, xvalues.c
crtw32\stdhpp\algorithm, bitset, cassert, cctype, cerrno, cfloat, ciso646,
    climits, clocale, cmath, complex, csetjmp, csignal, cstdarg, cstddef,
    cstdio, cstdlib, cstring, ctime, cwchar, cwctype, deque, exception, fstream,
    functional, hash_map, hash_set, iomanip, ios, iosfwd, iostream, iso646.h,
    istream, iterator, limits, list, locale, map, memory, new, numeric, ostream,
    queue, set, sstream, stack, stdexcept, streambuf, string, strstream,
    utility, valarray, vector, xcomplex, xhash, xiosbase, xlocale, xlocinfo,
    xlocinfo.h, xlocmes, xlocmon, xlocnum, xloctime, xmemory, xstddef, xstring,
    xtree, xutility, ymath.h, yvals.h
doc\copysrc.bat
doc\pjp\makefile.inc, pd-b
libw32\include\algorithm, bitset, cassert, cctype, cerrno, cfloat, ciso646,
    climits, clocale, cmath, complex, csetjmp, csignal, cstdarg, cstddef,
    cstdio, cstdlib, cstring, ctime, cwchar, cwctype, deque, exception, fstream,
    functional, hash_map, hash_set, iomanip, ios, iosfwd, iostream, iso646.h,
    istream, iterator, limits, list, locale, map, memory, new, numeric, ostream,
    queue, set, sstream, stack, stdexcept, streambuf, string, strstream,
    typeinfo.h, utility, valarray, vector, xcomplex, xhash, xiosbase, xlocale,
    xlocinfo, xlocinfo.h, xlocmes, xlocmon, xlocnum, xloctime, xmath.h, xmemory,
    xstddef, xstring, xtree, xutility, ymath.h, yvals.h
srcrel\pd-b

    Integrate 05/03/99 drop of STL from Plauger.

-----------------------------------------------------------------

Wed 26-May-99   (KFrei)

crtw32\h\rtcapi.h, rtcpriv.h, rtcsup.h
crtw32\heap\calloc.c, delete.cpp, expand.c, free.c, malloc.c, new.cpp, new2.cpp,
    realloc.c
crtw32\misc\dbgdel.cpp, dbgheap.c, dbgnew.cpp, i386\chkesp.c
crtw32\rtc\bintree.cpp, callsite.cpp, chsyheap.cpp, contain.cpp, error.cpp,
    fileio.cpp, init.cpp, memory.cpp, pdblkup.cpp, shadow.cpp, userapi.cpp
crtw32\stdcpp\delaop.cpp, delop.cpp, newaop.cpp, newaop2.cpp, newop.cpp,
    newop2.cpp
crtw32\tools\win32\relinc.if
libw32\include\rtcapi.h
srcrel\msvc40.if

    Remove /RTCl and /RTCv, add /RTCu.  Put shadow mem stuff under _RTC_ADVMEM,
    which is disabled.  Clean up names to always use _RTC_ prefix.  Simplify
    _RTC_Allocate_hook.

-----------------------------------------------------------------

Fri 21-May-99   (PhilipLu)

makefile

    Link IA64 xdll targets /debugtype:both.  Also add -osversion link switches
    used for other Win64 dll targets to the zdll (BBT) target too.

-----------------------------------------------------------------

Thu 20-May-99   (PhilipLu)

crtw32\eh\ehveccrt.cpp, ehveccvb.cpp, ehvecdtr.cpp

    Turn off __thiscall for IA64.

makefile
srcrel\external.mkf, mkclnmkf.c, objects.mkf, pd-b

    Build msvcp60.dll for Win64, not msvcp61.dll.

-----------------------------------------------------------------

Thu 20-May-99   (PhilipLu)

[addfiled:]
crtw32\tools\win32\relinc64.cmd
libw32\inc64\algorithm, assert.h, bitset, cassert, cctype, cerrno, cfloat,
    ciso646, climits, clocale, cmath, complex, conio.h, crtdbg.h, csetjmp,
    csignal, cstdarg, cstddef, cstdio, cstdlib, cstring, ctime, ctype.h, cwchar,
    cwctype, deque, direct.h, dos.h, eh.h, errno.h, exception, excpt.h, fcntl.h,
    float.h, fpieee.h, fstream, fstream.h, functional, io.h, iomanip, iomanip.h,
    ios, ios.h, iosfwd, iostream, iostream.h, iso646.h, istream, istream.h,
    iterator, limits, limits.h, list, locale, locale.h, malloc.h, map, math.h,
    mbctype.h, mbstring.h, memory, memory.h, minmax.h, new, new.h, numeric,
    ostream, ostream.h, process.h, queue, rtcapi.h, search.h, set, setjmp.h,
    setjmpex.h, share.h, signal.h, sstream, stack, stdarg.h, stddef.h,
    stdexcept, stdexcpt.h, stdio.h, stdiostr.h, stdlib.h, stl.h, streamb.h,
    streambuf, string, string.h, strstrea.h, strstream, tchar.h, time.h,
    typeinfo, typeinfo.h, use_ansi.h, useoldio.h, utility, valarray, varargs.h,
    vector, wchar.h, wctype.h, xcomplex, xiosbase, xlocale, xlocinfo,
    xlocinfo.h, xlocmon, xlocnum, xloctime, xmath.h, xmemory, xstddef, xstring,
    xtree, xutility, ymath.h, yvals.h
libw32\inc64\sys\locking.h, stat.h, timeb.h, types.h, utime.h

    Cleansed headers for Win64 build.  This should be temporary - delete once
    NT5 ships and Win32 and Win64 builds start using same STL headers.

srcrel\makefile, pd-b

    Handle new libw32\inc64 files for Win64 build.

-----------------------------------------------------------------

Thu 20-May-99   (PhilipLu)

crtw32\misc\dbgheap.c
    Don't DebugBreak if heap allocation counter wraps around back to -1
    (vs7#5363).

-----------------------------------------------------------------

Wed 19-May-99   (PhilipLu)

[addfiled:]
crtw32\stdcpp64\_tolower.c, _toupper.c, delop.cpp, delop_s.cpp, dirs,
    dlldef.cpp, fiopen.cpp, iomanip.cpp, ios.cpp, iostream.cpp, locale.cpp,
    locale0.cpp, newop.cpp, newop2.cpp, newop2_s.cpp, newop_s.cpp,
    nomemory.cpp, sources.nt, string.cpp, strstrea.cpp, uncaught.cpp,
    wctrans.c, wctype.c, wiostrea.cpp, wlocale.cpp, xcosh.c, xdnorm.c,
    xdscale.c, xdtest.c, xexp.c, xfcosh.c, xfdnorm.c, xfdscale.c, xfdtest.c,
    xfexp.c, xfsinh.c, xfvalues.c, xlcosh.c, xldnorm.c, xldscale.c, xldtest.c,
    xlexp.c, xlocale.cpp, xlock.cpp, xlpoly.c, xlsinh.c, xlvalues.c, xmath.h,
    xmbtowc.c, xpoly.c, xsinh.c, xstod.c, xstrcoll.c, xstrxfrm.c, xvalues.c,
    xwcscoll.c, xwcsxfrm.c, xwctomb.c
crtw32\stdhpp64\algorithm, bitset, cassert, cctype, cerrno, cfloat, ciso646,
    climits, clocale, cmath, complex, csetjmp, csignal, cstdarg, cstddef,
    cstdio, cstdlib, cstring, ctime, cwchar, cwctype, deque, exception,
    fstream, functional, iomanip, ios, iosfwd, iostream, iso646.h, istream,
    iterator, limits, list, locale, map, memory, new, numeric, ostream, queue,
    set, sstream, stack, stdexcept, stl.h, streambuf, string, strstream,
    typeinfo, use_ansi.h, utility, valarray, vector, wctype.h, xcomplex,
    xiosbase, xlocale, xlocinfo, xlocinfo.h, xlocmon, xlocnum, xloctime,
    xmemory, xstddef, xstring, xtree, xutility, ymath.h, yvals.h

    Add in old STL files from \\lang5\rtl CRT 64 sourcesafe tree.  These files
    are used to build the Win64 version of STL for as long as NT keeps using
    the old STL headers for their Win32/Win64 builds.  These files should go
    away once NT5 ships and NT updates to current STL headers.

makefile, makefile.inc, makefile.sub
crtw32\dirs
srcrel\makefile, mkclnmkf.c, pd-b

    For Win64, build the STL components with the stdcpp64\stdhpp64 sources, not
    the stdcpp\stdhpp ones used for Win32 builds.

-----------------------------------------------------------------

Wed 19-May-99   (PhilipLu)

srcrel\external.mkf, makefile
    When building a 64-bit crt on a 32-bit system, use the V6TOOLS compiler to
    build the 32-bit hosted mkclnmkf.exe and striplin.exe.  Also, build the
    proper cross-hosted 64-bit targetted version of mkclnmkf.exe.

-----------------------------------------------------------------

Mon 17-May-99   (PhilipLu)

crtw32\convert\isctype.c, mblen.c, mbstowcs.c, mbtowc.c, tolower.c, toupper.c,
    wcstombs.c, wctomb.c
crtw32\dllstuff\atonexit.c, cinitexe.c, crtdll.c, crtexe.c
crtw32\dos\access.c, chdir.c, chmod.c, dosmap.c, drive.c, fullpath.c, getcwd.c,
    getpid.c, mkdir.c, rename.c, rmdir.c, stat.c, unlink.c
crtw32\eh\ehvecctr.cpp, ehveccvb.cpp, ehvecdtr.cpp, frame.cpp, hooks.cpp,
    oldexcpt.h, rtti.cpp, throw.cpp, unhandld.cpp, user.cpp, validate.cpp
crtw32\h\assert.h, cmsgs.h, conio.h, crtdbg.h, cruntime.h, ctype.h, direct.h,
    dos.h, dostypes.h, eh.h, ehassert.h, ehhooks.h, ehstate.h, errno.h,
    excpt.h, fcntl.h, float.h, fltintrn.h, fpieee.h, fstream.h, heap.h,
    internal.h, io.h, iomanip.h, ios.h, iostream.h, istream.h, limits.h,
    locale.h, malloc.h, math.h, mbctype.h, mbstring.h, memory.h, msdos.h,
    mtdll.h, new.h, oscalls.h, ostream.h, process.h, rtcsup.h, search.h,
    setjmp.h, setjmpex.h, share.h, signal.h, stdarg.h, stddef.h, stdexcpt.h,
    stdio.h, stdiostr.h, stdlib.h, streamb.h, string.h, strstrea.h, tchar.h,
    time.h, trnsctrl.h, typeinfo.h, varargs.h, wchar.h
crtw32\h\sys\locking.h, stat.h, timeb.h, types.h, utime.h
crtw32\heap\free.c, heapdump.c, heapgrow.c, heapinit.c, heapmin.c, realloc.c
crtw32\iostream\filebuf.cpp, stdiostr.cpp
crtw32\lowio\chsize.c, close.c, commit.c, dup.c, dup2.c, eof.c, flength.c,
    fstat.c, isatty.c, locking.c, lseek.c, mktemp.c, open.c, osfinfo.c, read.c,
    setmode.c, tell.c, write.c
crtw32\mbstring\ismbalnm.c, ismbalph.c, ismbdgt.c, ismbgrph.c, ismblwr.c,
    ismbprn.c, ismbpunc.c, ismbspc.c, ismbupr.c, mbctype.c, mbscoll.c,
    mbsicmp.c, mbsicoll.c, mbslwr.c, mbsnbcol.c, mbsnbico.c, mbsncoll.c,
    mbsnicol.c, mbsupr.c, mbtolwr.c, mbtoupr.c
crtw32\misc\abs.c, assert.c, crtmbox.c, dbgheap.c, dbgrpt.c, getenv.c,
    getpath.c, lconv.c, onexit.c, perror.c, putenv.c, searchen.c, syserr.c
crtw32\startup\crt0.c, crt0dat.c, crt0msg.c, dllcrt0.c, dllmain.c, stdargv.c
crtw32\stdcpp\_tolower.c, _toupper.c, xmbtowc.c, xstrcoll.c, xstrxfrm.c,
    xwctomb.c
crtw32\stdhpp\exception, typeinfo, wctype.h
crtw32\stdio\_filbuf.c, _file.c, _flsbuf.c, _freebuf.c, _getbuf.c, _open.c,
    _sftbuf.c, clearerr.c, closeall.c, fclose.c, fdopen.c, fflush.c, fgetpos.c,
    fread.c, fseek.c, fsetpos.c, ftell.c, fwrite.c, input.c, maketabc.c,
    output.c, rewind.c, rmtmp.c, setvbuf.c, stream.c, tempnam.c, test_out.c,
    tmpfile.c
crtw32\string\memicmp.c, strcoll.c, stricmp.c, stricoll.c, strlwr.c,
    strncoll.c, strnicmp.c, strnicol.c, strset.c, strupr.c, strxfrm.c
crtw32\time\clock.c, dtoxtime.c, ftime.c, localtim.c, mktime.c, mktime64.c,
    strdate.c, strftime.c, strtime.c, time.c, tzset.c, utime.c
doc\pjp\mkclnmkf.c
fpw32\include\cv.h, trans.h
fpw32\tran\fabs.c, sincosh.c, tanh.c
libw32\include\assert.h, conio.h, crtdbg.h, ctype.h, direct.h, dos.h, eh.h,
    errno.h, exception, excpt.h, fcntl.h, float.h, fpieee.h, fstream.h, io.h,
    iomanip.h, ios.h, iostream.h, istream.h, limits.h, locale.h, malloc.h,
    math.h, mbctype.h, mbstring.h, memory.h, new.h, ostream.h, process.h,
    search.h, setjmp.h, setjmpex.h, share.h, signal.h, stdarg.h, stddef.h,
    stdexcpt.h, stdio.h, stdiostr.h, stdlib.h, streamb.h, string.h, strstrea.h,
    tchar.h, time.h, typeinfo, typeinfo.h, varargs.h, wchar.h, wctype.h
libw32\include\sys\locking.h, stat.h, timeb.h, types.h, utime.h
srcrel\msvc40.if

    Removing Macintosh support, stage 2: Remove all Mac support from source
    files.  Also remove most _WIN32 #ifs, since _WIN32 is always on now and
    some Mac code was actually under #ifndef _WIN32 instead of #ifdef _MAC.

-----------------------------------------------------------------

Mon 17-May-99   (PhilipLu)

clean.cmd, makefile, makefile.inc, makefile.sub
crtw32\crt.mkf, crt32.nt
crtw32\convert\convert.mkf, lsources
crtw32\dllstuff\lsources
crtw32\dos\dos.mkf, lsources
crtw32\eh\eh.mkf, lsources
crtw32\exec\exec.mkf, lsources
crtw32\heap\heap.mkf, lsources
crtw32\helper\lsources
crtw32\iostream\iostream.mkf, lsources
crtw32\linkopts\lsources
crtw32\lowio\lowio.mkf, lsources
crtw32\mbstring\lsources, mbstring.mkf
crtw32\misc\lsources, misc.mkf
crtw32\startup\lsources, startup.mkf
crtw32\stdio\lsources, stdio.mkf
crtw32\string\lsources, string.mkf
crtw32\time\lsources, time.mkf
doc\copycrt.bat, copysrc.bat
doc\pjp\makefile.srcrel
fpw32\fp.mkf, fp32.nt, infer.mkf
fpw32\conv\conv.mkf, lsources
fpw32\tran\lsources, tran.mkf
srcrel\bldnt.cmd, bldwin95.bat, external.mkf, makefile, mkclnmkf.c,
    mkfiles.sed, objects.mkf, pd-b

    Removing Macintosh support, stage 1: Remove all Mac support from makefiles
    and scripts and delfile Mac-only files.

[delfiled:]
mkmac.bat
crtw32\mac.mkf, makemac.cmd, mkm68k.bat, mkpmac.bat
crtw32\convert\mac\atold.c, strtold.c
crtw32\dllstuff\macdll\makedll.cmd, makedlld.cmd, msvcrt.def, msvcrt.r,
    msvcrtd.def
crtw32\dos\mac\remove.c
crtw32\eh\mac\m68k\frame.cpp, trnsctrl.a
crtw32\eh\mac\pmac\ehstate.cpp, exdsptch.cpp, handlers.asm, lowhelpr.asm,
    ntstatus.h, ppcinst.h, trnsctrl.cpp, unwind.asm, vunwind.cpp
crtw32\exec\mac\spawn.c
crtw32\h\plstring.h
crtw32\h\mac\mpw.h, rtlib.h
crtw32\h\mac\m68k\assert.a, crtequ.a, sysequ.a, traps.a
crtw32\heap\mac\heapaslm.c
crtw32\helper\mac\pmac\i64div.asm, i64rem.asm, i64rsh.asm, rfpr.asm, rgpr.asm,
    sfpr.asm, sgpr.asm, u64div.asm, u64rem.asm
crtw32\lowio\mac\_endlow.c, dupx.c
crtw32\misc\mac\cinitenv.c, cinitone.c, gestalt.c, id2path.c, signal.c,
    xcptfltr.c
crtw32\misc\mac\m68k\libhlprs.a, rts.a, setjmp.a, stkavl.a
crtw32\misc\mac\pmac\exsup.asm, setjmp.asm, stkavl.c
crtw32\startup\mac\amsg.c, exit.c, init.c, libcinfo.c, runtime.c
crtw32\startup\mac\m68k\applyfix.a, astart.a, chkstk.a, fixupseg.a, getstack.a,
    loaddata.a, loadseg.a, qd.a, quit.a, shellrtn.a, stdalone.a, unloadsn.a
crtw32\startup\mac\pmac\astart.c, chkstk.asm, crtdllex.c, crtexit.c, dllexit.c,
    qd.c, shellrtn.c, sp.c, testexit.c
crtw32\stdio\mac\initstd.c
crtw32\string\special.mak
crtw32\string\mac\c2pstr.c, p2cstr.c, plstrcat.c, plstrchr.c, plstrcmp.c,
    plstrlen.c, plstrnca.c, plstrncm.c, plstrncp.c, plstrpbr.c, plstrrch.c,
    plstrspn.c, plstrstr.c
crtw32\time\mac\cinitclk.c
crtw32\tools\mac\addseg.c, addseg.exe, adep.bat, adep.sed, asm68.exe, cdep.bat,
    cdep.sed, cp.exe, gawk.exe, getver.exe, ifstrip.exe, make.exe, ml.err,
    ml.exe, nmake.exe, relinc.cmd, relinc.if, relinc.sed, sort.exe, uniq.exe
fpw32\m68k.mkf, makemac.cmd, mkm68k.bat, mkpmac.bat, pmac.mkf
fpw32\conv\mac\m68k\_xtos.c, _xtou.c, cfinl.c, cfout.c, clfout.c, cvt.c,
    decode.a, fpdata.c, fpinit.c, lddata.c, ldinit.c, libcinfo.c
fpw32\conv\mac\pmac\dtoi.asm, dtoi64.asm, dtou.asm, dtou64.asm, fpinit.c,
    ftou.asm, i64tod.asm, itod.asm, itof.asm, u64tod.asm, utod.asm, utof.asm
fpw32\include\mac\transl.h
fpw32\include\mac\m68k\sane.a, trans.a, traps.a
fpw32\tran\special.mak
fpw32\tran\mac\m68k\_fpxpt.c, asincosl.c, atan2.c, atan2l.c, bessell.c, ceil.a,
    ceill.a, error.a, exphlp.c, exphlpl.c, fabs.a, fabsl.a, floor.a, floorl.a,
    fmod.a, fmodl.a, fpctrl.a, frexpl.c, frnd.a, frndl.a, fsqrt.c, fsqrtl.c,
    huge.a, hypotl.c, iceil.a, ieee.c, ifloor.a, ifmod.a, isqrt.a, itran.a,
    itrig.a, itriga.a, itrigh.a, ldexpl.c, matherr.c, matherrl.c, modfl.c,
    sincoshl.c, sqrt.a, sqrtl.a, tanhl.c, tran.a, tranl.a, trig.a, triga.a,
    trigal.a, trigh.a, trighl.a, trigl.a, utill.c
fpw32\tran\mac\pmac\_fpctrl.c, _fpxpt.c, fpctrl.asm, frnd.c, huge.c, ieee.c
libw32\include\mrc\cfrg.r, cfrg1024.r, cfrg256.r, cfrg512.r
libw32\lib\mppc\cfrg.rsc, cfrg1024.rsc, cfrg256.rsc, cfrg512.rsc
libw32\tools\m68k\aliasobj.exe
libw32\tools\pmac\aliasobj.exe, detab.exe, ifstrip.exe, pd.exe, striphdr.exe,
    tolwrupr.exe, trailing.exe
srcrel\_sample_.r

    Mac-only files delfiled from source tree.

-----------------------------------------------------------------

Fri 14-May-99   (PhilipLu)

crtw32\h\assert.h, conio.h, ctype.h, direct.h, dos.h, eh.h, errno.h, excpt.h,
    float.h, fpieee.h, io.h, locale.h, malloc.h, math.h, mbctype.h, mbstring.h,
    memory.h, new.h, process.h, search.h, setjmp.h, signal.h, stddef.h, stdio.h,
    stdlib.h, string.h, time.h, wchar.h
crtw32\h\sys\stat.h, timeb.h, utime.h
crtw32\stdhpp\wctype.h
fpw32\include\cv.h, trans.h
libw32\include\assert.h, conio.h, ctype.h, direct.h, dos.h, eh.h, errno.h,
    excpt.h, float.h, fpieee.h, io.h, locale.h, malloc.h, math.h, mbctype.h,
    mbstring.h, memory.h, new.h, process.h, search.h, setjmp.h, signal.h,
    stddef.h, stdio.h, stdlib.h, string.h, time.h, wchar.h, wctype.h
libw32\include\sys\stat.h, timeb.h, utime.h
srcrel\msvc40.if

    Remove all defs of _CRTAPI1/2. There were no uses.

crtw32\h\win32s.h [delfiled]
crtw32\heap\handler.cpp, heapinit.c, malloc.c, oldnew.c, _newmode.c
crtw32\iostream\cerrinit.cpp, cininit.cpp, cloginit.cpp, iostrini.cpp
crtw32\linkopts\newnew.c
crtw32\lowio\lowio.mkf
crtw32\misc\ctype.c, dbghook.c, inithelp.c, lconv.c, misc.mkf, nlsdata1.c,
    nlsdata3.c, wsetloca.c
crtw32\startup\mlock.c
crtw32\stdio\ncommode.c, rmtmp.c, stream.c, tmpfile.c
crtw32\time\timeset.c
doc\copysrc.bat
fpw32\tran\matherr.c
libw32\buildall.cmd, makefile, msvcrt.src
srcrel\msvc40.if, pd-b

    Eliminate all Win32s code still hanging around.

-----------------------------------------------------------------

Thu 13-May-99   (PhilipLu)

crtw32\stdcpp\iosptrs.cpp
crtw32\stdhpp\xstddef
libw32\include\xstddef

    Missing __cdecl in prototype for _Loc_atexit.

-----------------------------------------------------------------

Thu 13-May-99   (PhilipLu)

makefile
crtw32\dllstuff\crtdll.c, crtexe.c
crtw32\h\rtcapi.h, rtcpriv.h, rtcsup.h
crtw32\misc\alpha\chkesp.c
crtw32\misc\i386\chkesp.c
crtw32\rtc\bintree.cpp, callsite.cpp, chsyheap.cpp, contain.cpp, convert.cpp,
    error.cpp, fileio.cpp, init.cpp, initsect.cpp, memory.cpp, pdblkup.cpp,
    shadow.cpp, stack.cpp, userapi.cpp
crtw32\startup\crt0.c, crt0dat.c, dllcrt0.c
crtw32\stdcpp\delaop.cpp, delop.cpp, newaop.cpp, newaop2.cpp, newop.cpp,
    newop2.cpp
libw32\include\rtcapi.h
libw32\msvcrt.src
srcrel\msvc40.if

    _CC_RUNTIME_CHECKS -> _RTC and other minor RTC cleanup

-----------------------------------------------------------------

Wed 12-May-99   (PhilipLu)

makefile, makefile.inc, makefile.sub
crtw32\eh\rtti.cpp
crtw32\heap\expand.c, free.c, malloc.c, new2.cpp
crtw32\misc\dbgheap.c, lsources
crtw32\misc\alpha\setjmp.s, setjmpex.s
crtw32\stdcpp\locale.cpp, locale0.cpp, wlocale.cpp, xlocale.cpp,
    xstrcoll.c, xwcscoll.c
crtw32\stdhpp\ostream, streambuf, xlocale
libw32\msvcrt.src
libw32\include\ostream, rtcapi.h, streambuf, xlocale
srcrel\makefile, objects.mkf

    Improve method used to disable RTC support in Win64.  Fix Win64 build
    for Alpha64 and IA64.

-----------------------------------------------------------------

Tue 11-May-99   (KFrei)

This stuff moves all the runtime check code under #ifdef _CC_RUNTIME_CHECKS

makefile

    Only define _CC_RUNTIME_CHECKS for non LLP64 builds

crtw32\dllstuff\crtdll.c, crtexe.c
crtw32\startup\crt0.c, crt0dat.c, dllcrt0.c

    #ifdef'ed RTC init and term code

crtw32\h\rtcapi.h, rtcpriv.h, rtcsup.h
crtw32\libw32\include\rtcapi.h

    #ifdef'ed the entire contents of the headers

crtw32\misc\alpha\chkesp.c
crtw32\misc\i386\chkesp.c

    #ifdef'ed the initialization, shutdown and syncronization stuff

crtw32\rtc\bintree.cpp, callsite.cpp, chsyheap.cpp, contain.cpp, convert.cpp,
    error.cpp, fileio.cpp, init.cpp, initsect.cpp, memory.cpp, pdblkup.cpp,
    shadow.cpp, stack.cpp, userapi.cpp

    Everything is now empty #ifndef _CC_RUNTIME_CHECKS

crtw32\stdcpp\delaop.cpp, delop.cpp, newaop.cpp, newaop2.cpp, newop.cpp, newop2.cpp

    Put all the usage of the RTC code under _CC_RUNTIME_CHECKS

crtw32\libw32\msvcrt.src

    put _CRT_RTC_INIT export under #ifdef _CC_RUNTIME_CHECKS

-----------------------------------------------------------------

Mon 10-May-99   (GregF)

crtw32\convert\wcstombs.c, wctomb.c
crtw32\misc\a_loc.c, a_map.c, w_cmp.c, w_map.c, w_str.c
crtw32\stdcpp\xwctomb.c
crtw32\time\tzset.c
    Changed the dwFlags argument to WideCharToMultiByte to be zero.  This was
    suggested by K. D. Chang to avoid problems with codepage 1258 on NT 5.0.

-----------------------------------------------------------------

Wed 05-May-99   (rlanser)

These are all ports from the CRT64 or CRT64_SIZET_32 trees (PhilipLu)

makefile
    link /debugtype:both,fixup for IA64

crtw32\eh\frame.cpp
    Add __unaligned.

crtw32\misc\assert.c
    Define _DbgBreak for IA64.

crtw32\h\crtdbg.h
libw32\include\crtdbg.h
    Define _CrtDbgBeak for IA64.

fpw32\conv\tenpow.c
fpw32\include\cv.h
    Added _M_IA64 to alignment #if's.

-----------------------------------------------------------------

Wed 05-May-99   (PhilipLu)

srcrel\clnsrcrel.bat, makefile
    Don't copy platform-specific files of other platforms.  Saves copying about
    500 files on 32-bit x86 build.

crtw32\eh\throw.cpp
    Buildfix for newer Win headers with new prototype of RaiseException, while
    still allowing build with old headers missing definition of PULONG_PTR.

crtw32\misc\alpha\chandler.c
crtw32\startup\alpha\chkstk.s
    Buildfixes for 32-bit Alpha build after 64-bit merge.

-----------------------------------------------------------------

Tue 04-May-99   (PhilipLu)

crtw32\dllstuff\ia64\dllsupp.c
crtw32\h\sect_attribs.h
crtw32\misc\ia64\chandler.c, cinitone.s, jmpuwind.s, longjmp.s, memcpys.s,
        memsets.s, miscs.s, setjmp.s, setjmpex.s
crtw32\startup\ia64\chkstk.s, fp8.c,
crtw32\stdcpp\dirs, sources.nt
crtw32\stdcpp\stp\makefile, sources
fpw32\conv\psx\makefile, sources
fpw32\tran\axp64\acos.s, acosf.s, asin.s, asinacos.s, asinf.s, ata_tabs.s,
        ata_tabt.s, atan2f.s, atan2s.s, atanf.s, atans.s, cabs.s, cabsf.s,
        captcont.s, ceilf.s, ceils.s, chopt.s, copysgnf.s, cos_vo.s, cosf.s,
        cosf_vo.s, cosh.s, coshf.s, coss.s, cot.s, cotf.s, dpml_com.s, expf.s,
        exps.s, f_acos.s, f_acosf.s, f_asin.s, f_asinf.s, f_atan.s, f_atan2.s,
        f_atan2f.s, f_atanf.s, f_cos.s, f_cosf.s, f_exp.s, f_expf.s, f_hypot.s,
        f_hypotf.s, f_log.s, f_log10.s, f_log10f.s, f_logf.s, f_pow.s, f_powf.s,
        f_sin.s, f_sincof.s, f_sincos.s, f_sinf.s, f_sqrt.s, f_sqrtf.s, f_tan.s,
        f_tanf.s, fabsf.s, fabss.s, finitef.s, floorf.s, floors.s, fmodf.s,
        fmods.s, fp_clasf.s, fpctrl.s, fpint.s, frexp.s, frexpf.s, frnd.s,
        huge.s, hypotf.s, hypots.s, invtrigs.s, invtrigt.s, isnanf.s, j0f.s,
        j1f.s, jnf.s, l10_tabt.s, ldexp.s, log10f.s, log10s.s, log_tabt.s,
        logbf.s, logf.s, logs.s, modff.s, modfs.s, nextaftf.s, pow_tabt.s,
        powcerr.s, powf.s, pows.s, rsqrt.s, rsqrtf.s, sin_tabt.s, sin_vo.s,
        sincofvo.s, sincos.s, sincosf.s, sincosvo.s, sinf.s, sinf_vo.s, sinh.s,
        sinhcosf.s, sinhcosh.s, sinhf.s, sins.s, specexp.s, specexpf.s,
        sqr_tabt.s, sqrtf.s, sqrts.s, tan_tabt.s, tanf.s, tanh.s, tanhf.s,
        tans.s, trig_rdf.s, trig_rdx.s, trig_tab.s, y0f.s, y1f.s, ynf.s
fpw32\tran\ia64\asincosf.c, atan2f.c, atanf.c, ceilf.c, em_types.h, emfloat.s,
        expf.c, fabsf.c, filter.c, floorf.c, fmodf.c, fp80.s, fp80c.c, fpctrl.c,
        fpieee_flt.h, frnd.s, huge.s, ieee.c, log10f.c, logf.c, powf.c,
        sincosf.c, sincoshf.c, sqrtf.c, tanf.c, tanhf.c
fpw32\tran\psx\makefile, sources
libw32\lib\axp64\
libw32\lib\ia64\
libw32\lib\stp\makefile, makefile.inc, sources
libw32\tools\ia64\aliasobj.exe, detab.exe, ifstrip.exe, pd.exe, striphdr.exe,
        tolwrupr.exe, trailing.exe

    Merging 64-bit CRT with 32-bit CRT.  Added new files from the CRT 64 tree.

log_64.txt

    Merging 64-bit CRT with 32-bit CRT.  Save log.txt from CRT 64 tree under
    new name.

makefile
makefile.inc
makefile.sub
crtw32\crt32.nt, dirs
crtw32\convert\_mbslen.c, atof.c, mblen.c, mbstowcs.c, strtod.c, wcstombs.c
crtw32\direct\findf64.c, findfile.c
crtw32\dllstuff\cinitexe.c, crtdll.c, crtexe.c, lsources
crtw32\dllstuff\dlllib\sources
crtw32\dos\fullpath.c
crtw32\eh\frame.cpp, lsources, oldexcpt.cpp, oldexcpt.h, sources.nt, throw.cpp,
        unhandld.cpp
crtw32\eh\alpha\bridge.s, ehunwind.c, xcptmisc.h, xcptmisc.s
crtw32\eh\dll\sources
crtw32\eh\ia64\ehstate.cpp, handlerc.cpp, handlers.s, trnsctrl.cpp
crtw32\eh\mt\sources
crtw32\eh\nt\sources
crtw32\eh\st\sources
crtw32\exec\cenvarg.c, dospawn.c, execl.c, execle.c, execlp.c, execlpe.c,
        execv.c, execvp.c, execvpe.c, getproc.c, loaddll.c, spawnl.c,
        spawnle.c, spawnlp.c, spawnlpe.c, spawnv.c, spawnve.c, spawnvp.c,
        spawnvpe.c, system.c, wait.c
crtw32\h\assert.h, conio.h, crtdbg.h, cruntime.h, ctime.h, ctype.h, direct.h,
        dos.h, eh.h, ehstate.h, errno.h, excpt.h, float.h, fpieee.h, heap.h,
        internal.h, io.h, locale.h, malloc.h, math.h, mbctype.h, mbstring.h,
        memory.h, mtdll.h, new.h, nlsint.h, process.h, search.h, setjmp.h,
        signal.h, stdarg.h, stddef.h, stdexcpt.h, stdio.h, stdlib.h, streamb.h,
        string.h, time.h, trnsctrl.h, varargs.h, wchar.h, winheap.h
crtw32\h\sys\stat.h, timeb.h, types.h, utime.h
crtw32\heap\new.cpp
crtw32\heap\dll\sources
crtw32\heap\mt\sources
crtw32\heap\st\sources
crtw32\helper\lsources, sources.nt
crtw32\iostream\_strstre.cpp, ostream.cpp, stdiostr.cpp, streamb.cpp
crtw32\linkopts\lsources
crtw32\lowio\cgets.c, close.c, cputs.c, dup.c, dup2.c, getch.c, initcon.c,
        ioinit.c, open.c, osfinfo.c, pipe.c, putch.c, read.c, write.c
crtw32\mbstring\mbctype.c, mbsnbcol.c, mbsnbico.c, mbsncoll.c, mbsnicol.c,
        sources.nt
crtw32\misc\a_env.c, bsearch.c, charmax.c, dbgheap.c, dbgnew.cpp, dbgrpt.c,
        getenv.c, lsources, onexit.c, perror.c, putenv.c, qsort.c, setenv.c,
        setlocal.c, splitpat.c, w_env.c, wperror.c, wsetloca.c
crtw32\misc\alpha\chandler.c, ghandler.c, jmpuwind.s, longjmp.s, otsjmp.s,
        otsjmpex.s
crtw32\misc\dll\sources
crtw32\misc\mt\sources
crtw32\misc\nt\sources
crtw32\misc\psx\sources
crtw32\misc\st\sources
crtw32\startup\crt0.c, crt0dat.c, crt0init.c, crt0msg.c, lsources, startup.mkf,
        stdenvp.c, thread.c, threadex.c, tidtable.c, tlssup.c, wild.c
crtw32\startup\alpha\chkstk.s
crtw32\startup\dll\sources
crtw32\startup\dlllib\sources
crtw32\startup\mt\sources
crtw32\startup\nt\sources
crtw32\startup\psx\sources
crtw32\startup\st\sources
crtw32\stdcpp\xstrcoll.c, xstrxfrm.c, xwcscoll.c, xwcsxfrm.c
crtw32\stdio\_file.c, _flsbuf.c, fflush.c, fputs.c, fputws.c, fread.c, ftell.c,
        ftelli64.c, fwrite.c, input.c, output.c, popen.c, puts.c, rmtmp.c,
        setvbuf.c, sprintf.c, sscanf.c, swprintf.c, swscanf.c, tempnam.c,
        vsprintf.c, vswprint.c
crtw32\string\lsources, memcpy.c, memmove.c, memset.c, sources.nt, strncoll.c,
        strnicol.c, strset.c, strxfrm.c, wcscspn.c, wcsncoll.c, wcsnicol.c,
        wcsspn.c, wcsxfrm.c
crtw32\time\clock.c, dtoxtime.c, gmtime.c, localtim.c, mktime.c, wcsftime.c
fpw32\conv\cfin.c, fltinf.c, fpinit.c
fpw32\include\cv.h, trans.h
fpw32\tran\asincos.c, atan.c, bessel.c, ceil.c, exp.c, fabs.c, floor.c, fmod.c,
        fpexcept.c, frexp.c, hypot.c, ieeemisc.c, ldexp.c, log.c, lsources,
        modf.c, pow.c, sincos.c, sincosh.c, sources.nt, sqrt.c, tan.c, tanh.c
fpw32\tran\alpha\dpml_exc.c, filter.c
fpw32\tran\i386\filter_simd.c, xmmi_fp_emul.c
libw32\makefile, msvcirt.src, msvcrt.src
libw32\include\assert.h, conio.h, crtdbg.h, ctype.h, direct.h, dos.h, eh.h,
        errno.h, excpt.h, float.h, fpieee.h, io.h, locale.h, malloc.h, math.h,
        mbctype.h, mbstring.h, memory.h, new.h, process.h, search.h, setjmp.h,
        signal.h, stdarg.h, stddef.h, stdexcpt.h, stdio.h, stdlib.h, streamb.h,
        string.h, time.h, varargs.h, wchar.h
libw32\include\sys\stat.h, timeb.h, types.h, utime.h
libw32\lib\dirs, sources.nt
srcrel\external.mkf, makefile, mkclnmkf.c, msvc40.if, objects.mkf, pd-b

    Merging 64-bit CRT with 32-bit CRT.  Merged in diffs from CRT 64 tree.

crtw32\heap\calloc.c, expand.c, free.c, heapchk.c, heapinit.c, heapmin.c,
        malloc.c, msize.c, realloc.c, sbheap.c

    Merging 64-bit CRT with 32-bit CRT.  Merged in diffs from CRT 64 tree.
    Also, disable the small block heap under Win64.  All heap routines just
    pass through to the underlying OS APIs.

-----------------------------------------------------------------

Mon 26-Apr-99   (PhilipLu)

crtw32\eh\comerr.cpp
crtw32\h\comerr.h
crtw32\winheap\*.*
libw32\include\comerr.h
    Delfile unnecessary files

-----------------------------------------------------------------

Mon 26-Apr-99   (PhilipLu)

crtw32\h\mtdll.h, setlocal.h
crtw32\misc\initmon.c, initnum.c, setlocal.c
crtw32\startup\tidtable.c
    Introduced one more reference counter for pieces of the per-thread locale
    information, cleaned up more setlocale memory leaks.

-----------------------------------------------------------------

Fri 16-Apr-99   (GregF)

crtw32\heap\realloc.c
    Added a call to __sbh_find_block to handle the case where __sbh_alloc_block
    has caused the header list to be moved.  This fixes VS7 #14020.

-----------------------------------------------------------------

Wed 14-Apr-99   (PhilipLu)

crtw32\stdcpp\delaop.cpp, delop.cpp, newaop.cpp, newaop2.cpp, newop.cpp,
        newop2.cpp

    Add back RTC functionality wiped out by STL integration (whoops)

crtw32\stdcpp\iosptrs.cpp
crtw32\stdhpp\xstddef

    Missing __cdecl in funcptr arg to _Loc_atexit

crtw32\stdhpp\cassert, iosfwd

    Minor cleanup missed in STL integration

crtw32\tools\win32\relinc.cmd

    Add STL header xlocmes to cleansing

-----------------------------------------------------------------

Tue 13-Apr-99   (PhilipLu)

makefile, makefile.inc, srcrel\pd-b

    Add new files stdcpp\cerr.cpp, stdcpp\cin.cpp, stdcpp\clog.cpp,
    stdcpp\cout.cpp, stdcpp\iosptrs.cpp, stdcpp\wcerr.cpp, stdcpp\wcin.cpp,
    stdcpp\wclog.cpp, stdcpp\wcout.cpp, stdhpp\hash_map, stdhpp\hash_set,
    stdhpp\xhash, libw32\include\hash_map, libw32\include\hash_set,
    libw32\include\xhash.

doc\copysrc.bat

    Add new files, plus missing files delaop.cpp, dealop_s.cpp, newaop.cpp,
    newaop2.cpp, newaop_s.cpp, newaop2_s.cpp, stdthrow.cpp.

crtw32\stdcpp\cerr.cpp [NEW], cin.cpp [NEW], clog.cpp [NEW], cout.cpp [NEW],
        delaop.cpp, delop.cpp, fiopen.cpp, iomanip.cpp, ios.cpp,
        iosptrs.cpp [NEW], iostream.cpp, locale.cpp, LOCALE0.CPP, newaop.cpp,
        newaop2.cpp, newop.cpp, newop2.cpp, nomemory.cpp, stdthrow.cpp,
        string.cpp, strstrea.cpp, uncaught.cpp, wcerr.cpp [NEW], wcin.cpp [NEW],
        wclog.cpp [NEW], wcout.cpp [NEW], wctrans.c, wctype.c, wiostrea.cpp,
        wlocale.cpp, xcosh.c, xdnorm.c, xdscale.c, xdtest.c, xexp.c, xfcosh.c,
        xfdnorm.c, xfdscale.c, xfdtest.c, xfexp.c, xfsinh.c, xfvalues.c,
        xlcosh.c, xldnorm.c, xldscale.c, xldtest.c, xlexp.c, xlocale.cpp,
        xlpoly.c, xlsinh.c, xlvalues.c, xmath.h, xmbtowc.c, xpoly.c, xsinh.c,
        xstod.c, xvalues.c, xwctomb.c

    Update all files to Plauger's drop of 12/15/98.

crtw32\stdhpp\algorithm, bitset, cassert, cctype, cerrno, cfloat, ciso646,
        climits, clocale, cmath, complex, csetjmp, csignal, cstdarg, cstddef,
        cstdio, cstdlib, cstring, ctime, cwchar, cwctype, deque, exception,
        fstream, functional, hash_map [NEW], hash_set [NEW], iomanip, ios,
        iosfwd, iostream, iso646.h, istream, iterator, limits, list, locale,
        map, memory, new, numeric, ostream, queue, set, sstream, stack,
        stdexcept, streambuf, string, strstream, typeinfo, utility, valarray,
        vector, xcomplex, xhash [NEW], xiosbase, xlocale, xlocinfo, xlocinfo.h,
        xlocmes, xlocmon, xlocnum, xloctime, xmemory, xstddef, xstring, xtree,
        xutility, ymath.h, yvals.h

    Update all files to Plauger's drop of 12/15/98.

crtw32\tools\win32\relinc.cmd

    Cleanse and copy new STL headers hash_map, hash_set, and xhash.

libw32\include

    Update all STL headers to Plauger's drop of 12/15/98.

-----------------------------------------------------------------

Fri 09-Apr-99   (v-JohnMo)

crtw32\helper\lsources
crtw32\helper\sources.nt
crtw32\helper\alpha\sfillx.s
crtw32\helper\alpha\sfwdcpy.s
srcrel\objects.mkf
srcrel\pd-b
    Added a couple of helper functions for Alpha UTC backend support

-----------------------------------------------------------------

Thu 08-Apr-99   (GregF)

crtw32\convert\mbtowc.c
    Replaced MT with _MT, oops...

-----------------------------------------------------------------

Thu 08-Apr-99   (GregF)

crtw32\h\mtdll.h, setlocal.h
crtw32\misc\initctyp.c, initmon.c, initnum.c, setlocal.c
crtw32\startup\tidtable.c
crtw32\time\strftime.c
    Introduced more reference counters for pieces of the per-thread locale
    information.

-----------------------------------------------------------------

Wed 07-Apr-99   (PhilipLu)

log.txt -> log_v60.txt
    Renamed old LOG.TXT from V6.0 and started a new LOG.TXT (this file).

-----------------------------------------------------------------


***************************************************************************
***************************************************************************
***                                                                     ***
***  This file contains the history for MSVC++ v7.0 (relative to v6.0)  ***
***  The file should always be edited at the top so that the most       ***
***  recent changes are at the beginning of the file and the oldest     ***
***  changes are at the end of the file.  This comment marks the end.   ***
***                                                                     ***
***************************************************************************
***************************************************************************
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\base\crts\log_v50.txt ===
***************************************************************************
***************************************************************************
***                                                                     ***
***   This file contains the change history for the MSVC++ v5.0 C/C++   ***
***   Run-Time Libraries (that is, modifications since since 4.2).      ***
***   The file should always be edited at the top so that the most      ***
***   recent changes are at the beginning of the file (immediately      ***
***   after this comment) and the oldest changes are at the end.        ***
***                                                                     ***
***************************************************************************
***************************************************************************

-----------------------------------------------------------------

Thu 09-Jan-97   (JamesMa)

crtw32\stdhpp\xutility, libw32\include\xutility
        _MIN & _MAX template names were changed back to _cpp_min & _cpp_max, as documented.

-----------------------------------------------------------------

Wed 08-Jan-96	(GregF)

crtw32\h\wchar.h
crtw32\stdhpp\complex, iomanip, iosfwd, istream, limits, locale, new, string,
	utility, wctype.h, xcomplex, xiosbase, xlocale, xlocmon, xlocnum, 
	xloctime, ymath.h
libw32\include\complex, iomanip, iosfwd, istream, limits, locale, new, string,
	utility, wchar.h, wctype.h, xcomplex, xiosbase, xlocale, xlocmon, xlocnum,
	xloctime, ymath.h
		Added __cdecl-s to function definitions and prototypes where necessary
		in order to pass the C++ conformance tests when built -Gr or -Gz (the 
		tests, not the C++ rtl sources)

-----------------------------------------------------------------

Thu 19-Dec-96   (v-JohnMo)

makefile, makefile.inc, srcrel\objects.mkf, srcrel\pd-b,
crtw32\helper\lsources,
crtw32\helper\sources.nt,
crtw32\string\lsources,
crtw32\string\sources.nt
	add helper functions for intrinsic memcpy & memset,
	build separate memmove file
crtw32\helper\ppc\memcpy_.s
	intrinsic helper for memcpy
crtw32\helper\ppc\memset_.s
	intrinsic helper for memset
crtw32\string\ppc\memcmpp.s
	improve memcmp performance
crtw32\string\ppc\memcpyp.s
	forward memcpy() to __memcpy()
crtw32\string\ppc\memmovep.s
	separated memmove() from memcpy()
crtw32\string\ppc\memsetp.s
	forward memset() to __memset()
crtw32\startup\ppc\chkstk.s
	correct function table definition
crtw32\eh\ppc\handlers.s
	add descriptors for new entry points so they can be exported
libw32\msvcrt.src
	export new entry points for EH helper

-----------------------------------------------------------------

Wed 11-Dec-96   (Richk)

crtw32\stdhpp\xstring, libw32\include\xstring
        In _Split, do not split data if frozen (refcnt is -1).
crtw32\stdhpp\xcomplex, libw32\include\xcomplex
		Cast floating constants to avoid compiler warnings.

-----------------------------------------------------------------

Wed 11-Dec-96   (JamesMa)

crtw32\stdhpp\xlocale, crtw32\stdhpp\xiosbase, crtw32\stdhpp\xcomplex
libw32\include\xlocale, libw32\include\xiosbase, libw32\include\xcomplex
crtw32\stdcpp\xfexp.c, crtw32\stdcpp\xfsinh.c
        Casts now required to avoid newly-generated warnings.

-----------------------------------------------------------------

Tue 10-Dec-96   (JamesMa)

makefile, cleanbld.cmd, clns_bld.bat
srcrel/makefile, srcrel/external.mkf, srcrel/bldnt.cmd, srcrel/bldwin95.bat
        Environment variable "V4TOOLS" replaced by "V5TOOLS".

-----------------------------------------------------------------

Fri 06-Dec-96   (JamesMa)

crtw32\stdhpp\new, crtw32\h\new.h, libw32\include\new, libw32\include\new.h
        Both new.h & new now have the inline placement new(), both
        #ifndef __PLACEMENT_NEW_INLINE.

All released source files (and then some) have had their copyright
        notices updated to 1997.

-----------------------------------------------------------------

Fri 06-Dec-96   (GregF)

crtw32\stdhpp\memory
libw32\include\memory
		Replace member template functions in auto_ptr<_Ty> with, essentially, 
		their 'specializations' for _Ty. Note, the compiler does NOT support
		member template functions.

-----------------------------------------------------------------

Thu 05-Dec-96   (JamesMa)

crtw32\stdhpp\ostream, crtw32\stdhpp\iosfwd
libw32\include\ostream, libw32\include\iosfwd
        Numerous __cdecl's added, esp. to insertion and extraction
        operators (Orion 18173). Another tip of the hat to RichardS ...

-----------------------------------------------------------------

Wed 04-Dec-96   (Richk)

libw32\include\algorithm
crtw32\stdhpp\algorithm
		In _Buffered_merge_sort, the second call to _Chunked_merge
		must not use _F ("first" iterator for start of sorting area
		in the container) as the third parameter as it is modified to
		be the end of the merge area.  This modification is needed
		for the first _Chunked_merge call, but not the second.

-----------------------------------------------------------------

Wed 04-Dec-96   (JamesMa)

crtw32\h\new.h, libw32\include\new.h
        No longer includes <new> (Orion 16439).
crtw32\stdcpp\newop.cpp
        Throwing new() now /Za only, i.e. removed.
crtw32\stdhpp\new, libw32\include\new
        new_handler moved up to global scope.

-----------------------------------------------------------------

Tue 03-Dec-96   (Richk)

libw32\include\algorithm
crtw32\stdhpp\algorithm
		For rotate_copy, merge, set_union, and set_symmetric_difference,
		do not use temp iterator on left side of assign because output
		iterators will not support it.  Nest the copy calls to avoid this.

-----------------------------------------------------------------

Thu 28-Nov-96   (Richk)

libw32\include\xstring
crtw32\stdhpp\xstring
		For erase and replace on multiply-referenced string,
		split the reference away to avoid aliasing change to
		the other string objects.

-----------------------------------------------------------------

Tue 26-Nov-96   (Richk)

libw32\include\complex, iosfwd, istream, locale, ostream,
               xlocinfo, xlocmon, xloctime
crtw32\stdhpp\complex, iosfwd, istream, locale, ostream,
              xlocinfo, xlocmon, xloctime
crtw32\stdcpp\dlldef.cpp
		Finish moving iostream, locale, and complex into
		C++ DLL.

-----------------------------------------------------------------

Fri 22-Nov-96   (GregF)

crtw32\eh\unhandld.cpp
		Explicitly install __CxxUnhandledExceptionFilter during C init., 
		remove it during C term. Also, cleaned up the format a bit so I could
		read it.

-----------------------------------------------------------------

Thu 21-Nov-96   (JamesMa)

makefile
        Added debug info to BBT builds of msvc[i|p]rt.lib.

-----------------------------------------------------------------

********************************************************************
***** MSVC++ 5.0 BETA RELEASE #2 -- Wednesday 20 November 1996 *****
********************************************************************

-----------------------------------------------------------------

Tue 12-Nov-96   (Richk)

libw32\include\istream, ostream
crtw32\stdhpp\istream, ostream
		Prevent memory leak for strstream object due to initializing
		basic_ios::init twice.

-----------------------------------------------------------------

Sun 10-Nov-96   (GregF)

crtw32\stdhpp\iosfwd, xiosbase, xlocale, xtree
crtw32\stdcpp\locale.cpp, locale0.cpp, wlocale.cpp, xlocale.cpp
libw32\include\iosfwd, xiosbase, xlocale, xtree
        Minor changes to serialize access to static data members of templates
        and classes.

-----------------------------------------------------------------

Sat 09-Nov-96   (Richk)

libw32\include\new, memory, valarray
		Proxy checkin for updated crtw32\stdhpp files.
crtw32\stdhpp\fstream, libw32\include\fstream
		Decrement locale use count before allocating it a second
		time to prevent memory leak..
crtw32\stdhpp\xlocale, libw32\include\xlocale
		Use atexit to free _Ctype._Table so it is not leaked.

-----------------------------------------------------------------

Thu 07-Nov-96   (JamesMa)

crtw32\stdcpp\Xsinh.c, Xfsinh.c, Xlsinh.c
        Bug fix for Orion 15295: _Sinh() & co. were calculated incorrectly.

-----------------------------------------------------------------

Wed 06-Nov-96   (JamesMa)

crtw32\stdhpp\new, crtw32\heap\stdnew.cpp
        Moved set_new_handler() from namespace std back to global scope.
crtw32\stdhpp\memory
        Now using member templates in auto_ptr (Orion 15092).
crtw32\stdhpp\valarray
        Transcendental valarry operators (e.g. tanh) now resolve to global
        scope (Orion 15011).

-----------------------------------------------------------------

Sat 02-Nov-96   (Richk)

makefile, makefile.inc (changed)
crtw32\stdhpp\complex, exception, iomanip, iosfwd, limits, locale,
              new, stdexcept, strstream, wctype.h, xiosbase, xlocale,
			  xlocinfo, xlocinfo.h, xlocnum, xmemory, xstddef,
			  xstring, ymath.h, yvals.h (changed)
crtw32\stdcpp\_tolower.c, _toupper.c, fiopen.cpp, iomanip.cpp,
              ios.cpp, iostream.cpp, locale.cpp, newop.cpp,
			  nomemory.cpp, string.cpp, strstrea.cpp, uncaught.cpp,
			  wctrans.c, wctype.c, wiostrea.cpp, xcosh.c, xdnorm.cpp,
			  xdscale.c, xdtest.c, xexp.c, xfcosh.c, xfdnorm.c,
			  xfdscale.c, xfdtest.c, xfexp.c, xfsinh.c, xfvalues.c,
			  xlcosh.c, xldnorm.c, xldscale,c, xldtest.c, xlexp.c,
			  xlpoly.c, xlsinh.c, xlvalues.c, xmath.h, xmbtowc.c,
			  xpoly.c, xsinh.c, xstod.c, xstrcoll.c, xstrxfrm.c,
			  xvalues.c, xwctomb.c (changed)
crtw32\stdcpp\delop_s.cpp, dlldef.cpp, newop_s.cpp, newop2_s.cpp (added)
srcrel\external.mkf, mkclnmkf.c, objects.mkf, pd-b (changed)
libw32\msvcp50.rc (added)
libw32\include\algorithm, bitset, cassert, cctype, cerrno. cfloat,
               ciso646, climits, clocale, cmath, complex, csetjmp,
               csignal, cstdarg, cstddef, cstdio, cstdlib, cstring,
			   ctime, cwchar, cwctype, deque, exception, fstream,
			   functional, iomanip, ios, iosfwd, iostream, iso646.h,
			   istream, iterator, limits, list, locale, map, memory,
			   new, numeric, ostream, queue, set, sstream, stack,
			   stdexcept, stl.h, streambuf, string, strstream,
			   typeinfo, use_ansi.h, utility, valarray, vector,
			   wctype.h, xcomplex, xiosbase, xlocale, xlocinfo,
			   xlocinfo.h, xlocmon, xlocnum, xloctime, xmath.h,
			   xmemory, xstddef, xstring, xtree, xutility, ymath.h,
			   yvals.h (added)
			   wchar.h (changed)
        Files changed and added to support first cut of DLL version
        of C++ standard libraries.

-----------------------------------------------------------------

Fri 01-Nov-96   (JamesMa)

crtw32\stdhpp\yvals.h
        Warning C4244 moved from disabled to /W4; C4514 added to disabled list.
doc\copycrt.bat
        Added msvcp50.dll, removed msvcrt40.dll, all headers assumed to be in
        libw32\include, made BBT drop to x86e automatic.
doc\copysrc.bat
        Added delop_s.cpp, dlldef.cpp, newop_s.cpp, newop2_s.cpp and xcomplex
fpw32\tran\tran.mkf, lsources
        Removed 87csqrt & 87ctrig, which contained only "old" variants.
fpw32\tran\i386\87ctran.asm, 87ctriga.asm, 87sqrt.asm, 87tran.asm, 87trig.asm, 87triga.asm
        Cleansed all "old" variant code, primarily jump tables.

-----------------------------------------------------------------

Thu 31-Oct-96   (JamesMa)

crtw32\stdcpp\iomanip.cpp, ios.cpp, iostream.cpp, locale.cpp, locale0.cpp,
            newop.cpp, newop2.cpp, nomemory.cpp, string.cpp, xlock.cpp
        Upgraded to Plauger's 10/30/96 drop.
crtw32\stdhpp\algorithm, bitset, complex, deque, exception, fstream, functional,
            iomanip, ios, iosfwd, iostream, istream, iterator, limits, list,
            locale, map, memory, new, numeric, ostream, queue, set, sstream, stack,
            stdexcept, stl.h, streambuf, string, strstream, typeinfo, utility,
            valarray, vector, xiosbase, xlocale, xlocinfo, xlocinfo.h, xlocmon,
            xlocnum, xloctime, xmemory, xstddef, xstring, xtree, xutility, yvals.h
        Upgraded to Plauger's 10/30/96 drop.
crtw32\stdhpp\xcomplex
        New file in Plauger's 10/30/96 drop.
crtw32\heap\setnewh.cpp
        set_new_handler() now in namespace std.

-----------------------------------------------------------------

Wed 30-Oct-96   (JamesMa)

makefile
        Added "-opt:NOICF" to bbt\msvcrt.dll link.
libw32\msvcrt.rc, libw32\msvcirt.rc, libw32\msvcp42.rc
        Rev'ed "Copyright" to "1981-1997"
srcrel\_sample_.rc
        Rev'ed "Copyright" to "1981-1997", "ProductVersion" to "5.00.0000"

-----------------------------------------------------------------

Tue 22-Oct-96   (JamesMa)

makefile
        Removed "-pdb:none" from bbt\msvcrt.dll link.

-----------------------------------------------------------------

Tue 22-Oct-96   (GregF)

crtw32\misc\assert.c
        Fixed an overwrite of the user's filename string and a miscount of
        newline characters (double-newline was being counted as a single
        newline).

-----------------------------------------------------------------

Sat 13-Oct-96   (Richk)

crtw32\stdhpp\xstring
    In Grow member function of string, deallocate old string once copy
		of data is complete.  This caused a memory leak.
crtw32\stdcpp\locale.cpp
	In locale::global, remove _Incref() to new global locale since
		it is initialized with a reference count already at 1.  This
		extra reference caused the object not to be freed when released
		causing a substantial memory leak.
	In locale::global, map category type for setlocale call from internal
		mask format (_M_xxx) to the standard type (LC_xxx).

-----------------------------------------------------------------

Fri 10-Oct-96  (GregF)

crtw32\time\time.c, tzset.c
        Fixed two cases where the return from GetTimeZoneInformation was 
        being trusted too much. One of these was DevStudio96 #9134.

-----------------------------------------------------------------

*****************************************************************
*****   MSVC++ 5.0 BETA RELEASE #1 -- Monday 7 October 1996 *****
*****************************************************************

-----------------------------------------------------------------

Sun 06-Oct-96   (JamesMa)

crtw32\stdhpp\xlocinfo, xlocinfo.h
	"__cdecl"s added; another tip of the hat to the inimitable RichardS.
crtw32\h\math.h, libw32\include\math.h
	_Pow_int template no longer #ifndef _MSC_EXTENSIONS (Orion 11665).
makefile
	Fixed typo preventing creation of bbt\msvcirt.lib.

-----------------------------------------------------------------

Sat 05-Oct-96   (Richk)

crtw32\stdhpp\istream, ostream
    fix insertion and extraction overloads for narrow and wide
	streams.

-----------------------------------------------------------------

Mon 30-Sep-96   (GregF)

crtw32\stdcpp\_tolower.c, xmbtowc.c, xstrcoll.c, xwctomb.c
        Made _Getctype, mbrlen, mbrtowc, mbsrtowcs, _GetColl, _Getcvt and
        wcsrtombs multithread safe.

-----------------------------------------------------------------

Thu 26-Sep-96   (Richk)

crtw32\string\i386\memcpy.asm
    total rewrite to optimize Pentium execution speed

-----------------------------------------------------------------

Sun 22-Sep-96   (BryanT)

crtw32\misc\mips\setjmpex.s, longjmp.s
	MIPS - Save/Restore the volatile registers during setjmp/longjmp

-----------------------------------------------------------------

Fri 20-Sep-96   (JamesMa)
crtw32\stdhpp\ios, strstream, new
	"__cdecl"s added; a tip of the hat to the inimitable RichardS.

-----------------------------------------------------------------

Thu 12-Sep-96   (JamesMa)

crtw32\eh\i386\lowhelpr.asm
	Label _NLG_Return moved above new pops (Orion 9224).

-----------------------------------------------------------------

Tue 10-Sep-96   (JamesMa)

crtw32\h\math.h, libw32\include\math.h
	ANSI C++ overloaded prototypes are now #ifndef _MSC_EXTENSIONS,
	i.e. -Za only (Orion 5869).
srcrel\msvc40.if
	Added _MSC_EXTENSIONS to 3rd class of defines.
crtw32\misc\splitpat.c
	Test length of input string before accessing (Orion 7985).
crtw32\stdio\output.c
	Local struct "string" renamed to "_count_string" (Orion 8710).
crtw32\stdhpp\set
	Allocator ref changed to const in multiset constructor (Orion 8516).
crtw32\stdhpp\limits
	Added 'numeric_limits<bool>' (Orion 8054).

-----------------------------------------------------------------

Sun 08-Sep-96   (Richk)

crtw32\stdcpp\_tolower.c
    in _Getctype, backed out change due to MT concerns.

-----------------------------------------------------------------

Sun 08-Sep-96   (Richk)

crtw32\stdhpp\xstring
	when reducing string size, limit the initial copy of the old
	contents to the string size available, so it is not overwritten
crtw32\stdhpp\xlocale
    use atexit to destroy static ctype::_Cltab on program termination
	to avoid memory leak
crtw32\stdcpp\_tolower.c
    in _Getctype, make return structure value a static to avoid
	returning a pointer to deallocated stack

-----------------------------------------------------------------

Fri 06-Sep-96   (JamesMa)

libw32\msvcrt.src, libw32\msvcirt.src
	For non-x86 platforms, private exports of virtual deleting destructors
	are now cdecl (mangled names @@UAA... vs. @@UAE...) Thanks, BryanT!

-----------------------------------------------------------------

Thu 06-Sep-96   (Richk)

libw32\include\iomanip.h, crtw32\h\iomanip.h
	change initialization macros to handle reference definition
crtw32\iostream\_strste.cpp
	add strstream constuctor to use unsigned ints
crtw32\stdhpp\xtree
	for _tree, change nil from allocated to static node	to avoid
	memory leak
crtw32\stdhpp\xlocale
    in use_facet, register atexit routine to delete created
	class instance that caused memory leaks

-----------------------------------------------------------------

Wed 04-Sep-96   (JamesMa)

libw32\msvcrt.src, libw32\msvcirt.src
	Added private exports of virtual deleting destructors.
	NOTE: front-end version .6239 or greater is now required!

-----------------------------------------------------------------

Fri 30-Aug-96   (SteveSa)

crtw32\eh\i386\lowhelpr.asm
	Save and restore ESI+EDI around call to "funclet".

-----------------------------------------------------------------

Wed 28-Aug-96   (JamesMa)

Major check-in of Intel floating-point transcendentals.
New files in fpw32\tran\i386:
	common.asm, genexcep.asm, asin.asm, acos.asm,
	atan.asm, sin.asm, cos.asm, tan.asm, log.asm,
	log10.asm, pow.asm and sqrt.asm
Older routines were renamed as "_old_XXX" but temporarily
retained for testing purposes; modified files in fpw32\tran\i386:
	87tran.asm, 87ctran.asm, 87trig.asm, 87ctrig.asm,
	87triga.asm, 87ctriga.asm, 87sqrt.asm, 87csqrt.asm
fpw32\inc\i386\elem87.inc
	Added default_CW & DEFAULT_CW_without_precision for Intel mods.
fpw32\tran\bessel.c
	Disabled warning 4056.
fpw32\tran\lsources
	Added new files, as above.
crtw32\h\math.h, libw32\include\math.h
	Added inline long __cdecl abs(long); also __cdecls to other inlines.

-----------------------------------------------------------------

Mon 26-Aug-96   (Richk)

libw32\include\setjmp.h
libw32\include\setjmpex.h
libw32\include\stdio.h
libw32\include\wchar.h
		Checked in cleansed versions of files from crtw32\h.

-----------------------------------------------------------------

Fri 23-Aug-96   (GregF)

crtw32\stdcpp\locale0.cpp
crtw32\stdhpp\xlocale
		Added _Term() to the locale class and register it with a call to
		atexit() in _Init() when _Init() creates the _Global object (1st time
		it is called, I believe). The purpose of _Term() is clean up the
		_Global object. This partially fixes 5162.

-----------------------------------------------------------------

Wed 21-Aug-96   (SteveSa)

crtw32\stdhpp\bitset
	Added a pair of missing parentheses to fix bad code which caused a
	crash when a BOOL was written to an ostream.  (Morale of the story:
	pay attention to the order of evaluation of << and ?: operators!)

-----------------------------------------------------------------

Wed 21-Aug-96   (GregF)

crtw32\misc\winsig.c, winxfltr.c
	The table overrun fixes of two days ago weren't right in the multi-
	thread case (where each thread has its own copy of the exception
	action table).

-----------------------------------------------------------------

Tue 20-Aug-96   (Richk)

crtw32\stdhpp\LIST
	Fix for Orion 7276 - on list assignment, fixed initial copy.

-----------------------------------------------------------------

Mon 19-Aug-96   (GregF)

crtw32\misc\winsig.c, winxfltr.c
	Fixed potential overruns of _XcptActTab (exception action table). This
	was DevStudio96 7390.

crtw32\stdcpp\newop.cpp
	Fixed memory leak. This was DevStudio96 4192.

-----------------------------------------------------------------

Sat 17-Aug-96   (Richk)

crtw32\stdhpp\OSTREAM
	Fix for Orion 4489 - Reset width() after output of basic_streambuf.
crtw32\stdhpp\XLOCNUM
	Fix for Orion 4491 - NULL in _GetIfld processed incorrectly.

-----------------------------------------------------------------

Thu 15-Aug-96   (JamesMa)

crtw32\stdhpp\deque
	Fix for Orion 7214.
crtw32\exec\cenvarg.c
	32K limitations on spawn removed (Orion 2161).

-----------------------------------------------------------------

Wed 14-Aug-96   (SteveSa)

crtw32\stdhpp\fstream
	Added failure checks to what amounts to fopen() calls in c-tors
	for basic_istream, basic_ostream, and basic_iostream.

-----------------------------------------------------------------

Wed 14-Aug-96   (JamesMa)

crtw32\stdhpp\yvals.h
	Various 'bool' typedefs are now #ifndef __BOOL_DEFINED.

-----------------------------------------------------------------

Tues 13-Aug-96   (JamesMa)

fpw32\tran\ieeemisc.c
	Rearranged order of tests in _fpclass() to keep "if (x==0.0)", which
	now uses FP hardware, from raising EM_DENORMAL (Orion 7266).
crtw32\h\stdlib.h
	Added inline long abs(long) for ANSI conformance (Orion 4494).

-----------------------------------------------------------------

Tues 13-Aug-96   (BryanT)

crtw32\h\setjmp.h, setjmpex.h
        MIPS only - Add macros for _setjmp and _setjmpex (not just setjmp/setjmpex)
	to convert to Vfp versions.

-----------------------------------------------------------------

Wed 07-Aug-96   (GregF)

crtw32\mbstring\i386\mbsdup.asm
        Deleted.

crtw32\string\i386\strdup.asm
        Deleted.

doc\copysrc.bat
srcrel\pd-b
        References to the two files above were deleted.

        The x86 assembler version of strdup had no advantage over the C
        version, and had the disadvantage that it didn't call the debug malloc
        in the debug build. So, I got rid of it (thereby fixing DevStudio #6810).

-----------------------------------------------------------------

Tue 30-Jul-96   (GregF)

crtw32\stdio\tempnam.c
        Changed the way we ensure the temporary filename is of legal length.
        As part of this, pathnames of temp. files are allowed to be up to
        FILENAME_MAX characters (260). This change corrects DevStudio96 4548
        (a very long loop, apparently infinite to a user, when the filename
        prefix is too long). Also, cleaned up the format a bit.

-----------------------------------------------------------------

Thu 25-Jul-96   (SteveSa)

makefile
	Re-based msvcirtd.dll (and the future msvcprtd.dll) up so that
	it dos (they do) not conflict with msvcrtd.dll.

crtw32\stdio\output.c
	Added initialization of local variable "textlen" so that it is
	not some outrageous random value in the case of an unsupported
	format specifier (for example, "%B").

-----------------------------------------------------------------

Thu 25-Jul-96   (GregF)

crtw32\lowio\close.c
        Reset the lowio info even if the CloseHandle fails. Specifically
        check for the case where the underlying Win32 HANDLE value is
        INVALID_FILE_HANDLE and do not treat this as an error. The purpose
        of the change is to always allow a Crt handle to be reused after an
        explicit _close (see DevStudio96 #5845).

-----------------------------------------------------------------

Thu 18-Jul-96   (SteveSa)

makefile
makefile.inc
srcrel\objects.mkf
	No longer build the forwarder DLLs (msvcrt40.dll, msvcr40d.dll)
	unless the environment variable BLD_FWDR==1.  Also fixed a
	reference in makefile to a temporary file used to build BBT
	version of msvcirt.dll.  (A release temp file was used instead.)

-----------------------------------------------------------------

Thu 18-Jul-96   (GregF)

crtw32\h\mtdll.h
crtw32\string\i386\memicmp.asm, stricmp.asm, strnicmp.asm
        Fixed a race condition in the locale locking scheme.

-----------------------------------------------------------------

Wed 17-Jul-96   (GregF/SteveSa)

crtw32\string\i386\memicmp.asm
crtw32\string\i386\stricmp.asm
crtw32\string\i386\strnicmp.asm
	Changed serialized access to _unguarded_lc_active to use
	the LOCK prefix on increment / decrement instructions to
	prevent synchronization problems on multi-processor systems.

libw32\msvcrt.rc
libw32\msvcirt.rc
libw32\msvcprt.rc
libw32\msvcrt40.rc
	Change DLL version numbers and strings from 4.30 to 5.00.  (Except
	for msvcrt40.rc, which was 4.2000 (rather than 4.20 or 4.30) for
	historical reasons, but which is now a more sensible 5.00 like the
	rest of the DLLs.)

crtw32\stdcpp\xlocale.cpp
	Added some missing declarations.  These should have been there
	for VC++ 4.2, but the compiler (apparently incorrectly) defined
	those symbols automagically.

-----------------------------------------------------------------

Tue 16-Jul-96   (GregF/SteveSa)

crtw32\h\mtdll.h
	Changed serialized access to _unguarded_lc_active to use
	InterlockedIncrement/InterlockedDecrement rather than ++/--.

crtw32\convert\_mbslen.c
crtw32\string\strcoll.c, stricoll.c, strncoll.s, strnicol.c
crtw32\string\wcscoll.c, wcsicoll.c, wcsncoll.s, wcsnicol.c
	Add a missing call to _unlock_locale() in one error return
	in each of these files.

-----------------------------------------------------------------

Tue 16-Jul-96   (GregF)

fpw32\conv\tenpow.c
fpw32\tran\alpha\ieee.c
        Added parentheses to fix precedence problems in several expressions.
        Errors were found by Johnny Lee and passed along by Bryan Tuttle.

-----------------------------------------------------------------

Wed 10-Jul-96   (GregF)

crtw32\lowio\chsize.c, close.c, commit.c, dup.c, dup2.c, eof.c, flength.c,
             fstat.c, initcon.c, ioinit.c, isatty.c, locking.c, lseek.c,
             mktemp.c, open.c, osfinfo.c, read.c, setmode.c, tell,c,
             txtmode.c, write.c
        A variety of changes related to target platform macros and formatting.
        I replaced defined(_WIN32) with !defined(_MAC), replaced
        defined(_M_M68K) || defined(_M_MPPC) with defined(_MAC), purged
        DLL_FOR_WIN32S, deleted obsolete REG* macros, replaced obsolete
        _CALLTYPE* macros with __cdecl. Where appropriated, I detab-ed the
        source and cleaned up the format a bit.

-----------------------------------------------------------------

Wed 10-Jul-96   (GregF)

crtw32\h\winheap.h
crtw32\heap\expand.c, free.c, heapinit.c, msize.c, realloc.c, sbheap.c
crtw32\misc\dbgheap.c
        Package of improvements to the small-block heap. Basically, I changed
        the definitions of the small-block heap types so as to reduce index
        expressions. Many (most?) of the specific changes were suggested by
        Steve Wood.

-----------------------------------------------------------------

Tue 02-Jul-96   (GregF)

crtw32\dos\access.c, chdir.c, chmod.c, dosmap.c, drive.c, fullpath.c, getcwd.c,
           getpid.c, mkdir.c, rename.c, rmdir.c, stat.c, unlink.c
        Replaced #ifdef _WIN32 with #ifndef _MAC. Detab-ed and cleaned up the
        format where it varied wildly within a source (as it generally did).
        Also, replaced instances of the old, old _CALLTYPE1 with __cdecl.

-----------------------------------------------------------------

Fri 28-Jun-96   (GregF)

crtw32\dllstuff\atonexit.c, cinitexe.c, crtdll.c, crtexe.c, crtlib.c,
                xncommod.c, xntxtmode.c
        Purged Win32s support (__win32sflag, DLL_FOR_WIN32S). Replaced
        defined(_WIN32) with !defined(_MAC). Cleaned up format as necessary.

-----------------------------------------------------------------

Thu 27-Jun-96   (PatT)

makefile, makefile.inc, makefile.sub
crtw32\eh\
    frame.cpp, hooks.cpp, rtti.cpp, throw.cpp, user.cpp, validate.cpp
crtw32\eh\alpha\trnsctrl.cpp
crtw32\eh\i386\trnsctrl.cpp
crtw32\eh\mac\pmac\
    ehstate.cpp, exdsptch.cpp, handlers.asm, lowhelpr.asm, ntstatus.h,
    ppcinst.h, trnsctrl.cpp, unwind.asm, vunwind.cpp
crtw32\eh\mips\trnsctrl.cpp
crtw32\eh\ppc\trnsctrl.cpp
crtw32\h\
    ehassert.h, ehstate.h, trnsctrl.h
crtw32\helper\lsources
crtw32\helper\mac\pmac
    i64div.asm, i64rem.asm, i64rsh.asm, rfpr.asm, rgpr.asm, sfpr.asm, sgpr.asm,
    u64div.asm, u64rem.asm
crtw32\misc\lsources
crtw32\misc\mac\pmac
    exsup.asm, setjmp.asm
crtw32\tools\mac\ml.exe
fpw32\conv\lsources
fpw32\conv\mac\pmac
    dtoi64.asm, dtou64.asm, i64tod.asm, u64tod.asm
srcrel
    makefile, object.mkf, pd-b

	(1) Added PowerMac __int64 conversions routines and helpers
	(2) Added register save and restore millicode routines
	(3) Ported PowerPC/NT EH model to the PowerMac

-----------------------------------------------------------------

Thu 27-Jun-96   (GregF)

crtw32\convert\_mbslen.c, isctype.c, mblen.c, mbstowcs.c, mbtowc.c, tolower.c
               toupper.c, towlower.c, towupper.c, wcstombs.c, wctomb.c
        As required, purged DLL_FOR_WIN32S, replaced defined(_WIN32) with
        !defined(_MAC), and cleaned up some formatting.

-----------------------------------------------------------------

Tue 14-Jun-96   (V-rogerl)

fpw32\tran\mips\powm.s
	YAPF (Yet Another Pow Fix) propagated from V4.2.

-----------------------------------------------------------------

Wed 12-Jun-96	(GregF)

log.txt -> log_v42.txt
	Renamed old LOG.TXT from V4.2 and started a new LOG.TXT (this file).

-----------------------------------------------------------------


***************************************************************************
***************************************************************************
***									***
***  This file contains the history for MSVC++ v5.0 (relative to v4.2)	***
***  The file should always be edited at the top so that the most	***
***  recent changes are at the beginning of the file and the oldest	***
***  changes are at the end of the file.  This comment marks the end.	***
***									***
***************************************************************************
***************************************************************************
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\base\crts\crtw32\oldv2log.txt ===
-----------------------------------------------------------------

Tue 19-Jul-94	(GregF)

crtwin32/dllstuff/crtdll.c
crtwin32/misc/onexit.c
	Changed the calls to GlobalAlloc so that GMEM_SHARE is specified.
	Affects only the Win32s version of msvcrt20.dll. This was bug
	14851, originating with Boaz Feldbaum.

-----------------------------------------------------------------

Fri 10-Jun-94	(SteveSa)

crtwin32/startup/threadex.c
	Fix 2 synchronization problems. 1) The _beginthreadex routine may NOT
	store values into the per-thread data block of the child thread since
	the child thread may finish executing and free that block before the
	parent thread executes the first instruction after the call to
	CreateThread.  (This is not a problem for _beginthread because that
	routine always creates its child thread in the suspended state.)
	There is no need to store the child thread handle in the per-thread
	data block for that child thread since _endthreadex does not close
	that handle.  2) The code had been written to pass the address of the
	tid field in the p.t.d. block to CreateThread, not the user specified
	tid address.  The user tid was filled in after CreateThread returned,
	but that was not reliable.  Now the user tid address is passed to
	CreateThread, and the child thread calls GetCurrentThreadId() to set
	the TID in its own p.t.d. block.

-----------------------------------------------------------------

Wed 08-Jun-94	(SteveSa)

libwin32\include\process.h
crtwin32\h\process.h
crtwin32\startup\dllcrt0.c
crtwin32\dllstuff\crtdll.c
	Add global variable _pRawDllMain which, if non-NULL because the user
	has defined it, will be called through upon DLL notifications, only
	before the CRT initialization on ATTACH notifications, and after the
	CRT termination on DETACH notifications.  This was needed by MFC.

-----------------------------------------------------------------

Wed 08-Jun-94	(GregF)

crtwin32\dllstuff\atonexit.c, crtdll.c
crtwin32\heap\free.c
crtwin32\misc\onexit.c
	Fixes to the support for user DLLs in Win32s. Principal change was
	to use GlobalHeap API for the onexit table.

-----------------------------------------------------------------

Mon 06-Jun-94	(SteveSa)

crtwin32/h/ & libwin32/include/
  errno.h, float.h, signal.h, stddef.h, stdio.h, stdlib.h
	Changed (some occurrences of) "#ifdef _MT" to
	"#if defined(_MT) || defined(_DLL)" so that MSVCRT*.DLL
	can be used with single-thread programs.  This model is
	dangerous if threads are running in the background without
	the user program's knowledge, but it allows fast getc/putc,
	for example, which are needed by our own compiler passes.

-----------------------------------------------------------------

Sat 04-Jun-94	(GregF)

crtwin32\string\alpha\strcat.c
	Removed _CALLTYPE1.

-----------------------------------------------------------------

Fri 03-Jun-94	(GregF)

libwin32\makefile
	Added ehvec*.obj to COMPONENTS_SUPPOBJS_DLL_FOR_WIN32S list.

-----------------------------------------------------------------

Fri 03-Jun-94	(SteveSa)

libwin32\include\new.h
crtwin32\h\new.h
crtwin32\heap\handler.cxx
	Removed set_new_handler() as an alias for _set_new_handler().
	Our implementation of _set_new_handler does NOT conform to the
	working ANSI C++ standard definition of set_new_handler.  We
	must correctly implement set_new_handler for Visual C++ v3.0,
	but we cannot alias it to our own _set_new_handler.  That would
	cause untold compatibility problems when we do implement a
	conforming version of the ANSI C++ set_new_handler().

-----------------------------------------------------------------

Wed 01-Jun-94	(ChrisWei)

crtwin32\h[libwin32\include]\tchar.h
        all _strdec and _wcsdec params should be const.

-----------------------------------------------------------------

Wed 01-Jun-94	(GregF)

crtwin32\dllstuff\atonexit.c, crtdll.c
	Removed compile-time conditioning on DLL_FOR_WIN32S. Instead, test
	for Win32s at runtime. i386\msvcrt*.lib should now work for BOTH
	i386\msvcrt*.dll and i386\win32s\msvcrt*.dll!!!

-----------------------------------------------------------------

Thu 26-May-94	(ChrisWei)

crtwin32\h[libwin32\include]\string.h, wchar.h
crtwin32\string\sources
libwin32\lib\*\*.def
        Add _strncoll, _wcsncoll.

crtwin32\h\tchar.h
        Make inlining the default for all.

-----------------------------------------------------------------

Thu 26-May-94	(ChrisWei)

crtwin32\h\tchar.h
        Make inlining the default for MBCS, fix _tcsn[c]cmp.

-----------------------------------------------------------------

Thu 26-May-94	(GregF)

crtwin32\misc\lsources, sources
crtwin32\misc\alpha\strcmp.s, strcpy.s, strlen.s (deleted)
crtwin32\string\lsources, sources
crtwin32\string\alpha\strcat.c, strcmps.s, strcpy.s, strlens.s (new)
	Changes for the Alpha build (only) strcmp.s, strcpy.s and strlen.s
	were deleted from misc\alpha, and replaced by the files listed above
	in string\alpha

-----------------------------------------------------------------

Wed 25-May-94	(ChrisWei)

crtwin32\h\tchar.h
        Bug fix: _tcsnextc in _MBCS case.

-----------------------------------------------------------------

Tue 24-May-94	(GregF)

crtwin32\dllstuff\atonexit.c, crtdll.c
crtwin32\heap\free.c
crtwin32\misc\onexit.c
	Package of changes so that Win32s user DLLs only execute static
	ctors and dtors once (when the the first process attaches for ctors
	and when the last process detaches for dtors).

-----------------------------------------------------------------

Tue 24-May-94	(GregF)

crtwin32\h\istream.h
crtwin32\iostream\istrgint.cxx, istrint.cxx, istrlong.cxx, istrshrt.cxx,
		  istruint.cxx, istrulng.cxx, istrusht.cxx
	Moved the definition of MAXLONGSIZ from various *.cxx to istream.h.
	Also, changed istrgint.cxx so that is stops copying characters into
	the buffer with at most MAXLONGSIZ-1 characters have been copied.
	This was probably not really a bug since MAXLONGSIZ was big enough
	(16) we wouldn't come near it anyway.

-----------------------------------------------------------------

Mon 23-May-94	(ChrisWei)

crtwin32\mbstring\sources, tcsmap*.c, mbs*coll.c
crtwin32\h[libwin32\include]tchar.h, mbstring.h
libwin32\lib\*\*.def
        Add _mbs*coll functions.

-----------------------------------------------------------------

Fri 20-May-94	(ChrisWei)

crtwin32\mbstring\mbsnbcmp.c, mbsnbicm.c
        Fix old bug: if last char is lead byte, returns EQUAL without
        testing at all. Now at least does strict value comparison of LB
        with other strings char.

-----------------------------------------------------------------

Thurs 19-May-94	(ChrisWei)

crtwin32\mbstring\almost_everything.c
crtwin32\h\mbdata.h, win32s.h
        Allow non-Win32 builds. Add Mac support.

-----------------------------------------------------------------

Wed 18-May-94	(SteveSa)

libwin32\buildall.cmd
libwin32\makefile
crtwin32\buildcrt.cmd
crtwin32\crt32.def
fpwin32\buildcrt.cmd
fpwin32\fp32.def
	Add support for LEGO builds of LIBC.LIB, LIBCMT.LIB, MSVCRT.LIB
	and the release objects (BINMODE, COMMODE, SETARGV, etc.)
	This support is activated by the presence of {crt,fp}dbg{,st,dll}
	subdirectories, which are parallel to {crt,fp}win{,st,dll}.

-----------------------------------------------------------------

Tue 17-May-94	(GregF)

libwin32\makefile
	Replaced "link32" with "link"

-----------------------------------------------------------------

Tue 17-May-94	(GregF)

crtwin32\helper\mips\llbit.c,lldefs.h
	Bug fix for Dolphin bug 12192 from Roger Lanser.

-----------------------------------------------------------------

Tue 17-May-94	(GregF)

crtwin32\h\string.h
libwin32\include\string.h
	memmove is implemented as an intrinsic on the Dec Alpha so the
	_CRTIMP qualifier must be removed from the prototype for the
	Alpha.

-----------------------------------------------------------------

Mon 16-May-94	(ChrisWei)

crtwin32\h\mbdata.h
crtwin32\mbstring\mbsicmp.c, mbslwr.c, mbsnbicm.c, mbsnicmp.c, mbsupr.c,
mbtolwr.c, mbtoupr.c
        Use _mbbtolower [upper] which is not locale-dependent, rather than 
        tolower [upper] which is.

-----------------------------------------------------------------

Mon 16-May-94	(SteveSa)

crtwin32\dllstuff\crtexe.c
	The nCmdShow parameter passed to (_w)WinMain must match the
	computed value in crtwin32\startup\crt0.c.  It was a constant.

-----------------------------------------------------------------

Fri 13-May-94	(SteveSa)

libwin32\makefile
	Add ehvec{ctr,cvb,dtr}.obj to MSVCRT.LIB.  (They cannot be imported
	because of prototype conflicts between _CRTIMP and the front end.)
	Problem: Yet another command line too long (this one for MSVCRT20.LIB).
	Solution: Tell nmake to generate and use a linker response file.

crtwin32\eh\sources
	Change flags to build this directory with -GX (all targets) and
	I386 with -d1Binl.  This is necessary for ehvec{ctr,cvb,dtr}.cxx.

crtwin32\eh\ehvec{ctr,cvb,dtr}.cxx
	Remove _CRTIMP attribute from these functions -- it causes a conflict
	with the compiler front-end's built-in prototypes for these helpers.

-----------------------------------------------------------------

Thu 12-May-94	(GregF)

crtwin32\h\assert.h, awint.h, conio.h, cruntime.h, ctime.h, cvt.h, direct.h,
	   dos.h, errno.h, excpt.h, fcntl.h, file2.h, float.h, fltintrn.h,
	   fpieee.h, io.h, limits.h, locale.h, math.h, mbstring.h, memory.h,
	   msdos.h, oscalls.h, process.h, search.h, setjmp.h, share.h,
	   signal.h, stdarg.h, stddef.h, string.h, syserr.h, tchar.h,
	   varargs.h
crtwin32\h\sys\locking.h, stat.h, timeb.h, types.h, utime.h
	Fixed _INC_* macro usage so that it is consistent throughout the
	include files (the #define comes immediately after the #ifdef).

crtwin32\h\wchar.h
	Removed conditional #include of win32s.h. It wasn't necessary and it
	broke the build with the change above.

libwin32\include\*.h
	Brought up to date with changes above.

-----------------------------------------------------------------

Wed 11-May-94	(GregF)

libwin32\makefile
	x86 build of the DLL has to be bound with user32.lib (init. code
	has a reference to MessageBoxA)

-----------------------------------------------------------------

Tue 10-May-94	(GregF)

crtwin32\dllstuff\crtlib.c
	Added check for Win32s at initialization time. Using this, the
	DLL version for Win32s (Win32) will not load on Win32 (resp., Win32).
	When one of DLLs is loaded on the wrong host, an explanatory
	message box is displayed and the initialization fails.

-----------------------------------------------------------------

Thu 05-May-94	(GregF)

libwin32\makefile, lib\i386\win32s, lib\i386\win32s\msvcrt20.def
	Build the Win32s DLL under the same name as the Windows NT DLL
	(i.e., msvcrt20.dll, msvcrt20.lib, msvcrt.lib) in the (new)
	subdirectory, win32s, of i386.

-----------------------------------------------------------------

Wed 04-May-94	(GregF)

libwin32\include\ctype.h, malloc.h, mbctype.h, stdio.h, stdlib.h, time.h,
		 wchar.h
	Oops, almost forgot these...

-----------------------------------------------------------------

Wed 04-May-94	(GregF)

crtwin32\h\ctype.h, internal.h, malloc.h, mbctype.h, stdio.h, stdlib.h,
	   time.h, wchar.h
crtwin32\dllstuff\crtlib.c
	Made several of the _DLL changes also depend on _M_IX86 so they do
	not affect the MIPS or Alpha builds. Basically, these are the
	definitions/declarations of the access functions and the macros to
	convert references to the CRT's global (user-visible), read-write
	data to access function calls. I also fixed a potential bug in
	crtlib.c: the return value for a success call to
	AllocPerProcessDataStruct() was not explicitly set to any value.

-----------------------------------------------------------------

Mon 02-May-94	(GregF)

crtwin32\h\stdio.h
libwin32\include\stdio.h
	Added __cdecl to declaration of __p__iob().

-----------------------------------------------------------------

Fri 29-Apr-94	(GregF)

crtwin32\h\win32s.h
	Oops! Forgot to addfile this header yesterday. It defines the per-
	process data struct for Win32s and access macros.

libwin32\include\ctype.h, malloc.h, mbctype.h, new.h, stdio.h, stdlib.h,
		 time.h, wchar.h
	Brought up to date with crtwin32\h.

-----------------------------------------------------------------

Thu 28-Apr-94	(GregF)

crtwin32\buildcrt.cmd, crt32.def, makefile

crtwin32\h\ctype.h, heap.h, internal.h, malloc.h, mbctype.h, mbdata.h,
	   mtdll.h, new.h, nlsint.h, setlocal.h, stdio.h, time.h, wchar.h

crtwin32\dllstuff\atonexit.c, crtexe.c, crtlib.c

crtwin32\heap\_newmode.c, handler.cxx, heapinit.c, malloc.c, new_mode.cxx

crtwin32\lowio\initcon.c, ioinit.c, txtmode.c

crtwin32\mbstring\mbctype.c

crtwin32\misc\ctype.c, initctyp.c, inithelp.c, initmon.c, inithelp.c,
	      inittime.c, onexit.c, setenv.c, setlocal.c, setmval.c,
	      wsetloca.c

crtwin32\startup\crt0.c, crt0dat.c, mlock.c, stdargv.c, tidtable.c, wild.c

crtwin32\stdio\_file.c, _getbuf.c, _open.c, _sftbuf.c, fdopen.c, fflush.c,
		ncommode.c, rmtmp.c, setvbuf.c, tmpfile.c

crtwin32\time\clock.c, strftime.c, timeset.c, tzset.c

crtwin32\tools\win32\relinc.if

libwin32\buildall.cmd, makefile

libwin32\lib\i386\msvcrt19.def

	Package of changes to build a special version of msvcrt*.dll for
	Win32s, and make the dll for Win32 compatible with it.

-----------------------------------------------------------------

Wed 27-Apr-94	(GregF)

libwin32\lib\mips\msvcrt20.def
	Added single precision math functions to the exports (defined for
	MIPS only).

-----------------------------------------------------------------

Mon 24-Apr-94	(ChriswWei)

- removed _tset[v]buf - there are no Unicode versions of these function.
	h\[include\]tchar.h

- add wWinMainCRTStartup entry point for DLL
	dllstuff\wcrtexew.c, sources, crtexe.c - add wWinMainCRTStartup entry point for DLL
	libwin32\makefile 

-----------------------------------------------------------------

Fri 22-Apr-94	(GregF)

libwin32/lib/alpha/msvcrt20.def
	Added _heapused to exports.

-----------------------------------------------------------------

Thu 21-Apr-94	(SteveSa)

libwin32/makefile
libwin32/sdknames/
libwin32/sdknames/obj
libwin32/sdknames/obj/{i386,mips,alpha}
	Changed the makefile to add SDKNAMES.LIB to MSVCRT.LIB.  SDKNAMES.LIB
	contains aliases to convert SDK CRTDLL.LIB names (e.g. _winver_dll) 
	to MS VC++ names (e.g., __imp__winver).  The sdknames directory and
	its subdirectories were added for use in building SDKNAMES.LIB.

	Also, the OLDNAMES alias for control87() on the i386 was fixed.  It
	was one leading underscore short on both source and target names
	and so it was spurious.  It is now fixed (_control87 => __control87).

-----------------------------------------------------------------

Thu 21-Apr-94	(GregF)

crtwin32\stdio\input.c
	Wasn't re-initializing the integer64 flag. This meant that any
	descriptor following a %I64{d,o,x,u} caused the 64-bit contents of
	num64 to be copied thru its corresponding argument. Oops! This was
	Dolphin bug 10601.

-----------------------------------------------------------------

Mon 18-Apr-94	ChrisWei)

I have checked in a boatload of files covering:

1) Final changes to MB stuff, all MB routines are now generic 
(use the NLS API set and now work for any MB language). Also, 
the MB-stuff is now multi-thread safe. 

2) str*coll, wcs*coll return _NLSCMPERROR when there is a problem 
with the API call. They had been doing so already but now its 
documented, the macro has the underscore, and its is now available 
to the users.

3) A few random bug fixes.

4) Got rid of some compiler warnings that I introduced a while back.

5) Added another MT lock in case anyone cares.

[ 6) Greg, for Win32s: I added a global (_mblcid) and removed a 
global (_mbascii) ]

Files changed:

h\awint.h, mbctype.h mbdata.h, mbstring.h, mtdll.h, setlocal.h, string.h
include\mbctype.h, mbstring.h, string.h
misc\aw_str.c, initctyp.c
\string\*icoll.c
\stdio\puts.c
convert\isctype.c, icwctype.c
mbstring\almost the whole shebang:

ismbalnm.c        2    2  out      
ismbalph.c        3    3  out      
ismbbyte.c        4    4  out      
ismbdgt.c         3    3  out      
ismbgrph.c        2    2  out      
ismblwr.c         3    3  out      
ismbprn.c         4    4  out      
ismbpunc.c        2    2  out      
ismbsle.c         2    2  out      
ismbspc.c         3    3  out      
ismbstr.c         2    2  out      
ismbupr.c         3    3  out      
mbctype.c         4    4  out      
mbsbtype.c        1    1  out      
mbschr.c          1    1  out      
mbscmp.c          1    1  out      
mbscspn.c         1    1  out      
mbsdec.c          1    1  out      
mbsicmp.c         1    1  out      
mbslen.c          1    1  out      
mbslwr.c          1    1  out      
mbsnbcat.c        1    1  out      
mbsnbcmp.c        1    1  out      
mbsnbcnt.c        1    1  out      
mbsnbcpy.c        1    1  out      
mbsnbicm.c        1    1  out      
mbsnbset.c        1    1  out      
mbsncat.c         1    1  out      
mbsnccnt.c        1    1  out      
mbsncmp.c         1    1  out      
mbsncpy.c         1    1  out      
mbsnicmp.c        1    1  out      
mbsnset.c         1    1  out      
mbsrchr.c         1    1  out      
mbsrev.c          1    1  out      
mbsset.c          1    1  out      
mbsspn.c          1    1  out      
mbstok.c          1    1  out      
mbsupr.c          1    1  out      
mbtohira.c        1    1  out      
mbtokata.c        1    1  out      
mbtolwr.c         1    1  out      
mbtoupr.c         1    1  out      

-----------------------------------------------------------------

Tue 12-Apr-94	(SteveSa)

{crtwin32\h,libwin32\include}\{ios,istream,ostream}.h
	Add some __cdecl's to function declarations, add some leading
	leading underscores to parameter names to preserve ANSI naming.

-----------------------------------------------------------------

Tue 05-Apr-94	(SteveSa)

{crtwin32\h,libwin32\include}\{stdarg,varargs}.h
	Minor change to declaration of __builtin_va_start() for ALPHA only!

-----------------------------------------------------------------

Fri 01-Apr-94	(GregF)

crtwin32\eh\mips\handlers.s, tmphack.s
	Commented out library directives that were inappropriately causing
	libcmt.lib to be linked in (Dolphin bug 9646)

-----------------------------------------------------------------

Wed 30-Mar-94	(GregF)

libwin32\lib\alpha\msvcrt20.def
	Added several missing exports (all were Unicode versions of
	familiar CRT functions).

-----------------------------------------------------------------

Mon 28-Mar-94	(SteveSa)

libwin32/makefile
crtwin32/dllstuff/crtexe.c -
	For X86 only (also not for the _NTSDK), add a call in CRTEXE.C to
	_setdefaultprecision().  Also add FP8.OBJ to MSVCRT.LIB.  Now when a
	user links an EXE with FP10.OBJ and MSVCRT.LIB, it actually works as
	expected and sets the X87 precision to 80-bit (64-bit mantissa)!
	Previously linking with FP10.OBJ had no effect on floating point
	precision if linking with MSVCRT.LIB.  This was a one-liner!

-----------------------------------------------------------------

Sat 26-Mar-94	(SteveSa)

crtwin32/dos/sources
crtwin32/dos/mterrno.c -
	Added a new file to contain single-thread versions of the functions
	_errno() and __doserrno(), which return the addresses of the per-thread
	variables errno and _doserrno, respectively.  These functions in the
	single thread library return the addresses of the global variables.
	This allows users to target shared code for use with LIBC.LIB and
	LIBCMT.LIB without having conflicts over accesses to errno/_doserrno.

-----------------------------------------------------------------

Wed 23-Mar-94	(GregF)

libwin32\lib\i386\msvcrt20.def
	Added _longjmpex.

-----------------------------------------------------------------

Tue 22-Mar-94	(GregF)

crtwin32\helper\mips\llbit.c
	Bug fix from Roger Lanser. He was doing arithmetic right shifts
	when he should have been doing logical right shifts...

-----------------------------------------------------------------

Fri 18-Mar-94	(GregF)
	Build map file for msvcrt20.dll.

-----------------------------------------------------------------

Thu 17-Mar-94	(GregF)

crtwin32\h\heap.h

crtwin32\heap\heapadd.c,
	      heapinit.c,
	      heapmin.c,
	      malloc.c,
	      realloc.c
	Package of changes to provide for more graceful handling of an
	out-of-free-descriptors (apparently, this condition will not arise
	on NT since the you get a nice little informative popup, followed
	by the summary execution of your app, whenever you run out of virtual
	memory). There remains a code path in heapadd.c which can lead to
	a call to _heap_abort but it's not clear that real code can hit this
	(I couldn't figure out how to).

-----------------------------------------------------------------

Tue 15-Mar-94	(GregF)

crtwin32\stdio\input.c
	Added support for I64 size modifier to the scanf-family.

-----------------------------------------------------------------

Mon 14-Mar-94	(GregF)

crtwin32\h\stddef.h
libwin32\include\stddef.h
	Made declaration of errno match the on in stdlib.h.

crtwin32\string\strstr.c
	Fixed bug so that if the second argument is "" (empty string), the
	first argument is returned.

-----------------------------------------------------------------

Fri 11-Mar-94	(GregF)

crtwin32\crt32.def
	Deleted the MIPS_OPTIMIZATION variable. Amounts to removing the
	-Ox- (disable intrinsics) switch from the MIPS build. This
	corresponds to Steve Hanson's change to \\orville\razzle\src\crt32
	version.

crtwin32\makefile
	Replaced lib32 with lib, the current name of the library manager.
	This includes Steve Hanson's change to \\orville\razzle\src\crt32
	version.

crtwin32\helper\mips\llbit.c
	Change from Steve Hanson (made to \\orville version). Basically,
	he turned off the bit shift intrinsics with a pragrma.

crtwin32\helper\mips\llshiftt.c
	Test program. Taken from \\orville version of the tree.

crtwin32\stdio\maketabc.c
	Changed to recognize 'I' as a size modifier. Code change was actually
	made before change to output.c below but I forgot to check it in.

-----------------------------------------------------------------

Thu 10-Mar-94	(GregF)

crtwin32\stdio\output.c
	Added support for I64 size modifier to the printf-family.

-----------------------------------------------------------------

Tue 08-Mar-94	(GregF)

libwin32\lib\mips\msvcrt20.def
	Added _CxxThrowException to exports.

-----------------------------------------------------------------

Sat 05-Mar-94	(GregF)

libwin32\makefile
	Fixed omissions in mips and alpha builds.

-----------------------------------------------------------------

Fri 04-Mar-94	(GregF)

crtwin32\string\sources
	Don't build mips\memcmpm.s any more (superceded by version in
	memorym.s).

-----------------------------------------------------------------

Tue 01-Mar-94	(SteveSa)

crtwin32/heap/malloc.c
crtwin32/heap/new.cxx
	The undocumented global variable _pnhHeap must be declared in
	malloc.c and not new.cxx in case new.obj is overridden by MFC
	or somebody else.

-----------------------------------------------------------------

Tue 01-Mar-94	(GregF)

crtwin32\string\strset.c
	Change from \\orville tree, made there by Jeff Havens.

crtwin32\string\mips\memorym.s, strchrm.s, strrchrm.s
	Bug fixes from Roger Lanser. Taken from the versions in the \\orville
	tree (\\orville\razzle\src\crt32).

-----------------------------------------------------------------

Wed 23-Feb-94 (ChrisWei)

crtwin32\misc\aw_cmp.c, aw_map.c aw_str.c
        Use Unicode versions first.

crtwin32\h[libwin32\include]\limits.h
        Tweak of Greg's new large int stuff, add "u".

-----------------------------------------------------------------

Wed 16-Feb-94 (SteveSa)

crtwin32/heap/malloc.c
crtwin32/heap/new.cxx
	Change malloc and new so that only new failures call the
	new handler (_pnhHeap) which is set by _set_new_handler().
	(* This change turned out to be controversial. *)

	Also revised heapused.c to give a better computation of used memory.

-----------------------------------------------------------------

Thur 10-Feb-94	(GregF)

crtwin32\string\mips\memorym.s
	"Big oopser, memmove/memcpy/memset were not returning the destination
	..." Quote and two-line fix both from Roger Lanser.

crtwin32\misc\i386\exsup.asm, setjmp.asm, setjmp3.asm
	fs:0 holds -1 to mark the end of the exception handler chain, not 0!

-----------------------------------------------------------------

Mon 07-Feb-94	(GregF)

crtwin32\string\mips\*.*
	Added mips subdirectory of fast string routine for the mips. Contents
	came from crt32 tree on \\orville\razzle, from Roger Lanser.

crtwin32\string\sources
	Changed to build the sources above where appropriate.

-----------------------------------------------------------------

Fri 04-Feb-94	(ChrisWei)

crtwin32\dllstuff\crtexe.c
crtwin32\startup\crt0.c, crt0dat.c
crtwin32\misc\setenv.c
        To avoid invalidating the users **envp to main, we copy the 
        environment block. I moved this copying from startup to putenv 
        to work around a benchmark bug, to simplify the code,  and to 
        not do the work before its required.


crtwin32\h\mbctype.h
crtwin32\mbstring\mbctype.c
        Added _setmbcp() and _getmbcp() functions. MB default is now ANSI CP.


crtwin32\h\locale.h, setlocal.h
crtwin32\misc\getqloc.c, setlocal.c
        Updated some of the countries and languages in setlocale(), 
        and changed how the default behavior works, including switching 
        from OEM to ANSI, but this may have to go back if we can't 
        finagle NT 3.1 support as needed.

crtwin32\h\locale.h, setlocal.h stdio.h
crtwin32\stdio\puts.c
        Finished getws/puws stuff.

-----------------------------------------------------------------

Fri 04-Feb-94	(GregF)

crtwin32\buildcrt.nt
	Define _helper for 386 so that helper\i386\*.asm gets built.

crtwin32\makefile.nt
	Synched up with crt32\makefile.

crtwin32\convert\mbstowcs.c, mbtowc.c
	Picked up SteveWo's changes to the build for _NTSUBSET_.

crtwin32\h\limits.h
	Added type suffixes for long and unsigned long constants. Also added
	constant for the sized integral types (e.g., _I64_MAX).

crtwin32\stdio\freopen.c

libwin32\makefile.nt
	Parameterized relative paths to development trees to make renaming
	easier.

libwin32\buildcrt.nt
	Variant of buildcrt.cmd to build the NT SDK version of the libs.

-----------------------------------------------------------------

Thu 03-Feb-94	(GregF)

crtwin32\misc\mips\chandler.c
	Latest from \\orville\razzle\src\crt32\misc\mips (Dave Cutler).

-----------------------------------------------------------------

Wed  02-Feb-94	(GregF)

crtwin32\makefile
	Define HELPER_OBJECTS for x86 build. These are the __int64 helpers.

crtwin32\helper\i386\*.asm
	One too many underscores! With our header file, the names get
	defined as C names (i.e., an underscore gets prepended in the
	transition to from source name to link name).

-----------------------------------------------------------------

Tues 01-Feb-94	(ChrisWei)

crtwin32\*\sources
        add INCLUDE ..\h to tell build.exe to scan our headers
crtwin32\crt32.def
        remove INCLUDES statement

crtwin32\h\stdio.h, wchar.h, tchar.h
crtwin32\stdio\gets.c, puts.c, getws.c putws.c
libwin32\lib\*\msvcrt20.def
        add getws() and putws() functions.


-----------------------------------------------------------------

Mon 24-Jan-94	(GregF)

crtwin32\h\ehdata.h
	Fixed mis-spelling of _M_MRX000

crtwin32\h\setjmp.h
	Fixed mis-spelling of _M_ALPHA.

crtwin32\h\fpieee.h, math.h
	Merged in _LANGUAGE_ASSEMBLY conditionals from Roger Lanser.

crtwin32\tools\win32\relinc.if
	Made _M_MRX000 'ignored' instead of 'undefined'. Also added _M_ALPHA
	to the ignore list, and _MT. Finally, deleted several macros which
	are no longer used.

libwin32\include\fpieee.h, malloc.h, math.h, setjmp.h
	The fix to relinc.if above changed malloc.h and math.h both. In
	addition, math.h had some cosmetic change due to Steve Hanson's
	changes, as did math fpieee.h. Finally, I fixed a mis-spelling
	of _M_ALPHA in setjmp.h.

-----------------------------------------------------------------

Wed 19-Jan-94	(GregF)

***** ALL CHANGES BELOW ARE FROM PHILIP LUCIDO *****

crtwin32\eh\frame.cxx - 	    CHANGED
	PhilipL: "Trivial change to a comment."

crtwin32\eh\i386\trnsctrl.cxx -     CHANGED
	PhilipL: "Get rid of the callback interface I added last month. Add
	the local unwinder for C++ EH used by longjmp(). New public symbols:
		__CxxLongjmpUnwind@4

crtwin32\inc\exsup.inc -	    CHANGED
	PhilipLu: "Move jmp_buf descriptions here for common asm access"

crtwin32\inc\setjmp.h - 	    CHANGED
	PhilipLu: "jmp_buf now 16 DWORDS. Change _JBLEN from 8 to 16 and
	added new fields to _JUMP_BUFFER struct."

crtwin32\inc\setjmpex.h -	    CHANGED
	setjmp must stay #define-d to _setjmp. Instead of #define-ing setjmp
	to be __setjmpex, #define longjmp to be __longjmpex.


crtwin32\misc\i386\abterm.asm -     DELETED
	PhilipLu: "Not needed any more. AbnormalTermination() moved back into
	exsup.asm."

crtwin32\misc\i386\exsup.asm -	    CHANGED
	PhilipLu: "Only routines commond to both C8.0 and C9.0 SEH are left
	here. Public symbols:
		__global_unwind
		__local_unwind
		__abnormal_termination

crtwin32\misc\i386\exsup2.asm -     NEW
	PhilipLu: "New file. The C 8.0 SEH exception handler has been moved
	here. Still needed for old objects, and for RT-DLLs used with old
	apps. Public symbols:
		__except_handler2"

crtwin32\misc\i386\exsup3.asm -     NEW
	PhilipLu: "New file. The C9.0 SEH exception handler created here.
	Also includes the C9.0 local unwinder entrypoint needed for
	longjmp(). Public symbols:
		__except_handler3
		__seh_longjmp_unwind@4

crtwin32\misc\i386\longjmp.asm -    NEW
	PhilipLu: "New file. Maintain old name (_longjmp), but handle both
	the old C8.0 jmp_buf, as well as the longer C9.0 form. If presented
	with a C 8.0 jmp_buf, do the (possibly erroneous) C8.0 behavior. If
	a C9.0 jmp_buf, then check the new data saved by __setjmp3 to
	determine how to unwind exceptions. Public symbols:
		_longjmp

crtwin32\misc\i386\sehsupp.c -	    CHANGED
	PhilipLu: "Contents totally replaced. Now only holds a helper to
	probe a DWORD ptr for readability. Public symbols:
		__rt_probe_read4@4


crtwin32\misc\i386\setjmp.asm -     CHANGED
	PhilipLu: "Everything but __setjmp and raisex moved elsewhere. Leaves
	only the C8.0-compatible setjmp, for old-app compatibility, as well
	as unknown function raisex() (does anybody know what the hell this
	is, and why it's in the ANSI namespace?). Public symbols:
		__setjmp
		_raisex

crtwin32\misc\i386\setjmp3.asm -    NEW
	PhilipLu: "New file. New C9.0 version of setjmp, __setjmp3. This is
	now a varargs compiler intrinsic. The compiler passes whatever data
	will be needed to properly unwind the exception stack when a
	longjmp is done. This includes a ptr to a function to be called to
	do the actual local unwind. Public symbols:
		__setjmp3

crtwin32\misc\i386\setjmpex.asm -   CHANGED
	Define __longjmpex instead of __setjmpex.


-----------------------------------------------------------------

Tue 18-Jan-94	(GregF)

crtwin32\crt32.nt
	Picked up _NTSYSTEM_ flag from NT SDK version (crt32 tree on
	\\orville\razzle), picked up _MB_MAP_DIRECT from Dolphin verion
	(crtwin32 tree).

crtwin32\convert\_mbslen.c, mblen.c, mbstowcs.c, mbtowc.c, toupper.c,
		 towupper.c, wcstombs.c wctomb.c
	Changes from Steve Wood affecting only the libcnt build (i.e.,
	CRTLIBTYPE==NT). For the most part, they amount to calling an Rtl
	API to do the work in each case.

crtwin32\startup\mips\chkstk.s
	Some apparently cosmetic changes by DaveC to keep the MIPS assembler
	happy.

-----------------------------------------------------------------

Tue 18-Jan-94	(SteveSa)

crtwin32\iostream\ios.cxx -
	Revised my 10/28/93 fix to delete critical sections in the IOS
	destructor.  The original fix still created and destroyed the
	lock for the class on every c-tor/d-tor, instead of only doing
	it when all copies of the class are gone.  KarlSi provided
	insight in November on how to really fix this.

-----------------------------------------------------------------

Tue 18-Jan-94	(SteveSa)

crtwin32\heap\heapinit.c -
	Improved check for Win32S / Phar Lap TNT, which do not have
	uncommitted memory.  On those systems the heap should allocate
	smaller memory regions.  Chicago (Win 4.0) may set the "WIN32S"
	bit in the OS version, so we now also check that the Windows
	version is less than 4.0 before using small heap values.

-----------------------------------------------------------------

Mon 17-Jan-94	(GregF)

crtwin32\buildcrt.cmd
crtwin32\h\mm.inc
crtwin32\helper\i386\*.asm
	Simon Koeman's compiler helpers for __int64 arithmetic. They are
	a pretty much a straightforward port of the long int helpers in
	the 16-bit tree.

libwin32\makefile
	Put helper.lib, the __int64 helpers, into msvcrt*.lib for the x86
	build.

-----------------------------------------------------------------

Thu 13-Jan-94	(GregF)

crtwin32\helper\mips\llbit.c, lldefs.h
	Steve Hanson's latest changes, taken from crt32 on \\orville\razzle.

-----------------------------------------------------------------

Tues 11-Jan-94	(GregF)

crtwin32\dllstuff\crtexe.c, crtlib.c
crtwin32\h\internal.h
	When building crtdll.dll/.lib (NT version of the dll), use
	__GetMainArgs rather than __getmainargs.

-----------------------------------------------------------------

Mon 10-Jan-94	(GregF)

libwin32\makefile
	Added Steve Hanson libm to the build (subdirectory and
	library from fpwin32). This is MIPS-only. Also put conditionals
	around build rules to, hopefully, eliminate "unknown target"
	warnings.

-----------------------------------------------------------------

Fri 07-Jan-94	(GregF)

crtwin32\dos\dosmap.c
	Map ERROR_NOT_ENOUGH_QUOTA to ENOMEM. The OS error refers to not
	having enough non-swapable pages to handle...whatever. It can
	result from CreateThread() if too many threads are already in
	existence. Also, deleted Cruiser support and changed the definition
	of the errentry struct to handle codes > 255.

crtwin32\startup\thread.c
	When _beginthread() fails, free up the the _tiddata struct which
	was calloc-ed. Also, map the error on failure.

-----------------------------------------------------------------

Thu 06-Jan-94	(GregF)

crtwin32\buildcrt.cmd, buildcrt.nt
	Corrected typo (_helpdir was mistyped in one place) and added to
	the cleanup of environment variables at the end of the batch files.

crtwin32\h\math.h
	Picked up MIPS-only prototypes for single precision fp functions
	(e.g., sinf) from NT SDK version (Steve Hanson's work).

-----------------------------------------------------------------

Wed 05-Jan-94	(GregF)

crtwin32\crt32.def
	Picked up ALPHA_OPTIMIZATION and MIPS_OPTIMIZATION switches, which
	disable intrinsic functions, from the NT SDK version. I suspect
	these are not necessary for the crtwin32 tree (I think I have put
	in #pragmas to take care of all instances of conflicts), but it
	doesn't hurt to be sure (at least for now).

crtwin32\startup\sources
	Build tlssup.c for all target CPUs. Also, picked up a fix for the
	POSIX build from the NT SDK version (crt32 tree on \\orville\razzle),
	has to do with the private definition of RaiseException() when
	building for POSIX.

-----------------------------------------------------------------

Tue 04-Jan-94	(GregF)

crtwin32\buildcrt.nt
	Added variant of buildcrt.cmd for building the NT SDK version of the
	CRT libs.

-----------------------------------------------------------------

Mon 03-Jan-94	(GregF)

crtwin32\crt32.nt, makefile.nt
	Added variants of crt32.def and makefile for building the NT SDK
	version of the CRT libs.

crtwin32\h\stdlib.h
	Changed type of __mb_cur_max for NT SDK build to be the same as the
	type for the Dolphin build.

crtwin32\h\wchar.h
	Deleted a _CRTVAR1 that crept in with an earlier merge.

crtwin32\winheap\calloc.c, handler.cxx, malloc.c
	Changed #include <os2dll.h> to #include <mtdll.h> (SteveSa renamed
	the include file some time back).

-----------------------------------------------------------------

Mon 03 Jan-94	(SteveSa)

crtwin32\heap\heapadd.c
	Fix a bug which occurs after calls to _heapmin().  If a large block
	is malloc-ed and free-ed and then _heapmin() is called, the last
	entry in the heap will be a DUMMY entry encompassing the large region
	which was returned to the operating system.  Subsequent large mallocs
	will most likely cause a new region to be allocated which will
	overlap with that region.  The pblock pointer in the heap sentinel
	may need to be updated.

-----------------------------------------------------------------

Wed 22-Dec-93	(GregF)

crtwin32\h\winheap.h
	Added this header file used in building the winheap directory (heap
	manager for the NT SDK flavor of the CRT libs).

crtwin32\misc\i386\sehsupp.c
	Fixed and unconditional #define of WIN32_LEAN_AND_MEAN which
	caused warnings.

-----------------------------------------------------------------

Tue 21-Dec-93	(GregF)

crtwin32\oldnames
	 oldnames\makefile, sources
	Delfile-d. These were obsolete and not used (actually, I don't
	think they were EVER used).

crtwin32\convert\sources.nt
	 direct\sources.nt
	 linkopts\sources.nt
	 lowio\sources.nt
	Added. They are slight variations on the regular sources files,
	to be used in building the NT SDK variation of the CRT libs.

-----------------------------------------------------------------

Tue 21-Dec-93	(GregF)

crtwin32\clean.bat
	Cleaned up version of a simple batch file I use locally.

-----------------------------------------------------------------

Mon 20-Dec-93	(GregF)

crtwin32\eh\frame.cxx
crtwin32\eh\i386\trnsctrl.cxx
crtwin32\h\exsup.inc
	Changes from Philip Lucido.

crtwin32\misc\i386\abterm.asm, sehsupp.c
	New from Philip Lucido.

crtwin32\misc\i386\exsup.asm, setjmp.asm
	Changes from Philip Lucido.

crtwin32\misc\sources
	Pick up new files (above) added by Philip Lucido

-----------------------------------------------------------------

Fri 17-Dec-93	(ChrisWei)

Big Unicode-enable checkin:


Files changed:
====================================================================

Subdirectory \direct

findfile.c
sources

Subdirectory \dos

access.c
chdir.c
chmod.c
fullpath.c
getcwd.c
mkdir.c
rename.c
rmdir.c
sources
stat.c
unlink.c

Subdirectory \exec

cenvarg.c
dospawn.c
execl.c
execle.c
execlp.c
execlpe.c
execv.c
execve.c
execvp.c
execvpe.c
sources
spawnl.c
spawnle.c
spawnlp.c
spawnlpe.c
spawnv.c
spawnve.c
spawnvp.c
spawnvpe.c
system.c

Subdirectory \h

ctype.h
direct.h
internal.h
io.h
locale.h
mbstring.h
mtdll.h
process.h
stdio.h
stdlib.h
string.h
tchar.h
time.h
wchar.h

Subdirectory \h\sys

stat.h
utime.h

Subdirectory \lowio

creat.c
mktemp.c
open.c
sources

Subdirectory \mbstring

sources

Subdirectory \misc

getpath.c
makepath.c
searchen.c
sources
splitpat.c

Subdirectory \startup

stdenvp.c
tidprint.c

Subdirectory \stdio

_open.c
fdopen.c
fopen.c
freopen.c
popen.c
sources
tempnam.c
tmpfile.c

Subdirectory \time

asctime.c
ctime.c
sources
strdate.c
strtime.c
utime.c


Files removed:
====================================================================

Subdirectory \mbstring

mbconv.c          1    1  out      
mbfpconv.c        1    1  out      
mbprint.c         2    2  out      
mbscan.c          2    2  out      
mbvprint.c        1    1  out      


Files added:
====================================================================

Subdirectory \direct

wfindfil.c

Subdirectory \dos

waccess.c
wchdir.c
wchmod.c
wfullpath.c
wgetcwd.c
wmkdir.c
wrename.c
wrmdir.c
wstat.c
wunlink.c

Subdirectory \exec

wcenvarg.c
wdospawn.c
wexecl.c
wexecle.c
wexeclp.c
wexeclpe.c
wexecv.c
wexecve.c
wexecvp.c
wexecvpe.c
wspawnl.c
wspawnle.c
wspawnlp.c
wspawnlpe.c
wspawnv.c
wspawnve.c
wspawnvp.c
wspawnvpe.c
wsystem.c

Subdirectory \lowio

wcreat.c
wmktemp.c
wopen.c

Subdirectory \misc

wgetpath.c
wmakepath.c
wsearchen.c
wsplitpat.c

Subdirectory \startup

wstdenvp.c

Subdirectory \stdio

w_open.c
wfdopen.c
wfopen.c
wfreopen.c
wpopen.c
wtempnam.c
wtmpfile.c

Subdirectory \time

wasctime.c
wctime.c
wstrdate.c
wstrtime.c
wutime.c

-----------------------------------------------------------------

Fri 17-Dec-93	(GregF)

crtwin32\makefile
	Simplified some more.

-----------------------------------------------------------------

Thu 16-Dec-93	(GregF)

libwin32\makefile
	Added -opt:noref to Alpha build of msvcrt20.dll

-----------------------------------------------------------------

Mon 13-Dec-93	(SteveSa)

crtwin32\h\heap.h - cosmetic changes
crtwin32\heap\heapinit.c - cosmetic change
crtwin32\h\malloc.h - add _heapused()
crtwin32\heap\sources - add heapused.c
crtwin32\heap\heapused.c - NEW FILE containing _heapused()
libwin32\lib\i386\msvcrt20.def

	Added new routine _heapused() which returns the number of bytes
	of memory reserved by the heap.  It takes two parameters, either
	or both of which may be null.  If non-null, values are stored
	through them.  The first pointer will be set to the number of
	bytes devoted to allocated blocks in the heap, including headers.
	The second value will contain the total of all committed memory,
	both free blocks and in-use blocks.

-----------------------------------------------------------------

Mon 13-Dec-93	(SteveSa)

crtwin32\dllstuff\crtlib.c
crtwin32\h\mtdll.h
crtwin32\startup\dllcrt0.c
crtwin32\startup\thread.c
crtwin32\startup\tidtable.c
	Add new routine _freeptd() which frees up the C run-time's per-thread
	data.  _freeptd() is called in _beginthread() and on DLL_Thread_Detach
	notifications in both MSVCRT*.DLL and DLL's linked with LIBCMT.LIB.
	Note: _freeptd() frees up not only the per-thread data structure but
	also any subordinate buffers that it points to.  The old code had a
	leak even if the user called _beginthread/_endthread because the
	subordinate buffers allocated by tempnam/tmpfile/gmtime/ctime/etc.
	were NEVER freed up.

-----------------------------------------------------------------

Mon 13-Dec-93	(GregF)

crtwin32\h\heap.h
crtwin32\heap\heapadd.c, malloc.c, realloc.c
	Parameterized the allocation granularity as _GRANULARITY, defined
	to be 8 on MIPS, 4 otherwise (currently). Edited size rounding
	in malloc.c and realloc.c, and size and alignment checking in
	heapadd.c, accordingly.

crtwin32\h\excpt.h
	Alpha now sports a spiffy MS front-end, hence syntax of __try -
	__except contructs (e.g., __exception_code) is the same as it is
	for the x86 and MIPS compilers.

-----------------------------------------------------------------

Wed 08-Dec-93	(GregF)

crtwin32\libwin32\makefile
	Added #if !$(ALPHA) to the checks made before a default target
	(processor) pecification is used.

-----------------------------------------------------------------

Tue 07-Dec-93	(GregF)

crtwin32\mbstring\mbprint.c, mbscan.c
	Cast in second arg to va_start was choking alpha compiler!

-----------------------------------------------------------------

Mon 06-Dec-93	 (ChrisWei)

Changed:

crtwin32\h\mbstring.h, tchar.h
crtwin32\mbstring\sources

Added:

crtwin32\mbstring\mbconv.c mbfpconv.c, mbprint.,c mbvprint.c, mbscan.c

        Type-safe MB tchar mappings.

-----------------------------------------------------------------

Fri 03-Dec-93	(GregF)

crtwin32\misc\abs.c, labs.c, rotl.c, rotr.c
crtwin32\string\memcmp.c, memcpy.c, memset.c, strcat.c, strcmp.c, strlen.c
	Enabled #pragma function() directives for all MS front-ends (esp.,
	the Alpha compiler)

crtwin32\string\strset.c
	Added  #pragma function() for Alpha build.

-----------------------------------------------------------------

Wed 01-Dec-93	 (ChrisWei)

crtwin32\startup\crtlib.c [wcrtlib.c removed]
        Create both ascii and wide argv, create only ascii environ for dll.

crtwin32\h\tchar.h
        Fixed STDC inlining check.

-----------------------------------------------------------------

Wed 01-Dec-93	 (ChrisWei)

Files added:

crtwin32\startup\wstdenvp.c
crtwin32\misc\setenv.c, wsetenv.c, wputenv.c, wgetenv.c, wtombenv.c, mbtowenv.c

Files changed:

crtwin32\h\internal.h, tchar.h, stdlib.h
crtwin32\startup\crt0.c, dllcrt0.c, crt0dat.c, stdenvp.c, sources
crtwin32\dllstuff\crtlib.c
crtwin32\misc\getenv.c, putenv.c, sources

Add wide char environment variables. 


crtwin32\dos\chdir.c
        Set OS drive leter strings.

-----------------------------------------------------------------

Wed 01-Dec-93	 (GregF)

libwin32\makefile
	Added alpha support and cleaned up a bit.

libwin32\lib\alpha
	    \alpha\msvcrt20.def
	Def file to build Alpha version of msvcrt20.[dll|lib].

libwin32\i386\msvcrt20.def
	Added exports of some old, obsolescent functions (e.g., _sleep)
	which we need to support for NT SDK compatibility.

libwin32\mips\msvcrt20.def
	Added exports for 64-bit integer arithmetic helpers. Added exports
	for obsolescent functions as described above.

libwin32\tools\alpha
	Added to hold alpha build of tools. If we ever get an alpha, that
	is...

-----------------------------------------------------------------

Wed 01-Dec-93	 (GregF)

crtwin32\buildcrt.cmd
	Revised for new directories (esp., helpers) and changes to
	dirs file. Also fiddled with when linkopts is built.

crtwin32\crt32.def
	Cleaned up and simplified.

crtwin32\dirs
	Merged in NT SDK version.

crtwin32\makefile
	Alpha support. MIPS compiler helpers for 64-bit int arithmetic.
	Lot of cleanup.

crtwin32\convert\iswctype.c
	Always build is_wctype() (not just for _NTSDK).

crtwin32\helper
	\helper\*.*
	       \mips
	       \mips\*.*
	Compiler helper routines. For now, these 64-bit integer
	arithmetic helpers for MIPS compiler.

crtwin32\small
	\small\*.*
	      \mips
	      \mips\huge.s
	Used for NT SDK build only (small.lib).
        
-----------------------------------------------------------------

Mon 29-Nov-93	(ChrisWei)

crtwin32\dos\chdir.c, drive.c
crtwin32\misc\putenv.c
crtwin32\startup\stdenvp.c
        No longer store current drive in CRT env strings.

crtwin32\h\internal.h
        Remove undef GetEnvStrings.
        
-----------------------------------------------------------------

Wed 24-Nov-93   (ChrisWei)

libwin32\include\stdarg.h, wchar.h, ctype.h, dos.h, string.h, time.h, 
                stdlib.h, tchar.h
        Update release headers. Now in sync.
        
-----------------------------------------------------------------

Wed 24-Nov-93   (ChrisWei)

Files added:
crtwin32\dllstuff\wcrtexe.c, wcrtlib.c, wdllargv.c, sources
crtwin32\linkopts\wsetargv.c
crtwin32\startup\wcrt0.c, wdllcrt0.c, wstdargv.c, wwild.c, wwincrt0.c, 
                _wstargv.c, sources

Files changed:

crtwin32\h[libwin32\include]\dos.h, internal.h, stdlib.h, tchar.h
crtwin32\dllstuff\crtexe.c, crtlib.c, sources
crtwin32\startup\crt0.c, crt0dat.c, dllcrt0.c, stdargv.c, wild.c, sources

        Added wide argv handling. Not yet in exec/spawn, etc.

-----------------------------------------------------------------

Mon 22-Nov-93   (ChrisWei)

crtwin32\h[libwin32\include(before next drop)]\ctype.h, string.h, wchar.h
        Use #define wcsxxx _wcsxxx only for SDK, define protos for 
        oldnames.lib for Dolphin. Also, wide char stuff outside of wchar.h 
        must have !__STDC__ test around it.

-----------------------------------------------------------------

Thu 18-Nov-93   (ChrisWei)

crtwin32\misc\aw_*.c

        Test for entry point function stubs.

-----------------------------------------------------------------

Mon 15-Nov-93   (ChrisWei)

crtwin32\h\wchar.h - get rid of W4 struct tm warnings
libwin32\makefile - add to oldnames.lib

-----------------------------------------------------------------
Mon 15-Nov-93   (ChrisWei)

crtwin32\string\strcoll.c, stricoll.c, wcscoll.c, wcsicoll.c,
        strlwr.c, strupr.c, wcslwr.c, wcsupr.c,
        strxfrm.c, wcsxfrm.c
crtwin32\misc\aw_*.c, getqloc.c, initctyp.c, inithelp.c
crtwin32\mbstring\ismbalnm.c, ismbgrph.c, ismbpunc.c
crtwin32\h\setlocal.h
crtwin32\convert\isctype.c, iswctype.c, 
        tolower.c, toupper.c, towlower.c, towupper.c

        Added code page to __crtxxx() calls to allow the caller to determine
        the code page to be used in MB/WC translation. For Dolphin bug #3778.

crtwin32\misc\getqloc.c
        Test all code pages, even ones from OS.

crtwin32\h\tchar.h
libwin32\include\tchar.h
        isascii, isxdigit map to wrong name on MB case.

-----------------------------------------------------------------

Fri 12-Nov-93	(GregF)

crtwin32\convert\strtoq.c
	Added for compatilibity with NT SDK (Alpha only). Only built
	for Alpha so it is doesn't affect x86 or MIPS builds.

-----------------------------------------------------------------

Wed 10-Nov-93	(GregF)

crtwin32\time\systime.c
	Added for compatilibity with NT SDK. Not added to sources yet,so
	it is not getting built.

-----------------------------------------------------------------

Tue 09-Nov-93	(GregF)

crtwin32\startup\crt0.c
	Guard as much as possible of the init. code in the __try/__except
	statement. The important point is UnhandledExceptionHandler() now
	gets called for exceptions that occur during the execution of
	constructors for static C++ objects. Also, moved __initmbctable
	call to here, just before calls to _setargv and _setenvp.

crtwin32\startup\crt0dat.c
	Removed call to __initmbctable from _cinit. The ctype table must
	be initialized before command line arguments and environment strings
	are process, thus it must go in crt0.c, dllcrt0.c and crtlib.c.

crtwin32\startup\dllcrt0.c
	Added call to __initmbctable (used to be in crt0da.c).

crtwin32\dllstuff\crtexe.c
	Guard as much as possible of the init. code in the __try/__except
	statement. For crtexe.c, this is just about everything.

crtwin32\dllstuff\crtlib.c
	Added call to __initmbctable (used to be in crt0dat.c).

-----------------------------------------------------------------

Tue 02-Nov-93	(GregF)

crtwin32\h\conio.h
	Made port i/o prototypes conditional on _M_IX86 (they are MS
	and x86 specific extensions).

crtwin32\h\excpt.h
	Don't redefine C++ EH keywords!

crtwin32\h\fltintrn.h
	Disabled 4069 warning!

crtwin32\h\stdlib.h
	Re-removed obsolete version and mode variables, and associated
	baggage.

-----------------------------------------------------------------

Thu 28-Oct-93	(SteveSa)

crtwin32\h\ios.h
crtwin32\h\streamb.h
crtwin32\iostream\ios.cxx
crtwin32\iostream\mtlock.c
crtwin32\iostream\streamb.cxx
	Critical sections allocated for iostream objects were not being
	de-activated by calling the Win32 API DeleteCriticalSection in
	their destructor.  Added new function _mtlockterm() which is the
	analog of _mtlockinit().  Just free-ing the memory malloc-ed for
	a critical section does not free up the resources that NT allocates
	for a critical section when you call InitializeCriticalSection().

-----------------------------------------------------------------

Tue 26-Oct-93	(ChrisWei)

added files:
	crtwin32\misc\mbval.c setmbval.c

changed files:
	crtwin32\misc\sources, aw_cmp.c, aw_str.c, aw_map.c
	crtwin32\stdio\fgetwc.c
	crtwin32\convert\_mbslen.c, mblen,c, mbstowcs.c, mbtowc.c

        Add test for invalid MB chars. Since requisite flag not supported
        by older NT version, at startup we confirm if flag is supported.

-----------------------------------------------------------------

Fri 22-Oct-93	(ChrisWei)

added files:
	crtwin32\mbstring\ismbalnm.c, ismbgrph.c, ismbpunc.c

changed files:
	crtwin32\h\mbstring.h, tchar.h
	crtwin32\mbstring\sources
	libwin32\lib\i386[\mips]\msvcrt20.def

                These new functions fill out holes in the ismbc* set
        and provide some missing mappings for tchar.h.


crtwin32\misc\aw_str.c
	fixed bug

crtwin32\mbstring\ismbknj.c
	now return FALSE outside of Japan

-----------------------------------------------------------------

Fri 22-Oct-93	(SteveSa)

crtwin32\dllstuff\i386\cinitexe.mak, cinitexe.asm
crtwin32\dllstuff\{i386,MIPS}\cinitexe.obj
crtwin32\startup\i386\crt0init.mak, crt0init.asm
crtwin32\startup\{i386,MIPS}\crt0init.obj
	Change the attribute of the directive section (.drectve) and
	make the symbol name match the section name (both lower case).

-----------------------------------------------------------------

Fri 22-Oct-93	(GregF)

crtwin32\stdio\fread.c, fwrite.c
	Fixed divide-by-0 error which would occur if one used setvbuf
	to completely unbuffer the stream.

-----------------------------------------------------------------

Fri 22-Oct-93	(ChrisWei)

addfiles:
	libwin32\tools\i386[\mips]\aliasobj.exe
        libwin32\tools\source\aliasobj.c
            JonM's new program to build alias objects for oldnames.lib

changes:
	crtwin32\lib\i386[mips]\msvcrt20.def
            add __mbcodepage to exports
	libwin32\buildall.cmd
            clean up MIPS build
	libwin32\makefile
            finish MIPS build, install new oldnames.lib build procedure

-----------------------------------------------------------------

Thu 21-Oct-93	(GregF)

crtwin32\winheap, winheap\*.*
	Picked up winheap directory from crt32 tree. Cleaned up the
	sources a little.

-----------------------------------------------------------------

Wed 20-Oct-93	(SteveSa)

crtwin32\dllstuff\i386\cinitexe.mak, cinitexe.asm
crtwin32\dllstuff\{i386,MIPS}\cinitexe.obj
crtwin32\startup\i386\crt0init.mak, crt0init.asm
crtwin32\startup\{i386,MIPS}\crt0init.obj
	Cleaned up make process to create I386 and MIPS versions
	of cinitexe.obj and crt0init.obj.  Added MSVCNT v1.0
	linker enhancement directives to MIPS versions (which merge
	.CRT into .DATA and cause a default search of KERNEL32.LIB).

crtwin32\dllstuff\MIPS\cinitexe.obj
crtwin32\lowio\MIPS\cinitcon.obj
crtwin32\misc\MIPS\cinitcnv.obj
crtwin32\misc\MIPS\cinitone.obj
crtwin32\startup\MIPS\crt0init.obj
crtwin32\stdio\MIPS\cinitstd.obj
crtwin32\stdio\MIPS\cinittmp.obj
crtwin32\time\MIPS\cinitclk.obj
	Changed CPU type of MIPS objects from R3000 (0x162) to R4000 (0x166)

libwin32\tools\source\i386mips.c,
libwin32\tools\i386mips.exe - tool to convert i386 data-only objects
	to MIPS by changing the machine type and relocation types.
	Changed CPU type of target from R3000 to R4000, fixed display
	of raw data in the object file being edited.

-----------------------------------------------------------------

Tue 19-Oct-93	(ChrisWei)

crtwin32\h\	mbdata.h, mbstring.h - remove _MBCS test and SBCS defines

crtwin32\mbstring\mbsicmp.c, mbsnicmp.c mbsnbicm.c - lowercase compare

-----------------------------------------------------------------

Mon 18-Oct-93	(ChrisWei)

crtwin32\h\	mbctype.h - fix prototype
		tchar.h - add missing mappings

libwin2\include\*.h, sys\*.h - updated from crtwin32 tree

libwin32\makefile, buildall.cmd - add MIPS support & change back to msvcrt20!!
libwin32\lib\i386(mips)\msvcrt30.def -> msvcrt20.def

-----------------------------------------------------------------

Mon 18-Oct-93	(GregF)

crtwin32\misc\sources, i386\setjmp.asm, i386\setjmpex.asm (new)
	Picked up support for NT SDK's setjmp/setjmpex. For Dolphin build,
	the both setjmp and setjmpex will be "EH safe". For _NTSDK, only
	setjmpex will be.

crtwin32\misc\i386\exsup.asm
	Put in fix from Phil Lucido. The DF is indeterminate upon entry to
	_except_handler.

-----------------------------------------------------------------

Thu 14-Oct-93	(GregF)

crtwin32\h\excpt.h, float.h, stdio.h
	Merged again with NT version.

crtwin32\h\fltintrn.h, fstream.h, iomanip.h, ios.h, internal.h, iostream.h,
	   istream.h, malloc.h, mbctype.h, mbdata.h, mbstring.h
	Enclosed any #pragma-s in #ifdef _MSC_VER - #endif to hide them from
	inferior (i.e., non-MS) compilers and RC. Deleted obsolete build
	macro checks conditioned on COMBOINC in some files. Replaced MTHREAD
	with _MT. _ALPHA_ with _M_ALPHA. Deleted _MIPS_ (effectively replaced
	by _M_MRX000).

crtwin32\h\memory.h, new.h, ostream.h, process.h, search.h, setjmp.h,
	   setjmpex.h, signal.h, stdarg.h, stddef.h, stdiostr.h, streamb.h,
	   strstrea.h, syserr.h, tchar.h, varargs.h, wchar.h
crtwin32\h\sys\stat.h, timeb.h, types.h, utime.h
	Modified to support both Cuda and NT version.

-----------------------------------------------------------------

Wed 13-Oct-93	(SteveSa)

Renamed crtwin32/h/os2dll.h to mtdll.h.  Also changed the #include
	lines in all of the source files that include it.

-----------------------------------------------------------------

Fri 08-Oct-93	(GregF)

crtwin32\h\ios.h, locale.h, math.h, mbctype.h, mbstring.h
	Support both NT and Cuda.

-----------------------------------------------------------------

Fri 08-Oct-93	(GregF)

crtwin32\misc\sources, alpha, mips, alpha\*.*, mips\*.*
crtwin32\startup\sources, alpha, mips, alpha\*.*, mips\*.*
	Added stuff from crt32 (NT SDK) to support building for MIPS and
	Alpha.

-----------------------------------------------------------------

Weds 06-Oct-93	(GregF)

crtwin32\h\string.h
	Merged NT and Cuda.

crtwin32\h\assert.h, conio.h, ctype.h, direct.h, dos.h, errno.h, excpt.h,
	   float.h, fltintrn.h, fpieee.h, internal.h, io.h, malloc.h,
	   stdio.h, stdlib.h, time.h
	Fixed conditional #define for _CRTAPI2

-----------------------------------------------------------------

Weds 06-Oct-93	(GregF)

crtwin32\h\malloc.h
	Merged NT and Cuda. Changed _HEAP_MAXREQ to a more useful value.

crtwin32\heap\malloc.c, realloc.c
	Added range check to size requests in malloc, realloc, _expand

crtwin32\mbstring\m*.c (except for mbascii0.c, mbctype.c, mbscat.c,
		  mbsdup.c, mbspbrk.c, mbsspnp.c), s*.c, t*.c
	Replaced _CRTAPI* with __cdecl.

-----------------------------------------------------------------

Tue 05-Oct-93	(GregF)

crtwin32\mbstring\is*.c
	Replaced _CRTAPI* with __cdecl.

-----------------------------------------------------------------

Fri 01-Oct-93	(GregF)

crtwin32\hack
crtwin32\hack\makefile, sources, stubs.c
	Resurrected for NT SDK libs (libcnt.lib uses this, I believe)

-----------------------------------------------------------------

Fri 01-Oct-93	(ChrisWei)

Files changed:

crtwin32\h\stdio.h, wchar.h
libwin32\include\stdio.h, wchar.h
        Add fputws(), fgetws()

crtwin32\stdio\fgetwc.c, fputwc.c ungetwc.c
        Clean up TEXT test

crtwin32\stdio\fgets.c, sources
        Enable for fgetws(), fputws()

Files added:

crtwin32\ fgetws.c, fputws.c
        New wide char functions

-----------------------------------------------------------------

Thu 30-Sep-93	(GregF)

crtwin32\dos\getcwd.c
	Removed #include <error.h> - it was causing lots of annoying
	redefinition warnings.

crtwin32\exec\cenvarg.c, execl.c, execle.c, execlp.c, execlpe.c, spawnl.c
	      spawnle.c, spawnlp.c, spawnlpe.c
	Merged Cuda and NT versions.

crtwin32\exec\getproc.c, loaddll.c
	Resurrected for compatibility with NT SDK (had been considered
	obsolete and dropped from Cuda)"

-----------------------------------------------------------------

Wed 29-Sep-93	(GregF)

crtwin32\string\memcpy.c, memmove.c, memset.c, strcoll.c, stricoll.c,
		wcscoll.c, wcsicoll.c, strtok.c
	Merged Cuda and NT versions.

-----------------------------------------------------------------

Wed 29-Sep-93	(GregF)

crtwin32\convert\isctype.c, iswctype, mblen.c, mbstowcs.c, mbtowc.c,
		 tolower.c, toupper.c, towlower.c, towupper.c, wcstombs.c,
		 wctomb.c
	Merged Cuda and NT versions.

crtwin32\direct\seterrm.c, slbeep.c
	Restored and cleaned up these dinosaurs for the NT SDK build.

-----------------------------------------------------------------

Tue 28-Sep-93	(GregF)

crtwin32\h\io.h
	Restored an /* _MTHREAD_ONLY */ comment which I had accidently
	deleted (kept an internal-use-only preprocessor directive from
	being stripped out!).

-----------------------------------------------------------------

Tue 28-Sep-93	(ChrisWei)

The last of the _MBCS_OS and _KANJI merges:

h\mbctype.h, mbdata.h
mbstring\ismbalph.c, ismbbyte.c, ismbdgt.c, ismblwr.c, ismbprn.c, ismbspc.c, ismbupr.c, mbclevel.c, mbctype.c, mbsicmp.c, mbslwr.c, mbsnbicm.c, mbsnicmp.c, mbsupr.c, mbtohira.c, mbtokata.c, mbtolwr.c, mbtoupr.c, tojisjms.c, tombbmbc.c

The MB stuff now works properly for both Japan and generic MB languages.

-----------------------------------------------------------------

Mon 27-Sep-93	(ChrisWei)

crtwin32\mbstring\ismbknj.c, ismbprn.c., mbclevel.c, mbsnbcat.c,
        mbsncat.c, mbtohira.c, mbtokata.c, tojisjms.c, tombbmbc.c
crtwin32\h\mbctype.h, mbdata.h, mbstring.h
        _MBCS_OS & _KANJI merge: I have added all the Kanji-specific
functions to the normal build process, and merged the few functions
that were different under the two build scenarios.

convert\isctype.c, iswctype.c, tolower.c, toupper.c, towlower.c, towupper.c
misc\aw_cmp.c, aw_loc.c, aw_map.c, aw_str.c, getqloc.c, initcoll.c,
        initctyp.c, inithelp.c, inittime.c,	initnum.c, initmon.c
string\strcoll.c, stricoll.c, strlwr.c, strupr.c, strxfrm.c, wcscoll.c,
        wcsicoll.c, wcslwr.c, wcsupr.c, wcsxfrm.c

        NLS API A&W wrappers: Since Chicago supports only ASCII ("A")
flavors of certain NLS API functions, while NT supports only the
Unicode ("W") type, I have built CRT wrapper functions that, at
runtime, search for the desired type and uses the other if necessary.
These libs will now link on NT and Chicago. This has been partially
tested on NT but not at all on Chicago.

libwin32\include\float.h, fltintrn.h, fpieee.h, fstream.h, heap.h internal.h
	io.h, iostream.h, istream.h, stdio.h, stdlib.h, time.h,
        assert.h, conio.h, ctype.h, direct.h, dos.h, errno.h, excpt.h

        Checked in GregF's changes for Dolphin drop.

-----------------------------------------------------------------

Fri 24-Sep-93	(GregF)

crtwin32\h\float.h, fltintrn.h, fpieee.h, fstream.h, heap.h internal.h
	io.h, iostream.h, istream.h, stdio.h, stdlib.h, time.h

crtwin32\misc\getenv.c, initmon.c, initnum.c, inittime.c, onexit.c

	Merged NT SDK and Cuda versions.


-----------------------------------------------------------------

Fri 24-Sep-93	(ChrisWei)

crtwin32\buildcrt.cmd
libwin32\buildall.cmd
	Make MB build default.

-----------------------------------------------------------------

Thu 23-Sep-93	(GregF)

crtwin32\h\assert.h, conio.h, ctype.h, direct.h, dos.h, errno.h, excpt.h
	Merged NT SDK and Cuda versions.

-----------------------------------------------------------------

Wed 22-Sep-93	(GregF)

crtwin32\string\strlwr.c, strupr.c, wcslwr.c, wcsupr.c
	Merged NT SDK and Cuda versions.

crtwin32\time\utime.c
	Have NT convert local file time to system file time.

-----------------------------------------------------------------

Wed 25-Aug-93	(ChrisWei)

crtwin32\mbstring -
    Change all short params to int.
    Updated the following files from NT-J tree:
        mbsdec.c 
        mbsinc.c 
        mbschr.c 
        mbsnbcat.c 
        mbsnbset.c 
        mbsncat.c 
        mbsnset.c 
        mbsrchr.c 
        mbtohira.c 
        mbtokata.c 
        mbtolwr.c 
        mbtoupr.c 
        tojisjms.c 
        tombbmbc.c 

crtwin32\h -
    Change all short params to int.
    Updated the following files from NT-J tree:
        mbstring.h
    New tchar.h from Ikura.
        tchar.h

-----------------------------------------------------------------

Tue 17-Aug-93	(ChrisWei)

crtwin32\mbstring -
    Updated the following files from NT-J tree:
        mbctype.c
        mbschr.c
        mbsdec.c
        mbsinc.c
        mbsncpy.c
        mbsninc.c
        mbstok.c
        strdec.c
        strinc.c
        strninc.c
        tojisjms.c 
    Added the following files & updated mbstring\sources:
        ismbsle.c
        ismbstr.c
        mbclen.c
        mbccpy.c
        mbsnbcat.c
        mbsnbcmp.c
        mbsnbcpy.c
        mbsnbicm.c
        mbsnbset.c
        mbspbrk.c
        mbsspnp.c 

crtwin32\dos\fullpath.c
crtwin32\lowio\mktemp.c
crtwin32\misc\makepath.c
crtwin32\misc\splitpat.c
crtwin32\startup\stdargv.c
crtwin32\startup\wild.c
crtwin32\stdio\input.c
crtwin32\stdio\output.c
    Merged in NT-J MB changes.

-----------------------------------------------------------------

Fri 06-Aug-93	(SteveSa)

crtwin32\heap\realloc.c -
	Fix bug which occurs when realloc() cannot expand the block in place
	and cannot malloc a new block.  The code was free-ing the successor
	block, a very, very bad thing to do.  The bug occurred rarely because
	it is hard to run out of memory on Windows NT, but it was found by
	the Phar Lap TNT DOS Extender team, where memory is less abundant.
	It looks like this bug was there in the sources since 1989!

-----------------------------------------------------------------

Fri 30-Jul-93	(GregF)

crtwin32\h\internal.h
crtwin32\misc\winsig.c, winxfltr.c
	When a SIGFPE handler has been installed and an FPE occurs, the
	handling for ALL of the FPE-s must be reset to SIG_DFL before calling
	the user's handler (I had been only resetting the handling for the
	one FPE).

-----------------------------------------------------------------

Tue 27-Jul-93	(GregF)

crtwin32\stdio\output.c
	Generalized a bug fix MattBr originally made for the POSIX build
	only. Now, the static functions write_multichar and write_string
	stop trying to write out characters when an error occurs.

-----------------------------------------------------------------

Fri 27-Jul-93	(GregF)

crtwin32\direct\findfile.c
crtwin32\dos\stat.c
crtwin32\h\internal.h
crtwin32\lowio\fstat.c
crtwin32\time\dtoxtime.c, time.c
	Changed so that the only time values obtained and directly used
	from the system are LOCAL time values. This partially handles the
	problems caused by the incompatible definitions of system time
	between Win32 (UTC) and Win32C (local).

-----------------------------------------------------------------
|								|
| * The Final Drop for MSVCNT ver 1.0 was made at this point. * |
|								|
-----------------------------------------------------------------

Fri 23-Jul-93	(SteveSa)

vcrtlib\makefile - added heap/obj/i386/handler.obj to list of C++
	objects mentioned to the linker, so that set_new_handler()
	will be exported from MSVCRT10.DLL.

vcrtlib\lib\i386\msvcrt10.def
	Added _heapadd, _heapchk, _heapmin, _heapset, _heapwalk
	to the list of functions exported by MSVCRT10.DLL.

-----------------------------------------------------------------

Thu 15-Jul-93	(SteveSa for GregF)

<<< Corresponding changes were also made to \\orville\razzle\src\crt32 >>>

vcrt32\time\ftime.c
vcrt32\time\localtim.c
vcrt32\time\mktime.c
vcrt32\time\strftime.c
vcrt32\time\tzset.c
	The routines ftime, localtime, mktime, and strftime were calling
	_tzset to make sure that the timezone/daylight/tzname variables
	were set.  They now call __tzset.  __Tzset calls _tzset the first
	time it is called and thereafter just returns.  The reason for
	this change is that _tzset is very slow if it finds no "TZ"
	environment variable, because in that case it calls the Win32
	routine GetTimeZoneInformationW.

	This behavior is consistent with our 16-bit libraries.  If the user
	changes the "TZ" variable (by calling putenv()), the routine _tzset
	must be called explicitly to make the change to "TZ" effective.

-----------------------------------------------------------------

Wed 14-Jul-93	(SteveSa)

<<< Corresponding change made by Steve Wood to \\orville\razzle\src\crtlib >>>

vcrtlib\lib\i386\msvcrt10.def
	Added _clear87 to the list of functions exported by MSVCRT10.DLL.

-----------------------------------------------------------------

Tues 13-Jul-93	(GregF)

vcrt32\lowio\open.c
	_read_lk() was being called to read the last character of a text
	file, to see if it was ^Z. Well, _read_lk() will return 0 if it
	read a single ^Z (treats it as an eof flag rather than a char).

-----------------------------------------------------------------

Thu 01-Jul-93	(SteveSa)

<<< Corresponding change was also made to \\orville\razzle\src\fp32 >>>

vcfp32\conv\strgtold.c
	Made buf[] a stack local, not a static global, to avoid bugs in
	multi-thread models.

-----------------------------------------------------------------
|								|
|	***  The "Jaws" Drop was made at this point.  ***	|
|								|
-----------------------------------------------------------------

Wed 30-Jun-93	(GregF)

<<< Corresponding change was also made to \\orville\razzle\src\crt32 >>>

vcrt32\time\tzset.c
	Added limited support for system's notion of local time. If there
	is no TZ environment variable, I attempt to use GetTimeZoneInform-
	ation to determine the offset to local time and whether or not
	daylight saving time exists in the time zone.

-----------------------------------------------------------------

Tue 29-Jun-93	(GregF)

vcrt32\stdio\ftell.c
	Fixed another nasty bug with the variable buffer sizing. ftell
	was using _bufsiz as the size of the last read request from the
	file, which isn't always true.

-----------------------------------------------------------------

Tue 22-Jun-93	(GregF)

vcrt32\h\file2.h
vcrt32\stdio\_filbuf.c, _freebuf.c, fseek.c, setvbuf.c
	Introduced _IOSETVBUF flag to fix an interaction between
	setvbuf() and the scheme for using a variable buffer size on
	"random access" files opened for read-access-only. The way to
	fix the bug was to introduce a new flag, _IOSETVBUF, and use to
	suppress this variable buffer size hooha.

-----------------------------------------------------------------
|								|
| Weekly Drop .3167 (Wed 16 June 1993) was made at this point.	|
|	(The libs were actually rebuilt Thu 17 June 1993.)	|
|								|
-----------------------------------------------------------------

Thu 17-Jun-93	(JamesMa)

vcrt32\include\float.h
	Changed _statusfp & _clearfp to macros.
	
-----------------------------------------------------------------

Weds 16-Jun-93	(GregF)

vcrt32/string/i386/strcat.asm, strcmp.asm, strlen.asm
	Added FPO directives.

-----------------------------------------------------------------

Tue 15-Jun-93	(GregF)

vcrt32/direct/sources
vcrt32/direct/i386/enable.asm
vcrt32/h/dos.h
	Resurrected old x86-specific functions, _enable() and _disable().

-----------------------------------------------------------------

Mon 14-Jun-93	(GregF)

vcrt32/string/i386/strcmp.asm
	Fixed special case bug found by DanS.

-----------------------------------------------------------------
|								|
| Weekly Drop .3160 (Wed 09 June 1993) was made at this point.	|
|								|
-----------------------------------------------------------------

Wed 09-Jun-93	(SteveSa)

<< Corresponding changes made to \\orville\razzle\src\crt32 and crtlib >>

vcrt32/h/iomanip.h
vcrtlib/include/iomanip.h
	The const keyword was added to the declarations of the << and >>
	operators of SMANIP, whatever that means.  This apparently fixes
	Cuda Bug 5048, an unnecessary warning message about lvalues and
	what not.

----------------------------------------------------------------------

Tue 08-Jun-93	(SteveSa)

vcrt32\dllstuff\crtlib.c, crtdll.c
vcrt32\startup\dllcrt0.c
	Clean up error handling in case of failure.
	If the user routine DllMain returns failure on Process Detach,
	C Run-Time clean-up should still occur.  (It now does.)  If the
	user DllMain returns failure on Process Attach, the CRT should
	clean up its own just-initialized data structures before
	returning failure.  MSVCRT10.DLL should also clean up its heap
	if it fails further initialization and will return failure on
	Process Attach.

	I also cleaned up the white space in some header files (fcntl.h).

----------------------------------------------------------------------

Tue 08-Jun-93	(GregF)

<<< Corresponding changes made to \\orville on 07-Jun>>

vcrt32\dllstuff\crtlib.c, crtdll.c
vcrt32\startup\dllcrt0.c
	Added a flag to kept track of process-attach notification to
	the DLL (our crtdll, or a user dll linked with one of our libs).
	The idea is to avoid doing any 'cleanup' on process-detach
	notification unless there has been a prior process-attach
	notification. Kinky, but this can occur as a result of a call
	to LoadLibrary that fails (e.g., load a DLL which uses several
	other DLLs and one of the DLLs is bad in some manner which causes
	the loader to quit and return an error).

----------------------------------------------------------------------

Mon 07-Jun-93	(ChrisWei)

<<< Changes already made by KarlSi to \\orville >>

vcrt32\h\stdlib.h
vcrt32\convert\_mbslen.c
vcrtlib\include\stdlib.h
vcrtlib\lib\i386\msvcrt10.def
	Change _mbslen to _mbstrlen, return type to size_t.

----------------------------------------------------------------------

Thu 03-Jun-93	(PhilipLu)

<<< Changes already made by GregF to \\orville >>

vcrt32\h\fcntl.h
	Add _O_SHORT_LIVED, _O_SEQUENTIAL, _O_RANDOM
vcrt32\lowio\open.c
vcrt32\stdio\_open.c
	Support lowio/stdio access to FILE_ATTRIBUTE_TEMPORARY,
	FILE_FLAG_SEQUENTIAL_ACCESS and FILE_FLAG_RANDOM_ACCESS
	CreateFile attributes

----------------------------------------------------------------------

Wed 02-Jun-93	(ChrisWei)

<<< Change made to \\orville\razzle\src\crt32 almost simultaneously >>>

vcrt32\convert\_mbslen.c
	verify MB validity
vcrt32\convert\mblen.c, mbtowc.c
	rewrite - bugs, optimize, error handling
vcrt32\convert\wctomb.c, wcstombs.c, mbstowcs.c, tolower.c, toupper.c
vcrt32\string\strlwr.c, strupr.c
	optimize and beautify

----------------------------------------------------------------------

Fri 28-May-93	(ChrisWei)

vcrt32\h[vcrtlib\include]\tchar.h
	Add another level of indirection to the _TEXT macro to allow
	_TEXT(__FILE__) to work.

----------------------------------------------------------------------

Wed 26-May-93	(SteveSa)

dos\getcwd.c -
	To get the current directory of a non-current drive, we were
	consulting the special environment variables.  It seems wiser
	to use the Win32 function GetFullPathName() to resolve this
	information.  The latter seems to work well on TNT.

vcrt32\h\process.h
vcrtlib\include\process.h
	Add prototypes for _CRT_INIT(@12) and DllMain(@12).  The latter
	is not declared if -Za is selected because of its non-ANSI name.

----------------------------------------------------------------------

Tue 25-May-93	(GregF)

h\stdio.h
stdio\_filbuf.c, fseek.c
	Use a small buffer size (_SMALL_BUFSIZ) for the first _filbuf
	call following an fseek on a read-access-only file. The idea is
	to reduce the penalty of a large default buffer size on random
	access files, at least those which are opened only for read
	access.

----------------------------------------------------------------------

Mon 24-May-93	(SteveSa)

vcrt32/makefile
vcrtlib/makefile - new object atonexit.obj is added to MSVCRT.LIB

vcrt32/h/stdlib.h
vcrtlib/include/stdlib.h -
	atexit/_onexit/onexit no longer take _CRTIMP [ __declspec(dllimport) ]

vcrtlib/lib/i386/msvcrt10.def - atexit/_onexit are now exported only
	as indirects (_imp__*) so that they will not be called directly
	Also added __dllonexit.

vcrt32/dllstuff/sources - add atonexit.c
vcrt32/dllstuff/atonexit.c - implements atexit/_onexit for EXEs and DLLs
	linked with MSVCRT.LIB.  At run-time, the code will implement
	either a call to __dllonexit to maintain a private atexit/_onexit
	list for the DLL (which will be called on DLL process detach)
	or else a call to _onexit exported from MSVCRT10.DLL for an EXE.

vcrt32/dllstuff/crtexe.c
vcrt32/dllstuff/crtdll.c - minor changes to support the new atexit/_onexit

vcrt32/misc/onexit.c - add __dllonexit routine for CRTDLL model only

	Before these changes, a DLL which was loaded and unloaded dynamically
	(via LoadLibrary/FreeLibrary) which also registered C++ destructors 
	or called atexit/_onexit would add entries to the process-wide
	atexit table in MSVCRT10.DLL.  That table was not processed until
	process termination, at which time the d-tors or atexit routines
	were long gone.  Those d-tors and atexit routines must be called
	when the DLL is unloaded, whenever that is.  An EXE linked with
	MSVCRT.LIB remains pretty much the same, but a DLL linked with
	MSVCRT.LIB now does the right thing in all cases.

----------------------------------------------------------------------

Tue 25-May-93	(GregF)

string\strspn.c, strtok.c
	Properly handle chars > 127 in both the delimiter and source
	strings. Note that strspn.c isn't actually used in our build
	(we use i386\strspn.asm). The change to strspn.c is identical
	to the one made to crt32\string\strspn.c on \\orville\razzle.
	However, the change to strtok.c is a bit more efficient than
	the bug fix I made to the crt32 version.

----------------------------------------------------------------------

Fri 21-May-93	(GregF)

<<< Change made to \\orville\razzle\src\crt32 simultaneously >>>

convert\strtol.c, wcstol.c
	Fixed bug in strtoul/wcstoul introduced by last 'fix'.

----------------------------------------------------------------------

Thu 20-May-93	(GregF)

<<< Change made to \\orville\razzle\src\crt32 simultaneously >>>

misc\getqloc.c, initctyp.c, initmon.c, initcoll.c, initnam.c,
     inittime.c
	replaced #include <windef.h> and #include <winnls.h> with
	#include <windows.h>

----------------------------------------------------------------------

Tue 18-May-93	(SteveSa)

tools\win32\relinc.if
h\stdarg.h
h\stdio.h
h\varargs.h
h\wchar.h
	Change #if defined(FOO) to #ifdef FOO for _ALPHA_, _MIPS_, and
	_M_MRX000.  Move those symbols in the if-stripper script from
	enabled & kept to disabled & discarded.  MIPS & ALPHA support
	is inappropriate for Visual C++ v1.0 for Windows NT.

----------------------------------------------------------------------

Mon 17-May-93	(GregF)

dllstuff\crtexe.c
startup\crt0.c
startup\stdargv.c
	Handle a quoted program name with embedded spaces ("argv[0]").

----------------------------------------------------------------------

Mon 17-May-93	(SteveSa)

h\io.h -
	The oldnames #defines used to be suppressed if __cplusplus was
	defined.  KarlSi made this change last summer because #define-ing
	open, read, write, etc.  User C++ code was likely to use those
	names.  Now that we do link-time aliasing, we need not worry about
	these names and C++ code.

----------------------------------------------------------------------

Tue 11-May-93	(GregF)

h\stdio.h
lowio\chsize.c
stdio\_file.c, _getbuf.c, _sftbuf.c, fread.c, fwrite.c, setbuf.c
	Introduced the manifest constant _INTERNAL_BUFSIZ, and used
	it to specify the default size for stdio buffers. The only
	file that now references the BUFSIZ is setbuf. Stdio buffers
	are now 4K (#define _INTERNAL_BUFSIZ 4096) by default.

----------------------------------------------------------------------

Mon 10-May-93	(GregF)

<<< Change made to \\orville\razzle\src\crt32 simultaneously >>>

stdio\fflush.c
	Removed bogus call to ftell (inadvertent part of a change made
	by MattBr on 3-10-93).

----------------------------------------------------------------------

Mon 10-May-93	(ChrisWei)

misc\setlocal.c - minor bug fix.
h[vcrtlib\include]\wchar.h - remove unneeded protos
stdio\fgetwc.c, fputwc.c, ungetwc.c, _flsbuf.c, _filbuf.c
	- more fixes, optimizations, better error handling
iostream\istrldbl.cxx, ostrldbl.cxx, sources
	- enable operator<<(long double)
h[vcrtlib\include]\istream.h, ostream.h
	- enable operator<<(long double)

----------------------------------------------------------------------

Mon 10-May-93	(GregF)

<<< Change made to \\orville\razzle\src\crt32 simultaneously >>>

convert\strtol.c
	Fixed error check (didn't handle conversion of LONG_MIN
	correctly).
----------------------------------------------------------------------

Mon 10-May-93	(GregF)

<<< Change made to \\orville\razzle\src\crt32 simultaneously >>>

lowio\getch.c
	Was free-ing a bad pointer in _kbhit (Cuda bug 4373)

----------------------------------------------------------------------

Fri 07-May-93	(JonM)

h\setjmpex.h - created.
tools\win32\relinc.cmd - added setjmpex.h.

----------------------------------------------------------------------

Thu 06-May-93   (SteveSa)

h\internal.h
heap\heapinit.c
startup\dllcrt0.c
dllstuff\crtlib.c -
	Add _heap_term() to free up the memory (and address space) allocated
	for the heap.  _heap_term is called on DLL detach, but not in the EXE.
	The heap regions are decommitted and released (two separate calls
	since the tail part of a region may be uncommitted) and the pages
	that are used for heap descriptors are now chained together so that
	they too can be deallocated (released).  This was a tremendous
	problem with DLLs which were repeated loaded and unloaded since
	the process address space was being eaten up, even if not much
	actual virtual memory was allocated.

----------------------------------------------------------------------

Wed 05-May-93   (ChrisWei)

h\time.h - add wcsftime proto when !STDC
h\wchar.h, ctype.h - change is_wctype to iswctype as per new ISO
convert\iswctype - change is_wctype to iswctype as per new ISO

----------------------------------------------------------------------

Wed 05-May-93	(SteveSa)

startup\wild.c - use case-insensitive comparison (_stricmp) when sorting
	filenames matching a given wildcard command line argument
	(This change made by Steve Wood to the CRT32 project.)

----------------------------------------------------------------------

Wed 05-May-93	(GregF)

<<< Change made to \\orville\razzle\src\crt32 simultaneously >>>

startup\mlock.c
	Turned off DEBUG code.

----------------------------------------------------------------------

Tue 04-May-93   (ChrisWei)

convert\mbstowcs.c, wcstombs.c, mbtowc.c, wctomb.c
	Total rewrite of bogus code.
h\stdio.h
	Remove some unneeded protos.
stdio\fgetchar.c, fgetwchr.c, fputchar.c, fputwchr.c
	Move wide char code to its own file.

----------------------------------------------------------------------

Thu 29-Apr-93	 (GregF)

stdio\tmpfile.c
	Yet another bug in tmpnam() for multithread - I was neglecting
	to copy the generated filename from the main buffer to the per-
	thread buffer. What a cretin...

----------------------------------------------------------------------

Thu 29-Apr-93   (ChrisWei)

Enabled correct wide char print/scan/get/put. Gobs of files affected:

Files modified:

vcrt32\stdio\_filbuf.c, _flsbuf.c, _getbuf.c, setvbuf.c, fgetc.c, fgetchar.c,
	fputc.c, fputchar.c, input.c, output.c, winput.c, woutput.c, ungetc.c
vcrt32\h\[vcrtlib\include\]tchar.h, wchar.h, stdio.h, stdlib.h

Files Added:

vcrt32\stdio\_filwbuf.c, _flswbuf.c, fgetwc.c, fgetwchr.c, fputwc.c,
	fputwchr.c, ungetwc.c

----------------------------------------------------------------------

Wed 28-Apr-93   (SteveSa)

vcrt32/vcrt32.def
vcfp32/fp32.def
	Remove -Gf and -Gy (string pooling & COMDATs) from compiler
	options, undoing my change of Mon 26-Apr which added them.

----------------------------------------------------------------------

Wed 28-Apr-93   (JonM)

h\math.h
	Added "long double" functions as macros which call the
	"'double" functions with appropriate type conversions.

----------------------------------------------------------------------

Wed 28-Apr-93	(GregF)

string\i386\strcat.asm, strlen.asm
	Rewritten for the 486.

----------------------------------------------------------------------

Wed 28-Apr-93	(GregF)

<<< Change made to \\orville\razzle\src\crt32 simultaneously >>>

dllstuff\crtexe.c, crtlib.c
misc\winxfltr.c
startup\crt0.c, crt0msg.c, dllcrt0.c, thread.c
	Removed support for C RTEs _RT_STACK, _RT_INTDIV, _RT_NONCONT
	and _RT_INVALDISP. These are Win32 exceptions, and there was
	no reason not to just let the system exception handler handle
	them. Besides, it makes things easier for debuggers...

----------------------------------------------------------------------

Tue 27-Apr-93	(SteveSa)

dllstuff/crtlib.c
startup/tidtable.c
startup/crt0.c
startup/dllcrt0.c
h/internal.h - _mtinit now returns success or failure, rather than calling
	_amsg_exit when it cannot allocate a TLS index.  DLLs should fail
	to load, now exit the process.

h/heap.h
heap/heapinit.c
heap/heapgrow.c - initial heap region size defaults to large value (for
	Windows NT, where uncommitted memory is supported) but _heapinit
	now checks for Win32S or TNT and selects smaller values for those
	environments, where all memory is allocated (even if it is supposed
	to be uncommitted.)  Each successive heap region is twice as big
	as the previous one until the limit is reached.  The limit is now
	a variable rather than a constant, and it is also either a large
	value or a smaller one.

----------------------------------------------------------------------

Mon 26-Apr-93	(SteveSa)

vcfp32/tran/i386/87cdisp.asm - corrected a syntax problem which causes
	problems with MASM 6.10 (reported by Rich Shupak).

vcrt32/vcrt32.def	(*** NOTE: THIS CHANGE WAS UN-DONE on 28-APR-93 ***)
vcfp32/fp32.def - add -Gf and -Gy to build options (string pooling, COMDATs)

dos/fullpath.c
dos/getcwd.c - check for drive validity and set errno and _doserrno accordingly

----------------------------------------------------------------------

Mon 26-Apr-93	(GregF)

<<< Same change made to \\orville\razzle\src\crt32 on 23-April by SteveWo >>>

h\limits.h
	Restored new defs of CHAR_MIN, SHRT_MIN, INT_MIN and LONG_MIN.

----------------------------------------------------------------------

Sun 25-Apr-93	(Jamesma)

linkopts\fp10.c, linkopts\sources, makefile
	Added fp10.c - allows users to override new default 53-bit FP
	precision with full 64-bit precision (CUDA bug 2368).
	
----------------------------------------------------------------------

Fri 23-Apr-93	(GregF)

stdio\tmpfile.c
	Fixed 2444 (multiple threads would get the same names back from
	tmpnam). Also, made the namebufX buffers static - ANSI really does
	not allow returning an error from tmpnam or tmpfile because a
	malloc failed.

	I do not plan to make this change to the CRT32 tree on \\orville
	unless somebody in NT-land complains.

----------------------------------------------------------------------

Thu 22-Apr-93   (JonM)

misc\getqloc.c, misc\inithelp.c
	Fixed TNT compatibility problem by dynamically linking to
	GetLocaleInfoW().  Unfortunately it took me several tries to
	get this right.

startup\wincrt0.c
	Added a "-defaultlib:user32" directive for graphical startup,
	since it requires that MessageBox be linked.  (cuda:3521)

----------------------------------------------------------------------

Wed 21-Apr-93	(GregF)

<<< Same changes simultaneously made to \\orville\razzle\src\crt32 >>>

h\limits.h
	Restored old defs of CHAR_MIN, SHRT_MIN, INT_MIN and LONG_MIN.

----------------------------------------------------------------------

Wed 21-Apr-93	(GregF)

<<< Same changes simultaneously made to \\orville\razzle\src\crt32 >>>

convert\strtol.c, wcstol.c
	Removed assumption that LONG_MIN == -LONG_MAX.

----------------------------------------------------------------------

Tue 20-Apr-93	(SteveSa)

dllstuff/crtdll.c
startup/dllcrt0.c - add _CRT_INIT(@12) back in, make it co-exist with DllMain

h/internal.h
startup/crt0dat.c
dllstuff/dllcrt0.c - call _cexit on DLL Detach notification

h/heap.h
heap/growheap.c - successive heap regions double in size until reaching 16 MB

vcrtlib/makefile
vcrt32/h/malloc.h - alloca must be #define-d to be _alloca, not aliased at
	link-time using OLDNAMES.LIB.  _alloca is a compiler intrinsic.

----------------------------------------------------------------------

Tue 20-Apr-93	(GregF)

<<< Same changes simultaneously made to \\orville\razzle\src\crt32 >>>

h\limits.h
	Better defs of CHAR_MIN, SHRT_MIN, INT_MIN and LONG_MIN.

----------------------------------------------------------------------

Tue 20-Apr-93	(ChrisWei)

vcrtlib\lib\i386\msvcrt10.def
	Add isleadbyte to export list.

vcrt32, crt32\misc\getqloc.c
	Enable japan and others.

vcrt32\misc\initnum.c initmon.c initctyp.c
	Better return val check.

vcrt32\misc\inithelp.c
	JonM GetLocaleInfoW hack, fix casting bugs.

----------------------------------------------------------------------

Tue 20-Apr-93	(GregF)

<<< Same changes simultaneously made to \\orville\razzle\src\crt32 >>>

lowio\cgets.c, cputs.c
	Use ReadConsole and WriteConsole instead of ReadFile and WriteFile.

startup\stdargv.c
	Slightly change to test in do-while loop in parse_cmdline so that
	chars with high bit set (i.e., chars > 127) don't terminate the
	loop

----------------------------------------------------------------------

Mon 19-Apr-93   (SteveSa)

h/heap.h - reduce initial heap region from 4 MB to 16 KB.  Win32S and TNT
	have to allocate that region, not just reserve the address space!

h/internal.h,
dos/getcwd.c,
dos/stat.c -
	Move _validdrive() from stat.c to getcwd.c and made it static
	Removed it from internal.h since it is no longer shared.

misc/cmiscdat.c - remove obsolete variable _sigintoff

misc/winxfltr.c - put MT-only variable XcptActTabSize under #ifdef MTHREAD

startup/crt0.c,
startup/dllcrt0.c - remove obsolete variable _atopsp

startup/crt0dat.c - remove obsolete variable _child

----------------------------------------------------------------------

Thu 15-Apr-93   (JonM)

h\ios.h
h\streamb.h

	Added some _CRTIMP's (_mtlock, _mtunlock).

misc\i386\exsup.asm

	Put the signature 'XC00' in .text immediately before the
	beginning of the __except_handler2 function.  This is so the
	debugger can recognize it specially (request from MikeMo).

vcrtlib\makefile

	Added _tzset to oldnames.lib.

----------------------------------------------------------------------

Wed 14-Apr-93   (SteveSa)

vcrt32/makefile
dllstuff/dllmain.c - deleted
startup/dllmain.c - added
dllstuff/sources
startup/sources

	DLLMAIN.OBJ is needed for all 3 CRT library models, so I moved
	dllmain.c from dllstuff/ to startup/ and adjusted the sources files.
	DLLMAIN.OBJ goes into LIBC.LIB, LIBCMT.LIB and MSVCRT.LIB.
	It will not go into MSVCRT10.DLL because nothing there needs it.

----------------------------------------------------------------------

Wed 14-Apr-93   (SteveSa)

startup/tidtable.c
dllstuff/crtdll.c
dllstuff/crtlib.c
dllstuff/dllmain.c
dllstuff/sources
vcrt32/makefile
vcrtlib/makefile

	Change CRT entry point (notification routine) for DLLs
	from _CRT_INIT(@12) to _DllMainCRTStartup(@12).  This
	routine will call the user routine DllMain(@12) on all
	notifications.  If the user does not provide a DllMain
	there is a dummy one provided in MSVCRT.LIB (dllmain.c).

	The new file dllstuff/dllmain.c had to be added to
	dllstuff/sources.  VCRT32/makefile and VCRTLIB/makefile were
	changed to reflect the addition of DLLMAIN.OBJ to MSVCRT.LIB.

	Also, _CRTDLL_INIT and _DllMainCRTStartup (formerly _CRT_INIT)
	no longer _mtdeletelocks directly but now call _mtterm, which
	is for multi-thread termination what _mtinit does for multi-
	thread initialization.  _mtterm calls _mtdeletelocks and also
	frees up the TLS index.  The TLS index must be freed in case
	a DLL (or a DLL which references MSVCRT10.DLL) is repeatedly
	loaded and freed.  Otherwise you will run out of TLS indices.

----------------------------------------------------------------------

Wed 14-Apr-93   (JamesMa)

misc\i386\exsup.asm
	Remove setjmp(), longjmp() & raisex() routines for granularity
	purposes.
	
misc\i386\setjmp.asm
	New file containing setjmp(), longjmp() & raisex().
	
misc\sources
	Add setjmp.asm.
	
h\exsup.inc
	New file containing data structures & definitions common to
	exsup.asm & setjmp.asm.
	
----------------------------------------------------------------------

Wed 14-Apr-93   (ChrisWei)

vcrt32\misc\charmax.c
vcrt32\misc\lcnvinit.c
vcrt32\h\locale.h
vcrtlib\include\locale.h
	Cleanup and change _charmax from short to int.

vcrt32\time\strftime.c
	Bug fixes.

vcrt32\h\stdlib.h, ctype.h
vcrtlib\include\stdlib.h, ctype.h
	Change _mb_cur_max from short to int, simplify MB_CUR_MAX def.

vcrt32\string\wcsicmp.c, wcsnicmp.c
	Remove locale-sensitive stuff.
vcrt32\string\strcoll.c, stricoll.c, wcscoll.c wcsicoll.c
	Error sets errno, cleanup.

----------------------------------------------------------------------

Tue 13-Apr-93   (SteveSa)

h/setjmp.h
	Remove inappropriate _CRTIMP from declaration of setjmp
	(which is #define-d to _setjmp).  It is a compiler intrinsic

----------------------------------------------------------------------

Tue 13-Apr-93   (ChrisWei)

ANSI says that certain members of the lconv structure must be set to
CHAR_MAX, the value of which changes when the user compiles -J.

The following files were added:

vcrt32\misc\charmax.c
	Defines _charmax var and stuffs a pointer to the lconv_init
	function into initializer array.
vcrt32\misc\lcnvinit.c
	Sets the lconv members to UCHAR_MAX (255)

The following files were modified:

vcrtlib\makefile
	Add charmax.obj to objects in msvcrt10.lib.
vcrtlib\lib\i386\msvcrt10.def
	Add _lconv_init to exports.
vcrt32\misc\sources
	Add charmax.c, lcnvinit.c.
vcrt32\h\setlocal.h
	Add lconv struct definition.
vcrt32\h\locale.h
	Add extern _charmax reference when _CHAR_UNSIGNED defined.
vcrt32\dllstuff\crtexe.c
	Add xia..xiz initializers and initializer call.
vcrt32\dllstuff\i386\cinitexe.asm
	Add xia..xiz initializers.
vcrt32\dllstuff\i386\cinitexe.asm
	Add xia..xiz initializers.

----------------------------------------------------------------------

Tue 13-Apr-93   (JonM)

h\(various).h, sys\stat.h
	Using the new push/pop syntax for "pragma pack", modified the
	.h files to restore the packing state to what it was before
	the #include.

        Removed directives which suppressed the warning about a .h file
	changing the "pragma pack" state.

----------------------------------------------------------------------

Mon 12-Apr-93	(ChrisWei)

<<< Same change made previously to \\orville\razzle\src\crt32 >>>

vcrt32\h\ctype.h
vcrtlib\include\ctype.h
	Changed is* macros to evaluate args only once.
	Changed isw* macros to evaluate args only once.
	Protection around _MB_CUR_MAX macro.
vcrt32\h\wchar.h
vcrtlib\include\wchar.h
	Changed isw* macros to evaluate args only once.
vcrt32\h\stdlib.h
vcrtlib\include\stdlib.h
	Protection around _MB_CUR_MAX macro.

----------------------------------------------------------------------

Mon 12-Apr-93	(GregF)

<<< Same change simultaneously made to \\orville\razzle\src\crt32 >>>

stdio\popen.c

	Removed redundant CloseHandle call to close the child process
	handle from _pclose. By the time CloseHandle is called, an earlier
	call to _cwait has already called the child process handle. This
	was NTBUG #4165

----------------------------------------------------------------------

Thu 08-Apr-93	(ChrisWei)

vcrt32\h\errno.h - added EILSEQ errno = 42
vcrtlib\include\errno.h - added EILSEQ errno = 42
vcrt32\misc\syserr.c - added EILSEQ error message

----------------------------------------------------------------------

Thu 08-Apr-93	(SteveSa)

stdio/tmpnam.c - used access rather than _access
time/tzset.c - used strdup rather than _strdup
misc/getenv.c - used strnicmp rather than _strnicmp
misc/getqloc.c - used stricmp rather than _stricmp
misc/initnum.c - used strdup rather than _strdup

	Changing the OLD NAMES implementation from #define to
	prototypes and link-time aliasing revealed these five
	places where an old name was used in our source code,
	rather than the ANSI conforming new name (with a leading
	underscore.)  The #define's made these differences
	irrelevant, but now they are significant.  All were fixed.

h/direct.h 
	Fix oldnames prototype for getcwd() - had an extra parameter

vcrtlib\include
vcrtlib\include\sys
	Updated the ones that GregF missed.

----------------------------------------------------------------------

Thu 08-Apr-93	(GregF)

vcrtlib\include
	Updated header files to match vcrt32\h.

----------------------------------------------------------------------

Thu 08-Apr-93	(GregF)

<<< GregF change of 6 April to CRT32 project on \\orville\razzle >>>

vcrt32\time\dtoxtime.c
	Rewrote expression to avoid bogus compiler warning.

----------------------------------------------------------------------

Wed 07-Apr-93	(SteveSa)

Most Header Files (!!!)
and Some C Source Files
dllstuff/crtexe.c
dllstuff/crtlib.c
tools/win32/relinc.if
vcrtlib/lib/i386/msvcrt10.def

	Add _CRTIMP keyword to functions and variables exported from
	MSVCRT10.DLL.  In the cleansed (public) header files, this
	keyword evaluates to __declspec(dllimport) if _DLL is defined,
	and nothing otherwise.  For the internal build, it will evaluate
	to __declspec(dllexport) if CRTDLL is defined.  The _CRTIMP
	keyword is not necessary in the source code if the prototype
	in the header file uses it first.  Also, intrinsic functions
	like abs, _rotl, sin, atan, etc. cannot be _declspec-ed!
	I edited the .DEF file to change all of the exported data items
	from "foo_dll CONSTANT" to "foo DATA" to reflect this change.
	I also renamed _ValidDrive to _validdrive and __GetMainArgs to
	__getmainargs.  We should keep all CRT routines lower-case for
	clarity since Win32 APIs are mixed case.  In order to export
	the EXE's value of _fmode and _commode to MSVCRT10.DLL, I had
	to modify CRTLIB.C to use a different mechanism.  In the old
	days, the _DLL versions of _fmode and _commode could just be
	#undef-ined, but now the __declspec(dllimport) versions had to
	be declared directly (as int * _imp___fmode, etc.).  I had to
	add a special symbol, SPECIAL_CRTEXE, to INTERNAL.H and STDLIB.H
	which must be stripped during the cleansing process.

----------------------------------------------------------------------

Wed 07-Apr-93   (JamesMa)

iostream\ios.cxx, iostream\streamb.cxx
	Initialize LockFlg to -1 so that locking is enabled by default.
	
----------------------------------------------------------------------

Wed 07-Apr-93   (JonM)

h\ios.h, h\iostream.h, h\istream.h, h\ostream.h, h\streamb.h
	Added _CRTIMP's so that the iostream classes will be in
	msvcrt10.dll.

vcrtlib\makefile
	Enhanced the oldnames.lib build to add the import symbols too,
	for clients of msvcrt10.dll.

	Modified the msvcrt10.dll build so that we export the iostream
	classes.

vcrtlib\lib\i386\msvcrt10.def
	Add a couple of internal things (conversions between ASCII and
	10-byte reals) which the IDE debugger needs for displaying
	the contents of the x87 stack.

----------------------------------------------------------------------

Wed 07-Apr-93   (JonM)

misc\cenvarg.c
	Checked in a workaround for the NT bug where "CreateProcess()"
	doesn't propagate the current directory strings if there is a
	user-specified environment.  We now detect these in cenvarg()
	and prepend them to the user-specified environment block.

----------------------------------------------------------------------

Wed 07-Apr-93	(SteveSa)

h\fcntl.h
h\limits.h
	Fix copyright dates to 1993 (somehow these got missed before)

----------------------------------------------------------------------

Wed 07-Apr-93	(GregF)

<<< Same change simultaneously made to \\orville\razzle\src\crt32 >>>

lowio\fstat.c

	Made computation of file times consistent with _stat() (i.e.,
	wrong on FAT and HPFS, correct on NTFS, and correct on all of
	them if they ever fix underlying NT bug).

----------------------------------------------------------------------

Wed 07-Apr-93	(GregF)

<<< Same change simultaneously made to \\orville\razzle\src\crt32 >>>

dos\stat.c

h\sys\stat.h

	Made first arg type into a const char * (bug recently filed in
	the NTBUG database).

----------------------------------------------------------------------

Tue 06-Apr-93	(SteveSa)

Most Header Files (!!!)
and Many C Source Files

	Remove all occurrences of _VARTYPE1/_CRTVAR1 (which meant nothing)
	and change all occurrences of _CRTAPI[123] and _CALLTYPE[1234]
	to __cdecl.

----------------------------------------------------------------------

Mon 05-Apr-93	(GregF)

<<< Same change simultaneously made to \\orville\razzle\src\crt32 >>>

direct\findfile.c

dos\stat.c

h\ctime.h, internal.h

time\dtoxtime.c, ftime.c, gmtime.c, localtim.c, mktime.c, strftime.c,
     time.c, tzset.c, utime.c

	Adapted C8-16 time implementation for Windows NT.

----------------------------------------------------------------------

Mon 05-Apr-93   (JamesMa)

startup\crt0.c
	GUI apps exiting through _amsg_exit() now put up a pop-up message
	box describing the runtime error instead of trying to write to
	stderr.
	
startup\crt0msg.c
	Add _GET_RTERRMSG(), a routine needed for GUI error reporting.

----------------------------------------------------------------------

Mon 05-Apr-93   (JonM)

vcrtlib\makefile, vcrtlib\tools\genalias.*
	Changed the format of alias records used in oldnames.lib.
	Again oldnames.lib requires a recent linker in order to be
	built correctly.

----------------------------------------------------------------------

Mon 05-Apr-93   (JonM)

startup\i386\crt0init.mak, startup\i386\crt0init.obj
        Add "Remove" attribute to the .drectve section, to prevent it
        from showing up in .exe files.

----------------------------------------------------------------------

Thu 01-Apr-93	(ChrisWei)

vcrt32\startup\thread.c, crt0.c
	Change try, except to --try, __except.

vcrt32\convert\isctype.c
	Bug fix and optimization.

\vcfp32\fp32.def
	Turn on fp locale-sensitive radix char by defining _INTL.

----------------------------------------------------------------------

Wed 31-Mar-93	(ChrisWei)

vcrt32\h\excpt.h
vcrlib\include excpt.h
	Remove #define try, except, leave, finally.

----------------------------------------------------------------------

Tue 30-Mar-93	(GregF)

<<< GregF change of 26 March to CRT32 project on \\orville\razzle >>>

vcrt32\startup\thread.c
vcrt32\startup\tidtable.c

Initialize ptd->_pxcptacttab to _XcptActTab, ptd->_holdrand to 1L.

----------------------------------------------------------------------

Mon 29-Mar-93	(JonM)

vcrtlib\makefile
	Checked in a build for oldnames.lib.

	Warning: currently the oldnames.lib build requires a linker
	v.3085 or later to get a bug fix to the librarian (otherwise
	you get an oldnames.lib with no symbols in its directory).
	The fixed linker is not checked in to tools project yet, but
	will be this week.

vcrtlib\tools, vcrtlib\tools\mungeobj.exe, vcrtlib\tools\mungeobj.c
	Created "tools" directory and added a quick tool I wrote to
	map one shortname to another in a COFF object.

vcrtlib\oldnames, vcrtlib\oldnames\weak.asm
	Created "oldnames" directory and added weak.asm which is a
	generic weak extern definition.

----------------------------------------------------------------------

Thu 25-Mar-93	(ChrisWei)

h\ctype.h
exec\dospawn.c
convert\_mbslen.c, tolower.c toupper.c, towlower.c, towupper.c
	CTRL-Zs are EVIL.

h\ctype.h, vcrtlib\include\ctype.h
convert\toupper.c, tolower.c
	Define _tolower() and _toupper() when _INTL turned on.

----------------------------------------------------------------------

Wed 24-Mar-93	(ChrisWei)

in vcrt32\h, vcrtlib\include
types.h
	Change _dev_t from short to unsigned int.

in vcrt32\h, vcrtlib\include
fstream.h, ios.h, iostream.h, istream.h, ostream.h, streamb.h
	Eliminate "long double != double" warnings with #pragma warning.
	
vcrt32.def
	Turn on _INTL flag to enable CRT international support.

tools\win32\relinc.if
	_INTL is now defined for ifstrip.

vcrtlib\include\wchar.h, ctype.h
	Changed since _INTL is defined for ifstrip.

----------------------------------------------------------------------

Tue 23-Mar-93   (JonM)

makefile, dllstuff\makefile, dllstuff\i386\cinitexe.asm
	Added the same linker directives as my earlier change ... for
	msvcrt*.dll this time.
----------------------------------------------------------------------

Tue 23-Mar-93   (SteveSa - propogating a ChrisWei fix)

<<< ChrisWei change of 22 March to the CRT32 project on //orville/razzle: >>>

time\strftime.c - change C locale to 24 hour time

----------------------------------------------------------------------

Tue 23-Mar-93   (JonM)

startup\i386\crt0init.asm:
        Added linker directives to use "kernel32.lib" as a default
        library, and to merge the .CRT section into .data to save on
        section padding in the image file (and load one less page).

        It is necessary to run "link -edit" on the .obj file which
        comes out of Masm386, in order to set the "info" flag
        on the .drectve section.  Therefore I checked in crt0init.obj
        to the project, and added crt0init.mak which is how to build
        it.

makefile
        Now links the version of crt0init.obj which is checked in to
        the project, instead of building it from crt0init.asm.
startup\sources: removed crt0init

----------------------------------------------------------------------

Mon 22-Mar-93   (SteveSa - propogating GregF's and SteveWo's changes)

<<< GregF changes of 20 March to the CRT32 project on //orville/razzle: >>>

lowio\kbhit.c - deleted
lowio\ungetch.c - deleted
lowio\getch.c - rewritten to handle arrow keys and function keys
	now encompasses what was in ungetch.c and kbhit.c

lowio\putch.c - rewritten to use WriteConsole instead of WriteFile

stdio\fflush.c - changed so that it does not lock every stream
	on a _flushall() or fflush(NULL) call.

<<< GregF changes of 22 March to the CRT32 project on //orville/razzle: >>>

lowio\close.c - _close(STDIN) or _close(STDOUT) will not close the
	underlying NT file handle if STDOUT and STDERR are sharing
	the same handle.  Of course, closing both STDOUT and STDERR
	will close the underlying handle.

<<< SteveWo changes of 22 March to the CRT32 project on //orville/razzle: >>>

misc\getqloc.c
misc\initctyp.c
misc\initmon.c
misc\initnum.c
misc\inittime.c
misc\setlocal.c - MAKELCID takes two parameters now 

----------------------------------------------------------------------

Mon 22-Mar-93   (JonM)

lowio\open.c
        Fixed _open() so that it accepts _O_EXCL without _O_CREAT
	(ignoring _O_EXCL).  This is undefined behavior in the X/Open
	spec ... changed for consistency with 16-bit CRT.

	Also, it now accepts _O_CREAT | _O_EXCL | _O_TRUNC for opening
	new files.  This is crt16 behavior and is also required by
	X/Open.

	There remains a difference from the crt16 behavior ... the
	32-bit _open() will fail with _O_TRUNC if _O_RDONLY is used.
	This is the documented behavior ... the fact that the 16-bit
	libs accept this case is a bug.

----------------------------------------------------------------------

Mon 22-Mar-93   (JonM)

log.txt created, for tracking changes to the Cuda C runtime code on
\\hobie, which SteveSa has now split off from the NT group's sources
on \\orville\razzle.

----------------------------------------------------------------------
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\base\crts\log_v40.txt ===
-----------------------------------------------------------------

Tue 26-Sep-95    (APennell)

crtw32\eh\frame.cpp
	Changes only in PMac code to handle the case when a re-
	throw occurs to stop it going back into the same throw
	it came from. Involved addition of some statics to
	remember the last catch state & function info. Fixes
	Olympus 1615 (DynaBind not starting up) and 1900
	(compiler generated temporary is not destructed).

-----------------------------------------------------------------

Wed 20-Sep-95	 (ChrisWei)

crtw32\h\crtdbg.h
libw32\include\crtdbg.h
	Change _RPT0 macro to handle '%' in user message string. No
	CRT rebuild necessary.

-----------------------------------------------------------------

Fri 09-Sep-95	 (JamesMa)

crtw32\h\new.h
crtw32\h\mtdll.h
crtw32\h\internal.h
libw32\include\new.h
	new_handler is now always __cdecl (bug 1061).

-----------------------------------------------------------------

*****************************************************************
****   MSVC++ 4.0 BETA RELEASE #2 -- Friday 1 September 1995 ****
*****************************************************************

-----------------------------------------------------------------

Mon 28-Aug-95	 (JamesMa)

crtw32\eh\rtti.cpp
	dynamic_cast of NULL ptr now return NULL (bug 502).

-----------------------------------------------------------------

Tue 22-Aug-95	 (JamesMa)

crtw32\eh\mac\pmac\trnsctrl.cpp
	Added code to MacExceptionDispatch() (bug 16608).
crtw32\eh\i386\lowhelpr.asm
crtw32\misc\i386\exsup.asm
	CallSettingFrame() now calls new entry point _NLG_Notify1()
	and juggles ebp as needed (bug 16585).

-----------------------------------------------------------------

Tue 22-Aug-95	 (SteveSa)

crtw32\dllstuff\crtlib.c -
	Initialization of _CrtDbgMode[] was missing for Win32s.  I added it.

-----------------------------------------------------------------

*****************************************************************
****   MSVC++ 4.0 BETA RELEASE #1 -- Friday 18 August 1995   ****
*****************************************************************

-----------------------------------------------------------------

Wed 09-Aug-95	 (JamesMa)

crtw32\eh\mac\pmac\trnsctrl.cpp
	Added code to GetFunctionEntry() to handle throws from a CFM
	which are caught in another CFM (bugs 15612 & 15123).

-----------------------------------------------------------------

Wed 09-Aug-95	 (GregF)

crtw32\iostream\strstrea.cpp
	Conditioned the calls to _CrtSetDbgBlockType in strstreambuf::str()
	and strstreambuf::freeze() on x_static. This should prevent improper
	modification of user-supplied buffers in the debug librarys as
	reported in Olympus 15603.

-----------------------------------------------------------------

Fri 04-Aug-95	 (JamesMa)

crtw32\h\stdio.h, libw32\include\stdio.h - PMac BUFSIZ increased
		to 4K (15372).

-----------------------------------------------------------------

Tue 01-Aug-95	 (JamesMa)

crtw32\misc\dbgheap.c - qualified asserts which were breaking default appwiz
		apps on PMac (bug 14146).
crtw32\misc\dbgrpt.c - fixed debug file output for PMac (bug 15009).

-----------------------------------------------------------------

Tue 01-Aug-95	 (GregF)

crtw32\h\internal.h
crtw32\iostream\stdiostr.cpp
crtw32\lowio\ioinit.c
crtw32\stdio\_filbuf.c, _flsbuf.c, clearerr.c, fgetwc.c, fputwc.c, rewind.c,
	     ungetwc.c
	Concocted 'safe' version of the ioinfo access macros. That is, macros
	which provide for an argument of -1 by associating a special static
	ioinfo structure with this handle value. So far, only the
	_osfile_safe() macro is used. This fixes Olympus #15006 (printf in a
	GUI app causes a GPF).

-----------------------------------------------------------------

Tue 25-Jul-95	 (v-LeoL)
crtw32\misc\mips\jmpuwind.s
crtw32\misc\mips\chandler.c
	Put back _Nlg_Return2 for debugger

-----------------------------------------------------------------

crtw32\dllstuff\crtdll.c, crtexe.c
	Use _malloc_crt for PMac __onexitbegin array.

crtw32\dllstuff\crtlib.c
crtw32\h\crtdbg.h
libw32\include\crtdbg.h
	Win32s-ize user-visible debug heap variables.

crtw32\startup\crt0dat.c
	Add automatic leak checking for PMac DLL.

-----------------------------------------------------------------

Thu 20-Jul-95	 (ChrisWei)

crtw32\h\mtdll.h
	Some of our sources build with _MBCS defined (ctime.c) and some
	without (wctime.h). These sources got different sizes for the PT
	struct!! Removed ifdef _MBCS. Also, ifdef'd out the ANSI new stuff.

crtw32\h\istream.h
	Move get(...int) to protected.

crtw32\tools\win32\relinc.if
	ANSI_NEW_HANDLER is "undefined".

crtw32\misc\dbgheap.c
	Fix size check.

crtw32\misc\dbgrpt.c
	Use WLM output string scheme.

-----------------------------------------------------------------

Thu 20-Jul-95	 (GregF)

crtw32\heap\heapwalk.c
	Changed the way an unimplemented HeapWalk() is handled. We used to
	return _HEAPOK. Now we return _HEAPEND.
	return _HEAPOK. Now we return _HEAPEND.

-----------------------------------------------------------------

Tue 11-Jul-95	 (GregF)

crtw32\lowio\ioinit.c
	Have to use __unaligned pointers for file handle information on RISC
	platforms. This was breaking MIPS.

-----------------------------------------------------------------

Tue 11-Jul-95	 (JamesMa)

crtw32\misc\i386\exsup.asm
	Unwanted prologue removed from NLG_Notify (13268).

-----------------------------------------------------------------

Mon 10-Jul-95	 (GregF)

crt\crtw32\eh\eh.mkf
	Changed typeinfo.* to typinfo.* and typename.* to typname.*. This
	fixed the broken 68K build.

crt\crtw32\exec\dospawn.c
	Have to use __unaligned pointers for file handle information on RISC
	platforms. This was breaking MIPS.

-----------------------------------------------------------------

Fri 07-Jul-95   (ChrisWei)

crt\crtw32\dllstuff\crtlib.c
crt\crtw32\misc\dbgrpt.c, errmode.c
crt\crtw32\startup\crt0.c, dllcrt0.c
	Startup debug reporting initialization removed - done statically.

crt\crtw32\h\istream.h
crt\libw32\include\istream.h
	Avoid ambiguous default args.

-----------------------------------------------------------------

Thurs 06-Jul-95   (ChrisWei)


crt\makefile, makefile.inc
crt\srcrel\makefile, objects.mkf, pd-b
crt\crtw32\eh\lsources, typename.cpp, typeinfo.cpp, typname.cpp, typinfo.cpp

	Change typeinfo.cpp and typename.cpp to typname.cpp typinfo.cpp
	since the build process chokes on typeinfo.h/typeinfo.cpp.

crt\crtw32\conert\iswctype.c
crt\crtw32\eh\throw.cpp
crt\crtw32\eh\mac\pmac\trnsctrl.cpp
crt\crtw32\h\iomanip.h ios.h iostream.h rtti.h istream.h rtti.h setlocal.h
	stdiostr.h streamb.h trnsctrl.h
crt\crtw32\iostream\istream.cpp
crt\crtw32\lowio\close.c
crt\crtw32\misc\setlocal.c
crt\crtw32\startup\crt0dat.c
crt\crtw32\stdio\output.c
	Comment cleanup -- remove "hack", "consider".

-----------------------------------------------------------------

Wed 05-Jul-95   (JamesMa)

makefile, makefile.inc
srcrel\objects.mkf, pd-b
crtw32\eh\eh.mkf, lsources
	Removed stdnewh.obj from build.
crtw32\eh\stdexcpt.cpp
crtw32\h\stdexcpt.h,
libw32\include\stdexcpt.h
	Stdexcpt stuff minimized, made ANSI-compatible (9577).
crtw32\eh\typeinfo.cpp, typename.cpp
crtw32\h\mtdll.h, typeinfo.h
libw32\include\typeinfo.h
	Several minor RTTI problems resolved (5625).
libw32\include\setjmp.h
	NLG prototypes now cleansed for release (12867).
crtw32\eh\mac\pmac\lowhelpr.asm
	FP registers were being saved to SP, restored from R3 - wups.

-----------------------------------------------------------------

Wed 05-Jul-95   (v-LeoL)

crt\crtw32\eh\frame.cpp
crt\crtw32\eh\mips\handlers.s
crt\crtw32\misc\mips\chandler.c, jmpuwind.s, longjmp.s
crt\crtw32\h\trnsctrl.h
	<MIPS only changes>
        NLG gunk no longer uses per-thread data - destination code
	is passed on stack instead (Oly bug 11803).

-----------------------------------------------------------------

Tue 04-Jul-95   (ChrisWei)

crt\crtw32\dllstuff\crtlib.c
crt\crtw32\h\win32s.h
crt\crtw32\string\i386\memicmp.asm, stricmp.asm, strnicmp.asm
	memicmp.asm, stricmp.asm, and strnicmp.asm have hard-coded
	assumptions about offset of _lc_handle in CRTDLLPPD structure.
	lc_handle moved to start of structure and assertion added to
	scream if it moves.

crt\crtw32\dllstuff\cinitexe.c
crt\crtw32\startup\mac\init.c
	Add/fix -disallowlib for PMac.

-----------------------------------------------------------------

Mon 03-Jul-95   (ChrisWei)

crt\cleanbld.cmd, clns_bld.bat, mkmac.bat
crt\srcrel\clean.bat, copydeps.cmd, external.mkf, makefile, mkclnmkf.c,
	 mkmkf.cmd, object.mkf -- msvc40 -> msdev

crt\crtw32\dllstuff\crtlib.c
crt\crtw32\h\crtdbg.h, dbgint.h, win32s.h
crt\libw32\include\crtdbg.h
crt\crtw32\misc\dbgheap.h, dbghook.c, dbgnew.cpp, dbgrpt.c
	Win32s support for Debug Libs (make all DLL variables a function call).

crt\crtw32\time\tzset.c
	PMac: When TZ not set _tzname="", not "???".

-----------------------------------------------------------------

Thu 29-Jun-95   (JamesMa)

crt\srcrel\_sample_.r (new file)
	Resource file for PMac dll source release build
crt\srcrel\bldnt.cmd (new file)
	Builds x86 or PMac CRTs from source release (NT platform)
crt\srcrel\bldwin95.bat
	Builds x86 or PMac CRTs from source release (Win95 platform)
crt\srcrel\external.mkf, pd-b
	Added _sample_.r & bldnt.cmd
crt\doc\copycrt.bat, copysrc.bat (new files)
	Added for the convenience of the build team.

-----------------------------------------------------------------

Fri 22-Jun-95   (ChrisWei)

crt\makefile, makefile.inc
crt\crtw32\dllstuff\crtexe.c, crtlib.c
crt\crtw32\h, crt\libw32\include\internal.h, new.h, win32s.h
crt\crtw32\heap\badalloc.c, handler.cpp, heap.mkf, lsources, malloc.c, oldnew.cpp
crt\crtw32\startup\tidtable.c
crt\crtw32\linkopts\newnew.c, linkopts.mkf, lsources
crt\srcrel\msvc40.if, pd-b
	Remove ANSI new handler by #ifdef'ing with ANSI_NEW_HANDLER.
	Put back in set_new_handler hack for STL compilation.

crt\crtw32\mac.mkf
	Change back to -Ob1, add -Gy

crt\crtw32\dllstuff\cinitexe.c
crt\crtw32\startup\crt0init.c,
	Add -disallowlib

crt\crtw32\startup\crt0msg
	Avoid STDIO calls at startup

crt\crtw32\eh\eh.mkf
	Put undecorator in own segment (68K)

-----------------------------------------------------------------

Wed 21-Jun-95   (JamesMa)

crt\crtw32\dllstuff\atonexit, ajustfd.c, crtdll.c
	Comment cleansing: MSVCRTx0.DLL, x = 1, 2 or 3, replaced
	by MSVCRT*.DLL (at Sylvie's request).

-----------------------------------------------------------------

Wed 21-Jun-95   (JamesMa)

crt\crtw32\eh\frame.cpp
crt\crtw32\eh\i386\lowhelpr.asm, trnsctrl.cpp
crt\crtw32\misc\i386\exsup.asm, exsup3.asm, longjmp.asm
crt\crtw32\h\setjmp.h, trnsctrl.h
        NLG gunk no longer uses per-thread data - destination code
	is passed on stack instead (Oly bug 11803).

crt\crtw32\eh\lsources, typeinfo.cpp, typename.cpp (new file)
crt\srcrel\makefile, objects.mkf, pd-b
crt\makefile, makefile.inc
	type_info.name() moved from typeinfo.cpp to typename.cpp
	for granularity purposes.

-----------------------------------------------------------------

Tues 20-Jun-95   (ChrisWei)

crt\makefile
crt\crtw32\dllstuff\macdll\msvcrt40.r
	Add version info to CRT DLL and import lib for PMac.

-----------------------------------------------------------------

Mon 19-Jun-95   (v-LeoL)

crtw32\misc\mips\chandler.c
crtw32\misc\mips\jmpuwind.s
crtw32\misc\mips\longjmp.s
crtw32\eh\mips\handlers.s
crtw32\h\mtdll.h
        Use Get/SetNLGCode on MIPS and fix EH-safe longjmp wrt NLG

-----------------------------------------------------------------

Fri 16-Jun-95   (JamesMa)

crtw32\misc\i386\exsup.asm, exsup3.asm, longjmp.asm
        More registers preserved around calls to Get/SetNLGCode.

-----------------------------------------------------------------

Thu 15-Jun-95	 (GregF)

crtw32\heap\heapchk.c
	Better, more robust version of the fix made yesterday.

-----------------------------------------------------------------

Wed 14-Jun-95	 (GregF)

crtw32\heap\heapchk.c
	Fix suggested by Byran Tuttle so HeapValid doesn't get called for
	unallocated blocks.

-----------------------------------------------------------------

Wed 14-Jun-95   (ChrisWei)

crt\makefile.sub
crt\crtw32\mac.mkf
	Use O2 (speed) rather than O1 (space) for Mac builds.

-----------------------------------------------------------------

Wed 14-Jum-95   (v-rogerl)

crtw32\string\memorym.s
        Replace jump with .weakext(alias)

fpw32\tran\mip\fasincos.s
fpw32\tran\mip\fatan.s
fpw32\tran\mip\fcosh.s
fpw32\tran\mip\fexp.s
fpw32\tran\mip\ffloor.s
fpw32\tran\mip\fsincos.s
fpw32\tran\mip\fsinh.s
fpw32\tran\mip\fsqrt.s
fpw32\tran\mip\ftan.s
fpw32\tran\mip\ftanh.s
fpw32\tran\mip\logm.s
fpw32\tran\mip\flog.s
        Remove all .aents'

-----------------------------------------------------------------

Wed 14-Jun-95   (JamesMa)

crtw32\startup\tidtable.c
        _getptd() now preserves LastError variable in _all_
	 cases (thanks, RichardS).
crtw32\eh\frame.cpp
        Get/SetNLG prototypes now visible to Mac platforms, extraneous
	Get/SetLastError calls removed.

-----------------------------------------------------------------

Tues 13-Jun-95   (JamesMa)

crtw32\h\ehdata.h
        delfiled - use the version in langapi\include.
crtw32\srcrel\pd-b
        ehdata.h removed
crtw32\eh\typeinfo.cpp
        now calls __unDName(), not unDName()
crtw32\startup\tidtable.c
        _getptd() now preserves LastError variable.
crtw32\eh\frame.cpp, crtw32\eh\i386\lowhelpr.asm, crtw32\misc\i386\exsup.asm,
crtw32\misc\i386\exsup3.asm, crtw32\misc\i386\longjmp.asm, crtw32\h\exsup.inc,
crtw32\h\mtdll.h
        various NLG work, primarily multithread support.

-----------------------------------------------------------------

Tues 13-Jum-95   (ChrisWei)

crtw32\misc\dbgheap.c
crtw32\dllstuff\crtlib.c

msvcr40d.dll was calling an MFC-installed dump client routine at DLL unload time --
but the MFC DLL had already been unloaded!

The solution is to de-install any client dump routines before doing final leak checks.

If MFC (or any other clients) want the final leak check dumping (from msvcr40d.dll)
to use their own dump routines, they will have to call the leak check routine directly.

-----------------------------------------------------------------

Mon 12-Jum-95   (v-rogerl)

crtw32\h\math.h
        Added MIPS only prototype (hypotf)

-----------------------------------------------------------------

Fri 09-Jun-95   (BryanT)

crtw32\crt32.nt
crtw32\misc\searchen.c
crtw32\stdio\fseeki64.c, ftelli64.c, fgetpos.c, fsetpos.c, psx\sources
crtw32\startup\crt0.c, crt0msg.c
crtw32\h\stdio.h
fpw32\fp32.nt
        POSIX fixes and add /WX to compile line.

-----------------------------------------------------------------

Thurs 08-Jun-95 (ChrisWei)

crtw32\mkm68k.bat
crtw32\heap\heap.mkf
crtw32\linkopts\linkopts.mkf
crtw32\stdio\stdio.mkf
        Add new handler stuff to 68K build.

crtw32\misc\dbgrpt.c
        Cast to work-around MacOS header change.

-----------------------------------------------------------------

Tues 06-Jun-95  (BryanT)

crtw32\eh\csysex.cpp
        Workaround stupid X86 compiler by defining type_info vtable.

-----------------------------------------------------------------

Tues 06-Jun-95  (ChrisWei)

crt\makefile
crt\libw23\msvcrt40.rc
        Define _DEBUG for debug resource builds. msvcr40d.dll now has proper
        "Internal Name" and "Original File Name".

-----------------------------------------------------------------

Mon 05-Jun-95   (BryanT)

crtw32\dirs
crtw32\eh\csysex.cpp, frame.cpp
crtw32\eh\nt\sources
crtw32\h\csysex.hxx, mtdll.h
crtw32\heap dirs, sources.nt, st\sources, mt\sources, dll\sources,
       dlllib\sources, psx\sources
crtw32\startup\tidtable.c, nt\sources
libw32\lib\sources.nt
        Finish the Kernel EH work.  Move from WinHeap to Heap.

-----------------------------------------------------------------

Fri 02-June-95   (GregF)

crtw32\lowio\ioinit.c, osfinfo.c
        Made a couple of changes to work around an apparent bug in Win95. In
        Win95, when a gui parent spawns a console child. The values returned
        by GetStdHandle to the child process don't necessarily get mapped or
        set to the console. In osfinfo.c, I fixed a formerly benign bug
        whereby we would call SetStdHandle even in a gui app. In ioinit.c, I
        change the lowio init code so that handle 0 - 2 ALWAYS start out as
        being marked open, even if they are not associated with valid Win32
        HANDLEs. This fixes bug 10971.

-----------------------------------------------------------------

Thu 01-June-95   (v-LeoL)

\crt\makefile.inc
\crt\srcrel\external.mkf
\crt\srcrel\objects.mkf
\crt\srcrel\makefile

        remove helper\mips\* and misc\mips\chandler.c from crt src

-----------------------------------------------------------------

Wed 01-June-95   (ChrisWei)

\crt\crtw32\misc\putenv.c, setenv.c

        Fixed a nasty bug in _[w]putenv. Was not a BVT regression! We were
        not making a copy of new environment variables. Now that we are, removed
        EVs are also freed.

-----------------------------------------------------------------

Tues 30-May-95   (ChrisWei)

V3 to V4 change:
================

\crt\cb.cmd, clean.bat, clean.cmd, cleanbld.cmd, clns_bld.bat, make.cmd, makefile, makefile.inc, mkmac.bat
\crt\srcrel\clean.bat, copydeps.cmd, external.mkf, make.cmd, makefile, mkclnmkf.c, mkmkf.cmd, objects.mkf, pd-b, relmkf.sed
        MODIFIED

\crt\srcrel\msvc30.if
        REMOVED
\crt\srcrel\msvc40.if
        ADDED

\crt\doc\crt30.doc
        REMOVED
\crt\doc\crt40.doc
        ADDED

\crt\libw32\msvcrt30.rc
        REMOVED
\crt\libw32\msvcrt40.rc
        ADDED


ANSI new handler and/or heap hook:
==================================

\crt\crtw32\dllstuff\crtexe.c, crtlib.c

\crt\crtw32\dllstuff\macdll\makedll.cmd, makedlld.cmd
        MODIFIED

\crt\crtw32\dllstuff\macdll\msvcr30d.def, msvcrt30.def, msvcrt30.r
        REMOVED
\crt\crtw32\dllstuff\macdll\msvcr40d.def, msvcrt40.def, msvcrt40.r
        ADDED

\crt\crtw32\h[\crt\libw32\include]\crtdbg.h, heap.h, internal.h, istream.h, malloc.h, math.h, mtdll.h, new.h, win32s.h, winheap.h
        MODIFIED

\crt\crtw32\heap\calloc.c, expand.c, free.c, handler.cpp, lsources, malloc.c, msize.c, new.cpp, realloc.c
        MODIFIED

\crt\crtw32\linkopts\lsources
        MODIFIED

\crt\crtw32\linkopts\newnew.c
        ADDED

\crt\crtw32\misc\dbgheap.c, dbgnew.cpp, dbgrpt.c
        MODIFIED

\crt\crtw32\startup\tidtable.c
        MODIFIED


Other changes:
==============

\crt\crtw32\stdio\fwrite.c
        Return 0 if nothing to write.

\crt\crtw32\iostream\istrgetl.cpp
        Support for ignore (...,0xFF)

\crtw32\dos\dosmap.c
        Change error code mapping.

-----------------------------------------------------------------

Fri 25-May-95    (GregF)

crtw32\heap\heapchk.c, heapwalk.c
        Modified heapchk.c so that _heapset() will work even if Heap[Un]Lock
        is stubbed (as it on Win95). Modified _heapwalk() to validate the
        _pentry field.

-----------------------------------------------------------------

Tues 23-May-95   (GregF)

crt32\heap\expand.c
        Really removed the workaround alluded to below. It didn't cause
        10125 (which didn't really exist), but it DID cause 10291.

-----------------------------------------------------------------

Mon 22-May-95    (GregF)

crt32\h\malloc.h
crt32\heap\expand.c, malloc.c, realloc.c
        Updated _HEAP_MAXREQ to 0xffffffe0 and changed malloc, realloc and
        _expand to check the size request against this value before calling
        the API. This works around a bug in HeapAlloc (at least) whereby
        values larger than 0xffffffe0 get 'rounded up' to 0 and the API
        call returns success. This fixes Olympus 10125. Also, while I had
        expand.c checked out, I removed an old, obsolete workaround, thereby
        fixing Olympus 9956.

-----------------------------------------------------------------

Fri 19-May-95    (GregF)

crt\makefile
        _file.obj must be explicitly linked into msvcrt*.dll for the
        Win32s versions (regular and debug) of the DLL. In the Win32s
        version, _file.obj does not resolved any external references in
        other objects which would cause the linker to pull it in
        automatically. This fixes RAID bug 9588.

-----------------------------------------------------------------

Wed 17-May-95   (v-rogerl)

makefile.sub -
        Change .s rule for MIPS so assembler compiles -O2
        versus -O0

-----------------------------------------------------------------

Tue 16-May-95   (v-rogerl)

fpw32\tran\mips\fhypot.s -
        remove obsolete function c_abs_.

-----------------------------------------------------------------

Tue 16-May-95    (SteveSa)

makefile.inc,
crtw32/dllstuff/lsources -
        add xtxtmode.obj and xncommod(e).obj to list of targets for
        DLL and XDLL models

crtw32/dllstuff/xtxtmode.c,
crtw32/dllstuff/xncommod.c - new files

makefile -
        Get all objects for MSVCRT(D).LIB from the *DLL object directories.
        The linker options objects txtmode.obj and ncommode.obj used to
        be grabbed from the MT object directories, but for debug models
        this causes problems since that meant that linking with MSVCRTD.LIB
        required not only MSVCRTD.PDB but also LIBCMTD.PDB.

        The trick is that txtmode.obj and ncommode.obj for the DLL model
        have export definitions in them.  The x* versions of these two
        objects define SPECIAL_CRTEXE to turn off the _CRTIMP keyword.
        Since these objects go into the client EXE or DLL, they must NOT
        contain exports definitions for these variables.

-----------------------------------------------------------------

Fri 12-May-95    (SteveSa)

libw32/msvcrt30.rc -
        o Remove obsolete extra nulls at end of all strings
          ("SNAFUBAR\0" is now simply "SNAFUBAR").
        o Remove obsolete "LegalTradeMarks" field
        o Update "LegalCopyright" field from 1994 to 1995
        o Fix "InternalName" field to include .DLL extension
        o Change the hex value for Unicode from 04b0 to 04B0 (1200 decimal)
          per Richard Shupak's recommendation.

        **** And now the tricky part:

        o Add the 4-digit Julian date to the "FileVersion" string (3rd field)
          just as it is in the "FILEVERSION" binary field (4th field).
          This required some tricky use of the string-izing operator (#)
          which only works in #define macros, and two must be used to
          get the parameter value instead of the parameter name ("rup").
        o Make the binary field PRODUCTVERSION match the FILEVERSION field.
        o Make the "ProductVersion" string match the "FileVersion" string.
          These last two make MSVCRT30.DLL match MSVC.EXE as far as versions.

-----------------------------------------------------------------

Thu 11-May-95    (GregF)

crtw32\heap\heapwalk.c
        Added code to recognize the end-of-heap. It was being treated as
        _HEAPBADNODE.

crtw32\time\mktime.c
        Properly handle initial tm_mon values in the range -11 to -1
        (inclusive). This was Olympus bug 9148.

-----------------------------------------------------------------

Wed 10-May-95    (ChrisWei)

crtw32\misc\dbgrpt.c
        Change Interlockedxxxx to _CrtInterlocked to avoid conflict with WLM.

crtw32\h\new.h
        Put placement new() back in. Was removed when I imagined build conflicts with debug new().

-----------------------------------------------------------------

Tue 09-May-95    (GregF)

crtw32\string\i386\memcmp.asm
        Fixed horrible which I had introduced into Intel's improved
        string function. Specifically, I replaced a bogus ret with a
        jz short retnull.

-----------------------------------------------------------------

Thu 04-May-95   (JamesMa)

fpw32\conv\fpinit.c
        Clear FP exceptions after _ms_p5_test_fdiv (9411).

-----------------------------------------------------------------

Wed 04-May-95    (GregF)

crt\crtw32\h\cruntime.inc
        Use .586 for _WIN32 builds (fixes 6695)

-----------------------------------------------------------------

Wed 03-May-95   (JamesMa)

crtw32\eh\rtti.cpp
        FindSITargetTypeInstance() now tests visibility (5237).

-----------------------------------------------------------------

Wed 03-May-95    (GregF)

crtw32\string\i386\memchr.asm, memcmp.asm, strcat.asm
        New, faster versions from Intel.

-----------------------------------------------------------------

Tue 02-May-95   (JamesMa)

crtw32\eh\unhandld.cpp
        Added __CxxRestoreUnhandledExceptionFilter(), called at exit.

------------------------------------------------------------------

Tue 02-May-95   (BryanT)

crtw32\string\misc\memorym.s
        Move memmove to a seperate function.  When comdat's are enabled
        the extra public name is against the rules.

-----------------------------------------------------------------

Tue 02-May-95   (JamesMa)

crtw32\misc\mac\pmac\setjmp.asm
        Added NLG support for longjmp.
crtw32\eh\mac\pmac\lowhelpr.asm
        Renamed _NLG_Notify to __NLG_Notify.

-----------------------------------------------------------------

Tue 02-May-95   (SteveSa)

crtw32/h/mtdll.h - add prototype of new routine _initptd()
crtw32/startup/thread.c,
crtw32/startup/threadex.c - call _initptd() to do common initialization of
        per-thread data in _beginthread and _beginthreadex, respectively.
crtw32/startup/tidtable.c - implement _initptd() to do common initialization
        of the common per-thread data fields _holdrand and _pxcptacttab
        and the two new MIPS-specific fields _MipsPtdDelta/Epsilon.

-----------------------------------------------------------------

Sun 30-Apr-95   (ChrisWei)

\crtw32\h\crtdbg.h, \libw32\include\crtdbg.h
        Renumber _CRTDBG_xxx to avoid conflict with MFC.

\crtw32\h\ios.h, \libw32\include\ios.h
        Fix _CRT_CRTITICAL_SECTION stuff.

\crtw32\misc\dbgheap.c
        White space changes.

\crtw32\misc\dbgrpt.c
        Remove "JIT" from MessageBox.

-----------------------------------------------------------------

Fri 28-Apr-95   (JamesMa)

crtw32\eh\frame.cpp, crtw32\eh\ehvecdtr.cpp, crtw32\h\ehdata.h
        EH_FRAME_UNWIND_PART cases/definition now #ifdef ALLOW_UNWIND_ABORT.
srcrel\msvc30.if
        ALLOW_UNWIND_ABORT added to 2nd section.

-----------------------------------------------------------------

Wed 26-Apr-95   (ChrisWei)

crtw32\h\crtdbg.h, libw32\include\crtdbg.h
        Add _CRTDBG_MAP_ALLOC for new().

crtw32\misc\dbgheap.c, dbgrpt.c
        Add _CRTIMP to all exported functions

crtw32\startup\crt0.c, dllcrt0.c
        PMac debug reporting must go to debugeer by default since there is
        no guarantee user has initialized the toolbox.

crtw32\h\sys\*.h
        Add mac/win32 test.

-----------------------------------------------------------------

Wed 26-Apr-95    (GregF)

crtw32\h\win32s.h

crtw32\dllstuff\crtlib.c

crtw32\winheap\calloc.c, delete.cpp, expand.c, heapinit.c, malloc.c, msize.c,
               new_mode.cpp, realloc.c

        Package of small changes in preparation for switching to winheap
        for VC 3. The changes were adaptions for Chris's debug heap and for
        DLL_FOR_WIN32S.

-----------------------------------------------------------------

Tue 25-Apr-95   (BryanT)

crtw32\crt32.nt
crtw32\eh\csysex.cpp, dirs, hooks.cpp, rtti.cpp, throw.cpp, validate.cpp
crtw32\eh\nt\sources
crtw32\h\csysex.hxx
crtw32\startup\tidtable.c
        More Kernel EH support from DwightKr

-----------------------------------------------------------------

Tue 25-Apr-95   (JamesMa)

crtw32\misc\i386\exsup.asm
        Added label __NLG_Return2 at return from __finally(); fix for #8922.

-----------------------------------------------------------------

Mon 24-Apr-95   (SteveSa)

cleanbld.cmd
makefile
        Nmake dependencies will be generated by "nmake depend" in the \CRT
        directory, or for the \msvc30\crt\src and \msvc30\crt\prebuild
        directories if the first argument to cleanbld.cmd is CRTMKDEP.
        If the CRTMKDEP environment variable is set, that too will lead
        the generation of dependencies.  Dependency files will be created
        on all invocations of cleanbld.cmd when CRTMKDEP is set in the
        environment or on the command line.

-----------------------------------------------------------------

Fri 21-Apr-95   (JamesMa)

crtw32\misc\i386\setjmp.asm, exsup.asm
        Moved NLG support routines from setjmp to exsup.
crtw32\eh\frame.cpp
        Moved definition of _NLG_Destination to exsup.asm (X86 only).
libw32\msvcrt.src
        NLG stuff is no longer exported.

-----------------------------------------------------------------

Fri 21-Apr-95   (ChrisWei)

crtw32\h\crtdbg.h, dbgint.h
libw32\include\crtdbg.h
crtw32\misc\dbgheap.c, dbgnew.cpp
crtw32\iostream\ios.cpp, istream.cpp, ostream.cpp, streamb.cpp, strstrea.cpp
        Remove _delete_crt, _delete_client. Operator delete() handles all
        valid block types.

----------------------------------------------------------------

Fri 21-Apr-95   (SteveSa)

makefile -
        Changed all references to $(TOOLS_INCLUDE) to $(V3DROP)\include.
        It made no sense to require both of these environment variables
        since the former is equivalent to the include subdir of the latter.

        Also made some changes to support automatic generation of include
        file dependencies, for the raw build and both prebuild and src
        subdirectories in the cleansed build.

makefile.inc -
        Changed the COPY source for a number of objects from $* (all
        dependent files) to the explicit file name since the addition
        of automatically generated file dependencies kept this from
        working.

-----------------------------------------------------------------

Wed 19-Apr-95   (ChrisWei)

crtw32\convert\mbstowcs.c, mbtowc.c, wcstombs.c, wctomb.c
        Fix for 68k/pmac.

crtw32\h\new.h, libw32\include\new.h
        Add placement new() operator.

crtw32\heap\handler.cpp
        set_new_handler uses ANSI assert (even in retail build) to warn
        users to not use it to set new handler.

crtw32\misc\dbgrpt.c
        Avoid concurrent asserts - if they happen, simply spew to
        debugger.

----------------------------------------------------------------

Wed 19-Apr-95   (SteveSa)

makefile -
        Create .PDB files for Win32s DLL's msvcrt30.dlS/msvcr30d.dlS
        with the .pdS extension so that they do not overwrite the
        .pdb files for Win32 DLL's msvcrt30.DLL/msvcr30d.DLL.

-----------------------------------------------------------------

Tue 18-Apr-95   (JamesMa)

crtw32\misc\i386\exsup.asm, exsup3.asm
        Added NLG support.

-----------------------------------------------------------------

Tue 18-Apr-95   (SteveSa)

crtw32/eh/eh.mkf -
        The file source file undname.cxx from the LANGAPI project is used in
        this makefile and is NOT named .cpp like the CRTL source files are.

----------------------------------------------------------------

Tue 18-Apr-95   (SteveSa)

crtw32/h/mtdll.h
crtw32/startup/thread.c
crtw32/startup/threadex.c
crtw32/startup/tidtable.c
        Add 5 MIPS per-thread variables for TiborL.  The 2 of them which are
        integers to be initialized to -1.  The 3 pointers are automatically
        set to NULL.  Also improved the comment for the THREE places where
        we do the per-thread data initialization.  All fields in the p.t.d.
        block are zero by default since calloc() is used to allocate the ptd.

----------------------------------------------------------------

Mon 17-Apr-95   (SteveSa)

crtw32\dllstuff\crtlib.c
        Fix TLS index leak in the Win32s version of MSVCRT30.DLL.
        When the last process detaches from the DLL, the TLS index used
        to store "global" variables is now freed (as well it should be).
        (It was never freed before, resulting in a resource leak.)

----------------------------------------------------------------

Sun 16-Apr-95   (JamesMa)

crtw32\h\stdexcpt.h
        Cosmetic changes (#3716)

----------------------------------------------------------------

Fri 14-Apr-95   (JamesMa)

crtw32\eh\frame.cpp, ehvecctr.cpp, ehveccdtr.cpp, ehveccvb.cpp
crtw32\h\ehdata.h
        Re-implemented EH-SEH interaction fixes (#3340)

-----------------------------------------------------------------

Thu 13-Apr-95   (BryanT)

crtw32\h\mtdll.h, ehassert.h
crtw32\eh\hooks.cxx, throw.cxx
crtw32\eh\nt\*
crtw32\startup\tidtable.c
crtw32\startup\nt\sources
        Add Kernel-mode EH support from DwightKr.

crtw32\eh\st\sources
crtw32\eh\mt\sources
crtw32\eh\dll\sources
        Add lowhelpr.asm for X86 builds.

-----------------------------------------------------------------

Tue 11-Apr-95   (ChrisWei)

crtw32\startup\dllcrt0.c
        Move __crtGetEnvironmentStringsA after mtinit().

crtw32\h\crtdbg.h
libw32\include\crtdbg.h
        Add NULL definition.

crtw32\h\new.h
libw32\include\new.h
libw32\include\new.h
crtw32\heap\handler.cpp
        Add set_new_handler() stub to allow compilation of STL.

crtw32\h\sys\utime.h
libw32\include\sys\utime.h
crtw32\time\utime.c
        Change first param to const char *.

crtw32\h\setlocal.h
crtw32\misc\getqloc.c
        Remove NT 3.1 hacks. Use less space for country/language strings.

-----------------------------------------------------------------
Tue 11-Apr-95   (JamesMa)

crtw32\eh\i386\lowhelpr.asm
        New file containing _CallSettingFrame(), moved from trnsctrl.cpp
makefile.inc, crtw32\eh\lsources, srcrel\pd-b
        lowhelpr.asm/.obj added
crtw32\eh\i386\trnsctrl.cpp
        Removed _CallSettingFrame().
crtw32\h\trnsctrl.h
        _CallSettingFrame() now extern "C".
crtw32\misc\i386\setjmp.asm
        NLG_Return moved to lowhelpr.asm
crtw32\misc\i386\longjmp.asm
        NLG support added.
crtw32\h\float.h
        _DEFAULT_CW redefined for x86.
fpw32\tran\i386\ieee87.c
        _fpreset() now resets default precision.
fpw32\tran\i386\87trigh.asm
        Olympus #6164.

-----------------------------------------------------------------

Fri 07-Apr-95   (SteveSa)

**************************************
*** ------------------------------ ***
*** All .CXX files renamed to .CPP ***
*** ------------------------------ ***
**************************************

makefile
makefile.sub
srcrel/pd-b
srcrel/mkfiles.sed
        Related changes of the .CXX suffix to .CPP

makefile
        Add -WX to -W3 to enforce warning-free compilations.

crtw32/startup/dllmain.c
        Call DisableThreadLibraryCalls() to disable THREAD ATTACH and DETACH
        notifications in DLLs linked with LIBC.LIB or MSVCRT.LIB (but NOT
        LIBCMT.LIB) which have the default (empty) DllMain() and wherein
        _pRawDllMain == NULL.

-----------------------------------------------------------------

Fri 07-Apr-95   (ChrisWei)

crtw32\dllstuff\crtlib.c
crtw32\h\awint.h, internal.h
crtw32\startup\crt0.c, dllcrt0.c, stdenvp.c
crtw32\misc\aw_env.c
        Since GetEnvironmentStringsA returns OEM-code page strings (and
        GetEnvironmentVariableA returns ANSI!) and we want our environment
        to be ANSI, __crtGetEnvironmentStringA has been added. It gets
        the environment in Unicode (NT) and translates using ANSI cp.
        Otherwise (Win95) it gets the ANSI version.

-----------------------------------------------------------------

Thu 06-Apr-95   (ChrisWei)

crtw32\dllstuff\crtlib.c
crtw32\startup\crt0.c, dllcrt0.c, crt0dat.c
        Set PMac debug reporting defaults, fix user DLL leak detection.

crtw32\h\crtdbg.h
        Add malloc -> _malloc_dbg macros.

crtw32\misc\dbgheap.c
        Fix _expand() for block size of 0.

-----------------------------------------------------------------

Mon 03-Apr-95   (ChrisWei)

crtw32\h\crtdbg.h, dbgint.h
crtw32\iostream\ios.cxx, istream.cxx, istream1.cxx, ostream.cxx,
        streamb.cxx, strstrea.cxx
crtw32\misc\dbgheap.c, dbghook.c, dbgnew.cxx
        - fix delete scheme
        - fix block strings
        - remove TRACK_ON (again)
        - export _crtBreakAlloc
        - make global sizes unsigned

The following internal headers files were modified to #error if used by
users/ Also, the multiple include statements were brought into line with
CRT standards.

assert.h          6    6  out
awint.h           4    4  out
cmsgs.h           5    5  out
conio.h           4    4  out
cruntime.h        5    5  out
ctime.h           2    2  out
ctype.h           9    9  out
cvt.h             2    2  out
dbgint.h         16   16  out
direct.h          7    7  out
dos.h             7    7  out
doscalls.h        3    3  out
dostypes.h        5    5  out
eh.h              7    7  out
ehassert.h        6    6  out
ehdata.h         10   10  out
ehhooks.h         5    5  out
ehstate.h         5    5  out
errmsg.h          2    2  out
errno.h           5    5  out
error.h           3    3  out
error2.h          2    2  out
excpt.h           7    7  out
fcntl.h           3    3  out
file2.h           4    4  out
float.h           8    8  out
fltintrn.h        6    6  out
fpieee.h          6    6  out
fstream.h         5    5  out
heap.h           14   14  out
internal.h       21   21  out
io.h             13   13  out
iomanip.h         5    5  out
ios.h             6    6  out
iostream.h        5    5  out
istream.h         6    6  out
limits.h          4    4  out
locale.h          5    5  out
malloc.h          6    6  out
math.h           16   16  out
mbctype.h         5    5  out
mbdata.h          3    3  out
mbstring.h        5    5  out
memory.h          5    5  out
msdos.h           6    6  out
mtdll.h           7    7  out
mtest.h           3    3  out
new.h             4    4  out
nlsint.h          4    4  out
oscalls.h         6    6  out
ostream.h         6    6  out
plstring.h        7    7  out
process.h        11   11  out
rterr.h           3    3  out
rtti.h            2    2  out
search.h          7    7  out
setjmp.h          9    9  out
setjmpex.h        3    3  out
setlocal.h        3    3  out
share.h           3    3  out
signal.h          4    4  out
sizeptr.h         2    2  out
stdarg.h          7    7  out
stddef.h          5    5  out
stdexcpt.h        7    7  out
stdio.h          19   19  out
stdiostr.h        5    5  out
stdlib.h         15   16 *merge    B52
streamb.h         6    6  out
string.h          9    9  out
strstrea.h        5    5  out
syserr.h          2    2  out
tchar.h           9    9  out
time.h            6    6  out
trnsctrl.h        7    7  out
typeinfo.h        8    8  out
v2tov3.h          2    2  out
varargs.h         6    6  out
wchar.h           9    9  out
win32s.h          9    9  out
winheap.h         5    5  out


-----------------------------------------------------------------

Wed 29-Mar-95   (BryanT)

crtw32\crt32.nt
fpw32\fp32.nt
libw32\lib\sources.nt
        Ignore 4006 link warning and add mac headers to conditional
        includes list.

fpw32\tran\mips\ieee.c
fpw32\tran\ppc\ieee.c
fpw32\tran\fpexcept.c
        Fix warnings (missing prototypes/casts)

crtw32\stdio\st\sources
crtw32\stdio\mt\sources
crtw32\stdio\dll\sources
        Add setmaxf.c for the NT build.

crtw32\h\stdlib.h
crtw32\h\internal.h
        Define _fmode and _commode correctly when building CRTEXE for
        non-X86 platforms

crtw32\startup\crt0.c
crtw32\startup\dllcrt0.c
        Test for valid cmdlin and envptr.  Bail if no good (fixes
        stress failure).

crtw32\helper\mips\lldefs.h
        Add cast to remove signed/unsigned warning.

crtw32\misc\abort.c, assert.c, onexit.c, perror.c, and searchen.c
        Fix warnings in the POSIX build

        The MIPS NT build is now almost warning free (Tibor has a fix
        to the compiler for the last one in crtw32\helper)  Will fix
        other platforms shortly.

-----------------------------------------------------------------

Mon 27-Mar-95   (SteveSa)

crtw32\dos\stat.c
        _stat on a root directory is supposed to return a timestamp of
        1980-01-01@00:00:00.  But when the internal routine _loctotime_t
        was changed to use full years (instead of years less 1900), the
        constant value 80 being passed to that routine was NOT updated to
        1980.  This led to a bug: _stat() on a root directory was been
        returning timestamps of -1.  By correcting the value passed to
        locltotime_t() from the bogus 80 to the correct 1980, all once
        again works as it did before the bug was introduced in VC++ 2.0.

-----------------------------------------------------------------

Fri 24-Mar-95   (PhilipLu)

crtw32\eh\frame.cxx
crtw32\eh\rtti.cxx
crtw32\eh\mac\m68k\frame.cxx
crtw32\h\ehdata.h
        Add const for read-only compiler-gen'd C++ EH structs.
        Necessary for compatibility with new langapi headers
        (langapi\include\rttidata.h).

-----------------------------------------------------------------

Thu 23-Mar-95   (BryanT)

crtw32\startup\mlock.c
        Initialize the critical section before storing it in the
        lock table.  Fixes a problem only seen under stress.

-----------------------------------------------------------------

Wed 18-Mar-95   (ChrisWei)

crtw32\h\mbctype.h, libw32\include\mbctype.h
crtw32\h\mbctype.c
        - Add _MB_CP_LOCALE to set multibyte code page to current
          locale code page

-----------------------------------------------------------------

Tues 17-Mar-95  (ChrisWei)

crtw32\h\crtdbg.h, dbgint.h
libw32\include\crtdbg.h
crtw32\misc\assert.c dbgheap.c dbgnew.cxx, dbgrpt.c errmode.c
crtw32\startup\crt0msg.c
        - Add _CRT_ASSERT report type
        - Change assert message box to be more user-friendly
        - Add _delete_client, _delete_crt functions
        - Remove _CRTDBG_TRACK_ON_DF
        - add user-friendly block type verification macro
        - block damage now includes request number
        - speed up client object hex dumps

-----------------------------------------------------------------

Mon 16-Mar-95   (v-rogerl)

fpw32\tran\mips\asincosm.s
fpw32\tran\mips\atanm.s
fpw32\tran\mips\fasincos.s
fpw32\tran\mips\fatan.s
fpw32\tran\mips\ffloor.s
fpw32\tran\mips\fhypot.s
fpw32\tran\mips\flog.s
fpw32\tran\mips\floorm.s
fpw32\tran\mips\fmodm.s
fpw32\tran\mips\fsincos.s
fpw32\tran\mips\trigm.s
fpw32\tran\mips\xsqrt.s
fpw32\tran\mips\powm.s
        Olympus:6804 and 7185.  .text rename and FCSR restore.

-----------------------------------------------------------------

Wed 15-Mar-95   (GregF)

crtw32\dllstuff\crtlib.c
        Added initialization for _ppd__nstream. Deleted _ppd__lastiob.

crtw32\h\cmsgs.h, rterr.h
crtw32\startup\crt0msg.c
        Added _RT_STDIOINIT error message (for when a minimal __piob table
        cannot be allocated).

crtw32\h\win32s.h
        Added fields the _CRTDLLPPD struct for _nstream (_ppd__nstream)
        and __piob (_ppd___piob) and access macros. Deleted support for
        _lastiob.

crtw32\startup\mlock.c

crtw32\stdio\lsources
        Added setmaxf.c to the build.

crtw32\stdio\closeall.c, fflush.c, rmtmp.c
        Changed to walk __piob[] rather than _iob[].

crtw32\stdio\_file.c
        Added code to define, create and initialize the __piob[] table.

crtw32\stdio\fgetchar.c, fputchar.c
        Removed unnecessary include of tchar.h. Don't know why I bothered.
        I actually did it about 3 months ago and don't recall the reason.

crtw32\stdio\setmaxf.c
        New. Defines _setmaxstdio, a user function to modify the size of
        the __piob[] table.

crtw32\stdio\stream.c
        Signficantly revised to manage streams via __piob[] rather than
        _iob[].


crtw32\stdio\clearerr.c, fclose.c, fdopen.c, fflush.c, fgetc.c, fgets.c,
             fgetwc.c, fopen.c, fprintf.c, fputc.c, fputs.c, fputwc.c,
             fputws.c, fread.c, freopen.c, fscanf.c, fseek.c, fseeki64.c,
             ftell.c, ftelli64.c, fwprintf.c, fwrite.c, fwscanf.c, gets.c,
             getw.c, putw.c, printf.c, puts.c, rewind.c, scanf.c, setvbuf.c,
             tmpfile.c, ungetc.c, ungetwc.c, vfprintf.c, vfwprint.c,
             vprintf.c, vwprintf.c, wprintf.c, wscanf.c
        Revised usage of _[un]lock_str macros (they now take FILE * arg, and
        there is an _[un]lock_str2 variant). Deleted any usage of the
        obsolete _iob_index macro.

crtw32\string\memchr.c
        Changed slightly to eliminate unnecessary differences between Win32
        and Pmac versions, eliminating Olympus 7151 in the process.

libw32\msvcrt.src
        Added _setmaxstdio to the list of exports.

-----------------------------------------------------------------

Mon 13-Mar-95   (ChrisWei)

crtw32\convert\wcstombs.c
        Fix wcsncnt count bug.
crtw32\convert\wtox.c
        Use -1 for string length since NT compares past NULLS.
crtw32\lowio\lseek.c, lseeki64.c
        Verify handles before passing to OS.
crtw32\stdio\tempnam.c
crtw32\h\stdio.h, wchar.h
        Make [_w]tempnam() params const.

-----------------------------------------------------------------

Thu 09-Mar-95   (BryanT)

crtw32\h\stdlib.h and libw32\include\stdlib.h
        Missed adding _CRTIMP to the prototype for abs() yesterday.

-----------------------------------------------------------------

Wed 08-Mar-95   (BryanT)

crtw32\h\math.h, stdlib.h, string.h
        Define import versions of intrinsic functions (MIPS only)
        to go with new compiler support from Tibor.

-----------------------------------------------------------------

Wed 08-Mar-95   (SteveSa)

libw32\tools\i386\pd.exe - rebuilt as a Win32 executable (was 16-bit OS/2)
libw32\tools\source\pd.c - source code for pd.exe
srcrel\makefile - modified
srcrel\mkdirs.sed - modified
srcrel\mkfiles.sed - modified
srcrel\pd-b - new file (used to generate pd-d and pd-f)
srcrel\pd-d - delfile-d
srcrel\pd-f - delfile-d
        A new scheme for generating pd-d and pd-f from pd-b (a new file)
        A new version of PD.EXE (source code provided) is now a Win32
        console executable instead of a 16-bit OS/2 application.
        pd-d and pd-f were simplified somewhat (removed j:\src\crt prefix).
        If pd-b is deleted, makefile will recreate it using pd.exe
        assuming \\lang1\v3slm is available.

-----------------------------------------------------------------

Mon 06-Mar-95   (SteveSa)

srcrel\makefile
        Now uses the environment variable V3TOOLS to point to the processor
        part of the TOOLS project.  This tree is used to compile mkclnmkf.c.
        This allows clean PMAC builds since with references to the V3TOOLS
        tree, mkclnmkf.c can be compiled for the host system (INTEL) rather
        than the target (MPPC).

-----------------------------------------------------------------

Fri 03-Mar-95   (JamesMa)

crtw32\crtw32\h\typeinfo.h
        Moved definition of class type_info from ti_core.h back to typeinfo.h.
crtw32\crtw32\dllstuff\ti_inst.cxx
        Now includes typeinfo.h, not ti_core.h.
libw32\include\typeinfo.h
        Added typeinfo.h.
srcrel\pd-f
        Removed ti_core.h.
crtw32\crtw32\h\ti_core.h
        Delfiled.

-----------------------------------------------------------------

Thu 02-Mar-95   (ChrisWei)

crtw32\h\assert.h
libw32\include\assert.h
        Removed _INC_ASSERT. According to ANSI, must be able to include
        this file more than once.

-----------------------------------------------------------------

Wed 01-Mar-95   (GregF)

crtw32\lowio\cgets.c
        Treat string[0], which holds the maximum length, as an unsigned
        quantity. This was NT bug 7939.

-----------------------------------------------------------------

Tue 28-Feb-95   (v-LeoL)

crtw32\eh\typeinfo.cxx
        Add _CRTIMP to ~type_info()

-----------------------------------------------------------------

Tue 28-Feb-95   (GregF)

crtw32\lowio\mac\initcon.c -> crtw32\stdio\mac\initstd.c
crtw32\lowio\lsources
        Moved and renamed the Mac-version of initcon.c, which had no
        relationship to the Win32 version, to a more appropriate place.
        Also, took it out of the build (was for use in internal testing
        only and not part of the product).

-----------------------------------------------------------------

Mon 27-Feb-95   (GregF)

crtw32\stdio\mac\commode.c (deleted)
crtw32\stdio\common\commode.c -> commode.old
        Mac build was earlier changed to use crtw32\linkopts\commode.c

crtw32\stdio\maketabc.c
crtw32\stdio\maketabc.c -> maketabc.old
        Mac version was appended.

-----------------------------------------------------------------

Mon 27-Feb-95   (JamesMa)

For (latest) fix of Oly. 5234:
makefile
        Added ti_inst.obj to DLL_STATIC_OBJS_RAW.
crtw32\dllstuff\ti_inst.cxx
        New file, needed for exporting type_info's vftable from msvcrt.lib.
crtw32\dllstuff\lsources
        Added ti_inst.obj.
crtw32\crtw32\h\ti_core.h
        New file, containing minimum defs needed by ti_inst.cxx.
crtw32\crtw32\h\typeinfo.h
        Moved definition of class type_info to ti_core.h.

-----------------------------------------------------------------

Mon 27-Feb-95   (ChrisWei)

crtw32\dllstuff\cinitexe.c, crtlib.c
crtw32\h\awint.h, crtdbg.h
crtw32\misc\assert.c, crtmbox.c, dbgrpt.c
crtw32\startup\crt0dat.c, crt0init.c, crt0msg.c
        1) More to avoid static user32 use.
        2) Changes to __crtMsessageBoxA interface, one less param.
        3) Add _CrtDbgBreak to avoid Win32 API calls in crtdbg.h.
        4) Don't dump leaks by default.

-----------------------------------------------------------------

Mon 27-Feb-95   (v-rogerl)

fpw32\tran\mips\trigm.s
        Olympus:6384 I got the .global/.ent ordering wrong for
        tan when doing Olympus:5984.  I fixed the order and
        opened #6416 against the MIPS backend.
-----------------------------------------------------------------

Sat 25-Feb-95   (RichardS)

crtw32\h\crtdbg.h
        Define _CrtDbgBreak() as _BPT() for Alpha

-----------------------------------------------------------------

Fri 24-Feb-95   (GregF)

crt\makefile, makefile.inc
crt\crtw32\stdio\lsources
crt\crtw32\linkopt\lsources
        Modified build files so that commode.c is built from the
        linkopts directory, rather than stdio\mac.

-----------------------------------------------------------------

Fri 24-Feb-95    (ChrisWei)

crtw32\h\awint.h
crtw32\misc\assert.c
crtw32\startup\crt0msg.c
crtw32\dllstuff\crtlib.c
crtw32\misc\crtmbox.c
crtw32\misc\lsources
        Add __crtMessageBoxA to avoid static link with user32.dll.

crtw32\startup\crt0dat.c
        Debug runtimes call _CrtDumpMemoryLeaks() at program exit.

-----------------------------------------------------------------

Thu 23-Feb-95   (GregF)

crtw32\lowio\common\binmode.c (delfile-d)
crtw32\stdio\common\maketab.c (delfile-d)
        The files above were deleted because they are/were not used in
        Mac builds.

crtw32\stdio\common\ncommode.c -> ncommode.old
crtw32\stdio\mac\ncommode.c (delfile-d)
        Use version in stdio for all builds.

crtw32\stdio\fgetws.c
             gets.c
             getws.c
             wfdopen.c
             wfopen.c
             winput.c
             woutput.c
        Deleted/replaced obsolete WPRFLAG.

crtw32\stdio\common\input.c - > input.old
                    output.c -> output.old
crtw32\stdio\mac\input.c (delfile-d)
                 output.c (delfile-d)
crtw32\stdio\input.c, output.c
        Appended Mac/common version, somewhat cleaned up, of the sources onto
        stdio versions. Also, replaced WPRFLAG with _UNICODE.

-----------------------------------------------------------------

Wed 22-Feb-95   (JamesMa)

crtw32\dllstuff
        Spliced Mac code into atonexit.c, crtdll.c & crtexe.c.
        Added above files to lsources, OBJS_NOT_IN_LIB section.

crtw32\startup\mac\pmac
        *.c->*.old (*.c in above list).

crtw32\startup
        Removed *.c from lsources, OBJS_NOT_IN_LIB section
        (*.c in above list).

-----------------------------------------------------------------

Wed 22-Feb-95   (GregF)

crtw32\stdio\common\popen.c (delfile-d, never implemented for Mac),
                    stream.c -> stream.old,
                    ungetc.c -> ungetc.old,

crtw32\stdio\mac\stream.c (delfile-d),
                 tempnam.c -> tempnam.old,
                 tmpfile.c -> tmpfile.old,
                 ungetc.c (delfile-d),

crtw32\stdio\fgets.c (removed obsolete WPRFLAG),
             popen.c (removed obsolete WPRFLAG),
             puts.c (removed obsolete WPRFLAG),
             putws.c (removed obsolete WPRFLAG),
             tempnam.c (appended Mac version, removed WPRFLAG),
             tmpfile.c (appended Mac version, removed WPRFLAG),
             wfreopen.c (removed obsolete WPRFLAG),
             wtempnam.c (removed obsolete WPRFLAG),
             wtmpfile.c (removed obsolete WPRFLAG)

-----------------------------------------------------------------

Wed 18-Feb-95   (v-rogerl)

fpw32\tran\mips\xsqrt.s
fpw32\tran\mips\fsincos.s
fpw32\tran\mips\trigm.s
fpw32\tran\mips\fhypot.s
fpw32\tran\mips\atanm.s
        Olympus:5984 branch from one procedure into another is
        invalid with -Gy.  Give both procedures the same .text
        name so the code works as written.

-----------------------------------------------------------------

Tue 21-Feb-95   (GregF)

crtw32\stdio\common\fdopen.c  -> fdopen.old,
                    fopen.c   -> fopen.old,
                    freopen.c -> freopen.old,
                    fseek.c   -> fseek.old,
                    ftell.c   -> ftell.old,
                    setvbuf.c -> setvbuf.old,

crtw32\stdio\mac\fclose.c -> fclose.old
                 fdopen.c (delfile-d),
                 fflush.c -> fflush.old
                 fopen.c (delfile-d),
                 freopen.c (delfile-d),
                 fseek.c (delfile-d),
                 ftell.c (delfile-d),
                 rmtmp.c  -> rmtmp.old,
                 setvbuf.c (delfile-d),

crtw32\stdio\fdopen.c (merged in Mac version),
             fopen.c (replaced WPRFLAG with _UNICODE),
             freopen.c (replaced WPRFLAG with _UNICODE),
             fseek.c (merged in Mac version),
             ftell.c (merged in Mac version),
             setvbuf.c (merged in Mac version),

-----------------------------------------------------------------

Mon 20-Feb-95   (BryanT)

fpw32\tran\fpexcept.c
        Define _KERNEL32_ before including windows.h for _NTSUBSET_ builds.

-----------------------------------------------------------------

Mon 20-Feb-95    (GregF)

crtw32\stdio\common\_filbuf.c  -> _filbuf.old,
                    _file.c    -> _file.old,
                    _flsbuf.c  -> _flsbuf.old,
                    _freebuf.c -> _freebuf.old,
                    _getbuf.c  -> _getbuf.old,
                    _open.c    -> _open.old,
                    _sftbuf.c  -> _sftbuf.old,

crtw32\stdio\_filbuf.c,
             _file.c,
             _flsbuf.c,
             _open.c
        Appended Mac version of source file.

crtw32\stdio\_freebuf.c
             _getbuf.c
             _sftbuf.c
        Merged Mac version of source file.

crtw32\stdio\_filwbuf.c,
             _flswbuf.c,
             _wopen.c
        Removed obsolete WPRFLAG.

-----------------------------------------------------------------

Wed 18-Feb-95   (v-rogerl)

fpw32\tran\mips\asincosm.s
fpw32\tran\mips\fasincos.s
fpw32\tran\mips\fatan.s
fpw32\tran\mips\ffloor.s
fpw32\tran\mips\flog.s
fpw32\tran\mips\floorm.s
fpw32\tran\mips\fmodm.s
fpw32\tran\mips\asincosm.s
        Olympus:5984 branch from one procedure into another is
        invalid with -Gy.  Give both procedures the same .text
        name so the code works as written.

-----------------------------------------------------------------

Fri 17-Feb-95   (BryanT)

crtw32\lowio\fstat.c
        set st_size to the number of bytes left in the pipe.

-----------------------------------------------------------------

Thu 16-Feb-95   (RichardS)

crtw32\direct\i386\enable.asm
        _disable() should contain a CLI not an STI.  Use MASM proc for better debug info.

       lowio\i386\inp.asm
                  outp.asm
        Use MASM proc for better debug info.

-----------------------------------------------------------------

Wed 17-Feb-95   (v-rogerl)

fpw32\tran\mips\asincosm.s
        Olympus:5984 branch from one procedure into another is
        invalid with -Gy.  Give both procedures the same .text
        name so the code works as written.

-----------------------------------------------------------------

Thu 16-Feb-95   (JamesMa)

crtw32\misc
        Merged/spliced Mac code into assert.c, getenv.c, getpath.c,
        onexit.c, perror.c, putenv.c & searchen.c.

crtw32\misc\mac
        *.c->*.old (*.c in above list).

-----------------------------------------------------------------

Thu 16-Feb-95   (RichardS)

fpw32\tran\i386\87csqrt.asm
                87ctran.asm
                87ctrig.asm
                87ctriga.asm
                87ctrigh.asm
                87fmod.asm
                ftol.asm
        Replace use of LabelP with proc.  This results in better CodeView
        information since there are proc records for each function instead
        or MASM generated fake proc.  This also corrects a problem with the
        public COFF symbols not being identified as functions.

-----------------------------------------------------------------

Thu 16-Feb-95   (GregF)

crtw32\lowio\mac\_endlow.c, dupx.c, initcon.c
        Replaced _CALLTYPE* with __cdecl.

crtw32\lowio\mac\close.c   -> close.old,
                 commit.c  -> commit.old,
                 dup.c     -> dup.old,
                 dup2.c    -> dup2.old,
                 eof.c     -> eof.old,
                 flength.c -> flength.old,
                 fstat.c   -> fstat.old,
                 locking.c -> locking.old,
                 lseek.c   -> lseek.old,
                 mktemp.c  -> mktemp.old,
                 open.c    -> open.old,
                 osfinfo.c -> osfinfo.old,
                 read.c    -> read.old,
                 tell.c    -> tell.old,
                 write.c   -> write.old

crtw32\lowio\close.c, commit.c, dup.c, dup2.c, eof.c, flength.c, fstat.c,
             locking.c, lseek.c, mktemp.c, open.c, osfinfo.c, read.c,
             tell.c, write.c
        Appended Mac version of sources.

crtw32\heap\mac\heapdump.c -> heapdump.old,
                heapgrow.c -> heapgrow.old,
                heapinit.c -> heapinit.old

crtw32\heap\heapdump.c, heapgrow.c, heapinit.c
        Appended Mac version of sources.

-----------------------------------------------------------------

Wed 15-Feb-95   (JamesMa)

crtw32\h\stdexcpt.h, crtw32\eh\stdexcpt.cxx, libw32\include\stdexcpt.h
        Minor changes related to Olympus bug 3716.

crtw32\h\typeinfo.cxx, crtw32\eh\typeinfo.cxxx
        Class type_info is no longer _CRTIMP, allowing compilation -MD.
        Member functions are exported instead ...

-----------------------------------------------------------------

Wed 15-Feb-95   (ChrisWei)

crtw32\startup\crtlib.c
crtw32\misc\assert.c, dbgrpt.c
crtw32\startup\crt0msg.c
        Make all CRT MessageBoxes look alike. Improve assert MB handling
        to make it more like the debug runtimes.

-----------------------------------------------------------------

Tue 14-Feb-95   (GregF)

crtw32\time\common\dtoxtime.c -> dtoxtime.old,
                   localtim.c -> localtim.old,
                   timeset.c  -> timeset.old,
                   mktime.c   -> mktime.old,
                   strftime.c -> strftime.old,
                   tzset.c    -> tzset.old

crtw32\time\mac\dtoxtime.c (deleted),
                localtim.c (deleted),
                timeset.c (deleted),
                mktime.c (deleted),
                strftime.c (deleted),
                tzset.c (deleted)

crtw32\time\mac\clock.c   -> clock.old,
                ftime.c   -> ftime.old,
                strdate.c -> strdate.old,
                strtime.c -> strtime.old,
                time.c    -> time.old
                utime.c   -> utime.old,

crtw32\time\clock.c (appended Mac version),
            dtoxtime.c (appended Mac version),
            ftime.c (appended Mac version),
            localtim.c (small change for Mac build),
            mktime.c (small change for Mac build),
            strdate.c (merged in Mac version),
            strftime.c (appended Mac version),
            strtime.c (merged in Mac version),
            time.c (merged in Mac version),
            tzset.c (appended Mac version),
            utime.c (appended Mac version),
        The changes above are part of the "Mac merge".

crtw32\time\timeset.c
       dllstuff\crtlib.c
       h\internal.h, win32s.h
        Fixed the definitions of _tzname[], __dnames[] and __mnames[].

-----------------------------------------------------------------

Tue 14-Feb-95   (SteveSa)

clean.bat
cleanbld.cmd
makefile
makefile.inc
makefile.sub
srcrel/asmfile.sed
srcrel/makefile
srcrel/mkclnmkf.c
srcrel/objects.cmd
srcrel/relmkf.sed
        Change output directory from lib/i386 to build/intel, and object
        directories from sti386.obj, mti386.obj, dlli386.obj, ... to
        build/intel/st_obj, mt_obj, dll_obj, etc.  These and other
        changes were also made to the cleansed build process.

-----------------------------------------------------------------

Tues 14-Feb-95  (ChrisWei)

More Mac merge/cleanup. Fixed dates & added [Internal] || [Public] to all
header files, cleaned up mac header merge, a few more file changes to finish
mac merge. Can now build all four pmac libs with no warnings.


Status for \\D:G2000N2\CRT, owner = CHRISWEI2:
Subdirectory \crtw32\h, version 1.00, robust:

file      local-ver  ver  status   base

assert.h          4    4  out
awint.h           1    1  out
cmsgs.h           3    3  out
conio.h           3    3  out
crtdbg.h         18   18  out
cruntime.h        4    4  out
ctime.h           1    1  out
ctype.h           7    7  out
cvt.h             1    1  out
dbgint.h         13   13  out
direct.h          6    6  out
dos.h             6    6  out
doscalls.h        2    2  out
dostypes.h        4    4  out
eh.h              6    6  out
ehassert.h        5    5  out
ehdata.h          8    8  out
ehhooks.h         4    4  out
ehstate.h         4    4  out
errmsg.h          1    1  out
errno.h           3    3  out
error.h           2    2  out
error2.h          1    1  out
excpt.h           6    6  out
fcntl.h           2    2  out
file2.h           2    2  out
float.h           7    7  out
fltintrn.h        5    5  out
fpieee.h          5    5  out
fstream.h         4    4  out
heap.h           13   13  out
internal.h       17   17  out
io.h              9    9  out
iomanip.h         4    4  out
ios.h             5    5  out
iostream.h        4    4  out
istream.h         5    5  out
limits.h          3    3  out
locale.h          4    4  out
malloc.h          5    5  out
math.h           13   13  out
mbctype.h         3    3  out
mbdata.h          2    2  out
mbstring.h        4    4  out
memory.h          3    3  out
msdos.h           5    5  out
mtdll.h           5    5  out
mtest.h           2    2  out
new.h             3    3  out
nlsint.h          3    3  out
oscalls.h         5    5  out
ostream.h         5    5  out
plstring.h        1    1  out
process.h        10   10  out
rterr.h           1    1  out
rtti.h            1    1  out
search.h          6    6  out
setjmp.h          8    8  out
setjmpex.h        2    2  out
setlocal.h        2    2  out
share.h           2    2  out
signal.h          3    3  out
sizeptr.h         1    1  out
stdarg.h          6    6  out
stddef.h          3    3  out
stdexcpt.h        5    5  out
stdio.h          15   15  out
stdiostr.h        4    4  out
stdlib.h          9    9  out
streamb.h         5    5  out
string.h          6    6  out
strstrea.h        4    4  out
syserr.h          1    1  out
tchar.h           8    8  out
time.h            5    5  out
trnsctrl.h        6    6  out
typeinfo.h        4    4  out
v2tov3.h          1    1  out
varargs.h         5    5  out
wchar.h           7    7  out
win32s.h          6    6  out
winheap.h         4    4  out

Subdirectory \crtw32\misc, version 1.00, robust:

file      local-ver  ver  status   base

assert.c          3    3  out

Subdirectory \crtw32\startup, version 1.00, robust:

file      local-ver  ver  status   base

crt0msg.c         8    8  out

Subdirectory \crtw32\stdio\mac, version 1.00, robust:

file      local-ver  ver  status   base

tmpfile.c         4    4  out

Subdirectory \crtw32\tools\mac, version 1.00, robust:

file      local-ver  ver  status   base

relinc.if         4    4  out

Subdirectory \crtw32\tools\win32, version 1.00, robust:

file      local-ver  ver  status   base

relinc.if         6    6  out

Subdirectory \fpw32, version 1.00, robust:

file      local-ver  ver  status   base

mkpmac.bat        1    3 *merge    B2

Subdirectory \libw32\include, version 1.00, robust:

file      local-ver  ver  status   base

assert.h          2    2  out
conio.h           2    2  out
crtdbg.h          6    6  out
ctype.h           4    4  out
direct.h          5    5  out
dos.h             5    5  out
eh.h              5    5  out
errno.h           2    2  out
excpt.h           4    4  out
fcntl.h           1    1  out
float.h           5    5  out
fpieee.h          4    4  out
fstream.h         3    3  out
io.h              6    6  out
iomanip.h         3    3  out
ios.h             3    3  out
iostream.h        3    3  out
istream.h         4    4  out
limits.h          1    1  out
locale.h          3    3  out
malloc.h          3    3  out
math.h            9    9  out
mbctype.h         2    2  out
mbstring.h        3    3  out
memory.h          2    2  out
new.h             2    2  out
ostream.h         4    4  out
process.h         5    5  out
search.h          4    4  out
setjmp.h          5    5  out
setjmpex.h        1    1  out
share.h           1    1  out
signal.h          2    2  out
stdarg.h          3    3  out
stddef.h          2    2  out
stdexcpt.h        1    1  out
stdio.h          10   10  out
stdiostr.h        3    3  out
stdlib.h          6    6  out
streamb.h         4    4  out
string.h          4    4  out
strstrea.h        3    3  out
tchar.h           8    8  out
time.h            4    4  out
varargs.h         2    2  out
wchar.h           5    5  out

-----------------------------------------------------------------

Sat 11-Feb-95   (ChrisWei)

crt\makefile, makefile.sub
        Big PMac cleanup. Use only _MAC, _M_M68K, _M_MPPC. No PPC, MPPC, or
        _MAC_. Fixed lots of makefile/makefile.sub inconsistencies. Almost have
        PMac debug heap/reporting together. Merged all of the string/mac
        functions that could be merged.


Subdirectory \crtw32\h, version 1.00, robust:

file      local-ver  ver  status   base

crtdbg.h         16   16  out
internal.h       16   16  out
stdlib.h          7    7  out

Subdirectory \crtw32\mbstring, version 1.00, robust:

file      local-ver  ver  status   base

ismbbyte.c        2    2  out
mbscat.c          1    1  out

Subdirectory \crtw32\misc, version 1.00, robust:

file      local-ver  ver  status   base

assert.c          3    3  out
dbgheap.c        15   15  out
dbgnew.cxx        6    6  out
dbgrpt.c         10   10  out

Subdirectory \crtw32\misc\mac, version 1.00, robust:

file      local-ver  ver  status   base

gestalt.c         1    1  out

Subdirectory \crtw32\startup\mac, version 1.00, robust:

file      local-ver  ver  status   base

crt0.c            2    2  out
crt0dat.c         3    3  out
libcinfo.c        3    3  out

Subdirectory \crtw32\string, version 1.00, robust:

file      local-ver  ver  status   base

strcat.c          3    3  out
strset.c          2    2  out

Subdirectory \fpw32, version 1.00, robust:

file      local-ver  ver  status   base

mkpmac.bat        1    3 *merge    B2

Subdirectory \fpw32\tran, version 1.00, robust:

file      local-ver  ver  status   base

fabs.c            2    2  out

-----------------------------------------------------------------

Tue 10-Feb-95   (JamesMa)

crtw32\eh
        Merged Mac sources for the whole directory.
crtw32\eh\frame.cxx
        Modified __FrameUnwindToState() to go through UnhandledExceptionFilter()
        when an exception is raised during stack unwind (Oly bug #77).

-----------------------------------------------------------------

Fri 10-Feb-95   (GregF)

crtw32\time\utime.c, wasctime.c, wctime.c, wstrdate.c, wstrtime.c, wutime.c
        Replaced WPRFLAG with _UNICODE.

-----------------------------------------------------------------

Thu 09-Feb-95   (GregF)

crtw32\heap\calloc.c, free.c, msize.c, malloc.c, realloc.c
crtw32\heap\mac\heapinit.c
        Re-enabled *_base names and #include <dbgint.h> for the Mac build

crtw32\time\asctime.c
        Replaced WPRFLAG with _UNICODE.

crtw32\time\asctime.c  -> asctime.old,
            ctime.c    -> ctime.old,
            days.c     -> days.old
            difftime.c -> difftime.old
            gmtime.c   -> gmtime.old
crtw32\time\mac\asctime.c (deleted),
                ctime.c (deleted),
                days.c (deleted),
                difftime.c (deleted),
                gmtime.c (deleted)
        Use same version of these sources for Mac as for Win32.

-----------------------------------------------------------------

Wed 08-Feb-95   (GregF)

crtw32\heap\heapadd.c, heapchk.c, heapinit.c, heapmin.c
        Deleted obsolete _OLDROVER_ support.

crtw32\heap\mac\heapmin.c -> heapmin.old
crtw32\heap\heapmin.c
        Merged Mac version into Win32 version.

crtw32\time\common\clock.c, ftime.c, strdate.c, strtime.c, time.c, utime.c
        These were *delfile-d*. Since there are Mac-specific version in
        crtw32\time\mac, these files were not used in any build.

-----------------------------------------------------------------

Wed 08-Feb-95   (v-rogerl)

fpw32\tran\mips\fsinh.s
        remove .extern for label

-----------------------------------------------------------------

Tue 07-Feb-95   (GregF)

crtw32\heap\mac\malloc.c  -> malloc.old
                realloc.c -> realloc.old
crtw32\heap\malloc.c, realloc.c
        Merged Mac versions into Win32 versions.

-----------------------------------------------------------------

Tue 07-Feb-95   (JamesMa)

fpw32\tran\powhlp.c, pow.c
fpw32\include\trans.h
        Reverted to Intel version of powhlp(); Mac version (from merge)
        caused Intel sniff failure.

-----------------------------------------------------------------

Mon 06-Feb-95   (JamesMa)

fpw32 directory
        Mac merge.

-----------------------------------------------------------------

Mon 06-Feb-95   (GregF)

crtw32\h\heap.h

crtw32\heap\mac\heapaslm.c, heapdump.c, heapgrow.c, heapinit.c, heapmin.c,
                malloc.c, realloc.c
        Several changes intended to bring the Mac-specific heap closer to
        our heap manager for Win32 platforms.

-----------------------------------------------------------------

Fri 03-Feb-95   (JamesMa)

crtw32\eh\rtti.cxx
        FindVITargetTypeInstance() now examines base offsets in
                ambiguity test; Olympus bug 5236.

-----------------------------------------------------------------

Fri 03-Feb-95   (BryanT)

crtw32\eh\sources.nt throw.cxx
        Remove EXPORT_HACK for Alpha

crtw32\lowio\ioinit.c
        Check cbReserved2 in addition for lpReserved2 for inherited
        file handles.  NT doesn't set lpReserved2 to NULL.

crtw32\misc\getqloc.c, initctyp.c, inithelp.c, onexit.c
crtw32\stdio\_filbuf.c, _flsbuf.c, _getbuf.c
crtw32\winheap\msize.c
        POSIX changes from MattBr.

crtw32\eh\alpha\ehunwind.c
        Don't use DBG define to key off EH debug code.  Define macros
        for Debug info level.

-----------------------------------------------------------------

Thu 02-Feb-95   (GregF)

crtw32\heap\mac\calloc.c, free.c, handler.cxx, heapadd.c, msize.c, new.cxx
        These were deleted.

crtw32\heap\common\calloc.c    -> calloc.old,
                   free.c      -> free.old,
                   handler.cxx -> handler.old,
                   heapadd.c   -> heapadd.old,
                   msize.c     -> msize.old,
                   new.cxx     -> new.old
        Renamed.

crtw32\heap\calloc.c, free.c, handler.cxx, msize.c, new.cxx
        Temporary changes so these could be used for the Mac builds.

-----------------------------------------------------------------

Thu 02-Feb-95   (v-LeoL)

crtw32\eh\mips\rtlmisc.s
        Fix last jump avoid using next inst from following func in
        delay slot.

-----------------------------------------------------------------

Tue 31-Jan-95   (ChrisWei)

crtw32\h\tchar.h
libw32\include\tchar.h
crt\makefile
        Fix tcs mappings for DLLs: map _tcsxxx to __imp___mbsxxx.

-----------------------------------------------------------------

Tue 31-Jan-95   (GregF)

crtw32\direct\drivfree.c
        Further cleanup suggested by my nemesis, Richard Shupak.

crtw32\misc\searchen.c
        In the case where the supplied filename exists, relative to the
        current directory, use _fullpath to get fully qualified path for
        filename. This fixes Olympus 4770 from Richard Shupak (who else?).

crtw32\startup\mlock.c
        Made the critical section structure underly _SIGNAL_LOCK static.
        This eliminates an infinite loop which may result from calling abort
        with a corrupt heap (example found with the debug libraries by
        Richard Shupak). Olympus bug 5103.

-----------------------------------------------------------------

Mon 30-Jan-95   (GregF)

crtw32\direct\drivfree.c
        Removed explicit check for UNC path as current drive (Olympus bug
        3881).

-----------------------------------------------------------------

Thu 26-Jan-95   (GregF)

crtw32\heap\common\heapdump.c, heapgrow.c, heapinit.c, heapmin.c, malloc.c,
                   realloc.c
        These files were DELFILE-D since they are not used in any build
        (the MAC builds used files in the MAC subdirectory).

crtw32\heap\common\delete.cxx, findaddr.c, heapchk.c, heapprm.c, heapsrch.c,
                   heapwalk.c, hpabort.c, delete.cxx
        These files were DELFILE-D because I determined the corresponding
        files in the heap subdirectory (one level up) could also be used for
        the MAC builds).

crtw32\dos\chdir.c
        Fixed so that UNC paths didn't cause _chdir to choke. This was
        Olympus bug 3880.

-----------------------------------------------------------------

Wed 25-Jan-95   (ChrisWei)

crtw32\h\crtdbg.h
crtw32\misc\dbgheap.h, dbgrpt.c

        _CrtThrowMemoryException has been removed.
        _CrtBadPointer has been removed.

        _CrtSetDbgMode has been changed to _CrtSetReportMode
        _CrtSetDbgFile has been changed to _CrtSetReportFile

        _CrtIsMyHeap has been changed to _CrtIsLocalHeap

        A new bitflag has been added: _CRTDBG_CHECK_CRT_BLOCKS_DF.
        It is off by default and CRT blocks are not flagged by
        _CrtMemDifference or dumped by _CrtMemDumpAllObjectsSince.
        This allows users to not get their leak detection fouled up by
        all the CRT blocks

        _crtMemDF has been changed to _crtDbgFlag

        _CrtEnableMemoryTracking has been replaced by a general purpose routine,
        _CrtSetDbgDataFlag. It sets _crtDbgDataFlag with whatever value the user
        passes in and returns the old values. A special value,
        _CRTDBG_REPORT_DATAFLAG returns the setting without ch

        For consistency, all macros with _CRT_DBG_xxx have been replaced
        with _CRTDBG_xxx:

-----------------------------------------------------------------

Tue 24-Jan-95   (GregF)

crtw32\h\stdio.h
crtw32\stdio\fgetpos.c, fsetpos.c
libw32\include\stdio.h
        Restored 64-bit fpos_t support.

crtw32\string\i386\memccpy.asm, memset.asm
        Added FPO directives.

-----------------------------------------------------------------

Mon 23-Jan-95   (GregF)

crtw32\string\i386\memset.asm
        Faster version from Intel Israel. Could be made faster yet...

-----------------------------------------------------------------

Sat 21-Jan-95   (BryanT)

makefile
libw32\msvcrt.src
libw32\lib\i386\crtdll.def
libw32\lib\i386\msvcrt30.def
libw32\lib\i386\win32s\msvcrt30.def
libw32\lib\mips\msvcrt30.def
libw32\lib\alpha\msvcrt30.def
libw32\lib\dll\ntcrt.src
libw32\lib\sources.nt
        Merged exports list for all platforms.  Build .def files as
        needed for each platform.

crtw32\h\internal.h
crtw32\startup\crt0msg.c, crt0.c
        Fix POSIX build

crtw32\direct\sources.nt
crtw32\dos\sources.nt
crtw32\eh\dll\sources
crtw32\lowio\dll\sources
crtw32\lowio\mt\sources
crtw32\lowio\st\sources
crtw32\mbstring\sources.nt
        Update NT build for recent i64/rtti/EH additions.

-----------------------------------------------------------------

Fri 20-Jan-95   (ChrisWei)

crtw32\h\crtdbg.h, dbgint.h
crtw32\misc\dbgheap.c, dbgnew.cxx, dbgrpt.c
        Change unsigned chars to chars.

crtw32\startup\crt0.c. dllcrt0.c
crtw32\dllstuff\crtlib.c
crtw32\misc\errmode.c
        Set app type at startup for debug reporting.

-----------------------------------------------------------------

Fri 20-Jan-95   (v-rogerl)

fpw32\tran\frexp.c
        frexp should return signed infinites.

-----------------------------------------------------------------

Thu 19-Jan-95   (GregF)

crtw32\string\i386\memccpy.asm
        Faster version from Intel Israel.

crtw32\string\i386\strspn.asm
        Smaller, faster.

-----------------------------------------------------------------

Wed 18-Jan-95   (GregF)

crtw32\misc\setenv.c
crtw32\startup\wild.c
crtw32\stdio\tmpfile.c
        I replaced calls to _wcsdup with _malloc_crt/_wcscpy for the _DEBUG
        build. _wcsdup itself calls malloc and this can not be changed (the
        allocation is exposed to the caller). This was Olympus bug #4332 (had
        DOGFOOD priority, arf!).

-----------------------------------------------------------------

Mon 16-Jan-95   (ChrisWei)

The following files were changed to enable internal CRT debug allocations:

Status for \\D:G2000N2\CRT, owner = CHRISWEI2:
Subdirectory \crtw32\convert, version 1.00, robust:

file      local-ver  ver  status   base

fcvt.c            5    5  out
wcstod.c          2    2  out

Subdirectory \crtw32\dllstuff, version 1.00, robust:

file      local-ver  ver  status   base

crtdll.c          8    8  out

Subdirectory \crtw32\eh, version 1.00, robust:

file      local-ver  ver  status   base

typeinfo.cxx      4    4  out

Subdirectory \crtw32\exec, version 1.00, robust:

file      local-ver  ver  status   base

cenvarg.c         2    2  out
dospawn.c         1    1  out
execl.c           1    1  out
execle.c          1    1  out
execlp.c          1    1  out
execlpe.c         1    1  out
execvpe.c         1    1  out
spawnl.c          1    1  out
spawnle.c         1    1  out
spawnlp.c         1    1  out
spawnlpe.c        1    1  out
spawnve.c         1    1  out
spawnvpe.c        1    1  out

Subdirectory \crtw32\h, version 1.00, robust:

file      local-ver  ver  status   base

crtdbg.h          8    8  out
dbgint.h         11   11  out
ios.h             4    4  out

Subdirectory \crtw32\heap, version 1.00, robust:

file      local-ver  ver  status   base

delete.cxx        1    1  out

Subdirectory \crtw32\iostream, version 1.00, robust:

file      local-ver  ver  status   base

cerrinit.cxx      1    1  out
cininit.cxx       1    1  out
cloginit.cxx      1    1  out
filebuf1.cxx      1    1  out
fstream.cxx       1    1  out
ifstream.cxx      1    1  out
ios.cxx           2    2  out
iostrini.cxx      1    1  out
ofstream.cxx      1    1  out
stdiostr.cxx      1    1  out
streamb.cxx       2    2  out
strstrea.cxx      1    1  out

Subdirectory \crtw32\lowio, version 1.00, robust:

file      local-ver  ver  status   base

getch.c           3    4 *merge    B1

Subdirectory \crtw32\misc, version 1.00, robust:

file      local-ver  ver  status   base

_strerr.c         3    3  out
aw_cmp.c          6    6  out
aw_com.c          3    3  out
aw_env.c          3    3  out
aw_loc.c          3    3  out
aw_map.c          5    5  out
aw_str.c          6    6  out
dbgheap.c         8    8  out
initctyp.c        2    2  out
inithelp.c        3    3  out
initmon.c         3    3  out
initnum.c         3    3  out
inittime.c        2    2  out
lsources          9    9  out
mbtowenv.c        1    1  out
onexit.c          2    2  out
putenv.c          2    2  out
setenv.c          1    1  out
setlocal.c        7    7  out
strerror.c        3    3  out
winsig.c          2    2  out
wperror.c         1    1  out
wsetloca.c        2    2  out
wtombenv.c        1    1  out

Subdirectory \crtw32\startup, version 1.00, robust:

file      local-ver  ver  status   base

mlock.c           2    2  out
stdargv.c         2    2  out
stdenvp.c         1    1  out
thread.c          4    4  out
threadex.c        4    4  out
tidtable.c        2    2  out
wild.c            1    1  out

Subdirectory \crtw32\stdio, version 1.00, robust:

file      local-ver  ver  status   base

_freebuf.c        4    4  out
_getbuf.c         1    1  out
_sftbuf.c         1    1  out
fclose.c          3    3  out
input.c           5    5  out
popen.c           2    2  out
setvbuf.c         1    1  out
tempnam.c         1    1  out
tmpfile.c         1    1  out

Subdirectory \crtw32\string, version 1.00, robust:

file      local-ver  ver  status   base

strlwr.c          6    6  out
strupr.c          6    6  out
wcslwr.c          3    3  out
wcsupr.c          3    3  out
wcsxfrm.c         4    4  out

Subdirectory \crtw32\time, version 1.00, robust:

file      local-ver  ver  status   base

asctime.c         2    2  out
gmtime.c          2    2  out
tzset.c           2    2  out
wcsftime.c        2    2  out

-----------------------------------------------------------------

Fri 13-Jan-95   (JamesMa)

crtw32\misc\i386\setjmp.asm
        Added NLG routines for debugger support.
crtw32\eh\i386\trnsctrl.cxx
        NLG notifications called from _CallSettingFrame().
crtw32\eh\frame.cxx
        Added _NLG_Destination struct; dwCode set for catch blocks
         & local destructors.
crtw32\h\exsup.inc
        Added _NLG_INFO struct.
crtw32\h\setjmp.h
        Added NLG prototypes.
libw32\lib\i386\msvcrt30.def
        Added _NLG_Dispatch, _NLG_Return, _NLG_Notify & _NLG_Destination.
libw32\lib\i386\win32s\msvcrt30.def
        Added _NLG_Dispatch, _NLG_Return, _NLG_Notify & _NLG_Destination.
fpw32\tran\i386\adj_fdiv.asm
        Added underscores to fdivp_sti_st & fdivrp_sti_st for ANSI conformance.
fpw32\include\testfdiv.h
        Underscores added to prototypes for ANSI conformance.
fpw32\tran\i386\testfdiv.c
        Underscores added for ANSI conformance.
fpw32\conv\fpinit.c
        Now calls underscored test routines.

-----------------------------------------------------------------

Fri 13-Jan-95   (v-rogerl)      MIPS ONLY

fpw32\tran\mips\powm.s
        olympus:4186, bad jump, a bad day it is

-----------------------------------------------------------------

Fri 13-Jan-95   (GregF)

crtw32\lowio\getch.c
        Changed _getche so that it does not 'echo' a pushback character. This
        showed up as a bug in _cscanf (NTBUG 30083).

-----------------------------------------------------------------

Thu 12-Jan-95   (GregF)

crtw32\heap\free.c
        Test to reset the rover was bogus and I fixed it. Should be a
        little harder to demonstrate fragmentation with trivial examples.

-----------------------------------------------------------------

Thu 12-Jan-95   (SteveSa)

crtw32\eh\i386\ehprolog.asm
crtw32\h\cruntime.inc
crtw32\misc\i386\exsup.asm,exsup2.asm,exsup3.asm,longjmp.asm,
                 setjmp.asm,setjmp3.asm,setjmpex.asm
fpw32\inc\i386\cruntime.inc
        remove ifdef's to support MASM 5.X

-----------------------------------------------------------------

Thu 12-Jan-95   (Gregf)

crtw32\misc\i386\setjmp.asm
        Purged raisex().

fpw32\tran\i386\filter.c
        Made instr_info_table[] static.

-----------------------------------------------------------------

Wed 11-Jan-95   (v-rogerl)      MIPS ONLY

crtw32\h\math.h - changed
        Change _LANGUAGE_ASSEMBLER to __assembler

----------------------------------------------------------------------

Tue 10-Jan-95   (ChrisWei)

crt\makefile - changed
crt\crtw32\mbstring\lsources - changed
crt\crtw32\mbstring\tcs*.c - delfiled
        Use link-time aliases instead of _tcs* functions.

----------------------------------------------------------------------

Tue 10-Jan-95   (GregF)

crtw32\h\io.h, tchar.h, wchar.h

crtw32\h\sys\stat.h

crtw32\direct\findfile.c, findfi64.c, lsources, wfndfi64.c

crtw32\dos\lsources, stat.c, stati64.c (new), wstati64.c (new)

crtw32\lowio\fstat.c, fstati64.c (new), lsources

libw32\include\io.h, tchar.h, wchar.h

libw32\include\sys\stat.h

libw32\lib\i386\msvcrt30.def
           i386\win32s\msvcrt30.def
           axp\msvcrt30.def
           mips\msvcrt30.def

        Added _[w]find[first|next], _[w]stati64 and _fstati64 functions.

----------------------------------------------------------------------

Mon 09-Jan-95   (ChrisWei)

Changed _MAC_ to _M_MPPC && _M_M68K. Removed MPPC, M68K defines.

The following files all changed:


Status for \\D:G2000N2\CRT, owner = CHRISWEI2:
Subdirectory \, version 1.00, robust:

file      local-ver  ver  status   base

log.txt         162  162  out

Subdirectory \crtw32, version 1.00, robust:

file      local-ver  ver  status   base

mkpmac.bat        1    1  out

Subdirectory \crtw32\convert, version 1.00, robust:

file      local-ver  ver  status   base

isctype.c         4    4  out
mblen.c           4    4  out
mbstowcs.c        6    6  out
mbtowc.c          5    5  out
tolower.c         4    4  out
toupper.c         7    7  out
wcstombs.c        5    5  out
wctomb.c          3    3  out

Subdirectory \crtw32\eh\mac\m68k, version 1.00, robust:

file      local-ver  ver  status   base

frame.cxx         1    1  out

Subdirectory \crtw32\eh\mac\pmac, version 1.00, robust:

file      local-ver  ver  status   base

frame.cxx         2    2  out

Subdirectory \crtw32\h, version 1.00, robust:

file      local-ver  ver  status   base

cmsgs.h           2    2  out
cruntime.h        4    4  out
dostypes.h        3    3  out
ehassert.h        4    4  out
ehhooks.h         3    3  out
fltintrn.h        4    4  out
heap.h           10   10  out
internal.h       11   11  out
math.h            9    9  out
msdos.h           4    4  out
oscalls.h         3    3  out
process.h         8    8  out
search.h          4    4  out
stdio.h          10   10  out
stdlib.h          6    6  out
string.h          4    4  out

Subdirectory \crtw32\h\sys, version 1.00, robust:

file      local-ver  ver  status   base

locking.h         2    2  out
timeb.h           4    4  out
utime.h           4    4  out

Subdirectory \crtw32\heap\mac, version 1.00, robust:

file      local-ver  ver  status   base

heapgrow.c        1    1  out
malloc.c          2    2  out
realloc.c         3    3  out

Subdirectory \crtw32\lowio\mac, version 1.00, robust:

file      local-ver  ver  status   base

mktemp.c          1    1  out

Subdirectory \crtw32\mbstring, version 1.00, robust:

file      local-ver  ver  status   base

ismbsle.c         4    4  out
ismbstr.c         4    4  out
mbctype.c         4    4  out
mbsbtype.c        4    4  out
mbschr.c          4    4  out
mbscmp.c          4    4  out
mbscspn.c         5    5  out
mbsdec.c          4    4  out
mbsicmp.c         4    4  out
mbslen.c          4    4  out
mbslwr.c          5    5  out
mbsnbcat.c        4    4  out
mbsnbcmp.c        4    4  out
mbsnbcnt.c        4    4  out
mbsnbcpy.c        4    4  out
mbsnbicm.c        4    4  out
mbsncat.c         4    4  out
mbsnccnt.c        4    4  out
mbsncmp.c         4    4  out
mbsncpy.c         4    4  out
mbsnicmp.c        4    4  out
mbsnset.c         4    4  out
mbsrchr.c         4    4  out
mbsrev.c          4    4  out
mbsspn.c          5    5  out
mbstok.c          4    4  out
mbsupr.c          5    5  out

Subdirectory \crtw32\misc, version 1.00, robust:

file      local-ver  ver  status   base

abs.c             2    2  out

Subdirectory \crtw32\misc\mac, version 1.00, robust:

file      local-ver  ver  status   base

getenv.c          1    1  out
putenv.c          1    1  out
xcptfltr.c        2    2  out

Subdirectory \crtw32\startup, version 1.00, robust:

file      local-ver  ver  status   base

crt0msg.c         5    5  out

Subdirectory \crtw32\startup\mac, version 1.00, robust:

file      local-ver  ver  status   base

crt0dat.c         2    2  out
libcinfo.c        1    1  out

Subdirectory \crtw32\stdio, version 1.00, robust:

file      local-ver  ver  status   base

fgetpos.c         3    3  out
fread.c           2    2  out
fsetpos.c         3    3  out
fwrite.c          2    2  out
output.c          6    6  out

Subdirectory \crtw32\string, version 1.00, robust:

file      local-ver  ver  status   base

strcat.c          2    2  out

Subdirectory \fpw32, version 1.00, robust:

file      local-ver  ver  status   base

m68k.mkf          1    1  out
pmac.mkf          1    1  out

Subdirectory \fpw32\conv\mac\m68k, version 1.00, robust:

file      local-ver  ver  status   base

libcinfo.c        1    1  out

Subdirectory \fpw32\include\mac, version 1.00, robust:

file      local-ver  ver  status   base

cv.h              1    1  out
trans.h           1    1  out
transl.h          1    1  out

----------------------------------------------------------------------

Sat 07-Jan-95   (ChrisWei)

Changed _WIN32_ to _WIN32 in all files except crtw32\*\common.

crtw32\iostream\common\*.cxx    -> *.old
        Finish rest of iostream files.

crtw32\iostream\iostream.mkf
        Makefile change to reflect merge.

----------------------------------------------------------------------

Fri 06-Jan-95   (ChrisWei)

crtw32\dos\common\*.c
        All nuked since all drawn from dos\mac.

----------------------------------------------------------------------

Fri 06-Jan-95   (GregF)

crtw32\h\stdio.h
libw32\include\stdio.h
        Deleted the 64-bit definition(s) of fpos_t. The C++ style comments
        don't work very well for -Za!

crtw32\iostream\common\ostrint.cxx  -> ostrint.old (renamed)
                       ostrldbl.cxx -> ostrldbl.old
                       ostrlong.cxx -> ostrlong.old
                       ostrptr.cxx  -> ostrptr.old
                       ostrput.cxx  -> ostrput.old
                       ostrshrt.cxx -> ostrshrt.old
                       ostruint.cxx -> ostruint.old
                       ostrulng.cxx -> ostrulng.old
                       ostrusht.cxx -> ostrusht.old
                       stdiostr.cxx -> stdiostr.old
                       streamb1.cxx -> streamb1.old
                       strmbdbp.cxx -> strmbdbp.old
                       strstrea.cxx -> strstrea.old

----------------------------------------------------------------------

Thu 05-Jan-95   (ChrisWei)

crtw32\h\dbgint.h
crtw32\misc\dbgrpt.c, dbgheap.c
        Add report hook, asserts are only errors.

----------------------------------------------------------------------

Thu 05-Jan-95   (GregF)

crtw32\h\stdio.h
crtw32\stdio\fgetpos.c, fsetpos.c
libw32\include\stdio.h
        Temporarily commented out support for 64-bit definition of fpos_t
        due to bugs in MFC and the IDE.

crtw32\iostream\common\cerrinit.cxx -> cerrinit.old (renamed)
                       cininit.cxx  -> cininit.old
                       cloginit.cxx -> cloginit.old
                       filebuf.cxx  -> filebuf.old
                       filebuf1.cxx -> filebuf1.old
                       fstream.cxx  -> fstream.old
                       ifstream.cxx -> ifstream.old
                       iostream.cxx -> iostream.old
                       iostrini.cxx -> iostrini.old
                       istrchar.cxx -> istrchar.old
                       istrdbl.cxx  -> istrdbl.old
                       istream.cxx  -> istream.old
                       istream1.cxx -> istream1.old
                       istrflt.cxx  -> istrflt.old
                       istrgdbl.cxx -> istrgdbl.old
                       istrget.cxx  -> istrget.old
                       istrgetl.cxx -> istrgetl.old
                       istrldbl.cxx -> istrldbl.old
                       ofstream.cxx -> ofstream.old
                       ostrchar.cxx -> ostrchar.old
                       ostrdbl.cxx  -> ostrdbl.old
                       ostream.cxx  -> ostream.old
                       ostream1.cxx -> ostream1.old
        The files above were renamed so that all builds use the versions in
        iostream.

----------------------------------------------------------------------

Wed 04-Jan-95   (BryanT)

crtw32\misc\setlocal.c
        Fix non-Win32 builds.

----------------------------------------------------------------------

Wed 04-Jan-95   (GregF)

crtw32\h\stdio.h
libw32\include\stdio.h
        Bug fix and change to the definition of fpos_t, both from Richard
        Shupak. Added _INTEGRAL_MAX_BITS >= 64 to the conditioning and
        changed the name of the struct to fpos_t (same as the type).

crtw32\lowio\commit.c, eof.c, flength.c, isatty.c, osfinfo.c, setmode.c,
             dup.c, dup2.c, locking.c, lseek.c, read.c, write.c
crtw32\stdio\_freebuf.c, fdopen.c, maketabc.c
        Replaced _WIN32_ with _WIN32. Also fixed copyright dates as long as
        I had 'em checked out.

crtw32\lowio\common\cgets.c, cputs.c getch.c, kbhit.c, pipe.c, putch.c,
                    ungetch.c
        Deleted. Console i/o was not implemented in the Mac versions of the
        Crt libs so these are not needed.

----------------------------------------------------------------------

Tue 03-Jan-95   (GregF)

crtw32\lowio\common\close.c, commit.c, dup.c, dup2.c, eof.c, flength.c,
                    fstat.c, initcon.c, locking.c, lseek.c, mktemp.c, open.c,
                    osfinfo.c, read.c, tell.c, write.c
        The listed files (above) were DELETED. They were not part of any build.
        The _MAC_ build used the corresponding files in crtw32\lowio\mac.

crtw32\lowio\common\creat.c   -> creat.old (renamed)
                    isatty.c  -> isatty.old
                    setmode.c -> setmode.old
        Use lowio versions for _MAC_ build.

crtw32\stdio\mac\*.c
        References to obsolete macros (e.g., _CALLTYPE1) were deleted or
        replaced.

----------------------------------------------------------------------

Fri 30-Dec-94   (GregF)

crtw32\stdio\common\fread.c  -> fread.old (renamed)
                    fseek.c  -> fseek.old
                    fwrite.c -> fwrite.old
                    fgets.c  -> fgets.old

crtw32\stdio\fread.c, fwrite.c
       Use stdio versions for _MAC_ build. This required small conditional
       changes to fread.c and fwrite.c.

----------------------------------------------------------------------

Tue 27-Dec-94   (ChrisWei)

crtw32\dllstuff\crtdll.c
crtw32\startup\dllcrt0.c, wdllcrt0.c, lsources
        Removed unused _wDllMainCRTStartup entry point.

----------------------------------------------------------------------

Tue 27-Dec-94   (GregF)

libw32\include\*.h
        Updated several header files to match crtw32\h.

----------------------------------------------------------------------

Mon 27-Dec-94   (JamesMa)

Latest & greatest Intel workarounds for Pentium FDIV problem:
fpw32\tran\i386\adj_fdiv.asm (modified)
fpw32\tran\i386\tst_fdiv.c replaced by testfdiv.c

-----------------------------------------------------------------

Tues 27-Dec-94   (ChrisWei)

crtw32\misc\aw_*.c
        Call A/W APIs directly rather than dynamically since all OS's
        have stubs for all entry points.

-----------------------------------------------------------------

Mon 26-Dec-94    (GregF)

crtw32\h\internal.h, stdio.h
crtw32\stdio\fgetpos.c, fsetpos.c, lsources
crtw32\stdio\fseeki64.c, ftelli64.c (files added)
        Added support for 64-bit definition of fpos_t. The only user-visible
        functions affected are fgetpos and fsetpos. Internally, there are now
        64-bit versions of fseek and ftell.

-----------------------------------------------------------------

Fri 23-Dec-94    (GregF)

crtw32\stdio\common\gets.c -> gets.old (renamed)
                    puts.c -> puts.old
        Version in stdio may be used for both Win32 and MAC builds

-----------------------------------------------------------------

Thu 22-Dec-94    (GregF)

crtw32\stdio\common\clearerr.c -> clearerr.old (renamed)
                    closeall.c -> closeall.old
                    cprintf.c  -> cprintf.old
                    cscanf.c   -> cscanf.old
                    feoferr.c  -> feoferr.old
                    fgetc.c    -> fgetc.old
                    fgetchar.c -> fgetchar.old
                    fgetpos.c  -> fgetpos.old
                    fileno.c   -> fileno.old
                    fprintf.c  -> fprintf.old
                    fputc.c    -> fputc.old
                    fputchar.c -> fputchar.old
                    fputs.c    -> fputs.old
                    fscanf.c   -> fscanf.old
                    fsetpos.c  -> fsetpos.old
                    getw.c     -> getw.old
                    printf.c   -> printf.old
                    putw.c     -> putw.old
                    scanf.c    -> scanf.old
                    setbuf.c   -> setbuf.old
                    snprintf.c -> snprintf.old
                    sprintf.c  -> sprintf.old
                    sscanf.c   -> sscanf.old
                    vfprintf.c -> vfprintf.old
                    vprintf.c  -> vprintf.old
                    vsnprint.c -> vsnprint.old
                    vsprintf.c -> vsprintf.old
        The files above were renamed so that all builds now use the versions
        in stdio.


crtw32\stdio\common\fclose.c  (deleted)
                    fflush.c  (deleted)
                    rmtmp.c   (deleted)
                    tempnam.c (deleted)
                    tmpfile.c (deleted)
        The files above were deleted (delfile-d) because they were not used in
        any build (MAC builds used versions in stdio\mac).

-----------------------------------------------------------------

Wed 20-Dec-94   (ChrisWei)

crt\makefile
        Use separate .PDB for DLL compilation.

Remove NT 3.1 hacks:

Subdirectory \crtw32\convert, version 1.00, robust:

file      local-ver  ver  status   base

_mbslen.c         2    2  out
mblen.c           2    2  out
mbstowcs.c        4    4  out
mbtowc.c          3    3  out

Subdirectory \crtw32\h, version 1.00, robust:

file      local-ver  ver  status   base

internal.h        7    7  out

Subdirectory \crtw32\mbstring, version 1.00, robust:

file      local-ver  ver  status   base

mbscoll.c         3    3  out
mbsicoll.c        3    3  out
mbsnbcol.c        3    3  out
mbsnbico.c        3    3  out
mbsncoll.c        4    4  out
mbsnicol.c        4    4  out

Subdirectory \crtw32\misc, version 1.00, robust:

file      local-ver  ver  status   base

aw_cmp.c          4    4  out
aw_map.c          3    3  out
aw_str.c          4    4  out
lsources          8    8  out
setfcntr.c        1    1  out
setmbval.c        1    1  out

-----------------------------------------------------------------

Wed 20-Dec-94   (V-RogerL)      MIPS ONLY

fpw32\tran\mips\fmodm.s
fpw32\tran\mips\logm.s
fpw32\tran\mips\sinhm.s
fpw32\tran\mips\trigm.s
        Olympus: 2631
        Fix return codes which are not NCEG compliant.

-----------------------------------------------------------------

Mon 19-Dec-94    (GregF)

crtw32\string\i386\strstr.asm
        Sped up as part of Olympus bug 893. Could be faster still, but that's
        for another day.

-----------------------------------------------------------------

Mon 19-Dec-94    (GregF)

crtw32\dllstuff\crtlib.c
        Changed "MSVCRT20" to "MSVCRT30", and pulled the Win32S support
        under an #ifdef _M_IX86. This was Olympus bug #3709 from Richard
        Shupak.

-----------------------------------------------------------------

Fri 16-Dec-94    (ChrisWei)

crtw32\h\time,h wchar.h
crtw32\time\wcsftime.c
        wcsftime format string should have been wchar_t...ooops.

-----------------------------------------------------------------

Thu 15-Dec-94    (v-LeoL)

makefile
        Fixed oldnames target to alias _foo for foo on MIPS & Alpha

-----------------------------------------------------------------

Thu 15-Dec-94    (GregF)

crtw32\stdio\input.c
        Changed so that the only wide characters recognized as hex digits
        are the familar single-byte char hex digits extended by 0 to wide
        characters. This was Olympus bug 3201.

-----------------------------------------------------------------

Wed 14-Dec-94    (BryanT)
crtw32\h\math.h
crtw32\h\excpt.h
crtw32\h\ios.h
crtw32\h\streamb.h
        Olympus:2500 - Add _CRTIMP designations for MIPS functions
        that need it.  Also remove mtlockinit/term prototypes from
        streamb.h and fix proto's in ios.h per converstaion w/SteveSa.

-----------------------------------------------------------------

Wed 14-Dec-94    (BryanT)

crtw32\crt32.nt
crtw32\dllstuff\dlllib\sources
crtw32\eh\sources.nt
crtw32\eh\st\sources
crtw32\eh\mt\sources
crtw32\eh\dll\sources
crtw32\lowio\dll\sources
crtw32\lowio\mt\sources
crtw32\lowio\st\sources
fpw32\tran\sources.nt
libw32\lib\dll\ntcrt.src
        Update the NT build with the last month's changes.  Also,
        delete sources.vc (VC group no longer uses them).

-----------------------------------------------------------------

Tue 13-Dec-94    (SteveSa)

makefile
libw32/makefile
libw32/lib/i386/msvcrt30.def
libw32/lib/i386/win32s/msvcrt30.def
fpw32/conv/fpinit.c
fpw32/tran/i386/87fmod.asm
fpw32/tran/i386/87tran.asm
crtw32/dllstuff/crtexe.c
crtw32/dllstuff/crtdll.c
crtw32/dllstuff/sources.vc
crtw32/dllstuff/lsources
crtw32/dllstuff/adjustfp.c (new file)
        The variable _adjust_fdiv must be exported from MSVCRT30.DLL
        but must be copied into the local data section in both EXE
        and DLL clients of MSVCRT30.DLL.  The variable may not be
        declared in crtdll.c and crtexe.c but must be external to
        both of them (otherwise the linker may pick the wrong one).
        _adjust_fdiv was misspelled for a while (as __adjust_fdiv).
        Also, the _adj_* and _safe_fdiv* routines must be exported
        from BOTH the Win32s and Win32 versions of msvcrt30.dll.

-----------------------------------------------------------------

Tue 13-Dec-94   (GregF)

crtw32\misc\alpha\extvvol.s, extzvvol.s
        Fixes from DEC, passed along by Fred Kunz.

-----------------------------------------------------------------

Tue 13-Dec-94   (GregF)

crtw32\startup\i386\chkstk.asm
        Improved version courtesy of Intel. Principal change was to return
        to the caller via a ret instruction versus a jmp eax. The jmp eax
        screws up the cache on the P6, at great expense (something like
        20 clocks, I think they said).

-----------------------------------------------------------------

Tue 13-Dec-94    (ChrisWei)

crt\makefile
        Fix typo: msvcrt30.def to msvcr30d.def.

-----------------------------------------------------------------

Tue 13-Dec-94    (GregF)

crtw32\dllstuff\crtdll.c, atonexit.c
        Made Win32s support conditional on _M_IX86.

-----------------------------------------------------------------

Fri 09-Dec-94   (JamesMa)

fpw32\tran\i386\tst_fdiv.c, adj_fdiv.asm
        New files containing detection and workaround code
        for Pentium FDIV bug.
fpw32\tran\i386\87fmod.asm, 87tran.asm
        Now check for bogus Pentiums, call workarounds in
        adj_fdiv.asm if necessary.
fpw32\tran\lsources
        Added tran\i386\adj_fdiv.obj, tran\i386\tst_fdiv.obj
fpw32\conv\fpinit.c
        Now checks for bogus Pentiums, sets __adjust_fdiv flag.

-----------------------------------------------------------------

Fri 09-Dec-94   (ChrisWei)

crtw32\h\dbgint.h, crtdbg.h
crtw32\misc\dbgheap.c, dbgrpt.c
        use non-win32 names to prepare for mac merge

-----------------------------------------------------------------

Thu 08-Dec-94   (ChrisWei)

makefile
        No more debug directory, DLL gets full debug info.

-----------------------------------------------------------------

Wed 08-Dec-94   (V-RogerL)      MIPS ONLY

fpw32\tran\mips\filter.c
        Remove warnings; add prototypes, delete unreferenced local.

crtw32\helper\mips\llbit.c
crtw32\helper\mips\lldiv.c
crtw32\helper\mips\lldefs.h
        Remove private prototypes.

-----------------------------------------------------------------

Wed 07-Dec-94   (V-RogerL)      MIPS ONLY

The following changes were done after the alpha changes were made
to crtw32\mbstring\lsources.  I assume that PPC will have to make
some changes also since there is no !else condition for the !if arch
check.

crtw32\mbstring\lsources
        Add mbcdup for mips only.

crtw32\string\mips\strcatm.s
crtw32\string\mips\strcpym.s
        Add alternate entry points for _mbccat and _mbccpy.

-----------------------------------------------------------------

Wed 07-Dec-94   (SteveSa)

Changes on behalf of Richard Shupak (and a few lines for Roger Lanser):

makefile
makefile.sub
crtw32\eh\lsources
crtw32\mbstring\lsources
crtw32\misc\lsources
crtw32\string\lsources
fpw32\tran\lsources
        Changes for ALPHA
        Remove -Gd -- it's redundant but causes problems for Alpha compiler
        Combine the implib and link steps in generating .DLL's
        Also correct MIPS helper object list in MSVCRT.LIB (for V-RogerL)

-----------------------------------------------------------------

Wed 07-Dec-94   (SteveSa)

makefile -
        Remove CVTRES step -- linker can handle .res files as input

srcrel\msvc30.if (renamed msvc20.if)
        Added a few symbols that were lacking

srcrel\bldmkf.sed
srcrel\cleanse.lst
srcrel\mkclnmkf.c
srcrel\mkmkf.cmd
srcrel\rawcopy.lst
        Tools for cleansing the sources before build.

-----------------------------------------------------------------

Wed 07-Dec-94   (v-rogerl)      MIPS ONLY

Try to make mips crts compile with minimal change to environment.

crtw32\helper\mips\llcvt.s
crtw32\helper\mips\lldivrem.s
crtw32\helper\mips\llmul.s
fpw32\tran\mips\exptable.s
fpw32\tran\mips\logtable.s
        Make little endian the default (ie. no -D_MIPSEL is ok).

crtw32\h\fpieee.h
fpw32\tran\include\trans.h
        Replace _LANGUAGE_ASSEMBLER with __assembler which will
        be defined by the MIPS CL driver.  Then nothing has to
        be explicitly defined in a makefile.

fpw32\tran\lsources
        Includes for mips assembler are the same as C (headers are #if'd).

makefile
        NT headers require _MIPS_ to be defined for mips.

-----------------------------------------------------------------

Wed 07-Dec-94   (SteveSa)

crtw32\exec\system.c
        If there is no %COMSPEC%, look for command.com on Windows '95
        and cmd.exe on Windows NT.  (Previously it was always cmd.exe)

-----------------------------------------------------------------

Tue 06-Dec-94   (SteveSa)

makefile
libw32\msvcr30.rc
        Changed the invocation of RC.EXE to use the LANGAPI environment
        variable rather than the hard-coded path //lang1/v3slm/src/...
        to get the include file "version.h".  Removed "winver.h" from
        msvcrt30.rc because it was not needed.

makefile
        Add -Gfy to C compiler options, and -QI6 for X86 only.
        Use -O2 instead of -Ox for release and lego builds.
        Add cabs() to list of OLDNAMES aliases.

-----------------------------------------------------------------

Mon 05-Dec-94   (ChrisWei)

crtw32\h\crtdbg.h
crtw32\h\dbgint.h
crtw32\h\heap.h
crtw32\heap\calloc.c
crtw32\heap\free.c
crtw32\heap\malloc.c
crtw32\heap\msize.c
crtw32\heap\realloc.c
crtw32\misc\dbgheap.c
        Fix the normal heap and the debug heap. calloc and realloc called
        malloc_lk for MT and got no new handler support. Fixed that while
        rearranging the _nh_malloc mess to allow debug support.  Dbg
        support for msvcrt30d.dll now works.

-----------------------------------------------------------------

Mon 05-Dec-94   (v-rogerl)      MIPS ONLY

fpw32\tran\mips\*t.c
        Added quick regression tests for mips.

------------------------------------------------------------------

Sat 03-Dec-94   (SteveSa)

crtw32\dllstuff\i386 dllsupp.asm
crtw32\dos\dosmap.c,unlink.c
crtw32\h\cruntime.inc,error.h,internal.h,msdos.h,process.h
crtw32\lowio\cgets.c,dup.c,dup2.c,getch.c,locking.c
crtw32\lowio\lseek.c,pipe.c,putch.c,read.c,write.c
crtw32\misc\umask.c,wrt2err.c
crtw32\startup\crt0dat.c
crtw32\startup\i386\chkstk.asm
crtw32\time\strtime.c
        Source Release Clean-Up
        Fix references to OS/2, obsolete 16-bit comments, unnecessary includes

-----------------------------------------------------------------

Fri 02-Dec-94   (v-rogerl)      MIPS ONLY

fpw32\tran\mips\fmodm.s
fpw32\tran\mips\logm.s
fpw32\tran\mips\powm.s
fpw32\tran\mips\trigm.s
        Change return codes to be NCEG compliant.

-----------------------------------------------------------------

Fri 02-Dec-94   (v-rogerl)      MIPS ONLY

crtw32\string\mips\memorym.s
fpw32\tran\mips\fsqrthlp.s
        Replace '#if defined(R4000)' with '$if -D_M_MRX000 >= 4000'
        which is defined by the cl driver.

------------------------------------------------------------------

Wed 30-Nov-94   (GregF)

crtw32\h\io.h
crtw32\lowio\fleni64.c, lseeki64.c, lsources, telli64.c
libw32\lib\alpha\msvcrt30.def
           mips\msvcrt30.def
           i386\msvcrt30.def
           i386\win32s\msvcrt30.def
        Added versions of _filelength(), _lseek() and _tell() which work
        with full 64-bit (__int64) file lengths and file positions.

------------------------------------------------------------------

Tue 29-Nov-94   (JamesMa)

crtw32\eh\frame.cxx
        Removed obsolete 'hash' test in TypeMatch(); modified AdjustPointer()
        to add in an extra pdisp, not vdisp.

-----------------------------------------------------------------

Tue 29-Nov-94    (GregF)

crtw32\string\i386\strlen.asm
        Faster version, courtesy of Intel Israel.

-----------------------------------------------------------------

Mon 28-Nov-94    (ChrisWei)

crtw32\h\dbgint.h, crtdbg.h
crtw32\misc\dbgheap.c, dbgrpt.c, dbghook.c
        1) General cleanup.
        2) Change _SetCrtxxx to _CrtSetxxx.
        3) Add Set Client Dump stuff.
        4) Modify alloc hook stuff - more info passed, for alloc, re-alloc,
        and free, can overide at link time now.

-----------------------------------------------------------------

Tues 22-Nov-94   (GregF)

crtwin32\string\i386\strnicmp.asm
        Wasn't incrementing the string pointers in the non-C locale
        case. Had the effect of repeatedly comparing the first characters
        of the two strings.

------------------------------------------------------------------

Mon 21-Nov-94   (JamesMa)

makefile
        Added typeinfo.h to OBJS_WITH_EXPORTS_DLL_RAW section.

crtw32\h\stdexcpt.h
        Made the xmsg typedef #ifdef __RTTI_OLDNAMES.

------------------------------------------------------------------

Fri 18-Nov-94    (GregF)

crtw32\string\i386\strchr.asm
        Did some long overdue (VERY long overdue!) tuning. This is part of
        Olympus bug #893

-----------------------------------------------------------------

Wed 15-Nov-94    (JamesMa)

crtw32\eh\rtti.cxx
        Added more agressive checking for non-rtti objects in __RTtypeid().

crtw32\h\typeinfo.h, stdexcpt.h
        Made several more eh classes _CRTIMP to remove the C4275 build warnings.

-----------------------------------------------------------------

Mon 14-Nov-94    (GregF)

crtwin32\convert\toupper.c, towupper.c
        Removed extra mlock call.

crtwin32\string\i386\stricmp.asm
        Fixed typo (was saving esi twice).

-----------------------------------------------------------------

Sat 12-Nov-94    (GregF)

crtw32\string\i386\memicmp.asm, stricmp.asm, strnicmp.asm
        Wasn't saving volatile regs across function calls. Having to work on
        Sat is probably suitable punishment in this case.

-----------------------------------------------------------------

Thu 10-Nov-94    (SteveSa)

crt\makefile
crt\crtw32\eh\lsources
crt\crtw32\eh\special.mak (re-created)
        One source file and 4 include files are needed from the LANGAPI
        project.  The LANGAPI environment variable must point to the
        main directory of that project on the local system.  This practice
        matches the rest of the VC tools projects.  The "langapi" target
        is now defunct.

-----------------------------------------------------------------

Wed 09-Nov-94    (SteveSa)

crt\makefile
crt\crtw32\eh\lsources
crt\crtw32\eh\special.mak (deleted)
        One source file and 4 include files are needed from the LANGAPI
        project on //lang1/v3slm.  Instead of compiling/including those
        files from the network, local copies are used instead.  The top-
        level makefile now includes a target "langapi" which grabes them.

        This is to avoid the problem of files out on //lang1 changing
        while a build is taking place on the local machine, leading to
        synchronization problems and/or unexpected results.

-----------------------------------------------------------------

Wed 09-Nov-94    (SteveSa)

crt\makefile
crt\libw32\msvcrt30.rc
        Invoke RC and CVTRES on MSVCRT20.DLL/.DLS to set version info.
        This step is already in crt\libw32\makefile but needed to be
        propogated into crt\makefile.  Also change msvcrt30.rc to
        include .../langapi/include/version.h to get the Julian date
        build information into the sub-minor version.

-----------------------------------------------------------------

Wed 09-Nov-94    (GregF)

crt\crtw32\direct\fullpath.c
        Revised (i.e., threw away 9/10-ths of the code) to use NT's
        GetFullPathName API. This fixes Olympus bug 138.

-----------------------------------------------------------------

Tue 08-Nov-94    (SteveSa)

crt\crtw32\dllstuff\crtdll.c
        Free up __onexitbegin to avoid a slow memory leak

-----------------------------------------------------------------

Tue 08-Nov-94    (SteveSa)

crt\makefile
crt\libw32\makefile
crt\libw32\msvcrt20.rc -> msvcrt30.rc
crt\libw32\alpha\msvcrt20.def -> msvcrt30.def
crt\libw32\i386\msvcrt20.def -> msvcrt30.def
crt\libw32\i386\win32s\msvcrt20.def -> msvcrt30.def
crt\libw32\mips\msvcrt20.def -> msvcrt30.def
        Change all references to msvcrt20.* to msvcrt30.* (2.0 to
        3.0) and edit version number in .DEF files and .RC file.
        Changed DLL base address from 0x1010_0000 to 0x1020_0000.

-----------------------------------------------------------------

Mon 07-Nov-94    (GregF)

crt\libw32\include\*
        Updated header files to bring them in sync with what we have
        in crtw32\h.

-----------------------------------------------------------------

Mon 07-Nov-94    (GregF)

crtw32\h\winheap.h
crtw32\winheap\heapinit.c
        Made a couple of changes so the DLLs for Win32 and Win32s would
        build.

-----------------------------------------------------------------

Mon 07-Nov-94    (GregF)

crtw32\h\winheap.h
crtw32\winheap\heapchk.c, heapinit.c, heapmin.c, heapterm.c (deleted!),
               heapwalk.c, lsources, sources.vc
crtw32\winheap\dll\sources
crtw32\winheap\mt\sources
crtw32\winheap\psx\sources
crtw32\winheap\st\sources
        Use HeapCreate API instead of GetProcessHeap API.

-----------------------------------------------------------------

Sun 06-Nov-94    (GregF)

crtw32\h\direct.h, dos.h, doscalls.h, ehdata.h, eh.h, excpt.h, fpieee.h,
         fstream.h, io.h, iomanip.h, ios.h, iostream.h, istream.h, locale.h,
         malloc.h, math.h, mbstring.h, ostream.h, setjmp.h, stdarg.h, stdio.h,
         stdiostr.h, stdlib.h, streamb.h, strstrea.h, time.h, varargs.h, wchar.h
crtw32\sys\stat.h, timeb.h, utime.h
        Added, or changed, pack pragmas for 8 byte alignment. This fixes
        Olympus bug #104. Apps which include ios.h (this probably includes all
        users of iostream), stat.h or wchar.h need to be recompiled.

-----------------------------------------------------------------

Sun 06-Nov-94    (GregF)

crt\makefile
        Fixed omissions related to runtime errors and matherr in msvcrt*.dll.

-----------------------------------------------------------------

Sat 05-Nov-94    (BryanT)

crtw32\startup\dlllib\sources - link the checkstack code into the
        DLL users.

-----------------------------------------------------------------

Thu 03-Nov-94    (ChrisWei)

crtw32\misc\dbgheap.c, dbgrpt.c - addfile
crtw32\misc\lsources
crtw32\h\dbgint.h crtdbg.h - addfile
crtw32\heap\malloc.c, calloc.c, free.c, realloc.c, msize.c
        Add debug heap support. Controlled by _DEBUG macro.

crt\makefile - put the .pdb file where the libs are built.

-----------------------------------------------------------------

Thu 03-Nov-94    (SteveSa)

makefile
libw32\makefile
        Add hypot, cabs, j0, j1, jn, y0, y1, and yn to oldnames aliases.
        This is Olympus bug #1684.  Curiously, these aliases were always
        in the 16-bit libs.  Not sure why they got left out of VCNT v1.1.

-----------------------------------------------------------------

Thu 03-Nov-94    (SteveSa)

crtw32\h\process.h -
crtw32\dllstuff\crtdll.c
crtw32\startup\dllcrt0.c
crtw32\startup\thread.c
crtw32\startup\threadex.c
        Backed out yesterday's change to these files.  The __cdecl/__stdcall
        keyword DOES belong before the asterisk in a function prototype, not
        after it.  The __stdcall modifies what the pointer points to, not
        the pointer variable itself.

-----------------------------------------------------------------

Thu 03-Nov-94    (GregF)

crtw32\misc\alpha\extvvol.s, extzvvol.s, insvvol.s, sfill.s, smove.s,
                  smovem.s, szero.s
        Changes for DEC Alpha from Fred Kunz.

-----------------------------------------------------------------

Wed 02-Nov-94    (SteveSa)

crtw32\heap\heapinit.c,
crtw32\h\heap.h -
        Back out my 8/24 change to the Win32s detection code which tried to
        detect Phar Lap TNT but not Win32s.  Instead, use a simpler solution:
        maximum region size under Win32s increased from 256 KB to 16 MB
        to allow Win32s users to allocate huge amounts of memory.

-----------------------------------------------------------------

Wed 02-Nov-94    (SteveSa)

        *** This change backed-out on Thu 03-Nov-94 ***

crtw32\h\process.h -
crtw32\dllstuff\crtdll.c
crtw32\startup\dllcrt0.c
crtw32\startup\thread.c
crtw32\startup\threadex.c
        Fix position of __cdecl/__stdcall/WINAPI in declaration of pointer
        to function (parameters to _beginthread and _beginthreadex and the
        variable _pRawDllMain).  The function type goes AFTER the asterisk.
        A compiler bug allowed it to occur afterward as well.

-----------------------------------------------------------------

Wed 02-Nov-94    (GregF)

crtw32\string\strcoll.c, stricoll.c, strlwr.c, strncoll.c, strupr.c,
              strxfrm.c, wcscoll.c, wcsicoll.c, wcslwr.c, wcsncoll.c,
              wcsnicol.c, wcsupr.c, wcsxfrm.c
        Sped up for the C locale, multi-thread version. These are the final
        changes to resolve Olympus bug #1681.

-----------------------------------------------------------------

Tue 01-Nov-94    (BryanT)

crtw32\winheap\heapterm.c, heapadd.c, heapused.c, new_mode.cxx
        Initial stubs until new kernel32 api's are ready

crtw32\winheap\sources.nt
crtw32\winheap\st\sources
crtw32\winheap\mt\sources
crtw32\winheap\dll\sources
crtw32\winheap\dlllib\sources
        Setup so _newmode.c can be linked into image (not exported
        from the DLL)

libw32\lib\dll\ntcrt.src
        Add extra entrypoints (for C++ EH and other stuff)

libw32\lib\sources.nt
        Fix random problems

-----------------------------------------------------------------

Tue 01-Nov-94    (BryanT)

crtw32\string\memicmp.c, strnicmp.c
        Fix non-X86 builds by including locale.h (for the LC_CTYPE
        definition)

-----------------------------------------------------------------

Fri 28-Oct-94    (BryanT)

crtw32\eh\st\sources
crtw32\eh\mt\sources
crtw32\dll\sources
        Add ehprolog.asm to i386_SOURCES

libw32\lib\dll\ntcrt35.src
        Export _EH_Prolog on X86

-----------------------------------------------------------------

Fri 28-Oct-94    (SteveSa, JamesMa)

crtw32\dllstuff\cinitexe.c
crtw32\startup\crt0init.c
crtw32\startup\wincrt0.c
crtw32\startup\wwincrt0.c
        There is a default library search record (-defaultlib:) for
        KERNEL32.LIB in all cases.  Until now, a -defaultlib directive
        for USER32.LIB was only included in wincrt0.c and wwincrt0.c,
        but now that our error-handling code can call MessageBoxA, we
        need a -defaultlib directive for user32.lib in ALL cases, just
        like kernel32.lib has.

-----------------------------------------------------------------

Fri 28-Oct-94    (SteveSa, JamesMa)

crtw32\eh\special.mak (new file)
crtw32\eh\lsources
crtw32\eh\stdexcpt.cxx
crtw32\eh\stdnewh.cxx
        Add RTTI support objects: undname.obj, rtti.obj, stdexcpt.h,
        stdnew.obj, and typeinfo.obj.  The source for undname.obj is
        NOT in this directory (or even this probject), but out on
        //lang1/v3slm/src/langapi/undname/.  The RTTI sources include
        files in the //lang1/v3slm/src/langapi/{include,undname}/
        directories, so two -I directives are added for this directory.

crtw32/h/typeinfo.h
        Also removed the definition of WIN32_LEAN_AND_MEAN from this file.
        This symbol is now *always* defined by our build process.

-----------------------------------------------------------------

Thu 27-Oct-94    (GregF)

crtw32\string\memicmp.c, stricmp.c, strnicmp.c
        Fixed more silly mistakes

crtw32\string\i386\memicmp.asm, stricmp.asm, strnicmp.asm
        Now works for DLL_FOR_WIN32S.

-----------------------------------------------------------------

Thu 27-Oct-94    (ChrisWei)

crtw32\eh\lsources, sources.vc
crtw32\eh\i386\ehprolog.asm added
        EH prolog stuff added - from LouisL

crtw32\misc\aw_str.c - fix for FE win95 - verify proper lcid/codepage match

-----------------------------------------------------------------

Thu 27-Oct-94    (GregF)

crtw32\h\ctype.h

crtw32\convert\toupper.c, towupper.c

Fixed several silly mistakes. I was too quick and careless with yesterday's
checkin.

-----------------------------------------------------------------

Wed 26-Oct-94    (GregF)

crtw32\convert\tolower.c, toupper.c, towlower.c, towupper.c

crtw32\h\ctype.h

crtw32\string\memicmp.c, stricmp.c, strnicmp.c, wcsicmp.c, wcsnicmp.c

crtw32\string\i386\memicmp.asm, stricmp.asm, strnicmp.asm

A package of fixes so that these functions work properly and are mult-thread
safe in non-C locales. This is part of the fix for 1232. A few were also
sped up for the C locale (e.g., memicmp.c, used for non-x86 targets).

-----------------------------------------------------------------

Fri 21-Oct-94    (BryanT)

crtw32\mbstring\i386\mbsdup.asm, mbscat.asm
        Change macros to work correctly in VC build environment where
        the i386 path is defined away.

-----------------------------------------------------------------

Thu 20-Oct-94    (BryanT)

crtw32\crt32.nt
fpw32\fp32.nt
libw32\lib\sources.nt
        Allow NTDEBUG to be set (so libs can have debug symbolic)
        If building CRTDLL (instead of NTCRT35), define _NTSDK.

-----------------------------------------------------------------

Wed 19-Oct-94    (BryanT)

crtw32\stdio\output.c
        Re-enabled %Z and %ws/%wc for NT_BUILD only.

-----------------------------------------------------------------

Tue 18-Oct-94    (BryanT)

crtw32\mbstring\toupper.c, mbtowc.c mbstowcs.c
        Fix build warnings in _NTSUBSET_ section.

-----------------------------------------------------------------

Tue 18-Oct-94    (BryanT)

crtw32\eh\*.cxx
        Disable all code for _M_PPC builds only.

crtw32\mbstring\i386\*.asm
crtw32\eh\alpha\bridge.s
        include w/o path when NT_BUILD is used

crtw32\dirs, crt32.nt
crtw32\convert\dirs
crtw32\direct\sources.nt
crtw32\dos\dirs
crtw32\heap\dirs
crtw32\linkopts\makefile.inc
crtw32\small\sources, sources.vc
fpw32\dirs, fp32.nt
        Fix typos and add files I missed yesterday.

-----------------------------------------------------------------

Mon 17-Oct-94    (JamesMa)

Added the folowing files related to Runtime Type Information:
        crtw32\eh\rtti.cxx
        crtw32\eh\typeinfo.cxx
        crtw32\eh\stdexcpt.cxx
        crtw32\eh\stdnewh.cxx
        crtw32\h\rtti.h
        crtw32\h\typeinfo.h
        crtw32\h\stdexcpt.h

Note: these files have not been added to the makefile yet -
dependency issues with the \langapi project must be resolved first.

---------------------------------------------------------------

Mon 17-Oct-94    (BryanT)

        Add support for NT build from one enlistment.  Lots of files
        changed.  The old VC sources files were renamed to sources.vc
        Here's the log:

time            user     op      file               comment

Log for crt:

10-17-94@19:32  BryanT3  addfile dirs v1            New NT build
10-17-94@19:33  BryanT3  in      makefile v21       New NT build

Log for crt\crtw32:

10-17-94@17:36  BryanT3  in      crt32.nt v4        No _NTSDK
10-17-94@17:37  BryanT3  rename  makefile v4        makefile.vc;Not needed

Log for crt\crtw32\convert:

10-17-94@17:38  BryanT3  delfile makefile v2        Not needed
10-17-94@17:38  BryanT3  rename  sources v2         sources.vc;Save
10-17-94@17:38  BryanT3  in      sources.nt v2      Update
10-17-94@17:39  BryanT3  addfile st v1              New build
10-17-94@17:39  BryanT3  addfile mt v1              New build
10-17-94@17:39  BryanT3  addfile nt v1              New build
10-17-94@17:39  BryanT3  addfile dll v1             New build
10-17-94@17:39  BryanT3  addfile psx v1             New build

Log for crt\crtw32\convert\dll:

10-17-94@17:39  BryanT3  addfile                    New build
10-17-94@17:39  BryanT3  addfile makefile v1        New build
10-17-94@17:39  BryanT3  addfile sources v1         New build

Log for crt\crtw32\convert\mt:

10-17-94@17:39  BryanT3  addfile                    New build
10-17-94@17:39  BryanT3  addfile makefile v1        New build
10-17-94@17:39  BryanT3  addfile sources v1         New build

Log for crt\crtw32\convert\nt:

10-17-94@17:39  BryanT3  addfile                    New build
10-17-94@17:39  BryanT3  addfile makefile v1        New build
10-17-94@17:39  BryanT3  addfile sources v1         New build

Log for crt\crtw32\convert\psx:

10-17-94@17:39  BryanT3  addfile                    New build
10-17-94@17:39  BryanT3  addfile makefile v1        New build
10-17-94@17:39  BryanT3  addfile sources v1         New build

Log for crt\crtw32\convert\st:

10-17-94@17:39  BryanT3  addfile                    New build
10-17-94@17:39  BryanT3  addfile makefile v1        New build
10-17-94@17:39  BryanT3  addfile sources v1         New build

Log for crt\crtw32\direct:

10-17-94@17:44  BryanT3  rename  sources v2         sources.vc;Save it
10-17-94@17:44  BryanT3  in      sources.nt v2      New build
10-17-94@17:44  BryanT3  delfile makefile v2        Not needed
10-17-94@17:45  BryanT3  addfile st v1              New build
10-17-94@17:45  BryanT3  addfile mt v1              New build
10-17-94@17:45  BryanT3  addfile dll v1             New build
10-17-94@17:46  BryanT3  addfile dirs v1            New NT build

Log for crt\crtw32\direct\dll:

10-17-94@17:45  BryanT3  addfile                    New build
10-17-94@17:45  BryanT3  addfile makefile v1        New build
10-17-94@17:45  BryanT3  addfile sources v1         New build

Log for crt\crtw32\direct\mt:

10-17-94@17:45  BryanT3  addfile                    New build
10-17-94@17:45  BryanT3  addfile makefile v1        New build
10-17-94@17:45  BryanT3  addfile sources v1         New build

Log for crt\crtw32\direct\st:

10-17-94@17:45  BryanT3  addfile                    New build
10-17-94@17:45  BryanT3  addfile makefile v1        New build
10-17-94@17:45  BryanT3  addfile sources v1         New build

Log for crt\crtw32\dllstuff:

10-17-94@17:49  BryanT3  delfile makefile v2        Not needed
10-17-94@17:49  BryanT3  rename  sources v3         sources.vc;Save it
10-17-94@17:49  BryanT3  addfile sources.nt v1      New NT build
10-17-94@17:49  BryanT3  addfile dll v1             New NT build
10-17-94@17:49  BryanT3  addfile dlllib v1          New NT build
10-17-94@17:50  BryanT3  addfile dirs v1            New NT build
10-17-94@17:51  BryanT3  in      crtexe.c v5        Fix _NTSDK build
10-17-94@17:51  BryanT3  in      crtlib.c v10       Fix _NTSDK build

Log for crt\crtw32\dllstuff\dll:

10-17-94@17:49  BryanT3  addfile                    New NT build
10-17-94@17:49  BryanT3  addfile makefile v1        New NT build
10-17-94@17:49  BryanT3  addfile sources v1         New NT build

Log for crt\crtw32\dllstuff\dlllib:

10-17-94@17:49  BryanT3  addfile                    New NT build
10-17-94@17:49  BryanT3  addfile makefile v1        New NT build
10-17-94@17:49  BryanT3  addfile sources v1         New NT build

Log for crt\crtw32\dos:

10-17-94@17:53  BryanT3  delfile makefile v2        Not needed
10-17-94@17:54  BryanT3  rename  sources v2         sources.vc;Save it
10-17-94@17:54  BryanT3  addfile sources.nt v1      New NT build
10-17-94@17:56  BryanT3  addfile st v1              New NT build
10-17-94@17:56  BryanT3  addfile mt v1              New NT build
10-17-94@17:56  BryanT3  addfile dll v1             New NT build

Log for crt\crtw32\dos\dll:

10-17-94@17:56  BryanT3  addfile                    New NT build
10-17-94@17:56  BryanT3  addfile makefile v1        New NT build
10-17-94@17:56  BryanT3  addfile sources v1         New NT build

Log for crt\crtw32\dos\mt:

10-17-94@17:56  BryanT3  addfile                    New NT build
10-17-94@17:56  BryanT3  addfile makefile v1        New NT build
10-17-94@17:56  BryanT3  addfile sources v1         New NT build

Log for crt\crtw32\dos\st:

10-17-94@17:56  BryanT3  addfile                    New NT build
10-17-94@17:56  BryanT3  addfile makefile v1        New NT build
10-17-94@17:56  BryanT3  addfile sources v1         New NT build

Log for crt\crtw32\eh:

10-17-94@18:00  BryanT3  delfile makefile v2        Not needed
10-17-94@18:00  BryanT3  rename  sources v3         sources.vc;Save it
10-17-94@18:01  BryanT3  addfile sources.nt v1      New NT build
10-17-94@18:01  BryanT3  addfile dirs v1            New NT build
10-17-94@18:02  BryanT3  addfile st v1              New NT build
10-17-94@18:02  BryanT3  addfile mt v1              New NT build
10-17-94@18:02  BryanT3  addfile dll v1             New NT build
10-17-94@18:02  BryanT3  addfile dlllib v1          New NT build

Log for crt\crtw32\eh\dll:

10-17-94@18:02  BryanT3  addfile                    New NT build
10-17-94@18:02  BryanT3  addfile makefile v1        New NT build
10-17-94@18:02  BryanT3  addfile sources v1         New NT build

Log for crt\crtw32\eh\dlllib:

10-17-94@18:02  BryanT3  addfile                    New NT build
10-17-94@18:02  BryanT3  addfile makefile v1        New NT build
10-17-94@18:02  BryanT3  addfile sources v1         New NT build

Log for crt\crtw32\eh\mt:

10-17-94@18:02  BryanT3  addfile                    New NT build
10-17-94@18:02  BryanT3  addfile makefile v1        New NT build
10-17-94@18:02  BryanT3  addfile sources v1         New NT build

Log for crt\crtw32\eh\st:

10-17-94@18:02  BryanT3  addfile                    New NT build
10-17-94@18:02  BryanT3  addfile makefile v1        New NT build
10-17-94@18:02  BryanT3  addfile sources v1         New NT build

Log for crt\crtw32\exec:

10-17-94@18:04  BryanT3  delfile makefile v2        Not needed
10-17-94@18:04  BryanT3  rename  sources v2         sources.vc;Save it
10-17-94@18:05  BryanT3  addfile sources.nt v1      New NT build
10-17-94@18:05  BryanT3  addfile dirs v1            New NT build
10-17-94@18:05  BryanT3  addfile st v1              New NT build
10-17-94@18:05  BryanT3  addfile mt v1              New NT build
10-17-94@18:05  BryanT3  addfile dll v1             New NT build

Log for crt\crtw32\exec\dll:

10-17-94@18:05  BryanT3  addfile                    New NT build
10-17-94@18:05  BryanT3  addfile makefile v1        New NT build
10-17-94@18:05  BryanT3  addfile sources v1         New NT build

Log for crt\crtw32\exec\mt:

10-17-94@18:05  BryanT3  addfile                    New NT build
10-17-94@18:05  BryanT3  addfile makefile v1        New NT build
10-17-94@18:05  BryanT3  addfile sources v1         New NT build

Log for crt\crtw32\exec\st:

10-17-94@18:05  BryanT3  addfile                    New NT build
10-17-94@18:05  BryanT3  addfile makefile v1        New NT build
10-17-94@18:05  BryanT3  addfile sources v1         New NT build

Log for crt\crtw32\h:

10-17-94@17:23  BryanT3  in      tchar.h v4         Posix fix

Log for crt\crtw32\hack:

10-17-94@18:06  BryanT3  delfile makefile v2        Not needed
10-17-94@18:06  BryanT3  rename  sources v2         sources.vc;Save it
10-17-94@18:06  BryanT3  addfile sources.nt v1      New NT build
10-17-94@18:07  BryanT3  addfile dirs v1            New NT build
10-17-94@18:07  BryanT3  addfile nt v1              New NT build

Log for crt\crtw32\hack\nt:

10-17-94@18:07  BryanT3  addfile                    New NT build
10-17-94@18:07  BryanT3  addfile makefile v1        New NT build
10-17-94@18:07  BryanT3  addfile sources v1         New NT build

Log for crt\crtw32\heap:

10-17-94@18:08  BryanT3  delfile makefile v2        Not needed
10-17-94@18:08  BryanT3  rename  sources v2         sources.vc;Save it
10-17-94@18:08  BryanT3  addfile sources.nt v1      New NT build
10-17-94@18:08  BryanT3  addfile dirs v1            New NT build
10-17-94@18:09  BryanT3  addfile st v1              New NT build
10-17-94@18:09  BryanT3  addfile mt v1              New NT build
10-17-94@18:09  BryanT3  addfile dll v1             New NT build
10-17-94@18:09  BryanT3  addfile psx v1             New NT build

Log for crt\crtw32\heap\dll:

10-17-94@18:09  BryanT3  addfile                    New NT build
10-17-94@18:09  BryanT3  addfile makefile v1        New NT build
10-17-94@18:09  BryanT3  addfile sources v1         New NT build

Log for crt\crtw32\heap\mt:

10-17-94@18:09  BryanT3  addfile                    New NT build
10-17-94@18:09  BryanT3  addfile makefile v1        New NT build
10-17-94@18:09  BryanT3  addfile sources v1         New NT build

Log for crt\crtw32\heap\psx:

10-17-94@18:09  BryanT3  addfile                    New NT build
10-17-94@18:09  BryanT3  addfile makefile v1        New NT build
10-17-94@18:09  BryanT3  addfile sources v1         New NT build

Log for crt\crtw32\heap\st:

10-17-94@18:09  BryanT3  addfile                    New NT build
10-17-94@18:09  BryanT3  addfile makefile v1        New NT build
10-17-94@18:09  BryanT3  addfile sources v1         New NT build

Log for crt\crtw32\helper:

10-17-94@18:11  BryanT3  delfile makefile v2        Not needed
10-17-94@18:11  BryanT3  rename  sources v2         sources.vc;Save it
10-17-94@18:11  BryanT3  addfile sources.nt v1      New NT build
10-17-94@18:11  BryanT3  addfile dirs v1            New NT build
10-17-94@18:13  BryanT3  addfile st v1              New NT build
10-17-94@18:13  BryanT3  addfile mt v1              New NT build
10-17-94@18:13  BryanT3  addfile nt v1              New NT build
10-17-94@18:13  BryanT3  addfile dll v1             New NT build
10-17-94@18:13  BryanT3  addfile dlllib v1          New NT build
10-17-94@18:13  BryanT3  addfile psx v1             New NT build

Log for crt\crtw32\helper\dll:

10-17-94@18:13  BryanT3  addfile                    New NT build
10-17-94@18:13  BryanT3  addfile makefile v1        New NT build
10-17-94@18:13  BryanT3  addfile sources v1         New NT build

Log for crt\crtw32\helper\dlllib:

10-17-94@18:13  BryanT3  addfile                    New NT build
10-17-94@18:13  BryanT3  addfile makefile v1        New NT build
10-17-94@18:13  BryanT3  addfile sources v1         New NT build

Log for crt\crtw32\helper\mt:

10-17-94@18:13  BryanT3  addfile                    New NT build
10-17-94@18:13  BryanT3  addfile makefile v1        New NT build
10-17-94@18:13  BryanT3  addfile sources v1         New NT build

Log for crt\crtw32\helper\nt:

10-17-94@18:13  BryanT3  addfile                    New NT build
10-17-94@18:13  BryanT3  addfile makefile v1        New NT build
10-17-94@18:13  BryanT3  addfile sources v1         New NT build

Log for crt\crtw32\helper\psx:

10-17-94@18:13  BryanT3  addfile                    New NT build
10-17-94@18:13  BryanT3  addfile makefile v1        New NT build
10-17-94@18:13  BryanT3  addfile sources v1         New NT build

Log for crt\crtw32\helper\st:

10-17-94@18:13  BryanT3  addfile                    New NT build
10-17-94@18:13  BryanT3  addfile makefile v1        New NT build
10-17-94@18:13  BryanT3  addfile sources v1         New NT build

Log for crt\crtw32\iostream:

10-17-94@18:15  BryanT3  delfile makefile v2        Not needed
10-17-94@18:15  BryanT3  rename  sources v2         sources.vc;Save it
10-17-94@18:15  BryanT3  addfile sources.nt v1      New NT build
10-17-94@18:15  BryanT3  addfile dirs v1            New NT build
10-17-94@18:17  BryanT3  addfile st v1              New NT build
10-17-94@18:17  BryanT3  addfile mt v1              New NT build
10-17-94@18:17  BryanT3  addfile dll v1             New NT build

Log for crt\crtw32\iostream\dll:

10-17-94@18:17  BryanT3  addfile                    New NT build
10-17-94@18:17  BryanT3  addfile makefile v1        New NT build
10-17-94@18:17  BryanT3  addfile sources v1         New NT build

Log for crt\crtw32\iostream\mt:

10-17-94@18:17  BryanT3  addfile                    New NT build
10-17-94@18:17  BryanT3  addfile makefile v1        New NT build
10-17-94@18:17  BryanT3  addfile sources v1         New NT build

Log for crt\crtw32\iostream\st:

10-17-94@18:17  BryanT3  addfile                    New NT build
10-17-94@18:17  BryanT3  addfile makefile v1        New NT build
10-17-94@18:17  BryanT3  addfile sources v1         New NT build

Log for crt\crtw32\linkopts:

10-17-94@18:21  BryanT3  addfile makefile.inc v1    New NT build
10-17-94@18:22  BryanT3  in      sources v2         New NT build

Log for crt\crtw32\lowio:

10-17-94@18:25  BryanT3  delfile makefile v2        Not needed
10-17-94@18:25  BryanT3  rename  sources v2         sources.vc;Save it
10-17-94@18:25  BryanT3  addfile dirs v1            New NT build
10-17-94@18:25  BryanT3  in      sources.nt v2      New NT build
10-17-94@18:26  BryanT3  addfile st v1              New NT build
10-17-94@18:26  BryanT3  addfile mt v1              New NT build
10-17-94@18:26  BryanT3  addfile dll v1             New NT build
10-17-94@18:27  BryanT3  addfile dlllib v1          New NT build

Log for crt\crtw32\lowio\dll:

10-17-94@18:26  BryanT3  addfile                    New NT build
10-17-94@18:26  BryanT3  addfile makefile v1        New NT build
10-17-94@18:26  BryanT3  addfile sources v1         New NT build

Log for crt\crtw32\lowio\dlllib:

10-17-94@18:27  BryanT3  addfile                    New NT build
10-17-94@18:27  BryanT3  addfile makefile v1        New NT build
10-17-94@18:27  BryanT3  addfile sources v1         New NT build

Log for crt\crtw32\lowio\mt:

10-17-94@18:26  BryanT3  addfile                    New NT build
10-17-94@18:26  BryanT3  addfile makefile v1        New NT build
10-17-94@18:26  BryanT3  addfile sources v1         New NT build

Log for crt\crtw32\lowio\st:

10-17-94@18:26  BryanT3  addfile                    New NT build
10-17-94@18:26  BryanT3  addfile makefile v1        New NT build
10-17-94@18:26  BryanT3  addfile sources v1         New NT build

Log for crt\crtw32\mbstring:

10-17-94@18:27  BryanT3  delfile makefile v2        Not needed
10-17-94@18:28  BryanT3  rename  sources v2         sources.vc;Save it
10-17-94@18:29  BryanT3  addfile sources.nt v1      New NT build
10-17-94@18:29  BryanT3  addfile dirs v1            New NT build
10-17-94@18:33  BryanT3  addfile st v1              New NT build
10-17-94@18:33  BryanT3  addfile mt v1              New NT build
10-17-94@18:33  BryanT3  addfile dll v1             New NT build
10-17-94@18:33  BryanT3  addfile psx v1             New NT build

Log for crt\crtw32\mbstring\dll:

10-17-94@18:33  BryanT3  addfile                    New NT build
10-17-94@18:33  BryanT3  addfile makefile v1        New NT build
10-17-94@18:33  BryanT3  addfile sources v1         New NT build

Log for crt\crtw32\mbstring\mt:

10-17-94@18:33  BryanT3  addfile                    New NT build
10-17-94@18:33  BryanT3  addfile makefile v1        New NT build
10-17-94@18:33  BryanT3  addfile sources v1         New NT build

Log for crt\crtw32\mbstring\psx:

10-17-94@18:33  BryanT3  addfile                    New NT build
10-17-94@18:33  BryanT3  addfile makefile v1        New NT build
10-17-94@18:33  BryanT3  addfile sources v1         New NT build

Log for crt\crtw32\mbstring\st:

10-17-94@18:33  BryanT3  addfile                    New NT build
10-17-94@18:33  BryanT3  addfile makefile v1        New NT build
10-17-94@18:33  BryanT3  addfile sources v1         New NT build

Log for crt\crtw32\misc:

10-17-94@18:49  BryanT3  addfile sources.nt v1      New NT build
10-17-94@18:49  BryanT3  addfile dirs v1            New NT build
10-17-94@19:07  BryanT3  addfile st v1              New NT build
10-17-94@19:07  BryanT3  addfile mt v1              New NT build
10-17-94@19:07  BryanT3  addfile dll v1             New NT build
10-17-94@19:07  BryanT3  addfile nt v1              New NT build
10-17-94@19:07  BryanT3  addfile dlllib v1          New NT build
10-17-94@19:07  BryanT3  addfile psx v1             New NT build

Log for crt\crtw32\misc\dll:

10-17-94@19:07  BryanT3  addfile                    New NT build
10-17-94@19:07  BryanT3  addfile makefile v1        New NT build
10-17-94@19:07  BryanT3  addfile sources v1         New NT build

Log for crt\crtw32\misc\dlllib:

10-17-94@19:07  BryanT3  addfile                    New NT build
10-17-94@19:07  BryanT3  addfile makefile v1        New NT build
10-17-94@19:07  BryanT3  addfile sources v1         New NT build

Log for crt\crtw32\misc\mt:

10-17-94@19:07  BryanT3  addfile                    New NT build
10-17-94@19:07  BryanT3  addfile makefile v1        New NT build
10-17-94@19:07  BryanT3  addfile sources v1         New NT build

Log for crt\crtw32\misc\nt:

10-17-94@19:07  BryanT3  addfile                    New NT build
10-17-94@19:07  BryanT3  addfile makefile v1        New NT build
10-17-94@19:07  BryanT3  addfile sources v1         New NT build

Log for crt\crtw32\misc\psx:

10-17-94@19:07  BryanT3  addfile                    New NT build
10-17-94@19:07  BryanT3  addfile makefile v1        New NT build
10-17-94@19:07  BryanT3  addfile sources v1         New NT build

Log for crt\crtw32\misc\st:

10-17-94@19:07  BryanT3  addfile                    New NT build
10-17-94@19:07  BryanT3  addfile makefile v1        New NT build
10-17-94@19:07  BryanT3  addfile sources v1         New NT build

Log for crt\crtw32\small:

10-17-94@19:10  BryanT3  in      makefile.inc v2    Fix path

Log for crt\crtw32\startup:

10-17-94@19:12  BryanT3  delfile makefile v2        Not needed
10-17-94@19:12  BryanT3  rename  sources v2         sources.vc;Save it
10-17-94@19:12  BryanT3  addfile dirs v1            New NT build
10-17-94@19:12  BryanT3  addfile sources.nt v1      New NT build
10-17-94@19:14  BryanT3  addfile st v1              New NT build
10-17-94@19:15  BryanT3  addfile mt v1              New NT build
10-17-94@19:15  BryanT3  addfile dll v1             New NT build
10-17-94@19:15  BryanT3  addfile nt v1              New NT build
10-17-94@19:15  BryanT3  addfile dlllib v1          New NT build
10-17-94@19:15  BryanT3  addfile psx v1             New NT build
10-17-94@19:18  BryanT3  in      makefile.inc v2    New NT build
10-17-94@19:19  BryanT3  in      crt0dat.c v3       PPC changes

Log for crt\crtw32\startup\dll:

10-17-94@19:15  BryanT3  addfile                    New NT build
10-17-94@19:15  BryanT3  addfile makefile v1        New NT build
10-17-94@19:15  BryanT3  addfile makefile.inc v1    New NT build
10-17-94@19:15  BryanT3  addfile sources v1         New NT build

Log for crt\crtw32\startup\dlllib:

10-17-94@19:15  BryanT3  addfile                    New NT build
10-17-94@19:15  BryanT3  addfile makefile v1        New NT build
10-17-94@19:15  BryanT3  addfile makefile.inc v1    New NT build
10-17-94@19:15  BryanT3  addfile sources v1         New NT build

Log for crt\crtw32\startup\mt:

10-17-94@19:15  BryanT3  addfile                    New NT build
10-17-94@19:15  BryanT3  addfile makefile v1        New NT build
10-17-94@19:15  BryanT3  addfile makefile.inc v1    New NT build
10-17-94@19:15  BryanT3  addfile sources v1         New NT build

Log for crt\crtw32\startup\nt:

10-17-94@19:15  BryanT3  addfile                    New NT build
10-17-94@19:15  BryanT3  addfile makefile v1        New NT build
10-17-94@19:15  BryanT3  addfile makefile.inc v1    New NT build
10-17-94@19:15  BryanT3  addfile sources v1         New NT build

Log for crt\crtw32\startup\psx:

10-17-94@19:15  BryanT3  addfile                    New NT build
10-17-94@19:16  BryanT3  addfile makefile v1        New NT build
10-17-94@19:16  BryanT3  addfile makefile.inc v1    New NT build
10-17-94@19:16  BryanT3  addfile sources v1         New NT build

Log for crt\crtw32\startup\st:

10-17-94@19:14  BryanT3  addfile                    New NT build
10-17-94@19:14  BryanT3  addfile makefile v1        New NT build
10-17-94@19:14  BryanT3  addfile makefile.inc v1    New NT build
10-17-94@19:14  BryanT3  addfile sources v1         New NT build

Log for crt\crtw32\stdio:

10-17-94@17:26  BryanT3  rename  sources v2         sources.vc;Save it
10-17-94@17:26  BryanT3  addfile sources.nt v1      NT build
10-17-94@17:27  BryanT3  addfile dirs v1            New build
10-17-94@17:27  BryanT3  delfile makefile v2        Not needed
10-17-94@17:28  BryanT3  addfile st v1              New build
10-17-94@17:28  BryanT3  addfile mt v1              New build
10-17-94@17:28  BryanT3  addfile nt v1              New build
10-17-94@17:28  BryanT3  addfile dll v1             New build
10-17-94@17:28  BryanT3  addfile dlllib v1          New build
10-17-94@17:28  BryanT3  addfile psx v1             New build

Log for crt\crtw32\stdio\dll:

10-17-94@17:28  BryanT3  addfile                    New build
10-17-94@17:28  BryanT3  addfile makefile v1        New build
10-17-94@17:28  BryanT3  addfile makefile.inc v1    New build
10-17-94@17:28  BryanT3  addfile sources v1         New build

Log for crt\crtw32\stdio\dlllib:

10-17-94@17:28  BryanT3  addfile                    New build
10-17-94@17:28  BryanT3  addfile makefile v1        New build
10-17-94@17:28  BryanT3  addfile makefile.inc v1    New build
10-17-94@17:28  BryanT3  addfile sources v1         New build
10-17-94@17:35  BryanT3  in      sources v2         Add defines

Log for crt\crtw32\stdio\mt:

10-17-94@17:28  BryanT3  addfile                    New build
10-17-94@17:28  BryanT3  addfile makefile v1        New build
10-17-94@17:28  BryanT3  addfile makefile.inc v1    New build
10-17-94@17:28  BryanT3  addfile sources v1         New build

Log for crt\crtw32\stdio\nt:

10-17-94@17:28  BryanT3  addfile                    New build
10-17-94@17:28  BryanT3  addfile makefile v1        New build
10-17-94@17:28  BryanT3  addfile makefile.inc v1    New build
10-17-94@17:28  BryanT3  addfile sources v1         New build

Log for crt\crtw32\stdio\psx:

10-17-94@17:28  BryanT3  addfile                    New build
10-17-94@17:28  BryanT3  addfile makefile v1        New build
10-17-94@17:28  BryanT3  addfile makefile.inc v1    New build
10-17-94@17:28  BryanT3  addfile sources v1         New build
10-17-94@17:33  BryanT3  in      sources v2         Cleanup

Log for crt\crtw32\stdio\st:

10-17-94@17:28  BryanT3  addfile                    New build
10-17-94@17:28  BryanT3  addfile makefile v1        New build
10-17-94@17:28  BryanT3  addfile makefile.inc v1    New build
10-17-94@17:28  BryanT3  addfile sources v1         New build

Log for crt\crtw32\string:

10-17-94@19:20  BryanT3  delfile makefile v2        Not needed
10-17-94@19:20  BryanT3  rename  sources v2         sources.vc;Save it
10-17-94@19:21  BryanT3  addfile sources.nt v1      New NT build
10-17-94@19:21  BryanT3  addfile dirs v1            New NT build
10-17-94@19:22  BryanT3  addfile st v1              New NT build
10-17-94@19:22  BryanT3  addfile mt v1              New NT build
10-17-94@19:22  BryanT3  addfile dll v1             New NT build
10-17-94@19:22  BryanT3  addfile nt v1              New NT build
10-17-94@19:22  BryanT3  addfile psx v1             New NT build

Log for crt\crtw32\string\dll:

10-17-94@19:22  BryanT3  addfile                    New NT build
10-17-94@19:22  BryanT3  addfile makefile v1        New NT build
10-17-94@19:22  BryanT3  addfile makefile.inc v1    New NT build
10-17-94@19:22  BryanT3  addfile sources v1         New NT build

Log for crt\crtw32\string\mt:

10-17-94@19:22  BryanT3  addfile                    New NT build
10-17-94@19:22  BryanT3  addfile makefile v1        New NT build
10-17-94@19:22  BryanT3  addfile makefile.inc v1    New NT build
10-17-94@19:22  BryanT3  addfile sources v1         New NT build

Log for crt\crtw32\string\nt:

10-17-94@19:22  BryanT3  addfile                    New NT build
10-17-94@19:22  BryanT3  addfile makefile v1        New NT build
10-17-94@19:22  BryanT3  addfile makefile.inc v1    New NT build
10-17-94@19:22  BryanT3  addfile sources v1         New NT build

Log for crt\crtw32\string\psx:

10-17-94@19:22  BryanT3  addfile                    New NT build
10-17-94@19:22  BryanT3  addfile makefile v1        New NT build
10-17-94@19:22  BryanT3  addfile makefile.inc v1    New NT build
10-17-94@19:22  BryanT3  addfile sources v1         New NT build

Log for crt\crtw32\string\st:

10-17-94@19:22  BryanT3  addfile                    New NT build
10-17-94@19:22  BryanT3  addfile makefile v1        New NT build
10-17-94@19:22  BryanT3  addfile makefile.inc v1    New NT build
10-17-94@19:22  BryanT3  addfile sources v1         New NT build

Log for crt\crtw32\time:

10-17-94@19:26  BryanT3  delfile makefile v2        Not needed
10-17-94@19:26  BryanT3  rename  sources v2         sources.vc;Save it
10-17-94@19:28  BryanT3  addfile sources.nt v1      New NT build
10-17-94@19:28  BryanT3  addfile dirs v1            New NT build
10-17-94@19:28  BryanT3  addfile st v1              New NT build
10-17-94@19:28  BryanT3  addfile mt v1              New NT build
10-17-94@19:28  BryanT3  addfile dll v1             New NT build
10-17-94@19:28  BryanT3  addfile psx v1             New NT build

Log for crt\crtw32\time\dll:

10-17-94@19:28  BryanT3  addfile                    New NT build
10-17-94@19:28  BryanT3  addfile makefile v1        New NT build
10-17-94@19:28  BryanT3  addfile sources v1         New NT build

Log for crt\crtw32\time\mt:

10-17-94@19:28  BryanT3  addfile                    New NT build
10-17-94@19:28  BryanT3  addfile makefile v1        New NT build
10-17-94@19:28  BryanT3  addfile sources v1         New NT build

Log for crt\crtw32\time\psx:

10-17-94@19:28  BryanT3  addfile                    New NT build
10-17-94@19:28  BryanT3  addfile makefile v1        New NT build
10-17-94@19:28  BryanT3  addfile sources v1         New NT build

Log for crt\crtw32\time\st:

10-17-94@19:28  BryanT3  addfile                    New NT build
10-17-94@19:28  BryanT3  addfile makefile v1        New NT build
10-17-94@19:28  BryanT3  addfile sources v1         New NT build

Log for crt\crtw32\winheap:

10-17-94@19:30  BryanT3  delfile makefile v2        Not needed
10-17-94@19:30  BryanT3  rename  sources v3         sources.vc;Save it
10-17-94@19:30  BryanT3  addfile sources.nt v1      New NT build
10-17-94@19:30  BryanT3  addfile dirs v1            New NT build
10-17-94@19:31  BryanT3  addfile st v1              New NT build
10-17-94@19:31  BryanT3  addfile mt v1              New NT build
10-17-94@19:31  BryanT3  addfile dll v1             New NT build
10-17-94@19:31  BryanT3  addfile psx v1             New NT build

Log for crt\crtw32\winheap\dll:

10-17-94@19:31  BryanT3  addfile                    New NT build
10-17-94@19:31  BryanT3  addfile makefile v1        New NT build
10-17-94@19:31  BryanT3  addfile sources v1         New NT build

Log for crt\crtw32\winheap\mt:

10-17-94@19:31  BryanT3  addfile                    New NT build
10-17-94@19:31  BryanT3  addfile makefile v1        New NT build
10-17-94@19:31  BryanT3  addfile sources v1         New NT build

Log for crt\crtw32\winheap\psx:

10-17-94@19:31  BryanT3  addfile                    New NT build
10-17-94@19:31  BryanT3  addfile makefile v1        New NT build
10-17-94@19:31  BryanT3  addfile sources v1         New NT build

Log for crt\crtw32\winheap\st:

10-17-94@19:31  BryanT3  addfile                    New NT build
10-17-94@19:31  BryanT3  addfile makefile v1        New NT build
10-17-94@19:31  BryanT3  addfile sources v1         New NT build

Log for crt\fpw32:

10-17-94@19:35  BryanT3  in      fp32.nt v4         Don't use _NTSDK
10-17-94@19:36  BryanT3  rename  makefile v2        makefile.vc;Not needed

Log for crt\fpw32\conv:

10-17-94@19:38  BryanT3  delfile makefile v2        Not needed
10-17-94@19:38  BryanT3  rename  sources v2         sources.vc;Save it
10-17-94@19:39  BryanT3  addfile st v1              New NT build
10-17-94@19:39  BryanT3  addfile mt v1              New NT build
10-17-94@19:40  BryanT3  addfile dll v1             New NT build
10-17-94@19:40  BryanT3  addfile dirs v1            New NT build
10-17-94@19:40  BryanT3  addfile sources.nt v1      New NT build

Log for crt\fpw32\conv\dll:

10-17-94@19:40  BryanT3  addfile                    New NT build
10-17-94@19:40  BryanT3  addfile makefile v1        New NT build
10-17-94@19:40  BryanT3  addfile sources v1         New NT build

Log for crt\fpw32\conv\mt:

10-17-94@19:39  BryanT3  addfile                    New NT build
10-17-94@19:39  BryanT3  addfile makefile v1        New NT build
10-17-94@19:39  BryanT3  addfile sources v1         New NT build

Log for crt\fpw32\conv\st:

10-17-94@19:39  BryanT3  addfile                    New NT build
10-17-94@19:39  BryanT3  addfile makefile v1        New NT build
10-17-94@19:39  BryanT3  addfile sources v1         New NT build

Log for crt\fpw32\tran:

10-17-94@19:42  BryanT3  in      sincosh.c v2       Alpha/PPC fix
10-17-94@19:42  BryanT3  addfile dirs v1            New NT build
10-17-94@19:42  BryanT3  addfile sources.nt v1      New NT build
10-17-94@19:42  BryanT3  delfile makefile v2        Not needed
10-17-94@19:43  BryanT3  rename  sources v3         sources.vc;Save it
10-17-94@19:43  BryanT3  addfile st v1              New NT build
10-17-94@19:43  BryanT3  addfile mt v1              New NT build
10-17-94@19:43  BryanT3  addfile dll v1             New NT build
10-17-94@19:43  BryanT3  addfile nt v1              New NT build

Log for crt\fpw32\tran\dll:

10-17-94@19:43  BryanT3  addfile                    New NT build
10-17-94@19:43  BryanT3  addfile makefile v1        New NT build
10-17-94@19:43  BryanT3  addfile sources v1         New NT build

Log for crt\fpw32\tran\mt:

10-17-94@19:43  BryanT3  addfile                    New NT build
10-17-94@19:43  BryanT3  addfile makefile v1        New NT build
10-17-94@19:43  BryanT3  addfile sources v1         New NT build

Log for crt\fpw32\tran\nt:

10-17-94@19:43  BryanT3  addfile                    New NT build
10-17-94@19:43  BryanT3  addfile makefile v1        New NT build
10-17-94@19:43  BryanT3  addfile sources v1         New NT build

Log for crt\fpw32\tran\st:

10-17-94@19:43  BryanT3  addfile                    New NT build
10-17-94@19:43  BryanT3  addfile makefile v1        New NT build
10-17-94@19:43  BryanT3  addfile sources v1         New NT build

Log for crt\libw32:

10-17-94@19:46  BryanT3  addfile dirs v1            New NT build
10-17-94@19:46  BryanT3  rename  makefile v7        makefile.vc;Not needed
10-17-94@19:47  BryanT3  rename  makefile.vc v8     makefile;oops
10-17-94@19:48  BryanT3  in      makefile v9        New NT build

Log for crt\libw32\lib:

10-17-94@19:49  BryanT3  addfile dirs v1            New NT build
10-17-94@19:49  BryanT3  addfile sources.nt v1      New NT build
10-17-94@19:50  BryanT3  addfile st v1              New NT build
10-17-94@19:51  BryanT3  addfile mt v1              New NT build
10-17-94@19:51  BryanT3  addfile dll v1             New NT build
10-17-94@19:51  BryanT3  addfile nt v1              New NT build
10-17-94@19:51  BryanT3  addfile dlllib v1          New NT build
10-17-94@19:51  BryanT3  addfile posix v1           New NT build

Log for crt\libw32\lib\dll:

10-17-94@19:51  BryanT3  addfile                    New NT build
10-17-94@19:51  BryanT3  addfile makefile v1        New NT build
10-17-94@19:51  BryanT3  addfile makefile.inc v1    New NT build
10-17-94@19:51  BryanT3  addfile sources v1         New NT build
10-17-94@19:52  BryanT3  addfile ntcrt35.src v1     New NT build

Log for crt\libw32\lib\dlllib:

10-17-94@19:51  BryanT3  addfile                    New NT build
10-17-94@19:51  BryanT3  addfile makefile v1        New NT build
10-17-94@19:51  BryanT3  addfile makefile.inc v1    New NT build
10-17-94@19:51  BryanT3  addfile sources v1         New NT build

Log for crt\libw32\lib\mt:

10-17-94@19:51  BryanT3  addfile                    New NT build
10-17-94@19:51  BryanT3  addfile makefile v1        New NT build
10-17-94@19:51  BryanT3  addfile makefile.inc v1    New NT build
10-17-94@19:51  BryanT3  addfile sources v1         New NT build

Log for crt\libw32\lib\nt:

10-17-94@19:51  BryanT3  addfile                    New NT build
10-17-94@19:51  BryanT3  addfile makefile v1        New NT build
10-17-94@19:51  BryanT3  addfile makefile.inc v1    New NT build
10-17-94@19:51  BryanT3  addfile sources v1         New NT build

Log for crt\libw32\lib\posix:

10-17-94@19:51  BryanT3  addfile                    New NT build
10-17-94@19:51  BryanT3  addfile makefile v1        New NT build
10-17-94@19:51  BryanT3  addfile makefile.inc v1    New NT build
10-17-94@19:51  BryanT3  addfile sources v1         New NT build

Log for crt\libw32\lib\st:

10-17-94@19:50  BryanT3  addfile                    New NT build
10-17-94@19:50  BryanT3  addfile makefile v1        New NT build
10-17-94@19:50  BryanT3  addfile makefile.inc v1    New NT build
10-17-94@19:50  BryanT3  addfile sources v1         New NT build

---------------------------------------------------------------

Mon 17-Oct-94    (BryanT)

crtw32\stdio\_filbuf.c
crtw32\stdio\_flsbuf.c
crtw32\h\tchar.h
        POSIX fixes (move wchar.h include to non-posix section), define
        _txxx macros for POSIX correctly

-----------------------------------------------------------------

Fri 14-Oct-94    (JamesMa)

eh/frame.cxx - AdjustPointer() now adds vdisp to result (Olympus bug 1620).

---------------------------------------------------------------

Fri 14-Oct-94    (BryanT)

crtw32\startup\crt0.c - try/except -> __try/__except for POSIX

---------------------------------------------------------------

Thu 13-Oct-94    (BryanT)

crtw32\tools\win32\relinc.if - Add _M_PPC to strip list.

---------------------------------------------------------------

Thu 13-Oct-94    (BryanT)

crtw32\time\tzset.c - SteveWo fix.  Check for NULL before calling free.

---------------------------------------------------------------

Mon 10-Oct-94    (BryanT)

crtw32\eh\mips\ehcrt.mak - change link32 reference to link

---------------------------------------------------------------

Mon 10-Oct-94    (ChrisWei)

crtw32\eh\ehvecctr.cxx, ehveccvb.cxx, ehvecdtr.cxx
        Fix handling of EH/SEH interaction. As per ANSI, one EH during
        vector ctor or dtor, then another causes terminate(). Now two SEH
        will abort vector 'unwind', but stack unwind continues.

---------------------------------------------------------------

Mon 10-Oct-94    (BryanT)

crtw32\h\cruntime.h, heap.h, trnsctrl.h, varargs.h -
        Merge in changes from John Morgan to warn about unknown machine
        type (for future new platforms).

---------------------------------------------------------------

Fri 07-Oct-94    (BryanT)

fpw32\conf\tenpow.c
fpw32\include\cv.h
fpw32\include\trans.h
fpw32\tran\pow.c
        PPC merge.  Note: someone who knows the Fp code should look
        at the change to pow.c and determine if the PPC folks fixed
        a legitimate bug or not.

---------------------------------------------------------------

Fri 07-Oct-94    (SteveSa)

makefile, makefile.sub -
        Change the way that the target libraries depend on the output
        subdirectories.  Otherwise the libs were re-built every time,
        even when no objects or component libs had changed.

        Also condensed $(CRT_RELDIR)\$(TARGET_CPU) to just $(RELDIR_CPU)
        and added $(RELDIR_CPU_LEGO) and $(RELDIR_CPU_DBG) for the debug
        and lego subdirectories of $(CRT_RELDIR)\$(TARGET_CPU)\.
        This greatly improves the legibility of the makefile.

---------------------------------------------------------------

Fri 07-Oct-94    (BryanT)

crtw32\misc\ppc
crtw32\startup\ppc
crtw32\string\ppc
fpw32\tran\ppc
        Add latest code from PPC codebase.

fpw32\fp32.nt
crtw32\crt32.nt
        Cleanup for new NT build.

crtw32\h\winheap.h - Add _nh_malloc prototype.
crtw32\h\malloc.h - Define _heapinfo struct for NTSDK build
crtw32\h\cruntime.h excpt.h float.h fltintrn.h setjmp.h stdarg.h varargs.h
        Add PPC support.

---------------------------------------------------------------

Fri 07-Oct-94    (BryanT)

crtw32\eh\mips\tmphack.s - Remove optimization override so command line
        defaults are honored (and not warned about).

crtw32\misc\alpha\fastdiv.s - Fix typo found by RichardS using the new
        Alpha assembler.

crtw32\small\mips\huge.s - Fix path to fp\tran\mips\huge.s (VC Makefile
        needs to be modified to give the root of crt project as an
        include path for this to work with both builds)

crtw32\stdio\output.c - Add _M_PPC test.

crtw32\stdio\makefile.inc - localize directory differences

crtw32\string\memset.c, memmove.c, memcpy.c, strset.c
        Add PPC support.  Also, make add a function pragma for memmove
        so the Alpha version can be built with /Oi

crtw32\string\makefile.inc - localize directory differences

crtw32\winheap\heapchk.c, heapmin.c, heapwalk.c
        Change os2dll.h include to mtdll.h

crtw32\winheap\malloc.c - Fix call to _nh_malloc

crtw32\winheap\_newmode.c - Add definition for _newmode.

fpw32\tran\fpexcept.c - Must include nt.h for _NTSUBSET_ builds.
        Add PPC support.

fpw32\tran\tanh.c - Define tanh as a function so Alpha version can be
        built with /Oi.

fpw32\tran\alpha\hypots.s - Fix type found with new Alpha assembler.

---------------------------------------------------------------

Fri 07-Oct-94    (BryanT)

crtw32\mbstring\*.c - Fix POSIX build by including mtdll.h if _POSIX_ defined.
        W/o this, _MB_CP_LOCK is undefined

---------------------------------------------------------------

Thu 06-Oct-94    (SteveSa)

crtw32/startup/i386/atlssup.asm - Add standard file header comment

-----------------------------------------------------------------

Wed 05-Oct-94   (SteveSa)

makefile, makefile.sub,
crtw32\{eh,helper\lsources,linkopts,mbstring,misc,small,string}\lsources,
fpw32\{conv,tran}\lsources
        Add MIPS (and partial Alpha) support to the NMake build.

---------------------------------------------------------------

Tue 04-Oct-94   (SteveSa)

crtw32\misc\i386\*.asm
        Add IFSTRIP directive comments to remove support for MASM 5.Xi
        (in the form of if directives that evaluate "@Version LT 600")

---------------------------------------------------------------

Tue 04-Oct-94   (ChrisWei)

crtw32\time\timeset.c
crtw32\dllstuff\crtlib.c
        Remove last remnants of _KANJI.

---------------------------------------------------------------

Thu 29-Sep-94   (SteveSa)

makefile -
        Added pseudo-target "depend" which generates dependencies in all of
        the crtw32/*/ and fpw32/*/ subdirectories.  A file named "depend.def"
        is created in all of those subdirectories.  An up-to-date version of
        MKDEP.EXE must be in the path, and the nmake command line must set
        the value ENV_INC to be an -I directive that points to the Win32
        include files.  For example, if MSVC++ 2.0 is installed on E:\MSVC20,
        dependencies would be built by:

                nmake depend ENV_INC=-Ie:/msvc20/include

        Various warning messages will be created because there are not
        *.c, *.cxx, and *.asm files in all subdirectories and their i386
        subdirectories.

---------------------------------------------------------------

Thu 29-Sep-94   (GregF)

crtw32\eh\throw.cxx
        Made (__)pMyUnhandledExceptionFilter global. As a static, it was a
        ripe candidate for deletion by the optimizer (and the Alpha compiler
        did, in fact, delete it).

---------------------------------------------------------------

Tue 27-Sep-94   (ChrisWei)

crtw32\misc\nlsdata1.c, crtw32\h\nlsint.h
        Declare __decimal_point as a char [], not a char *, so that even with
        compiler string pooling (-Gf), the decimal point string (".") will not
        be overwrittten by some other code with a literal string ".".

---------------------------------------------------------------

Tue 27-Sep-94   (SteveSa)

makefile, makefile.sub, mk.bat
crtw32/*/lsources
fpw32/{conv,tran}/lsources
        * Common Assembler flags (-c -nologo -Cx -Zm etc.) are passed in the
          ML environment variable to give short command lines.
        * Removed numerous bogus NT-related assembler defines
        * Fixed so that -D_MT is NOT passed to single thread asm files
        * Added -DQUIET -D?QUIET to ML switches to suppress messages from
          <cruntime.inc> and <cmacros.inc> (respectively).
        * LSOURCES in the CRTW32/* subdirectories no longer set C_INCLUDES
          or A_INCLUDES, but rather rely on the default values set in
          MAKEFILE.SUB.  LSOURCES in the two FPW32/* subdirectories set
          C_INCLUDES and A_INCLUDES to override the default settings.
        * Change -Fo directive for ML to match that for CL (that is, minimal).
        * Add -nologo to all occurrences of LINK
        * Change last few occurrences of LIB to LINK -LIB
        * Invoke nmake with "-i" option unless overridden using IFLAG=

---------------------------------------------------------------

Sat 24-Sep-94   (SteveSa)

makefile, makefile.sub
crtw32/*/lsources
fpw32/{conv,tran}/lsources
        * The common C compiler flags (-c -nologo -Zel -Zp8 -W3 -Gd -G4 -Gs
          -DWIN32 -D_WIN32_ -D_MBCS -D_MB_MAP_DIRECT) which are ALWAYS set
          for all models and targes are now passed in the "CL" environment
          variable.  This shortens the command line length in makefile.sub.
        * Pass -I../h for all crtw32 subdirectories and -I../../crtwin32/h
          -I../include for fpw32 subdirectories.  Before both crtwin32/h
          and fpwin32/include (and fpwin32/inc/i386) were passed to all.
        * Changed /c /Fo... to -c -Fo... etc.
        * Pass -i from the top level NMake to the 2nd level NMAKE for
          more complete builds in the presence of some errors.
        * Change the pseudo-target for release libs & objects from "all" to
          "release".  Pseudo-target "all" now means "release" and "debug".
        * Change from -G4 (optimize for 486) to -GB (blended for 486/Pentium)
        * Remove some redundant leading ".\" strings from build rules.
        * Collapse -Zel -Zp8 to -Zelp8 and -Gd -GB -Gs to -GdBs

---------------------------------------------------------------

Thu 21-Sep-94   (GregF)

crtw32\winheap\heapchk.c, heapmin.c, heapwalk.c (new)
       winheap\calloc.c, handler.cxx, lsources, malloc.c, new.cxx, realloc.c,
               sources
        Picked up the latest from \\orville\razzle\src\crt32\winheap.c and
        merged in changes SteveSa made to the new handler support. Note, this
        subdirectory is NOT currently built for our retail libs.

---------------------------------------------------------------

Thu 21-Sep-94   (SteveSa)

crtw32/dllstuff/crtlib.c
        Fixed (_)DLL_FOR_WIN32S ifdef of local variable to be ifdef _M_IX86
        since it is only used under WIN32S (which is X86-only) and _M_IX86.
        Also changed GetModuleHandle to GetModuleHandleA (2 places).

---------------------------------------------------------------

Thu 21-Sep-94   (GregF)

crtw32\dllstuff\crtlib.c
       heap\heapinit.c
       misc\aw_cmp.c, aw_com.c, aw_env.c, aw_loc.c, aw_map.c, aw_str.c
       startup\dllcrt0.c

        Replaced GetModuleHandle("kernel32.dll") with
        GetModuleHandleA("kernel32.dll").

---------------------------------------------------------------

Wed 21-Sep-94   (SteveSa)

crtw32/eh/frame.cxx ehvecctr.cxx ehveccvb.cxx ehvecdtr.cxx hooks.cxx
crtw32/eh/throw.cxx unhandld.cxx user.cxx validate.cxx -
        Add standard file header comments, add ifstrip direct comments
        on lines with #if directives that compare symbols to constants.

crtw32/dllstuff/crtdll.c crtexe.c dll_argv.c dllargv.c wildcard.c cinitexe.c
        Move #ifdefs to after the main file header comment (for src release)

crtw32/dllstuff/crtlib.c crtw32/h/heap.h,win32s.h crtw32/heap/handler.cxx
        Changed misspelling _DLL_FOR_WIN32S to correct DLL_FOR_WIN32S

-----------------------------------------------------------------

Tue 20-Sep-94   (SteveSa)

makefile, makefile.sub - added support for DEBUG targets (xst, xmt, etc.)

-----------------------------------------------------------------

Thu 15-Sep-94   (SteveSa)

crtw32\dllstuff\crtlib.c, crtw32\startup\dllcrt0.c -
        Move #ifdef directive(s) to after file header comment
        Clean up commments that confuse the striphdr utility.

-----------------------------------------------------------------

Wed 14-Sep-94   (SteveSa)

crtw32\mbstring\mbscspn.c, mbsspn.c -
        Changed #include directives inside comments to *ifdef and so on.
        Otherwise the ifstripper for the source release runs into trouble.

crtw32\mbstring\ismbbyte.c -
        remove redundant parentheses in #ifdef; add ifstrip directive comment

-----------------------------------------------------------------

Mon 12-Sep-94   (GregF)

crtw32\buildcrt.cmd, makefile
       eh\frame.cxx, throw.cxx, sources
       eh\alpha\bridge.h, bridge.s, ehunwind.c, ehunwind.h, trnsctrl.cxx,
                xcptmisc.h, xcptmisc.s
       h\ehdata.h, ehstate.h, trnsctrl.h

fpw32\sources

libw32\makefile

        Merged in changes from DEC (via John Hatch) for the Alpha.

---------------------------------------------------------------

Thu 08-Sep-94   (GregF)

libw32\makefile

crtw32\dllstuff\crtexe.c, crtlib.c
       h\internal.h, stdlib.h, win32s.h
       misc\assert.c, errmode.c, lsources, sources
       startup\crt0.c, crt0msg.c, dllcrt0.c

        Package of changes to way the error message output works. Affects the
        behavior of _assert() and _amsg_exit(). Behavior is now determined
        by two internal global variables, __error_mode and __app_type. The
        former (__error_mode) is modifiable by the user via the new function
        _set_error_mode().

        New behavior: For console exes, error output is written to the C
        stream stderr for assertions, and to the standard error handle for
        RTEs. For GUI exes, error output is displayed using the MessageBox
        API. For user dlls, we try to determine if the host OS is either
        Win32s (hence everthing is GUI) or Phar Lap TNT (hence everything is
        console) and direct error output approriately. The default, in the
        absence of any knowledge about the client app, is to use MessageBox.

---------------------------------------------------------------

Tue 06-Sep-94   (ChrisWei)

Massive #define cleanup - removed all references to:

_INTL - all builds are now _INTL
_CRUISER - who? what? :-)
MTHREAD - replaced by _MT
_MBCS_OS - _MBCS implies _MBCS_OS, no more hard-wired MB
_CRTHEAP - not being used at all
I386 (except in asm files), M_I386, _X86_ - all use _M_IX86

Here's the changed files:

Status for \\D:G2000N2\NT\PRIVATE\CRT, owner = CHRISWEI4:
Subdirectory \, version 1.00, robust:

file      local-ver  ver  status   base

log.txt          23   23  out
makefile.sub      2    2  out

Subdirectory \crtw32, version 1.00, robust:

file      local-ver  ver  status   base

buildcrt.cmd      1    1  out
buildcrt.nt       1    1  out
crt32.def         1    1  out
crt32.nt          1    1  out

Subdirectory \crtw32\convert, version 1.00, robust:

file      local-ver  ver  status   base

atof.c            1    1  out
fcvt.c            4    4  out
gcvt.c            1    1  out
strtod.c          1    1  out
wcstod.c          1    1  out

Subdirectory \crtw32\dllstuff, version 1.00, robust:

file      local-ver  ver  status   base

crtlib.c          2    2  out

Subdirectory \crtw32\dllstuff\i386, version 1.00, robust:

file      local-ver  ver  status   base

cinitexe.mak      1    1  out

Subdirectory \crtw32\eh\mips, version 1.00, robust:

file      local-ver  ver  status   base

ehcrt.mak         1    1  out

Subdirectory \crtw32\h, version 1.00, robust:

file      local-ver  ver  status   base

cruntime.inc      1    1  out
heap.h            4    4  out
internal.h        2    2  out

Subdirectory \crtw32\heap, version 1.00, robust:

file      local-ver  ver  status   base

heapdump.c        1    1  out
msize.c           1    1  out

Subdirectory \crtw32\iostream, version 1.00, robust:

file      local-ver  ver  status   base

ios.cxx           1    1  out
mtlock.c          2    2  out
streamb.cxx       1    1  out

Subdirectory \crtw32\lowio, version 1.00, robust:

file      local-ver  ver  status   base

chsize.c          2    2  out
close.c           1    1  out
dup2.c            2    2  out
getch.c           1    1  out
lseek.c           3    3  out
osfinfo.c         1    1  out
putch.c           2    2  out
read.c            3    3  out
setmode.c         1    1  out
write.c           2    2  out

Subdirectory \crtw32\mbstring\i386, version 1.00, robust:

file      local-ver  ver  status   base

mbcsinit.os2      1    1  out

Subdirectory \crtw32\misc, version 1.00, robust:

file      local-ver  ver  status   base

_strerr.c         2    2  out
mtest.c           1    1  out
putenv.c          1    1  out
rand.c            2    2  out
strerror.c        2    2  out
winsig.c          1    1  out
winxfltr.c        1    1  out

Subdirectory \crtw32\startup, version 1.00, robust:

file      local-ver  ver  status   base

crt0.c            3    3  out
dllcrt0.c         1    1  out

Subdirectory \crtw32\startup\i386, version 1.00, robust:

file      local-ver  ver  status   base

chkstk.asm        1    1  out
crt0init.mak      1    1  out

Subdirectory \crtw32\stdio, version 1.00, robust:

file      local-ver  ver  status   base

_freebuf.c        2    2  out
clearerr.c        1    1  out
fclose.c          2    2  out
fdopen.c          1    1  out
fgetc.c           1    1  out
fgets.c           1    1  out
fgetwc.c          3    3  out
fprintf.c         1    1  out
fputc.c           1    1  out
fputs.c           1    1  out
fputws.c          1    1  out
fscanf.c          1    1  out
ftell.c           1    1  out
fwprintf.c        1    1  out
fwscanf.c         1    1  out
gets.c            1    1  out
getw.c            1    1  out
printf.c          1    1  out
puts.c            1    1  out
putw.c            1    1  out
scanf.c           1    1  out
stream.c          1    1  out
ungetc.c          1    1  out
vfprintf.c        1    1  out
vfwprint.c        1    1  out
vprintf.c         1    1  out
vwprintf.c        1    1  out
wprintf.c         1    1  out
wscanf.c          1    1  out

Subdirectory \crtw32\string, version 1.00, robust:

file      local-ver  ver  status   base

wcstok.c          1    1  out

Subdirectory \crtw32\time, version 1.00, robust:

file      local-ver  ver  status   base

asctime.c         1    1  out
gmtime.c          1    1  out

Subdirectory \crtw32\tools\win32, version 1.00, robust:

file      local-ver  ver  status   base

relinc.if         1    1  out
relinc.sed        2    2  out

Subdirectory \crtw32\winheap, version 1.00, robust:

file      local-ver  ver  status   base

handler.cxx       1    1  out

Subdirectory \fpw32, version 1.00, robust:

file      local-ver  ver  status   base

def.mak           1    1  out
fp32.def          1    1  out
fp32.nt           1    1  out

Subdirectory \fpw32\conv, version 1.00, robust:

file      local-ver  ver  status   base

cfin.c            1    1  out
cfout.c           1    1  out
cvt.c             1    1  out
strgtold.c        1    1  out

Subdirectory \fpw32\inc\i386, version 1.00, robust:

file      local-ver  ver  status   base

cruntime.inc      1    1  out
elem87.inc        1    1  out
os2dll.inc        1    1  out
os2supp.inc       1    1  out

Subdirectory \fpw32\tran\i386, version 1.00, robust:

file      local-ver  ver  status   base

87cdisp.asm       1    1  out
87disp.asm        1    1  out
87tran.asm        1    1  out

Subdirectory \libw32, version 1.00, robust:

file      local-ver  ver  status   base

buildall.cmd      1    1  out
makefile.nt       1    1  out

Subdirectory \libw32\tools\source, version 1.00, robust:

file      local-ver  ver  status   base

i386mips.c        1    1  out

---------------------------------------------------------------

Tue 06-Sep-94   (ChrisWei)

crtw32\convert\mbstowcs.c, wcstombs.c - bug fix #15300 and optimize.
crtw32\stdio\fgetwc.c, fputwc.c, ungetwc.c - Fix for "C" locale, call
        mbtowc() or wctomb().
crtw32\h\tchar.h - add __targv.
crtw32\mbstring\mbsupr.c, mbslwr.c - fix for double-width latin chars
crtw32\mbstring\ismbalnm.c - fix for double-width digits

---------------------------------------------------------------

Mon 05-Sep-94   (SteveSa)

fpw32\tran\fpexcept.c, fpw32\tran\i386\frnd.c -
        Change #ifdef i386 to #ifdef _M_IX86

crtw32\stdio\input.c -
        Remove #include of obsolete 16-bit header file "sizeptr.h"

crtw32\misc\getpath.c,
crtw32\stdio\_freebuf.c, output.c,
crtw32\stdio\sprintf.c, swprintf.c, vsprintf.c, vswprint.c -
        Changed #include directives inside comments to *ifdef and so on.
        Otherwise the ifstripper for the source release runs into trouble.

-----------------------------------------------------------------

Mon 05-Sep-94   (SteveSa)

crtw32\tools\win32\relinc.sed - remove comments of the form /*IFSTRIP=IGN*/

libw32\include\assert.h, conio.h, ctype.h, direct.h, dos.h, eh.h, errno.h,
   excpt.h, float.h, fpieee.h, io.h, locale.h, malloc.h, math.h,
   mbctype.h, mbstring.h, memory.h, new.h, process.h, search.h, setjmp.h,
   signal.h, stddef.h, stdio.h, stdlib.h, string.h, time.h, wchar.h,
   sys\stat.h, sys\timeb.h, sys\utime.h - updated to reflect changes of
        Fri 2 Sep 94, which just removed some redundant parentheses.

-----------------------------------------------------------------

Fri 02-Sep-94   (SteveSa)

All the following changes are in crtw32\:

heap\heapchk.c - clean-up for cleansing (remove obnoxious comment)
startup\crt0.c, wcrt0.c - edit (improve) file header comment
startup\crt0dat.c - clean up comments (remove references to OS/2, etc.)
startup\tidtable.c - remove obsolete var. "end", clean-up for source cleansin
string\strspn.c - fix comment (no final */); clean-up for cleansing
string\wcsxfrm.c - fix misplaced * in file header comment

convert\isctype.c, iswctype.c,
h\assert.h, conio.h ctype.h, direct.h, dos.h, eh.h, errno.h, excpt.h,
  float.h, fltintrn.h, fpieee.h, heap.h, internal.h, io.h, limits.h, locale.h,
  malloc.h, math.h, mbctype.h, mbstring.h, memory.h, mtdll.h, new.h, process.h,
  search.h, setjmp.h, signal.h, stddef.h, stdio.h, stdlib.h, string.h, time.h,
  wchar.h, sys\stat.h, sys\timeb.h, sys\utime.h,
lowio\lseek.c,
misc\inithelp.c, rotl.c, rotr.c, setlocal.c,
stdio\input.c, output.c
        - add comments for source cleansing

dllstuff\crtexew.c, wcrtexew.c,
h\ehhooks.h, ehassert.h,
startup\wincrt0.c, wwincrt0.c,
string\strcspn.c, strpbrk.c
        - add standard file header comment

h\ehdata.h, ehstate.h, trnsctrl.h,
        - add standard file header comment, add comments for source cleansing

misc\charmax.c,
startup\crt0init.c, mlock.c, thread.c, threadex.c
        - clean-up for cleansing (moved #ifdef)

-----------------------------------------------------------------

Thu 01-Sep-94   (SteveSa)

crtw32\startup\tlssup.c
fpw32\tran\fpexcept.c
fpw32\tran\i386\filter.c
fpw32\tran\i386\ieee87.c
        Changed #include of "<nt.h>" to "<windows.h>".
        Also moved #ifdef in tlssup.c to after main file comment.
        This latter cosmetic change was necessary for ifstrip-ing.

-----------------------------------------------------------------

Wed 24-Aug-94   (SteveSa)

crtw32\heap\heapinit.c
        Changed the heap initialization code to treat Win32s the same as
        Win32.  In VCNT 1.1 and VC 2.0, Win32s was considered a low memory
        situation because early versions of Win32s did not support reserved
        but uncommitted memory.  Win32s now supports uncommitted memory.
        The test has been changed to recognize PharLap TNT under Windows 3.X
        and continues to use small heap regions in that environment.

-----------------------------------------------------------------

Mon 22-Aug-94   (GregF)

crtw32\misc\onexit.c
        Fixed the test for the size of the onexit table so that it doesn't
        implicitly assume a heap granularity >= sizeof( function pointer
        type). This assumption prevented some user or 3rd party supplied heap
        managers from working with our runtime library. More specifically,
        it broke MicroQuill's SmartHeap.

-----------------------------------------------------------------

Fri 19-Aug-94   (GregF)

crtw32\stdio\_file.c, fflush.c
        Moved stdio term. code from fflush.c to _file.c. Also, added a stdio
        initializer (to _file.c). Currently, it's only job is to reset the
        _file field of _iob[0], _iob[1] and _iob[2] to -1, when the values
        in _osfhnd[0], _osfhnd[1] and _osfhnd[2] are invalid (0 or -1). This
        was Orca #132.

-----------------------------------------------------------------

Thu 18-Aug-94   (GregF)

crtw32\dos\getcwd.c
        Per Richard Shupak's suggestion, check GetDriveType return against
        specific failure codes (if not equal, assume success).

-----------------------------------------------------------------

Tue 16-Aug-94   (GregF)

crtw32\dos\getcwd.c
        Changed _validdrive() to use GetDriveType API. This was Orca bug
        137, a suggestion from the infamous Richard Shupak.

-----------------------------------------------------------------

Tue 16-Aug-94   (GregF)

crtw32\lowio\read.c
        Changed so that the caller's buffer is not touched when the ReadFile
        read 0 bytes. Previously, in text mode, the first byte of the
        caller's was always checked to determine if it was a LF. This was
        Orca bug #134.

-----------------------------------------------------------------

Tue 16-Aug-94   (GregF)

crtw32\h\fstream.h, iomanip.h, ios.h, iostream.h, istream.h, ostream.h,
        stdiostr.h, streamb.h, strstrea.h, tchar.h
libw32\include\fstream.h, iomanip.h, ios.h, iostream.h, istream.h, ostream.h,
        stdiostr.h, streamb.h, strstrea.h, tchar.h

        Changed pragma to disable warning 4514 instead of 4505. This was
        Orca bug #95.

-----------------------------------------------------------------

Wed 09-Aug-94   (GregF)

crtw32\tools\win32\relinc.cmd
        Fixed to work with new project.

libw32\include\math.h
        Removed _CRTIMP from _matherr prototype (part of change below).

-----------------------------------------------------------------

Tue 09-Aug-94   (GregF)

crtw32\makefile
crtw32\dllstuff\crtexe.c, lsources, merr.c (new), sources
crtw32\h\matherr.h, win32s.h
fpw32\tran\matherr.c
libw32\makefile
libw32\lib\alpha\msvcrt20.def
libw32\lib\i386\msvcrt20.def
libw32\lib\i386\win32s\msvcrt20.def
libw32\lib\mips\msvcrt20.def
    Package of changes to support user-supplied _matherr routines for clients
    of msvcrt*.dll. Only client exe-s are support, not other dlls.

-----------------------------------------------------------------

Fri 05-Aug-94   (JamesMa)

crtw32\convert\_fptostr.c
        Backed off ChrisWei's earlier fix for _ecvt() problem (see Dolphin 15092).
crtw32\convert\fcvt.c
        Surgical fix (aka 'Band-Aid') for _ecvt problem (Dolphin bug 10783).

-----------------------------------------------------------------

Thu 04-Aug-94   (GregF)

crtw32\h\heap.h
        Need eight byte granularity for the DEC Alpha too.

-----------------------------------------------------------------

Mon 01-Aug-94   (ChrisWei)

V2 postponed bug fixes:

crtw32\stdio\popen.c - bug #14666
crtw32\mbstring\mbclevel - bug #14685
crtw32\mbstring\mbsncoll.c, mbsnicol.c - bug #13384
crtw32\mbstring\mbsupr.c, mbslwr.c - bug #14199
crtw32\startup\crt0.c - bug #14941
crtw32\misc\wsetloca.c - bug fix #14663
crtw32\misc\initnum.c, initmon.c - bug fix #14810
crtw32\misc\aw_map.c, aw_cmp.c, aw_com.c - optimize for NT 3.5

-----------------------------------------------------------------

Mon 01-Aug-94   (GregF)

libw32\makefile
        Two sets of changes. First, I revised the definition of the
        COMPONENTS_SUPPOBJS_COMMON list so that some EH and TLS objects now
        get built for the DEC Alpha too. Only the Alpha build is affected
        by this change.

        Second, I moved crtlib.obj from the COMPONENTS_SUPPOBJS list to the
        components COMPONENTS_CRTDLL list so it didn't get build into the
        imports lib, but the access functions still go exported. I did
        the corresponding thing for the Win32s lists. Only the x86 build is
        affected.

-----------------------------------------------------------------

Mon 01-Aug-94   (GregF)

crtw32\h\heap.h
        Made def of _PAGESIZE_ conditional on _M_ALPHA - pages are twice as
        big on the DEC Alpha.

-----------------------------------------------------------------

Wed 27-Jul-94   (GregF)

log.txt
        Added this file to hold change notes for all of crt project.

crt32w\log.txt renamed to crt32w\oldv2log.txt
fp32w\log.txt renamed to fp32w\oldv2log.txt
        Renamed the changes logs used for Dolphin (v2).

-----------------------------------------------------------------

Wed 27-Jul-94   (GregF)

crtw32\helper\i386\*.asm
        Speedups for the __int64 arithmetic helpers. This work was originally
        done for, and at the request of, the Daytona folks (MarkL).

-----------------------------------------------------------------
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\base\crts\fpw32\oldv2log.txt ===
----------------------------------------------------------------------

Thu 26-May-94	(GregF)

fpwin32\tran\lsources, sources
fpwin32\tran\alpha\ceil.c, floor.c, modf.c (all deleted)
fpwin32\tran\alpha\ceil.s, fabss.s, floors.s, fmods.s, modfs.s (new)
fpwin32\tran\alpha\ieee.c (update)
	Changes picked up from \\orville\razzle\src\fp32 version of tree.

----------------------------------------------------------------------

Tue 17-May-94	(GregF)

fpwin32\tran\mips\asincosm.s, expm.s, fasincos.s, powm.s
	Latest from Roger Lanser

----------------------------------------------------------------------

Thu 28-Apr-94	(GregF)

fpwin32\buildcrt.cmd, fp32.def
	Minor changes to support building special DLL for Win32s (currently
	named msvcrt19.dll)

----------------------------------------------------------------------

Fri 11-Mar-94	(GregF)

fpwin32\fp32.def
	Deleted the MIPS_OPTIMIZATION variable. Amounts to removing the
	-Ox- (disable intrinsics) switch from the MIPS build. This
	corresponds to Steve Hanson's change to \\orville\razzle\src\fp32
	version.

fpwin32\include\trans.h
	Latest from Dec (from \\orville\razzle\src\fp32

fpwin32\tran\sources
	Picked several changes for Alpha build (only)

fpwin32\tran\alpha\fpctrl.s, frnd.s
	Latest versions from \\orville\razzle\src\fp32.

fpwin32\tran\alpha\asinacos.s
		   atan2s.s
		   atans.s
		   coss.s
		   dpml_exc.c
		   exph.c
		   exps.s
		   hypoth.c
		   hypots.s
		   log10s.s
		   logs.s
		   pows.s
		   sins.s
		   sqrts.s
		   tans.s
		   trig_rdx.s
		   trig_tab.s
	New sources from Dec taken from (\\orville\razzle\src\fp32).

fpwin32\tran\mips\asincosm.s
		  atanm.s
		  cabs.s
		  coshm.s
		  dtoul.s
		  expm.s
		  fabsf.s
		  fasincos.s
		  fatan.s
		  fcosh.s
		  fexp.s
		  ffloor.s
		  fhypot.s
		  flog.s
		  floorm.s
		  fmodm.s
		  fpctrl.s
		  frnd.s
		  fsincos.s
		  fsinh.s
		  fsqrt.s
		  fsqrthlp.s
		  ftan.s
		  ftanh.s
		  hypotm.s
		  logm.s
		  powm.s
		  rint.s
		  sinhm.s
		  sqrtm.s
		  tanhm.s
		  trigm.s
		  xsqrt.s
	Latest from Steve Hanson/Roger Lanser. Fixed prologues for unwinds.
	Taken from \\orville\razzle\src\fp32

----------------------------------------------------------------------

Thu 27-Jan-94	(GregF)

tran\sources
	Name changes to mips objects.

----------------------------------------------------------------------

Wed 26-Jan-94	(GregF)

***** ALL CHANGES BELOW ARE DERIVED FROM ROGER LANSER'S CHANGES TO *****
***** TO THE FP32 TREE						   *****

tran\mips\asincos.s renamed to asincosm.s,
	  atan.s    renamed to atanm.s,
	  cosh.s    renamed to coshm.s,
	  exp.s     renamed to expm.s,
	  fabs.s    renamed to fabsm.s,
	  ffloor.s  renamed to floorm.s,
	  ffloorf.s renamed to ffloor.s,
	  fmod.s    renamed to fmodm.s,
	  fpow.s    renamed to powm.s
	  fpowf.c   renamed to fpow.c,
	  fsqrt.s   renamed to sqrtm.s,
	  fsqrtf.s  renamed to fsqrt.s,
	  hypot.s   renamed to hypotm.s
	  log.s     renamed to logm.s
	  modff.c   renamed to fmodf.c,
	  sinh.s    renamed to sinhm.s,
	  tanh.s    renamed to tanhm.s,
	  trig.s    renamed to trigm.s
	Renamed files to avoid possible name conflicts and consequent
	headaches with the NT build tools (e.g., tran\asincos.c was getting
	built instead of tran\mips\asincos.s). The naming convention was
	extended to files which weren't actually in conflict for consistency
	(by Roger Lanser).

tran\mips\cabsm.s
	Replaced __cabs with cabs, bypot with _hypot

tran\mips\expm.s
	Fixed reference to _HUGE.

tran\mips\fabsm.s
	Removed bogus enclosing #ifdef - #endif (was preventing the source
	from actually being assembled).

tran\mips\hypotm.s
	Replaced __hypot with _hypot.

----------------------------------------------------------------------

Mon 24-Jan-94	(GregF)

tran\include\trans.h
	Merged in _LANGUAGE_ASSEMBLY conditionals added by Roger Lanser
	to the fp32 version on \\orville\razzle.

----------------------------------------------------------------------

Mon 24-Jan-94	(GregF)

tran\mips\cosh.s, hypot.s, sinh.s
	Merged latest versions from fp32 on \\orville\razzle. They fix
	bugs in references to HUGE.

----------------------------------------------------------------------

Sun 23-Jan-94	(GregF)

buildcrt.cmd, buildcrt.nt, dirs
	Dropped build of libm.

libm
	Deleted, along with all files and subdirectories. This has been
	superceded by the changes below.

tran\mips\asincos.s, atan.s, cabs.s, cosh.s, exp.s, exptable.s, fabs.s,
	  fabsf.s, fasincos.s, fatan.s, fcosh.s, fexp.s, ffloor.s, ffloorf.s,
	  fhypot.s, flog.s, fmod.s, fpow.s, fpowf.c, fsincos.s, fsinh.s,
	  fsqrtf.s, fsqrthlp.s, ftan.s, ftanh.s, hypot.s, log.s, logtable.s,
	  modff.c, sinh.s, tanh.s, trig.s
	New files from Steve Hanson and Roger Lanser.

tran\mips\fsqrt.s
	Whole new version for Steve Hanson and Roger Lanser.

tran\sources
	Revised to build the files above for MIPS.

----------------------------------------------------------------------

Wed 12-Jan-94	(GregF)

fp32.def, fp32.nt
	Added fp32.nt, a variation of fp32.def used when building libs for
	the NT SDK.  Took CRTLIBTYPE==NT support out of fp32.def, moved it
	to fp32.nt.

----------------------------------------------------------------------

Wed 05-Jan-94	(GregF)

buildcrt.cmd
	Added libm to the build.

buildcrt.nt
	Variant of buildcrt.cmd used to build the CRT libs for the NT SDK.

dirs
	Added libm.

makefile
	Restored support for building libcnt. Thus, there is no need for
	a special version to build the NT SDK version (i.e., there is no
	makefile.nt).

libm\*.*
	Added libm and all subdirectories and files. These are Steve
	Hanson's fast and single-precision floating point routines. They
	are for MIPS only. Note, this was NOT the right way to do this.
	They SHOULD have been integrated into tran\mips, as I had hinted
	to Steve twice in email. However, he ignored the hints and I don't
	have time to fix his hacks so...

----------------------------------------------------------------------

Wed 01-Dec-93	(GregF)

tran\alpha\huge.s
	_HUGE for Dolphin build

----------------------------------------------------------------------

Wed 01-Dec-93	(GregF)

buildcrt.cmd -
	Made more similar to NT SDK build script.

dirs, fp32.def, makefile -
	Merged in NT SDK version.

conv\cvt.c, tenpow.c -
	Merged in NT SDK version. Also, revised the build control macros
	(e.g., replaced MTHREAD with _MT, ALPHA with _M_ALPHA,...,etc.)

conv\sources -
	Moved fp8.c onto i386_SOURCES list

include\cv.h, tran.h -
	Merged in NT SDK. Substantially revised build control macros.

tran\fabs.c, ldexp.c, pow.c, sincosh.c, sources
	Merged in NT SDK version.

tran\i386\huge.asm -
	Restored _HUGE_DLL for NT SDK build (forgot to check in on 10/14).

tran\fpexcept.c
	Merged in NT SDK. Substantially revised build control macros.

----------------------------------------------------------------------

    18-Nov-93	(GregF)

tran\alpha
tran\alpha\*.* -
	Copied over Alpha support from fp32 tree (NT SDK tree)

----------------------------------------------------------------------

Thu 14-Oct-93	(GregF)

tran\mips\huge.s
	Restored _HUGE_DLL for NT SDK build.

----------------------------------------------------------------------

Wed 22-Sep-93	(SteveSa)

tran/sources -
	remove obsolete files from build

tran/i386/87fmod.asm -
	remove obsolete FORTRAN entry point _FIamod

tran/i386/87fsqrt.asm,
tran/i386/87ftran.asm,
tran/i386/87ftrig.asm,
tran/i386/87ftriga.asm,
tran/i386/87ftrigh.asm -
	These files were deleted because these files just contained _FI*
	entry points for FORTRAN.  The FORTRAN group no longer needs
	those entry points, so these files are now obsolete.

----------------------------------------------------------------------

Wed 22-Sep-93	(SteveSa)

log.txt created, for tracking changes to the "Dolphin"
C Run-Time Floating Point code in the FPWin32 project.

----------------------------------------------------------------------
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\base\ddk\ddk_base.ini ===
; FORMAT : SourceDir, SourceFile, DestDir, DestFile, OPERATION
; All fields are required
; [subname]* is allowed for source, in which case * required for destination

busdrv\acpi\smbus\smbbatt                    , *           , src\wdm\acpi\smbbatt                              , *           , COPY
busdrv\acpi\tools\acpisim\driver             , *           , src\wdm\acpi\acpisim\driver                       , *           , HSPLIT
busdrv\acpi\tools\acpisim\inc                , *           , src\wdm\acpi\acpisim\inc                          , *           , HSPLIT
busdrv\acpi\tools\acpisim\asl                , *           , src\wdm\acpi\acpisim\asl                          , *           , HSPLIT
busdrv\acpi\tools\acpisim\inf                , *           , src\wdm\acpi\acpisim\inf                          , *           , HSPLIT
busdrv\acpi\tools\acpisim\lib\obj            , acpisim.lib , \                                                 , *           , COPYLIB
busdrv\acpi\wmiacpi\sample                   , *           , src\wdm\wmi\wmiacpi                               , *           , COPY
busdrv\agp\agp443                            , *           , src\kernel\agp\agp440                             , *           , HSPLIT
busdrv\agp\uagp35                            , *           , src\kernel\agp\uagp35                             , *           , HSPLIT
busdrv\agp\agplib3                            , *           , src\kernel\agp\agplib                             , *           , HSPLIT
busdrv\agp\inc3                               , agp.h       , src\kernel\agp\inc                                , *           , HSPLIT
busdrv\acpi\UPSDemo                          , *           , src\general\ups                                   , *           , HSPLIT
hals\mcasample\mcamgmt                       , readme.htm            , src\kernel\mca\mcamgmt                  , *           , HSPLIT
hals\mcasample\mcamgmt                       , sources               , src\kernel\mca\mcamgmt                  , *           , HSPLIT
hals\mcasample\mcamgmt                       , makefile              , src\kernel\mca\mcamgmt                  , *           , HSPLIT
hals\mcasample\mcamgmt                       , Common.cpp            , src\kernel\mca\mcamgmt                  , *           , HSPLIT
hals\mcasample\mcamgmt                       , Common.h              , src\kernel\mca\mcamgmt                  , *           , HSPLIT
hals\mcasample\mcamgmt                       , CorrectedEngine.cpp   , src\kernel\mca\mcamgmt                  , *           , HSPLIT
hals\mcasample\mcamgmt                       , CorrectedEngine.h     , src\kernel\mca\mcamgmt                  , *           , HSPLIT
hals\mcasample\mcamgmt                       , FatalEngine.cpp       , src\kernel\mca\mcamgmt                  , *           , HSPLIT
hals\mcasample\mcamgmt                       , FatalEngine.h         , src\kernel\mca\mcamgmt                  , *           , HSPLIT
hals\mcasample\mcamgmt                       , Mca.cpp               , src\kernel\mca\mcamgmt                  , *           , HSPLIT
hals\mcasample\mcamgmt                       , Mca.h                 , src\kernel\mca\mcamgmt                  , *           , HSPLIT
hals\mcasample\mcamgmt                       , MCAObjectSink.cpp     , src\kernel\mca\mcamgmt                  , *           , HSPLIT
hals\mcasample\mcamgmt                       , MCAObjectSink.h       , src\kernel\mca\mcamgmt                  , *           , HSPLIT
ntos\inc                                     , class.h     , src\storage\inc                                   , *           , HSPLIT
ntos\inc                                     , tape.h      , src\storage\inc                                   , *           , HSPLIT
ntos\wmi\sample\wmifilt                      , *           , src\wdm\wmi\wmifilt                               , *           , HSPLIT
; no IA64 versions checked in yet
busdrv\acpi\tools\sleeper                    , *           , tools\acpi\sleeper\x86                            , *           , COPYX86
busdrv\acpi\tools\pmte                       , *           , tools\acpi\pmte\x86                               , *           , COPYX86
pnp\tools\devcon                             , *           , src\setup\devcon                                  , *           , HSPLIT
pnp\tools\devcon\bin                         , *           , tools\devcon                                      , *           , COPY

; DevCtl Removed - RAID 760591
; tools\devctl                                 , *.htm       , tools\devctl                                      , *           , COPY
; NOTE: tools\devctl\*\devctl.exe is binplaced to the DDK from base\tools\devctl

; NOTE: tools\devcon\*\devcon.exe is binplaced to the DDK from base\pnp\tools\devcon
; NOTE: tools\other\*\kernrate.exe is binplaced to the DDK from base\tools\kernrate
; NOTE: tools\coinstallers\*\wmiinst.dll is binplaced from base\pnp\tools\wmiiinst
; NOTE: tools\coinstallers\wmiinst.htm is binplaced from base\pnp\tools\wmiiinst
;
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\base\ddk\hal_base.ini ===
; FORMAT : SourceDir, SourceFile, DestDir, DestFile, OPERATION
; All fields are required
; [subname]* is allowed for source, in which case * required for destination
;

; BASE
;
boot\detect\chk                              , makefile    , src\boot\detect\chk                               , *           , HSPLIT      
boot\detect\chk                              , makefile.inc, src\boot\detect\chk                               , *           , HSPLIT      
boot\detect\chk                              , sources     , src\boot\detect\chk                               , *           , HSPLIT      
boot\detect\chk                              , sources.inc , src\boot\detect\chk                               , *           , HSPLIT      
boot\detect\fre                              , makefile    , src\boot\detect\fre                               , *           , HSPLIT      
boot\detect\fre                              , makefile.inc, src\boot\detect\fre                               , *           , HSPLIT      
boot\detect\fre                              , sources     , src\boot\detect\fre                               , *           , HSPLIT      
boot\detect\fre                              , sources.inc , src\boot\detect\fre                               , *           , HSPLIT      
boot\detect\i386                             , acpibios.h  , src\boot\detect\i386                              , *           , HSPLIT      
boot\detect\i386                             , bios.h      , src\boot\detect\i386                              , *           , HSPLIT      
boot\detect\i386                             , comlpt.h    , src\boot\detect\i386                              , *           , HSPLIT      
boot\detect\i386                             , comlptc.c   , src\boot\detect\i386                              , *           , HSPLIT      
boot\detect\i386                             , cpu.asm     , src\boot\detect\i386                              , *           , HSPLIT      
boot\detect\i386                             , cpu.inc     , src\boot\detect\i386                              , *           , HSPLIT      
boot\detect\i386                             , disk.h      , src\boot\detect\i386                              , *           , HSPLIT      
boot\detect\i386                             , diska.asm   , src\boot\detect\i386                              , *           , HSPLIT      
boot\detect\i386                             , diskc.c     , src\boot\detect\i386                              , *           , HSPLIT      
boot\detect\i386                             , display.c   , src\boot\detect\i386                              , *           , HSPLIT      
boot\detect\i386                             , eisa.h      , src\boot\detect\i386                              , *           , HSPLIT      
boot\detect\i386                             , hwapm.c     , src\boot\detect\i386                              , *           , HSPLIT      
boot\detect\i386                             , hwdetect.c  , src\boot\detect\i386                              , *           , HSPLIT      
boot\detect\i386                             , hwdetect.h  , src\boot\detect\i386                              , *           , HSPLIT      
boot\detect\i386                             , hweisa.inc  , src\boot\detect\i386                              , *           , HSPLIT      
boot\detect\i386                             , hweisaa.asm , src\boot\detect\i386                              , *           , HSPLIT      
boot\detect\i386                             , hweisac.c   , src\boot\detect\i386                              , *           , HSPLIT      
boot\detect\i386                             , hwheap.c    , src\boot\detect\i386                              , *           , HSPLIT      
boot\detect\i386                             , hwmisca.asm , src\boot\detect\i386                              , *           , HSPLIT      
boot\detect\i386                             , hwpbiosc.c  , src\boot\detect\i386                              , *           , HSPLIT      
boot\detect\i386                             , hwpci.inc   , src\boot\detect\i386                              , *           , HSPLIT      
boot\detect\i386                             , hwpcia.asm  , src\boot\detect\i386                              , *           , HSPLIT      
boot\detect\i386                             , hwpmbios.c  , src\boot\detect\i386                              , *           , HSPLIT      
boot\detect\i386                             , hwvbios.h   , src\boot\detect\i386                              , *           , HSPLIT      
boot\detect\i386                             , hwvbiosc.c  , src\boot\detect\i386                              , *           , HSPLIT      
boot\detect\i386                             , keybda.asm  , src\boot\detect\i386                              , *           , HSPLIT      
boot\detect\i386                             , keybdc.c    , src\boot\detect\i386                              , *           , HSPLIT      
boot\detect\i386                             , main.asm    , src\boot\detect\i386                              , *           , HSPLIT      
boot\detect\i386                             , main.inc    , src\boot\detect\i386                              , *           , HSPLIT      
boot\detect\i386                             , mouse.inc   , src\boot\detect\i386                              , *           , HSPLIT      
boot\detect\i386                             , mousea.asm  , src\boot\detect\i386                              , *           , HSPLIT      
boot\detect\i386                             , mousec.c    , src\boot\detect\i386                              , *           , HSPLIT      
boot\detect\i386                             , ntmisc.h    , src\boot\detect\i386                              , *           , HSPLIT      
boot\detect\i386                             , pccard.h    , src\boot\detect\i386                              , *           , HSPLIT      
boot\detect\i386                             , pccard.inc  , src\boot\detect\i386                              , *           , HSPLIT      
boot\detect\i386                             , pccarda.asm , src\boot\detect\i386                              , *           , HSPLIT      
boot\detect\i386                             , pccardc.c   , src\boot\detect\i386                              , *           , HSPLIT      
boot\detect\i386                             , pcibios.c   , src\boot\detect\i386                              , *           , HSPLIT      
boot\detect\i386                             , pcibios.h   , src\boot\detect\i386                              , *           , HSPLIT      
boot\detect\i386                             , pnpbios.h   , src\boot\detect\i386                              , *           , HSPLIT      
boot\detect\i386                             , string.h    , src\boot\detect\i386                              , *           , HSPLIT      
boot\detect\i386                             , types.h     , src\boot\detect\i386                              , *           , HSPLIT      
boot\detect\i386                             , video.inc   , src\boot\detect\i386                              , *           , HSPLIT      
boot\detect\i386                             , videoa.asm  , src\boot\detect\i386                              , *           , HSPLIT      
; Special case the next three items. The files are 16 bit libraries for ntdetect only.
boot\detect\i386                             , llibce.lib  , src\boot\detect\i386                              , *           , COPY
boot\detect\i386                             , long.lib    , src\boot\detect\i386                              , *           , COPY
boot\detect\i386                             , slibce.lib  , src\boot\detect\i386                              , *           , COPY

boot\inc                                     , dockinfo.h  , src\boot\inc                                      , *           , HSPLIT      
boot\kdcom                                   , *           , src\boot\kdcom                                    , *           , HSPLIT      

boot\kd1394                                  , kd1394.c    , src\boot\kd1394                                   , *           , HSPLIT      
boot\kd1394                                  , kd1394.def  , src\boot\kd1394                                   , *           , HSPLIT      
boot\kd1394                                  , kd1394.h    , src\boot\kd1394                                   , *           , HSPLIT
boot\kd1394                                  , kd1394.htm  , src\boot\kd1394                                   , *           , HSPLIT      
boot\kd1394                                  , kd1394.rc   , src\boot\kd1394                                   , *           , HSPLIT      
boot\kd1394                                  , kd1394io.c  , src\boot\kd1394                                   , *           , HSPLIT      
boot\kd1394                                  , makefile    , src\boot\kd1394                                   , *           , HSPLIT      
boot\kd1394                                  , ohci1394.c  , src\boot\kd1394                                   , *           , HSPLIT
boot\kd1394                                  , ohci1394.h  , src\boot\kd1394                                   , *           , HSPLIT
boot\kd1394                                  , sources     , src\boot\kd1394                                   , *           , HSPLIT      
; pch.h isn't a precompiled header for this
boot\kd1394                                  , pch.h       , src\boot\kd1394                                   , *           , HSPLIT      

hals                                         , acpidtct.c  , src\hals                                          , *           , HSPLIT      
hals                                         , bushnd.c    , src\hals                                          , *           , HSPLIT      
hals                                         , hal.src     , src\hals                                          , *           , HSPLIT      
hals                                         , hals.inc    , src\hals                                          , *           , HSPLIT      
hals                                         , drivesup.c  , src\hals                                          , *           , HSPLIT      
hals                                         , chiphacks.c , src\hals                                          , *           , HSPLIT      
hals                                         , rangesup.c  , src\hals                                          , *           , HSPLIT      
hals\halacpi                                 , *           , src\hals\halacpi                                  , *           , HSPLIT      
hals\halacpi\apic                            , *           , src\hals\halacpi\apic                             , *           , HSPLIT      
hals\halacpi\i386                            , *           , src\hals\halacpi\i386                             , *           , HSPLIT      
hals\halacpi\mpapic                          , *           , src\hals\halacpi\mpapic                           , *           , HSPLIT      
hals\halacpi\picacpi                         , *           , src\hals\halacpi\picacpi                          , *           , HSPLIT      

;hals\halia64                                , *           , src\hals\halia64x                                 , *           , HSPLIT      
;hals\halia64\ia64                           , *           , src\hals\halia64x\ia64                            , *           , HSPLIT      
;hals\halia64\mpapic                         , *           , src\hals\halia64x\mpapic                          , *           , HSPLIT      

hals\halmps                                  , *           , src\hals\halmps                                   , *           , COPY
hals\halmps\i386                             , *           , src\hals\halmps\i386                              , *           , COPY
hals\halmps\mp                               , *           , src\hals\halmps\mp                                , *           , COPY
hals\halmps\up                               , *           , src\hals\halmps\up                                , *           , COPY

hals\halx86                                  , *           , src\hals\halx86                                   , *           , HSPLIT      
hals\halx86\i386                             , *           , src\hals\halx86\i386                              , *           , HSPLIT      

inc                                          , kdcom.h     , inc\hal\wnet                                      , *           , HSPLIT      
inc                                          , cardbus.h   , inc\hal\wnet                                      , *           , HSPLIT      

;efiutil\sdk\inc                              , efi.h       , inc\hal                                      , *           , COPY     
;efiutil\sdk\inc                              , efidef.h    , inc\hal                                      , *           , COPY     
;efiutil\sdk\inc                              , efidevp.h   , inc\hal                                      , *           , COPY     
;efiutil\sdk\inc                              , efiprot.h   , inc\hal                                      , *           , COPY     
;efiutil\sdk\inc                              , eficon.h    , inc\hal                                      , *           , COPY     
;efiutil\sdk\inc                              , efiser.h    , inc\hal                                      , *           , COPY     
;efiutil\sdk\inc                              , efi_nii.h   , inc\hal                                      , *           , COPY     
;efiutil\sdk\inc\protocol                     , efivar.h    , inc\hal                                      , *           , COPY     
;efiutil\sdk\inc                              , efinet.h    , inc\hal                                      , *           , COPY     
;efiutil\sdk\inc                              , efipxebc.h  , inc\hal                                      , *           , COPY     
;efiutil\sdk\inc                              , efiapi.h    , inc\hal                                      , *           , COPY     
;efiutil\sdk\inc                              , efifs.h     , inc\hal                                      , *           , COPY     
;efiutil\sdk\inc                              , efierr.h    , inc\hal                                      , *           , COPY     
;efiutil\sdk\inc\ia32                         , efibind.h   , inc\hal\i386                                 , *           , COPYX86
;efiutil\sdk\inc\ia64                         , efibind.h   , inc\hal\ia64                                 , *           , COPYIA64

hals\x86new                                  , emulate.h   , inc\hal\wnet                                      , *           , COPY
hals\x86new                                  , x86new.h    , inc\hal\wnet                                      , *           , COPY
hals\x86new                                  , xm86.h      , inc\hal\wnet                                      , *           , COPY

hals\inc                                     , *           , inc\hal\wnet                                      , *           , HSPLIT      

ntos\inc                                     , arbiter.h   , inc\hal\wnet                                      , *           , HSPLIT      
ntos\inc                                     , eisa.h      , inc\hal\wnet                                      , *           , HSPLIT      
ntos\inc                                     , exboosts.h  , inc\hal\wnet                                      , *           , HSPLIT      
ntos\inc                                     , hal.h       , inc\hal\wnet                                      , *           , HSPLIT      
ntos\inc                                     , halpnpp.h   , inc\hal\wnet                                      , *           , HSPLIT      
ntos\inc                                     , kddll.h     , inc\hal\wnet                                      , *           , HSPLIT      
ntos\inc                                     , mac386.inc  , inc\hal\wnet                                      , *           , HSPLIT      
ntos\inc                                     , pci.h       , inc\hal\wnet                                      , *           , HSPLIT      
ntos\inc                                     , pciirqmp.h  , inc\hal\wnet                                      , *           , HSPLIT      
ntos\inc                                     , smbios.h    , inc\hal\wnet                                      , *           , HSPLIT      
ntos\ke\i386                                 , kimacro.inc , inc\hal\wnet                                      , *           , HSPLIT      
ntos\ke\i386                                 , kimacro.inc , inc\hal\wnet\i386                                 , *           , HSPLIT
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\base\ddk\ifs_base.ini ===
fs\cdfs                                      , *           , src\filesys\cdfs\wnet                 , *           , HSPLIT
fs\fastfat                                   , *.c         , src\filesys\fastfat\wnet              , *           , HSPLIT
fs\fastfat                                   , *.h         , src\filesys\fastfat\wnet              , *           , HSPLIT
fs\fastfat                                   , fastfat.rc  , src\filesys\fastfat\wnet              , *           , HSPLIT
fs\fastfat                                   , sources.inc , src\filesys\fastfat\wnet              , *           , HSPLIT
fs\fastfat                                   , dirs        , src\filesys\fastfat\wnet              , *           , HSPLIT
fs\fastfat\mp                                , *           , src\filesys\fastfat\wnet\mp           , *           , HSPLIT
fs\fltSamples\filespy                        , dirs        , src\filesys\filter\filespy            , *           , HSPLIT
fs\fltSamples\filespy                        , filespy.inf , src\filesys\filter\filespy            , *           , HSPLIT
fs\fltSamples\filespy                        , filespyw2k.inf , src\filesys\filter\filespy         , *           , HSPLIT
fs\fltSamples\filespy                        , *.cmd       , src\filesys\filter\filespy            , *           , HSPLIT
fs\fltSamples\filespy\docs                   , usrGuide.htm, src\filesys\filter\filespy            , *           , HSPLIT
fs\fltSamples\filespy\filter                 , *           , src\filesys\filter\filespy\filter     , *           , HSPLIT
fs\fltSamples\filespy\lib                    , *           , src\filesys\filter\filespy\lib        , *           , HSPLIT
fs\fltSamples\filespy\fspykd                 , *           , src\filesys\filter\filespy\fspykd     , *           , HSPLIT
fs\fltSamples\filespy\user                   , *           , src\filesys\filter\filespy\user       , *           , HSPLIT
fs\fltSamples\sfilter                        , makefile    , src\filesys\filter\sfilter            , *           , HSPLIT
fs\fltSamples\sfilter                        , sfilter.c   , src\filesys\filter\sfilter            , *           , HSPLIT
fs\fltSamples\sfilter                        , sfilter.inf , src\filesys\filter\sfilter            , *           , HSPLIT
fs\fltSamples\sfilter                        , sfilterw2k.inf , src\filesys\filter\sfilter         , *           , HSPLIT
fs\fltSamples\sfilter                        , sfilter.rc  , src\filesys\filter\sfilter            , *           , HSPLIT
fs\fltSamples\sfilter                        , *.cmd       , src\filesys\filter\sfilter            , *           , HSPLIT
fs\fltSamples\sfilter                        , sources     , src\filesys\filter\sfilter            , *           , HSPLIT
fs\rdr2\rdbss\ifskit.mrx\nulmrx              , Readme.htm  , src\filesys\nulmrx\wnet               , *           , HSPLIT
fs\rdr2\rdbss\ifskit.mrx\nulmrx\sys          , *           , src\filesys\nulmrx\wnet\sys           , *           , HSPLIT
fs\rdr2\rdbss\ifskit.mrx\nulmrx\dll          , *           , src\filesys\nulmrx\wnet\dll           , *           , HSPLIT
fs\rdr2\rdbss\ifskit.mrx\smbmrx              , Readme.htm  , src\filesys\smbmrx\wnet               , *           , HSPLIT
fs\rdr2\rdbss\ifskit.mrx\smbmrx\sys          , *           , src\filesys\smbmrx\wnet\sys           , *           , HSPLIT
fs\rdr2\rdbss\ifskit.mrx\smbmrx\dll          , *           , src\filesys\smbmrx\wnet\dll           , *           , HSPLIT
fs\rdr2\rdbss\ifskit.mrx\smbmrx\exe          , *           , src\filesys\smbmrx\wnet\exe           , *           , HSPLIT
fs\rdr2\inc                                  , backpack.h  , inc\ifs\wnet   		               , *           , HSPLIT
fs\rdr2\inc                                  , buffring.h  , inc\ifs\wnet                   	   , *           , HSPLIT
fs\rdr2\inc                                  , cifs.h      , inc\ifs\wnet                          , *           , HSPLIT
fs\rdr2\inc                                  , fcb.h       , inc\ifs\wnet                          , *           , HSPLIT
fs\rdr2\inc                                  , fcbtable.h  , inc\ifs\wnet      	                   , *           , HSPLIT
fs\rdr2\inc                                  , fsctlbuf.h  , inc\ifs\wnet              	           , *           , HSPLIT
fs\rdr2\inc                                  , lowio.h     , inc\ifs\wnet                          , *           , HSPLIT
fs\rdr2\inc                                  , midatlax.h  , inc\ifs\wnet                          , *           , HSPLIT
fs\rdr2\inc                                  , mrx.h       , inc\ifs\wnet      	                   , *           , HSPLIT
fs\rdr2\inc                                  , mrxfcb.h    , inc\ifs\wnet              	           , *           , HSPLIT
fs\rdr2\inc                                  , namcache.h  , inc\ifs\wnet                          , *           , HSPLIT
fs\rdr2\inc                                  , nodetype.h  , inc\ifs\wnet                          , *           , HSPLIT
fs\rdr2\inc                                  , ntrxdef.h   , inc\ifs\wnet      	                   , *           , HSPLIT
fs\rdr2\inc                                  , prefix.h    , inc\ifs\wnet                          , *           , HSPLIT
fs\rdr2\inc                                  , rdbss.h     , inc\ifs\wnet                          , *           , HSPLIT
fs\rdr2\inc                                  , rx.h        , inc\ifs\wnet      	                   , *           , HSPLIT
fs\rdr2\inc                                  , rxassert.h  , inc\ifs\wnet              	           , *           , HSPLIT
fs\rdr2\inc                                  , rxce.h      , inc\ifs\wnet                          , *           , HSPLIT
fs\rdr2\inc                                  , rxcehdlr.h  , inc\ifs\wnet      	                   , *           , HSPLIT
fs\rdr2\inc                                  , rxcontx.h   , inc\ifs\wnet                          , *           , HSPLIT
fs\rdr2\inc                                  , rxdata.h    , inc\ifs\wnet      	                   , *           , HSPLIT
fs\rdr2\inc                                  , rxdebug.h   , inc\ifs\wnet              	           , *           , HSPLIT
fs\rdr2\inc                                  , rxexcept.h  , inc\ifs\wnet                          , *           , HSPLIT
fs\rdr2\inc                                  , rxlog.h     , inc\ifs\wnet      	                   , *           , HSPLIT
fs\rdr2\inc                                  , rxovride.h  , inc\ifs\wnet              	           , *           , HSPLIT
fs\rdr2\inc                                  , rxpooltg.h  , inc\ifs\wnet                          , *           , HSPLIT
fs\rdr2\inc                                  , rxprocs.h   , inc\ifs\wnet                          , *           , HSPLIT
fs\rdr2\inc                                  , rxstruc.h   , inc\ifs\wnet     		               , *           , HSPLIT
fs\rdr2\inc                                  , rxtimer.h   , inc\ifs\wnet                          , *           , HSPLIT
fs\rdr2\inc                                  , rxtrace.h   , inc\ifs\wnet	                       , *           , HSPLIT
fs\rdr2\inc                                  , rxtypes.h   , inc\ifs\wnet                          , *           , HSPLIT
fs\rdr2\inc                                  , rxworkq.h   , inc\ifs\wnet              	           , *           , HSPLIT
fs\rdr2\inc                                  , scavengr.h  , inc\ifs\wnet             	           , *           , HSPLIT
fs\rdr2\inc                                  , struchdr.h  , inc\ifs\wnet                          , *           , HSPLIT
fs\rdr2\rdbss\copysup.nt\daytona\obj         , copysup.lib , \                                     , *           , COPYLIB
fs\rdr2\rdbss\monolithic\obj                 , rdbsslib.lib, \                                     , *           , COPYLIB
fs\rdr2\rxce\daytona\obj                     , rxce.lib    , \                                     , *           , COPYLIB
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\base\ddk\processor_base.ini ===
; FORMAT : SourceDir, SourceFile, DestDir, DestFile, OPERATION
; All fields are required
; [subname]* is allowed for source, in which case * required for destination
;

; BASE
;
hals\processor\generic                      , *            , src\processor\generic                             , *           , HSPLIT 
hals\processor                              , eventmsg.mc  , src\processor                                     , *           , HSPLIT
hals\processor                              , processor.mof, src\processor                                     , *           , HSPLIT
hals\processor\lib                          , dbgsys.h     , src\processor\lib                                 , *           , HSPLIT
hals\processor\lib                          , processor.h  , src\processor\lib                                 , *           , HSPLIT
hals\processor\lib\obj\i386                 , proclib.lib  , lib\wnet\i386\fre                                 , *           , COPYX86FRE
hals\processor\lib\obj\i386                 , proclib.lib  , lib\wnet\i386\chk                                 , *           , COPYX86CHK
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\base\dload\readme.txt ===
# NOTE: The delayload stubs for each dll should be in the same
#       directory as the dll is build from
#
#	Examples:
#
#		shell32.dll is built from the shell depot, so its delayload error handler 
#	        file is in \nt\shell\published\dload\shell32.c
#
#		netrap.dll is built from the ds depot, so its delayload error handler file
#               is in \nt\ds\published\dload\netwrap.c
#
#		mpr.dll is built from the net depot, so its delayload error handler file
#		is in \nt\net\published\lib\dload\mpr.c
#
#
# !! Please do NOT add files here that are not build from the base depot !!
#
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\base\efiutil\how do i build.txt ===
How do I build in the EFI environment?

first run "build.cmd" in this directory

This sets up the build environment, then:

cd sdk\build\nt32 for the 32 bit environment under the emulator or,
cd sdk\build\sal64 for the 64 bit Itanium environment (Make sure you started razzle
as "...\razzle.cmd Win64")

nmake

cd ..\..\..

then, go to your project dir. (Or pickup hello and modify it) and type bz / bcz

This will produce your binary
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\base\efiutil\a_readme.txt ===
NOTE WELL

This directory (efiutil) contains sources of programs
and related materials Microsoft provides to the "EFI group"
for distribution with the "EFI Kit"

NO MS CRITICAL IP SHOULD BE CHECKED INTO THIS DIRECTORY.

These sources build and run in EFI mode, which is NOT
something that exists on NT except in an emulator.
This directory should never be part of a normal build,
it is here for safekeeping.

Changes to FAT FS are NOT necessarily to be added to EFI-FS
tools in this directory, since EFI-FS may evolve at a different
(slower) rate than FAT.
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\base\efiutil\diskpart\worklist.txt ===
xx1. Write out Shadow MBR as part of any WriteGPT
xx2. Pick up fixes from Ken's code about enummeration.
xx3. Modify emulator for 2 or 3 devices, and much larger,
     and rerun tests...
xx4. Add a version command
xx5. Write Fix...
6. Pass it of for MBR work...
xx7. guid generator
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\base\efiutil\sdk\build\bios32\makefile.txt ===
!include master.env

#
# Libs to link together a FW image
#

EFI_LIBS =                                                          \
    output\lib\lib.lib

#
# We sometimes link the shell's tools into this build, so include
# libs for all the tools and the shell.
#
# (Note this is for debugging, and a real build should remove
# this as to be sure it's not mistakenly including any parts of
# the shell)
#

!include $(EFI_SOURCE)\shell\inc\shelllib.mak

#
#
#

TARGET_BASENAME=Bios32
OUTPUTS=bin\$(TARGET_BASENAME).exe

all: makemaker

$(OUTPUTS): $(EFI_LIBS)
    $(LINK) $(L_FLAGS) $(NT_LIBS) $(EFI_LIBS) /entry:MainEntry /out:$@ /pdb:$*.pdb


#
#? Everything to build
#

makemaker:
    $(BUILD_TOOL)\genmake
    $(MAKE) -f output\lib\makefile                                all
    $(MAKE) -f output\shell\makefile                              all
    $(MAKE) -f output\apps\test\makefile                          all
    $(MAKE) -f output\apps\test2\makefile                         all
    $(MAKE) -f output\apps\test3\makefile                         all
    $(MAKE) -f output\apps\test4\makefile                         all
    $(MAKE) -f output\apps\fpswa\makefile                         all
    $(MAKE) -f output\apps\osloader\makefile                      all

bsc:
   - dir /s /b *.sbr > temp.rm
   $(BSCMAKE) /n /o bin\$(TARGET_BASENAME).bsc "@temp.rm"
   - del temp.rm 

clean:
    - rd  /s /q output
    - rd  /s /q bin
    - del VC?0.*
    - del $(TARGET_BASENAME).*

floppy: bin\efildr bin\bootsect.com
    - copy bin\efildr a:\efildr

bin\efildr.dll: output\corefw\fw\platform\BuildTip\bios32\efildr.obj output\lib\lib.lib
    link /nologo /MACHINE:IX86 /subsystem:console /NODEFAULTLIB /INCREMENTAL:NO /MAP /FIXED /BASE:0x00400000 /ENTRY:EfiLoader output\corefw\fw\platform\BuildTip\bios32\efildr.obj output\lib\lib.lib /OUT:bin\efildr.dll

bin\efildr.efi: bin\efildr.dll
    $(FWIMAGE) app bin\efildr.dll bin\efildr.efi

bin\Bios32.efi: bin\Bios32.exe
    $(FWIMAGE) app bin\Bios32.exe bin\Bios32.efi

bin\efildr32: bin\efildr.efi bin\Bios32.efi
    $(BUILD_TOOL)\efildrimage bin\efildr32 bin\efildr.efi bin\Bios32.efi

bin\bootsect.com: output\corefw\fw\platform\BuildTip\bios32\ia32\bootsect.obj
    $(MASMLINK) /tiny output\corefw\fw\platform\BuildTip\bios32\ia32\bootsect.obj,bin\bootsect.com,bin\bootsect.map,,,

bin\start.com: output\corefw\fw\platform\BuildTip\bios32\ia32\start.obj
    $(MASMLINK) /tiny output\corefw\fw\platform\BuildTip\bios32\ia32\start.obj,bin\start.com,bin\start.map,,,

bin\efi32.com: output\corefw\fw\platform\BuildTip\bios32\ia32\efi32.obj
    $(MASMLINK) /tiny output\corefw\fw\platform\BuildTip\bios32\ia32\efi32.obj,bin\efi32.com,bin\efi32.map,,,

bin\efildr: bin\start.com bin\efi32.com bin\efildr32
    copy /b bin\start.com+bin\efi32.com+bin\efildr32 bin\efildr

createfloppy:
    - $(BUILD_TOOL)\dskimage $(BUILD_TOOL)\efiboot.img a: /f1.44

floppytools:
    - copy bin\cp.efi a:
    - copy bin\date.efi a:
    - copy bin\dblk.efi a:
    - copy bin\dmem.efi a:
    - copy bin\dmpstore.efi a:
    - copy bin\getmtc.efi a:
    - copy bin\load.efi a:
    - copy bin\ls.efi a:
    - copy bin\memmap.efi a:
    - copy bin\mkdir.efi a:
    - copy bin\mm.efi a:
    - copy bin\mode.efi a:
    - copy bin\nshell.efi a:
    - copy bin\osloader.efi a:
    - copy bin\pci.efi a:
    - copy bin\rm.efi a:
    - copy bin\shellenv.efi a:
    - copy bin\stall.efi a:
    - copy bin\time.efi a:
    - copy bin\type.efi a:
    - copy bin\ver.efi a:
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\base\efiutil\sdk\inc\protocol\readme.txt ===
The protocol directory contains non Architectural 
Protocols that span the FW, Platform, or application
space.
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\base\efiutil\sdk\notes\config.txt ===
Project settings:
            C/C++
                General
                    level 3
                    Warning as errors
                    Debug = Program database
                    Optimizations = Disabled
                    Preprocessor defines = EFI32,EFI_DEBUG,EFI_NT_EMULATOR

                Code Generation
                    Processor = Blend
                    Run-time library = Debug Multithreaded
                    Calling convention = __cdecl
                    Struct member alignment = 8

                Customize
                    Enable function-level linking
                    Elminate duplicate strings
                    Enable minimal rebuild
                    Suppress startup banner

                Listing
                    Generate browse info, Debug/

                Optimizations
                    Disabled
                    Inline function expansion disabled

                Precompiled headers
                    Automatic use of precompiled headers

                Preprocessor
                    Preprocessor defines = EFI32,EFI_DEBUG,EFI_NT_EMULATOR
   DRV ...........  Addition include directories: ..\..\public
FW ................ Addition include directories: inc, ..\public
   LIBSRC.......... Addition include directories: ..\public

                    Ignore standard include paths
                    Generate browse info

            Link
                General
   DRV ............ Object/library modules: ..\..\lib\libsrc.lib
FW ................ Object/library modules: ..\lib\libsrc.lib
                    Generate debug info
                    Link incrementally
                    Ignore default libraries
FW ................ Generate mapfile

                Customize
                    Link incrementally
                    Use program database
                    Suppress startup banner

                Debug
                    Debug Info
                    Microsoft format
                    Separate types

                Input
                    ..\lib\libsrc.lib
                    ignore default libraries

            Browse info
                    build browse info file
                    Suppress startup banner

            Post-build step

FW ................ copy debug\fw.lib ..\lib
FW ................ copy debug\fw.dll ..\exe

   FS ............. copy debug\fs.dll ..\lib



CRIBI:

WIN32,_DEBUG,_CONSOLE,_MBCS
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\base\efiutil\sdk\notes\iso-639-2.txt ===
"Termi-	"Biblio-	Name (English)
nology"	graphy"

aar	aar	Afar
abk	abk	Abkhazian
ace	ace	Achinese
ach	ach	Acoli
ada	ada	Adangme
afa	afa	Afro-Asiatic (Other)
afh	afh	Afrihili
afr	afr	Afrikaans
ajm	ajm	Aljamia
aka	aka	Akan
akk	akk	Akkadian
ale	ale	Aleut
alg	alg	Algonquian languages
amh	amh	Amharic
ang	ang	English, Old (ca. 450-1100)
apa	apa	Apache languages
ara	ara	Arabic
arc	arc	Aramaic
arn	arn	Araucanian
arp	arp	Arapaho
art	art	Artificial (Other)
arw	arw	Arawak
asm	asm	Assamese
ath	ath	Athapascan languages
aus	aus	Australian languages
ava	ava	Avaric
ave	ave	Avestan
awa	awa	Awadhi
aym	aym	Aymara
aze	aze	Azerbaijani
bad	bad	Banda
bai	bai	Bamileke languages
bak	bak	Bashkir
bal	bal	Baluchi
bam	bam	Bambara
ban	ban	Balinese
bas	bas	Basa
bat	bat	Baltic (Other)
bej	bej	Beja
bel	bel	Belarussian
bem	bem	Bemba
ben	ben	Bengali
ber	ber	Berber (Other)
bho	bho	Bhojpuri
bih	bih	Bihari
bik	bik	Bikol
bin	bin	Bini
bis	bis	Bislama
bla	bla	Siksika
bnt	bnt	Bantu (Other)
bod	tib	Tibetan
bra	bra	Braj
bre	bre	Breton
btk	btk	Batak (Indonesia)
bua	bua	Buriat
bug	bug	Buginese
bul	bul	Bulgarian
cad	cad	Caddo
cai	cai	Central American Indian (Other)
car	car	Carib
cat	cat	Catalan
cau	cau	Caucasian (Other)
ceb	ceb	Cebuano
cel	cel	Celtic (Other)
ces	cze	Czech
cha	cha	Chamorro
chb	chb	Chibcha
che	che	Chechen
chg	chg	Chagatai
chk	chk	Chuukese
chm	chm	Mari
chn	chn	Chinook jargon
cho	cho	Choctaw
chp	chp	Chipewyan
chr	chr	Cherokee
chu	chu	Church Slavic
chv	chv	Chuvash
chy	chy	Cheyenne
cmc	cmc	Chamic languages
cop	cop	Coptic
cor	cor	Cornish
cos	cos	Corsican
cpe	cpe	Creoles and pidgins, English-based (Other)
cpf	cpf	Creoles and pidgins, French-based (Other)
cpp	cpp	Creoles and pidgins, Portuguese-based (Other)
cre	cre	Cree
crp	crp	Creoles and pidgins (Other)
cus	cus	Cushitic (Other)
cym	wel	Welsh
dak	dak	Dakota
dan	dan	Danish
day	day	Dayak
del	del	Delaware
den	den	Slave (Athapascan)
deu	ger	German
dgr	dgr	Dogrib
din	din	Dinka
div	div	Divehi
doi	doi	Dogri
dra	dra	Dravidian (Other)
dua	dua	Duala
dum	dum	Dutch, Middle (ca. 1050-1350)
dyu	dyu	Dyula
dzo	dzo	Dzongkha
efi	efi	Efik
egy	egy	Egyptian (Ancient)
eka	eka	Ekajuk
ell	gre	Greek, Modern (1453-)
elx	elx	Elamite
eng	eng	English
enm	enm	English, Middle (1100-1500)
epo	epo	Esperanto
est	est	Estonian
eth	eth	Ethiopic
eus	baq	Basque
ewe	ewe	Ewe
ewo	ewo	Ewondo
fan	fan	Fang
fao	fao	Faroese
fas	per	Persian
fat	fat	Fanti
fij	fij	Fijian
fin	fin	Finnish
fiu	fiu	Finno-Ugrian (Other)
fon	fon	Fon
fra	fre	French
frm	frm	French, Middle (ca. 1400-1600)
fro	fro	French, Old (ca. 842-1400)
fry	fry	Frisian
ful	ful	Fulah
fur	fur	Friulian
gaa	gaa	Ga
gai	iri	Irish
gay	gay	Gayo
gba	gba	Gbaya
gdh	gae	Gaelic (Scots)
gem	gem	Germanic (Other)
gez	gez	Geez
gil	gil	Gilbertese
glg	glg	Gallegan
gmh	gmh	German, Middle High (ca. 1050-1500)
goh	goh	German, Old High (ca. 750-1050)
gon	gon	Gondi
gor	gor	Gorontalo
got	got	Gothic
grb	grb	Grebo
grc	grc	Greek, Ancient (to 1453)
grn	grn	Guarani
guj	guj	Gujarati
gwi	gwi	Gwich'in
hai	hai	Haida
hau	hau	Hausa
haw	haw	Hawaiian
heb	heb	Hebrew
her	her	Herero
hil	hil	Hiligaynon
him	him	Himachali
hin	hin	Hindi
hit	hit	Hittite
hmn	hmn	Hmong
hmo	hmo	Hiri Motu
hrv	scr	Croatian
hun	hun	Hungarian
hup	hup	Hupa
hye	arm	Armenian
iba	iba	Iban
ibo	ibo	Igbo
ijo	ijo	Ijo
iku	iku	Inuktitut
ile	ile	Interlingue
ilo	ilo	Iloko
ina	ina	Interlingua (International Auxilary Language Association)
inc	inc	Indic (Other)
ind	ind	Indonesian
ine	ine	Indo-European (Other)
ipk	ipk	Inupiak
ira	ira	Iranian (Other)
iro	iro	Iroquoian languages
isl	ice	Icelandic
ita	ita	Italian
jaw	jav	Javanese
jpn	jpn	Japanese
jpr	jpr	Judeo-Persian
jrb	jrb	Judeo-Arabic
kaa	kaa	Kara-Kalpak
kab	kab	Kabyle
kac	kac	Kachin
kal	kal	Kalaallisut
kam	kam	Kamba
kan	kan	Kannada
kar	kar	Karen
kas	kas	Kashmiri
kat	geo	Georgian
kau	kau	Kanuri
kaw	kaw	Kawi
kaz	kaz	Kazakh
kha	kha	Khasi
khi	khi	Khoisan (Other)
khm	khm	Khmer
kho	kho	Khotanese
kik	kik	Kikuyu
kin	kin	Kinyarwanda
kir	kir	Kirghiz
kmb	kmb	Kimbundu
kok	kok	Konkani
kom	kom	Komi
kon	kon	Kongo
kor	kor	Korean
kos	kos	Kosraean
kpe	kpe	Kpelle
kro	kro	Kru
kru	kru	Kurukh
kua	kua	Kuanyama
kum	kum	Kumyk
kur	kur	Kurdish
kut	kut	Kutenai
lad	lad	Ladino
lah	lah	Lahnda
lam	lam	Lamba
lao	lao	Lao
lat	lat	Latin
lav	lav	Latvian
lez	lez	Lezghian
lin	lin	Lingala
lit	lit	Lithuanian
lol	lol	Mongo
loz	loz	Lozi
ltz	ltz	Letzeburgesch
lua	lua	Luba-Lulua
lub	lub	Luba-Katanga
lug	lug	Ganda
lui	lui	Luiseno
lun	lun	Lunda
luo	luo	Luo (Kenya and Tanzania)
lus	lus	Lushai
mad	mad	Madurese
mag	mag	Magahi
mah	mah	Marshall
mai	mai	Maithili
mak	mak	Makasar
mal	mal	Malayalam
man	man	Mandingo
map	map	Austronesian (Other)
mar	mar	Marathi
mas	mas	Masai
max	max	Manx
mdr	mdr	Mandar
men	men	Mende
mga	mga	Irish, Middle (900-1200)
mic	mic	Micmac
min	min	Minangkabau
mis	mis	Miscellaneous languages
mkd	mac	Macedonian
mkh	mkh	Mon-Khmer (Other)
mlg	mlg	Malagasy
mlt	mlt	Maltese
mni	mni	Manipuri
mno	mno	Manobo languages
moh	moh	Mohawk
mol	mol	Moldavian
mon	mon	Mongolian
mos	mos	Mossi
mri	mao	Maori
msa	may	Malay
mul	mul	Multiple languages
mun	mun	Munda languages
mus	mus	Creek
mwr	mwr	Marwari
mya	bur	Burmese
myn	myn	Mayan languages
nah	nah	Aztec
nai	nai	North American Indian (Other)
nau	nau	Nauru
nav	nav	Navajo
nbl	nbl	Ndebele, South
nde	nde	Ndebele, North
ndo	ndo	Ndonga
nep	nep	Nepali
new	new	Newari
nia	nia	Nias
nic	nic	Niger-Kordofanian (Other)
niu	niu	Niuean
nld	dut	Dutch
non	non	Norse, Old
nor	nor	Norwegian
nso	nso	Sohto, Northern 
nub	nub	Nubian languages
nya	nya	Nyanja
nym	nym	Nyamwezi
nyn	nyn	Nyankole
nyo	nyo	Nyoro
nzi	nzi	Nzima
oci	oci	Occitan (post 1500)
oji	oji	Ojibwa
ori	ori	Oriya
orm	orm	Oromo
osa	osa	Osage
oss	oss	Ossetic
ota	ota	Turkish, Ottoman (1500-1928)
oto	oto	Otomian languages
paa	paa	Papuan (Other)
pag	pag	Pangasinan
pal	pal	Pahlavi
pam	pam	Pampanga
pan	pan	Panjabi
pap	pap	Papiamento
pau	pau	Palauan
peo	peo	Persian, Old (ca. 600-400 B.C.)
phi	phi	Philippine (Other)
phn	phn	Phoenician
pli	pli	Pali
pol	pol	Polish
pon	pon	Pohnpeian
por	por	Portuguese
pra	pra	Prakrit languages
pro	pro	Provenal, Old (to 1500)
pus	pus	Pushto
qaa-qtz	qaa-qtz	reserved for local use
que	que	Quechua
raj	raj	Rajasthani
rap	rap	Rapanui
rar	rar	Rarotongan
roa	roa	Romance (Other)
roh	roh	Raeto-Romance
rom	rom	Romany
ron	rum	Romanian
run	run	Rundi
rus	rus	Russian
sad	sad	Sandawe
sag	sag	Sango
sai	sai	South American Indian (Other)
sal	sal	Salishan languages
sam	sam	Samaritan Aramaic
san	san	Sanskrit
sas	sas	Sasak
sat	sat	Santali
sco	sco	Scots
sel	sel	Selkup
sem	sem	Semitic (Other)
sga	sga	Irish, Old (to 900)
shn	shn	Shan
sid	sid	Sidamo
sin	sin	Sinhalese
sio	sio	Siouan languages
sit	sit	Sino-Tibetan (Other)
sla	sla	Slavic (Other)
slk	slo	Slovak
slv	slv	Slovenian
smi	smi	Sami languages
smo	smo	Samoan
sna	sna	Shona
snd	snd	Sindhi
snk	snk	Soninke
sog	sog	Sogdian
som	som	Somali
son	son	Songhai
sot	sot	Sotho, Southern
spa	spa	Spanish
sqi	alb	Albanian
srd	srd	Sardinian
srp	scc	Serbian
srr	srr	Serer
ssa	ssa	Nilo-Saharan (Other)
ssw	ssw	Swati
suk	suk	Sukuma
sun	sun	Sundanese
sus	sus	Susu
sux	sux	Sumerian
swa	swa	Swahili
swe	swe	Swedish
syr	syr	Syriac
tah	tah	Tahitian
tai	tai	Tai (Other)
tam	tam	Tamil
tat	tat	Tatar
tel	tel	Telugu
tem	tem	Timne
ter	ter	Tereno
tet	tet	Tetum
tgk	tgk	Tajik
tgl	tgl	Tagalog
tha	tha	Thai
tig	tig	Tigre
tir	tir	Tigrinya
tiv	tiv	Tiv
tkl	tkl	Tokelau
tli	tli	Tlingit
tmh	tmh	Tamashek
tog	tog	Tonga (Nyasa)
ton	ton	Tonga (Tonga Islands)
tpi	tpi	Tok Pisin
tsi	tsi	Tsimshian
tsn	tsn	Tswana
tso	tso	Tsonga
tuk	tuk	Turkmen
tum	tum	Tumbuka
tur	tur	Turkish
tut	tut	Altaic (Other)
tvl	tvl	Tuvalu
twi	twi	Twi
tyv	tyv	Tuvinian
uga	uga	Ugaritic
uig	uig	Uighur
ukr	ukr	Ukrainian
umb	umb	Umbundu
und	und	Undetermined
urd	urd	Urdu
uzb	uzb	Uzbek
vai	vai	Vai
ven	ven	Venda
vie	vie	Vietnamese
vol	vol	Volapk
vot	vot	Votic
wak	wak	Wakashan languages
wal	wal	Walamo
war	war	Waray
was	was	Washo
wen	wen	Sorbian languages
wol	wol	Wolof
xho	xho	Xhosa
yao	yao	Yao
yap	yap	Yapese
yid	yid	Yiddish
yor	yor	Yoruba
ypk	ypk	Yupik languages
zap	zap	Zapotec
zen	zen	Zenaga
zha	zha	Zhuang
zho	chi	Chinese
znd	znd	Zande
zul	zul	Zulu
zun	zun	Zuni
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\base\efiutil\sdk\notes\relnote.doc ===
Microsoft Word Document MSWordDoc Word.Document.8Intel Title _PID_GUIDKoo Heng Daniel Aw Normal.dot Michael Kinney Microsoft Word 8.0#RLp= @\\DPSOFFICE007\DP2-4F8-HP5 Ne00: winspool HP LaserJet 5Si/5Si MX PS \\DPSOFFICE007\DP2-4F8-HP5 Letter \\DPSOFFICE007\DP2-4F8-HP5 Letter,)BP)* o".g1 6TCED# %Ks%Ss$C_ Y?+XK [=4p1 C{wY; c_Yo;`I DKe~fj mO`mOdbjbjt+t+ Product Release Notes EFI Version 0.99.12.24 Sample Implementation Introduction The EFI Version 0.99.12.24 Sample Implementation contains the source code and documentation required to develop EFI related software.  This includes the development of EFI firmware, EFI shells, EFI device drivers, EFI applications, and EFI OS loaders.  This release follows the EFI Specification 0.99.  These release notes contain the following information: vironment. Building EFI Version 0.99.12.24 There are four major build points (tips) in the tree: build\nt32 -  The NT emulator code & Tools build\bios32 - IA-32 version with a standard BIOS build\ia-32emb - IA-32 embedded version (No BIOS) build\Sal64** - IA-64 version  In each directory tip there is a build.cmd file. This file has global environment variables that must match you tree and your tools. Run this script and then run nmake. You can run a nmake clean to clean the tree. The resulting output files will get put in the tree called output that is one level below the build tip. Output is a copy of the EFI tree that is automatically generated to place the *.obj and other intermediate data. The resulting linked binary files end up in bin that is also one level below the build tip. You may need to modify the build.cmd at each tip to match you system.  There are a few environment variables that must be set correctly to build EFI.  A sample of these are: EFI_SOURCE=C:\Project\Efi EFI_MSVCTOOLPATH=c:\Program Files\DevStudio\VC EFI_MASMPATH=c:\masm611 EFI_DEBUG=YES EFI_DEBUG_CLEAR_MEMORY=YES EFI_BOOTSHELL=NO EFI_SPLIT_CONSOLES=YES EFI_SOURCE is the path to the root of the EFI tree. EFI_MSVCTOOLPATH is the path to the VC++ tools on your system. EFI_MASMPATH is the path to the MASM 6.11 tools on your system. EFI_DEBUG is set to YES to enable all debug messages and asserts, and set to NO to disable all debug messages and asserts. EFI_DEBUG_CLEAR_MEMORY is set to YES to enable setting buffers to a fixed value on FreePages, AllocatePool, and FreePool.  This is intended to be a fine-grained control such that debug messages will be available without the overhead of frequent buffer clears.  Set NO to disable the feature. EFI_BOOTSHELL is set to YES to build the EFI Shell and all the external EFI Shell commands and debug commands into the firmware.  If this environment variable is set to NO, then the firmware will not include the EFI Shell or any external EFI Shell commands or debug commands.  In either case, the firmware will boot directly to the Boot Manager.  This is the default behavior for production firmware.  The difference with the EFI_BOOTSHELL set to YES option is that there will be an option with the Boot Manager to launch the internal shell application. EFI_SPLIT_CONSOLES is set to YES to enable multiple active consoles.  In this case, all the console input and console output devices will be active according to the setting of the associated global variables.  When this environment variable is NO, there will be one standard input device, one standard output device, and one standard error device.  For correct behavior of the consoles, as detailed in Chapter 17 of the EFI 0.99 specification, this variable should be set to YES. This release differs from the former release that kept EFI_FIRMWARE_REVISION as an environment variable that defines the firmware s revision.  Now, the firmware revision is tracked in the files \inc\efi.h and \inc\efiapi.h.  The salient fields for tracking the vintage of the code are: #define EFI_FIRMWARE_MAJOR_REVISION #define EFI_FIRMWARE_MINOR_REVISION #define EFI_SPECIFICATION_MAJOR_REVISION #define EFI_SPECIFICATION_MINOR_REVISION **If the build tip is under the SOFTSDV64\EFI directory, then modify build.cmd to set the _IA64SDK_DIR to proper path as per your install. Follow the steps mentioned above to build EFI applications. If the build tip is under \DEV\EFI then refer to SAL Firmware Writers Guide and Release notes under the \DEV\DOC directory for building with firmware. You can go to build\nt32 to make the EFI emulator.  You can run emulator by running Nt32.exe in the build\nt32\bin directory. A red Standard Error and Blue ConsoleIn and ConsoleOut window should appear. This emulator only runs under NT. The bios32 and ia-32emb build tips also support the following nmake commands: nmake createfloppy - Formats and creates a bootable IA-32 EFI floppy. nmake floppy - Compiles and copies EFILDR onto a bootable IA-32 EFI floppy. nmake floppytools - Copies the standard EFI tools to a bootable IA-32 EFI floppy. Debugging EFI Version 0.99.12.24 with MSVC++ 5.0 or 6.0 Create a project (File New, select project tab) and pick the Win32 Application button. Point the project to your build\nt32\bin directory and fill in a dummy project name and click O.K. Next on the Project pull down menu select the settings options. [Debug Tab]: Executable for Debug must point to : build\nt32\bin\Nt32.exe [Debug Tab]: Working Directory : build\nt32\bin [Browse Info]: Browse info file name: build\nt32\bin\Nt32.bsc Then you can pull down the Build menu and click on start debugging. And you are at source level debug. If you have trouble breaking on the code you would like to see there is a BREAKPOINT() macro you can insert in the code to make it stop where you would like. The GUI lets you set breakpoints in source code. You can access the source browser from tools sub menu source browser. EFI Version 0.99.12.24 Directory Structure The EFI Version 0.99.12.24 tree has a basic directory structure. All IA32 or IA64 specific code resides in IA32 or IA64 subdirectories. If IA32 or IA64 specific code is added to a directory it will force the creation of IA32 and IA64 subdirectories. Only directories that have non-portable code have IA32 and IA64 subdirectories. The main directory level of EFI Version 0.99.12.24 is as follows: Build Build tips as outlined in Building EFI Version 0.99.12.24 CoreFW The core EFI firmware. This includes the core EFI code that follows the EFI specification and the Platform code that must be ported to port to new environments. Common include files for EFI Common library routines that can be used in the firmware, shell, applications,  drivers, or OS loaders. Notes  Documentation for EFI Sample Implementation 0.99.12.24 and sample code  listings. CoreFW The core firmware tree is broken up into the following major directories: The firmware directory contains all the EFI based firmware. It also contains the  Platform code that needs to be ported to each platform. The Inc directory contains included files that are used to bind the core EFI and platform code together. Drivers Contains drivers that are written exclusively to the EFI specification. These  drivers only make calls that are required to exist in the EFI specification.  This is why they are not in a platform directory. Drivers Core firmware drivers do not touch hardware directly and thus they must only call APIs that are defined in the EFI specification. These drivers can add their own extensions to EFI, but they can only consume standard EFI APIs. The following core Drivers are currently supported: Console This component provides two messaging drivers, a VT-100 and PC-ANSI,  that layer on top of SerialIo Devices and produce the SimpleInput and SimpleTextOutput Protocols.    ConSpliter This driver layers on top of SimpleInput and SimpleTextOutput Devices and  produces SimpleInput and SimpleTextOutput Protocols.  The idea is that a ConSpliter driver multiplexes multiple SimpleInput and SimpleTextOutput devices into a virtual SimpleInput device and a virtual SimpleTextOutput device.   DskIo This driver layers on top of BlockIo Devices and produces the DiskIo Protocol   that is consumed by filesystems. This driver implements the FAT32 filesystem. It layers it s self on top of devices  that support the DskIo protocol. PblkIo  This driver consumes the Raw BlockIo of an entire device and generates logical  BlockIo devices based on the format of the raw media. For hard drives this driver parses the MBR and produces a BlockIo driver for every partition on the disk that supports an EFI filesystem. For CD-ROM this driver parses the ISO-9660 filesystem on the CD-ROM and uses the  El Torito  extensions to produce a partition that supports the FAT filesystem. PXEBC This driver implements the PXE Base Code and Load File Protocols for remote  booting support. RamDisk  This driver produces a BlockIo Device that produces a RAM Disk. The memory  for the RAM Disk is allocated using EFI memory management calls. The corefw\fw\efi contains the EFI code that implements the EFI specification. This code is portable and should never be modified when a port is made to a new platform.  This is the key code that is tracking the specification. You should not change this code and any bugs in this code should be fixed by the core EFI team.  The following directories are supported: Loader Variable Platform The code in corefw\fw\platform\ is the only code that needs to be modified to port EFI to new platforms. Currently there are four supported platforms.  The entry points to each of these platforms can be found in corefw\fw\platform\BuildTip: This is the platform code for the NT emulator. It requires ntemulc.exe to exist to  function. This is due to the fact that the consoles in the NT emulator are really RPC calls to a pipe. There must be some thing on the other end of the pipe to make the consoles function and this is ntemulc.exe. Bios32 This platform is a generic port of EFI to a PC. The IA-32 code must load,  relocate, and then call MainEntry().The ConsoleIn, ConsoleOut, and BlockIo Drivers come from the Drivers\BiosInt directory. These drivers use the legacy BIOS INT calls to build the basic EFI platform drivers. IA-32Emb This platform is a generic port of EFI to a PC. The IA-32 code must load,  relocate, and then call MainEntry().The ConsoleIn, ConsoleOut, and BlockIo Drivers come from the Drivers directory. These are native drivers that do not depend on any BIOS services.  In fact, this implementation does not use an BIOS calls at all. SAL64 This platform is a generic port of the reference SAL. There is code in the  reference SAL that loads and relocates, then calls MainEntry(). The ConsoleIn, ConsoleOut, and BlockIo Drivers come from the Drivers\BiosInt directory. These drivers use the legacy BIOS INT calls to build the basic EFI platform drivers. There also exists some common code in the \corefw\fw\platform directory: BootMgr Sample Implementation of an EFI Boot Manager, including Boot Maint. Mgr. Drivers This directory contains device drivers for console and block I/O devices. PlDriver This directory contains all the drivers for system specific devices.  These are  typically drivers for motherboard devices. Drivers The code in corefw\fw\platform\Drivers contains all the device drivers for physical hardware devices. BiosInt This directory contains drivers that use legacy BIOS INT calls to build EFI  drivers. There is a driver for VGA, PS2 Keyboard, 16-bit UNDI, and Legacy INT 13h (hard drive, floppy, CD-ROM, Floppy              Native floppy driver for 1.44 MB floppy devices. Native IDE driver for ATA and ATAPI devices. Keyboard Native 8042 device driver for PS/2 keyboards.  Serial Native 16500 device driver for serial ports COM1-COM4 UNDI32         UNDI32 driver for Simple Network Protocol. VgaClass Generic VGA Class driver for VGA compatible video adapters.  VgaMini Generic VGA miniport drivers for standard VGA adapters. Porting to a new Platform Each platform will need it s own copy of init.c. This file will contain MainEntry().  This is the code that the platform will call to pass control to EFI. The platform is responsible for loading and relocating the EFI code and calling its entry point. Code in the Platform tree should never call EFI code directly. All core EFI code must be called via the FW (pointer to EFI_FIRMWARE_TABLE). The exception to this rule is that the platform code may call EFI library functions. EFI Library functions can only be called after the platforms memory map has been initialized and a call to InitializeLib() has been made. The main flow of the EFI code is controlled from the Platform code and the calls back into the core firmware must be made in sequence. The following is time line of initializing EFI: Platform Specific Code Loads and Relocates EFI code Platform Specific Code calls MainEntry() [This source tree starts running] Platform Specific Code Initializes Tables Get Initial EFI System Table Fill in ACPI, SMBIOS, SAL System Table,  Patch in any Run Time or Boot Services functions not supported by the EFI core Call PlInstallMemoryMap() to setup the EFI memory map First call back to FW to add a memory Descriptor must pass in Conventional Memory Conventional memory is then used to build the EFI memory map. The FW is called with an initialized memory map Initialize The EFI Lib   Lib calls can now be made Install Base Devices Call FW to install base IO devices Initialize internal NVRAM The FW is called to install the NVRAM store. this is after the System Volumes on BIOS32 systems where variables are stored in a file on a fixed disk Install Console Add BIOS Keyboard Driver Add Bios VGA Driver The FW is called with a working console Install System Volumes Add system Block IO Drivers   BIOS Block IO Drivers Install the serial console drivers (VT-100, PC-ANSI), serial port driver Install the console spliter to multiplex all available consoles The FW is called with System Volumes Installed Install Other Devices What ever extra you need NT emulator adds a emulated or raw floppy device NT emulator adds bogus NT file system access at this point Call FW Boot Manager Call Platform Boot Manager Known Limitations In This Release A few EFI Services are not fully implemented yet.  These include: GetWakeupTime()   This service programs the RTC, but is mechanism to wake up a system when the alarm fires has not been implemented.  This function is not implemented in the NT emulation environment. SetWakeupTime()   This service programs the RTC, but the mechanism to wake up a system when the alarm files has not been implemented.  This function is not implemented in the NT emulation environment. SetWatchdogTimer()   Not implemented.  This requires platform specific functionality. The NT emulation environment does not support all the EFI Shell Commands and all the FILE_SYSTEM_PROTOCOL interfaces. The EFI Shell command 'cd' is not functional. The EFI Shell command 'rmdir' is not functional. The EFI Shell command 'mkdir' is not functional. The file information returned by 'ls' is not complete. The EFI Shell command 'err' is not functional.   Workaround : Set the debug mask in \efi\inc\efidebug.h and recompile. The File System Protocol services GetInfo() and SetInfo() are not fully  implemented. Timers events of type EVT_NOTIFY_SIGNAL are not implemented in the NT emulation environment. Linking in the EFI Shell The EFI Shell provides a command line environment to develop and debug EFI applications.  The EFI Shell is supplied in the EFI ToolKit.  If you wish to use the EFI Shell, you will need to copy the executable images for the EFI Shell from the EFI ToolKit into the target environment. If you wish to integrate the EFI Shell into the EFI firmware, you will have to copy the EFI Shell source files from the EFI Toolkit directory into the EFI Reference Implementation directory.  There is a batch file to help you do this.  It is called \efi\GetShell.cmd.  It takes a single parameter that is the root directory of the EFI ToolKit.  For example, if the EFI Reference Implementation is in c:\project\efi, and the EFI ToolKit is in c:\project\toolkit, you could use the following command to copy the EFI Shell files. c:\project\efi> GetShell c:\project\toolkit Once the source files to the EFI Shell have been copied, you will need to set EFI_BOOTSHELL=YES to build the EFI Shell into the EFI firmware.  It is always a good ideal to do a clean build after the EFI Shell sources have been copied. Using the EFI Boot Manager The EFI Boot Maintenance Manager allows the user to add boot options, delete boot options, launch an EFI application, and set the auto boot time out value.  If there are no boot options in the system (and no integrated shell), the Boot Maintenance Menu is presented.  If boot options are available, then the set of available boot options is displayed, and the user can select one or choose to go to the Boot Maintenance Menu.  If the time out period is not zero, then the system will auto boot the first boot selection after the time out has expired.  If the time out period is zero, then the EFI Boot Manager will wait for the user to select an option. Boot Maintenance Menu: Boot from a file This option searches all the EFI System Partitions in the system.  For each partition it looks for an EFI directory.  If the EFI directory is found, then it looks in each of the subdirectories below EFI.  In each of those subdirectories, it looks for the first file that is an executable EFI Application.  Each of the EFI Applications that meet this criteria are automatically added as a boot option.  In addition, legacy boot options for A: and C: are also added if those devices are present. This option allows the user to launch an application without adding it as a boot option.  The EFI Boot Manager will search the root directories and the \EFI\TOOLS directories of all of the EFI System Partitions present in the system for the specified EFI Application. Add a boot option This option allows the user to specify the name of the EFI Application to add as a boot option.  The EFI Boot Manager searches the same partitions and directories as described in 1), until is finds an EFI Application with the same name that the user specified. This menu also allows the user to provide either ASCII or UNICODE arguments to the option that will be launched. Delete boot options This option provides the opportunity to delete any single boot options or all boot options. Change boot order This option gives the user control of the relative order that the boot manager will attempt to boot options. There is a help menu to describe the control key sequences to employ. Manage BootNext Setting This option gives the user the ability to prescribe the first boot option to be tried on a subsequent boot. Set auto boot time out This option allows the user to set the auto boot time out value in seconds.  If it is set to zero, then the auto boot feature is disabled Select Active Console Output Devices This option displays the list of available console output devices, as contained in the ConOutDev list volatile variable.  The console output devices that have been selected to be active consoles are annotated as such.  The user can select or deselect additional output consoles from this menu.  The boot maintenance manager will perform logic checking to ensure that a legal ensemble of devices is chosen (i.e., you cannot choose two different messaging devices, such as both PC-ANSI and VT-100, to be active consoles on a given UART).  The system should choose a set of defaults in an implementation-specific fashion if the console out variable is empty; this could be expected for the first boot of a given system.   Select Active Console Input Devices This option is the same as option 6 above, but it treats the ConInDev list of devices and the subset  detailed in ConIn variable. Select Active Error Devices This option is the same as number 6, but it treats the ErrOutDev list of devices and the subset detailed in ErrOut variable.  The Active Error Devices are essentially a type of console output devices whose only traffic includes error messaging.   Cold Reset This option will perform a platform-specific COLD reset of the system.   This has traditionally meant a full platform reset. Return to the Boot Manager main menu.  This will display the active boot devices, including a possible integrated shell (if the implementation is so constructed). Copyright 2000, Intel Corporation, All Rights Reserved. *Other brands and names are the property of their respective owners. ~{xurolif xurjga[ }zwtqkh`] {vspmjdaY xumjd^[SP yvph`XP
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\base\efiutil\sdk\notes\efi_lib.doc ===
Microsoft Word Document MSWordDoc Word.Document.8Title _PID_GUIDNancy Navarro 8x11spec97ibi3.dot Intel Corporation Microsoft Word 8.0yfU/} |QP 6c -6}#. L6y~V( foWxn0sb<F~ 'ZOwbY ILg0b= c,b#o v8d-a =0'V9 *3,+u% TuAo/ -qHr> X;"04 z[ndnb R;G/? 0qS`P "#?S' >tlg0 M5~Bj [f{\- jrkS= ee)Vi 3H068 o~*e<T QZ[MQu r&ON##' Qmff: X'AZy z[zMF 52\r" kmt}|9 yfU/} yfU/} IDATx u?Kd% 2v&eG UoVGm Faz!B` uXxSZ, IDATx u?Kd% 2v&eG UoVGm Faz!B` uXxSZ, IDATx u?Kd% 2v&eG UoVGm Faz!B` uXxSZ, IDATx u?Kd% 2v&eG UoVGm Faz!B` uXxSZ, yfU/} yfU/} IDATx u?Kd% 2v&eG UoVGm Faz!B` uXxSZ, IDATx u?Kd% 2v&eG UoVGm Faz!B` uXxSZ, yfU/} yfU/} IDATx u?Kd% 2v&eG UoVGm Faz!B` uXxSZ, yfU/} yfU/} IDATx u?Kd% 2v&eG UoVGm Faz!B` uXxSZ, IDATx u?Kd% 2v&eG UoVGm Faz!B` uXxSZ, yfU/} yfU/} IDATx u?Kd% 2v&eG UoVGm Faz!B` uXxSZ, yfU/} yfU/} IDATx u?Kd% 2v&eG UoVGm Faz!B` uXxSZ, yfU/} yfU/} IDATx u?Kd% 2v&eG UoVGm Faz!B` uXxSZ, yfU/} yfU/} IDATx u?Kd% 2v&eG UoVGm Faz!B` uXxSZ, yfU/} yfU/} IDATx u?Kd% 2v&eG UoVGm Faz!B` uXxSZ, yfU/} yfU/} IDATx u?Kd% 2v&eG UoVGm Faz!B` uXxSZ, yfU/} yfU/} IDATx u?Kd% 2v&eG UoVGm Faz!B` uXxSZ, yfU/} yfU/} IDATx u?Kd% 2v&eG UoVGm Faz!B` uXxSZ, yfU/} yfU/} IDATx u?Kd% 2v&eG UoVGm Faz!B` uXxSZ, yfU/} yfU/} IDATx u?Kd% 2v&eG UoVGm Faz!B` uXxSZ, yfU/} yfU/} IDATx u?Kd% 2v&eG UoVGm Faz!B` uXxSZ, yfU/} yfU/} IDATx u?Kd% 2v&eG UoVGm Faz!B` uXxSZ, yfU/} yfU/} IDATx u?Kd% 2v&eG UoVGm Faz!B` uXxSZ, yfU/} yfU/} IDATx u?Kd% 2v&eG UoVGm Faz!B` uXxSZ, yfU/} yfU/} IDATx u?Kd% 2v&eG UoVGm Faz!B` uXxSZ,ID="{C56AC065-DE35-11D2-99FC-0090273FC14D}" Document=ThisDocument/&H00000000 Module=NewMacros Name="Project" HelpContextID="0" CMG="BFBD6B2E95525056505650565056" DPB="7E7CAAEFD6119412941294" GC="3D3FE9AC176A186A1895" [Host Extender Info] &H00000001={3832D640-CF90-11CF-8E43-00A0C911005A};VBE;&H00000000 [Workspace] ThisDocument=44, 44, 840, 674,  NewMacros=22, 22, 982, 679, ZThisDocument NewMacrosMacro recorded 03/19/99 by Michael Kinney Project.NewMacros.FH Macro recorded 03/19/99 by Michael Kinney Project.NewMacros.FV Project.NewMacros.FB Macro recorded 03/22/99 by Michael Kinney Project.NewMacros.FA Macro recorded 03/24/99 by Michael Kinney  FH Macro  Macro recorded 03/19/99 by Michael Kinney Heading 3  Fuction  FV Macro  Macro recorded 03/19/99 by Michael Kinney Parameters9 Function5 Stop Recording$  FV Macro  Macro recorded 03/19/99 by Michael Kinney Description Function5  FV Macro  Macro recorded 03/19/99 by Michael Kinney Description Function5 CodeIBIProtoArgument  Times New Roman  FA Macro  Macro recorded 03/22/99 by Michael Kinney Stop Recording$  FA Macro  Macro recorded 03/22/99 by Michael Kinney CodeIBIProtoArgument   FB Macro  Macro recorded 03/24/99 by Michael Kinney CodeIBIPrototype  Attribut e VB_Nam e = "New Macros" Sub FH( Descript corded 0 3/19/99  by Micha el Kinne ProcD VInvo ke_Func ject. omeKey U nit:=wdL ActiveD ocument. s("Head ing 3" .Type Text  Paragr iAiCopy MeEscap $MoAown {, PCoun ind.Clea rFormatt With  Al.Bs Replace? MatchC Wild*c S`)ds !Z!+C) +.E8xec@ CodeIBI htoArgB Tab &  Times  Roma Itali wdToggl ColorIn "Fook 5Ck$ZBl$BAttribut e VB_Nam e = "Thi sDocumen 1Normal VCreata `False Predecl "Expose Template Deriv stomiz336f2c544 536f914f7 Win16 Win32 EFILIB7 stdole MSFormsC ThisDocument< _Evaluate Normal Office Project- Module1b NewMacros SelectionZ Style ActiveDocument Styles EndKey5 wdLine TypeText TypeParagraph Documentj HomeKey MoveDown Count0v MoveUp Findn ClearFormatting Replacement Forward WrapWy wdFindContinueBP MatchCase MatchWholeWord MatchWildcards MatchSoundsLike MatchAllWordForms ExecuteY EscapeKey CommandBars Visible wdFindAskt Paste vbTabc9 FontU Italic! wdToggle ColorIndex wdAutoKV*\CNormalrU ThisDocument NewMacros Project C:\Program Files\Common Files\Microsoft Shared\VBA\VBA332.dll C:\Program Files\Microsoft Office\Office\MSWORD8.OLB C:\WINNT\System32\STDOLE2.TLB stdole C:\WINNT\System32\MSForms.TWD MSForms C:\TEMP\VBE\MSForms.EXD C:\Program Files\Microsoft Office\Office\MSO97.DLL Office CodeIBIPrototype CodeIBIProtoArgumentNMacro recorded 03/19/99 by Michael Kinney Project.NewMacros.FH Project.NewMacros.FV Macro recorded 03/22/99 by Michael Kinney Project.NewMacros.FA Macro recorded 03/24/99 by Michael Kinney Project.NewMacros.FB4Project \G{00020 0046}# 2.0#0#C: \WINNT\S ystem32\ STDOLE2. tomation mMSFo@rms> FC56AC0 4D-DE35- 11D2-99F F90273F0C14D WD#Micro soft   Libprary D4E493-E PTEMP \VBE\ CvN@SalCv 2DF8D04C -5BFA-10 1B-BDE5 gram FilXes\ SO97.DLLCHi ThisDoc@ument h@6sD SNewMaEAbjbjt+t+ Extensible Firmware Interface  Library Specification nhanced  Draft for Review Version 0.997  April24, 20008 THIS SPECIFICATION IS PROVIDED "AS IS" WITH NO WARRANTIES  WHATSOEVER, INCLUDING ANY WARRANTY OF MERCHANTABILITY,  FITNESS FOR ANY PARTICULAR PURPOSE, OR ANY WARRANTY OTHERWISE ARISING OUT OF ANY PROPOSAL, SPECIFICATION OR SAMPLE.  A license is hereby granted to copy and reproduce this specification for internal use only. No other license, express or implied, by estoppel or otherwise, to any other intellectual property rights is granted herein. Intel disclaims all liability, including liability for infringement of any proprietary rights, relating to implementation of information in this specification.  Intel does not warrant or represent that such implementation(s) will not infringe such rights.  Third-party trademarks are the property of their respective owners. Copyright ( 2000. Intel Corporation, All Rights Reserved. Revision History Revision Revision History Author Initial review draft 3/24/99 Intel Updated to match 0.91.007 Sample Implementation 7/14/99 Intel Updated to match 0.91.009 Sample Implementation 11/17/99 Intel Updated to match 0.99.12.20 Sample Implementation 4/24/00 Intel Table of Contents  TOC \o "1-3"  1 Introduction  PAGEREF _Toc481226401 \h  Organization of this Document  PAGEREF _Toc481226402 \h  Goals  PAGEREF _Toc481226403 \h  Target Audience  PAGEREF _Toc481226404 \h  Prerequisite Specifications  PAGEREF _Toc481226405 \h  Conventions Used in This Document  PAGEREF _Toc481226406 \h  1.5.1 Data Structure Illustrations  PAGEREF _Toc481226407 \h  1.5.2 Typographic Conventions  PAGEREF _Toc481226408 \h  2 Constants  PAGEREF _Toc481226409 \h  3 Global Variables  PAGEREF _Toc481226410 \h  4 Functions and Macros  PAGEREF _Toc481226411 \h  Initialization Functions  PAGEREF _Toc481226412 \h  4.1.1 InitializeLib Function  PAGEREF _Toc481226413 \h  4.1.2 InitializeUnicodeSupport Function  PAGEREF _Toc481226414 \h  Linked List Support Macros  PAGEREF _Toc481226415 \h  4.2.1 InitializeListHead Macro  PAGEREF _Toc481226416 \h  4.2.2 IsListEmpty Macro  PAGEREF _Toc481226417 \h  4.2.3 RemoveEntryList Macro  PAGEREF _Toc481226418 \h  4.2.4 InsertTailList Macro  PAGEREF _Toc481226419 \h  4.2.5 InsertHeadList Macro  PAGEREF _Toc481226420 \h  String Functions  PAGEREF _Toc481226421 \h  4.3.1 StrCmp Function  PAGEREF _Toc481226422 \h  4.3.2 StrnCmp Function  PAGEREF _Toc481226423 \h  4.3.3 StriCmp Function  PAGEREF _Toc481226424 \h  4.3.4 StrCpy Function  PAGEREF _Toc481226425 \h  4.3.5 StrCat Function  PAGEREF _Toc481226426 \h  4.3.6 StrLen Function  PAGEREF _Toc481226427 \h  4.3.7 StrSize Function  PAGEREF _Toc481226428 \h  4.3.8 StrDuplicate Function  PAGEREF _Toc481226429 \h  4.3.9 StrLwr Function  PAGEREF _Toc481226430 \h  4.3.10 StrUpr Function  PAGEREF _Toc481226431 \h  4.3.11 strlena Function  PAGEREF _Toc481226432 \h  4.3.12 strcmpa Function  PAGEREF _Toc481226433 \h  4.3.13 strncmpa Function  PAGEREF _Toc481226434 \h  4.3.14 xtoi Function  PAGEREF _Toc481226435 \h  4.3.15 Atoi Function  PAGEREF _Toc481226436 \h  4.3.16 MetaMatch Function  PAGEREF _Toc481226437 \h  4.3.17 MetaiMatch Function  PAGEREF _Toc481226438 \h  4.3.18 ValueToString Function  PAGEREF _Toc481226439 \h  4.3.19 ValueToHex Function  PAGEREF _Toc481226440 \h  4.3.20 TimeToString Function  PAGEREF _Toc481226441 \h  4.3.21 GuidToString Function  PAGEREF _Toc481226442 \h  4.3.22 StatusToString Function  PAGEREF _Toc481226443 \h  4.3.23 DevicePathToStr Function  PAGEREF _Toc481226444 \h  Memory Support Functions  PAGEREF _Toc481226445 \h  4.4.1 ZeroMem Function  PAGEREF _Toc481226446 \h  4.4.2 SetMem Function  PAGEREF _Toc481226447 \h  4.4.3 CopyMem Function  PAGEREF _Toc481226448 \h  4.4.4 CompareMem Function  PAGEREF _Toc481226449 \h  4.4.5 AllocatePool Function  PAGEREF _Toc481226450 \h  4.4.6 AllocateZeroPool Function  PAGEREF _Toc481226451 \h  4.4.7 ReallocatePool Function  PAGEREF _Toc481226452 \h  4.4.8 FreePool Function  PAGEREF _Toc481226453 \h  4.4.9 GrowBuffer Function  PAGEREF _Toc481226454 \h  4.4.10 LibMemoryMap Function  PAGEREF _Toc481226455 \h  CRC Support Functions  PAGEREF _Toc481226456 \h  4.5.1 SetCrc Function  PAGEREF _Toc481226457 \h  4.5.2 SetCrcAltSize Function  PAGEREF _Toc481226458 \h  4.5.3 CheckCrc Function  PAGEREF _Toc481226459 \h  4.5.4 CheckCrcAltSize Function  PAGEREF _Toc481226460 \h  4.5.5 CalculateCrc Function  PAGEREF _Toc481226461 \h  Text I/O Functions  PAGEREF _Toc481226462 \h  4.6.1 Input Function  PAGEREF _Toc481226463 \h  4.6.2 IInput Function  PAGEREF _Toc481226464 \h  4.6.3 Output Function  PAGEREF _Toc481226465 \h  4.6.4 Print Function  PAGEREF _Toc481226466 \h  4.6.5 PrintAt Function  PAGEREF _Toc481226467 \h  4.6.6 IPrint Function  PAGEREF _Toc481226468 \h  4.6.7 IPrintAt Function  PAGEREF _Toc481226469 \h  4.6.8 APrint Function  PAGEREF _Toc481226470 \h  4.6.9 SPrint Function  PAGEREF _Toc481226471 \h  4.6.10 PoolPrint Function  PAGEREF _Toc481226472 \h  4.6.11 CatPrint Function  PAGEREF _Toc481226473 \h  4.6.12 DumpHex Function  PAGEREF _Toc481226474 \h  4.6.13 LibIsValidTextGraphics Function  PAGEREF _Toc481226475 \h  4.6.14 IsValidAscii Function  PAGEREF _Toc481226476 \h  4.6.15 IsValidEfiCntlChar Function  PAGEREF _Toc481226477 \h  Math Functions  PAGEREF _Toc481226478 \h  4.7.1 LshiftU64 Function  PAGEREF _Toc481226479 \h  4.7.2 RshiftU64 Function  PAGEREF _Toc481226480 \h  4.7.3 MultU64x32 Function  PAGEREF _Toc481226481 \h  4.7.4 DivU64x32 Function  PAGEREF _Toc481226482 \h  Spin Lock Functions  PAGEREF _Toc481226483 \h  4.8.1 InitializeLock Function  PAGEREF _Toc481226484 \h  4.8.2 AcquireLock Function  PAGEREF _Toc481226485 \h  4.8.3 ReleaseLock Function  PAGEREF _Toc481226486 \h  Handle and Protocol Support Functions  PAGEREF _Toc481226487 \h  4.9.1 LibLocateHandle Function  PAGEREF _Toc481226488 \h  4.9.2 LibLocateHandleByDiskSignature Function  PAGEREF _Toc481226489 \h  4.9.3 LibLocateProtocol Function  PAGEREF _Toc481226490 \h  4.9.4 LibInstallProtocolInterfaces Function  PAGEREF _Toc481226491 \h  4.9.5 LibUninstallProtocolInterfaces Function  PAGEREF _Toc481226492 \h  4.9.6 LibReinstallProtocolInterfaces Function  PAGEREF _Toc481226493 \h  File I/O Support Functions  PAGEREF _Toc481226494 \h  4.10.1 LibOpenRoot Function  PAGEREF _Toc481226495 \h  4.10.2 LibFileInfo Function  PAGEREF _Toc481226496 \h  4.10.3 LibFileSystemInfo Function  PAGEREF _Toc481226497 \h  4.10.4 LibFileSystemVolumeLabelInfo Function  PAGEREF _Toc481226498 \h  4.10.5 ValidMBR Function  PAGEREF _Toc481226499 \h  4.10.6 OpenSimpleReadFile Function  PAGEREF _Toc481226500 \h  4.10.7 ReadSimpleReadFile Function  PAGEREF _Toc481226501 \h  4.10.8 CloseSimpleReadFile Function  PAGEREF _Toc481226502 \h  Device Path Support Functions  PAGEREF _Toc481226503 \h  4.11.1 DevicePathFromHandle Function  PAGEREF _Toc481226504 \h  4.11.2 DevicePathInstance Function  PAGEREF _Toc481226505 \h  4.11.3 DevicePathInstanceCount Function  PAGEREF _Toc481226506 \h  4.11.4 AppendDevicePath Function  PAGEREF _Toc481226507 \h  4.11.5 AppendDevicePathNode Function  PAGEREF _Toc481226508 \h  4.11.6 AppendDevicePathInstance Function  PAGEREF _Toc481226509 \h  4.11.7 FileDevicePath Function  PAGEREF _Toc481226510 \h  4.11.8 DevicePathSize Function  PAGEREF _Toc481226511 \h  4.11.9 DuplicateDevicePath Function  PAGEREF _Toc481226512 \h  4.11.10 LibDevicePathToInterface Function  PAGEREF _Toc481226513 \h  4.11.11 UnpackDevicePath Function  PAGEREF _Toc481226514 \h  4.11.12 LibMatchDevicePaths Function  PAGEREF _Toc481226515 \h  4.11.13 LibDuplicateDevicePathInstance Function  PAGEREF _Toc481226516 \h  PCI Functions and Macros  PAGEREF _Toc481226517 \h  4.12.1 PciFindDeviceClass Function  PAGEREF _Toc481226518 \h  4.12.2 PciFindDevice Function  PAGEREF _Toc481226519 \h  4.12.3 InitializeGlobalIoDevice Function  PAGEREF _Toc481226520 \h  4.12.4 ReadPort Function  PAGEREF _Toc481226521 \h  4.12.5 WritePort Function  PAGEREF _Toc481226522 \h  4.12.6 ReadPciConfig Function  PAGEREF _Toc481226523 \h  4.12.7 WritePciConfig Function  PAGEREF _Toc481226524 \h  4.12.8 inp Macro  PAGEREF _Toc481226525 \h  4.12.9 outp Macro  PAGEREF _Toc481226526 \h  4.12.10 inpw Macro  PAGEREF _Toc481226527 \h  4.12.11 outpw Macro  PAGEREF _Toc481226528 \h  4.12.12 inpd Macro  PAGEREF _Toc481226529 \h  4.12.13 outpd Macro  PAGEREF _Toc481226530 \h  4.12.14 readpci8 Macro  PAGEREF _Toc481226531 \h  4.12.15 writepci8 Macro  PAGEREF _Toc481226532 \h  4.12.16 readpci16 Macro  PAGEREF _Toc481226533 \h  4.12.17 writepci16 Macro  PAGEREF _Toc481226534 \h  4.12.18 readpci32 Macro  PAGEREF _Toc481226535 \h  4.12.19 writepci32 Macro  PAGEREF _Toc481226536 \h  Miscellaneous Functions and Macros  PAGEREF _Toc481226537 \h  4.13.1 LibGetVariable Function  PAGEREF _Toc481226538 \h  4.13.2 LibGetVariableAndSize Function  PAGEREF _Toc481226539 \h  4.13.3 CompareGuid Function  PAGEREF _Toc481226540 \h  4.13.4 CR Macro  PAGEREF _Toc481226541 \h  4.13.5 DecimaltoBCD Function  PAGEREF _Toc481226542 \h  4.13.6 BCDtoDecimal Function  PAGEREF _Toc481226543 \h  4.13.7 LibCreateProtocolNotifyEvent Function  PAGEREF _Toc481226544 \h  4.13.8 WaitForSingleEvent Function  PAGEREF _Toc481226545 \h  4.13.9 WaitForEventWithTimeout Function  PAGEREF _Toc481226546 \h  4.13.10 RtLibEnableVirtualMappings Function  PAGEREF _Toc481226547 \h  4.13.11 RtConvertList Function  PAGEREF _Toc481226548 \h  4.13.12 LibGetSystemConfigurationTable Function  PAGEREF _Toc481226549 \h  Tables  TOC \t "TableTitle,2"  Table 1-1. Specification Organization and Contents  PAGEREF _Toc481217582 \h  Table 4-1. Initialization Functions  PAGEREF _Toc481217583 \h  Table 4-2. Linked List Support Macros  PAGEREF _Toc481217584 \h  Table 4-3. String Functions  PAGEREF _Toc481217585 \h  Table 4-4. EFI_STATUS Output Formats  PAGEREF _Toc481217586 \h  Table 4-5. Hardware Device Path Output Formats  PAGEREF _Toc481217587 \h  Table 4-6. Messaging Device Path Output Formats  PAGEREF _Toc481217588 \h  Table 4-7. Media Device Path Output Formats  PAGEREF _Toc481217589 \h  Table 4-8. BSS Device Path Output Formats  PAGEREF _Toc481217590 \h  Table 4-9. Memory Support Functions  PAGEREF _Toc481217591 \h  Table 4-10. CRC Support Functions  PAGEREF _Toc481217592 \h  Table 4-11. Format string attribute and argument specification  PAGEREF _Toc481217593 \h  Table 4-12. Text I/O Functions  PAGEREF _Toc481217594 \h  Table 4-13. EFI Control Characters  PAGEREF _Toc481217595 \h  Table 4-14. Math Functions  PAGEREF _Toc481217596 \h  Table 4-15. Spin Lock Functions  PAGEREF _Toc481217597 \h  Table 4-16. Handle and Protocol Support Functions  PAGEREF _Toc481217598 \h  Table 4-17. File I/O Support Functions  PAGEREF _Toc481217599 \h  Table 4-18. Device Path Support Functions  PAGEREF _Toc481217600 \h  Table 4-19. PCI Functions and Macros  PAGEREF _Toc481217601 \h  Table 4-20. Miscellaneous Functions and Macros  PAGEREF _Toc481217602 \h  FIGURES  TOC \t "FigureTitle,2"  Figure 1-2. Memory Layout Conventions  PAGEREF _Toc467576748 \h  Introduction seq chapter \r1 The Extensible Firmware Interface (EFI) Specification describes a set of Application Program Interfaces (APIs) and data structures that are exported by a system s firmware.  During the development of a sample implementation of the EFI Specification, the need arose for a set of library functions to simplify the development process.  These library functions are also useful in the implementation of EFI Shells, EFI Shell commands, EFI Applications, EFI OS loaders, and EFI Device Drivers.  This document describes in detail each of the functions and macros present in the EFI Library along with the constants and global variables that are exported. Organization of this Document This specification is organized as follows:  XE "organization, document"   XE "contents, document"   Table 1-1.1-  seq tbl \* MERGEFORMAT  Specification Organization and Contents Chapter Description Chapter 1: Introduction Provides an overview of the EFI Library Specification. Chapter 2: ConstantsBooting  Definition of constants exported by the EFI Library. Chapter 3: Global VariablesEFI File System Structures Defines file system structures.Definition of global variables allocated by the EFI Library. Chapter  54: Functions and Macros Definition of functions and macros exported by the EFI Library. Goals The primary goal of the EFI Library Specification is to provide documentation for the collection of library functions that are available to EFI firmware developers, EFI shell developers, EFI shell application developers, and shrink wrapped operating system boot loader developers.  These library functions complement those APIs described in the EFI Specification.  The combination of the EFI APIs and the EFI Library functions provide all the functions required for basic console I/O, basic disk I/O, memory management, linked list management, and string manipulation.  In addition, there are miscellaneous functions for 64 bit math operations, CRC checks, spin locks, and helper functions used to managing device handle, device protocols, and device paths. Target Audience This document is intended for the following readers:  XE "target audience"  OEMs who will be creating Intel Architecture-based platforms intended to boot shrink-wrap operating systems. BIOS developers, either those who create general-purpose BIOS and other firmware products or those who modify these products for use in Intel Architecture-based products. Operating system developers who will be adapting their shrink-wrap operating system products to run on Intel Architecture-based platforms. Prerequisite Specifications Extensible Firmware Interface Specification Version 0.9, Intel Corporation, 1999. Conventions Used in This Document This document uses typographic and illustrative conventions described below.  XE "conventions, document"   XE "little endian"  Data Structure Illustrations The Intel Architecture processors of the IA-32 family are  little endian  machines.  This means that the low-order byte of a multibyte data item in memory is at the lowest address, while the high-order byte is at the highest address.  Processors of the IA-64 family may be configured for both  little endian  and  big endian  operation. For the purposes of this specification, illustrations of data structures in memory will always show the lowest addresses at the bottom and the highest addresses at the top of the illustration, as shown in Figure 1-2-  REF Fig_Mem_Layout_Conventions \h  .  Bit positions are numbered from right to left. Figure 1-2.   seq fig \* MERGEFORMAT  . Memory Layout Conventions In some memory layout descriptions, certain fields are marked RESERVED.  Software should initialize these fields as binary zeros, but should otherwise treat them as having a future, though unknown effect. Software should avoid any dependence on the values in the reserved fields. [NB: for this version of the draft, illustrations such as these are not yet present.  They will be added in a future draft version.] Typographic Conventions  XE "typographic conventions"  The following typographic conventions are used in this document to illustrate programming concepts: Prototype This typeface is use to indicate prototype code. Argument This typeface is used to indicate arguments. This typeface is used to indicate actual code or a programming construct. register This typeface is used to indicate a processor register. Constants The following is the list of environment variable name constants that are exported by the EFI Library.  These are environment variable names used by the EFI sample implementation. #define VarLanguageCodes       L"LangCodes"; #define VarLanguage            L"Lang"; #define VarTimeout             L"Timeout"; #define VarConsoleInp          L"ConIn"; #define VarConsoleOut          L"ConOut"; #define VarErrorOut            L"ErrOut"; #define VarBootOption          L"Boot%04x"; #define VarBootOrder           L"BootOrder"; #define VarBootNext            L"BootNext"; #define VarBootCurrent         L"BootCurrent"; #define VarDriverOption        L"Driver%04x"; #define VarDriverOrder         L"DriverOrder"; #define VarSerialNumber        L"SerialNumber"; #define VarSystemGuid          L"SystemGUID"; #define VarConsoleInpDev       L"ConInDev"; #define VarConsoleOutDev       L"ConOutDev"; #define VarErrorOutDev         L"ErrOutDev"; #define LanguageCodeEnglish    "eng" Global Variables There are three global variables exported by the EFI Library that provide access to the EFI System Table (ST), EFI Boot Time Services (BS), and the EFI Run Time Services (RT).  The declaration of these global variables is shown below. extern EFI_SYSTEM_TABLE         *ST; extern EFI_BOOT_SERVICES        *BS; extern EFI_RUNTIME_SERVICES     *RT; A group of EFI_GUID variables are also exported by the EFI Library.  These include protocol GUIDs and other miscellaneous GUIDs used by the EFI sample implementation. extern EFI_GUID DevicePathProtocol; extern EFI_GUID LoadedImageProtocol; extern EFI_GUID TextInProtocol; extern EFI_GUID TextOutProtocol; extern EFI_GUID BlockIoProtocol; extern EFI_GUID DiskIoProtocol; extern EFI_GUID FileSystemProtocol; extern EFI_GUID LoadFileProtocol; extern EFI_GUID DeviceIoProtocol; extern EFI_GUID UnicodeCollationProtocol; extern EFI_GUID SerialIoProtocol; extern EFI_GUID VariableStoreProtocol; extern EFI_GUID LegacyBootProtocol; extern EFI_GUID VgaClassProtocol; extern EFI_GUID TextOutSpliterProtocol; extern EFI_GUID TextInSpliterProtocol; extern EFI_GUID ErrorOutSpliterProtocol; extern EFI_GUID SimpleNetworkProtocol; extern EFI_GUID PxeBaseCodeProtocol; extern EFI_GUID PxeCallbackProtocol; extern EFI_GUID NetworkInterfaceIdentifierProtocol; extern EFI_GUID InternalLoadProtocol; The following are the group of EFI_GUID variables for the EFI Configuration Table entries. extern EFI_GUID EfiGlobalVariable; extern EFI_GUID GenericFileInfo; extern EFI_GUID FileSystemInfo; extern EFI_GUID PcAnsiProtocol; extern EFI_GUID Vt100Protocol; extern EFI_GUID NullGuid; extern EFI_GUID UnknownDevice; The following are the group of EFI_GUID variables for the EFI configuration table entries. extern EFI_GUID MpsTableGuid; extern EFI_GUID AcpiTableGuid; extern EFI_GUID SMBIOSTableGuid; extern EFI_GUID SalSystemTableGuid; There are also three Device Path data structures that are exported by the EFI Library.  These are used to build complete device paths. extern EFI_DEVICE_PATH RootDevicePath[]; extern EFI_DEVICE_PATH EndDevicePath[]; extern EFI_DEVICE_PATH EndInstanceDevicePath[]; The following is the global I/O Device I/O Protocol interface used to access the root PCI bus. extern EFI_DEVICE_IO_INTERFACE  *GlobalIoFncs; The following is the default memory allocation type for the EFI Library memory allocation functions. extern EFI_MEMORY_TYPE PoolAllocationType; Functions and Macros The functions and macros exported by the EFI Library are grouped as follows: Initialization Functions Linked List Support Macros String Functions Memory Support Functions CRC Support Functions Text I/O Functions Math Functions Spin Lock Functions Handle and Protocol Functions File I/O Support Functions Device Path Support Functions Miscellaneous Functions Initialization Functions The initialization functions in the EFI Library are used to initialize the execution environment so that other EFI Library function may be used.  Table 4-1 lists the initialization support functions that are described in the following sections. Table 4-1. Initialization Functions Description InitializeLib Initializes the EFI Library. InitializeUnicodeSupport Initializes the use of language dependant EFI Library functions. InitializeLib Function  XE "BLOCK_IO.Reset Function"  The InitializeLib() function initializes the EFI Library. InitializeLib (     IN EFI_HANDLE           ImageHandle,     IN EFI_SYSTEM_TABLE     *SystemTable     ); Parameters ImageHandle  A handle for the image that is initializing the library. SystemTable  A pointer to the EFI system table. Description This function must be called to enable the use of all the EFI Library functions.  Additional calls to this function are ignored.  This function initializes all the global variables required by the EFI Library functions.  In addition, it verifies the CRCs for all the EFI system tables. InitializeUnicodeSupport Function  XE "BLOCK_IO.Reset Function"  The InitializeUnicodeSupport() function initializes the use of the language dependant EFI Library functions. InitializeUnicodeSupport (     IN CHAR8           *LangCode,     ); Parameters LangCode  The 3 character ISO 639.2 language code. Description This function must be called to enable the use of all the language dependent EFI Library functions.  By default, the InitializeLib() function calls InitializeUnicodeSupport().  The only reason that this function would be called is to select a language other than the default one. Linked List Support Macros The EFI Library supplies a set of macros that allow doubly linked lists to be created and maintained.  The head node of a doubly linked list is a LIST_ENTRY data structure.  Each of the nodes in the linked list must also contain a LIST_ENTRY data structure.  The LIST_ENTRY data structure simply contains a forward link and a backward link.  The following is the definition of the LIST_ENTRY data structure. typedef struct _LIST_ENTRY {     struct _LIST_ENTRY  *Flink;     struct _LIST_ENTRY  *Blink; } LIST_ENTRY; Table 4-2 contains the list of macros that are described in the following sections. Table 4-2. Linked List Support Macros Description InitializeListHead Initializes the head node of a doubly linked list. IsListEmpty Determines if a doubly linked list is empty. RemoveEntryList Removes a node from a doubly linked list. InsertTailList Adds a node to the end of a double linked list. InsertHeadList Adds a node to the beginning of a doubly linked list. InitializeListHead Macro The InitializeListHead() macro initializes the head node of a doubly linked list. InitializeListHead(     LIST_ENTRY *ListHead     ); Parameters ListHead  A pointer to the head node of a new doubly linked list. Description This macro initializes the forward and backward links of a new linked list.  After initializing a linked list with this macro, the other linked list macros may be used to add and remove nodes from the linked list.  It is up to the caller of this macro to allocate the memory for ListHead. IsListEmpty Macro The IsListEmpty() macro checks to see if a doubly linked list is empty or not. BOOLEAN IsListEmpty(     LIST_ENTRY *ListHead     ); Parameters ListHead  A pointer to the head node of a doubly linked list. Description This macro checks to see if the doubly linked list is empty.  If the linked list contains zero nodes, this macro returns TRUE.  Otherwise, it returns FALSE. Status Codes Returned The linked list is empty FALSE The linked list is not empty RemoveEntryList Macro The RemoveEntryList() macro removes a node from a doubly linked list. RemoveEntryList(     LIST_ENTRY *Entry     ); Parameters Entry  A pointer to a node in a linked list Description This macro removes the node Entry from a doubly linked list.  It is up to the caller of this macro to release the memory used by this node if that is required. InsertTailList Macro The InsertTailList() macro adds a node to the end of a doubly linked list. InsertTailList(     LIST_ENTRY *ListHead,     LIST_ENTRY *Entry     ); Parameters ListHead  A pointer to the head node of a doubly linked list. Entry  A pointer to a node that is to be added at the end of the doubly linked list. Description This macro adds the node Entry to the end of the doubly linked list denoted by ListHead. InsertHeadList Macro The InsertHeadList() macro adds a node to the beginning of a doubly linked list. InsertHeadList(     LIST_ENTRY *ListHead,     LIST_ENTRY *Entry     ); Parameters ListHead  A pointer to the head node of a doubly linked list. Entry  A pointer to a node that is to be inserted at the beginning of a doubly linked list. Description This macro adds the node Entry at the beginning of the doubly linked list denoted by ListHead. String Functions The string functions in the EFI Library perform operations on Unicode and ASCII string.  Table 4-3 contains the list of string support functions that are described in the following sections. Table 4-3. String Functions Description StrCmp Compares two Unicode strings. StrnCmp Compares a portion of two Unicode strings. StriCmp Performs a case insensitive comparison of two Unicode strings. StrCpy Copies one Unicode string to another Unicode string. StrCat Concatenates two Unicode strings. StrLen Determines the length of a Unicode string. StrSize Determines the size of a Unicode string in bytes. StrDuplicate Creates a duplicate of a Unicode string. StrLwr Converts characters in a Unicode string to upper case characters. StrUpr Converts characters in a Unicode string to lower case characters. strlena Determines the length of an ASCII string. strcmpa Compares two ASCII strings. strncmpa Compares a portion of two ASCII strings. Converts a hexadecimal formatted Unicode string to an integer. Converts a decimal formatted Unicode string to an integer. MetaMatch Checks to see if a Unicode string matches a given pattern.  MetaiMatch Performs a case insensitive comparison of a Unicode pattern string and a Unicode string.  ValueToString Converts an integer to a decimal formatted Unicode string. ValueToHex Converts an integer to a hexadecimal formatted Unicode string. TimeToString Converts a data structure containing the time and date into a Unicode string. GuidToString Converts a 128 bit GUID into a Unicode string. StatusToString Converts an EFI_STATUS value into a Unicode string. DevicePathToStr Converts a device path data structure into a Unicode string. StrCmp Function The StrCmp() function compares two Unicode strings. StrCmp (     IN CHAR16   *s1,     IN CHAR16   *s2     ); Parameters Pointer to a Null-terminated Unicode string. Pointer to a Null-terminated Unicode string. Description This function compares the Unicode string s1 to the Unicode string s2.  If s1 is identical to s2, then 0 is returned.  Otherwise, the difference between the first mismatched Unicode characters is returned. Status Codes Returned s1 is identical to s2. s1 is not identical to s2. StrnCmp Function The StrnCmp() function compares a portion of two Unicode strings. StrnCmp (     IN CHAR16   *s1,     IN CHAR16   *s2,     IN UINTN     ); Parameters Pointer to a Null-terminated Unicode string. Pointer to a Null-terminated Unicode string. Description This function compares len Unicode characters from s1 to len Unicode characters from s2.  If all len characters from s1 and s2 are identical, then 0 is returned.  Otherwise, the difference between the first mismatched ASCII characters is returned. Status Codes Returned s1 is identical to s2. s1 is not identical to s2. StriCmp Function The StriCmp() function performs a case insensitive comparison of two Unicode strings. StriCmp (     IN CHAR16   *s1,     IN CHAR16   *s2     ); Parameters Pointer to a Null-terminated Unicode string. Pointer to a Null-terminated Unicode string. Description This function performs a case insensitive comparison between the Unicode string s1 and the Unicode string s2 using the rules for the currently selected language code.  If s1 is equivalent to s2, then 0 is returned.  If s1 is lexically less than s2, then a negative number will be returned.  If s1 is lexically greater than s2, then a positive number will be returned.  This function allows Unicode strings to be compared and sorted. Status Codes Returned s1 is equivalent to s2. s1 is lexically greater than s2 s1 is lexically less than s2  StrCpy Function The StrCpy() function copies one Unicode string to another Unicode string. StrCpy (     IN CHAR16   *Dest,     IN CHAR16   *Src     ); Parameters Dest  Pointer to a Null-terminated Unicode string. Pointer to a Null-terminated Unicode string. Description This function copies the contents of the Unicode string Src to the Unicode string Dest. StrCat Function The StrCat() function concatenates one Unicode string to another Unicode string. StrCat (     IN CHAR16   *Dest,     IN CHAR16   *Src     ); Parameters Dest  Pointer to a Null-terminated Unicode string. Pointer to a Null-terminated Unicode string. Description This function concatenates two Unicode string.  The contents of Unicode string Src are concatenated to the end of Unicode string Dest. StrLen Function The StrLen() function determines the length of a Unicode string. UINTN StrLen (     IN CHAR16   *s1     ); Parameters Pointer to a Null-terminated Unicode string. Description This function returns the number of Unicode characters in the Unicode string s1. StrSize Function The StrSize() function determines the size of a Unicode string in bytes. UINTN StrSize (     IN CHAR16   *s1     ); Parameters Pointer to a Null-terminated Unicode string. Description This function returns the size of the Unicode string s1 in bytes. StrDuplicate Function The StrDulicate() function duplicates a Unicode string. CHAR16 * StrDuplicate (     IN CHAR16   *Src     ); Parameters Pointer to a Null-terminated Unicode string. Description This function creates a returns a new copy of the Unicode string Src.  The memory for the new string is allocated from pool. StrLwr Function The StrLwr() function converts all the characters in a Unicode string to lower case. StrLwr (     IN CHAR16   *Str     ); Parameters Pointer to a Null-terminated Unicode string. Description This function converts all the characters in the Unicode string Str to lower case characters. StrUpr Function The StrUpr() function converts all the characters in a Unicode string to upper case. StrUpr (     IN CHAR16   *Str     ); Parameters Pointer to a Null-terminated Unicode string. Description This function converts all the characters in the Unicode string Str to upper case characters. strlena Function The strlena() function determines the length of an ASCII string. UINTN strlena (     IN CHAR8    *s1     ); Parameters Pointer to a Null-terminated ASCII string. Description This function returns the length of the ASCII string s1. strcmpa Function The strcmpa() function compares two ASCII strings. UINTN strcmpa (     IN CHAR8    *s1,     IN CHAR8    *s2     ); Parameters Pointer to a Null-terminated ASCII string. Pointer to a Null-terminated ASCII string. Description This function compares the contents of the ASCII string s1 to the contents of the ASCII string s2.  If s1 is identical to s2, then 0 is returned.  Otherwise, the difference between the first mismatched ASCII characters is returned. Status Codes Returned s1 is identical to s2. s1 is not identical to s2 strncmpa Function The strncmpa() function compares a portion of two ASCII strings. UINTN strncmpa (     IN CHAR8    *s1,     IN CHAR8    *s2,     IN UINTN    len     ); Parameters Pointer to an ASCII string. Pointer to an ASCII string. Number of ASCII character to compare. Description This function compares len ASCII characters from s1 to len ASCII characters from s2.  If all len characters from s1 and s2 are identical, then 0 is returned.  Otherwise, the difference between the first mismatched ASCII characters is returned. Status Codes Returned s1 is identical to s2 for the first len characters. s1 is not identical to s2 for the first len characters. xtoi Function The xtoi() function converts a hexadecimal formatted Unicode string to a value. UINTN xtoi (     IN CHAR16      *str     ); Parameters Pointer to a Null-terminated Unicode string. Description This function converts the hexadecimal formatted Unicode string str into an integer and returns that integer.  Any preceding white space in str is ignored. Atoi Function The Atoi() function converts a decimal formatted Unicode string to a value. UINTN Atoi (     IN CHAR16  *str     ); Parameters Pointer to a Null-terminated Unicode string. Description This function converts the decimal formatted Unicode string str into an integer and returns that integer.  Any preceding white space in str is ignored. MetaMatch Function The MetaMatch() function checks to see if a Unicode string matches a given pattern. BOOLEAN  MetaMatch (     IN CHAR16   *String,     IN CHAR16   *Pattern     ); Parameters String  Pointer to a Null-terminated Unicode string. Pattern  Pointer to a Null-terminated Unicode string. Description This function checks to see if the pattern of characters described by Pattern is found in String.  If the pattern match succeeds, then TRUE is returned.  Otherwise FALSE is returned.  The following syntax can be used to build the string Pattern. Match 0 or more characters. Match any one character. [<char1><char2> <charN>] Match any character in the set. [<char1>-<char2>] Match any character between <char1> and <char2>. <char> Match the character <char>. Examples patterns: Match all strings that end in  [a-z] Match any lower case character.  [!@#$%^&*()] Match any one of these symbols. Match the lower case character z. DATA?.* Match the string   followed by any character followed by a   followed by any string. Status Codes Returned Pattern was found in String FALSE Pattern was not found in String MetaiMatch  XE "SIMPLE_INPUT_INTERFACE.ReadKeyStroke function"   XE "function:SIMPLE_INPUT_INTERFACE.ReadKeyStroke"   Function  The MetaiMatch() function performs a case insensitive comparison of a Unicode pattern string and a Unicode string. BOOLEAN MetaiMatch ( IN CHAR16 *String, IN CHAR16 *Pattern Parameters String A pointer to a Unicode string. Pattern A pointer to a Unicode pattern string. Description This function checks to see if the pattern of characters described by Pattern are found in String.  The pattern check is a case insensitive comparison using the rules for the currently selected language code.  If the pattern match succeeds, then TRUE is returned.  Otherwise FALSE is returned.  The following syntax can be used to build the string Pattern. Match 0 or more characters. Match any one character. [<char1><char2> <charN>] Match any character in the set. [<char1>-<char2>] Match any character between <char1> and <char2>. <char> Match the character <char>. Examples patterns (for English): Matches all strings that end in  [a-z] Match any letter in the alphabet.  [!@#$%^&*()] Match any one of these symbols. Match the character  Match the character   followed by any character followed by a   followed by any string. Status Codes Returned Pattern was found in String FALSE Pattern was not found in String ValueToString Function The ValueToString() function converts an integer to decimal formatted Unicode string. ValueToString (     IN CHAR16   *Buffer,     IN BOOLEAN  Comma,     IN INT64    v     ); Parameters Buffer  Pointer to the Unicode string that will be returned by this function. Comma  Tells if the converted string should be formatted with commas or not. The integer value that is to be converted into a string. Description This function converts the integer v into a decimal formatted Unicode string.  If Comma is TRUE, then the string is formatted with commas.  Otherwise, it is not formatted with commas.  The converted string is returned in Buffer. ValueToHex Function The ValueToHex() function converts an integer to hexadecimal formatted Unicode string. ValueToHex (     IN CHAR16   *Buffer,     IN UINT64   v     ); Parameters Buffer  Pointer to the Unicode string that will be returned by this function. The integer value that is to be converted into a string. Description This function converts the integer v into a hexadecimal formatted Unicode string. The converted string is returned in Buffer. TimeToString Function The TimeToString() function converts the time and date stored in a data structure into a Unicode string. TimeToString (     OUT CHAR16      *Buffer,     IN EFI_TIME     *Time     ); Parameters Buffer  Pointer to the Unicode string that will be returned by this function. Time  Pointer to a data structure containing the time and date. Description This function converts the EFI_TIME data structure Time in the Unicode string Buffer.  The format of the Unicode string is: MM/DD/YY hh:mmA Month Day of the month Minutes AM/PM field.    for AM and    for PM. GuidToString Function The GuidToString() function converts a GUID data structure into a Unicode string. GuidToString (     OUT CHAR16      *Buffer,     IN EFI_GUID     *Guid     ); Parameters Buffer  Pointer to the Unicode string that will be returned by this function. Guid  Pointer to a data structure containing the GUID. Description This function converts an EFI_GUID data structure Guid into the Unicode string Buffer.  The format of the string is: LLLLLLLL-MMMM-HHHH-hh-ll-NNNNNNNNNNNN  LLLLLLLL The time_low field. The time_mid field. The time_hi_and_version field. The clock_sequence_high_and_reserved field. The clock_seq_low field. NNNNNNNNNNNN The node identifier.  This is typically an ethernet hardware ID. StatusToString Function The StatusToString() function converts an EFI_STATUS value into a Unicode string. StatusToString (     OUT CHAR16      *Buffer,     EFI_STATUS      Status     ); Parameters Buffer  Pointer to the Unicode string that will be returned by this function. Status  EFI_STATUS value. Description This function converts the EFI_STATUS value Status into the Unicode string Buffer.  Table  4-4 shows how EFI_STATUS values are converted to strings. Table 4-4. EFI_STATUS Output Formats EFI_STATUS Output Format EFI_SUCCESS Success EFI_LOAD_ERROR Load Error EFI_INVALID_PARAMETER Invalid Parameter EFI_UNSUPPORTED Unsupported EFI_BAD_BUFFER_SIZE Bad Buffer Size EFI_BUFFER_TOO_SMALL Buffer Too Small EFI_NOT_READY Not Ready EFI_DEVICE_ERROR Device Error EFI_WRITE_PROTECTED Write Protected EFI_OUT_OF_RESOURCES Out of Resources EFI_VOLUME_CORRUPTED Volume Corrupt EFI_VOLUME_FULL Volume Full EFI_NO_MEDIA No Media EFI_MEDIA_CHANGED Media Changed EFI_NOT_FOUND Not Found EFI_ACCESS_DENIED Access Denied EFI_NO_RESPONSE No Response EFI_NO_MAPPING No mapping EFI_TIMEOUT Time out EFI_NOT_STARTED Not started EFI_ALREADY_STARTED Already started EFI_ABORTED Aborted EFI_ICMP_ERROR ICMP Error EFI_TFTP_ERROR TFTP Error EFI_PROTOCOL_ERROR Protocol Error EFI_WARN_UNKOWN_GLYPH Warning Unknown Glyph EFI_WARN_DELETE_FAILED Warning Delete Failed EFI_WARN_WRITE_FAILURE Warning Write Failure EFI_WARN_BUFFER_TOO_SMALL Warning Buffer Too Small DevicePathToStr Function The DevicePathToStr() function converts a device path data structure into a printable Null-terminated Unicode string. CHAR16 * DevicePathToStr (     EFI_DEVICE_PATH         *DevPath     ); Parameters DevPath  A pointer to a device path data structure. Description This function converts a device path data structure into a Null-terminated Unicode string.  The memory for the Unicode string is allocated from pool, and a pointer to the Unicode string is returned.  Tables 4-5, 4-6, 4-7, and 4-8 show the conversions from the different device path types into printable strings.  Device path nodes are separated by a   and device path instances are separated by a  Table 4-5. Hardware Device Path Output Formats  Hardware Device Path Type Output Format PCI Device Path PCI(<Device Number>|<Function Number>) PCCARD Device Path Pccard(Socket<Socket Number>) Memory Device Path MemMap(<Memory Type>:<Starting Address>-<Ending Address>) Controller Device Path Ctlr(<Controller>) Vendor Device Path VenHw(<Vendor GUID>) Vendor Device Path(Legacy) VenHw(<Vendor GUID>:<Legacy Drive Letter>) ACPI Device Path Acpi(<ACPI HID>,<ACPI UID>) ACPI Device Path(EISA) Acpi(PNP<ACPI HID>,<ACPI UID>) Unknown Table 4-6. Messaging Device Path Output Formats  Messaging Device Path Type Output Format ATAPI  ATA(<Primary/Secondary>,<Master/Slave>) Scsi(<PUN>,<LUN>) FibreChannel Fibre(<WWN>) 1394(<GUID>) Usb(<Port>) I2O(<TID>) MAC Address MAC(<MAC address>) IPv4(not-done) "IP-v6(not-done)" InfiniBand InfiniBand(not-done) Uart(<Baud Rate>,<Parity>,<Data Bits>,<Stop Bits>) Vendor  VenMsg(<Vendor GUID>) Vendor(Legacy) VenMsg(<Vendor GUID>:<Legacy Drive Letter>) Unknown Table 4-7. Media Device Path Output Formats  Media Device Path Type Output Format Hard Drive HD(Part<Partition Number>,Sig<Signature>) CDROM CDROM(Entry<Boot Entry>) Vendor  VenMedia(<Vendor GUID>) Vendor(Legacy) VenMedia(<Vendor GUID>:<Legacy Drive Letter>) FilePath <File Name> Protocol "<Protocol GUID>" Unknown Table 4-8. BSS Device Path Output Formats  BSS Device Path Type Output Format Floppy Floppy HardDrive Harddrive CDROM  CDROM PCMCIA PCMCIA Embedded Network Other Unknown Memory Support Functions The EFI Library provides a set of functions that operating on buffers in memory.  Buffers can either be allocated on the stack, as global variables, or from the memory pool.  To prevent memory leaks, it is the caller s responsibility to maintain buffers allocated from pool.  This means that the caller must free a buffer when that buffer is no longer needed.  Table 4-9 contains the list of memory support functions that are described in the following sections. Table 4-9. Memory Support Functions Description ZeroMem Fills a buffer with zeros. SetMem Fills a buffer with a value.. CopyMem Copies the contents of one buffer to another buffer. CompareMem Compares the contents of two buffers. AllocatePool Allocates a buffer from pool. AllocateZeroPool Allocates a buffer from pool and fills it with zeros. ReallocatePool Adjusts the size of a previously allocated buffer. FreePool Frees a previously allocated buffer. GrowBuffer Allocates a new buffer or grows the size of a previously allocated buffer. LibMemoryMap Retrieves the system s current memory map. ZeroMem Function The ZeroMem() function fills a buffer with zeros.  ZeroMem (     IN VOID     *Buffer,     IN UINTN     Size     ); Parameters Buffer  Pointer to the buffer to zero. Number of bytes to zero in Buffer. Description This functions fills Size bytes of Buffer with zeros. SetMem Function The SetMem() function fills a buffer with a value..  SetMem (     IN VOID     *Buffer,     IN UINTN    Size,     IN UINT8    Value         ); Parameters Buffer  Pointer to the buffer to fill. Size  Number of bytes in Buffer to fill. Value  Value to fill Buffer with. Description This function fills Size bytes of Buffer with Value. CopyMem Function The CopyMem() function copies the contents of one buffer to another buffer. CopyMem (     IN VOID     *Dest,     IN VOID     *Src,     IN UINTN    len     ); Parameters Dest  Pointer to the destination buffer of the memory copy. Pointer to the source buffer of the memory copy. Number of bytes to copy from Src to Dest. Description This function copies len bytes from the buffer Src to the buffer Dest. CompareMem Function The CompareMem() function compares the contents of two buffers. CompareMem (     IN VOID     *Dest,     IN VOID     *Src,     IN UINTN    len     ); Parameters Dest  Pointer to the Buffer to compare. Pointer to the Buffer to compare. Number of bytes to compare. Description This function compares len bytes of Src to len bytes of Dest.  If the two buffers are identical for len bytes, then 0 is returned.  Otherwise, the difference between the first two mismatched bytes is returned. Status Codes Returned Dest is identical to Src for len bytes Desk is not identical to Src for len bytes  AllocatePool Function The AllocatePool() function allocates a buffer from memory with type PoolAllocationType. VOID * AllocatePool (     IN UINTN     Size     ); Parameters Size  The size of the buffer to allocate from pool. Description This function attempts to allocate Size bytes from memory with type PoolAllocationType. If  the memory allocation fails, NULL is returned.  Otherwise a pointer to the allocated buffer is returned.  AllocateZeroPool Function The AllocatePool() function allocates and zeros buffer from memory. VOID * AllocateZeroPool (     IN UINTN     Size     ); Parameters Size  The size of the buffer to allocate from pool. Description This function attempts to allocate Size bytes from memory. If  the memory allocation fails, NULL is returned.  Otherwise, Size bytes of the allocated buffer are set to zero, and a pointer to the allocated buffer is returned.  ReallocatePool Function The ReallocatePool() function adjusts the size of a previously allocated buffer. VOID * ReallocatePool (     IN VOID                 *OldPool,     IN UINTN                OldSize,     IN UINTN                NewSize     ); Parameters OldPool  A pointer to the buffer whose size is being adjusted. OldSize  The size of the current buffer. NewSize  The size of the new buffer. Description This function changes the size of a buffer allocated from pool from OldSize to NewSize.  The contents of the old buffer are copied to the new buffer.  If NewSize is zero, then OldPool is freed, and NULL is returned.  If NewSize is not zero, and the new buffer can not be allocated, then NULL is returned.  If NewSize is not zero, and the new buffer can be allocated, then the contents of OldPool are copied to the new buffer, OldPool is freed, and a pointer to the new buffer is returned. FreePool Function The FreePool() function releases a previously allocated buffer. FreePool (     IN VOID     *p     ); Parameters A pointer to the buffer to free. Description The free memory is returned to the available pool.  The buffer p must have been allocated with AllocatePool(). GrowBuffer Function The GrowBuffer() function either allocates a new buffer or it increases the size of a previously allocated buffer. BOOLEAN GrowBuffer(     IN OUT EFI_STATUS   *Status,     IN OUT VOID         **Buffer,     IN UINTN            BufferSize     ); Parameters Status  Status from the last EFI API call. Buffer  A pointer to the buffer to grow. BufferSize  The new size of the buffer. Description If Buffer is NULL on entry, then this function will attempt to allocate a new buffer with size BufferSize.  If the buffer is allocated, then Buffer will point to the new buffer, Status will be EFI_SUCCESS, and the function will return TRUE.  If the buffer can not be allocated, then Buffer will be set to NULL, Status will be set to EFI_OUT_OF_RESOURCES, and the function will return FALSE. If Buffer is not NULL and Status is EFI_BUFFER_TOO_SMALL, then this function will free the old buffer, and attempt to reallocate a new buffer with size BufferSize.  If that reallocation succeeds, then Buffer will point to the reallocated buffer, Status will be EFI_SUCCESS, and the function will return TRUE.  If the buffer can not be reallocated, then Buffer will be set to NULL, Status will be set to EFI_OUT_OF_RESOURCES, and the function will return FALSE. If Buffer is not NULL, and Status is not EFI_BUFFER_TOO_SMALL, then the buffer will be freed, Buffer will be set to NULL, and the function will return FALSE. The main purpose of this function is to retry an EFI API call until a buffer of the appropriate size is allocated.  The following is an example of how to use the GrowBuffer() function.  The first pass through the while loop uses the GrowBuffer() function to allocate a new 100 byte buffer.  If the GetVariable() API call needs more than 100 bytes, it will return with status EFI_BUFFER_TOO_SMALL.  Also, BufferSize will be set to the number of bytes required for the call to GetVariable() to succeed.  So, the next iteration through the while loop will call GrowBuffer() again.  This time, the buffer will be reallocated to the size required by GetVariable().  So, the next call to GetVariable() will succeed, and the buffer used to store the variable will be exactly the right size. EFI_STATUS              Status; VOID                    *Buffer; UINTN                   BufferSize; Buffer = NULL; BufferSize = 100; while (GrowBuffer (&Status, &Buffer, BufferSize)) {     Status = RT->GetVariable(Name,                              VendorGuid,                              NULL,                              &BufferSize,                              Buffer); Status Codes Returned The buffer was reallocated. FALSE The buffer could not be reallocated. LibMemoryMap Function The LibMemoryMap() function retrieves the systems current memory map. EFI_MEMORY_DESCRIPTOR * LibMemoryMap (     OUT UINTN                *NoEntries,     OUT UINTN                *MapKey     OUT UINTN                *DescriptorSize     OUT UINT32               *DescriptorVersion     ); Parameters NoEntries  A pointer to the number of memory descriptors in the system. MapKey  A pointer to the current memory map key. DescriptorSize A pointer to the size in bytes of a memory descriptor. DescriptorVersion A pointer to version of the memory descriptor.. Description This function retrieves and returns the system s current memory map.  The number of memory map entries is returned in NoEntries, and the size of each entry in bytes is returned in DescriptorSize.  Also, the version of the memory descriptor data structure is returned in DescriptorVersion, and the key for the current memory map is returned in MapKey.  The storage for the memory map is allocated by this function from pool. CRC Support Functions The EFI Library provides a set of functions that are used to compute and verify CRC32 values.  The main purpose of these function is to initialize the CRC field in a table header, or to verify the CRC field in a table header.  Table 4-10 contains the list of CRC support functions that are described in the following sections. Table 4-10. CRC Support Functions Description SetCrc Computes and updates the CRC32 value for a table header. SetCrcAltSize Computes and updates the CRC32 value for a portion of a table header. CheckCrc Verifies the CRC32 value for a table header. CheckCrcAltSize Verifies the CRC32 value for a portion of a table header. CalculateCrc Compute the CRC32 value of a data buffer.  SetCrc Function The SetCrc() function computes and updates the CRC32 value in a table header. SetCrc (     IN OUT EFI_TABLE_HEADER *Hdr     ); Parameters A pointer to a table header. Description This function calculates the 32 bit CRC for a table header, and fills in the CRC32 field of that table header with the computed value. SetCrcAltSize Function The SetCrcAltSize() function computes and updates the CRC32 value for a portion of  a table header. SetCrcAltSize (     IN UINTN                 Size,     IN OUT EFI_TABLE_HEADER *Hdr     ); Parameters Size  Number of bytes to include in the CRC32 calculation. A pointer to a table header. Description This function calculates the 32 bit CRC for the first Size bytes a table header, and fills in the CRC32 field of that table header with the computed value. CheckCrc Function The CheckCrc() function verifies the CRC32 value in a table header. BOOLEAN CheckCrc (     IN UINTN                 MaxSize,     IN OUT EFI_TABLE_HEADER *Hdr     ); Parameters MaxSize  The maximum size for which a CRC32 check will be performed. A pointer to a table header. Description This function computes the CRC32 value for a table header, and verifies that it matches the CRC32 value currently stored in the table header.  If the CRCs match, TRUE is returned.  Otherwise, FALSE is returned.  If MaxSize is not zero, and the size of the table header is greater than MaxSize, then FALSE is returned. Status Codes Returned The CRC32 value was verified. FALSE The CRC32 value was not verified. CheckCrcAltSize Function The CheckCrc() function verifies the CRC32 value in a table header. BOOLEAN CheckCrcAltSize (     IN UINTN                 MaxSize,     IN UINTN                 Size,     IN OUT EFI_TABLE_HEADER *Hdr     ); Parameters MaxSize  The maximum size for which a CRC32 check will be performed. Size  The number of bytes to include in the CRC32 check. A pointer to a table header. Description This function computes the CRC32 value for the first Size bytes of a table header, and verifies that it matches the CRC32 value currently stored in the table header.  If the CRCs match, TRUE is returned.  Otherwise, FALSE is returned.  If MaxSize is not zero, and the size of the table header is greater than MaxSize, then FALSE is returned. Status Codes Returned  The CRC32 value was verified. FALSE The CRC32 value was not verified. CalculateCrc Function The CalculateCrc() computes the CRC32 value. UINT32 CalculateCrc (     IN UINT8                *pt,     IN UINTN                 Size     ); Parameters Pointer to data buffer upon which the CRC calculation will be computed. Size  The number of bytes to include in the CRC32 calculation. Description This function computes the CRC32 value for the Size bytes of a data buffer referenced by the pointer pt.  The result is returned as an UINT32 value.  If size of zero is entered, the result will be zero. Text I/O Functions The Text I/O functions in the EFI Library provide a simple means to get input and output from a console device.  Many of the output functions use a format string to describe how to format the output of variable arguments.  The format string consists of normal text and argument descriptors.  There are no restrictions for how the normal text and argument descriptors can be mixed.  Each argument descriptor is of the form  %w.lF , where   is an optional integer value that represents the argument width parameter,   is an optional integer value that represents the field width parameter, and   is a set of optional field modifiers, and the data type of the argument to print.  Table 4-11 lists the optional field modifiers and arguments types. Table 4-11. Format string attribute and argument specification Description Pad the field with zeros Left justify the argument in the field. Insert commas in a decimal formatted integer. The field width is provided as an argument. Set the output attribute for this field to normal. Set the output attribute for this field to highlight. Set the output attribute for this field to error. The argument value is 64 bits.  The default is a 32 bit argument. The argument is an ASCII string. The argument is a Unicode string. Print the argument as a hexadecimal value padded with zeros.  The field width defaults to 8 for 32 bit arguments, and 16 for 64 bit arguments.  Print the argument as a hexadecimal value. Print the argument as a decimal value with optional commas. The argument is a Unicode character. The argument is a pointer to an EFI_TIME data structure.  Please see the TimeToString() function for the output format of this field. The argument is a pointer to a EFI_GUID data structure.  Please see the GuidToString() function for the output format of this field. The argument is an EFI_STATUS value.  Please see the StatusToString() function for the output format of this field. Set the output attribute to normal. Set the output attribute to highlight. Set the output attribute to error. Table 4-12 contains the list of Text I/O functions that are described in the following sections. Table 4-12. Text I/O Functions Description Input Input a Unicode string at the current cursor location using the console in and console out device. Iinput Input a Unicode string at the current cursor location using the specified input and output devices. Output Send a Unicode string to the console out device at the current cursor location. Print Sends a formatted Unicode string to the console out device at the current cursor location.. PrintAt Sends a formatted Unicode string to the specified location on the console out device.  Iprint Sends a formatted Unicode string to the specified output device. IprintAt Sends a formatted Unicode string to the specified location of the specified console device. Aprint Sends a formatted Unicode string to the console out device using an ASCII format string. Sprint Sends a formatted Unicode string to the specified buffer. PoolPrint Sends a formatted Unicode string to a buffer allocated from pool. CatPrint Concatenates a formatted Unicode string to a string allocated from pool. DumpHex Prints the contents of a buffer in hexadecimal format. LibIsValidTextGraphics Decide if Graphic is a supported Unicode Box Drawing character. IsValidAscii Decide if character is legal ASCII element. IsValidEfiCntlChar Decide if character is an EFI Control character. Input Function The Input() function reads a Unicode string form the console in device at the current cursor location. Input (     IN CHAR16   *Prompt OPTIONAL,     OUT CHAR16  *InStr,     IN UINTN    StrLen     ); Parameters Prompt  A pointer to a Unicode string. InStr  A pointer to the Unicode string used to store the string read from the console in device. StrLen  The maximum length of the Unicode string to read from the console in device. Description If Prompt is not NULL, then Prompt is displayed on the console out device.  Then, characters are read from the console in device and displayed on the console out device.  In addition, these characters are stored in InStr until either a   or a   character is received.  If the backspace key is pressed, then the last character is InStr is removed, and the display is updated to show that the character has been erased.  If more than StrLen characters are received, then the extra characters are ignored.  IInput Function The IInput() function reads a Unicode string form the specified device at the current cursor location. IInput (     IN SIMPLE_TEXT_OUTPUT_INTERFACE     *ConOut,     IN SIMPLE_INPUT_INTERFACE           *ConIn,     IN CHAR16                           *Prompt OPTIONAL,     OUT CHAR16                          *InStr,     IN UINTN                            StrLen     ); Parameters ConOut  A pointer to the output device s interface protocol. ConIn  A pointer to the input device s interface protocol. Prompt  A pointer to a Unicode string. InStr  A pointer to the Unicode string used to store the string read from the input device. StrLen  The maximum length of the Unicode string to read from the input device. Description If Prompt is not NULL, then Prompt is displayed on the ConOut device.  Then, characters are read from the ConIn device and displayed on the ConOut device.  In addition, these characters are stored in InStr until either a   or a   character is received.  If the backspace key is pressed, then the last character is InStr is removed, and the ConOut device is updated to show that the character has been erased.  If more than StrLen characters are received from the ConIn device, then the extra characters are ignored. Output Function The Output() function sends a Unicode string to the console out device at the current cursor location. Output (     IN CHAR16   *Str     ); Parameters A pointer to a Unicode string. Description This function sends the Unicode string Str to the console out device specified in the system table. Print Function The Print() function sends a formatted Unicode string to the console out device at the current cursor location. UINTN Print (     IN CHAR16   *fmt,     ...     ); Parameters A pointer to a Unicode string containing format information. Variable length argument list. Description This function uses the format string fmt and the variable argument list to build a formatted Unicode string.  This formatted Unicode string is then sent to the console out device.  The length of the formatted Unicode string is returned. PrintAt Function The PrintAt() function sends a formatted Unicode string to the console out device at the specified cursor location. UINTN PrintAt (     IN UINTN    Column,     IN UINTN    Row,     IN CHAR16   *fmt,     ...     ); Parameters Column  The column number on the console out device. The row number on the console out device. A pointer to a Unicode string containing format information. Variable length argument list. Description This function uses the format string fmt and the variable argument list to build a formatted Unicode string.  This formatted Unicode string is then sent to the console out device at the cursor location specified by Column and Row.  The length of the formatted Unicode string is returned. IPrint Function The IPrint() function sends a formatted Unicode string to the specified device at the current cursor location. UINTN IPrint (     IN SIMPLE_TEXT_OUTPUT_INTERFACE    *Out,     IN CHAR16                          *fmt,     ...     ); Parameters A pointer to the output devices interface protocol.. A pointer to a Unicode string containing format information. Variable length argument list. Description This function uses the format string fmt and the variable argument list to build a formatted Unicode string.  This formatted Unicode string is then sent to the device specified by Out at the current cursor location.  The length of the formatted Unicode string is returned. IPrintAt Function The IPrintAt() function sends a formatted Unicode string to the specified device at the specified cursor location. UINTN IPrintAt (     IN SIMPLE_TEXT_OUTPUT_INTERFACE     *Out,     IN UINTN                            Column,     IN UINTN                            Row,     IN CHAR16                           *fmt,     ...     ); Parameters A pointer to the output devices interface protocol.. Column  The column number on the console out device. The row number on the console out device. A pointer to a Unicode string containing format information. Variable length argument list. Description This function uses the format string fmt and the variable argument list to build a formatted Unicode string.  This formatted Unicode string is then sent to the device specified by Out at the cursor location specified by Column and Row.  The length of the formatted Unicode string is returned. APrint Function The APrint() function sends a formatted Unicode string to the console out device at the current cursor location. UINTN APrint (     IN char     *fmt,     ...     ); Parameters A pointer to an ASCII string containing format information. Variable length argument list. Description This function uses the format string fmt and the variable argument list to build a formatted Unicode string.  This formatted Unicode string is then sent to the console out device.  The length of the formatted Unicode string is returned. SPrint Function The SPrint() function sends a formatted Unicode string to the specified buffer. UINTN SPrint (     OUT CHAR16  *Str,     IN UINTN    StrSize,     IN CHAR16   *fmt,     ...     ); Parameters A pointer to a Unicode string. StrSize  The maximum length of the Unicode string Str. A pointer to a Unicode string containing format information. Variable length argument list. Description This function uses the format string fmt and the variable argument list to build a formatted Unicode string.  Up to StrSize characters of  this formatted Unicode string is then stored in Str.  The length of the formatted Unicode string is returned. PoolPrint Function The PoolPrint() function sends a formatted Unicode string to a buffer allocated from pool. CHAR16 * PoolPrint (     IN CHAR16           *fmt,     ...     ); Parameters A pointer to a Unicode string containing format information. Variable length argument list. Description This function uses the format string fmt and the variable argument list to build a formatted Unicode string.  Storage for the formatted Unicode string is allocated from pool.  A pointer to the formatted Unicode string is returned.  It is the caller s responsibility to free the allocated buffer. CatPrint Function The CatPrint() function concatenates a formatted Unicode string to a Unicode string allocated from pool. typedef struct {     CHAR16      *str;     UINTN       len;     UINTN       maxlen; } POOL_PRINT; CHAR16 * CatPrint (     IN OUT POOL_PRINT   *Str,     IN CHAR16           *fmt,     ...     ); Parameters A pointer to POOL_PRINT data structure containing a Unicode string. A pointer to a Unicode string containing format information. Variable length argument list. Description This function uses the format string fmt and the variable argument list to build a formatted Unicode string.  Str is grown to accommodate the formatted Unicode string, and the formatted Unicode string is appended to the end of Str.  A pointer to the concatenated Unicode string is returned. DumpHex Function The DumpHex() function prints the contents of a buffer in hexadecimal format. DumpHex (     IN UINTN        Indent,     IN UINTN        Offset,     IN UINTN        DataSize,     IN VOID         *UserData     ); Parameters Indent  Number of spaces to indent text output. Offset  Byte offset within UserData to start printing. DataSize  The number of bytes of data to print from UserData. UserData  A pointer to the buffer of data to print. Description This function prints the contents of UserData.  The format of each line of output is a 4 byte address printed in hexadecimal followed by 16 bytes of data printed in hexadecimal followed by 16 ASCII characters.  If the ASCII characters are not printable, then the are substituted with a period.   The entire output is indented by Indent spaces.  The output starts Offset bytes into UserData, and a total of DataSize bytes are printed.  The following is a sample output with an Indent of 0, Offset of 1, a DataSize of 100, and UserData pointing at the EFI SystemTable. Sample Output: 00000001: 49 42 49 20 53 59 53 54-00 00 01 00 60 00 00 00  *EFI SYST....`...* 00000011: EC 95 4A D3 00 00 00 00-88 D9 DA 01 64 DB DA 01  *..J.........d...* 00000021: 88 D9 DA 01 28 DB DA 01-08 D6 DA 01 28 D7 DA 01  *....(.......(...* 00000031: 00 D0 41 00 60 7B 41 00-00 00 00 00 00 00 00 00  *..A.`.A.........* 00000041: 00 00 00 00 00 00 00 00-00 00 00 00 00 00 00 00  *................* 00000051: 00 00 00 00 00 00 00 00-00 00 00 00 00 00 00 00  *................* 00000061: 00 00 00 00                                      *....* LibIsValidTextGraphics Function The LibIsValidTextGraphics() function returns TRUE if Graphic is a supported Unicode Box Drawing character. BOOLEAN LibIsValidTextGraphics (     IN  CHAR16   Graphic,        OUT CHAR8   *PcAnsi,    OPTIONAL     OUT CHAR8   *Ascii      OPTIONAL     ); Parameters Graphic  Unicode character to test. PcAnsi  Optional pointer to return PCANSI equivalent of Graphic. Ascii  Optional pointer to return ASCII equivalent of Graphic. Description This function returns a TRUE if the character Graphic adheres to the range of legal Unicode box drawing characters.  The criteria is that the upper byte contains a 0x25 or 0x21.  If the value is TRUE and the character has also a mapping for either the PcAnsi or Ascii character set, these mappings will be returned.  Otherwise, the function is not deemed to be a box drawing character and FALSE is returned. Status Codes Returned  The character is a Unicode box drawing character. FALSE The character is not a Unicode box drawing character. IsValidAscii Function The IsValidAscii() function determines if the argument is a legal ASCII character. BOOLEAN IsValidAscii (     IN  CHAR16   Ascii     ); Parameters Ascii  Number of spaces to indent text output. Description This function returns TRUE if Ascii lies within the legal range of ASCII elements, namely 0x20 and 0x7F, respectively.  Otherwise, the function returns FALSE. Status Codes Returned  The character is a legal ASCII element. FALSE The character is not a legal ASCII element. IsValidEfiCntlChar Function The IsValidEfiCntlChar() function determines if the character is one of the four EFI control characters. BOOLEAN IsValidEfiCntlChar (     IN  CHAR16   c    Parameters Character to decide if is also a control character. Description This function returns TRUE if the input character c is a legal EFI control character.  The control characters included in Table 4-13. Table 4-13. EFI Control Characters Value CHAR_NULL 0x0000 CHAR_BACKSPACE 0x0008 CHAR_TAB 0x0009 CHAR_LINEFEED 0x000A CHAR_CARRIAGE_RETURN 0x000D Otherwise, the value FALSE is returned. Status Codes Returned  The character is an EFI control character. FALSE The character is not an EFI control character. Math Functions The EFI Library provides a few math functions to operate on 64 bit operands.  These include shift operations, multiplication and division.  Table 4-14 lists the set of 64 bit math functions that are described in the following sections.  Table 4-14. Math Functions Description LshiftU64 Shift a 64 bit integer left between 0 and 63 bits. RshiftU64 Shift a 64 bit integer right between 0 and 63 bits. MultiU64x32 Multiply a 64 bit unsigned integer by a 32 bit unsigned integer and generate a 64 bit unsigned result. DivU64x32 Divide a 64 bit unsigned integer by a 32 bit unsigned integer and generate a 64 bit unsigned result with an optional 32 bit unsigned remainder. LshiftU64 Function The LshiftU64() function shifts a 64 bit integer left between 0 and 63 bits. UINT64 LShiftU64 (     IN UINT64   Operand,     IN UINTN    Count     ); Parameters Operand  The 64 bit operand to shift left. Count  The number of bits to shift left. Description This function shifts the 64 bit value Operand to the left by Count bits.  The shifted value is returned. RshiftU64 Function The LshiftU64() function shifts a 64 bit integer right between 0 and 63 bits. UINT64 RShiftU64 (     IN UINT64   Operand,     IN UINTN    Count     ); Parameters Operand  The 64 bit operand to shift right. Count  The number of bits to shift right. Description This function shifts the 64 bit value Operand to the right by Count bits.  The shifted value is returned. MultU64x32 Function The MultU64x32() function multiples a 64 bit unsigned integer by a 32 bit unsigned integer and generates a 64 bit unsigned result. UINT64 MultU64x32 (     IN UINT64   Multiplicand,     IN UINTN    Multiplier     ); Parameters Multiplicand  A 64 bit unsigned value. Multiplier  A 32 bit unsigned value. Description This function multiples the 64 bit unsigned value Multiplcand by the 32 bit unsigned value Multiplier and generates a 64 bit unsigned result.  This 64 bit unsigned result is returned. DivU64x32 Function The DivU64x32() function divides a 64 bit unsigned integer by a 32 bit unsigned integer and generates a 64 bit unsigned result and a 32 bit unsigned remainder. UINT64 DivU64x32 (     IN UINT64   Dividend,     IN UINTN    Divisor,     OUT UINTN   *Remainder OPTIONAL     ); Parameters Dividend  A 64 bit unsigned value. Divisor  A 32 bit unsigned value. Remainder  A pointer to a 32 bit value. Description This function divides the 64 bit unsigned value Dividend by the 32 bit unsigned value Divisor and generates a 32 bit unsigned quotient.  If Remainder is not NULL, then the 32 bit unsigned remainder is returned in Remainder.  This function returns the 32 bit unsigned quotient. Spin Lock Functions Spin locks are used to protect data structures that may be updated by more than one processor at a time, or a single processor that may update the same data structure while running a several different priority levels.  A spin lock is stored in an FLOCK data structure.  typedef struct _FLOCK {     EFI_TPL     Tpl;     EFI_TPL     OwnerTpl;     UINTN       Lock; } FLOCK; Table 4-15 lists the support functions for creating and maintaining spin locks.  These functions are described in the following sections. Table 4-15. Spin Lock Functions Description InitializeLock Initialize a spin lock. AcquireLock Acquire a spin lock. ReleaseLock Release a spin lock. InitializeLock Function The InitializeLock() function initializes a basic mutual exclusion lock. InitializeLock (     IN OUT FLOCK    *Lock,     IN EFI_TPL      Priority     ); Parameters Lock  A pointer to the lock data structure to initialize. Priority  The task priority level of the lock. Description This function initializes a basic mutual exclusion lock.   Each lock provides mutual exclusion access at its task priority level.  Since there is no preemption or multiprocessor support in EFI, acquiring the lock only consists of raising to the locks TPL. AcquireLock Function The AcquireLock() function acquires ownership of a lock AcquireLock (     IN FLOCK    *Lock     ); Parameters Lock  A pointer to the lock to acquire. Description This function raises the system s current task priority level to the task priority level of the mutual exclusion lock.  Then, it acquires ownership of the lock. ReleaseLock Function The ReleaseLock() function releases ownership of a lock ReleaseLock (     IN FLOCK    *Lock     ); Parameters Lock  A pointer to the lock to release. Description This function releases ownership of the mutual exclusion lock, and restores the system s task priority level to its previous level. Handle and Protocol Support Functions The EFI Library contains a set of functions that help drivers maintain the protocol interfaces in the boot services environment.  Table 4-16 lists the set of helper functions that are described in the following sections. Table 4-16. Handle and Protocol Support Functions Description LibLocateHandle Finds all device handles that match the specified search criteria. LibLocateHandleByDiskSignature Finds all device handles that support the Block I/O protocol and have a disk with a matching disk signature. LibLocateProtocol Finds the first protocol instance that matches a given protocol. LibInstallProtocolInterfaces Installs one or more protocol interfaces into the boot services environment.. LibUninstallProtocolInterfaces Removes one or more protocol interfaces from the boot services environment. LinReinstallProtocolInterfaces Reinstalls one or more protocol interfaces into the boot services environment. LibLocateHandle Function The LibLocateHandle() function returns an array of handles that support the requested protocol in a buffer allocated from pool. EFI_STATUS LibLocateHandle (     IN EFI_LOCATE_SEARCH_TYPE   SearchType,     IN EFI_GUID                 *Protocol OPTIONAL,     IN VOID                     *SearchKey OPTIONAL,     IN OUT UINTN                *NoHandles,     OUT EFI_HANDLE              **Buffer     ); Parameters SearchType Specifies which handle(s) are to be returned. Protocol Provides the protocol to search by.   This parameter is only valid for SearchType ByProtocol. SearchKey Supplies the search key depending on the SearchType. NoHandles The number of handles returned in Buffer. Buffer A pointer to the buffer to return the requested array of handles that support Protocol.  Description The LibLocateHandle() function returns one or more handles that match the SearchType request.  Buffer is allocated from pool, and the number of entries in Buffer is returned in NoHandles.  Each SearchType is described below: AllHandles  Protocol and SearchKey are ignored and the function returns an array of every handle in the system. ByRegisterNotify SearchKey supplies the Registration returned by RegisterProtocolNotify().  The function returns the next handle that is new for the Registration.  Only one handle is returned at a time, and the caller must loop until no more handles are returned.  Protocol is ignored for this search type. ByProtocol All handles that support Protocol are returned.  SearchKey is ignored for this search type.  Status Codes Returned EFI_SUCCESS The result array of handles was returned. EFI_NOT_FOUND No handles match the search.  EFI_OUT_OF_RESOURCES There is not enough pool memory to store the matching results. LibLocateHandleByDiskSignature Function The LibLocateHandleByDiskSignature() function returns an array of handles that support the requested protocol in a buffer allocated from pool. EFI_STATUS LibLocateHandle (     IN UINT8 MBRType,     IN UINT8 SignatureType,     IN VOID *Signature,     IN OUT UINTN *NoHandles,     OUT EFI_HANDLE **Buffer     ); Parameters MBRType Specifies the type of MBR to search for.  This can either be the PC AT compatible MBR or an EFI Partition Table Header. SignatureType Specifies the type of signature to look for in the MBR.  This can either be a 32 bit signature, or a GUID signature. Signature A pointer to a 32 bit disk signature or a pointer to a GUID disk signature.  The type depends on SignatureType. NoHandles The number of handles returned in Buffer. Buffer A pointer to the buffer to return the requested array of handles that support Protocol.  Description The LibLocateHandleByDiskSignature() function returns one or more handles to disk devices that match the specified MBRType, SignatureType, and Signature.  Buffer is allocated from pool, and the number of entries in Buffer is returned in NoHandles.  The following are definitions for the valid values for MBRType and SignatureType. #define MBR_TYPE_PCAT                       0x01 #define MBR_TYPE_EFI_PARTITION_TABLE_HEADER 0x02 #define SIGNATURE_TYPE_MBR                  0x01 #define SIGNATURE_TYPE_GUID                 0x02 Status Codes Returned EFI_SUCCESS The result array of handles was returned. EFI_NOT_FOUND No handles match the search.  EFI_OUT_OF_RESOURCES There is not enough pool memory to store the matching results.  LibLocateProtocol Function The LibLocateProtocol() function returns the first protocol instance that matches the given protocol. EFI_STATUS LibLocateProtocol (     IN EFI_GUID                 *Protocol,     OUT VOID                    **Interface     ); Parameters Protocol Provides the protocol to search for.  Interface On return, a pointer to the first interface that matches Protocol. Description The LibLocateProtocol() function finds all the device handles that support Protocol, and returns a pointer to the the protocol instance from the first handle in Interface.  If no protocol instances are found, then Instance is set to NULL. Status Codes Returned EFI_SUCCESS A protocol instance matching Protocol was found. EFI_NOT_FOUND No protocol instances were found that match Protocol.  LibInstallProtocolInterfaces Function The LibInstallProtocolInterfaces() function installs one or more protocol interfaces into the boot services environment. EFI_STATUS LibInstallProtocolInterfaces (     IN OUT EFI_HANDLE       *Handle,     ...     ); Parameters Handle  The handle to install the new protocol interfaces on, or NULL if a new handle is to be allocated. A variable argument list containing pairs of protocol GUIDs and protocol interfaces. Description This function installs a set of protocol interfaces into the boot services environment.  It removes arguments from the variable argument list in pairs.  The first item is always a pointer to the protocol s GUID, and the second item is always a pointer to the protocol s interface.  These pairs are used to call the boot services routine InstallProtoclInterface() to add one protocol interface to Handle.  If Handle is NULL on entry, then a new handle will be allocated.  The pairs of arguments are removed from the variable argument list until a NULL protocol GUID value is found.  If any errors are generated while the protocol interfaces are being installed, then all the protocols added in this call will be removed. Status Codes Returned EFI_SUCCESS All the protocol interfaces were installed. EFI_OUT_OF_RESOURCES There was not enough memory in pool to install all the protocols. LibUninstallProtocolInterfaces Function The LibInstallProtocolInterfaces() function removes one or more protocol interfaces into the boot services environment. LibUninstallProtocolInterfaces (     IN EFI_HANDLE           Handle,     ...     ); Parameters Handle  The handle to remove the protocol interfaces from. A variable argument list containing pairs of protocol GUIDs and protocol interfaces. Description This function removes a set of protocol interfaces from the boot services environment.  It removes arguments from the variable argument list in pairs.  The first item is always a pointer to the protocol s GUID, and the second item is always a pointer to the protocol s interface.  These pairs are used to call the boot services routine UninstallProtoclInterface() to remove one protocol interface from Handle.  The pairs of arguments are removed from the variable argument list until a NULL protocol GUID value is found. Status Codes Returned EFI_SUCCESS All the protocol interfaces were removed. EFI_NOT_FOUND One of the protocol interfaces could not be found. LibReinstallProtocolInterfaces Function The LibReinstallProtocolInterfaces() function replaces one or more protocol interfaces into the boot services environment. EFI_STATUS LibReinstallProtocolInterfaces (     IN OUT EFI_HANDLE           Handle,     ...     ); Parameters Handle  The handle to remove the protocol interfaces from. A variable argument list containing triplets of protocol GUIDs, old protocol interfaces, and new protocol interfaces. Description This function replaces a set of protocol interfaces in the boot services environment.  It removes arguments from the variable argument list in triplets.  The first item is always a pointer to the protocol s GUID, and the second item is always a pointer to the current protocol interface, and the third item is always a pointer to the new protocol interface.  These triplets are used to call the boot services routine ReinstallProtoclInterface() to replace one protocol interface in Handle.  The triplets of arguments are removed from the variable argument list until a NULL protocol GUID value is found.  If there are any errors in this process, then the boot services environment is restored to the state it had just before the call to this function was made. Status Codes Returned EFI_SUCCESS All the protocol interfaces were replaced. EFI_NOT_FOUND One of the protocol interfaces could not be found. File I/O Support Functions Table 4-17 lists some helper function related to Files and a set of functions and macros that facilitate the manipulate of Files. typedef VOID        *SIMPLE_READ_FILE; Table 4-17. File I/O Support Functions Description LibOpenRoot Opens and returns a file handle to a root directory of a volume. LibFileInfo Retrieves the file information on an open file handle. LibFileSystemInfo Retrieves the file system information on an open file handle. LibFileSystemVolumeLabelInfo Retrieves the file system information on an open file handle. ValidMBR Determines if a hard drive s Master Boot Record is valid. OpenSimpleReadFile Opens a file from several possible sources and returns a file handle. ReadSimpleReadFile Read from a file opened with OpenSimpleReadFile. CloseSimpleReadFile Close a file opened with OpenSimpleReadFile. LibOpenRoot Function The LibOpenRoot() function opens and returns a file handle to the root directory of a volume. EFI_FILE_HANDLE LibOpenRoot (     IN EFI_HANDLE           DeviceHandle     ); Parameters DeviceHandle  A handle for a device. Description This function looks for a FileSystemProtocol attached to DeviceHandle.  If one is found, then an attempt is made to open a volume on that device.  If this succeeds, then a valid file handle is returned.  Otherwise, NULL is returned. LibFileInfo Function The LibFileInfo() function gets the file information from an open file descriptor, and stores it in a buffer allocated from pool. EFI_FILE_INFO * LibFileInfo (     IN EFI_FILE_HANDLE      FHand     ); Parameters FHand  A file handle. Description This function retrieves the EFI_FILE_INFO data structure for the file handle Fhand, and stores it in a buffer allocated from pool.  A pointer to this buffer is returned.  If the file information can not be retrieved, or there is not enough memory in pool to store the data structure, NULL will be returned. LibFileSystemInfo Function The LibFileSystemInfo() function gets the file system information from an open file descriptor, and stores it in a buffer allocated from pool. EFI_FILE_SYSTEM_INFO * LibFileSystemInfo (     IN EFI_FILE_HANDLE      FHand     ); Parameters FHand  A file handle. Description This function retrieves the EFI_FILE_SYSTEM_INFO data structure for the file handle Fhand, and stores it in a buffer allocated from pool.  A pointer to this buffer is returned.  If the file information can not be retrieved, or there is not enough memory in pool to store the data structure, NULL will be returned. LibFileSystemVolumeLabelInfo Function The LibFileSystemVolumeLabelInfo() function gets the file system information from an open file descriptor, and stores it in a buffer allocated from pool. EFI_FILE_SYSTEM_VOLUME_LABEL_INFO * LibFileSystemVolumeLabelInfo (     IN EFI_FILE_HANDLE      FHand     ); Parameters FHand  A file handle. Description This function retrieves the eleven-byte EFI_FILE_SYSTEM_LABEL_INFO data structure for the file handle Fhand, and stores it in a buffer allocated from pool.  A pointer to this buffer is returned.  If the file information can not be retrieved, or there is not enough memory in pool to store the data structure, NULL will be returned. ValidMBR Function The ValidMBR() function determines if a hard drive s Master Boot Record is valid. BOOLEAN ValidMBR(     IN  MASTER_BOOT_RECORD  *Mbr,     IN  EFI_BLOCK_IO        *BlkIo     ); Parameters A pointer to a hard drive s Master Boot Record. BlkIo  A pointer to a BLOCK_IO Protocol handle. Description This function verifies that the layout of partitions described in the master boot record are valid.  The master boot record is in the buffer pointed to by Mbr.  Additional information about the physical disk is contained in BlkIo.  The size of the partitions are compared to the size of the physical drive, and checks are also made for overlapping partitions.  If the MBR is valid, then TRUE is returned.  Otherwise, FALSE is returned. Status Codes Returned The Master Boot Record is valid. FALSE The Master Boot Record is not valid. OpenSimpleReadFile Function The OpenSimpleReadFile() function opens a file from several possible sources and returns a file handle. EFI_STATUS OpenSimpleReadFile (     IN BOOLEAN                  BootPolicy,     IN VOID                     *SourceBuffer   OPTIONAL,     IN UINTN                    SourceSize,     IN EFI_DEVICE_PATH          **FilePath,     IN EFI_HANDLE               *DeviceHandle,         OUT SIMPLE_READ_FILE        *SimpleReadHandle     ); Parameters BootPolicy  If TRUE, indicates that the request originates from the boot manager, and that the boot manager is attempting to load FilePath as a boot selection. SourceBuffer  A pointer to a buffer containing the file. SourceSize  The size of the buffer containing the file to access. FilePath  Pointer to the device specific path of the file to load. DeviceHandle  Pointer to the device handle of the device to open. SimpleReadHandle  A pointer to the file handle to return. Description This function opens a file from one of three possible sources and returns a file handle.  The first source is a file on a device through the file system interface.  The second source is through a file on a device through the load file interface, and the third source is from a buffer in memory.  If the optional parameter SourceBuffer is not NULL, then it is assumed that the file is in a buffer in memory and a file handle for this file is returned in SimpleReadHandle.  If the root of the device specified by DeviceHandle can be opened, and FilePath is a valid file path on the device, then the file specified by the combination of DeviceHandle and FilePath is opened and a file handle is returned in SimpleReadHandle.  If access to the file is not allowed through the file system interface, then an attempt is made to open the file through the load file interface.  If this succeeds, then a copy of the file is loaded into memory, and a file handle is returned in SimpleReadHandle. Status Codes Returned EFI_SUCCESS The file was opened and a valid file handle was returned. EFI_OUT_OF_RESOURCES The file handle could not be allocated from memory. EFI_UNSUPPORTED The LOAD_FILE protocol is not supported form this file. EFI_BUFFER_TOO_SMALL A buffer for the file could not be allocated. EFI_NO_MEDIA No media was present to load the file. EFI_DEVICE_ERROR The file was not loaded due to a device error. EFI_NO_RESPONSE The remote system did not respond. EFI_NOT_FOUND The file was not found. ReadSimpleReadFile Function The ReadSimpleReadFile() reads data from a file opened with OpenSimpleReadFile() EFI_STATUS ReadSimpleReadFile (     IN SIMPLE_READ_FILE     SimpleReadHandle,     IN UINTN                Offset,     IN OUT UINTN            *ReadSize,     OUT VOID                *Buffer     ); Parameters SimpleReadHandle  A file handle. Offset  Offset in bytes within the file to begin the read operation. ReadSize  A pointer to the number of bytes to read from the file. Buffer  A pointer to the buffer to store the read data. Description This function reads data from the file specified by the file handle SimpleReadHandle.  If the file handle describes a file image in memory, then a memory copy is performed to copy the read data into Buffer.  Otherwise, a file system read call is made to read the data from a device into Buffer.  If Offset is beyond the end of the file, then ReadSize is set to zero, and an error is returned.  Otherwise, ReadSize will be set to the number of bytes actually read from the device. Status Codes Returned EFI_SUCCESS The data was read. EFI_NO_MEDIA No media was present to load the file. EFI_DEVICE_ERROR The device reported an error. EFI_VOLUME_CORRUPTED The file system structures are corrupted. EFI_BUFFER_TOO_SMALL The ReadSize is too small to read the current file.  ReadSize had been updated with the size needed to complete the request. CloseSimpleReadFile Function The CloseSimpleReadFile() closes a file opened with OpenSimpleReadFile(). CloseSimpleReadFile (     IN SIMPLE_READ_FILE     SimpleReadHandle     ); Parameters SimpleReadHandle  A file handle. Description This function closes the file specified by SimpleReadHandle and frees the memory used by SimpleReadHandle.  If any data buffers were allocated when SimpleReadHandle was opened, then those buffers are also freed. Device Path Support Functions Table 4-18 lists the support functions for creating and maintaining device path data structures.  These functions are described in the following sections. Table 4-18. Device Path Support Functions Description DevicePathFromHandle Retrieves the device path from a specified handle. DevicePathInstance Retrieves the next device path instance from a device path. DevicePathInstanceCount Returns the number of device path instances in a device path. AppendDevicePath Appends a device path to all the instances of another device path. AppendDevicePathNode Appends a device path node to all the instances of a device path.  AppendDevicePathInstance Appends a device path instance to a device path.  FileDevicePath Appends a file path to a device path. DevicePathSize Returns the size of a device path in bytes. DuplicateDevicePath Creates a new copy of a device path. LibDevicePathToInterface Retrieves a protocol interface for a device. UnpackDevicePath Naturally aligns all the nodes in a device path. LibMatchDevicePaths Reports membership of a single-instance device path in a possible multi-instance device path. LibDuplicateDevicePathInstance Creates a second corresponding instance of a given device path. DevicePathFromHandle Function The DevicePathFromHandle() function retrieves the device path for the specified handle. EFI_DEVICE_PATH * DevicePathFromHandle (     IN EFI_HANDLE           Handle     ); Parameters Handle  A handle. Description This function retrieves the device path for a handle specified by Handle.  If Handle is valid, then a pointer to the device path is returned.  If Handle is not valid, then NULL is returned. DevicePathInstance Function The DevicePathInstance() function retrieves the next device path instance from a device path data structure. EFI_DEVICE_PATH * DevicePathInstance (     IN OUT EFI_DEVICE_PATH  **DevicePath,     OUT UINTN               *Size     ); Parameters DevicePath  A pointer to a device path data structure. Size  A pointer to the size of a device path instance in bytes. Description This function is used to parse device path instances from the device path DevicePath. This function returns a pointer to the current device path instance.  In addition, it returns the size in bytes of the current device path instance in Size, and a pointer to the next device path instance in DevicePath.  If there are no more device path instances in DevicePath, then DevicePath will be set to NULL. DevicePathInstanceCount Function The DevicePathInstanceCount() function is used to determine the number of device path instances that exist in a device path. UINTN DevicePathInstanceCount (     IN EFI_DEVICE_PATH      *DevicePath     ); Parameters DevicePath  A pointer to a device path data structure. Description This function counts and returns the number of device path instances in DevicePath. AppendDevicePath Function The AppendDevicePath() function is used to append a device path to all the instances in another device path. EFI_DEVICE_PATH * AppendDevicePath (     IN EFI_DEVICE_PATH      *Src1,     IN EFI_DEVICE_PATH      *Src2     ); Parameters A pointer to a device path data structure. A pointer to a device path data structure. Description This function appends the device path Src2 to every device path instance in Src1.  A pointer to the new device path is returned.  NULL is returned if space for the new device path could not be allocated from pool. It is up to the caller to free the memory used by Src1 and Src2 if they are no longer needed. AppendDevicePathNode Function The AppendDevicePathNode() function is used to append a device path node to all the instances in another device path. EFI_DEVICE_PATH * AppendDevicePathNode (     IN EFI_DEVICE_PATH      *Src1,     IN EFI_DEVICE_PATH      *Src2     ); Parameters A pointer to a device path data structure. A pointer to a single device path node. Description This function appends the device path node Src2 to every device path instance in Src1.  This function returns a pointer to the new device path.  If there is not enough temporary pool memory available to complete this function, then NULL is returned. It is up to the caller to free the memory used by Src1 and Src2 if they are no longer needed. AppendDevicePathInstance Function The AppendDevicePathInstance() function is used to add a device path instance to a device path. EFI_DEVICE_PATH * AppendDevicePathInstance (     IN EFI_DEVICE_PATH      *Src,     IN EFI_DEVICE_PATH      *Instance     ); Parameters A pointer to a device path data structure. Instance A pointer to a device path instance. Description This function appends the device path instance Instance to the device path Src.  If Src is NULL, then a new device path with one instance is created.  This function returns a pointer to the new device path.. If there is not enough temporary pool memory available to complete this function, then NULL is returned. It is up to the caller to free the memory used by Src and Instance if they are no longer needed.  FileDevicePath Function The FileDevicePath() allocates a device path for a file and appends it to an existing device path.  EFI_DEVICE_PATH * FileDevicePath (     IN EFI_HANDLE           Device  OPTIONAL,     IN CHAR16               *FileName     ); Parameters Device  A pointer to a device handle. FileName  A pointer to a Null-terminated Unicode string. Description If Device is a valid device handle, then a device path for the file specified by FileName   is allocated and appended to the device path associated with the handle Device.  If Device is not a valid device handle, then a device path for the file specified by FileName is allocated and returned. DevicePathSize Function The DevicePathSize() function returns the size of a device path in bytes. UINTN DevicePathSize (     IN EFI_DEVICE_PATH      *DevPath     ); Parameters DevPath  A pointer to a device path data structure. Description This function determines the size of a data path data structure in bytes.  This size is returned. DuplicateDevicePath Function The DuplicateDevicePath() function creates a duplicate copy of an existing device path. EFI_DEVICE_PATH * DuplicateDevicePath (     IN EFI_DEVICE_PATH      *DevPath     ); Parameters DevPath  A pointer to a device path data structure. Description This function allocates space for a new copy of the device path DevPath.  If the memory is successfully allocated, then the contents of DevPath are copied to the newly allocated buffer, and a pointer to that buffer is returned.  Otherwise, NULL is returned. LibDevicePathToInterface Function The LibDevicePathToInterface() function retrieves a protocol interface for a device. EFI_STATUS LibDevicePathToInterface (     IN EFI_GUID             *Protocol,     IN EFI_DEVICE_PATH      *FilePath,     OUT VOID                **Interface     ); Parameters Protocol  The published unique identifier of the protocol. FilePath  A pointer to a device path data structure. Interface  Supplies and address where a pointer to the requested Protocol interface is returned. Description This function finds all the devices that support the interface protocol specified by Protocol.  It then searches that list of devices for the one that best matches the device path specified by FilePath.  If a match is found, then the protocol interface of that device is returned in Interface.  Otherwise, Interface is set to NULL. Status Codes Returned EFI_SUCCESS A matching protocol interface was found. EFI_NOT_FOUND A matching protocol interface was not found. EFI_UNSUPPORTED The device does not support the requested protocol. EFI_INVALID_PARAMETER FilePath contains more than one device path instance. UnpackDevicePath Function The UnpackDevicePath() function unpacks a device path data structure so that all the nodes of a device path are naturally aligned. EFI_DEVICE_PATH * UnpackDevicePath (     IN EFI_DEVICE_PATH      *DevPath     ); Parameters DevPath  A pointer to a device path data structure. Description This function allocates space for a new copy of the device path DevPath.  The new copy of DevPath is modified so that every node of the device path is naturally aligned.  If the memory for the device path is successfully allocated, then a pointer to the new device path is returned.  Otherwise, NULL is returned. LibMatchDevicePaths Function The LibMatchDevicePaths() function compares a device path data structure to that of all the nodes of a second device path instance. BOOLEAN LibMatchDevicePaths (     IN EFI_DEVICE_PATH      *Multi,     IN EFI_DEVICE_PATH      *Single     ); Parameters Multi  A pointer to a multi-instance device path data structure. Single  A pointer to a single-instance device path data structure. Description This function compares the Single instance device path against the various device path instances in Multi. The function returns TRUE if the Single is contained within Multi.  Otherwise, FALSE is returned. Status Codes Returned Single was found in Multi FALSE Single was not found in Multi LibDuplicateDevicePathInstance Function The LibDuplicateDevicePathInstance() function creates a device path data structure that identically matches the device path passed in. EFI_DEVICE_PATH * LibDuplicateDevicePathInstance (     IN EFI_DEVICE_PATH      *DevPath     ); Parameters DevPath  A pointer to a device path data structure. Description This function allocates space for a new copy of the device path DevPath.  The new copy of DevPath is created to identically match the input.  Otherwise, NULL is returned. PCI Functions and Macros Table 4-19 lists some helper function related to PCI devices and a set of functions and macros that are used to access PCI I/O and PCI Configuration Space. Table 4-19. PCI Functions and Macros Description PCIFindDeviceClass Finds a PCI device that matches the PCI BaseClass and SubClass. PCIFindDevice Finds a PCI device that matches the PCI Device ID and Vendor ID. InitializeGlobalIoDevice Retrieves the DEVICE_IO protocol instance for a given device. ReadPort Reads an I/O port. WritePort Writes to an I/O port. ReadPciConfig Reads an I/O port. WritePciConfig Writes to an I/O port. Read an 8 bit value from an I/O port. Write an 8 bit value to an I/O port. Read a 16 bit value from an I/O port. Outpw Write a 16 bit value to an I/O port. Read a 32 bit value from an I/O port. Outpd Write a 32 bit value to an I/O port. Readpci8 Read an 8 bit value from PCI Configuration Space. Writepci8 Write an 8 bit value to PCI Configuration Space. readpci16 Read a 16 bit value from PCI Configuration Space. writepci16 Write a 16 bit value to PCI Configuration Space. readpci32 Read a 32 bit value from PCI Configuration Space. writepci32 Write a 32 bit value to PCI Configuration Space. PciFindDeviceClass Function The PciFindDeviceClass() function finds the first PCI device with the specified class. typedef struct {     UINT8   Register;     UINT8   Function;     UINT8   Device;     UINT8   Bus;     UINT32  Reserved; } EFI_ADDRESS; typedef union {     UINT64          Address;     EFI_ADDRESS     EfiAddress; } EFI_PCI_ADDRESS_UNION; EFI_STATUS PciFindDeviceClass (     IN  OUT EFI_PCI_ADDRESS_UNION   *Address,     IN      UINT8                   BaseClass,     IN      UINT8                   SubClass     ); Parameters Address  A pointer to the data structure containing the Bus, Device, and Function of the PCI device that matches the specified class. BaseClass  The PCI base class of the device to search for. SubClass  The PCI sub class of the device to search for. Description This function search all the PCI busses for a device with a matching BaseClass and SubClass in the device s standard PCI header.  If a matching device is found, the device s PCI bus number, PCI device number, and PCI function number are returned in Address. EFI_SUCCESS A corresponding PCI device was found. EFI_NOT_FOUND A corresponding PCI device was not found. PciFindDevice Function The PicFindDevice() function finds the first PCI device with the specified Device ID and Vendor ID. typedef struct {     UINT16      VendorId;     UINT16      DeviceId;     UINT16      Command;     UINT16      Status;     UINT8       RevisionID;     UINT8       ClassCode[3];     UINT8       CacheLineSize;     UINT8       LaytencyTimer;     UINT8       HeaderType;     UINT8       BIST; } PCI_DEVICE_INDEPENDENT_REGION; typedef struct {     UINT32      Bar[6];     UINT32      CISPtr;     UINT16      SubsystemVendorID;     UINT16      SubsystemID;     UINT32      ExpansionRomBar;     UINT32      Reserved[2];     UINT8       InterruptLine;     UINT8       InterruptPin;     UINT8       MinGnt;     UINT8       MaxLat;      } PCI_DEVICE_HEADER_TYPE_REGION; typedef struct {     PCI_DEVICE_INDEPENDENT_REGION   Hdr;     PCI_DEVICE_HEADER_TYPE_REGION   Device; } PCI_TYPE00; EFI_STATUS PciFindDevice (     IN  OUT EFI_PCI_ADDRESS_UNION   *DeviceAddress,     IN      UINT16                  VendorId,     IN      UINT16                  DeviceId,     IN OUT  PCI_TYPE00              *Pci     ) Parameters DeviceAddress  A pointer to the data structure containing the Bus, Device, and Function of the PCI device that matches the specified class. VendorId  The PCI base class of the device to search for. DeviceId  The PCI sub class of the device to search for. A pointer to the configuration space header of the device. Description This function search all the PCI busses for a device with a matching VendorId and DeviceId in the device s standard PCI header.  If a matching device is found, the device s PCI bus number, PCI device number, and PCI function number are returned in Address, as is the Type 0 configuration space returned in Pci.  If the device cannot be discovered, EFI_NOT_FOUND is returned. EFI_SUCCESS A corresponding PCI device was found. EFI_NOT_FOUND A corresponding PCI device was not found. InitializeGlobalIoDevice Function The InitializeGlobalIoDevice() function returns a DEVICE_IO protocol instance that is supported by the given device. EFI_STATUS InitializeGlobalIoDevice (     IN EFI_DEVICE_PATH             *DevicePath,     IN EFI_GUID                    *Protocol,     IN UINT8                       *ErrorStr,     OUT EFI_DEVICE_IO_INTERFACE    **GlobalIoFncs      ); Parameters DevicePath A pointer to a device path. Protocol The protocol that a device driver is attempting to register for this device. ErrorStr Error message to display if the device specified by DevicePath already supports Protocol. GlobalIoFuncs A pointer to the DEVICE_IO protocol instance that is supported by the device specified by DevicePath. Description This function check to see if device specified by DevicePath already supports Protocol.  If it does, then an error message is displayed using ErrorStr.  If the device specified by DevicePath does not support Protocol, then a check is made to see if the device specified by DevicePath supports the DEVICE_IO protocol.  If it does, then the DEVICE_IO protocol instance is returned in GlobalIoFncs.   Status Codes Returned EFI_SUCCESS A DEVICE_IO protocol instance was returned.. EFI_LOAD_ERROR The device already supports Protocol. EFI_NOT_FOUND A DEVICE_IO protocol instance was not found. ReadPort Function The ReadPort() function reads an I/O port using a DEVICE_IO protocol instance. UINT32 ReadPort (     IN EFI_DEVICE_IO_INTERFACE    *GlobalIoFncs,     IN EFI_IO_WIDTH               Width,     IN UINTN                      Port     ); Parameters GlobalIoFncs The DEVICE_IO protocol instance to use to perform the I/O read. Width The width of the I/O read operation. The address of the I/O read operation. Description This function reads the I/O port specified by Port and Width using the protocol interface functions in GlobalIoFncs.  The data returned by the I/O read operation is returned. WritePort Function The WritePort() function writes to an I/O port using a DEVICE_IO protocol instance. UINT32 WritePort (     IN EFI_DEVICE_IO_INTERFACE    *GlobalIoFncs,     IN EFI_IO_WIDTH               Width,     IN UINTN                      Port,     IN UINTN                      Data Parameters GlobalIoFncs The DEVICE_IO protocol instance to use to perform the I/O write. Width The width of the I/O write operation. The address of the I/O write operation. The data to use for the I/O write operation. Description This function writes Data to the I/O port specified by Port and Width using the protocol interface functions in GlobalIoFncs.   Data is returned. ReadPciConfig Function The ReadPciConfig() function reads from PCI Configuration Space using a DEVICE_IO protocol instance. UINT32 ReadPciConfig (     IN EFI_DEVICE_IO_INTERFACE    *GlobalIoFncs,     IN EFI_IO_WIDTH               Width,     IN UINTN                      Port     ); Parameters GlobalIoFncs The DEVICE_IO protocol instance to use to perform the PCI Configuration read. Width The width of the PCI Configuration read operation. The address of the PCI Configuration read operation. Description This function reads from PCI Configuration Space at the address specified by Port and Width using the protocol interface functions in GlobalIoFncs.  The data returned by the PCI Configuration read operation is returned. WritePciConfig Function The WritePciConfig() function writes to PCI Configuration Space using a DEVICE_IO protocol instance. UINT32 WritePciConfig (     IN EFI_DEVICE_IO_INTERFACE    *GlobalIoFncs,     IN EFI_IO_WIDTH               Width,     IN UINTN                      Port,     IN UINTN                      Data Parameters GlobalIoFncs The DEVICE_IO protocol instance to use to perform the I/O write. Width The width of the PCI Configuration write operation. The address of the PCI Configuration write operation. The data to use for the PCI Configuration write operation. Description This function writes Data to PCI Configuration Space at the address specified by Port and Width using the protocol interface functions in GlobalIoFncs.   Data is returned. inp Macro The inp() macro reads an 8 bit value from an I/O port using the DEVICE_IO protocol instance GlobalIoFcns. UINT8 inp (     IN UINTN    Port Parameters The address of the I/O read operation. Description This function reads an 8 bit value from the I/O port specified by Port. outp Macro The outp() macro writes an 8 bit value to an I/O port using the DEVICE_IO protocol instance GlobalIoFcns. outp (     IN UINTN    Port,     IN UINT8    Data Parameters The address of the I/O write operation. The 8 bit value to write. Description This function writes the 8 bit value Data to the I/O port specified by Port.   inpw Macro The inpw() macro reads a 16 bit value from an I/O port using the DEVICE_IO protocol instance GlobalIoFcns. UINT16 inpw (     IN UINTN    Port Parameters The address of the I/O read operation. Description This function reads a 16 bit value from the I/O port specified by Port. outpw Macro The outpw() macro writes a 16 bit value to an I/O port using the DEVICE_IO protocol instance GlobalIoFcns. outpw (     IN UINTN    Port,     IN UINT16   Data Parameters The address of the I/O write operation. The 16 bit value to write. Description This function writes the 16 bit value Data to the I/O port specified by Port.   inpd Macro The inpd() macro reads a 32 bit value from an I/O port using the DEVICE_IO protocol instance GlobalIoFcns. UINT32 inpd (     IN UINTN    Port Parameters The address of the I/O read operation. Description This function reads a 32 bit value from the I/O port specified by Port. outpd Macro The outpd() macro writes a 32 bit value to an I/O port using the DEVICE_IO protocol instance GlobalIoFcns. outpd (     IN UINTN    Port,     IN UINT32   Data Parameters The address of the I/O write operation. The 32 bit value to write. Description This function writes 32 bit value Data to the I/O port specified by Port.   readpci8 Macro The readpci8() macro reads an 8 bit value from PCI Configuration Space using the DEVICE_IO protocol instance GlobalIoFcns. UINT8 readpci8 (     IN UINTN    Port Parameters The address of the PCI Configuration read operation. Description This function reads an 8 bit value from PCI Configuration Space at the address specified by Port. writepci8 Macro The writepci8() macro writes an 8 bit value to PCI Configuration Space using the DEVICE_IO protocol instance GlobalIoFcns. writepci8 (     IN UINTN    Port,     IN UINT8    Data Parameters The address of the PCI Configuration write operation. The 8 bit value to write. Description This function writes the 8 bit value Data to PCI Configuration Space at the address specified by Port.   readpci16 Macro The readpci16() macro reads a 16 bit value from PCI Configuration Space using the DEVICE_IO protocol instance GlobalIoFcns. UINT8 readpci16 (     IN UINTN    Port Parameters The address of the PCI Configuration read operation. Description This function reads a 16 bit value from PCI Configuration Space at the address specified by Port. writepci16 Macro The writepci16() macro writes a 16 bit value to PCI Configuration Space using the DEVICE_IO protocol instance GlobalIoFcns. writepci16 (     IN UINTN    Port,     IN UINT8    Data Parameters The address of the PCI Configuration write operation. The 16 bit value to write. Description This function writes the 16 bit value Data to PCI Configuration Space at the address specified by Port.   readpci32 Macro The readpci32() macro reads a 32 bit value from PCI Configuration Space using the DEVICE_IO protocol instance GlobalIoFcns. UINT8 readpci32 (     IN UINTN    Port Parameters The address of the PCI Configuration read operation. Description This function reads a 32 bit value from PCI Configuration Space at the address specified by Port. writepci32 Macro The writepci32() macro writes a 32 bit value to PCI Configuration Space using the DEVICE_IO protocol instance GlobalIoFcns. writepci32 (     IN UINTN    Port,     IN UINT8    Data Parameters The address of the PCI Configuration write operation. The 32 bit value to write. Description This function writes the 32 bit value Data to PCI Configuration Space at the address specified by Port.   Miscellaneous Functions and Macros Table 4-20 lists some miscellaneous helper functions that are described in the following sections. Table 4-20. Miscellaneous Functions and Macros Description LibGetVariable Retrieves and environment variable's value. LibGetVariableAndSIze Retrieves and environment variable's value and its size in bytes. CompareGuid Compares two 128 bit GUIDs. Returns a pointer to a element's containing record. DecimaltoBCD Converts a decimal value to a BCD value. BCDtoDecimal Converts a BCD value to a decimal value. LibCreateProtocolNotifyEvent Creates a notification event that fires every time a protocol instance is created. WaitForSingleEvent Waits for an event to fire or a timeout to expire. WaitForEventWithTimeout Waits for either a SIMPLE_INPUT event or a timeout to occur. RtLibEnableVirtualMappings Converts internal library pointers to virtual runtime pointers. RtConvertList Converts pointers in a linked list to virtual runtime pointers. LibGetSystemConfigurationTable Retrieves a system configuration table from the EFI System Table. LibGetVariable Function The LibGetVariable() function returns the value of the specified variable. VOID * LibGetVariable (     IN CHAR16               *Name,     IN EFI_GUID             *VendorGuid     ); Parameters Name  A Null-terminated Unicode string that is the name of the vendor s variable. VendorGuid  A unique identifier for the vendor. Description This function retrieves the value of the variable specified by Name and VendorGuid.  If the variable exists, space for storing the variable s value is allocated from pool, and a pointer to the variable s value is returned.  Otherwise, NULL is returned. LibGetVariableAndSize Function The LibGetVariableAndSize() function returns the value of the specified variable and its size in bytes. VOID * LibGetVariableAndSize (     IN CHAR16               *Name,     IN EFI_GUID             *VendorGuid,     OUT UINTN               *VarSize     ); Parameters Name  A Null-terminated Unicode string that is the name of the vendor s variable. VendorGuid  A unique identifier for the vendor. VarSize The size of the returned environment variable in bytes. Description This function retrieves the value of the variable specified by Name and VendorGuid.  If the variable exists, space for storing the variable s value is allocated from pool, and a pointer to the variable s value is returned.  Otherwise, NULL is returned.  The size of the variable s value is returned in VarSize. CompareGuid Function The CompareGuid() function compares two GUIDs. CompareGuid(     IN EFI_GUID     *Guid1,     IN EFI_GUID     *Guid2     ); Parameters Guid1 A pointer to a 128 bit GUID. Guid2 A pointer to a 128 bit GUID. Description This function compares two128 bit GUIDs.  If the GUIDs are identical then 0 is returned.  If there are any bit differences in the two GUIDs, a non zero value is returned. Status Codes Returned The two GUIDs are identical. The two GUIDs are not identical CR Macro The CR() macro returns a pointer to an elements containing record . TYPE *     VOID    *Record,             TYPE,             Field,     UINTN   Signature     ); Parameters Record  A pointer to a field within the containing record. TYPE  The name of the containing record s data structure type. record. Field  The name of the field from the containing record to which Record points. Signature  The signature for the containing record s data structure. Description This macro returns a pointer to a data structure from one of the data structure s elements. DecimaltoBCD Function The DecimaltoBcd() function converts a decimal value to a BCD value.. UINT8 DecimaltoBCD(     IN  UINT8 DecValue     ); Parameters DecValue An 8 bit decimal value. Description This function converts an 8 bit decimal value to an 8 bit BCD value and returns the BCD value.  BCDtoDecimal Function The BCDtoDecimal() function converts a BCD value to a decimal value. UINT8 BCDtoDecimal(     IN  UINT8 BcdValue     ); Parameters BcdValue An 8 bit BCD value. Description This function converts an 8 bit BCD value to an 8 bit decimal value and returns the decimal value. LibCreateProtocolNotifyEvent Function The LibCreateProtocolNotifyEvent() function creates a notification event and registers that event with all the protocol instances specified by ProtocolGuid.  EFI_EVENT LibCreateProtocolNotifyEvent(     IN EFI_GUID             *ProtocolGuid,     IN EFI_TPL               NotifyTpl,     IN EFI_EVENT_NOTIFY      NotifyFunction,     IN VOID                 *NotifyContext,     OUT VOID                *Registration     ); Parameters ProtocolGuid Supplies GUID of the protocol upon whose installation the event is fired. NotifyTpl Supplies the task priority level of the event notifications. NotifyFunction Supplies the function to notify when the event is signaled. NotifyContext The context parameter to pass to NotifyFunction.  Registration A pointer to a memory location to receive the registration value.  This value is passed to LocateHandle() to obtain new handles that have been added that support the ProtocolGuid-specified protocol.  Description This function causes the notification function to be executed for every protocol of type ProtocolGuid instance that exists in the system when this function is invoked.  In addition, every time a protocol of type ProtocolGuid instance is added, the notification function is also executed.  This function returns the notification event that was created. WaitForSingleEvent Function The WaitForSingleEvent() function waits for a given event to fire, or for an optional timeout to expire. EFI_STATUS WaitForSingleEvent(     IN EFI_EVENT            Event,     IN UINT64               Timeout OPTIONAL     ); Parameters Event The event to wait for. Timeout An optional timeout value in 100 ns units. Description This function waits for Event to fire.  If Event does fire, then EFI_SUCCESS is returned.  If Timeout is zero, then this function will wait indefinitely for Event to fire.  If Timeout is not zero, then this function will wait for both Event and the Timeout period.  If the Timeout expires, then EFI_TIME_OUT will be returned. Status Codes Returned EFI_SUCCESS Event fired before Timeout expired. EFI_TIME_OUT Timout expired before Event fired.. WaitForEventWithTimeout Function The WaitForEventWithTimeout() function prints a string for the given number of seconds until either the timeout expires, or the user presses a key. WaitForEventWithTimeout (     IN  EFI_EVENT       Event,     IN  UINTN           Timeout,     IN  UINTN           Row,     IN  UINTN           Column,     IN  CHAR16          *String,     IN  EFI_INPUT_KEY   TimeoutKey,     OUT EFI_INPUT_KEY   *Key     ) Parameters Event The SIMPLE_TEXT_INPUT event to wait for. Timeout Timeout value in 1 second units The row to print String. Column The column to print String. String The string to display on the standard output device. TimeoutKey The key to return in Key if a timeout occurs. Either the key the user pressed or TimeoutKey if the Timeout expired. Description This function waits for Event to fire or Timeout to expire.  If Event does fire, then a keystroke is read from the standard input device a returned in Key.  If the Timeout in seconds does expire, then TimeoutKey is returned in Key.  For each second the passes while this function is waiting, String is displayed on the standard output device at (Row, Column).    RtLibEnableVirtualMappings Function The RtLibEnableVirtualMappings() function converts runtime pointers internal to the EFI Library to a new virtual base address. RtLibEnableVirtualMappings (     VOID     ); Parameters Description This function converts any runtime pointers that are internal to the EFI Library to a new virtual address base.  This function should only be called once as an OS transitions the EFI firmware from a flat physical memory model to a virtual runtime memory model. RtConvertList Function The RtConvertList() function converts all the pointers in a doubly linked list to a new virtual base address. #define EFI_OPTIONAL_PTR            0x00000001 #define EFI_INTERNAL_FNC            0x00000002  #define EFI_INTERNAL_PTR            0x00000004  RtConvertList (     IN UINTN             DebugDisposition,     IN OUT LIST_ENTRY    *ListHead     ); Parameters DebugDisposition A bitmask that describes the pointer types in the linked list. ListHead A pointer to a doubly linked list. Description This function converts all the Flink and Blink fields of the doubly linked list ListHead to a new virtual base address. LibGetSystemConfigurationTable Function The LibGetSystemConfigurationTable() function returns a system configuration table that is stored in the EFI System Table based on the provided GUID. EFI_STATUS LibGetSystemConfigurationTable (     IN EFI_GUID          *TableGuid,     IN OUT VOID          **Table     ); Parameters TableGuid A pointer to the table's GUID type. Table On exit, a pointer to a system configuration table. Description This function searches the list of configuration tables stored in the EFI System Table for a table with a GUID that matches TableGuid.  If one is found, then a pointer to the configuration table is returned in Table., and EFI_SUCCESS is returned.  If a matching GUID can not be found, then EFI_NOT_FOUND is returned. Status Codes Returned EFI_SUCCESS A configuration table matching TableGuid was found. EFI_NOT_FOUND A configuration table matching TableGuid could not be found. EFI LibraryIntel Boot Initiative Specification DRAFT PAGE   07/14/99 Version 0.70.2 PAGE   Version 0.70.99   04/24/00 Version 0.70.99   04/24/00  PAGE  DRAFT Contents  PAGE  Intel Confidential  DATE \@ "MM/dd/yy"  04/24/00 Version 0.70.9 Version 0.70.9  DATE \@ "MM/dd/yy"  04/24/00 Intel Confidential  PAGE  Version 0.70.99   04/24/00  PAGE  EFI LibraryIntel Boot Initiative Specification DRAFT DRAFT Contents  PAGE  04/24/00 Version 0.70.99 Version 0.70.99 04/24/00  PAGE  Version 0.70.99   04/24/00  PAGE  EFI LibraryIntel Boot Initiative Specification DRAFT DRAFT Introduction  PAGE  04/24/00 Version .70.99 Version 0.70.99   04/24/00  PAGE  Version 0.70.99   04/24/00  PAGE  Intel Boot InitiativeExtensible Firmware Interface Specification DRAFT DRAFT Introduction  PAGE  Intel Confidential  DATE \@ "MM/dd/yy"  04/24/00 Version 0.70.9 Version 0.70.9    DATE \@ "MM/dd/yy"  04/24/00 Intel Confidential  PAGE  Version 0.70.99   04/24/00  PAGE  Intel Boot InitiativeExtensible Firmware Interface Specification DRAFT DRAFT Introduction  PAGE   DATE \@ "MM/dd/yy"  04/24/00 Version .70.99 Version 0.70.9    DATE \@ "MM/dd/yy"  04/24/00 Intel Confidential  PAGE  Version 0.70.99   04/24/00  PAGE  EFI LibraryIntel Boot Initiative Specification DRAFT DRAFT Functions and Macros  PAGE   DATE \@ "MM/dd/yy"  04/24/00 Version 0.7.99 Version 0.70.99    DATE \@ "MM/dd/yy"  04/24/00  PAGE  Version 0.70.99   04/24/00  PAGE  S3fgH {3&gH ~ytojc yrng`YRN }xsnid_Z ~ytoje`[ ~ytoje`[ ~ytoje`[ ~ytoje`[ ~zslhaZV ~{vqnkhcUROLI xupkfa\Y ~|wrmhc^Y {skcY xusnkkfa\YTO ~wsleaZ }vokd]YR {wpie^WS {tpib^ |yvsp ~wple^Z {tpib^WP }vokd]YR yungc\U }xqjf_XTM {wpie^WS }vokd]YR }vrkd`YRN yungc\UQ yvqjc_ ~wsleaZS }vokd]YR {wrole^ZS {wpie^WS |wrm|j\Y |wrmh rkg`YU zwurooje`]XS] |uqeb`]ZZU zupmjgda^m[ zslhaZV }qnlgdd_ZWR }xsni ~zslhZWUR zsoa^\Y yrng`\U {wkhfa^^YT |uqjc_X {wpie^WS |wrmhc`[VQ ~ytoje`[ {vqlid_Z |xqjf_ }vokd]YRK }olif S3fgH S3fgH S3fgH S3fgH S3fgH S3fgH
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\base\efiutil\sdk\notes\efi_dg.doc ===
Microsoft Word Document MSWordDoc Word.Document.8Title _PID_GUIDNancy Navarro 8x11spec97ibi3.dot Michael Kinney Microsoft Word 8.0yfU/} |QP 6c -6}#. L6y~V( foWxnyfU/} yfU/} IDATx u?Kd% 2v&eG UoVGm Faz!B` uXxSZ,ID="{C56AC065-DE35-11D2-99FC-0090273FC14D}" Document=ThisDocument/&H00000000 Module=NewMacros Name="Project" HelpContextID="0" CMG="9092446248624862486248" DPB="0200D6A649A749A749" GC="7476A03860AB61AB6154" [Host Extender Info] &H00000001={3832D640-CF90-11CF-8E43-00A0C911005A};VBE;&H00000000 [Workspace] ThisDocument=44, 44, 840, 674,  NewMacros=22, 22, 982, 679, ZThisDocument NewMacrosMacro recorded 03/19/99 by Michael Kinney Project.NewMacros.FH Macro recorded 03/19/99 by Michael Kinney Project.NewMacros.FV Project.NewMacros.FB Macro recorded 03/22/99 by Michael Kinney Project.NewMacros.FA Macro recorded 03/24/99 by Michael Kinney  FH Macro  Macro recorded 03/19/99 by Michael Kinney Heading 3  Fuction  FV Macro  Macro recorded 03/19/99 by Michael Kinney Parameters9 Function5 Stop Recording$  FV Macro  Macro recorded 03/19/99 by Michael Kinney Description Function5  FV Macro  Macro recorded 03/19/99 by Michael Kinney Description Function5 CodeIBIProtoArgument  Times New Roman  FA Macro  Macro recorded 03/22/99 by Michael Kinney Stop Recording$  FA Macro  Macro recorded 03/22/99 by Michael Kinney CodeIBIProtoArgument   FB Macro  Macro recorded 03/24/99 by Michael Kinney CodeIBIPrototype  Attribut e VB_Nam e = "New Macros" Sub FH( Descript corded 0 3/19/99  by Micha el Kinne ProcD VInvo ke_Func ject. omeKey U nit:=wdL ActiveD ocument. s("Head ing 3" .Type Text  Paragr iAiCopy MeEscap $MoAown {, PCoun ind.Clea rFormatt With  Al.Bs Replace? MatchC Wild*c S`)ds !Z!+C) +.E8xec@ CodeIBI htoArgB Tab &  Times  Roma Itali wdToggl ColorIn "Fook 5Ck$ZBl$BAttribut e VB_Nam e = "Thi sDocumen 1Normal VCreata `False Predecl "Expose Template Deriv stomiz336f2c544 536f914f7 Win16 Win32 EFILIB7 stdole MSFormsC ThisDocument< _Evaluate Normal Office Project- Module1b NewMacros SelectionZ Style ActiveDocument Styles EndKey5 wdLine TypeText TypeParagraph Documentj HomeKey MoveDown Count0v MoveUp Findn ClearFormatting Replacement Forward WrapWy wdFindContinueBP MatchCase MatchWholeWord MatchWildcards MatchSoundsLike MatchAllWordForms ExecuteY EscapeKey CommandBars Visible wdFindAskt Paste vbTabc9 FontU Italic! wdToggle ColorIndex wdAutoKV*\CNormalrU ThisDocument NewMacros Project C:\Program Files\Common Files\Microsoft Shared\VBA\VBA332.dll C:\Program Files\Microsoft Office\Office\MSWORD8.OLB C:\WINNT\System32\STDOLE2.TLB stdole C:\WINNT\System32\MSForms.TWD MSForms C:\TEMP\VBE\MSForms.EXD C:\Program Files\Microsoft Office\Office\MSO97.DLL Office CodeIBIPrototype CodeIBIProtoArgumentNMacro recorded 03/19/99 by Michael Kinney Project.NewMacros.FH Project.NewMacros.FV Macro recorded 03/22/99 by Michael Kinney Project.NewMacros.FA Macro recorded 03/24/99 by Michael Kinney Project.NewMacros.FB4Project \G{00020 0046}# 2.0#0#C: \WINNT\S ystem32\ STDOLE2. tomation mMSFo@rms> FC56AC0 4D-DE35- 11D2-99F F90273F0C14D WD#Micro soft   Libprary D4E493-E PTEMP \VBE\ CvN@SalCv 2DF8D04C -5BFA-10 1B-BDE5 gram FilXes\ SO97.DLLCHi ThisDoc@ument h@6sD SNewMaEAbjbjt+t+ EFI Developer s Guide Version 0.997  May 4 December 21, 20008 THIS SPECIFICATION IS PROVIDED "AS IS" WITH NO WARRANTIES  WHATSOEVER, INCLUDING ANY WARRANTY OF MERCHANTABILITY,  FITNESS FOR ANY PARTICULAR PURPOSE, OR ANY WARRANTY OTHERWISE ARISING OUT OF ANY PROPOSAL, SPECIFICATION OR SAMPLE.  A license is hereby granted to copy and reproduce this specification for internal use only. No other license, express or implied, by estoppel or otherwise, to any other intellectual property rights is granted herein. Intel disclaims all liability, including liability for infringement of any proprietary rights, relating to implementation of information in this specification.  Intel does not warrant or represent that such implementation(s) will not infringe such rights.  Third-party trademarks are the property of their respective owners. Copyright ( 1999. Intel Corporation, All Rights Reserved. Revision History Revision Revision History Author Initial review draft 5/3/99 Intel Corporation Updated for the 0.91 Sample Implementation 7/14/99 Intel Corporation Updated for the 0.91.009 Sample Implementation 11/18/99 Intel Corporation Updated for the 0.99.12.20 Sample Implementation 05/04/00 Intel Corporation Table of Contents  TOC \o \t  "1-4, AppHeading1,1, AppHeading2,2" 1 Introduction  PAGEREF _Toc482076405 \h  Organization of this Document  PAGEREF _Toc482076406 \h  Goals  PAGEREF _Toc482076407 \h  Target Audience  PAGEREF _Toc482076408 \h  Prerequisite Specifications  PAGEREF _Toc482076409 \h  Conventions Used in This Document  PAGEREF _Toc482076410 \h  1.5.1 Typographic Conventions  PAGEREF _Toc482076411 \h  2 EFI Shell  PAGEREF _Toc482076412 \h  Invocation of the EFI Shell  PAGEREF _Toc482076413 \h  EFI Shell Command Syntax  PAGEREF _Toc482076414 \h  2.2.1 Variable Substitution  PAGEREF _Toc482076415 \h  2.2.2 Wildcard Expansion  PAGEREF _Toc482076416 \h  2.2.3 Output Redirection  PAGEREF _Toc482076417 \h  2.2.4 Quoting  PAGEREF _Toc482076418 \h  2.2.5 Execution of Batch Scripts  PAGEREF _Toc482076419 \h  2.2.6 Error Handling in Batch Scripts  PAGEREF _Toc482076420 \h  2.2.7 Comments in Script Files  PAGEREF _Toc482076421 \h  EFI Shell Commands  PAGEREF _Toc482076422 \h  2.3.1  PAGEREF _Toc482076423 \h  2.3.2  PAGEREF _Toc482076424 \h  2.3.3  PAGEREF _Toc482076425 \h  2.3.4 alias  PAGEREF _Toc482076426 \h  2.3.5  PAGEREF _Toc482076427 \h  2.3.6  PAGEREF _Toc482076428 \h  2.3.7  PAGEREF _Toc482076429 \h  2.3.8  PAGEREF _Toc482076430 \h  2.3.9  PAGEREF _Toc482076431 \h  2.3.10  PAGEREF _Toc482076432 \h  2.3.11  PAGEREF _Toc482076433 \h  2.3.12 pause  PAGEREF _Toc482076434 \h  2.3.13  PAGEREF _Toc482076435 \h  2.3.14 attrib  PAGEREF _Toc482076436 \h  2.3.15  PAGEREF _Toc482076437 \h  2.3.16  PAGEREF _Toc482076438 \h  2.3.17  PAGEREF _Toc482076439 \h  2.3.18  PAGEREF _Toc482076440 \h  2.3.19  PAGEREF _Toc482076441 \h  2.3.20  PAGEREF _Toc482076442 \h  2.3.21 hexedit  PAGEREF _Toc482076443 \h  2.3.22  PAGEREF _Toc482076444 \h  2.3.23  PAGEREF _Toc482076445 \h  2.3.24 memmap  PAGEREF _Toc482076446 \h  2.3.25 mkdir  PAGEREF _Toc482076447 \h  2.3.26  PAGEREF _Toc482076448 \h  2.3.27 nshell  PAGEREF _Toc482076449 \h  2.3.28  PAGEREF _Toc482076450 \h  2.3.29  PAGEREF _Toc482076451 \h  2.3.30  PAGEREF _Toc482076452 \h  2.3.31  PAGEREF _Toc482076453 \h  2.3.32  PAGEREF _Toc482076454 \h  2.3.33  PAGEREF _Toc482076455 \h  2.3.34  PAGEREF _Toc482076456 \h  2.3.35 dmpstore  PAGEREF _Toc482076457 \h  2.3.36  PAGEREF _Toc482076458 \h  2.3.37 getmtc  PAGEREF _Toc482076459 \h  2.3.38  PAGEREF _Toc482076460 \h  2.3.39  PAGEREF _Toc482076461 \h  2.3.40  PAGEREF _Toc482076462 \h  2.3.41 reset  PAGEREF _Toc482076463 \h  2.3.42 setsize  PAGEREF _Toc482076464 \h  2.3.43 stall  PAGEREF _Toc482076465 \h  2.3.44 touch  PAGEREF _Toc482076466 \h  3 Writing EFI Shell Commands  PAGEREF _Toc482076467 \h  Writing a Shell Command  PAGEREF _Toc482076468 \h  Compiling a Shell Command  PAGEREF _Toc482076469 \h  Adding Commands to the EFI Shell  PAGEREF _Toc482076470 \h  Removing Commands from the EFI Shell  PAGEREF _Toc482076471 \h  4 EFI Applications  PAGEREF _Toc482076472 \h  Writing EFI Applications  PAGEREF _Toc482076473 \h  Compiling EFI Applications  PAGEREF _Toc482076474 \h  Writing EFI Applications with EFI Library Support  PAGEREF _Toc482076475 \h  Running EFI Applications  PAGEREF _Toc482076476 \h  5 EFI OS Loaders  PAGEREF _Toc482076477 \h  Device Path and Image Information of the OS Loader  PAGEREF _Toc482076478 \h  Accessing Files in the Device Path of the OS Loader  PAGEREF _Toc482076479 \h  Finding the OS Partition  PAGEREF _Toc482076480 \h  Getting the Current System Configuration  PAGEREF _Toc482076481 \h  Getting the Current Memory Map  PAGEREF _Toc482076482 \h  Getting Environment Variables  PAGEREF _Toc482076483 \h  Transitioning to an OS Kernel  PAGEREF _Toc482076484 \h  A EFI Boot Time Services  PAGEREF _Toc482076485 \h  Event Services  PAGEREF _Toc482076486 \h  Memory Allocation Services  PAGEREF _Toc482076487 \h  Protocol Handler Services  PAGEREF _Toc482076488 \h  Image Services  PAGEREF _Toc482076489 \h  Miscellaneous Services  PAGEREF _Toc482076490 \h  B EFI Run Time Services  PAGEREF _Toc482076491 \h  Variable Services  PAGEREF _Toc482076492 \h  Time Services  PAGEREF _Toc482076493 \h  Virtual Memory Services  PAGEREF _Toc482076494 \h  Miscellaneous Services  PAGEREF _Toc482076495 \h  C EFI Protocol Interfaces  PAGEREF _Toc482076496 \h  Device Path Protocol  PAGEREF _Toc482076497 \h  Device I/O Protocol  PAGEREF _Toc482076498 \h  Simple Input Protocol  PAGEREF _Toc482076499 \h  Simple Text Output Protocol  PAGEREF _Toc482076500 \h  Block I/O Protocol  PAGEREF _Toc482076501 \h  Disk I/O Protocol  PAGEREF _Toc482076502 \h  Simple File System Protocol  PAGEREF _Toc482076503 \h  File System Protocol  PAGEREF _Toc482076504 \h  Load File Protocol  PAGEREF _Toc482076505 \h  Loaded Image Protocol  PAGEREF _Toc482076506 \h  Serial I/O Protocol  PAGEREF _Toc482076507 \h  Unicode Collation Protocol  PAGEREF _Toc482076508 \h  PXE I/O Protocol  PAGEREF _Toc482076509 \h  Simple Network Protocol  PAGEREF _Toc482076510 \h  D EFI Library Functions and Macros  PAGEREF _Toc482076511 \h  Initialization Functions  PAGEREF _Toc482076512 \h  Linked List Support Macros  PAGEREF _Toc482076513 \h  String Functions  PAGEREF _Toc482076514 \h  Memory Support Functions  PAGEREF _Toc482076515 \h  CRC Support Functions  PAGEREF _Toc482076516 \h  Text I/O Functions  PAGEREF _Toc482076517 \h  Math Functions  PAGEREF _Toc482076518 \h  Spin Lock Functions  PAGEREF _Toc482076519 \h  Handle and Protocol Support Functions  PAGEREF _Toc482076520 \h  File I/O Support Functions  PAGEREF _Toc482076521 \h  Device Path Support Functions  PAGEREF _Toc482076522 \h  PCI Functions and Macros  PAGEREF _Toc482076523 \h  Miscellaneous Functions and Macros  PAGEREF _Toc482076524 \h  E Sample OS Loader Listing  PAGEREF _Toc482076525 \h  F Sample OS Loader Output  PAGEREF _Toc482076526 \h  Tables  TOC \t "TableTitle,2"  Table 1-1. Specification Organization and Contents  PAGEREF _Toc482076527 \h  Table 2-1. Wildcard Character Expansion  PAGEREF _Toc482076528 \h  Table 2-2. Output Redirection Syntax  PAGEREF _Toc482076529 \h  Table 2-3. List of Internal EFI Shell Commands  PAGEREF _Toc482076530 \h  Table 2-4. List of External EFI Shell Commands  PAGEREF _Toc482076531 \h  Table 2-5. List of Debug EFI Shell Commands  PAGEREF _Toc482076532 \h  Table A-1. Event Services  PAGEREF _Toc482076533 \h  Table A-2. Memory Allocation Services  PAGEREF _Toc482076534 \h  Table A-3. Protocol Handler Services  PAGEREF _Toc482076535 \h  Table A-4. Image Services  PAGEREF _Toc482076536 \h  Table A-5. Miscellaneous Services  PAGEREF _Toc482076537 \h  Table B-1. Variable Services  PAGEREF _Toc482076538 \h  Table B-2. Time Services  PAGEREF _Toc482076539 \h  Table B-3. Virtual Memory Services  PAGEREF _Toc482076540 \h  Table B-4. Miscellaneous Services  PAGEREF _Toc482076541 \h  Table C-2. Device I/O Protocol Interfaces  PAGEREF _Toc482076542 \h  Table C-3. Simple Input Protocol Interfaces  PAGEREF _Toc482076543 \h  Table C-4. Simple Text Output Protocol Interfaces  PAGEREF _Toc482076544 \h  Table C-5. Block I/O Protocol Interfaces  PAGEREF _Toc482076545 \h  Table C-6. Disk I/O Protocol Interfaces  PAGEREF _Toc482076546 \h  Table C-7. Simple File System Protocol Interfaces  PAGEREF _Toc482076547 \h  Table C-8. File System Protocol Interfaces  PAGEREF _Toc482076548 \h  Table C-9. Load File Protocol Interfaces  PAGEREF _Toc482076549 \h  Table C-10. Loaded Image Protocol Interfaces  PAGEREF _Toc482076550 \h  Table C-11. Serial I/O Protocol Interfaces  PAGEREF _Toc482076551 \h  Table C-12. Unicode Collation Protocol Interfaces  PAGEREF _Toc482076552 \h  Table C-13. PXE I/O Protocol Interfaces  PAGEREF _Toc482076553 \h  Table C-14. Simple Network Protocol Interfaces  PAGEREF _Toc482076554 \h  Table D-1. Initialization Functions  PAGEREF _Toc482076555 \h  Table D-2. Linked List Support Macros  PAGEREF _Toc482076556 \h  Table D-3. String Functions  PAGEREF _Toc482076557 \h  Table D-4. Memory Support Functions  PAGEREF _Toc482076558 \h  Table D-5. CRC Support Functions  PAGEREF _Toc482076559 \h  Table D-6. Text I/O Functions  PAGEREF _Toc482076560 \h  Table D-7. Math Functions  PAGEREF _Toc482076561 \h  Table D-8. Spin Lock Functions  PAGEREF _Toc482076562 \h  Table D-9. Handle and Protocol Support Functions  PAGEREF _Toc482076563 \h  Table D-10. File I/O Support Functions  PAGEREF _Toc482076564 \h  Table D-11. Device Path Support Functions  PAGEREF _Toc482076565 \h  Table D-12. Miscellaneous Functions and Macros  PAGEREF _Toc482076566 \h  Table D-13. Miscellaneous Functions and Macros  PAGEREF _Toc482076567 \h  Introduction seq chapter \r1 The Extensible Firmware Interface (EFI) Specification describes a set of Application Program Interfaces (APIs) and data structures that are exported by a system s firmware.  Software that takes advantage of these APIs and data structures may take one of many forms.  These include an EFI device driver, an EFI shell, an EFI system utility, an EFI system diagnostic, or an Operating System (OS)  loader.  In addition, the EFI Specification describes a set of run-time services that are available to an OS while the OS has full control of the system. The sample implementation of the EFI Specification includes an EFI Shell.  An EFI Shell is a special type of EFI Application that allows other EFI Applications to be launched.  The combination of the EFI firmware and the EFI Shell provide an environment that can be modified to easily adapt to many different hardware configurations.  The EFI shell is a simple, interactive environment that allows EFI device drivers to be loaded, EFI applications to be launched, and operating systems to be booted.  In addition, the shell also provides a set of basic commands used to  manage files and the system environment variables. An EFI application has access to the APIs and data structures exported by the EFI firmware.  An EFI application may be any number of things including a system utility, a system diagnostic, or an OS loader.  Many of the EFI Shell commands are implemented as EFI applications. An OS loader is a special type of EFI application because it typically will load a number of other files related to the OS  into memory, and then transfer control an OS kernel.  During this process, the OS loader may collect the system s configuration information that is maintained by the EFI firmware and put it into a form that can be used by the OS kernel.  An EFI device driver provides a set of interfaces that allow communication with a hardware device.  The types of devices that are typically available in the EFI environment include keyboard, display, hard drive, network, CD-ROM, floppy, etc.  The EFI Specification provides mechanisms to add new types of device drivers to the base firmware so new types of devices can be accessed from the EFI environment and presented to the OS loader during the boot process.  These device drivers can be loaded from the system s non-volatile storage, a PCI Option ROM, or any system device that is natively supported by the EFI environment.  Device drivers are very similar to EFI applications.  They have the same access to all the APIs and data structures.  The main difference is that they typically add a set of interfaces that provide access to a hardware device.  When the device driver exits, the EFI device driver stays resident in memory, so those interfaces may be used by other types of EFI applications to access the hardware device. The sample implementation of the EFI firmware and the EFI shell includes a set of library functions and macros.  These functions and macros represent one possible minimal implementation of the EFI environment.  Together, the EFI APIs and EFI library functions, provide the functionality required for basic console I/O, basic disk I/O, memory management, and string manipulation.  The EFI library also provides functions for 64-bit math operations, CRC checks, spin locks, and helper functions to manage device handle, device protocol, and device paths.  The appendices in this document contain a complete list of the APIs, library functions, and library macros that are available to an EFI developer.  Please refer to the appropriate specification for complete details on all the APIs and macros. Organization of this Document This specification is organized as follows:  XE "organization, document"   XE "contents, document"   Table 1-1.1-  seq tbl \* MERGEFORMAT  Specification Organization and Contents Chapter Description Chapter 1: Introduction Introduction to EFI Development. Chapter 2: EFI Shell Booting  Overview of EFI shell commands.  Chapter 3: Writing EFI Shell Commands EFI File System Structures Describes how to write, compile, and run EFI Shell commands .  Chapter 4 : EFI Applications Describes how to write, compile, and run EFI Applications.  Chapter 5: EFI OS Loaders Describes how to write an EFI OS loader. Appendix A: EFI Boot Time Services List and high level description of EFI Boot Time Services. Appendix B: EFI Run Time Services List and high level description of EFI Run Time Services. Appendix C: EFI Protocol Interfaces List and high level description of EFI Protocol Interfaces. Appendix D: EFI Library Overview List and high level description of EFI Library functions. Appendix E: Sample OS Loader Listing C source code to OS Loader sample. Appendix F 5: Sample OS Loader Output Output from OS Loader sample. Goals The primary goal of  this document is to provide an overview of the EFI environment and its capabilities. This includes using the EFI shell, writing EFI applications, and writing EFI device drivers. Target Audience This document is intended for the following readers:  XE "target audience"  Developers who will be utilizing and writing applications, including tests and diagnostics, OS loaders, and device drivers for the EFI environment. Prerequisite Specifications Extensible Firmware Interface Specification Version 0.9, Intel Corporation, 1999. EFI Library Specification Version 0.9, Intel Corporation , 1999. Conventions Used in This Document This document uses typographic and illustrative conventions described below.  XE "conventions, document"   XE "little endian"  Typographic Conventions  XE "typographic conventions"  The following typographic conventions are used in this document to illustrate programming concepts: Prototype This typeface is use to indicate prototype code. Argument This typeface is used to indicate arguments. This typeface is used to indicate actual code or a programming construct. register This typeface is used to indicate a processor register. EFI Shell This section describes the features of the EFI Shell.  The EFI Shell supports a command line interface, batch scripting, a set of internal shell commands, and a set of external shell commands. Invocation of the EFI Shell When the EFI Shell is invoked, it first looks for commands in the file startup.nsh on the execution path defined by the environment.  There is no requirement for a startup file to exist. Once the startup file commands are completed, the shell looks for commands from console input device. EFI Shell Command Syntax The EFI Shell implements a programming language that provides control over the execution of individual commands.  When the shell scans its input, it always treats certain characters specially: (#, >, %, *, ?, [, ^, space, and newline). Care should be exercised in the use of these characters. When a command contains a defined alias the shell replaces the alias with its definition (see alias command in this chapter).  If the argument is prefixed with the ^ character, however, the argument is treated as a literal argument and alias processing is not performed. In interactive execution, the shell performs variable substitution, then expands wildcards before the command is executed.  In batch script execution, the shell performs argument substitution, then variable substitution, then expands wildcards before the command is executed. Variable Substitution Environment variables can be set and viewed through the use of the set command (see set command in this chapter).  To access the value of an environment variable as an argument to a shell command, delimit the name of the variable with the % character before and after the variable name; for example, %myvariable%. The shell maintains a special variable, named lasterror.  The variable contains the return code of the most recently executed shell command. Wildcard Expansion The * , ? and [ characters can be used as wildcard characters in filename arguments to shell commands.  If an argument contains one or more of these characters, the shell processes the argument for file meta-arguments and expands the argument list to include all filenames matching the pattern.  These characters are part of patterns which represent file and directory names. Table 2-1. Wildcard Character Expansion Character Sequence Meaning Matches zero or more characters in a file name Matches exactly one character of a file name "[chars]" Defines a set of characters; the pattern matches any single character in the set. Characters in the set are not separated.  Ranges of characters can be specified by specifying the first character in a range, then the   character, then the last character in the range.  Example: [a-zA-Z] Output Redirection Output of EFI Shell commands can be redirected to files. The syntax of this is as follows: Command > unicode_output_file_pathname Command >a ascii_output_file_pathname Command 1> unicode_output_file_pathname Command 1>a ascii_output_file_pathname Command 2> unicode_output_file_pathname Command 2>a ascii_output_file_pathname Command >> unicode_output_file_pathname Command >>a ascii_output_file_pathname Command 1>> unicode_output_file_pathname Command 1>>a ascii_output_file_pathname The meanings of the special character sequences used to denote output redirection are shown in Table 2-1. Table 2-2. Output Redirection Syntax Character Sequence Meaning redirect standard output to a unicode file redirect standard output to an ascii file redirect standard output to a unicode file "1>a" redirect standard output to an ascii file redirect standard error to unicode file "2>a" redirect standard error to ascii file redirect standard output appended to a unicode file ">>a" redirect standard output appended to an ascii file "1>>" redirect standard output appended to a unicode file "1>>a" redirect standard output appended to an ascii file The shell will redirect standard output to a single file and standard error to a single file.  Redirecting both standard output and standard error to the same file is allowed.  Redirecting Standard output to more than one file on the same command is not supported.  Similarly, redirecting to multiple files is not supported for standard error. Quoting Quotation marks in the EFI Shell are used for argument grouping. A quoted string is treated as a single argument to a command, and any whitespace characters included in the quoted string are just part of that single argument.  Quoting an environment variable does not have any effect on the de-referencing of that variable.  Double quotation marks   are used to denote strings.  Single quotation marks are not treated specially by the shell in any way.  Empty strings are treated as valid command line arguments. Execution of Batch Scripts The EFI Shell has the capability of executing commands from a file (batch script).  EFI Shell batch script files are named using the   extension.  Batch script files can be either UNICODE or ASCII format files.  EFI Shell script files are invoked by entering the filename at the command prompt, with or without the filename extension. Up to nine (9) positional arguments are supported for batch scripts.  Positional argument substitution is performed before the execution of each line in the script file.  Positional arguments are denoted by %n, where n is a digit between 0 and 9.  By convention, %0 is the name of the script file currently being executed.  In batch scripts, argument substitution is performed first, then variable substitution.  Thus, for a variable containing %2, the variable will be replaced with the literal string %2, not the second argument on the command line. If no real argument is found to substitute for a positional argument, then the positional argument is ignored. Script file execution can be nested; that is, script files may be executed from within other script files.  Recursion is allowed. Output redirection is fully supported.  Output redirection on a command in a script file causes the output for that command to be redirected.  Output redirection on the invocation of a batch script causes the output for all commands executed from that batch script to be redirected to the file, with the output of each command appended to the end of the file. By default, both the input and output for all commands executed from a batch script are echoed to the console.  Display of commands read from a batch file can be suppressed via the echo -off command (see echo).   If output for a command is redirected to a file, then that output is not displayed on the console.  Note that commands executed from a batch script are not saved by the shell for DOSkey history (up-arrow command recall). Error Handling in Batch Scripts By default, if an error is encountered during the execution of a command in a batch script, the script will continue to execute.  The lasterror shell variable is provided allow batch scripts to test the results of the most recently executed command using the if command.  This variable is not an environment variable, but is a special variable maintained by the shell for the lifetime of that instance of the shell. Comments in Script Files Comments can be embedded in batch scripts.  The # character on a line is used to denote that all characters on the same line and to the right of the # are to be ignored by the shell.  Comments are not echoed to the console. EFI Shell Commands There are two types of commands available with the shell:  internal commands and external commands.  Internal commands are part of the EFI shell image, while external commands are stand-alone EFI applications.  Note: This allows users to add their own user-defined commands. The user may also run an EFI application by entering the name of the application at the command prompt.  In addition, the active drive may be changed by entering the mapped name followed by a   at the command prompt. Table 2-3. List of Internal EFI Shell Commands Command Built-in Description Displays the list of available commands Displays the list of Globally Unique Identifiers. Displays, sets, or deletes environment variables. Alias Define as alias for an EFI command or an EFI application. Displays information on the protocol handles. Maps a user defined name to a protocol handle. Sets the working directory for the EFI shell environment. Toggle console output or write text to the console For / endfor Control flow construct: Looping (script-only) If / endif Control flow construct: Conditional execution (script-only) Control flow construct: Jump (script-only) Pause Pause for keyboard input; exit on   (script-only) Exit the shell  Table 2-4. List of External EFI Shell Commands Command Built-in Description Attrib Get/Set file attributes. Manage boot and driver environment variables. Clear the standard output device. Compare two files. Copy a file. Get/Set the system's date. Unicode/ASCII text editor. Hexedit Hex editor Load an EFI Device Driver. Displays the contents of a directory. Memmap Displays the memory map. Mkdir Creates a new directory. Changes the display mode of the standard output device. Move a file from one location to another on a disk. Nshell Invoke another EFI Shell. Reset Reset the system. Deletes a file or a directory. Displays contents of a text file. Get/Set the system's time. Display version information on the EFI firmware. Get/Set volume information on a disk. Table 2-5. List of Debug EFI Shell Commands Command Built-in Description Display a block from a block device. Display the contents of memory. Dmpstore Display all the environment variables and their values. Set the current debug error level. Getmtc Display the value of the monotonic counter Perform an PCI I/O, PCI Memory, PCI Configuration, or MMIO cycle. Display all the PCI devices in the system. Setsize Set the size of a file. Stall Stall the processor for a given number of microseconds. Touch Set the date and time of a file to the current date and time. help  help [-b] [-b]     - Display one screen at a time  The help command displays the list of commands that are built into the EFI Shell.  The following example shows the output from this command. Examples Shell> help help [internal command]        - Displays this help guid [sname]                   - Dump known guid ids set [-d] [sname] [value]       - Set/get environment variable alias [-d] [sname] [value]     - Set/get alias settings dh [-p prot_id] | [handle]     - Dump handle info map [-dvr] [sname[:]] [handle] - Map shortname to device path cd [path]                      - Updates the current directory echo [[-on | -off] | [text]    - Echo text to stdout or toggle script echo if [not] condition then        - Script-only: Condition is "string1 == string2"  or "exist file" endif                          - Script-only: Terminate effect of if command goto label                     - Script-only: Jump to label location in script for var in <set>               - Script-only: loop construct endfor                         - Script-only: delimiter for loop construct pause                          - Script-only: prompt to quit or continue Shell> guid  guid [-b] [-b]     - Display one screen at a time  This command displays a list of all the GUIDs that have been registered with the EFI environment.  The following example shows the output from this command. Examples Shell> guid   DevIo           : AF6AC311-84C3-11D2-8E3C-00A0C969723B   diskio          : CE345171-BA0B-11D2-8E4F-00A0C969723B   blkio           : 964E5B21-6459-11D2-8E39-00A0C969723B  *   txtin           : 387477C1-69C7-11D2-8E39-00A0C969723B   txtout          : 387477C2-69C7-11D2-8E39-00A0C969723B  *   fs              : 964E5B22-6459-11D2-8E39-00A0C969723B   load            : 56EC3091-954C-11D2-8E3F-00A0C969723B   image           : 5B1B31A1-9562-11D2-8E3F-00A0C969723B  *   varstore        : F088CD91-A046-11D2-8E42-00A0C969723B   dpath           : 09576E91-6D3F-11D2-8E39-00A0C969723B  *   unicode         : 1D85CD7F-F43D-11D2-9A0C-0090273FC14D   pxe             : 01949C4C-9496-11D2-85E1-00A0C93EC93B   ShellInt        : 47C7B223-C42A-11D2-8E57-00A0C969723B   SEnv            : 47C7B224-C42A-11D2-8E57-00A0C969723B   ShellProtId     : 47C7B226-C42A-11D2-8E57-00A0C969723B   ShellDevPathMap : 47C7B225-C42A-11D2-8E57-00A0C969723B   ShellAlias      : 47C7B227-C42A-11D2-8E57-00A0C969723B   G0              : 00000000-0000-0000-0000-000000000000   Efi             : 8BE4DF61-93CA-11D2-AA0D-00E098032B8C   GenFileInfo     : 09576E92-6D3F-11D2-8E39-00A0C969723B   FileSysInfo     : 09576E93-6D3F-11D2-8E39-00A0C969723B   PcAnsi          : E0C14753-F9BE-11D2-9A0C-0090273FC14D   Unknown Device  : CF31FAC5-C24E-11D2-85F3-00A0C93EC93B   g1              : 43D66E51-AD78-11D2-8E4B-00A0C969723B   g2              : 386F4BBC-7782-11D2-85D6-00A0C93EC93B   g3              : EFE309D1-ACA9-11D2-85E2-00A0C93EC93B Shell> set [-d] [-b] [sname] [value] [-d]     - Delete the environment variable  [-b]     - Display one screen at a time  [sname]  - Environment variable name [value]  - Environment variable value This command is used maintain the environment variables that are available from the EFI environment.  This command can display the environment variables, create new environment variables, change the value of existing environment variables, or delete environment variables.  The set command will set the environment variable specified by sname to value.  This form of the command can be used to create a new environment variable, or to modify an existing environment variable.  If the set command is used without any parameters, then all the environment variables are displayed.  If the set command is used with the  d option, then the environment variable specified by sname will be deleted.  The following examples show how this command can be used to create, modify, and delete the environment variable DiagnosticPath. Examples Shell> set   path : fs0:\efi\tools;fs0:\;. Shell> set DiagnosticPath fs0:\efi\diag Shell> set   path           : fs0:\efi\tools;fs0:\;.   DiagnosticPath : fs0:\efi\diag Shell> set DiagnosticPath fs0:\efi\diag;fs1:\efi\diag Shell> set   path           : fs0:\efi\tools;fs0:\;.   DiagnosticPath : fs0:\efi\diag;fs1:\efi\diag Shell> set  d DiagnosticPath  Shell> set   path : fs0:\efi\tools;fs0:\;. Shell> alias  alias [-d] [-b] [sname] [value] [-d]     - Delete the alias [-b]     - Display one screen at a time  [sname]  - Alias name [value]  - EFI command or EFI application This command displays, creates, or deletes aliases in the EFI shell environment.  An alias provides a new name for an existing EFI shell command or an EFI application.  Once the alias is created, it can be used to run the command or launch the EFI application.  There are some aliases that are predefined in the EFI shell environment.  These aliases provide the DOS and UNIX equivalent names for the file manipulation commands. The examples below show the default aliases available in the EFI shell environment, and an example of how to create and delete a new alias for the guid command. Examples Shell> alias   dir  : ls   md   : mkdir   rd   : rm   del  : rm   copy : cp Shell> alias myguid guid Shell> alias   dir    : ls   md     : mkdir   rd     : rm   del    : rm   copy   : cp   myguid : guid Shell> alias  d myguid Shell> alias   dir  : ls   md   : mkdir   rd   : rm   del  : rm   copy : cp dh [-p prot_id] [-b] | [handle] [-p prot_id]  - Protocol to dump [-b]          - Display one screen at a time  [handle]      - Handle number to dump This command displays the device handles in the EFI environment.  When the dh command is used without any parameters, a list of all the device handles in the EFI environment is displayed.  A single device handle can contain one or more protocol instances.  If the dh command is used with a specific handle number, the details of all the protocols associated with that device handle are displayed.  If the  p option is used, the list of device handles containing a specific protocol will be displayed.  The following examples show how the dh command can be used.  The first example displays all the device handles in a system.  The second example displays all the device handles with a file system protocol, and the third example displays the details of the device handle for the floppy drive. Examples Shell> dh   1: varstore    2: varstore    3: Image(dskio)    4: Image(pblkio)    5: Image(fat)    6: DevIo DevPath()   7: unicode    8: txtin DevPath(..,0)/Pci(0|0)/Acpi(PNP0303,0))   9: txtout DevPath(Acpi(PNP0A03,0)/Pci(3|0))   A: diskio blkio fs DevPath(..,0)/Pci(0|0)/Acpi(PNP0604,0))   B: diskio blkio DevPath(VenHw(Unknown Device:80))   C: diskio blkio fs DevPath(..vice:80)/HD(Part1,Sig1-F4A3))   D: diskio blkio DevPath(..vice:80)/HD(Part2,Sig1-F4A3))   E: diskio blkio fs DevPath(..,Sig1-F4A3)/HD(Part1,Sig1-0))   F: diskio blkio DevPath(..,Sig1-F4A3)/HD(Part2,Sig1-0))  10: diskio blkio fs DevPath(..rt2,Sig1-0)/HD(Part1,Sig1-0))  11: varstore DevPath(..0|0)/Acpi(PNP0604,0)/BootStr)  12: Image(ramdisk)   13: diskio blkio DevPath(VenMsg(g1))  14: Image(bootmgr)   15: Image(shellenv.efi)   16: Image(nshell) ShellInt  Shell> dh    A: diskio blkio fs DevPath(..,0)/Pci(0|0)/Acpi(PNP0604,0))   C: diskio blkio fs DevPath(..vice:80)/HD(Part1,Sig1-F4A3))   E: diskio blkio fs DevPath(..,Sig1-F4A3)/HD(Part1,Sig1-0))  10: diskio blkio fs DevPath(..rt2,Sig1-0)/HD(Part1,Sig1-0)) Shell> dh A Handle 0A (07FC6E08)    diskio     blkio Fixed MId:1 bsize 200, lblock B40 (1,474,560), raw rw cached    fs     dpath        PNP Device Path for PnP        HID A0341D0, UID 0       Hardware Device Path for PCI       PNP Device Path for PnP        HID 60441D0, UID 0    AsStr: 'Acpi(PNP0A03,0)/Pci(0|0)/Acpi(PNP0604,0)' Shell> map [-dvrb] [sname] [handle] [-d]      - Delete a mapping [-v]      - Verbose listing of mappings [-r]      - Reset to default mappings [-b]      - Display one screen at a time  [sname]   - A user defined name for the mapping [handle]  - The handle number from the dh command This command is used to define a mapping between a user defined name and a device handle.  The most common use of this command is to assign drive letters to device handles that support a file system protocol.  Once these mappings are created, the drive letters can be used with all the file manipulation commands.  The EFI shell environment creates default mappings for all the device handles that support a recognized file systems.  The floppy drive is typically fs0, and hard drive partitions with recognized file systems are typically fs1, fs2,  , fsn.  This command can be used to create additional mappings, or it can be used to delete an existing mapping with the  -d option.  If the map command is used without any parameters, all the current mappings will be listed.  If the  v option is used, the mappings will be shown with additional information on each mapped handle.  The -r option is used to regenerate all the mappings in a system.  This is useful if the system configuration has changed since the last boot.  The following examples show how to create a new mapping of D: for the first hard drive partition that supports the file system protocol  Please refer to the list of handles in the example for the dh command. Examples Shell> map Device mapping table   fs0  : Acpi(PNP0A03,0)/Pci(0|0)/Acpi(PNP0604,0)   blk0 : Acpi(PNP0A03,0)/Pci(0|0)/Acpi(PNP0604,0)   blk1 : VenHw(Unknown Device:80)   blk2 : VenHw(Unknown Device:80)/HD(Part1,Sig1-B3C8)   blk3 : VenHw(Unknown Device:80)/HD(Part2,Sig1-B3C8)   blk4 : VenHw(Unknown Device:80)/HD(Part3,Sig1-B3C8)   blk5 : VenMsg(g1)   fs1  : VenHw(Unknown Device:80)/HD(Part1,Sig1-F4A3)   fs2  : VenHw(Unknown Device:80)/HD(Part2,Sig1-F4A3)/HD(Part1,Sig1-0)   fs3  : VenHw(Unknown Device:80)/HD(Part2,Sig1-F4A3)/HD(Part2,Sig1-0)/HD(Part1,Sig1-0) Shell> map D C Shell> map Device mapping table   fs0  : Acpi(PNP0A03,0)/Pci(0|0)/Acpi(PNP0604,0)   blk0 : Acpi(PNP0A03,0)/Pci(0|0)/Acpi(PNP0604,0)   blk1 : VenHw(Unknown Device:80)   blk2 : VenHw(Unknown Device:80)/HD(Part1,Sig1-B3C8)   blk3 : VenHw(Unknown Device:80)/HD(Part2,Sig1-B3C8)   blk4 : VenHw(Unknown Device:80)/HD(Part3,Sig1-B3C8)   blk5 : VenMsg(g1)   fs1  : VenHw(Unknown Device:80)/HD(Part1,Sig1-F4A3)   fs2  : VenHw(Unknown Device:80)/HD(Part2,Sig1-F4A3)/HD(Part1,Sig1-0)   fs3  : VenHw(Unknown Device:80)/HD(Part2,Sig1-F4A3)/HD(Part2,Sig1-0)/HD(Part1,Sig1-0)   D    : VenHw(Unknown Device:80)/HD(Part1,Sig1-F4A3) Shell> map    D    : VenHw(Unknown Device:80)/HD(Part1,Sig1-F4A3)        = Handle  C: diskio blkio fs         > \ Shell> map  Shell> map Device mapping table   fs0  : Acpi(PNP0A03,0)/Pci(0|0)/Acpi(PNP0604,0)   blk0 : Acpi(PNP0A03,0)/Pci(0|0)/Acpi(PNP0604,0)   blk1 : VenHw(Unknown Device:80)   blk2 : VenHw(Unknown Device:80)/HD(Part1,Sig1-B3C8)   blk3 : VenHw(Unknown Device:80)/HD(Part2,Sig1-B3C8)   blk4 : VenHw(Unknown Device:80)/HD(Part3,Sig1-B3C8)   blk5 : VenMsg(g1)   fs1  : VenHw(Unknown Device:80)/HD(Part1,Sig1-F4A3)   fs2  : VenHw(Unknown Device:80)/HD(Part2,Sig1-F4A3)/HD(Part1,Sig1-0)   fs3  : VenHw(Unknown Device:80)/HD(Part2,Sig1-F4A3)/HD(Part2,Sig1-0)/HD(Part1,Sig1-0) cd [path] This command changes the current working directory used by the EFI shell environment.  The following example shows how to move between the directories on a floppy drive containing an EFI directory, and a TOOLS subdirectory below the EFI directory.  The EFI shell environment uses the directory name   to refer to the current directory, and the directory name   to refer to the directory s parent. Examples Shell> fs0: fs0:\> cd efi fs0:\efi\> cd .. fs0:\> cd efi\tools fs0:\efi\tools\> cd \ fs0:> echo [-on | -off] echo [text] The first form of the echo command controls whether or not batch commands are displayed as they are read from the batch file.  If no argument is given the current   status is displayed. The second form prints the given message to the display.  Wildcard substitution is performed on the second form of the command. Examples Shell> echo Echo is on. Shell> echo  Shell> echo Hello world Hello world Shell> echo Loop count is %c for this iteration Loop count is 42 for this iteration Shell> for %indexvar in set command [arguments] [command [arguments]] endfor The for command executes one or more commands for each item in a set of items. The set may be text strings or filenames or a mixture of both, separated by spaces. Wildcards in filenames are expanded before command is executed. Indexvar is any single printable character, but it should not be a digit (0-9) because %digit will be interpreted as a positional argument (see  Execution of Batch Scripts ).  The namespace for index variables is separate from that for environment variables, so if indexvar has the same name as an existing environment variable, the environment variable will remain unchanged by the for loop.  Each command is executed once for each item in the set, with any occurrence of %indexvar in the command replaced with the current item. The for command is available only in batch scripts. Examples #  Sample for loop   type contents of all .txt files for %a in *.txt     type %a    echo ===== %a done ===== endfor if [not] exist filename then command [arguments] endif if [not] string1 == string2 then  command [arguments] [command [arguments]] endif The if command executes one or more commands if the specified condition is true, unless the not keyword is given, in which case the command is executed if the condition is false. The exist condition is true if filename exists. The filename argument may include device and path information.  Wildcard expansion is supported for the exist form of the command.  If more than one file matches the wildcard pattern, the condition evaluates to TRUE.  The string1 == string2 condition is true if the two strings are identical. The if command is available only in batch scripts. Examples #  Example script for   command if exist fs0:\myscript.sc then myscript myarg1 myarg2 endif if %myvar% == runboth then myscript1 myscript2 endif goto label The goto command directs batch file execution to the line in the batch file after the given label. The command is not supported from the interactive shell.  A label is a line beginning with a colon (:). The search for label is done forward in the batch file. If the end of the file is reached, the search resumes at the top of the file and continues until label is found or the starting point is reached. If label is not found, the batch process terminates and an error message is displayed. When not searching for the target of a goto command, the shell reads label lines and ignores them. The goto command is available only in batch scripts. The following example shows the use of this command. Examples # This is a batch script goto Done :Done cleanup.nsh pause pause The pause command prints a message to the display and then suspends batch file execution and waits for keyboard input. Pressing any key resumes execution, except for q or Q.  If q or Q is pressed, batch processing terminates; otherwise execution continues with the next line after the pause command. The pause command is available only in batch scripts. The following example shows the use of this command. Examples +script.nsh> pause  to quit, any other key to continue: fs0:>  exit  This command exits the EFI Shell environment and returns control to the EFI application that launched the EFI Shell. Examples Shell> exit  attrib attrib [+a|-a] [+s|-s] [+h|-h] [+r|-r] [-b] file [+a|-a]    - Set or clear the archive attribue [+s|-s]    - Set or clear the system attribute [+h|-h]    - Set or clear the hidden attribute [+r|-r]    - Set or clear the read only attribute [-b]       - Display one screen at a time  Displays or sets file attributes.  There are four attribute types that are supported for the EFI File System.  These are archive[A], system[S], hidden[H], and read only[R].  If a file is a directory, then it is also shown to have the attribute [D].       Examples Shell> attrib fs0:\ DA SH  fs0:\efi  A     fs0:\cp.efi  A     fs0:\date.efi  A     fs0:\dblk.efi Shell> attrib -a +r fs0:\cp.efi      R fs0:\cp.efi Shell> attrib fs0:\ DA SH  fs0:\efi      R fs0:\cp.efi  A     fs0:\date.efi  A     fs0:\dblk.efi bcfg  bcfg driver|boot [dump [-v]] [add # file  ] [rm #] [mv # #] driver selects boot driver list selects boot option list dump selected list dumps verbose including load options  with   at position # remove # move # to # Manages the boot and driver options stored in NVRAM.  This command can display the Boot#### or Driver#### environment variables by using the dump option.  The add option can be used to add a new Boot#### or Driver#### environment variable.  The rm option can be used to delete a Boot#### or Driver#### environment variable, and finally, then mv option can be used to reorder the Boot#### and Driver#### environment variables.  The add, rm, and mv options also update the BootOrder or DriverOrder environment variables as appropriate. Examples Shell> bcfg boot dump The boot option list is: Shell> bcfg driver dump The boot driver list is: Shell> fs0: fs0:\> bcfg boot add 1 osloader.efi  EFI OS Loader fs0:\> bcfg boot add 2 foo.efi  fs0:\> bcfg boot add 3 bar.efi  fs0:\> bcfg boot dump The boot option list is: Acpi(PNP0700,0)/\osloader.efi  EFI OS Loader Acpi(PNP0700,0)/\foo.efi  Acpi(PNP0700,0)/\bar.efi  fs0:\> bcfg boot mv 1 4 fs0:\> bcfg boot dump The boot option list is: Acpi(PNP0700,0)/\foo.efi  Acpi(PNP0700,0)/\bar.efi  Acpi(PNP0700,0)/\osloader.efi  EFI OS Loader fs0:\> bcfg boot rm 1  fs0:\> bcfg boot rm 1  fs0:\> bcfg boot rm 1  fs0:\> bcfg boot dump The boot option list is: comp  comp file1 file2 Compares the contents of file1 to file2.  The first 10 differences are shown before the compare operation is terminated. Examples Shell> comp fs0:\a.txt fs0:\a.txt Compare fs0:\a.txt to fs0:\a.txt Shell> comp fs0:\a.txt fs0:\b.txt Compare fs0:\a.txt to fs0:\b.txt Miscompare #1 File1: fs0:\a.txt  00000914: 20                                               * * File2: fs0:\b.txt  00000914: 42                                               *B* Miscompare #2 File1: fs0:\a.txt  00000916: 42                                               *B* File2: fs0:\b.txt  00000916: 53                                               *S* Miscompare #3 File1: fs0:\a.txt  00000918: 53                                               *S* File2: fs0:\b.txt  00000918: 5F                                               *_* cp file [file]   [dest] This command copies one or more files from one location to another location.  The following example shows how to copy the file MEMMAP.EFI in the TOOLS directory on the floppy drive to the file MM.EFI.   Examples Shell> fs0: fs0:\> cd efi fs0:\efi\> cd tools fs0:\efi\tools\> cp memmap.efi mm.efi fs0:\efi\tools\> cls [color] color - new background color This command clears the standard output device with an optional background color attribute.  If color is not specified, then the background is cleared to black. Examples Shell> cls Shell> cls 1 date  date [mm/dd/yyyy] This command displays to sets the current date for the system.  If not parameters are used, it shows the current date.  If a valid month, day, and year are provided, then the system's date will be updated. Examples Shell> date 07/14/1999 Shell> date 07/12/1999 Shell> edit  edit [file] This command allows a file to be edited using a full screen editor.  The editor supports both Unicode and ASCII file types. Examples fs0:\> edit fs0:\> edit foo.txt hexedit  hexedit This command allows a file, block device, or memory region to be edited.  The region being edited is displayed as hexidecimal bytes, and the contents can be modified and saved Examples fs0:\> hexedit  load  load file This command loads an EFI driver. Examples Shell> load serial.efi ls [-b] [dir] [dir]  [-b]      - Display one screen at a time  This command lists all the files and subdirectories present in a directory.  If the ls command is used without any parameters, then the contents of the current working directory are displayed.  If a parameter is used, then that parameter is interpreted as a file path, and the contents of the directory specified by the file path are displayed.  The following examples show how the ls command can be used.  The first example lists the files in the current working directory fs0:\.  The second example lists the files in the EFI subdirectory.  The third example lists the files in the root directory of the first hard drive partition containing a recognized file system. Examples Shell> fs0: fs0:\> ls Directory of fs0:\   01/22/99  10:11p <DIR>            512  EFI   05/05/99  05:41p               36,924  TEST.EFI   05/06/99  01:48p               41,024  OSLOADER.EFI   05/06/99  11:00a               41,024  OSKERNEL.BIN                     3 Files      118,972 bytes                     1 Dirs           512 bytes fs0:\> ls efi Directory of fs0:\EFI 00/00/80  12:00a <DIR>            512  .   00/00/83  12:00a <DIR>              0  ..   00/00/80  12:00a               32,768  BOOTSTR                     1 File        32,768 bytes                     2 Dirs           512 bytes fs0:\> ls fs1:\ Directory of fs1:\ fs0:\> memmap  memmap [-b] [-b]      - Display one screen at a time  This command displays the memory map that is maintained by the EFI environment.  The EFI environment keeps track all the physical memory in the system and how it is currently being used.  The EFI Specification defines a set of Memory Type Descriptors.  Please see the EFI Specification for a description of how each of these memory types is used. Examples Shell> memmap Type       Start            End               # Pages          Attributes BS_data    0000000000000000-0000000000000FFF  0000000000000001 0000000000000008 available  0000000000001000-000000000001FFFF  000000000000001F 0000000000000008 BS_data    0000000000020000-0000000000021FFF  0000000000000002 0000000000000008 available  0000000000022000-0000000000089FFF  0000000000000068 0000000000000008 BS_data    000000000008A000-000000000009AFFF  0000000000000011 0000000000000008 BS_code    000000000009B000-000000000009EFFF  0000000000000004 0000000000000008 BS_data    000000000009F000-000000000009FFFF  0000000000000001 0000000000000008 BS_data    00000000000F0000-00000000000FFFFF  0000000000000010 0000000000000008 available  0000000000100000-00000000001DFFFF  00000000000000E0 0000000000000008 BS_data    00000000001E0000-00000000001FFFFF  0000000000000020 0000000000000008 available  0000000000200000-0000000000200FFF  0000000000000001 0000000000000008 BS_code    0000000000201000-0000000000215FFF  0000000000000015 0000000000000008 RT_code    0000000000216000-0000000000218FFF  0000000000000003 8000000000000008 BS_data    0000000000219000-000000000021BFFF  0000000000000003 0000000000000008 RT_data    000000000021C000-000000000021CFFF  0000000000000001 8000000000000008 BS_data    000000000021D000-000000000021DFFF  0000000000000001 0000000000000008 available  000000000021E000-0000000007E61FFF  0000000000007C44 0000000000000008 LoaderData 0000000007E62000-0000000007E62FFF  0000000000000001 0000000000000008 LoaderCode 0000000007E63000-0000000007E65FFF  0000000000000003 0000000000000008 LoaderData 0000000007E66000-0000000007E69FFF  0000000000000004 0000000000000008 available  0000000007E6A000-0000000007E6EFFF  0000000000000005 0000000000000008 LoaderData 0000000007E6F000-0000000007E6FFFF  0000000000000001 0000000000000008 BS_data    0000000007E70000-0000000007E70FFF  0000000000000001 0000000000000008 LoaderData 0000000007E71000-0000000007E75FFF  0000000000000005 0000000000000008 BS_data    0000000007E76000-0000000007E77FFF  0000000000000002 0000000000000008 LoaderData 0000000007E78000-0000000007E79FFF  0000000000000002 0000000000000008 BS_data    0000000007E7A000-0000000007E7AFFF  0000000000000001 0000000000000008 LoaderData 0000000007E7B000-0000000007E7BFFF  0000000000000001 0000000000000008 BS_data    0000000007E7C000-0000000007E85FFF  000000000000000A 0000000000000008 RT_data    0000000007E86000-0000000007E86FFF  0000000000000001 8000000000000008 BS_data    0000000007E87000-0000000007E87FFF  0000000000000001 0000000000000008 BS_code    0000000007E88000-0000000007E93FFF  000000000000000C 0000000000000008 BS_data    0000000007E94000-0000000007E99FFF  0000000000000006 0000000000000008 LoaderData 0000000007E9A000-0000000007E9BFFF  0000000000000002 0000000000000008 BS_data    0000000007E9C000-0000000007E9CFFF  0000000000000001 0000000000000008 LoaderData 0000000007E9D000-0000000007E9DFFF  0000000000000001 0000000000000008 LoaderCode 0000000007E9E000-0000000007EA1FFF  0000000000000004 0000000000000008 LoaderData 0000000007EA2000-0000000007EA4FFF  0000000000000003 0000000000000008 BS_data    0000000007EA5000-0000000007FC6FFF  0000000000000122 0000000000000008 RT_data    0000000007FC7000-0000000007FC8FFF  0000000000000002 8000000000000008 BS_data    0000000007FC9000-0000000007FCEFFF  0000000000000006 0000000000000008 RT_data    0000000007FCF000-0000000007FCFFFF  0000000000000001 8000000000000008 BS_data    0000000007FD0000-0000000007FFFFFF  0000000000000030 0000000000000008 BS_data    00000000FFFE0000-00000000FFFFFFFF  0000000000000020 0000000000000008 LoaderCode:       7 pages (28,672) LoaderData:      20 pages (81,920) BS_code   :      37 pages (151,552) BS_data   :     471 pages (1,929,216) RT_code   :       3 pages (12,288) RT_data   :       5 pages (20,480) available :  32,177 pages (131,796,992) Shell> mkdir  mkdir dir [dir]  This command creates a new directory on a file system.  The following example shows how to create the directory DIAGS below the directory EFI on the floppy drive. Examples Shell> fs0: fs0:\> cd efi fs0:\efi\> mkdir diags fs0:\efi\> cd diags fs0:\efi\diags\> mode  mode [row col] This command is used to change the display mode for the console output device.  When this command is used without any parameters, it shows the list of modes that the standard output device currently supports.  The mode command can then be used with the row and col parameter to change the number of rows and columns on the standard output device.  The following examples show how the mode command can be used.  The first example lists all modes that are currently available, and the current selected mode is indicated by an  .  The second example changes the mode to an 80 X 50 text mode display.  The display is cleared every time the mode command is used to change the currently selected display mode. Examples Shell> mode Available modes on standard output   col  80 row  25  *   col  80 row  50   col  80 row  43   col 100 row 100   col 100 row 999 Shell> mode 80 50 Shell> nshell  nshell This command launches another copy of the EFI Shell.  This new shell inherits the environment variables of the parent shell along with the standard input device, standard output device, and the standard error device.   Examples Shell> nshell rm file|dir [file|dir]  This command deletes one or more files or directories.  The following examples show how to delete the directory created in the mkdir command example, and the file copied in the cp command example. Examples Shell> fs0: fs0:\> cd efi fs0:\efi\> rm diags fs0:\efi\> cd tools fs0:\efi\tools\> rm mm.efi fs0:\efi\tools\> date [hh:mm:ss] This command displays to sets the current time for the system.  If not parameters are used, it shows the current time.  If valid hours, minutes, and seconds are provided, then the system's time will be updated. Examples Shell> time 15:09:57 Shell> time 15:10:00 Shell> type  type [-a] [-u] [-b] file     [-a]  - Display the file as ASCII characters.     [-u]  - Display the file as Unicode characters.          [-b]  - Display one screen at a time  This command sends the contents of a file to the standard output device.  If no options are used, then the file type is auto-detected and sent to the standard output device. If the  a option is used, the file is sent to the standard output device as a stream of ASCII characters. If the  u option is used, the file is sent to the standard output device as a stream of Unicode characters.  The following example shows how to send the ASCII file README.TXT on the floppy drive to the standard output device and the Unicode file READMEU.TXT on the floppy drive to the standard output device. Examples Shell> fs0: fs0:\> type readme.txt fs0:\> type  a readme.txt fs0:\> type readmeu.txt fs0:\> type  u readmeu.txt fs0:\> Displays the version information for this EFI Firmware.  This information is retrieved through the EFI System Table. Examples Shell> ver EFI Specification Revision 0.91   EFI Vendor      = INTEL   EFI Revision    = 00000009 Shell> vol fs [Volume Label]   fs            - The name of the file system to use   Volume Label    New volume label Displays volume information for the file system specified by fs.  If Volume Label is specified, then the volume label for fs will be set to Volume Label.  The maximum length for Volume Label is 11 characters. Examples Shell> vol fs0 Shell> vol fs0 New Volume dblk  dblk BlockDeviceName [LBA] [# Blocks]     BlockDeviceName  The name of the block device to display     [LBA]            The block number to display     [# Blocks]       The number of block to display Displays the contents of one or more blocks from a block device.   If [LBA] is not specified or it greater than the last block on that block device, then block #0 is displayed.  If [# Blocks] is not specified, then on1y 1 block will be displayed.  The maximum number of blocks that can be displayed at one time is 0x10. Examples Shell> dblk blk0  LBA 0x0000000000000000 Size 0x00000200 bytes BlkIo 0x07FCD350   00000000: EB 3C 90 28 25 5A 69 59-49 48 43 00 02 01 01 00  *.<.INTEL   .....*   00000010: 02 E0 00 40 0B F0 09 00-12 00 02 00 00 00 00 00  *...@............*   00000020: 00 00 00 00 00 01 29 20-20 20 20 45 46 49 20 46  *......)    EFI F*   00000030: 4C 4F 50 50 59 20 46 41-54 31 32 20 20 20 8C C8  *LOPPY FAT12   ..*   00000040: 8E D0 05 00 10 8E D8 BC-00 7C 8B EC B4 08 B2 00  *................*   00000050: CD 13 33 C0 8A C6 24 3F-FE C0 50 8A C1 24 3F 50  *..3...$?..P..$?P*   00000060: 81 BE FE 01 55 AA 0F 85-6F 01 80 BE 00 00 EB 0F  *....U...o.......*   00000070: 85 66 01 81 BE 0B 00 00-02 0F 85 5C 01 80 BE 0D  *.f.........\....*   00000080: 00 00 0F 84 53 01 83 BE-11 00 00 0F 84 4A 01 8B  *....S........J..*   00000090: 86 0E 00 3B 86 13 00 0F-8F 3E 01 33 C9 8D 36 03  *...;.....>.3..6.*   000000A0: 00 B1 08 E8 25 01 8D 36-2B 00 B1 0B E8 1C 01 81  *....%..6+.......*   000000B0: BE 36 00 46 41 0F 85 20-01 81 BE 38 00 54 31 0F  *.6.FA.. ...8.T1.*   000000C0: 85 16 01 B8 20 20 39 86-3B 00 0F 85 0B 01 39 86  *....  9.;.....9.*   000000D0: 3C 00 0F 85 03 01 80 BE-3A 00 32 74 0C 80 BE 3A  *<.......:.2t...:*   000000E0: 00 36 0F 84 F3 00 E9 F0-00 8B 8E 11 00 C1 E1 05  *.6..............*   000000F0: 8B D9 81 E3 FF 01 0F 85-DF 00 8B D9 C1 EB 09 BF  *................*   00000100: 00 00 8A 86 10 00 32 E4-F7 A6 16 00 03 86 0E 00  *......2.........*   00000110: 1E 07 E8 6D 00 03 C3 89-46 00 81 3D 45 46 75 27  *...m....F..=EFu'*   00000120: 81 7D 02 49 4C 75 20 81-7D 04 44 52 75 19 B8 20  *...ILu ...DRu.. *   00000130: 20 39 45 06 75 11 39 45-08 75 0C 39 45 09 75 07  * 9E.u.9E.u.9E.u.*   00000140: 8A 45 0B 24 58 74 0B 83-C7 20 83 E9 20 75 CB E9  *.E.$Xt... .. u..*   00000150: 87 00 8B 4D 1A 8C C8 05-00 20 8E C0 33 FF 8B C1  *...M..... ..3...*   00000160: 83 E8 02 32 FF 8A 9E 0D-00 F7 E3 03 46 00 32 FF  *...2........F.2.*   00000170: 8A 9E 0D 00 06 E8 0A 00-58 89 86 80 01 EA 00 00  *........X.......*   00000180: 00 20 60 8B F0 8B CB BD-FC 7B 8B C6 33 D2 F7 76  *. `.........3..v*   00000190: 00 42 8B 5E 00 2B DA 43-3B CB 7F 02 8B D9 51 8A  *.B.^.+.C;.....Q.*   000001A0: CA 33 D2 F7 76 02 53 8A-F2 B2 00 8A E8 8A C3 B4  *.3..v.S.........*   000001B0: 02 8B DF CD 13 5B 59 03-F3 2B CB 8C C0 C1 E3 05  *.....[Y..+......*   000001C0: 03 C3 8E C0 83 F9 00 75-BE 61 C3 80 3A 7F 7F 09  *.......u.a..:...*   000001D0: 80 3A 20 7C 04 46 E2 F3-C3 CC EB FD 00 00 00 00  *.: ..F..........*   000001E0: 00 00 00 00 00 00 00 00-00 00 00 00 00 00 00 00  *................*   000001F0: 00 00 00 00 00 00 00 00-00 00 00 00 00 00 55 AA  *..............U.* Fat 12 BPB  FatLabel: 'EFI FLOPPY '  SystemId: 'FAT12   ' OemId: 'INTEL   '  SectorSize 0x200  SectorsPerCluster 1 ReservedSectors 1  # Fats 2  Root Entries 0xE0  Media 0xF0  Sectors 0xB40  SectorsPerFat 0x9  SectorsPerTrack 0x12 Heads 2 dmem  dmem [Address] [Size] [;MMIO]     [Address]  Start address     [Size]     Number of bytes to display     [;MMIO]    Use DEVICE_IO protocol to access memory Displays the contents of system memory or device memory.  If Address is not specified, then the contents of the EFI System Table are displayed.  Otherwise, memory starting at Address is displayed.  Size specifies the number of bytes to display.  If Size is not specified, then this command defaults to 512 bytes.  If MMIO is not specified, then main system memory is displayed.  Otherwise, device memory is displayed through the use of the DEVICE_IO protocol. Examples Shell> dmem Memory Address 000000000012FB60 200 Bytes   0012FB60: 49 42 49 20 53 59 53 54-5B 00 00 00 48 00 00 00  *IBI SYST[...H...*   0012FB70: 66 78 20 E5 00 00 00 00-88 08 82 01 09 00 00 00  *fx .............*   0012FB80: 08 0A 82 01 68 1C 82 01-08 0A 82 01 28 1C 82 01  *....h.......(...*   0012FB90: 88 E3 82 01 28 1F 82 01-58 50 42 00 E8 F6 41 00  *....(...XPB...A.*   0012FBA0: 00 00 00 00 00 00 00 00-00 00 00 00 00 00 00 00  *................*   0012FBB0: 00 00 00 00 00 00 00 00-00 00 00 00 00 00 00 00  *................*   0012FBC0: 00 00 00 00 00 00 00 00-00 00 00 00 00 00 00 00  *................*   0012FBD0: 00 00 00 00 00 00 00 00-00 00 00 00 00 00 00 00  *................*   0012FBE0: 00 00 00 00 00 00 00 00-00 00 00 00 00 00 00 00  *................*   0012FBF0: 00 00 00 00 00 00 00 00-00 00 00 00 00 00 00 00  *................*   0012FC00: 00 00 00 00 00 00 00 00-00 00 00 00 00 00 00 00  *................*   0012FC10: 00 00 00 00 00 00 00 00-00 00 00 00 00 00 00 00  *................*   0012FC20: 00 00 00 00 00 00 00 00-00 00 00 00 00 00 00 00  *................*   0012FC30: 00 00 00 00 00 00 00 00-00 00 00 00 00 00 00 00  *................*   0012FC40: 00 00 00 00 00 00 00 00-00 00 00 00 00 00 00 00  *................*   0012FC50: 00 00 00 00 00 00 00 00-00 00 00 00 00 00 00 00  *................*   0012FC60: 00 00 00 00 00 00 00 00-00 00 00 00 00 00 00 00  *................*   0012FC70: 00 00 00 00 00 00 00 00-00 00 00 00 00 00 00 00  *................*   0012FC80: 00 00 00 00 00 00 00 00-00 00 00 00 00 00 00 00  *................*   0012FC90: 00 00 00 00 A8 FC 12 00-96 59 A3 01 88 50 81 01  *.........Y...P..*   0012FCA0: C0 FC 12 00 01 FC 12 00-C8 FE 12 00 F8 14 A3 01  *................*   0012FCB0: 88 50 81 01 C0 FC 12 00-01 00 00 00 08 CE 82 01  *.P..............*   0012FCC0: 64 00 6D 00 65 00 6D 00-00 00 00 00 00 00 00 00  *d.m.e.m.........*   0012FCD0: 00 00 00 00 00 00 00 00-00 00 00 00 00 00 00 00  *................*   0012FCE0: 00 00 00 00 00 00 00 00-00 00 00 00 00 00 00 00  *................*   0012FCF0: 00 00 00 00 00 00 00 00-00 00 00 00 00 00 00 00  *................*   0012FD00: 00 00 00 00 00 00 00 00-00 00 00 00 00 00 00 00  *................*   0012FD10: 00 00 00 00 00 00 00 00-00 00 00 00 00 00 00 00  *................*   0012FD20: 00 00 00 00 00 00 00 00-00 00 00 00 00 00 00 00  *................*   0012FD30: 00 00 00 00 00 00 00 00-00 00 00 00 00 00 00 00  *................*   0012FD40: 00 00 00 00 00 00 00 00-00 00 00 00 00 00 00 00  *................*   0012FD50: 00 00 00 00 00 00 00 00-00 00 00 00 00 00 00 00  *................*   Valid EFI Header at Address 000000000012FB60   --------------------------------------------   System: Table Structure size 00000048 revision 0000005B   ConIn (0x01820A08) ConOut (0x01820A08) StdErr (0x0182E388)    Console In on  VenHw(g3)    Console Out on VenHw(g3)    Std Error on   VenHw(g3)   Runtime Services 0x0000000000425058   Boot Services    0x000000000041F6E8 Shell> dmem 01820a08 18   Memory Address 0000000001820A08 18 Bytes   01820A08: 68 6E 64 6C 8C 07 82 01-0C 0D 82 01 10 09 82 01  *hndl............*   01820A18: 90 0A 82 01 57 00 00 00-                         *....W...* dmpstore  dmpstore Displays all the environment variables being managed by EFI. Examples Shell> dmpstore Dump NVRAM Variable RT+BS 'Efi:LangCodes' DataSize = 3   00000000: 65 6E 67                                         *eng* Variable NV+RT+BS 'Efi:Lang' DataSize = 3   00000000: 65 6E 67                                         *eng* Variable NV+RT+BS 'ShellProtId:DevIo' DataSize = 10   00000000: 11 C3 6A AF C3 84 D2 11-8E 3C 00 A0 C9 69 72 3B  *..j......<...ir;* Variable NV+RT+BS 'ShellProtId:fs' DataSize = 10   00000000: 22 5B 4E 96 59 64 D2 11-8E 39 00 A0 C9 69 72 3B  *"[N.Yd...9...ir;* Variable NV+RT+BS 'ShellProtId:diskio' DataSize = 10   00000000: 71 51 34 CE 0B BA D2 11-8E 4F 00 A0 C9 69 72 3B  *qQ4......O...ir;* Variable NV+RT+BS 'ShellProtId:blkio' DataSize = 10   00000000: 21 5B 4E 96 59 64 D2 11-8E 39 00 A0 C9 69 72 3B  *![N.Yd...9...ir;* Variable NV+RT+BS 'ShellProtId:txtin' DataSize = 10   00000000: C1 77 74 38 C7 69 D2 11-8E 39 00 A0 C9 69 72 3B  *.wt8.i...9...ir;* Variable NV+RT+BS 'ShellProtId:txtout' DataSize = 10   00000000: C2 77 74 38 C7 69 D2 11-8E 39 00 A0 C9 69 72 3B  *.wt8.i...9...ir;* Variable NV+RT+BS 'ShellProtId:load' DataSize = 10   00000000: 91 30 EC 56 4C 95 D2 11-8E 3F 00 A0 C9 69 72 3B  *.0.VL....?...ir;* Variable NV+RT+BS 'ShellProtId:image' DataSize = 10   00000000: A1 31 1B 5B 62 95 D2 11-8E 3F 00 A0 C9 69 72 3B  *.1.[b....?...ir;* Variable NV+RT+BS 'ShellProtId:varstore' DataSize = 10   00000000: 91 CD 88 F0 46 A0 D2 11-8E 42 00 A0 C9 69 72 3B  *....F....B...ir;* Variable NV+RT+BS 'ShellProtId:unicode' DataSize = 10   00000000: 7F CD 85 1D 3D F4 D2 11-9A 0C 00 90 27 3F C1 4D  *....=.......'?.M* Variable NV+RT+BS 'ShellProtId:LegacyBoot' DataSize = 10   00000000: B2 5E 6E 37 E4 30 D3 11-BA E5 00 80 C7 3C 88 81  *.^n7.0.......<..* Variable NV+RT+BS 'ShellProtId:serialio' DataSize = 10   00000000: 6F CF 25 BB D4 F1 D2 11-9A 0C 00 90 27 3F C1 FD  *o.%.........'?..* Variable NV+RT+BS 'ShellProtId:pxe' DataSize = 10   00000000: 4C 9C 94 01 96 94 D2 11-85 E1 00 A0 C9 3E C9 3B  *L............>.;* Variable NV+RT+BS 'ShellProtId:dpath' DataSize = 10   00000000: 91 6E 57 09 3F 6D D2 11-8E 39 00 A0 C9 69 72 3B  *.nW.?m...9...ir;* Variable NV+RT+BS 'ShellProtId:VgaClass' DataSize = 10   00000000: 10 63 3D 0E E4 6F D3 11-BB 81 00 80 C7 3C 88 81  *.c=..o.......<..* Variable NV+RT+BS 'ShellProtId:TxtOutSplit' DataSize = 10   00000000: A0 30 D8 56 7A 7E D3 11-BB A0 00 A0 C9 69 72 3B  *.0.Vz........ir;* Variable NV+RT+BS 'ShellProtId:TxtInSplit' DataSize = 10   00000000: 50 C5 A3 F9 B5 7F D3 11-BB A0 00 A0 C9 69 72 3B  *P............ir;* Variable NV+RT+BS 'ShellProtId:ShellInt' DataSize = 10   00000000: 23 B2 C7 47 2A C4 D2 11-8E 57 00 A0 C9 69 72 3B  *#..G*....W...ir;* Variable NV+RT+BS 'ShellProtId:SEnv' DataSize = 10   00000000: 24 B2 C7 47 2A C4 D2 11-8E 57 00 A0 C9 69 72 3B  *$..G*....W...ir;* Variable NV+RT+BS 'ShellProtId:ShellProtId' DataSize = 10   00000000: 26 B2 C7 47 2A C4 D2 11-8E 57 00 A0 C9 69 72 3B  *&..G*....W...ir;* Variable NV+RT+BS 'ShellProtId:ShellDevPathMap' DataSize = 10   00000000: 25 B2 C7 47 2A C4 D2 11-8E 57 00 A0 C9 69 72 3B  *%..G*....W...ir;* Variable NV+RT+BS 'ShellProtId:ShellAlias' DataSize = 10   00000000: 27 B2 C7 47 2A C4 D2 11-8E 57 00 A0 C9 69 72 3B  *'..G*....W...ir;* Variable NV+RT+BS 'ShellProtId:G0' DataSize = 10   00000000: 00 00 00 00 00 00 00 00-00 00 00 00 00 00 00 00  *................* Variable NV+RT+BS 'ShellProtId:Efi' DataSize = 10   00000000: 61 DF E4 8B CA 93 D2 11-AA 0D 00 E0 98 03 2B 8C  *a.............+.* Variable NV+RT+BS 'ShellProtId:GenFileInfo' DataSize = 10   00000000: 92 6E 57 09 3F 6D D2 11-8E 39 00 A0 C9 69 72 3B  *.nW.?m...9...ir;* Variable NV+RT+BS 'ShellProtId:FileSysInfo' DataSize = 10   00000000: 93 6E 57 09 3F 6D D2 11-8E 39 00 A0 C9 69 72 3B  *.nW.?m...9...ir;* Variable NV+RT+BS 'ShellProtId:Unknown Device' DataSize = 10   00000000: C5 FA 31 CF 4E C2 D2 11-85 F3 00 A0 C9 3E C9 3B  *..1.N........>.;* Variable NV+RT+BS 'SEnv:path' DataSize = 2E   00000000: 66 00 73 00 30 00 3A 00-5C 00 65 00 66 00 69 00  *f.s.0.:.\.e.f.i.*   00000010: 5C 00 74 00 6F 00 6F 00-6C 00 73 00 3B 00 66 00  *\.t.o.o.l.s.;.f.*   00000020: 73 00 30 00 3A 00 5C 00-3B 00 2E 00 00 00        *s.0.:.\.;.....* Variable NV+RT+BS 'ShellAlias:dir' DataSize = 6   00000000: 6C 00 73 00 00 00                                *l.s...* Variable NV+RT+BS 'ShellAlias:md' DataSize = C   00000000: 6D 00 6B 00 64 00 69 00-72 00 00 00              *m.k.d.i.r...* Variable NV+RT+BS 'ShellAlias:rd' DataSize = 6   00000000: 72 00 6D 00 00 00                                *r.m...* Variable NV+RT+BS 'ShellAlias:del' DataSize = 6   00000000: 72 00 6D 00 00 00                                *r.m...* Variable NV+RT+BS 'ShellAlias:copy' DataSize = 6   00000000: 63 00 70 00 00 00                                *c.p...* Variable NV+RT+BS 'g4:MTC' DataSize = 4   00000000: 07 00 00 00                                      *....* Variable NV+RT+BS 'ShellDevPathMap:fs0' DataSize = 18   00000000: 01 04 14 00 51 6E D6 43-78 AD D2 11 8E 4B 00 A0  *....Qn.Cx....K..*   00000010: C9 69 72 3B 7F FF 04 00-                         *.ir;....* Variable NV+RT+BS 'ShellDevPathMap:blk0' DataSize = 2C   00000000: 01 04 14 00 BC 4B 6F 38-82 77 D2 11 85 D6 00 A0  *.....Ko8.w......*   00000010: C9 3E C9 3B 01 04 14 00-BC 4B 6F 38 82 77 D2 11  *.>.;.....Ko8.w..*   00000020: 85 D6 00 A0 C9 3E C9 3B-7F FF 04 00              *.....>.;....* err [Error Level]   [Error Level]    New error level bit mask. This command sets the current debug error level in the system.  This commands only works if the EFI Shell and the ERR command are built into the core firmware.  Error Level is a bit mask for different types of error messages.  The following is the list of definitions for the bit mask. #define D_INIT        0x00000001          // Initialization style messages #define D_WARN        0x00000002          // Warnings #define D_LOAD        0x00000004          // Load events #define D_FS          0x00000008          // EFI File system #define D_POOL        0x00000010          // Alloc & Free's #define D_PAGE        0x00000020          // Alloc & Free's #define D_INFO        0x00000040          // Verbose #define D_VAR         0x00000100          // Variable #define D_PARSE       0x00000200          // Command parsing #define D_BM          0x00000400          // Boot manager #define D_BLKIO       0x00001000          // BlkIo Driver #define D_BLKIO_ULTRA 0x00002000          // BlkIo Driver #define D_ERROR       0x80000000          // Error Examples Shell> err EFI ERROR 0000000080001007  Shell> err 80003007 EFI ERROR 80003007 getmtc  getmtc This command displays the current monotonic counter value.  The lower 32 bits increment every time this command is executed.  Every time the system is reset, the upper 32 bits will be incremented, and the lower 32 bits will be reset to 0. Examples Shell> getmtc Monotinic count = 700000000 Shell> getmtc Monotonic count = 700000001 mm Address [Width 1|2|4|8] [;MMIO | ;MEM | ;IO | ;PCI] [:Value] [-n]    Address   Start address    Width   - Size access in bytes.  Default is 1 byte.    MEM     - Memory Address 0 - 0xffffffff_ffffffff    MMIO    - Memory Mapped IO Address 0 - 0xffffffff_ffffffff    IO      - IO Address 0 - 0xffff    PCI     - PCI Config Address 0x000000ssbbddffrr              ss-> _SEG  bb-> bus  dd-> Device  ff-> Func  rr-> Register    Value   - The value to write    [-n]    - Nonintewractive mode Allows the user to display and/or modify I/O register, memory contents, or PCI configuration space.  The user can specify the start address and the access size they wish to perform using the Address and Width parameters.  MEM accesses system memory, MMIO accesses device memory, IO accesses device I/O ports, and PCI accesses PCI Configuration Space.  When this command is executed, the current contents of Address are displayed, and the user has the option of modifying the contents by typing in a hex value.  When the user pressed [ENTER], then next address is displayed.  This is continued until the user enter  Examples Shell> mm 80 1 ;IO IO  0x0000000000000080 : 0x0E > aa IO  0x0000000000000081 : 0x00 > IO  0x0000000000000082 : 0x00 > q Shell> mv file1 file2 This command moves a file from the path specified by file1 to the path specified by file2.  This command can be used to rename file, or move a file from one directory into another directory. Examples Shell> mv fs0:\a.txt fs0:\b.txt mv: fs0:\a.txt -> fs0:\b.txt [ok] Shell> mv fs0:\a.txt fs0:\efi\a.txt mv: fs0:\a.txt -> fs0:\efi\a.txt [ok] Displays all the PCI devices found in the system. Examples Shell> pci    Bus  Dev  Func    ---  ---  ----      0    0     0 ==> PCI Bridge Device - Host                        Vendor 0x8086 Device 0x7192 Prog Interface 0      0    2     0 ==> PCI Bridge Device - CardBus                        Vendor 0x104C Device 0xAC16 Prog Interface 0      0    2     1 ==> PCI Bridge Device - CardBus                        Vendor 0x104C Device 0xAC16 Prog Interface 0      0    3     0 ==> Display Controller - VGA                        Vendor 0x10C8 Device 0x0004 Prog Interface 0      0    7     0 ==> PCI Bridge Device -                         Vendor 0x8086 Device 0x7110 Prog Interface 0      0    7     1 ==> Mass Storage Controller - IDE                        Vendor 0x8086 Device 0x7111 Prog Interface 80      0    7     2 ==> Serial Bus Controller - USB                        Vendor 0x8086 Device 0x7112 Prog Interface 0      0    7     3 ==> PCI Bridge Device -                         Vendor 0x8086 Device 0x7113 Prog Interface 0 reset reset [/warm] [reset string]     [/warm]         - Perform a warm reset     [reset string]    String to pass to reset API.  Resets the system.  The default is to perform a cold reset unless the /warm parameter is specified.  If reset string is specified, then it is passed into the Reset() function, so the system can know the reason for the system reset. Examples Shell> reset Shell> reset /warm Shell> setsize setsize newsize filename   newsize    The new size of the file in bytes.   filename   The file path of the file to resize. This command sets the size of the file specified by filename to newsize bytes.  This command can be used to either shrink or grow and existing file. Examples Shell> setsize fs0:\a.txt 100 setsize: fs0:\a.txt 100 Shell> setsize fs0:\a.txt 0 setsize: fs0:\a.txt 0 Shell> stall stall microseconds   microseconds  - Time to stal in microseconds This command stalls the processor for the number of microseconds specified by microseconds. Examples Shell> stall 1000000 Stall for 1000000 uS Shell>  touch  touch filename This command updates the time and date on file specified by filename to the current time and date. Examples Shell> touch fs0:\a.txt touch: fs0:\a.txt [ok] Shell> Writing EFI Shell Commands This section describes how to write, compile, and modify the set of commands available from the EFI Shell environment.  The EFI Shell is provided as part of the EFI Application Toolkit.  The EFI Shell can either be built as a stand alone set of applications from the EFI Application Toolkit, or they can be integrated into the EFI Sample Implementation.  This section describes how to write EFI Shell commands that are built as part of the EFI Sample Implementation.  Please see the release notes for the EFI Sample Implementation for directions on how to import the EFI Shell from the EFI Application Toolkit. Writing a Shell Command EFI Shell commands can be added to the EFI source tree.  It is recommended that the EFI Shell commands be placed below the \efi\shell directory.  To add a new shell command to the build environment, a new subdirectory needs to be created, and a make.inf file along with the command s source code needs to be placed in that subdirectory.  There are two types of shell commands that can be written.  One is an internal shell command, and the other is an external shell command.  Internal shell commands are built into the EFI Shell itself.  This means that the image for the shell command is resident in memory along with the rest of the EFI Shell.  External shell commands reside on a storage device, and they are loaded into memory from the storage device each time they are executed.  For this example, the files for an internal EFI Shell command that displays all of the command line arguments are placed in the directory itestcmd, and their contents are listed below.  The make.inf file specifies a list of source files, the path to the include directories, the path of the library directories, the entry point for the application, and the name of the executable EFI Shell command.  The contents of make.inf are listed below. [sources]     itestcmd.c [includes]     .     ..\inc     $(EFI_SOURCE)\inc [libraries]     $(EFI_SOURCE)\lib     $(EFI_SOURCE)\shell\lib [nmake]     IMAGE_ENTRY_POINT=InitializeInternalTestCommand     TARGET_APP=itestcmd The source to the EFI Shell command itestcmd listed below is a shell command that displays the list of command line parameters on the console out device.  It makes use of some EFI Library calls, and some EFI Shell support functions.  The call to InstallInternalShellCommand() registers the command with the shell as an internal command, so the command can be executed without loading it from a storage device.  It also provides the EFI Shell with the information required to display help on the command s usage. Copyright (c) 1998  Intel Corporation Module Name:     itestcmd.c Abstract:     Shell app "itestcmd" Author: Revision History #include "shell.h" EFI_STATUS InitializeInternalTestCommand (     IN EFI_HANDLE           ImageHandle,     IN EFI_SYSTEM_TABLE     *SystemTable     ); EFI_DRIVER_ENTRY_POINT(InitializeInternalTestCommand) EFI_STATUS InitializeInternalTestCommand (     IN EFI_HANDLE           ImageHandle,     IN EFI_SYSTEM_TABLE     *SystemTable     )     CHAR16 **Argv;     UINTN  Argc;     UINTN  i;     //     // Check to see if the app is to be installed as a "internal command"      // to the shell     //     InstallInternalShellCommand (         ImageHandle,   SystemTable,   InitializeInternalTestCommand,         L"itestcmd",                    // command         L"itestcmd",                    // command syntax         L"Displays argc/argv list",     // 1 line descriptor         NULL                            // command help page         );     //     // We are not being installed as an internal command driver, initialize     // as an nshell app and run     //     InitializeShellApplication (ImageHandle, SystemTable);     //     // Get Argc and Argv.     //     Argv = SI->Argv;     Argc = SI->Argc;     //     // Display list of argumnents.     //     for(i=0;i<Argc;i++) {         Print(L"Argv[%d] = %s\n",i,Argv[i]);     }     return EFI_SUCCESS; Compiling a Shell Command  EFI Shell commands are PE/COFF images with a modified header signature.  The modified header helps distinguish EFI images from PE/COFF images.  Please refer to the EFI Specification for details on EFI images.   Before the EFI image type is integrated into the standard commercial tool chain, a utility for converting PE/COFF images to 64-bit EFI images is available. This will be provided with the initial release of the EFI Sample Implementation. Before a new EFI Shell command can be compiled, the makefile for each build tip need to be modified.  These files include: \efi\build\nt32\makefile \efi\build\sal64\makefile \efi\build\bios32\makefile \efi\build\ia-32emb\makefile In each of these files, there are two sections that need to be updated.  These are the list of EFI Shell command libraries, and the list of EFI Shell command makefiles.  A line needs to be added to each of these section for each EFI Shell command that is added.  An example for the itestcmd EFI Shell command is shown below: !IF "$(EFI_BOOTSHELL)" == "YES" EFI_LIBS = $(EFI_LIBS)  \             output\shell\newshell\newshell.lib                  \             output\shell\shellenv\shellenv.lib                  \             output\shell\lib\lib.lib                            \             output\shell\rm\rm.lib                              \ . . .             output\shell\edit\edit.lib                          \             output\shell\itestcmd\itestcmd.lib                  \ !ENDIF . . . makemaker: . . .     $(MAKE) -f output\shell\err\makefile                          all     $(MAKE) -f output\shell\vol\makefile                          all     $(MAKE) -f output\shell\bcfg\makefile                         all     $(MAKE) -f output\shell\cls\makefile                          all     $(MAKE) -f output\shell\edit\makefile                         all     $(MAKE) -f output\shell\itestcmd\makefile                     all !ENDIF If an EFI Shell command is going to be an internal command, one more file need to be updated.  This is \efi\corefw\fw\inc\plshell.h.  This file must declare the entry point to the new command.  For this example, this entry point is InitializeInternalTestCommand().  The other change to this file is to the declaration of the PlLoadShellTools() define.  This define must be appended with a call to LOAD_INTENAL_DRIVER() for the itestcmd command.  A portion of the modified version of plshell.h is shown below.  Please refer to the sample code for a complete listing of this file. EFI_STATUS InitializeInternalTestCommand (     IN EFI_HANDLE           ImageHandle,     IN EFI_SYSTEM_TABLE     *SystemTable     ); #define PlLoadShellTools()                          \                                                     \     LOAD_INTERNAL_DRIVER(                           \         FW,                                         \         IMAGE_SUBSYSTEM_EFI_BOOT_SERVICE_DRIVER,    \         L"shellenv",                                \         InitializeShellEnviroment                   \         );                                          \                                                     \     LOAD_INTERNAL_DRIVER(                           \         FW,                                         \         IMAGE_SUBSYSTEM_EFI_BOOT_SERVICE_DRIVER,    \         L"ls",                                      \         InitializeLS                                \         );                                          \                                                     \                                                     \     LOAD_INTERNAL_DRIVER(                           \         FW,                                         \         IMAGE_SUBSYSTEM_EFI_BOOT_SERVICE_DRIVER,    \         L"itestcmd",                                \         InitializeInternalTestCommand               \         );                                          \ Once all of these changes have been made to the EFI build environment the code can be built as normal from one of the build tips.  If an internal EFI shell command has been added, then the new command will be available from the EFI Shell, and the command should be listed when the help command is executed.  If a new EFI Shell command is not an internal shell command, then the image for the new command will have to be placed on a storage device where the EFI Shell can find it.  The new EFI Shell command can then be loaded and executed. Adding Commands to the EFI Shell The following is a summary of the steps required to add a new standard EFI Shell command to the EFI Shell. Create a new directory for the command below \efi\shell\ Place make.inf and the source files to the new command in the new directory. Update the makefile in each of the build tips to include the new command. If the new EFI Shell command is going to be an internal command, then the following three steps also need to be performed. Add a declaration to the entry point of the new command to \efi\corefw\fw\inc\plshell.h. Add a call to LOAD_INTERNAL_DRIVER for the new command to #define PlLoadShellTools in the file \efi\corefw\fw\inc\plshell.h. Removing Commands from the EFI Shell If a command needs to be removed from the EFI shell, then undo the steps listed in previous section. EFI Applications This section describes how to write, compile, and run applications in the sample implementation of the EFI environment.  Building applications in the sample implementation is described for illustration purposes. Writing EFI Applications EFI Applications can be added to the EFI source tree.  It is recommended that all stand alone EFI Applications be placed below the \efi\apps directory.  This recommendation is not strictly required.  However, it does provide a convenient build environment.  To add a new application to the build environment, a new subdirectory needs to be created, and a make.inf file along with the source code needs to be placed in that subdirectory.  For this example, the files for a simple test application are placed in the directory hello, and their contents are listed below.  The make.inf file specifies a list of source files, the path to the include directories, the path the library directories, the entry point for the application, and the name of the executable EFI Application image.  The contents of make.inf are listed below. [sources]     hello.c [includes]     $(EFI_SOURCE)\inc [libraries]     $(EFI_SOURCE)\lib [nmake]     IMAGE_ENTRY_POINT=InitializeHelloApplication     TARGET_APP=hello  The test application listed below is the simplest possible application that can be written.  It does not depend upon any EFI Library functions, so the EFI Library is not linked into the executable that is generated.  This test application uses the SystemTable that is passed into the entry point to get access to the EFI console devices.  The console output device is used to display a message using the OutputString() function of the SIMPLE_TEXT_OUTPUT_INTERFACE protocol, and the application waits for a keystroke from the user on the console input device using the WaitForEvent() service with the WaitForKey event in the SIMPLE_INPUT_INTERFACE protocol.  Once a key is pressed, the application exits. Copyright (c) 1998  Intel Corporation Module Name:     hello.c Abstract: Author: Revision History #include "efi.h" EFI_STATUS InitializeHelloApplication (     IN EFI_HANDLE           ImageHandle,     IN EFI_SYSTEM_TABLE     *SystemTable     )     UINTN Index;     //     // Send a message to the ConsoleOut device.     //     SystemTable->ConOut->OutputString(SystemTable->ConOut,                                       L"Hello application started\n\r");     //     // Wait for the user to press a key.     //     SystemTable->ConOut->OutputString(SystemTable->ConOut,                                       L"\n\r\n\r\n\rHit any key to exit\n\r");     SystemTable->BootServices->WaitForEvent (1,                                               &(SystemTable->ConIn->WaitForKey),                                               &Index);     SystemTable->ConOut->OutputString(SystemTable->ConOut,L"\n\r\n\r");     //     // Exit the application.     //     return EFI_SUCCESS; Compiling EFI Applications EFI applications are PE/COFF images with a modified header signature.  The modified header helps distinguish EFI images from PE/COFF images.  Please refer to the EFI Specification for details on EFI images.   Before the EFI image type is integrated into the standard commercial tool chain, a utility for converting PE/COFF images to 64-bit EFI images is available. This will be provided with the initial release of the EFI sample implementation. Before a new EFI application can be compiled, the makefile for each build tip need to be modified.  These files include: \efi\build\ntdbg32\makefile \efi\build\sal64\makefile \efi\build\saldbg64\makefile \efi\build\bios32\makefile \efi\build\biosdbg32\makefile In each of these files, there is a section labeled "makemaker".  Add a line to the end of this section for each new EFI application.  The section of a makefile that supports two test applications is listed below.  Once these changes have been made, the new application will be compiled when nmake is run from a build tip. makemaker: . . . !IF "$(EFI_BOOTSHELL)" == "YES" . . . !ENDIF     $(MAKE) -f output\apps\hello\makefile                       all     $(MAKE) -f output\apps\hellolib\makefile                    all Writing EFI Applications with EFI Library Support If an EFI Application wants to use the EFI Library functions, then the file efilib.h needs to be included, and a call to InitializeLib() needs to be added.  The following is a listing of the EFI application hellolib.c.  This application makes use of the EFI Library to print text to the console output device.  It also uses the global variable ST instead of SystemTable to make the standard EFI API calls. Copyright (c) 1999  Intel Corporation Module Name: hellolib.c Abstract: This is an example EFI program Author:  Revision History: 1.0 #include "efi.h" #include "efilib.h" EFI_STATUS InitializeHelloLibApplication (     IN EFI_HANDLE           ImageHandle,     IN EFI_SYSTEM_TABLE     *SystemTable     )     //     // Initialize the Library. Set BS, RT, &ST globals     //  BS = Boot Services      //  RT = RunTime Services     //  ST = System Table     //     InitializeLib (ImageHandle, SystemTable);     //     // Print a message to the console device using a library function.     //     Print(L"HelloLib application started\n");     //     // Wait for a key to be pressed on the console device.     //     Print(L"\n\n\nHit any key to exit this image\n");     WaitForSingleEvent (ST->ConIn->WaitForKey, 0);     //     // Print a message to the console device using a protocol interface.     //     ST->ConOut->OutputString (ST->ConOut, L"\n\n");     //     // Return control to the Shell.     //     return EFI_SUCCESS; Running EFI Applications An EFI application may be executed by typing the program s name at the EFI shell command line.  The following examples show how to run the test applications described in the sections above from the EFI Shell.  Both applications wait for the user to press a key before they will return to the EFI Shell prompt.  It is assumed that hello.efi and hellolib.efi are in the search path of the EFI Shell environment. Examples Shell> hello Hello application started Hit any key to exit this image Shell> hellolib HelloLib application started Hit any key to exit this image Shell> EFI OS Loaders This section discusses the special considerations required when writing an OS loader.  An OS loader is a special type of EFI Application.  It is responsible for transitioning a system from a firmware environment into an Operating System environment.  To accomplish this task, several important steps must be taken. The OS loader must determine where it was loaded from.  This will allow an OS loader to retrieve additional files from the same location. The OS loader must determine where in the system the OS exists.  Typically, the OS will reside on a partition of a hard drive.  However, the partition where the OS exists may not use a file system that is recognized by the EFI environment.  In this case, the OS loader can only access the partition as a block device using only block I/O operations.  The OS loader will then be required to implement or load the file system driver to access files on the OS partition. The OS loader must build a memory map of the physical memory resources so that the OS kernel can know what memory to manage.  Some of the physical memory in the system must remain untouched by the OS kernel, so the OS loader must use the EFI APIs to retrieve the system s current memory map.   An OS has the option of storing boot paths and boot options in non-volatile storage in the form of environment variables.  The OS loader may need to use some of the environment variables stored in non-volatile storage.  In addition, the OS loader may be required to pass some of the environment variables to the OS kernel. The next step is to call ExitBootServices().  This can be done from either the OS loader, or from the OS kernel.  Special care must be taken to guarantee that the most current memory map has been retrieved prior to making this call.  Once ExitBootServices() had been called, no more EFI Boot Time Service calls can be made.  At some point, either just prior to calling ExitBootServices() or just after, the OS loader will transfer control to the OS kernel. Finally, after ExitBootServices() has been called, the EFI Boot Service calls are no longer available.  This means that once an OS kernel has taken control of the system, the OS kernel may only make EFI Run Time Service calls.  A complete listing of the an OS Loader sample application can be found in Appendix E, and the output from the OS loader sample can be found in Appendix F. The code fragments in the following sections do not perform any error checking.  The code listing in Appendix E has similar code sections, but all the return status codes are checked.  Also, the OS Loader sample application makes use of several EFI Library functions to simplify the implementation.   The output shown in Appendix F shows the OS loader sample going through the steps listed above.  It starts by printing out the device path and the file path of the OS loader itself.  It also shows where in memory the OS loader resides, and how many bytes it is using.  Next, it loads the file OSKERNEL.BIN into memory.  The file OSKERNEL.BIN was retrieved from the same directory as the image of the OS loader sample. The next section of the output shows the first block of several block devices.  The first one is the first block of floppy drive with a FAT12 file system.  The second one is the Master Boot Record from the hard drive.  The third one is the first block of a large FAT32 partition on the same hard drive, and the fourth one is the first block of a smaller FAT16 partition on the same hard drive. The next section shows the pointers to all the system configuration tables, the system s current memory map, and a list of all the system s environment variables.  The very last step shown is the OS loader calling ExitBootServices(). Device Path and Image Information of the OS Loader The following code fragment shows the steps required to get the device path and file path to the OS loader itself.  The first call to HandleProtocol() gets the LOADED_IMAGE_PROTOCOL interface from the ImageHandle that was passed into the OS loader application.  The second call to HandleProtocol() gets the DEVICE_PATH_PROTOCOL interface to the device handle of the OS loader image.  With these two calls, the device path of the OS loader image is known, and the file path along with other image information is known about the OS loader. BS->HandleProtocol(ImageHandle, &LoadedImageProtocol, LoadedImage); BS->HandleProtocol(LoadedImage->DeviceHandle, &DevicePathProtocol, &DevicePath); Print (L"Image device : %s\n", DevicePathToStr (DevicePath));  Print (L"Image file   : %s\n", DevicePathToStr (LoadedImage->FilePath)); Print (L"Image Base   : %X\n", LoadedImage->ImageBase); Print (L"Image Size   : %X\n", LoadedImage->ImageSize); Accessing Files in the Device Path of the OS Loader Section 5.1 shows how to retrieve the device path and the image path of the OS loader image.  The following code fragment shows how to use this information to open another file called OSKERNEL.BIN that resides in the same directory as the OS loader itself.  The first step is to use HandleProtocol() to get the FILE_SYSTEM_PROTOCOL interface to the device handle retrieved in the previous section.  Then, the disk volume can be opened so file access calls can be made.  The end result is that the variable CurDir is a file handle to the same partition that the OS loader resides. BS->HandleProtocol(LoadedImage->DeviceHandle, &FileSystemProtocol, &Vol); Vol->OpenVolume (Vol, &RootFs); CurDir = RootFs; The next step is to build a file path to OSKERNEL.BIN that exists in the same directory as the OS loader image.  Once the path is built, the file handle CurDir can be used to perform Open, Close, Read, and Write calls on the OSKERNEL.BIN file.  The following code fragment builds a file path, opens the file, reads it into an allocated buffer, and closes the file. StrCpy(FileName,DevicePathToStr(LoadedImage->FilePath)); for(i=StrLen(FileName);i>=0 && FileName[i]!='\\';i--); FileName[i] = 0; StrCat(FileName,L"\\OSKERNEL.BIN"); CurDir->Open (CurDir, &FileHandle, FileName, EFI_FILE_MODE_READ, 0); Size = 0x00100000; BS->AllocatePool(EfiLoaderData, Size, &OsKernelBuffer); FileHandle->Read(FileHandle, &Size, OsKernelBuffer); FileHandle->Close(FileHandle); Finding the OS Partition The EFI sample environment materializes a BLOCK_IO_PROTOCOL instance for every partition found in a system.  An OS loader can search for OS partitions by looking at all the BLOCK_IO devices.  The following code fragment uses LibLocateHandle() to get a list of BLOCK_IO device handles.  These handles are then used to retrieve the first block from each one of these BLOCK_IO devices.  The HandleProtocol() API is used to get the DEVICE_PATH_PROTOCOL and the BLOCK_IO_PROTOCOL instances for each of the BLOCK_IO devices.  The variable BlkIo is a handle to the BLOCK_IO device using the BLOCK_IO_PROTOCOL interface.  At this point, a ReaddBlocks() call can be used to read the first block of a device.  The sample OS loader just dumps the contents of the block to the display.  A real OS loader would have to test each block read to see if it is a recognized partition.  If a recognized partition is found, then the OS loader can implement a simple file system driver using the EFI API ReadBlocks() to load additional data from that partition. NoHandles = 0; HandleBuffer = NULL; LibLocateHandle(ByProtocol, &BlockIoProtocol, NULL, &NoHandles, &HandleBuffer); for(i=0;i<NoHandles;i++) {     BS->HandleProtocol (HandleBuffer[i], &DevicePathProtocol, &DevicePath);     BS->HandleProtocol (HandleBuffer[i], &BlockIoProtocol, &BlkIo);      Block = AllocatePool (BlkIo->BlockSize);     MediaId = BlkIo->MediaId;     BlkIo->ReadBlocks(BlkIo, MediaId, (EFI_LBA)0, BlkIo->BlockSize, Block);     Print(L"\nBlock #0 of device %s\n",DevicePathToStr(DevicePath));     DumpHex(0,0,BlkIo->BlockSize,Block); Getting the Current System Configuration     All the system configuration is available through the SystemTable data structure that is passed into the OS loader.  There are five tables available, and their structure and contents are described in the appropriate specifications.       LibGetSystemConfigurationTable(&AcpiTableGuid,&AcpiTable);       LibGetSystemConfigurationTable(&SMBIOSTableGuid,&SMBIOSTable);       LibGetSystemConfigurationTable(&SalSystemTableGuid,&SalSystemTable);       LibGetSystemConfigurationTable(&MpsTableGuid,&MpsTable);       Print(L"  ACPI Table is at address                   : %X\n",AcpiTable);       Print(L"  SMBIOS Table is at address                 : %X\n",SMBIOSTable);       Print(L"  Sal System Table is at address             : %X\n",SalSystemTable);       Print(L"  MPS Table is at address                    : %X\n",MpsTable); Getting the Current Memory Map There is one EFI Library function that can retrieve the memory map maintained by the EFI environment.  The following code fragment shows the use of this library function, and it displays the contents of memory map.  An OS loader must pay special attention to the MapKey parameter.  Every time that the EFI environment modifies the memory map that is maintains, the MapKey is incremented.  An OS loader needs to pass to current memory map to the OS kernel.  Depending on what functions the OS loader calls between the time the memory map is retrieved and the time that ExitBootServices() is called, the memory map may be modified.  In general, the OS loader should retrieve the memory map just before the call to ExitBootServices().  If ExitBootServices() fails because the MapKey does not match, then the OS loader must get a new copy of the memory map and try again.       MemoryMap = LibMemoryMap(&NoEntries,&MapKey,&DescriptorSize,&DescriptorVersion);       Print(L"Memory Descriptor List:\n\n");       Print(L"  Type        Start Address     End Address       Attributes      \n");       Print(L"  ==========  ================  ================  ================\n");       MemoryMapEntry = MemoryMap;       for(i=0;i<NoEntries;i++) {           Print(L"  %s  %lX  %lX  %lX\n",                 OsLoaderMemoryTypeDesc[MemoryMapEntry->Type],                 MemoryMapEntry->PhysicalStart,                 MemoryMapEntry->PhysicalStart +                      LShiftU64(MemoryMapEntry->NumberOfPages,PAGE_SHIFT)-1,                 MemoryMapEntry->Attribute);           MemoryMapEntry = NextMemoryDescriptor(MemoryMapEntry, DescriptorSize);       } Getting Environment Variables The following code fragment shows how to extract all the environment variables maintained by the EFI environment.  It uses the GetNextVariableName() API to walk the entire list.   VariableName[0] = 0x0000; VendorGuid = NullGuid; Print(L"GUID                                Variable Name        Value\n"); Print(L"=================================== ==================== ========\n");   VariableNameSize = 256;   Status = RT-GetNextVariableName(&VariableNameSize,VariableName,&VendorGuid);   if (Status == EFI_SUCCESS) {     VariableValue = LibGetVariable(VariableName,&VendorGuid);     Print(L"%.-35g %.-20s %X\n",&VendorGuid,VariableName,VariableValue); } while (Status == EFI_SUCCESS); Transitioning to an OS Kernel A single call to ExitBootServices() terminates all the Boot Time Services that the EFI environment provides.  From that point on, only the EFI Run Time Services may be used.  Once this call is made, the OS loader needs to prepare for the transition to the OS kernel.  It is assumed that the OS kernel has full control of the system, and that only a few firmware function