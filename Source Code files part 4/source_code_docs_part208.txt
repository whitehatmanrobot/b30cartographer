Designer">
      <summary>
        <para>Provides a base designer for all intrinsic HTML controls.</para>
      </summary>
    </member>
    <member name="T:System.Web.UI.Design.IDataSourceProvider">
      <summary>
        <para> Defines an interface that a control designer can implement to provide access to a data source.</para>
      </summary>
    </member>
    <member name="M:System.Web.UI.Design.IDataSourceProvider.GetSelectedDataSource">
      <summary>
        <para> Gets a reference to the selected data source of this data source provider.</para>
      </summary>
      <returns>
        <para>The currently selected data source object of this data source provider.</para>
      </returns>
    </member>
    <member name="M:System.Web.UI.Design.IDataSourceProvider.GetResolvedSelectedDataSource">
      <summary>
        <para> Gets the selected data member from the selected data source.</para>
      </summary>
      <returns>
        <para> The selected data member from the selected data source, 
      if the control allows the user to select an <see cref="T:System.ComponentModel.IListSource" /> (such as a <see cref="T:System.Data.DataSet" />) for the data source, and provides
      a DataMember property to select a particular list (or <see cref="T:System.Data.DataTable" /> )
      within the data source.</para>
      </returns>
    </member>
    <member name="T:System.Web.UI.Design.IHtmlControlDesignerBehavior">
      <summary>
        <para> Defines an interface that enables the extension of specific behaviors of an HTML control designer.</para>
      </summary>
    </member>
    <member name="M:System.Web.UI.Design.IHtmlControlDesignerBehavior.GetAttribute(System.String,System.Boolean)">
      <summary>
        <para>Gets the specified attribute.</para>
      </summary>
      <param name="attribute">The attribute to retrieve.</param>
      <param name=" ignoreCase">
        <see langword="true" /> if the attribute syntax is case-insensitive; otherwise, <see langword="false" />.</param>
      <returns>
        <para>The attribute that was retrieved.</para>
      </returns>
    </member>
    <member name="M:System.Web.UI.Design.IHtmlControlDesignerBehavior.RemoveAttribute(System.String,System.Boolean)">
      <summary>
        <para>Removes the specified attribute.</para>
      </summary>
      <param name="attribute">The attribute to remove.</param>
      <param name=" ignoreCase">
        <see langword="true" /> if the attribute syntax is case-insensitive; otherwise, <see langword="false" />.</param>
    </member>
    <member name="M:System.Web.UI.Design.IHtmlControlDesignerBehavior.SetAttribute(System.String,System.Object,System.Boolean)">
      <summary>
        <para>Sets the specified attribute to the specified object.</para>
      </summary>
      <param name="attribute">The attribute to set.</param>
      <param name=" value">The object on which to set the attribute.</param>
      <param name=" ignoreCase">
        <see langword="true" /> if the attribute syntax is case-insensitive; otherwise, <see langword="false" />.</param>
    </member>
    <member name="M:System.Web.UI.Design.IHtmlControlDesignerBehavior.GetStyleAttribute(System.String,System.Boolean,System.Boolean)">
      <summary>
        <para>Gets the specified style attribute.</para>
      </summary>
      <param name="attribute">The style attribute to retrieve.</param>
      <param name=" designTimeOnly">
        <see langword="true" /> if the attribute is only active at design time; otherwise,<see langword=" false" />.</param>
      <param name=" ignoreCase">
        <see langword="true" /> if the attribute syntax is case-insensitive; otherwise, <see langword="false" />.</param>
      <returns>
        <para>The style attribute that was retrieved.</para>
      </returns>
    </member>
    <member name="M:System.Web.UI.Design.IHtmlControlDesignerBehavior.RemoveStyleAttribute(System.String,System.Boolean,System.Boolean)">
      <summary>
        <para>Removes the specified style attribute.</para>
      </summary>
      <param name="attribute">The style attribute to remove.</param>
      <param name=" designTimeOnly">
        <see langword="true" /> if the attribute is only active at design time; otherwise,<see langword=" false" />.</param>
      <param name=" ignoreCase">
        <see langword="true" /> if the attribute syntax is case-insensitive; otherwise, <see langword="false" />.</param>
    </member>
    <member name="M:System.Web.UI.Design.IHtmlControlDesignerBehavior.SetStyleAttribute(System.String,System.Boolean,System.Object,System.Boolean)">
      <summary>
        <para>Sets the specified style attribute to the specified object.</para>
      </summary>
      <param name="attribute">The attribute to set.</param>
      <param name=" designTimeOnly">
        <see langword="true" /> if the attribute is only active at design-time; otherwise,<see langword=" false" />.</param>
      <param name=" value">The object to set the attribute on.</param>
      <param name=" ignoreCase">
        <see langword="true" /> if the attribute syntax is case-insensitive; otherwise, <see langword="false" />.</param>
    </member>
    <member name="P:System.Web.UI.Design.IHtmlControlDesignerBehavior.Designer">
      <summary>
        <para>Gets or sets the designer that the behavior is associated with.</para>
      </summary>
    </member>
    <member name="P:System.Web.UI.Design.IHtmlControlDesignerBehavior.DesignTimeElement">
      <summary>
        <para>Gets the element that the designer is associated with.</para>
      </summary>
    </member>
    <member name="T:System.Web.UI.Design.ImageUrlEditor">
      <summary>
        <para>Provides a user interface for selecting a
      URL to an image.</para>
      </summary>
    </member>
    <member name="T:System.Web.UI.Design.UrlEditor">
      <summary>
        <para> Provides a user interface for selecting a URL.</para>
      </summary>
    </member>
    <member name="M:System.Web.UI.Design.UrlEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>
        <para> Edits the value of the specified object using the editor style
      provided by the <see cref="M:System.Web.UI.Design.UrlEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)" />
      method.
      </para>
      </summary>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that can be used to gain additional context information. </param>
      <param name="provider">A service provider object through which editing services may be obtained. </param>
      <param name="value">An instance of the value being edited. </param>
      <returns>
        <para> The new value of the object. If the value of the object hasn't changed,
      this method should return the same object it was passed.
      </para>
      </returns>
    </member>
    <member name="M:System.Web.UI.Design.UrlEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary>
        <para>Gets the editing style of the <see cref="M:System.Web.UI.Design.UrlEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)" /> method.</para>
      </summary>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that can be used to gain additional context information.</param>
      <returns>
        <para>One of the <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" /> values
   indicating the provided editing style. If the method is not supported, this will
   return <see cref="F:System.Drawing.Design.UITypeEditorEditStyle.None" />.</para>
      </returns>
    </member>
    <member name="P:System.Web.UI.Design.UrlEditor.Caption">
      <summary>
        <para> Gets the caption to display on the selection dialog box.
      </para>
      </summary>
    </member>
    <member name="P:System.Web.UI.Design.UrlEditor.Options">
      <summary>
        <para> Indicates the options for the URL builder to use.</para>
      </summary>
    </member>
    <member name="P:System.Web.UI.Design.UrlEditor.Filter">
      <summary>
        <para>Gets the file name filter string for the editor. This is used to
      determine the items that appear in the file list of the dialog box.</para>
      </summary>
    </member>
    <member name="P:System.Web.UI.Design.ImageUrlEditor.Caption">
      <summary>
        <para>Gets the caption to display on the selection dialog window.</para>
      </summary>
    </member>
    <member name="P:System.Web.UI.Design.ImageUrlEditor.Filter">
      <summary>
        <para> Gets the file type filter string for the editor.
      This is used to determine the items that appear in the file list of the dialog box.</para>
      </summary>
    </member>
    <member name="T:System.Web.UI.Design.ITemplateEditingFrame">
      <summary>
        <para> Provides an interface to manage a template editing area.</para>
      </summary>
    </member>
    <member name="M:System.Web.UI.Design.ITemplateEditingFrame.Close(System.Boolean)">
      <summary>
        <para>Closes the control and optionally saves any changes.</para>
      </summary>
      <param name="saveChanges">
        <see langword="true" /> if changes to the document should be saved; otherwise, <see langword="false" />.</param>
    </member>
    <member name="M:System.Web.UI.Design.ITemplateEditingFrame.Open">
      <summary>
        <para>Opens and displays the control.</para>
      </summary>
    </member>
    <member name="M:System.Web.UI.Design.ITemplateEditingFrame.Resize(System.Int32,System.Int32)">
      <summary>
        <para>Resizes the control to the specified width and height.</para>
      </summary>
      <param name="width">The new width for the control.</param>
      <param name=" height">The new height for the control.</param>
    </member>
    <member name="M:System.Web.UI.Design.ITemplateEditingFrame.Save">
      <summary>
        <para>Saves any changes to the document.</para>
      </summary>
    </member>
    <member name="M:System.Web.UI.Design.ITemplateEditingFrame.UpdateControlName(System.String)">
      <summary>
        <para>Changes the name of the control to the specified name.</para>
      </summary>
      <param name="newName">The new name for the control.</param>
    </member>
    <member name="P:System.Web.UI.Design.ITemplateEditingFrame.ControlStyle">
      <summary>
        <para> Gets the style for the editing frame.</para>
      </summary>
    </member>
    <member name="P:System.Web.UI.Design.ITemplateEditingFrame.Name">
      <summary>
        <para> Gets the name of the editing frame.</para>
      </summary>
    </member>
    <member name="P:System.Web.UI.Design.ITemplateEditingFrame.InitialHeight">
      <summary>
        <para>Gets or sets the initial height of the control.</para>
      </summary>
    </member>
    <member name="P:System.Web.UI.Design.ITemplateEditingFrame.InitialWidth">
      <summary>
        <para>Gets or sets the initial width of the control.</para>
      </summary>
    </member>
    <member name="P:System.Web.UI.Design.ITemplateEditingFrame.TemplateNames">
      <summary>
        <para> Gets a set of names of templates to use.</para>
      </summary>
    </member>
    <member name="P:System.Web.UI.Design.ITemplateEditingFrame.TemplateStyles">
      <summary>
        <para> Gets the template styles for the control.</para>
      </summary>
    </member>
    <member name="P:System.Web.UI.Design.ITemplateEditingFrame.Verb">
      <summary>
        <para> Gets or sets the verb that invokes the template.</para>
      </summary>
    </member>
    <member name="T:System.Web.UI.Design.ITemplateEditingService">
      <summary>
        <para>Provides services for editing control templates at design time.</para>
      </summary>
    </member>
    <member name="M:System.Web.UI.Design.ITemplateEditingService.CreateFrame(System.Web.UI.Design.TemplatedControlDesigner,System.String,System.String[])">
      <summary>
        <para>Creates a new template editing frame for the specified 
      templated control designer, using the specified name and templates.</para>
      </summary>
      <param name="designer">The <see cref="T:System.Web.UI.Design.TemplatedControlDesigner" /> that will use the template editing frame.</param>
      <param name=" frameName">The name of the editing frame that will be displayed on the frame. Typically this is the same as the <see cref="P:System.ComponentModel.Design.DesignerVerb.Text" /> property used as the menu text for the <see cref="T:System.Web.UI.Design.TemplateEditingVerb" /> that is invoked to create the frame.</param>
      <param name=" templateNames">An array of names for the templates that the template editing frame will contain.</param>
      <returns>
        <para>The new <see cref="T:System.Web.UI.Design.ITemplateEditingFrame" />.</para>
      </returns>
    </member>
    <member name="M:System.Web.UI.Design.ITemplateEditingService.CreateFrame(System.Web.UI.Design.TemplatedControlDesigner,System.String,System.String[],System.Web.UI.WebControls.Style,System.Web.UI.WebControls.Style[])">
      <summary>
        <para>Creates a new template editing frame for the specified
   <see cref="T:System.Web.UI.Design.TemplatedControlDesigner" />, using the specified name, template names, control
      style, and template styles.</para>
      </summary>
      <param name="designer">The <see cref="T:System.Web.UI.Design.TemplatedControlDesigner" /> that will use the template editing frame.</param>
      <param name=" frameName">The name of the editing frame that will be displayed on the frame. Typically this is the same as the <see cref="P:System.ComponentModel.Design.DesignerVerb.Text" /> property used as the menu text for the <see cref="T:System.Web.UI.Design.TemplateEditingVerb" /> that is invoked to create the frame.</param>
      <param name=" templateNames">An array of names for the templates that the template editing frame will contain.</param>
      <param name=" controlStyle">The control <see cref="T:System.Web.UI.WebControls.Style" /> for the editing frame.</param>
      <param name=" templateStyles">An array of type <see cref="T:System.Web.UI.WebControls.Style" /> that represents the template styles for the editing frame.</param>
      <returns>
        <para>The new <see cref="T:System.Web.UI.Design.ITemplateEditingFrame" />.</para>
      </returns>
    </member>
    <member name="M:System.Web.UI.Design.ITemplateEditingService.GetContainingTemplateName(System.Web.UI.Control)">
      <summary>
        <para>Gets the name of the parent template.</para>
      </summary>
      <param name="control">The <see cref="T:System.Web.UI.Control" /> for which to get the name of the parent template.</param>
      <returns>
        <para>The name of the parent template.</para>
      </returns>
    </member>
    <member name="P:System.Web.UI.Design.ITemplateEditingService.SupportsNestedTemplateEditing">
      <summary>
        <para>Indicates whether the service supports nested template editing.</para>
      </summary>
    </member>
    <member name="T:System.Web.UI.Design.IControlDesignerBehavior">
      <summary>
        <para> Enables the extension of specific behaviors of a control designer.</para>
      </summary>
    </member>
    <member name="M:System.Web.UI.Design.IControlDesignerBehavior.OnTemplateModeChanged">
      <summary>
        <para>Provides an opportunity to perform processing when the 
      designer enters or exits template mode.</para>
      </summary>
    </member>
    <member name="P:System.Web.UI.Design.IControlDesignerBehavior.DesignTimeElementView">
      <summary>
        <para> Gets the design-time view control object for the designer.</para>
      </summary>
    </member>
    <member name="P:System.Web.UI.Design.IControlDesignerBehavior.DesignTimeHtml">
      <summary>
        <para>Gets or sets the design-time HTML for the designer's control.</para>
      </summary>
    </member>
    <member name="T:System.Web.UI.Design.IWebFormReferenceManager">
      <summary>
        <para> Provides an interface that can lookup information about
      the types used in the current Web
      Forms project.</para>
      </summary>
    </member>
    <member name="M:System.Web.UI.Design.IWebFormReferenceManager.GetObjectType(System.String,System.String)">
      <summary>
        <para>Gets the type of the specified object.</para>
      </summary>
      <param name="tagPrefix">The tag prefix for the type.</param>
      <param name=" typeName">The name of the type.</param>
      <returns>
        <para>The <see cref="T:System.Type" /> 
of the object, if it could be resolved.</para>
      </returns>
    </member>
    <member name="M:System.Web.UI.Design.IWebFormReferenceManager.GetTagPrefix(System.Type)">
      <summary>
        <para> Gets the tag prefix for the specified type of object.
      </para>
      </summary>
      <param name="objectType">The type of the object. </param>
      <returns>
        <para>The tag prefix for the specified object type, if it could be located.</para>
      </returns>
    </member>
    <member name="M:System.Web.UI.Design.IWebFormReferenceManager.GetRegisterDirectives">
      <summary>
        <para> Gets the register directives for the current project.
      </para>
      </summary>
      <returns>
        <para>The register directives for the current project.</para>
      </returns>
    </member>
    <member name="T:System.Web.UI.Design.IWebFormsBuilderUIService">
      <summary>
        <para> Provides methods to start specific user interfaces for
      building properties at design-time.</para>
      </summary>
    </member>
    <member name="M:System.Web.UI.Design.IWebFormsBuilderUIService.BuildColor(System.Windows.Forms.Control,System.String)">
      <summary>
        <para>Starts a <see cref="T:System.Web.UI.Design.ColorBuilder" /> to build a color property.</para>
      </summary>
      <param name="owner">The control used to parent the dialog shown by the <see cref="T:System.Web.UI.Design.ColorBuilder" /> .</param>
      <param name=" initialColor">The initial color for the editor to pre-select.</param>
      <returns>
        <para>The color that was selected. This value will be a 
      named color, or an RGB color expressed in HTML color format (#RRGGBB).</para>
      </returns>
    </member>
    <member name="M:System.Web.UI.Design.IWebFormsBuilderUIService.BuildUrl(System.Windows.Forms.Control,System.String,System.String,System.String,System.String,System.Web.UI.Design.UrlBuilderOptions)">
      <summary>
        <para>Launches an editor to build a URL property.</para>
      </summary>
      <param name="owner">The control used to parent the dialog shown by the <see cref="T:System.Web.UI.Design.UrlBuilder" /> .</param>
      <param name=" initialUrl">The initial URL to display in the selection interface.</param>
      <param name=" baseUrl"> The base URL used to construct relative URLs.</param>
      <param name=" caption">A caption that presents a message in the selection interface.</param>
      <param name=" filter">The filter string to use to optionally filter the files displayed in the selection interface.</param>
      <param name=" options">A <see cref="T:System.Web.UI.Design.UrlBuilderOptions" /> that indicates the options for the <see cref="T:System.Web.UI.Design.UrlBuilder" />.</param>
      <returns>
        <para>A string that contains the URL returned by the
   <see cref="T:System.Web.UI.Design.UrlBuilder" />. </para>
      </returns>
    </member>
    <member name="T:System.Web.UI.Design.IWebFormsDocumentService">
      <summary>
        <para>Provides methods to access services for tracking the loading state of a Web Forms
      document, handling events at load time, accessing a document's location,
      managing a document's undo service, and setting a new selection within the document.</para>
      </summary>
    </member>
    <member name="M:System.Web.UI.Design.IWebFormsDocumentService.CreateDiscardableUndoUnit">
      <summary>
        <para>Creates a discardable undo unit.</para>
      </summary>
      <returns>
        <para>The new discardable undo unit.</para>
      </returns>
    </member>
    <member name="M:System.Web.UI.Design.IWebFormsDocumentService.DiscardUndoUnit(System.Object)">
      <summary>
        <para>Discards the specified undo unit.</para>
      </summary>
      <param name="discardableUndoUnit">The undo unit to discard.</param>
    </member>
    <member name="M:System.Web.UI.Design.IWebFormsDocumentService.EnableUndo(System.Boolean)">
      <summary>
        <para>Enables the ability to undo actions that occur within
 undoable action units or transactions.</para>
      </summary>
      <param name="enable">
        <see langword="true" /> if actions should be undoable; otherwise, <see langword="false" />.</param>
    </member>
    <member name="M:System.Web.UI.Design.IWebFormsDocumentService.UpdateSelection">
      <summary>
        <para>When implemented in a derived class, updates the current selection.</para>
      </summary>
    </member>
    <member name="P:System.Web.UI.Design.IWebFormsDocumentService.DocumentUrl">
      <summary>
        <para> Gets the URL at which the document is located.</para>
      </summary>
    </member>
    <member name="P:System.Web.UI.Design.IWebFormsDocumentService.IsLoading">
      <summary>
        <para>Gets a value indicating whether the document service is currently loading.</para>
      </summary>
    </member>
    <member name="E:System.Web.UI.Design.IWebFormsDocumentService.LoadComplete">
      <summary>
        <para>Occurs when the service has finished loading.</para>
      </summary>
    </member>
    <member name="T:System.Web.UI.Design.ReadWriteControlDesigner">
      <summary>
        <para> Extends design-time behavior for read/write server controls.</para>
      </summary>
    </member>
    <member name="T:System.Web.UI.Design.ControlDesigner">
      <summary>
        <para> Provides a base class for Web server control designers.
      </para>
      </summary>
    </member>
    <member name="M:System.Web.UI.Design.ControlDesigner.CreatePlaceHolderDesignTimeHtml">
      <summary>
        <para>Creates a simple HTML section for the control that can be
      used to display information related to the control at design time when there
      is not enough information to display a meaningful representation of the
      control.</para>
      </summary>
      <returns>
        <para> A string containing design-time HTML that provides basic information about the control.</para>
      </returns>
    </member>
    <member name="M:System.Web.UI.Design.ControlDesigner.CreatePlaceHolderDesignTimeHtml(System.String)">
      <summary>
        <para>Creates a simple HTML section for the control, using the specified
      additional information, that can be used to display information related to the control at design time
      when there is not enough information to display a meaningful representation of the
      control.</para>
      </summary>
      <param name="instruction">A string containing information to add to the HTML section.</param>
      <returns>
        <para> A string containing design-time HTML that provides information about
      the control.</para>
      </returns>
    </member>
    <member name="M:System.Web.UI.Design.ControlDesigner.GetDesignTimeHtml">
      <summary>
        <para> Gets the HTML that is used to represent the control at design time.
      </para>
      </summary>
      <returns>
        <para> The HTML that is used to represent the control at design time.
      </para>
      </returns>
    </member>
    <member name="M:System.Web.UI.Design.ControlDesigner.GetEmptyDesignTimeHtml">
      <summary>
        <para> Gets the HTML that is used to represent an empty control at design time.</para>
      </summary>
      <returns>
        <para> The HTML that is used to represent an empty control at
      design time. By default, this HTML contains the name of the component.
      </para>
      </returns>
    </member>
    <member name="M:System.Web.UI.Design.ControlDesigner.GetErrorDesignTimeHtml(System.Exception)">
      <summary>
        <para>Gets the HTML that provides information about the specified exception. This method is typically called after an error
      has been encountered at design time.</para>
      </summary>
      <param name="e">The exception that occurred.</param>
      <returns>
        <para> The HTML for the specified exception.</para>
      </returns>
    </member>
    <member name="M:System.Web.UI.Design.ControlDesigner.GetPersistInnerHtml">
      <summary>
        <para> Gets the persistable inner HTML of the control.
      </para>
      </summary>
      <returns>
        <para> The persistable inner HTML of the control.
      </para>
      </returns>
    </member>
    <member name="M:System.Web.UI.Design.ControlDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>
        <para> Initializes the designer and
      loads the specified component.
      </para>
      </summary>
      <param name="component">The control element being designed. </param>
    </member>
    <member name="M:System.Web.UI.Design.ControlDesigner.IsPropertyBound(System.String)">
      <summary>
        <para> Gets a value indicating whether the specified property is data-bound.
      </para>
      </summary>
      <param name="propName">The property to check for data binding. </param>
      <returns>
        <para>
          <see langword="true" /> if the property is data bound; otherwise,
<see langword="false" />.
   </para>
      </returns>
    </member>
    <member name="M:System.Web.UI.Design.ControlDesigner.OnBehaviorAttached">
      <summary>
        <para> Called when the designer is attached to the behavior.
 </para>
      </summary>
    </member>
    <member name="M:System.Web.UI.Design.ControlDesigner.OnBindingsCollectionChanged(System.String)">
      <summary>
        <para> Called
      when the data bindings collection changes.
      </para>
      </summary>
      <param name="propName">The property to test for changes in its bindings collection. </param>
    </member>
    <member name="M:System.Web.UI.Design.ControlDesigner.OnComponentChanged(System.Object,System.ComponentModel.Design.ComponentChangedEventArgs)">
      <summary>
        <para> Called when the component changes.
      </para>
      </summary>
      <param name="sender"> The source of the event. </param>
      <param name="ce">A <see cref="T:System.ComponentModel.Design.ComponentChangedEventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Web.UI.Design.ControlDesigner.OnControlResize">
      <summary>
        <para> 
 Called when the design-time control has been resized.</para>
      </summary>
    </member>
    <member name="M:System.Web.UI.Design.ControlDesigner.RaiseResizeEvent">
      <summary>
        <para>Raises the <see cref="M:System.Web.UI.Design.ControlDesigner.OnControlResize" /> event.</para>
      </summary>
    </member>
    <member name="M:System.Web.UI.Design.ControlDesigner.UpdateDesignTimeHtml">
      <summary>
        <para>Refreshes the display of the control.</para>
      </summary>
    </member>
    <member name="P:System.Web.UI.Design.ControlDesigner.AllowResize">
      <summary>
        <para> Gets a value
      indicating whether the control can be resized.
      </para>
      </summary>
    </member>
    <member name="P:System.Web.UI.Design.ControlDesigner.DesignTimeHtmlRequiresLoadComplete">
      <summary>
        <para> Gets a value indicating whether the designer must
      have completed loading before the design-time HTML can be used.</para>
      </summary>
    </member>
    <member name="P:System.Web.UI.Design.ControlDesigner.ID">
      <summary>
        <para> Gets or sets the ID string for the control.</para>
      </summary>
    </member>
    <member name="P:System.Web.UI.Design.ControlDesigner.IsDirty">
      <summary>
        <para> Gets or sets a value indicating whether the Web server control has been marked as changed.
      </para>
      </summary>
    </member>
    <member name="P:System.Web.UI.Design.ControlDesigner.ReadOnly">
      <summary>
        <para> Gets or sets a value indicating whether the properties of the control are read-only at design-time.
      </para>
      </summary>
    </member>
    <member name="M:System.Web.UI.Design.ReadWriteControlDesigner.#ctor">
      <summary>
        <para>
       Initializes an instance of the <see cref="T:System.Web.UI.Design.ReadWriteControlDesigner" /> class.
    </para>
      </summary>
    </member>
    <member name="M:System.Web.UI.Design.ReadWriteControlDesigner.OnComponentChanged(System.Object,System.ComponentModel.Design.ComponentChangedEventArgs)">
      <summary>
        <para>Represents the method that will handle the
   <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentChanged" /> event
      of the <see cref="T:System.ComponentModel.Design.IComponentChangeService" />.</para>
      </summary>
      <param name="sender">The object sending the event.</param>
      <param name="ce">The <see cref="T:System.ComponentModel.Design.ComponentChangedEventArgs" /> that provides data for the event.</param>
    </member>
    <member name="M:System.Web.UI.Design.ReadWriteControlDesigner.MapPropertyToStyle(System.String,System.Object)">
      <summary>
        <para>Maps a property, including description and value, to an intrinsic HTML style.</para>
      </summary>
      <param name="propName">The name of the property to map.</param>
      <param name="varPropValue">The value of the property.</param>
      <returns>
        <note type="inheritinfo">
      This method
      must be overridden in
      a derived class to implement the designer.
      
   </note>
      </returns>
    </member>
    <member name="M:System.Web.UI.Design.ReadWriteControlDesigner.OnBehaviorAttached">
      <summary>
        <para> Provides notification that is raised when a behavior is attached to
      the designer.</para>
      </summary>
    </member>
    <member name="T:System.Web.UI.Design.TemplatedControlDesigner">
      <summary>
        <para> Extends design-time behavior for template-based server controls.</para>
      </summary>
    </member>
    <member name="M:System.Web.UI.Design.TemplatedControlDesigner.#ctor">
      <summary>
        <para>
       Initializes a new instance of the <see cref="T:System.Web.UI.Design.TemplatedControlDesigner" />
       class.
    </para>
      </summary>
    </member>
    <member name="M:System.Web.UI.Design.TemplatedControlDesigner.CreateTemplateEditingFrame(System.Web.UI.Design.TemplateEditingVerb)">
      <summary>
        <para>Creates a template editing frame for the specified verb.</para>
      </summary>
      <param name="verb">The template editing verb to create a template editing frame for.</param>
      <returns>
        <para>The new template editing frame.</para>
      </returns>
    </member>
    <member name="M:System.Web.UI.Design.TemplatedControlDesigner.EnterTemplateMode(System.Web.UI.Design.ITemplateEditingFrame)">
      <summary>
        <para> Opens a particular template frame object for editing in the designer.
 </para>
      </summary>
      <param name="newTemplateEditingFrame"> The template editing frame object to open in the designer. </param>
    </member>
    <member name="M:System.Web.UI.Design.TemplatedControlDesigner.ExitTemplateMode(System.Boolean,System.Boolean,System.Boolean)">
      <summary>
        <para> Closes the currently active template editing frame after saving any relevant changes.
      </para>
      </summary>
      <param name="fSwitchingTemplates">
        <see langword="true" /> when switching from one template editing frame to another; otherwise <see langword="false" />. </param>
      <param name="fNested">
        <see langword="true" /> if this designer is nested (one or more levels) within another control whose designer is also in template editing mode; otherwise <see langword="false" />. </param>
      <param name=" fSave">
        <see langword="true" /> if templates shold be saved on exit; otherwise, <see langword="false" />.</param>
    </member>
    <member name="M:System.Web.UI.Design.TemplatedControlDesigner.GetCachedTemplateEditingVerbs">
      <summary>
        <para>Gets the cached template editing verbs.</para>
      </summary>
      <returns>
        <para>An array of <see cref="T:System.Web.UI.Design.TemplateEditingVerb" /> objects, if any.</para>
      </returns>
    </member>
    <member name="M:System.Web.UI.Design.TemplatedControlDesigner.GetPersistInnerHtml">
      <summary>
        <para> Gets the HTML to be persisted for the content present within the associated server control runtime.
 </para>
      </summary>
      <returns>
        <para> The persistable inner HTML.
 </para>
      </returns>
    </member>
    <member name="M:System.Web.UI.Design.TemplatedControlDesigner.GetTemplateContainerDataItemProperty(System.String)">
      <summary>
        <para> Gets the data item property of the template's container.
 </para>
      </summary>
      <param name="templateName"> The name of the template. </param>
      <returns>
        <para> A string representing the data.
 </para>
      </returns>
    </member>
    <member name="M:System.Web.UI.Design.TemplatedControlDesigner.GetTemplateContainerDataSource(System.String)">
      <summary>
        <para> Gets the data source of the template's container.
 </para>
      </summary>
      <param name="templateName">The name of the template. </param>
      <returns>
        <para> The data source of the container of the specified template.
 </para>
      </returns>
    </member>
    <member name="M:System.Web.UI.Design.TemplatedControlDesigner.GetTemplateContent(System.Web.UI.Design.ITemplateEditingFrame,System.String,System.Boolean@)">
      <summary>
        <para> Gets the template's content.
      </para>
      </summary>
      <param name="editingFrame">The template editing frame to retrieve the content of. </param>
      <param name="templateName">The name of the template. </param>
      <param name=" allowEditing">
        <see langword="true" /> if the template's content can be edited; <see langword="false" /> if the content is read-only. </param>
      <returns>
        <para> The content of the template.
      </para>
      </returns>
    </member>
    <member name="M:System.Web.UI.Design.TemplatedControlDesigner.GetTemplateEditingVerbs">
      <summary>
        <para>Gets the template editing verbs available to the designer.</para>
      </summary>
      <returns>
        <para>The template editing verbs available to the designer.</para>
      </returns>
    </member>
    <member name="M:System.Web.UI.Design.TemplatedControlDesigner.GetTemplateFromText(System.String)">
      <summary>
        <para>Creates a template from the specified text.</para>
      </summary>
      <param name="text">The text to retrieve a template from.</param>
      <returns>
        <para>An <see cref="T:System.Web.UI.ITemplate" /> from the specified text.</para>
      </returns>
    </member>
    <member name="M:System.Web.UI.Design.TemplatedControlDesigner.GetTemplatePropertyParentType(System.String)">
      <summary>
        <para>Gets the type of the parent of the template property.</para>
      </summary>
      <param name="templateName">The name of the template to return the type of the parent for.</param>
      <returns>
        <para>The type of the object that has the template property.</para>
      </returns>
    </member>
    <member name="M:System.Web.UI.Design.TemplatedControlDesigner.GetTextFromTemplate(System.Web.UI.ITemplate)">
      <summary>
        <para>Gets a string of text that represents the specified template.</para>
      </summary>
      <param name="template">The <see cref="T:System.Web.UI.ITemplate" /> to convert to text.</param>
      <returns>
        <para>A string that represents the specified template.</para>
      </returns>
    </member>
    <member name="M:System.Web.UI.Design.TemplatedControlDesigner.OnBehaviorAttached">
      <summary>
        <para> Provides an opportunity to perform additional processing when a behavior is attached to the designer.
      </para>
      </summary>
    </member>
    <member name="M:System.Web.UI.Design.TemplatedControlDesigner.OnComponentChanged(System.Object,System.ComponentModel.Design.ComponentChangedEventArgs)">
      <summary>
        <para> Delegate to handle the component changed event.
 </para>
      </summary>
      <param name="sender">The object sending the event. </param>
      <param name="ce">A <see cref="T:System.ComponentModel.Design.ComponentChangedEventArgs" /> that provides data for the event. </param>
    </member>
    <member name="M:System.Web.UI.Design.TemplatedControlDesigner.OnSetParent">
      <summary>
        <para> Provides an opportunity to perform additional processing when the parent of this designer is changed.
      </para>
      </summary>
    </member>
    <member name="M:System.Web.UI.Design.TemplatedControlDesigner.OnTemplateModeChanged">
      <summary>
        <para> Provides an opportunity to perform
      additional processing when the template mode is changed.</para>
      </summary>
    </member>
    <member name="M:System.Web.UI.Design.TemplatedControlDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary>
        <para> Allows a designer to filter the set of member attributes 
 the component it is designing will expose through a <see cref="T:System.ComponentModel.TypeDescriptor" />
 object.
 </para>
      </summary>
      <param name="properties"> The member attributes for component. </param>
      <returns>
        <para> The augmented set of attributes. If the method does not modify any attributes,
 it may just return a reference to its input parameter. If you do make a change
 to the attributes, you must create a new array.
 </para>
      </returns>
    </member>
    <member name="M:System.Web.UI.Design.TemplatedControlDesigner.SaveActiveTemplateEditingFrame">
      <summary>
        <para>Saves the active template editing frame.</para>
      </summary>
    </member>
    <member name="M:System.Web.UI.Design.TemplatedControlDesigner.SetTemplateContent(System.Web.UI.Design.ITemplateEditingFrame,System.String,System.String)">
      <summary>
        <para> Sets the specified template's content to the specified content.
 </para>
      </summary>
      <param name="editingFrame">The template editing frame to provide content for. </param>
      <param name="templateName">The name of the template. </param>
      <param name="templateContent">The content to set for the template. </param>
    </member>
    <member name="M:System.Web.UI.Design.TemplatedControlDesigner.UpdateDesignTimeHtml">
      <summary>
        <para> Updates the design-time HTML.
 </para>
      </summary>
    </member>
    <member name="P:System.Web.UI.Design.TemplatedControlDesigner.ActiveTemplateEditingFrame">
      <summary>
        <para>Gets the active template editing frame.</para>
      </summary>
    </member>
    <member name="P:System.Web.UI.Design.TemplatedControlDesigner.CanEnterTemplateMode">
      <summary>
        <para>Indicates whether or not this designer will allow the viewing or editing of templates. This property is read-only.</para>
      </summary>
    </member>
    <member name="P:System.Web.UI.Design.TemplatedControlDesigner.HidePropertiesInTemplateMode">
      <summary>
        <para>Indicates whether the properties of the control
 will be hidden when the control is placed into template editing mode.</para>
      </summary>
    </member>
    <member name="P:System.Web.UI.Design.TemplatedControlDesigner.InTemplateMode">
      <summary>
        <para>Indicates whether or not the designer document is in template mode.</para>
      </summary>
    </member>
    <member name="M:System.Web.UI.Design.TemplateEditingFrame.#ctor(System.Web.UI.Design.TemplatedControlDesigner,System.String,System.String[],System.Web.UI.WebControls.Style,System.Web.UI.WebControls.Style[])">
    </member>
    <member name="M:System.Web.UI.Design.TemplateEditingFrame.Close(System.Boolean)">
    </member>
    <member name="M:System.Web.UI.Design.TemplateEditingFrame.Dispose">
    </member>
    <member name="M:System.Web.UI.Design.TemplateEditingFrame.Open">
    </member>
    <member name="M:System.Web.UI.Design.TemplateEditingFrame.Resize(System.Int32,System.Int32)">
    </member>
    <member name="M:System.Web.UI.Design.TemplateEditingFrame.Save">
    </member>
    <member name="M:System.Web.UI.Design.TemplateEditingFrame.Show">
    </member>
    <member name="M:System.Web.UI.Design.TemplateEditingFrame.UpdateControlName(System.String)">
    </member>
    <member name="P:System.Web.UI.Design.TemplateEditingFrame.ControlStyle">
    </member>
    <member name="P:System.Web.UI.Design.TemplateEditingFrame.Name">
    </member>
    <member name="P:System.Web.UI.Design.TemplateEditingFrame.InitialHeight">
    </member>
    <member name="P:System.Web.UI.Design.TemplateEditingFrame.InitialWidth">
    </member>
    <member name="P:System.Web.UI.Design.TemplateEditingFrame.TemplateNames">
    </member>
    <member name="P:System.Web.UI.Design.TemplateEditingFrame.TemplateStyles">
    </member>
    <member name="P:System.Web.UI.Design.TemplateEditingFrame.Verb">
    </member>
    <member name="M:System.Web.UI.Design.TemplateEditingService.#ctor(System.ComponentModel.Design.IDesignerHost)">
    </member>
    <member name="M:System.Web.UI.Design.TemplateEditingService.CreateFrame(System.Web.UI.Design.TemplatedControlDesigner,System.String,System.String[])">
    </member>
    <member name="M:System.Web.UI.Design.TemplateEditingService.CreateFrame(System.Web.UI.Design.TemplatedControlDesigner,System.String,System.String[],System.Web.UI.WebControls.Style,System.Web.UI.WebControls.Style[])">
    </member>
    <member name="M:System.Web.UI.Design.TemplateEditingService.Dispose">
    </member>
    <member name="M:System.Web.UI.Design.TemplateEditingService.Finalize">
    </member>
    <member name="M:System.Web.UI.Design.TemplateEditingService.GetContainingTemplateName(System.Web.UI.Control)">
    </member>
    <member name="P:System.Web.UI.Design.TemplateEditingService.SupportsNestedTemplateEditing">
    </member>
    <member name="T:System.Web.UI.Design.TemplateEditingVerb">
      <summary>
        <para>Represents a designer verb that creates a template 
 editing frame, and can only be invoked by a template editor.</para>
      </summary>
    </member>
    <member name="M:System.Web.UI.Design.TemplateEditingVerb.#ctor(System.String,System.Int32,System.Web.UI.Design.TemplatedControlDesigner)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Web.UI.Design.TemplateEditingVerb" /> class.</para>
      </summary>
      <param name="text">The text to show for the verb on a menu.</param>
      <param name=" index">An optional integer value that can be used by a designer; typically to indicate the index of the verb within a set of verbs.</param>
      <param name=" designer">The <see cref="T:System.Web.UI.Design.TemplatedControlDesigner" /> that can use this verb.</param>
    </member>
    <member name="M:System.Web.UI.Design.TemplateEditingVerb.Dispose">
      <summary>
        <para>Releases all resources used by the <see cref="T:System.Web.UI.Design.TemplateEditingVerb" /> .</para>
      </summary>
    </member>
    <member name="M:System.Web.UI.Design.TemplateEditingVerb.Dispose(System.Boolean)">
      <summary>
        <para>Releases the unmanaged resources used by the <see cref="T:System.Web.UI.Design.TemplateEditingVerb" /> and optionally releases the managed
 resources.</para>
      </summary>
      <param name="disposing">
        <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</param>
    </member>
    <member name="P:System.Web.UI.Design.TemplateEditingVerb.Index">
      <summary>
        <para> Gets the index, or other user data, for the verb.</para>
      </summary>
    </member>
    <member name="T:System.Web.UI.Design.TextControlDesigner">
      <summary>
        <para>Extends design-time behavior for the ASP.NET <see cref="T:System.Web.UI.WebControls.Label" />
and <see cref="T:System.Web.UI.WebControls.HyperLink" /> server controls.</para>
      </summary>
    </member>
    <member name="M:System.Web.UI.Design.TextControlDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>
        <para>Initializes the designer with the specified component.</para>
      </summary>
      <param name="component">The <see cref="T:System.ComponentModel.IComponent" /> for this designer to design.</param>
    </member>
    <member name="M:System.Web.UI.Design.TextControlDesigner.GetDesignTimeHtml">
      <summary>
        <para>Gets the HTML that is used to represent the
      associated control at design time.</para>
      </summary>
      <returns>
        <para>The HTML used to represent the control at design time.</para>
      </returns>
    </member>
    <member name="M:System.Web.UI.Design.TextControlDesigner.GetPersistInnerHtml">
      <summary>
        <para>Gets the HTML to persist for the inner tags of the control.</para>
      </summary>
      <returns>
        <para>The HTML for the tags of the control.</para>
      </returns>
    </member>
    <member name="T:System.Web.UI.Design.TextDataBindingHandler">
      <summary>
        <para> Provides a data-binding handler for a data bound control at design-time.</para>
      </summary>
    </member>
    <member name="M:System.Web.UI.Design.TextDataBindingHandler.DataBindControl(System.ComponentModel.Design.IDesignerHost,System.Web.UI.Control)">
      <summary>
        <para> Data binds the specified control.</para>
      </summary>
      <param name="designerHost">The <see cref="T:System.ComponentModel.Design.IDesignerHost" /> for the document that contains the control.</param>
      <param name=" control">The <see cref="T:System.Web.UI.Control" /> to data bind.</param>
    </member>
    <member name="T:System.Web.UI.Design.UrlBuilder">
      <summary>
        <para>Starts a URL editor that allows a user to select a URL.</para>
      </summary>
    </member>
    <member name="M:System.Web.UI.Design.UrlBuilder.BuildUrl(System.ComponentModel.IComponent,System.Windows.Forms.Control,System.String,System.String,System.String)">
      <summary>
        <para> Starts a URL picker to build a URL.</para>
      </summary>
      <param name="component">The <see cref="T:System.ComponentModel.IComponent" /> whose site is to be used to access design-time services. </param>
      <param name="owner">The <see cref="T:System.Web.UI.Control" /> used to parent the picker window. </param>
      <param name="initialUrl">The initial URL to be shown in the picker window. </param>
      <param name="caption">The caption of the picker window. </param>
      <param name="filter">The filter string to use to optionally filter the files displayed in the picker window. </param>
      <returns>
        <para>The URL returned from the URL picker.</para>
      </returns>
    </member>
    <member name="M:System.Web.UI.Design.UrlBuilder.BuildUrl(System.ComponentModel.IComponent,System.Windows.Forms.Control,System.String,System.String,System.String,System.Web.UI.Design.UrlBuilderOptions)">
      <summary>
        <para> Starts the URL picker to build a URL, using the
      specified <see cref="T:System.Web.UI.Design.UrlBuilderOptions" />.</para>
      </summary>
      <param name="component">The <see cref="T:System.ComponentModel.IComponent" /> whose site is to be used to access design-time services. </param>
      <param name=" owner">The <see cref="T:System.Web.UI.Control" /> used to parent the picker window. </param>
      <param name=" initialUrl">The initial URL to be shown in the picker window.</param>
      <param name=" caption">The caption of the picker window. </param>
      <param name=" filter">The filter string to use to optionally filter the files displayed in the picker window. </param>
      <param name=" options">A <see cref="T:System.Web.UI.Design.UrlBuilderOptions" /> indicating the options for URL selection.</param>
      <returns>
        <para>The URL returned from the URL picker.</para>
      </returns>
    </member>
    <member name="T:System.Web.UI.Design.UrlBuilderOptions">
      <summary>
        <para>Defines identifiers for settings of a <see cref="T:System.Web.UI.Design.UrlBuilder" />.</para>
      </summary>
    </member>
    <member name="F:System.Web.UI.Design.UrlBuilderOptions.None">
      <summary>
        <para>Use no additional options for the <see cref="T:System.Web.UI.Design.UrlBuilder" />.</para>
      </summary>
    </member>
    <member name="F:System.Web.UI.Design.UrlBuilderOptions.NoAbsolute">
      <summary>
        <para> Build a URL that references a path relative to the current path,
      rather than one that references a fully qualified, absolute path.</para>
      </summary>
    </member>
    <member name="T:System.Web.UI.Design.ControlPersister">
      <summary>
        <para> Provides methods for persisting Web server controls at design-time.</para>
      </summary>
    </member>
    <member name="M:System.Web.UI.Design.ControlPersister.PersistInnerProperties(System.Object,System.ComponentModel.Design.IDesignerHost)">
      <summary>
        <para>Gets a string of data that can persist the inner properties of the specified control.</para>
      </summary>
      <param name="component">The component to persist the inner properties of.</param>
      <param name="host">An <see cref="T:System.ComponentModel.Design.IDesignerHost" /> that is the designer host for the control.</param>
      <returns>
        <para>A string that contains the information to persist about
      the inner properties
      of the control.</para>
      </returns>
    </member>
    <member name="M:System.Web.UI.Design.ControlPersister.PersistInnerProperties(System.IO.TextWriter,System.Object,System.ComponentModel.Design.IDesignerHost)">
      <summary>
        <para>Outputs a string of data that can persist the inner
      properties of the specified control to the specified <see cref="T:System.IO.TextWriter" />
      , using the specified designer host.</para>
      </summary>
      <param name="sw">The <see cref="T:System.IO.TextWriter" /> to use.</param>
      <param name=" component">The component to persist.</param>
      <param name="host">An <see cref="T:System.ComponentModel.Design.IDesignerHost" /> that is the designer host for the control.</param>
    </member>
    <member name="M:System.Web.UI.Design.ControlPersister.PersistControl(System.Web.UI.Control)">
      <summary>
        <para>Gets a string of data that represents the persisted form 
      of the specified control.</para>
      </summary>
      <param name="control">The <see cref="T:System.Web.UI.Control" /> to persist.</param>
      <returns>
        <para> A string that represents the persisted
      form of the control.</para>
      </returns>
    </member>
    <member name="M:System.Web.UI.Design.ControlPersister.PersistControl(System.Web.UI.Control,System.ComponentModel.Design.IDesignerHost)">
      <summary>
        <para>Gets a string of data that represents the persisted form of the specified 
      control, using the specified designer host.</para>
      </summary>
      <param name="control">The <see cref="T:System.Web.UI.Control" /> to persist.</param>
      <param name="host">An <see cref="T:System.ComponentModel.Design.IDesignerHost" /> that is the designer host for the control.</param>
      <returns>
        <para>A string that represents the persisted form of the control.</para>
      </returns>
    </member>
    <member name="M:System.Web.UI.Design.ControlPersister.PersistControl(System.IO.TextWriter,System.Web.UI.Control)">
      <summary>
        <para>Outputs a string of data that represents the persisted form of the specified control to the specified <see cref="T:System.IO.TextWriter" />.</para>
      </summary>
      <param name="sw">The <see cref="T:System.IO.TextWriter" /> to output the persisted control data to. </param>
      <param name=" control">The <see cref="T:System.Web.UI.Control" /> to persist. </param>
    </member>
    <member name="M:System.Web.UI.Design.ControlPersister.PersistControl(System.IO.TextWriter,System.Web.UI.Control,System.ComponentModel.Design.IDesignerHost)">
      <summary>
        <para>Outputs a string of data that represents the persisted form of the 
      specified control to the specified <see cref="T:System.IO.TextWriter" />, using the specified designer
      host.</para>
      </summary>
      <param name="sw">The <see cref="T:System.IO.TextWriter" /> to output the persisted control data to.</param>
      <param name=" control">The <see cref="T:System.Web.UI.Control" /> to persist.</param>
      <param name="host">An <see cref="T:System.ComponentModel.Design.IDesignerHost" /> that is the designer host for the control.</param>
    </member>
    <member name="T:System.Web.UI.Design.WebControlToolboxItem">
      <summary>
        <para>Provides a base class for a Web server control <see cref="T:System.Drawing.Design.ToolboxItem" />.</para>
      </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControlToolboxItem.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControlToolboxItem" /> class.</para>
      </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControlToolboxItem.#ctor(System.Type)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControlToolboxItem" /> class.</para>
      </summary>
      <param name="type">The Type of the tool for this toolbox item</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControlToolboxItem.GetToolAttributeValue(System.ComponentModel.Design.IDesignerHost,System.Type)">
      <summary>
        <para> Gets the value of the specified type of attribute of the toolbox item.</para>
      </summary>
      <param name="host">The <see cref="T:System.ComponentModel.Design.IDesignerHost" /> for the current design document.</param>
      <param name=" attributeType">The type of attribute to retrieve the value of.</param>
      <returns>
        <para>The value of the specified type of attribute.</para>
      </returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControlToolboxItem.GetToolHtml(System.ComponentModel.Design.IDesignerHost)">
      <summary>
        <para>Gets the HTML for the Web control that the tool creates.</para>
      </summary>
      <param name="host">The <see cref="T:System.ComponentModel.Design.IDesignerHost" /> for the current design document.</param>
      <returns>
        <para>The HTML for the Web control that the tool creates.</para>
      </returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControlToolboxItem.GetToolType(System.ComponentModel.Design.IDesignerHost)">
      <summary>
        <para>Gets the type of this toolbox item.</para>
      </summary>
      <param name="host">The <see cref="T:System.ComponentModel.Design.IDesignerHost" /> for the current design document.</param>
      <returns>
        <para>The Type of this toolbox item.</para>
      </returns>
    </member>
    <member name="T:System.Web.UI.Design.XmlFileEditor">
      <summary>
        <para>Provides a user interface for selecting an XML file
      using a standard <see cref="T:System.Windows.Forms.OpenFileDialog" /> box.</para>
      </summary>
    </member>
    <member name="T:System.Web.UI.Design.XmlUrlEditor">
      <summary>
        <para>Provides a user interface for selecting a URL that indicates the location of an XML file.</para>
      </summary>
    </member>
    <member name="P:System.Web.UI.Design.XmlUrlEditor.Caption">
      <summary>
        <para> Gets the caption to display on the selection dialog window.</para>
      </summary>
    </member>
    <member name="P:System.Web.UI.Design.XmlUrlEditor.Filter">
      <summary>
        <para>Gets the file name filter string for the editor. This is used to determine the
      items that appear in the file list of the dialog box.</para>
      </summary>
    </member>
    <member name="P:System.Web.UI.Design.XmlUrlEditor.Options">
      <summary>
        <para> Indicates the options for the URL builder to use.</para>
      </summary>
    </member>
    <member name="T:System.Web.UI.Design.XslUrlEditor">
      <summary>
        <para>Provides a user interface for selecting an URL that indicates the location of an XSL file.</para>
      </summary>
    </member>
    <member name="P:System.Web.UI.Design.XslUrlEditor.Caption">
      <summary>
        <para>Gets or sets the caption to display on the selection dialog window.</para>
      </summary>
    </member>
    <member name="P:System.Web.UI.Design.XslUrlEditor.Filter">
      <summary>
        <para> Gets the file name filter string for the editor. This is used to determine the
      items that appear in the file list of the dialog box.</para>
      </summary>
    </member>
    <member name="P:System.Web.UI.Design.XslUrlEditor.Options">
      <summary>
        <para>Indicates the options for the URL builder to use.</para>
      </summary>
    </member>
    <member name="M:System.Web.UI.Design.DataBindingUI.DataBindingForm.#ctor(System.Web.UI.Control,System.IServiceProvider)">
      <summary>
      </summary>
    </member>
    <member name="M:System.Web.UI.Design.DataBindingUI.DataBindingForm.OnActivated(System.EventArgs)">
      <summary>
      </summary>
    </member>
    <member name="F:System.Web.UI.Design.DataBindingUI.DataBindingType.Custom">
      <summary>
        <para>
       Indicates a custom, or other type of data binding.
    </para>
      </summary>
    </member>
    <member name="F:System.Web.UI.Design.DataBindingUI.DataBindingType.DataBinderEval">
      <summary>
        <para>
       Indicates a data binding consisting of a DataBinderEval statement with
       understood references which consist of parseable arguments.
    </para>
      </summary>
    </member>
    <member name="F:System.Web.UI.Design.DataBindingUI.DataBindingType.Reference">
      <summary>
        <para>
       Indicates a data binding with a single reference identifier.
    </para>
      </summary>
    </member>
    <member name="M:System.Web.UI.Design.Util.ColorComboBox.#ctor">
      <summary>
   Creates a new ColorComboBox
 </summary>
    </member>
    <member name="M:System.Web.UI.Design.Util.ColorComboBox.OnHandleCreated(System.EventArgs)">
      <summary>
      </summary>
    </member>
    <member name="P:System.Web.UI.Design.Util.ColorComboBox.Color">
      <summary>
      </summary>
    </member>
    <member name="M:System.Web.UI.Design.Util.GroupLabel.#ctor">
      <summary>
    Creates a new GroupLabel
 </summary>
    </member>
    <member name="M:System.Web.UI.Design.Util.GroupLabel.OnPaint(System.Windows.Forms.PaintEventArgs)">
      <summary>
    Custom UI is painted here
 </summary>
    </member>
    <member name="M:System.Web.UI.Design.Util.TridentSite.CreateDocument">
      <summary>
     Creates a new instance of mshtml and initializes it as a new document
     using its IPersistStreamInit.
 </summary>
    </member>
    <member name="M:System.Web.UI.Design.Util.TridentSite.CloseDocument">
      <summary>
     Closes the mshtml instance by deactivating and releasing it.
 </summary>
    </member>
    <member name="M:System.Web.UI.Design.Util.TridentSite.ActivateDocument">
      <summary>
     Activates the mshtml instance
 </summary>
    </member>
    <member name="M:System.Web.UI.Design.Util.NumberEdit.WndProc(System.Windows.Forms.Message@)">
      <summary>
    Override of wndProc to listen to WM_CHAR and filter out invalid
    key strokes. Valid keystrokes are:
    0...9,
    '.' (if fractions allowed),
    '-' (if negative allowed),
    BKSP.
    A beep is generated for invalid keystrokes
 </summary>
    </member>
    <member name="P:System.Web.UI.Design.Util.NumberEdit.AllowDecimal">
      <summary>
    Controls whether the edit control allows negative values
 </summary>
    </member>
    <member name="P:System.Web.UI.Design.Util.NumberEdit.AllowNegative">
      <summary>
    Controls whether the edit control allows negative values
 </summary>
    </member>
    <member name="M:System.Web.UI.Design.Util.UnitControl.#ctor">
      <summary>
     Createa a new UnitControl.
 </summary>
    </member>
    <member name="P:System.Web.UI.Design.Util.UnitControl.AllowNegativeValues">
      <summary>
     Controls whether the unit value can be negative
 </summary>
    </member>
    <member name="P:System.Web.UI.Design.Util.UnitControl.AllowNonUnitValues">
      <summary>
     Controls whether the unit value can be a unit-less
 </summary>
    </member>
    <member name="P:System.Web.UI.Design.Util.UnitControl.AllowPercentValues">
      <summary>
     Controls whether the unit value can be a percent value
 </summary>
    </member>
    <member name="P:System.Web.UI.Design.Util.UnitControl.DefaultUnit">
      <summary>
     The default unit to be used
 </summary>
    </member>
    <member name="P:System.Web.UI.Design.Util.UnitControl.Value">
      <summary>
     The unit reflecting the value and unit type within the UI.
     Returns null if no unit is selected.
 </summary>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.AdRotatorDesigner">
      <summary>
        <para>Extends design-time behavior for the <see cref="T:System.Web.UI.WebControls.AdRotator" />
Web server control.</para>
      </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.AdRotatorDesigner.GetDesignTimeHtml">
      <summary>
        <para>Gets the HTML that is used to represent the control
 at design time.</para>
      </summary>
      <returns>
        <para>The HTML that is used to represent the control at design time.</para>
      </returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.BaseDataListComponentEditor">
      <summary>
        <para>Provides a base component editor class for the Web
 Forms <see cref="T:System.Web.UI.WebControls.DataGrid" /> and <see cref="T:System.Web.UI.WebControls.DataList" /> Web
 server
 controls.</para>
      </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseDataListComponentEditor.#ctor(System.Int32)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.BaseDataListComponentEditor" />
class.</para>
      </summary>
      <param name="initialPage">The index of the initial page to display.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseDataListComponentEditor.EditComponent(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Windows.Forms.IWin32Window)">
      <summary>
        <para>Edits the specified component using the
      specified context descriptor and parent window.</para>
      </summary>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that can be used to gain additional context information.</param>
      <param name="obj">The component to edit.</param>
      <param name=" parent">The <see cref="T:System.Windows.Forms.IWin32Window" /> that represents the parent window.</param>
      <returns>
        <para>
          <see langword="true" /> if editing the component succeeded; otherwise,
<see langword="false" />.</para>
      </returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseDataListComponentEditor.GetInitialComponentEditorPageIndex">
      <summary>
        <para> Gets the index of the initial component editor page.
 </para>
      </summary>
      <returns>
        <para> The index of the initial page.
 </para>
      </returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.BaseDataListDesigner">
      <summary>
        <para>Provides a base designer class for the <see cref="T:System.Web.UI.WebControls.DataList" /> Web server control.</para>
      </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseDataListDesigner.#ctor">
      <summary>
        <para> Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.BaseDataListDesigner" /> class.
 </para>
      </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseDataListDesigner.Dispose(System.Boolean)">
      <summary>
        <para>Releases the unmanaged resources used by the <see cref="T:System.Web.UI.Design.WebControls.BaseDataListDesigner" /> and optionally releases the
   managed resources.</para>
      </summary>
      <param name="disposing">
        <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseDataListDesigner.GetDesignTimeDataSource(System.Int32,System.Boolean@)">
      <summary>
        <para>Gets a set of sample data that matches the schema of the selected data source.</para>
      </summary>
      <param name="minimumRows">The minimum number of rows of sample data that the data source should contain.</param>
      <param name="dummyDataSource">
        <see langword="true" /> if the returned data source contains dummy data; <see langword="false" /> if the returned data source contains data from an actual data source.</param>
      <returns>
        <para> A live data source for use at
      design-time.</para>
      </returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseDataListDesigner.GetDesignTimeDataSource(System.Collections.IEnumerable,System.Int32,System.Boolean@)">
      <summary>
        <para> Gets a set of sample data that matches the schema of the selected data source.
      </para>
      </summary>
      <param name="selectedDataSource">The data source that will be used as a template for the format of the data. </param>
      <param name="minimumRows">The minimum number of rows of sample data that the data source data should contain. </param>
      <param name="dummyDataSource">
        <see langword="true" /> if the returned data source contains dummy data; <see langword="false" /> if the returned data source contains data from an actual data source. </param>
      <returns>
        <para> A live data source for use at design-time.
      </para>
      </returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseDataListDesigner.GetResolvedSelectedDataSource">
      <summary>
        <para>Gets the data member that is currently selected within
 the data source currently bound to the control.</para>
      </summary>
      <returns>
        <para>The currently selected data member, or <see langword="null" /> if the control was not bound to a data
 source, or the data source, site of the designer's component, or the
 container of the data source could not be accessed.</para>
      </returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseDataListDesigner.GetSelectedDataSource">
      <summary>
        <para> Gets the selected data source component from the component's container.
 </para>
      </summary>
      <returns>
        <para> The
 selected data source, or <see langword="null" /> if a data source is not found, or if a data
 source with the same name does not exist.
 </para>
      </returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseDataListDesigner.GetTemplateContainerDataSource(System.String)">
      <summary>
        <para> Gets the data source of the template's container.
      </para>
      </summary>
      <param name="templateName">The name of the template to retrieve the data source for. </param>
      <returns>
        <para> An object that implements <see cref="T:System.Collections.IEnumerable" /> and contains the data source or data sources available to
   the template's container.
   </para>
      </returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseDataListDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>
        <para> Initializes the designer with the specified <see cref="T:System.Web.UI.WebControls.DataGrid" /> 
or <see cref="T:System.Web.UI.WebControls.DataList" />
control.</para>
      </summary>
      <param name="component">The <see cref="T:System.Web.UI.WebControls.DataGrid" /> or <see cref="T:System.Web.UI.WebControls.DataList" /> control to associate with the designer. </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseDataListDesigner.InvokePropertyBuilder(System.Int32)">
      <summary>
        <para>
       Invokes the property builder beginning with the specified page.
    </para>
      </summary>
      <param name="initialPage">
    The page to begin with.
 </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseDataListDesigner.OnAutoFormat(System.Object,System.EventArgs)">
      <summary>
        <para> Represents the method that will handle the AutoFormat event.
      </para>
      </summary>
      <param name="sender">The source of the event. </param>
      <param name=" e">
        <para>An <see cref="T:System.EventArgs" /> that contains the event data.</para>
      </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseDataListDesigner.OnComponentChanged(System.Object,System.ComponentModel.Design.ComponentChangedEventArgs)">
      <summary>
        <para> Represents the method that will handle the component changed event.
      </para>
      </summary>
      <param name="sender">The source of the event. </param>
      <param name=" e">The <see cref="T:System.ComponentModel.Design.ComponentChangedEventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseDataListDesigner.OnPropertyBuilder(System.Object,System.EventArgs)">
      <summary>
        <para> Represents the method that will handle the property builder event.
 </para>
      </summary>
      <param name="sender">The source of the event. </param>
      <param name=" e">An <see cref="T:System.EventArgs" /> object that contains the event data. </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseDataListDesigner.OnStylesChanged">
      <summary>
        <para> Provides a method that can be overridden to implement
      functionality that should occur when a style of the control has been changed.
      </para>
      </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseDataListDesigner.OnTemplateEditingVerbsChanged">
      <summary>
        <para>Provides a method that can be overridden to implement
      functionality that should occur when the designer's template
      editing verbs have changed.</para>
      </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseDataListDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary>
        <para> Filters the properties exposed through a <see cref="T:System.ComponentModel.TypeDescriptor" /> and replaces the runtime DataSource property descriptor with
   a design-time data source.
   </para>
      </summary>
      <param name="properties">An <see cref="T:System.Collections.IDictionary" /> that contains the set of properties to filter. </param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.BaseDataListDesigner.DesignTimeHtmlRequiresLoadComplete">
      <summary>
        <para>Gets a value indicating whether loading must have completed to
      display the design-time HTML.</para>
      </summary>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.BaseDataListDesigner.DataKeyField">
      <summary>
        <para>Gets or sets the value of the control's data key field.</para>
      </summary>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.BaseDataListDesigner.DataMember">
      <summary>
        <para>Gets or sets the value of the control's data member field.</para>
      </summary>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.BaseDataListDesigner.DataSource">
      <summary>
        <para>Gets or sets the value of the control's data source property.</para>
      </summary>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.BaseDataListDesigner.Verbs">
      <summary>
        <para> Gets or sets the collection of verbs available to this designer.
      </para>
      </summary>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.BaseValidatorDesigner">
      <summary>
        <para> Extends design-time behavior for controls that derive from
   <see cref="T:System.Web.UI.WebControls.BaseValidator" />.
      </para>
      </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseValidatorDesigner.GetDesignTimeHtml">
      <summary>
        <para> Gets the HTML that is used to represent the control at design time.
 </para>
      </summary>
      <returns>
        <para> The HTML that is used to represent the
 control at design time.
 </para>
      </returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.ButtonDesigner">
      <summary>
        <para>Extends design-time behavior for the <see cref="T:System.Web.UI.WebControls.Button" /> Web server control.</para>
      </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ButtonDesigner.GetDesignTimeHtml">
      <summary>
        <para>Gets the HTML that is used to represent the control at design time.</para>
      </summary>
      <returns>
        <para> The HTML that is used to represent the control at design time.</para>
      </returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.CalendarAutoFormatDialog">
      <summary>
        <para>Provides an AutoFormat page for a <see cref="T:System.Web.UI.WebControls.Calendar" /> Web server
 control.</para>
      </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.CalendarAutoFormatDialog.OnActivated(System.Object,System.EventArgs)">
      <summary>
        <para>Occurs when the <see cref="T:System.Web.UI.Design.WebControls.CalendarAutoFormatDialog" /> dialog
   is activated.</para>
      </summary>
      <param name="source">The source of the event.</param>
      <param name=" e">An <see cref="T:System.EventArgs" /> that provides information about the event.</param>
    </member>
    <member name="T:System.Web.UI.Design.CalendarDataBindingHandler">
      <summary>
        <para>Provides a data-binding handler for a calendar.</para>
      </summary>
    </member>
    <member name="M:System.Web.UI.Design.CalendarDataBindingHandler.DataBindControl(System.ComponentModel.Design.IDesignerHost,System.Web.UI.Control)">
      <summary>
        <para>Sets the calendar's date to the current day if the <see cref="P:System.Web.UI.WebControls.Calendar.SelectedDate" /> property is data-bound.</para>
      </summary>
      <param name="designerHost">The <see cref="T:System.ComponentModel.Design.IDesignerHost" /> for the document that contains the control.</param>
      <param name=" control">The <see cref="T:System.Web.UI.Control" /> to add data binding to.</param>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.CalendarDesigner">
      <summary>
        <para>Extends design-time behavior for the <see cref="T:System.Web.UI.WebControls.Calendar" /> Web server
 control.</para>
      </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.CalendarDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>
        <para> Initializes the designer with the specified component.</para>
      </summary>
      <param name="component">The <see cref="T:System.ComponentModel.IComponent" /> for this designer.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.CalendarDesigner.OnAutoFormat(System.Object,System.EventArgs)">
      <summary>
        <para> Handles the the
      AutoFormat event to display a new <see cref="T:System.Web.UI.Design.WebControls.CalendarAutoFormatDialog" /> . </para>
      </summary>
      <param name="sender">The source of the event. </param>
      <param name=" e">The <see cref="T:System.EventArgs" /> object that contains the event data. </param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.CalendarDesigner.Verbs">
      <summary>
        <para> Gets the verbs available to this designer.
      </para>
      </summary>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.CheckBoxDesigner">
      <summary>
        <para>Extends design-time behavior for the <see cref="T:System.Web.UI.WebControls.CheckBox" /> Web server control.</para>
      </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.CheckBoxDesigner.GetDesignTimeHtml">
      <summary>
        <para> Gets the HTML that is used to represent the control at design
      time.</para>
      </summary>
      <returns>
        <para> The HTML that is used to represent the control at design
      time.</para>
      </returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.DataGridColumnCollectionEditor">
      <summary>
        <para> Provides a collection editing user interface for a 
 column collection of a <see cref="T:System.Web.UI.WebControls.DataGrid" /> Web server control.
 </para>
      </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataGridColumnCollectionEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>
        <para> Edits the specified value using the specified context
      descriptor and service provider.
      </para>
      </summary>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that indicates the context of the object to edit the value of. </param>
      <param name=" provider">An <see cref="T:System.IServiceProvider" />. </param>
      <param name=" value">The object to edit. </param>
      <returns>
        <para> The new value.
      </para>
      </returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataGridColumnCollectionEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary>
        <para> Gets the edit style used by the <see cref="M:System.Web.UI.Design.WebControls.DataGridColumnCollectionEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)" /> method.
   </para>
      </summary>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that indicates the context of the object to edit the value of. </param>
      <returns>
        <para> A <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" /> that
   represents the editor style that this editor uses.
   </para>
      </returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.DataGridComponentEditor">
      <summary>
        <para>Provides a component editor for a Web Forms <see cref="T:System.Web.UI.WebControls.DataGrid" /> Web 
 server
 control.</para>
      </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataGridComponentEditor.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.DataGridComponentEditor" /> 
 class.</para>
      </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataGridComponentEditor.#ctor(System.Int32)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.DataGridComponentEditor" /> 
 class.</para>
      </summary>
      <param name="initialPage">The index of the initial page.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataGridComponentEditor.GetComponentEditorPages">
      <summary>
        <para>Gets the component editor pages shown for the <see cref="T:System.Web.UI.WebControls.DataGrid" /> control in its 
   associated <see cref="T:System.ComponentModel.ComponentEditor" />.</para>
      </summary>
      <returns>
        <para>An array consisting of the set of component editor pages.</para>
      </returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.DataGridDesigner">
      <summary>
        <para>Extends design-time behavior for the <see cref="T:System.Web.UI.WebControls.DataGrid" /> Web server
 control.</para>
      </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataGridDesigner.#ctor">
      <summary>
        <para> Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.DataGridDesigner" /> class.
 </para>
      </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataGridDesigner.CreateTemplateEditingFrame(System.Web.UI.Design.TemplateEditingVerb)">
      <summary>
        <para>Creates a template editing frame using the specified verb.</para>
      </summary>
      <param name="verb">The <see cref="T:System.Web.UI.Design.TemplateEditingVerb" /> to create the template editing frame for.</param>
      <returns>
        <para>A new <see cref="T:System.Web.UI.Design.ITemplateEditingFrame" /> .</para>
      </returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataGridDesigner.Dispose(System.Boolean)">
      <summary>
        <para> Releases the unmanaged resources used by the <see cref="T:System.Web.UI.Design.WebControls.DataGridDesigner" /> and optionally releases the
   managed resources.
   </para>
      </summary>
      <param name="disposing">
        <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataGridDesigner.GetCachedTemplateEditingVerbs">
      <summary>
        <para>Gets the cached template editing verbs.</para>
      </summary>
      <returns>
        <para>An array containing the cached template editing verbs.</para>
      </returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataGridDesigner.GetDesignTimeHtml">
      <summary>
        <para> Gets the HTML that is used to represent the control
 at design time.
 </para>
      </summary>
      <returns>
        <para>The HTML that is used to represent the control at design time.</para>
      </returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataGridDesigner.GetEmptyDesignTimeHtml">
      <summary>
        <para> Gets the HTML used to represent an empty template-based control at design
 time.</para>
      </summary>
      <returns>
        <para> The HTML used to represent an empty template-based control at design time.</para>
      </returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataGridDesigner.GetErrorDesignTimeHtml(System.Exception)">
      <summary>
        <para>Gets the HTML displayed at design-time for the specified exception when an error has been encountered
 while rendering the control.</para>
      </summary>
      <param name="e">The exception to display an error message for.</param>
      <returns>
        <para>The HTML displayed at design-time for the specified exception.</para>
      </returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataGridDesigner.GetTemplateContainerDataItemProperty(System.String)">
      <summary>
        <para> Gets the data item property of the template's container.
      </para>
      </summary>
      <param name="templateName">The name of the template. </param>
      <returns>
        <para> The data item property of the template's container.
      </para>
      </returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataGridDesigner.GetTemplateContent(System.Web.UI.Design.ITemplateEditingFrame,System.String,System.Boolean@)">
      <summary>
        <para> Gets the template's content.
      </para>
      </summary>
      <param name="editingFrame">The <see cref="T:System.Web.UI.Design.ITemplateEditingFrame" /> to retrieve content for. </param>
      <param name=" templateName">The name of the template. </param>
      <param name=" allowEditing">
        <see langword="true" /> if the template's content can be edited; <see langword="false" /> if the content is read-only.</param>
      <returns>
        <para> The template's content.
      </para>
      </returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataGridDesigner.GetTemplatePropertyParentType(System.String)">
      <summary>
        <para>Gets the type of the parent with the template property. </para>
      </summary>
      <param name="templateName">The name of the template to return the type of the parent for.</param>
      <returns>
        <para>The type of the object that has the template property.</para>
      </returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataGridDesigner.OnColumnsChanged">
      <summary>
        <para>
       Notification that is called when the columns changed event occurs.
    </para>
      </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataGridDesigner.OnTemplateEditingVerbsChanged">
      <summary>
        <para>Provides an opportunity to do processing or other actions when a change has 
 been made to the template editing verbs.</para>
      </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataGridDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>
        <para>Initializes the designer with the specified <see cref="T:System.Web.UI.WebControls.DataGrid" /> 
control.</para>
      </summary>
      <param name="component">The <see cref="T:System.ComponentModel.IComponent" /> for the designer. </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataGridDesigner.SetTemplateContent(System.Web.UI.Design.ITemplateEditingFrame,System.String,System.String)">
      <summary>
        <para> Sets the content for the specified template and frame.
      </para>
      </summary>
      <param name="editingFrame">The <see cref="T:System.Web.UI.Design.ITemplateEditingFrame" /> to set the content for. </param>
      <param name=" templateName">The name of the template. </param>
      <param name=" templateContent">The content to set. </param>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.DataListComponentEditor">
      <summary>
        <para> Provides a component editor for a Web Forms <see cref="T:System.Web.UI.WebControls.DataList" />
control.</para>
      </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataListComponentEditor.#ctor">
      <summary>
        <para>
       Initializes a new instance of <see cref="T:System.Web.UI.Design.WebControls.DataListComponentEditor" />.
    </para>
      </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataListComponentEditor.#ctor(System.Int32)">
      <summary>
        <para> Initializes a new instance of <see cref="T:System.Web.UI.Design.WebControls.DataListComponentEditor" />.
 </para>
      </summary>
      <param name="initialPage">The index of the initial page to display. </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataListComponentEditor.GetComponentEditorPages">
      <summary>
        <para>Gets the component editor pages shown for the <see cref="T:System.Web.UI.WebControls.DataList" /> control in its 
   associated <see cref="T:System.ComponentModel.ComponentEditor" />.</para>
      </summary>
      <returns>
        <para> An array of type <see cref="T:System.Type" /> that contains the pages owned by the designer.
   </para>
      </returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.DataListDesigner">
      <summary>
        <para> Extends design-time behavior for the <see cref="T:System.Web.UI.WebControls.DataList" /> Web server
 control.</para>
      </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataListDesigner.#ctor">
      <summary>
        <para> Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.DataListDesigner" /> class. 
</para>
      </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataListDesigner.CreateTemplateEditingFrame(System.Web.UI.Design.TemplateEditingVerb)">
      <summary>
        <para>Creates a template editing frame using the specified verb.</para>
      </summary>
      <param name="verb">The <see cref="T:System.Web.UI.Design.TemplateEditingVerb" /> that was invoked to create a template editing frame.</param>
      <returns>
        <para>An <see cref="T:System.Web.UI.Design.ITemplateEditingFrame" />.</para>
      </returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataListDesigner.Dispose(System.Boolean)">
      <summary>
        <para> Releases the unmanaged resources used by the <see cref="T:System.Web.UI.Design.WebControls.DataListDesigner" /> and optionally releases the
   managed resources.
   </para>
      </summary>
      <param name="disposing">
        <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataListDesigner.GetCachedTemplateEditingVerbs">
      <summary>
        <para>Gets the cached template editing verbs available to the designer.</para>
      </summary>
      <returns>
        <para>The cached template editing verbs available to the designer.</para>
      </returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataListDesigner.GetDesignTimeHtml">
      <summary>
        <para> Gets the HTML that is used to represent the control
 at design time.
 </para>
      </summary>
      <returns>
        <para> The HTML that is used to represent the control at design time.
 </para>
      </returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataListDesigner.GetEmptyDesignTimeHtml">
      <summary>
        <para>Gets the HTML used to represent an empty template-based control at design 
 time.</para>
      </summary>
      <returns>
        <para>The HTML used to represent an empty template-based control at design time.</para>
      </returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataListDesigner.GetErrorDesignTimeHtml(System.Exception)">
      <summary>
        <para>Gets the HTML to display at design-time for the specified exception when an error has been encountered
      while rendering the control.</para>
      </summary>
      <param name="e">The Exception to display the error message for.</param>
      <returns>
        <para>The HTML displayed at design-time for the specified exception.</para>
      </returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataListDesigner.GetTemplateContainerDataItemProperty(System.String)">
      <summary>
        <para> Gets the template container's data item property.
      </para>
      </summary>
      <param name="templateName">The name of the template. </param>
      <returns>
        <para> The data item property of the container of the template.
      </para>
      </returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataListDesigner.GetTemplateContent(System.Web.UI.Design.ITemplateEditingFrame,System.String,System.Boolean@)">
      <summary>
        <para> Gets the template's content.
      </para>
      </summary>
      <param name="editingFrame">The <see cref="T:System.Web.UI.Design.ITemplateEditingFrame" /> to get content from. </param>
      <param name=" templateName">The name of the template. </param>
      <param name=" allowEditing">
        <see langword="true" /> if the template's content can be edited; <see langword="false" /> if the content is read-only.</param>
      <returns>
        <para> The template's content.
      </para>
      </returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataListDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>
        <para> Initializes
      the designer with the specified component.
      </para>
      </summary>
      <param name="component">The <see cref="T:System.ComponentModel.IComponent" /> for the designer. </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataListDesigner.OnTemplateEditingVerbsChanged">
      <summary>
        <para>Provides an opportunity to do processing or other 
 actions when a change has been made to the template editing verbs.</para>
      </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataListDesigner.SetTemplateContent(System.Web.UI.Design.ITemplateEditingFrame,System.String,System.String)">
      <summary>
        <para> Sets the content for the specified template and frame.
      </para>
      </summary>
      <param name="editingFrame">The <see cref="T:System.Web.UI.Design.ITemplateEditingFrame" /> to set content for. </param>
      <param name=" templateName">The name of the template. </param>
      <param name=" templateContent">The content to set. </param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.DataListDesigner.AllowResize">
      <summary>
        <para>Gets a value indicating whether the data list can be resized.</para>
      </summary>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.DataListDesigner.TemplatesExist">
      <summary>
        <para> Gets a value
      that indicates whether templates associated with the designer currently exist.
      </para>
      </summary>
    </member>
    <member name="T:System.Web.UI.Design.HyperLinkDataBindingHandler">
      <summary>
        <para> Provides a data-binding handler for a hyperlink property.</para>
      </summary>
    </member>
    <member name="M:System.Web.UI.Design.HyperLinkDataBindingHandler.DataBindControl(System.ComponentModel.Design.IDesignerHost,System.Web.UI.Control)">
      <summary>
        <para> Data binds the specified control.</para>
      </summary>
      <param name="designerHost">The <see cref="T:System.ComponentModel.Design.IDesignerHost" /> for the document that contains the control.</param>
      <param name=" control">The <see cref="T:System.Web.UI.Control" /> to data bind.</param>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.HyperLinkDesigner">
      <summary>
        <para> Extends design-time behavior for the <see cref="T:System.Web.UI.WebControls.HyperLink" />
Web server control.</para>
      </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.HyperLinkDesigner.GetDesignTimeHtml">
      <summary>
        <para> Gets the HTML that is used to represent the control at
      design
      time.</para>
      </summary>
      <returns>
        <para> The HTML that is used to represent the control at design
      time.</para>
      </returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.LabelDesigner">
      <summary>
        <para>Extends design-time behavior for the <see cref="T:System.Web.UI.WebControls.Label" />
Web server control. </para>
      </summary>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.LinkButtonDesigner">
      <summary>
        <para> Extends design-time behavior for the <see cref="T:System.Web.UI.WebControls.LinkButton" />
Web server control.</para>
      </summary>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.ListControlDataBindingHandler">
      <summary>
        <para>Provides a data-binding handler for a <see cref="T:System.Web.UI.WebControls.ListControl" /> .</para>
      </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ListControlDataBindingHandler.DataBindControl(System.ComponentModel.Design.IDesignerHost,System.Web.UI.Control)">
      <summary>
        <para>Performs data binding on the specified control.</para>
      </summary>
      <param name="designerHost">The <see cref="T:System.ComponentModel.Design.IDesignerHost" /> for the document that contains the control.</param>
      <param name=" control">The <see cref="T:System.Web.UI.Control" /> to data bind to. </param>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.ListControlDesigner">
      <summary>
        <para> Extends design-time behavior for <see cref="T:System.Web.UI.WebControls.ListControl" /> Web server
 controls.</para>
      </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ListControlDesigner.#ctor">
      <summary>
        <para> Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.ListControlDesigner" /> class.</para>
      </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ListControlDesigner.GetDesignTimeHtml">
      <summary>
        <para> Gets the HTML that is used to represent the control at design time.</para>
      </summary>
      <returns>
        <para>The HTML that is used to represent the control at design time.</para>
      </returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ListControlDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>
        <para> Initializes the designer with the specified component.
      </para>
      </summary>
      <param name="component">The <see cref="T:System.ComponentModel.IComponent" /> for the designer. </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ListControlDesigner.GetResolvedSelectedDataSource">
      <summary>
        <para>Gets the data member that is currently selected 
 within the data source currently bound to the control.</para>
      </summary>
      <returns>
        <para>The currently selected data member, or 
 <see langword="null" /> if the control was not bound to a data source, or the data 
 source, site of the designer's component, or the container of the data source could not be accessed.</para>
      </returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ListControlDesigner.GetSelectedDataSource">
      <summary>
        <para> Gets the selected data source component from the component's container.
 </para>
      </summary>
      <returns>
        <para> The
 selected data source, or <see langword="null" /> if a data source is not found or if a data
 source with the same name does not exist.
 </para>
      </returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ListControlDesigner.OnComponentChanged(System.Object,System.ComponentModel.Design.ComponentChangedEventArgs)">
      <summary>
        <para> Raises the ComponentChanged event.
 </para>
      </summary>
      <param name="source">The source of the event.</param>
      <param name=" ce">A <see cref="T:System.ComponentModel.Design.ComponentChangedEventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ListControlDesigner.OnDataSourceChanged">
      <summary>
        <para> Raises the DataSourceChanged event.
      </para>
      </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ListControlDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary>
        <para>Filters the properties exposed through a <see cref="T:System.ComponentModel.TypeDescriptor" /> and replaces
   the property descriptor for the DataSource property, which contains the value used at
   runtime, with a property descriptor that contains a value indicating a
   design-time data source.</para>
      </summary>
      <param name="properties">An <see cref="T:System.Collections.IDictionary" /> that contains the set of properties to expose for the control.</param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.ListControlDesigner.DataMember">
      <summary>
        <para>Gets or sets the data member for the control.</para>
      </summary>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.ListControlDesigner.DataSource">
      <summary>
        <para>Gets or sets the data source property of the control.</para>
      </summary>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.ListControlDesigner.DataValueField">
      <summary>
        <para>Gets or sets the data value field of the control.</para>
      </summary>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.ListControlDesigner.DataTextField">
      <summary>
        <para> Gets or sets the data text field of the control.</para>
      </summary>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.ListItemsCollectionEditor">
      <summary>
        <para>Provides a user interface for editing the items collection of a list.</para>
      </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ListItemsCollectionEditor.#ctor(System.Type)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.ListItemsCollectionEditor" /> class.</para>
      </summary>
      <param name="type">The type of the collection to edit.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ListItemsCollectionEditor.CanSelectMultipleInstances">
      <summary>
        <para> Indicates whether multiple items in the list can be selected at the
 same time.</para>
      </summary>
      <returns>
        <para>
          <see langword="true" /> if multiple 
 items can be selected at the same time;
 otherwise, <see langword="false" />.</para>
      </returns>
    </member>
    <member name="T:System.Web.UI.Design.UserControlDesigner">
      <summary>
        <para>Extends design-time behavior for Web user controls.</para>
      </summary>
    </member>
    <member name="M:System.Web.UI.Design.UserControlDesigner.#ctor">
      <summary>
        <para> Initializes a new instance of the <see cref="T:System.Web.UI.Design.UserControlDesigner" />
class.</para>
      </summary>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.PanelDesigner">
      <summary>
        <para>Extends design-time behavior for the <see cref="T:System.Web.UI.WebControls.Panel" />
 Web server control.</para>
      </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.PanelDesigner.MapPropertyToStyle(System.String,System.Object)">
      <summary>
        <para>
       Maps a specified property and value to a specified HTML style.
    </para>
      </summary>
      <param name="propName">
    The property name.
 </param>
      <param name="varPropValue">
    The property value.
 </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.PanelDesigner.OnBehaviorAttached">
      <summary>
        <para> Provides notification when a behavior is attached to the designer.</para>
      </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.RegexEditorDialog.cmdHelp_Click(System.Object,System.EventArgs)">
      <summary>
        <para>Represents the method that will handle the Help event of 
 the dialog.</para>
      </summary>
      <param name="sender">The source of the event.</param>
      <param name=" e">An EventArgs that provides data for the event.</param>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.RegexTypeEditor">
      <summary>
        <para>Provides a user interface for editing regular expressions.</para>
      </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.RegexTypeEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>
        <para>Edits
      the value of the specified object using the specified service provider and
      context.</para>
      </summary>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that can provide additional context information.</param>
      <param name=" provider">A service provider.</param>
      <param name=" value">The object to edit the value of.</param>
      <returns>
        <para> The new value of the object. If the value of the object hasn't changed,
      this method returns the same object it was passed.</para>
      </returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.RegexTypeEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary>
        <para>Gets the editor style used by the <see cref="M:System.Web.UI.Design.WebControls.RegexTypeEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)" /> method.</para>
      </summary>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that may be used to gain additional context information.</param>
      <returns>
        <para>A <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" /> that indicates
   the editor style.</para>
      </returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.RepeaterDesigner.#ctor">
      <summary>
        <para>
       Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.RepeaterDesigner" /> class.
    </para>
      </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.RepeaterDesigner.Dispose(System.Boolean)">
      <summary>
   Performs the cleanup of the designer class.
 </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.RepeaterDesigner.GetDesignTimeDataSource(System.Int32)">
      <summary>
   Returns a sample data matching the schema of the selected datasource.
 </summary>
      <param name="minimumRows">
   The minimumn rows of sample data the datasource should contain.
 </param>
      <returns>
   A live datasource for use at design-time.
 </returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.RepeaterDesigner.GetDesignTimeDataSource(System.Collections.IEnumerable,System.Int32)">
      <summary>
   Returns a sample data matching the schema of the selected datasource.
 </summary>
      <param name="selectedDataSource">
   The selected datasource to be used as a reference for the shape of the data.
 </param>
      <param name="minimumRows">
   The minimumn rows of sample data the datasource should contain.
 </param>
      <returns>
   A live datasource for use at design-time.
 </returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.RepeaterDesigner.GetDesignTimeHtml">
      <summary>
   Retrieves the HTML to be used for the design-time representation
   of the control.
 </summary>
      <returns>
   Design Time HTML.
 </returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.RepeaterDesigner.GetEmptyDesignTimeHtml">
      <summary>
      </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.RepeaterDesigner.GetErrorDesignTimeHtml(System.Exception)">
      <summary>
      </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.RepeaterDesigner.GetResolvedSelectedDataSource">
      <summary>
      </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.RepeaterDesigner.GetSelectedDataSource">
      <summary>
   Retrieves the selected datasource component from the component's container.
 </summary>
      <returns>
   The selected datasource; null if a datasource is not found, or a datasource
   with the same name does not exist.
 </returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.RepeaterDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>
   Initializes the designer with the Repeater control that this instance
   of the designer is associated with.
 </summary>
      <param name="component">
   The associated Repeater control.
 </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.RepeaterDesigner.OnComponentChanged(System.Object,System.ComponentModel.Design.ComponentChangedEventArgs)">
      <summary>
   Handles changes made to the component. This includes changes made
   in the Properties window.
 </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.RepeaterDesigner.OnDataSourceChanged">
      <summary>
   Handles changes made to the data source
 </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.RepeaterDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary>
   Filter the properties to replace the runtime DataSource property
   descriptor with the designer's.
 </summary>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.RepeaterDesigner.DataMember">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.RepeaterDesigner.DataSource">
      <summary>
   Designer implementation of DataSource property that operates on
   the DataSource property in the control's binding collection.
 </summary>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.RepeaterDesigner.TemplatesExist">
      <summary>
      </summary>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.TableCellsCollectionEditor">
      <summary>
        <para>Provides a user interface for editing the collection of cells in a table row.</para>
      </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.TableCellsCollectionEditor.#ctor(System.Type)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.TableCellsCollectionEditor" /> class.</para>
      </summary>
      <param name="type">The type of the collection to edit.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.TableCellsCollectionEditor.CreateInstance(System.Type)">
      <summary>
        <para>Creates an instance of the editor for use with the specified type.</para>
      </summary>
      <param name="itemType"> The type to create an instance of.</param>
      <returns>
        <para>An object of the specified type.</para>
      </returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.TableDesigner">
      <summary>
        <para> Extends design-time behavior for the <see cref="T:System.Web.UI.WebControls.Table" />
Web server control.</para>
      </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.TableDesigner.GetDesignTimeHtml">
      <summary>
        <para> Gets the HTML that is used to represent the control at design
      time.</para>
      </summary>
      <returns>
        <para> The HTML that is used to represent the control at design
      time.</para>
      </returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.TableRowsCollectionEditor">
      <summary>
        <para>Provides a user interface for editing rows of a table.</para>
      </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.TableRowsCollectionEditor.#ctor(System.Type)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.TableRowsCollectionEditor" /> class.</para>
      </summary>
      <param name="type">The type of the collection to edit.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.TableRowsCollectionEditor.CanSelectMultipleInstances">
      <summary>
        <para> Indicates whether multiple instances may be selected.</para>
      </summary>
      <returns>
        <para>
          <see langword="true" /> if multiple items can be selected at once; otherwise,
<see langword="false" />. This implementation always returns 
<see langword="false" />.</para>
      </returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.TableRowsCollectionEditor.CreateInstance(System.Type)">
      <summary>
        <para>Creates an instance of the specified type.</para>
      </summary>
      <param name="itemType"> The type to create an instance of.</param>
      <returns>
        <para>An object of the specified type.</para>
      </returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.XmlDesigner.#ctor">
      <summary>
        <para> Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.XmlDesigner" /> class.
 </para>
      </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.XmlDesigner.Dispose(System.Boolean)">
      <summary>
        <para>Releases the unmanaged resources used by the <see cref="T:System.Web.UI.Design.WebControls.XmlDesigner" /> and optionally releases the managed resources.</para>
      </summary>
      <param name="disposing">
        <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.XmlDesigner.GetDesignTimeHtml">
      <summary>
        <para> Gets the HTML that is used to represent the control
 at design time.</para>
      </summary>
      <returns>
        <para>The HTML that is used to represent the control at design time.</para>
      </returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.XmlDesigner.GetEmptyDesignTimeHtml">
      <summary>
        <para>Gets the HTML that is used to fill an empty control.</para>
      </summary>
      <returns>
        <para>The HTML used to fill an empty control.</para>
      </returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.XmlDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>
        <para> Initializes the designer with the control that this instance
      of the designer is associated with.</para>
      </summary>
      <param name="component">The associated control. </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ListControls.AutoFormatDialog.#ctor">
      <summary>
      </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ListControls.AutoFormatDialog.SetComponent(System.Web.UI.WebControls.BaseDataList)">
      <summary>
      </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ListControls.AutoFormatDialog.OnActivated(System.EventArgs)">
      <summary>
      </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ListControls.AutoFormatDialog.OnHandleDestroyed(System.EventArgs)">
      <summary>
      </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ListControls.AutoFormatDialog.SchemePreview.#ctor(System.Design.NativeMethods.IHTMLDocument2)">
      <summary>
      </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ListControls.AutoFormatDialog.SchemePreview.InitPreview">
      <summary>
      </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ListControls.AutoFormatDialog.SchemePreview.ClearPreviewDocument(System.Boolean)">
      <summary>
      </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ListControls.AutoFormatDialog.SchemePreview.ClosePreview">
      <summary>
      </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ListControls.AutoFormatDialog.SchemePreview.PreviewScheme(System.Web.UI.Design.WebControls.ListControls.AutoFormatDialog.BaseDataListScheme)">
      <summary>
      </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ListControls.BaseDataListPage.SetComponent(System.ComponentModel.IComponent)">
      <summary>
   Sets the component that is to be edited in the page.
 </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ListControls.BaseDataListPage.ShowHelp">
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ListControls.BaseDataListPage.SupportsHelp">
    </member>
    <member name="T:System.Web.UI.Design.WebControls.ListControls.BaseDataListPage.DataSourceItem">
      <summary>
   This contains information about a datasource and is used to populate
   the datasource combo. This is used in the General page for a DataList
   and the Data page for a DataGrid.
 </summary>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.ListControls.BaseDataListPage.ListSourceDataSourceItem">
      <summary>
      </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ListControls.BordersPage.#ctor">
      <summary>
   Creates a new instance of BordersPage.
 </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ListControls.BordersPage.LoadComponent">
      <summary>
   Loads the component into the page.
 </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ListControls.BordersPage.SaveComponent">
      <summary>
   Saves the component loaded into the page.
 </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ListControls.BordersPage.SetComponent(System.ComponentModel.IComponent)">
      <summary>
   Sets the component that is to be edited in the page.
 </summary>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.ListControls.BordersPage.HelpKeyword">
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ListControls.DataGridColumnsPage.#ctor">
      <summary>
   Creates a new instance of DataGridColumnsPage.
 </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ListControls.DataGridColumnsPage.LoadComponent">
      <summary>
   Loads the component into the page.
 </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ListControls.DataGridColumnsPage.SaveComponent">
      <summary>
   Saves the component loaded into the page.
 </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ListControls.DataGridColumnsPage.SetComponent(System.ComponentModel.IComponent)">
      <summary>
   Sets the component that is to be edited in the page.
 </summary>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.ListControls.DataGridColumnsPage.HelpKeyword">
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ListControls.DataGridGeneralPage.#ctor">
      <summary>
   Creates a new instance of DataGridGeneralPage.
 </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ListControls.DataGridGeneralPage.LoadComponent">
      <summary>
   Loads the component into the page.
 </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ListControls.DataGridGeneralPage.SaveComponent">
      <summary>
   Saves the component loaded into the page.
 </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ListControls.DataGridGeneralPage.SetComponent(System.ComponentModel.IComponent)">
      <summary>
   Sets the component that is to be edited in the page.
 </summary>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.ListControls.DataGridGeneralPage.HelpKeyword">
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ListControls.DataGridPagingPage.#ctor">
      <summary>
   Creates a new instance of DataGridPagingPage.
 </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ListControls.DataGridPagingPage.LoadComponent">
      <summary>
   Loads the component into the page.
 </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ListControls.DataGridPagingPage.SaveComponent">
      <summary>
   Saves the component loaded into the page.
 </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ListControls.DataGridPagingPage.SetComponent(System.ComponentModel.IComponent)">
      <summary>
   Sets the component that is to be edited in the page.
 </summary>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.ListControls.DataGridPagingPage.HelpKeyword">
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ListControls.DataListGeneralPage.#ctor">
      <summary>
   Creates a new instance of DataListGeneralPage.
 </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ListControls.DataListGeneralPage.LoadComponent">
      <summary>
   Loads the component into the page.
 </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ListControls.DataListGeneralPage.SaveComponent">
      <summary>
   Saves the component loaded into the page.
 </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ListControls.DataListGeneralPage.SetComponent(System.ComponentModel.IComponent)">
      <summary>
   Sets the component that is to be edited in the page.
 </summary>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.ListControls.DataListGeneralPage.HelpKeyword">
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ListControls.FormatPage.#ctor">
      <summary>
   Creates a new instance of FormatPage.
 </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ListControls.FormatPage.LoadComponent">
      <summary>
   Loads the component into the page.
 </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ListControls.FormatPage.OnHandleCreated(System.EventArgs)">
      <summary>
      </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ListControls.FormatPage.SaveComponent">
      <summary>
   Saves the component loaded into the page.
 </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ListControls.FormatPage.SetComponent(System.ComponentModel.IComponent)">
      <summary>
   Sets the component that is to be edited in the page.
 </summary>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.ListControls.FormatPage.HelpKeyword">
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ListControls.FormatPage.FormatTreeNode.#ctor(System.String,System.Web.UI.Design.WebControls.ListControls.FormatPage.FormatObject)">
      <summary>
      </summary>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.ListControls.FormatPage.FormatTreeNode.Dirty">
      <summary>
      </summary>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.ListControls.FormatPage.FormatTreeNode.FormatObject">
      <summary>
      </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ListControls.FormatPage.FormatStyle.#ctor(System.Web.UI.WebControls.Style)">
      <summary>
      </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ListControls.FormatPage.FormatStyle.LoadFormatInfo">
      <summary>
      </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ListControls.FormatPage.FormatStyle.SaveFormatInfo">
      <summary>
      </summary>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.ListControls.FormatPage.FormatStyle.IsTableItemStyle">
      <summary>
      </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ListControls.FormatPage.FormatColumn.#ctor(System.Web.UI.WebControls.DataGridColumn)">
      <summary>
      </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ListControls.FormatPage.FormatColumn.LoadFormatInfo">
      <summary>
      </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ListControls.FormatPage.FormatColumn.SaveFormatInfo">
      <summary>
      </summary>
    </member>
    <member name="M:System.ServiceProcess.Design.ServiceControllerDesigner.PreFilterProperties(System.Collections.IDictionary)">
    </member>
    <member name="M:System.Messaging.Design.MessageDesigner.PreFilterProperties(System.Collections.IDictionary)">
    </member>
  </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\tools\x86\managed\urt\v1.0.3705\system.messaging.xml ===
<?xml version="1.0"?>
<doc>
  <assembly>
    <name>System.Messaging</name>
  </assembly>
  <members>
    <member name="M:System.Messaging.ResDescriptionAttribute.#ctor(System.String)">
      <summary>
                Constructs a new sys description.
            </summary>
      <param name="description">
                description text.
            </param>
    </member>
    <member name="P:System.Messaging.ResDescriptionAttribute.Description">
      <summary>
                Retrieves the description text.
            </summary>
      <returns>
                description
            </returns>
    </member>
    <member name="T:System.Messaging.AccessControlEntry">
      <summary>
        <para>Specifies access rights for a trustee (user, group, or
      computer) to perform application-specific implementations of common tasks.</para>
      </summary>
    </member>
    <member name="M:System.Messaging.AccessControlEntry.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Messaging.AccessControlEntry" /> class that specifies neither a trustee nor set
   of rights to apply.</para>
      </summary>
    </member>
    <member name="M:System.Messaging.AccessControlEntry.#ctor(System.Messaging.Trustee)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Messaging.AccessControlEntry" /> class that specifies a trustee to grant or
   deny rights to.</para>
      </summary>
      <param name="trustee">A <see cref="T:System.Messaging.Trustee" /> that specifies a user, group, computer, domain, or alias.</param>
    </member>
    <member name="M:System.Messaging.AccessControlEntry.#ctor(System.Messaging.Trustee,System.Messaging.GenericAccessRights,System.Messaging.StandardAccessRights,System.Messaging.AccessControlEntryType)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Messaging.AccessControlEntry" /> class that specifies a trustee, rights to
   assign, and whether to grant or deny these rights.</para>
      </summary>
      <param name="trustee">A <see cref="T:System.Messaging.Trustee" /> that specifies a user, group, computer, domain, or alias.</param>
      <param name=" genericAccessRights">A bitwise combination of the <see cref="T:System.Messaging.GenericAccessRights" /> values.</param>
      <param name=" standardAccessRights">A bitwise combination of the <see cref="T:System.Messaging.StandardAccessRights" /> values.</param>
      <param name=" entryType">One of the <see cref="T:System.Messaging.AccessControlEntryType" /> values, which specifies whether to allow, deny, set, or revoke the specified rights.</param>
    </member>
    <member name="P:System.Messaging.AccessControlEntry.EntryType">
      <summary>
        <para>Gets or sets a value that indicates how the access rights
      apply to the trustee.</para>
      </summary>
    </member>
    <member name="P:System.Messaging.AccessControlEntry.CustomAccessRights">
      <summary>
        <para>Gets or sets custom access rights.</para>
      </summary>
    </member>
    <member name="P:System.Messaging.AccessControlEntry.GenericAccessRights">
      <summary>
        <para> Gets or
      sets a set of common access rights that map to both standard and
      object-specific access rights for reading, writing, and executing.</para>
      </summary>
    </member>
    <member name="P:System.Messaging.AccessControlEntry.StandardAccessRights">
      <summary>
        <para> Gets or sets a set of standard access rights that correspond to
      operations common to most types of securable objects.</para>
      </summary>
    </member>
    <member name="P:System.Messaging.AccessControlEntry.Trustee">
      <summary>
        <para>Gets or sets the user, group, domain, or alias to which
      you are assigning access rights.</para>
      </summary>
    </member>
    <member name="T:System.Messaging.AccessControlEntryType">
      <summary>
        <para>Specifies whether to allow, deny, or revoke access
      rights for a trustee.</para>
      </summary>
    </member>
    <member name="F:System.Messaging.AccessControlEntryType.Allow">
      <summary>
        <para>An access-allowed entry that causes the new 
      rights to be added to any existing rights the trustee has.</para>
      </summary>
    </member>
    <member name="F:System.Messaging.AccessControlEntryType.Set">
      <summary>
        <para>An access-allowed entry that is similar to <see langword="Allow" />, except 
   that the new entry allows only the
   specified rights. Using it discards any existing rights, including all existing
   access-denied entries for the trustee.</para>
      </summary>
    </member>
    <member name="F:System.Messaging.AccessControlEntryType.Deny">
      <summary>
        <para> 
      An access-denied entry that denies
      the specified rights in addition to any currently denied rights of the trustee.</para>
      </summary>
    </member>
    <member name="F:System.Messaging.AccessControlEntryType.Revoke">
      <summary>
        <para>An entry that removes all existing allowed or denied rights for the 
      specified trustee.</para>
      </summary>
    </member>
    <member name="T:System.Messaging.AccessControlList">
      <summary>
        <para>Contains a list of access control entries, specifying
      access rights for one or more trustees.</para>
      </summary>
    </member>
    <member name="M:System.Messaging.AccessControlList.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Messaging.AccessControlList" /> class.</para>
      </summary>
    </member>
    <member name="M:System.Messaging.AccessControlList.Add(System.Messaging.AccessControlEntry)">
      <summary>
        <para>Appends an access control entry to the access control list.</para>
      </summary>
      <param name="entry">An <see cref="T:System.Messaging.AccessControlEntry" /> to append to the end of the access control list.</param>
      <returns>
        <para>The position into which the new access control entry was inserted.</para>
      </returns>
    </member>
    <member name="M:System.Messaging.AccessControlList.Insert(System.Int32,System.Messaging.AccessControlEntry)">
      <summary>
        <para>Inserts an access control entry into the access control
      list at the specified position.</para>
      </summary>
      <param name="index">The zero-based index at which the access control entry should be inserted.</param>
      <param name=" entry">An <see cref="T:System.Messaging.AccessControlEntry" /> to insert into the access control list.</param>
    </member>
    <member name="M:System.Messaging.AccessControlList.IndexOf(System.Messaging.AccessControlEntry)">
      <summary>
        <para>Determines the specific index of an access control entry 
      in the access control list.</para>
      </summary>
      <param name="entry">The <see cref="T:System.Messaging.AccessControlEntry" /> to locate in the access control list.</param>
      <returns>
        <para>The index of the entry if it was found in the list; otherwise, -1</para>
      </returns>
    </member>
    <member name="M:System.Messaging.AccessControlList.Contains(System.Messaging.AccessControlEntry)">
      <summary>
        <para>Determines whether the access control list contains a 
      specific access control entry.</para>
      </summary>
      <param name="entry">The <see cref="T:System.Messaging.AccessControlEntry" /> to locate in the access control list.</param>
      <returns>
        <para>
          <see langword="true" /> if the access control entry is found in the access 
   control list; otherwise, <see langword="false" />.</para>
      </returns>
    </member>
    <member name="M:System.Messaging.AccessControlList.Remove(System.Messaging.AccessControlEntry)">
      <summary>
        <para>Removes the first occurrence of a specific access control
      entry from the access control list.</para>
      </summary>
      <param name="entry">The <see cref="T:System.Messaging.AccessControlEntry" /> to remove from the access control list.</param>
    </member>
    <member name="M:System.Messaging.AccessControlList.CopyTo(System.Messaging.AccessControlEntry[],System.Int32)">
      <summary>
        <para>Copies the entire access control list to a compatible
      one-dimensional array of access control entries, starting at the specified index
      of the target array.</para>
      </summary>
      <param name="array">An array of type <see cref="T:System.Messaging.AccessControlEntry" /> to which the access control list entries will be copied. The array must have zero-based indexing.</param>
      <param name=" index">The index in the array at which to begin copying the access control list entries.</param>
    </member>
    <member name="T:System.Messaging.Acknowledgment">
      <summary>
        <para> Specifies the result of an attempted message
      delivery.
      </para>
      </summary>
    </member>
    <member name="F:System.Messaging.Acknowledgment.None">
      <summary>
        <para> The message is
 not an acknowledgment message.</para>
      </summary>
    </member>
    <member name="F:System.Messaging.Acknowledgment.AccessDenied">
      <summary>
        <para>A negative arrival acknowledgment indicating that the sending application does not have the necessary rights to send a
 message to the destination queue.</para>
      </summary>
    </member>
    <member name="F:System.Messaging.Acknowledgment.BadDestinationQueue">
      <summary>
        <para>A negative arrival acknowledgment indicating that the destination queue is not available to the sending
      application.</para>
        <para>
        </para>
      </summary>
    </member>
    <member name="F:System.Messaging.Acknowledgment.BadEncryption">
      <summary>
        <para> A negative arrival acknowledgment indicating that the destination queue manager could not decrypt a
 private message.</para>
      </summary>
    </member>
    <member name="F:System.Messaging.Acknowledgment.BadSignature">
      <summary>
        <para> A negative arrival acknowledgment indicating that the original message's digital signature is not valid and could
 not be authenticated by Message Queuing.</para>
      </summary>
    </member>
    <member name="F:System.Messaging.Acknowledgment.CouldNotEncrypt">
      <summary>
        <para>A negative arrival acknowledgment indicating that the source queue manager could not encrypt a private message.</para>
      </summary>
    </member>
    <member name="F:System.Messaging.Acknowledgment.HopCountExceeded">
      <summary>
        <para>A negative arrival acknowledgment indicating that the original message's hop count (which indicates 
 the number of intermediate servers) was exceeded.</para>
        <note type="note">
 The maximum hop count,
 15, is set by Message Queuing and is immutable.
 
 </note>
      </summary>
    </member>
    <member name="F:System.Messaging.Acknowledgment.NotTransactionalQueue">
      <summary>
        <para>A negative arrival acknowledgment indicating that a transactional message was sent to a non-transactional
 queue.</para>
      </summary>
    </member>
    <member name="F:System.Messaging.Acknowledgment.NotTransactionalMessage">
      <summary>
        <para>A negative arrival acknowledgment indicating that a nontransactional message was sent to a transactional
      queue.</para>
      </summary>
    </member>
    <member name="F:System.Messaging.Acknowledgment.Purged">
      <summary>
        <para>A negative arrival acknowledgment indicating that the message was purged before reaching its destination
 queue.</para>
      </summary>
    </member>
    <member name="F:System.Messaging.Acknowledgment.QueueDeleted">
      <summary>
        <para> A negative read acknowledgment indicating that the queue was deleted before the message
 could be read.</para>
      </summary>
    </member>
    <member name="F:System.Messaging.Acknowledgment.QueueExceedMaximumSize">
      <summary>
        <para>A negative arrival acknowledgment indicating that the
 original message was not delivered because its destination queue is full.</para>
      </summary>
    </member>
    <member name="F:System.Messaging.Acknowledgment.QueuePurged">
      <summary>
        <para>A negative read acknowledgment indicating that the queue was purged before the message could be read.</para>
      </summary>
    </member>
    <member name="F:System.Messaging.Acknowledgment.ReachQueue">
      <summary>
        <para>A positive arrival acknowledgment indicating that the original message reached its destination queue.</para>
      </summary>
    </member>
    <member name="F:System.Messaging.Acknowledgment.ReachQueueTimeout">
      <summary>
        <para>A negative arrival acknowledgment indicating that the time-to-reach-queue or time-to-be-received timer
 expired before the original message could reach the destination queue.</para>
      </summary>
    </member>
    <member name="F:System.Messaging.Acknowledgment.ReceiveTimeout">
      <summary>
        <para>A negative read acknowledgment indicating that the original message was not received from the queue before
 its time-to-be-received timer expired.</para>
      </summary>
    </member>
    <member name="F:System.Messaging.Acknowledgment.Receive">
      <summary>
        <para>A positive read acknowledgment indicating that the original message was received by the receiving
      application.</para>
      </summary>
    </member>
    <member name="T:System.Messaging.AcknowledgeTypes">
      <summary>
        <para> Specifies the types of acknowledgment message Message Queuing returns to the sending application.
      </para>
      </summary>
    </member>
    <member name="F:System.Messaging.AcknowledgeTypes.PositiveArrival">
      <summary>
        <para> A mask used to request a positive acknowledgment when the original message
      reaches the queue.
      </para>
        <para>
        </para>
      </summary>
    </member>
    <member name="F:System.Messaging.AcknowledgeTypes.PositiveReceive">
      <summary>
        <para> A mask used to request a positive acknowledgment when the original message
 is successfully retrieved from the queue.
 </para>
      </summary>
    </member>
    <member name="F:System.Messaging.AcknowledgeTypes.NegativeReceive">
      <summary>
        <para> A mask used to request a negative acknowledgment when the original message fails
      to be received from the queue.
      </para>
        <note type="note">
      Using the <see cref="M:System.Messaging.MessageQueue.Peek" qualify="true" /> method does not remove a message from the
      queue, so this acknowledgment type could be returned even if you did
      peek the message. Only the <see cref="M:System.Messaging.MessageQueue.Receive" qualify="true" /> method (or the related
      asynchronous <see cref="M:System.Messaging.MessageQueue.BeginReceive" qualify="true" /> method) removes a
      message from the queue.
      
   </note>
        <para>
        </para>
      </summary>
    </member>
    <member name="F:System.Messaging.AcknowledgeTypes.None">
      <summary>
        <para> A mask used to request that no acknowledgment messages (positive or negative) be posted.
 </para>
      </summary>
    </member>
    <member name="F:System.Messaging.AcknowledgeTypes.NotAcknowledgeReachQueue">
      <summary>
        <para> A mask used to request a negative acknowledgment when the original message cannot reach
 the queue. This can happen when the time-to-reach-queue timer
 expires, or if a message cannot be authenticated.
 </para>
      </summary>
    </member>
    <member name="F:System.Messaging.AcknowledgeTypes.NotAcknowledgeReceive">
      <summary>
        <para> A mask used to request a negative acknowledgment when an error occurs that prevents the
 original message from being received from the queue before its
 time-to-be-received timer expires.
 </para>
      </summary>
    </member>
    <member name="F:System.Messaging.AcknowledgeTypes.FullReachQueue">
      <summary>
        <para> 
 A mask used to request positive acknowledgment if
 the original message reaches the queue, or negative acknowledgment if the time-to-reach-queue timer
 expires or if the original message cannot be authenticated.
 </para>
      </summary>
    </member>
    <member name="F:System.Messaging.AcknowledgeTypes.FullReceive">
      <summary>
        <para> A mask used to request positive acknowledgment if
 the original message is received from the queue before its time-to-be-received timer
 expires, or negative acknowledgment otherwise.
 </para>
      </summary>
    </member>
    <member name="T:System.Messaging.ActiveXMessageFormatter">
      <summary>
        <para> Serializes or deserializes primitive data types
      and other objects to or from the body
      of a Message Queuing message, using a format that is compatible with
      the MSMQ ActiveX Component.
      </para>
      </summary>
    </member>
    <member name="T:System.Messaging.IMessageFormatter">
      <summary>
        <para> Serializes or deserializes
      objects from the body of a Message
      Queuing message.</para>
      </summary>
    </member>
    <member name="M:System.Messaging.IMessageFormatter.CanRead(System.Messaging.Message)">
      <summary>
        <para> When implemented in a class, determines whether the formatter can deserialize the contents of the message.</para>
      </summary>
      <param name="message">The <see cref="T:System.Messaging.Message" /> to inspect.</param>
      <returns>
        <para>
          <see langword="true" /> if
   the formatter can deserialize the message; otherwise, <see langword="false" /> .</para>
      </returns>
    </member>
    <member name="M:System.Messaging.IMessageFormatter.Read(System.Messaging.Message)">
      <summary>
        <para>When implemented in a class, reads the contents from the given message and creates an object containing
      data from the message.</para>
      </summary>
      <param name="message">The <see cref="T:System.Messaging.Message" /> to deserialize.</param>
      <returns>
        <para> The deserialized message.</para>
      </returns>
    </member>
    <member name="M:System.Messaging.IMessageFormatter.Write(System.Messaging.Message,System.Object)">
      <summary>
        <para> When implemented in a class, serializes an object into the body of the message.</para>
      </summary>
      <param name="message">The <see cref="T:System.Messaging.Message" /> that will contain the serialized object.</param>
      <param name="obj">The object to be serialized into the message.</param>
    </member>
    <member name="M:System.Messaging.ActiveXMessageFormatter.CanRead(System.Messaging.Message)">
      <summary>
        <para> Determine whether the formatter can deserialize the contents of the message.</para>
      </summary>
      <param name="message">The <see cref="T:System.Messaging.Message" /> to inspect.</param>
      <returns>
        <para>
          <see langword="true" /> if the <see cref="T:System.Messaging.ActiveXMessageFormatter" /> 
can deserialize the message; otherwise, <see langword="false" /> .</para>
      </returns>
    </member>
    <member name="M:System.Messaging.ActiveXMessageFormatter.Clone">
      <summary>
        <para>Creates an instance of the <see cref="T:System.Messaging.ActiveXMessageFormatter" /> class that
   is identical to the current <see cref="T:System.Messaging.ActiveXMessageFormatter" /> . </para>
      </summary>
      <returns>
        <para>An object whose properties are identical to those of
      this <see cref="T:System.Messaging.ActiveXMessageFormatter" />
      
      . </para>
      </returns>
    </member>
    <member name="M:System.Messaging.ActiveXMessageFormatter.InitStreamedObject(System.Object)">
      <summary>
        <para> Provides a utility to help the serialize COM objects that implement IPersistStream and require IPersistStreamInit to be called.</para>
      </summary>
      <param name="streamedObject">
        <para>An OLE object that implements IPersistStreamInit.</para>
      </param>
    </member>
    <member name="M:System.Messaging.ActiveXMessageFormatter.Read(System.Messaging.Message)">
      <summary>
        <para>Reads the contents from the given message and creates an object
      containing the deserialized message.</para>
      </summary>
      <param name="message">The <see cref="T:System.Messaging.Message" /> , in MSMQ ActiveX control format, to deserialize.</param>
      <returns>
        <para> The deserialized message.</para>
      </returns>
    </member>
    <member name="M:System.Messaging.ActiveXMessageFormatter.Write(System.Messaging.Message,System.Object)">
      <summary>
        <para> Serializes an object into the body of the message.</para>
      </summary>
      <param name="message">The <see cref="T:System.Messaging.Message" /> whose <see cref="P:System.Messaging.Message.Body" /> property will contain the serialized object.</param>
      <param name="obj">The object to be serialized into the message body.</param>
    </member>
    <member name="T:System.Messaging.BinaryMessageFormatter">
      <summary>
        <para> Serializes or deserializes an object, or an
      entire graph of connected objects, to or from the body of a
      Message Queuing message, using a binary format.</para>
      </summary>
    </member>
    <member name="M:System.Messaging.BinaryMessageFormatter.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Messaging.BinaryMessageFormatter" /> class,
   without specifying a type style or top object assembly style.</para>
      </summary>
    </member>
    <member name="M:System.Messaging.BinaryMessageFormatter.#ctor(System.Runtime.Serialization.Formatters.FormatterAssemblyStyle,System.Runtime.Serialization.Formatters.FormatterTypeStyle)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Messaging.BinaryMessageFormatter" /> class, specifying the formats of the root
   object and the type descriptions.</para>
      </summary>
      <param name="topObjectFormat">Determines how the top (root) object of a graph is laid out in the serialized stream. </param>
      <param name="typeFormat">Determines how type descriptions are laid out in the serialized stream. </param>
    </member>
    <member name="M:System.Messaging.BinaryMessageFormatter.CanRead(System.Messaging.Message)">
      <summary>
        <para> Determines whether the formatter can deserialize the contents of the message.</para>
      </summary>
      <param name="message">The <see cref="T:System.Messaging.Message" /> to inspect.</param>
      <returns>
        <para>
          <see langword="true" /> if the binary message
   formatter can deserialize the message; otherwise, <see langword="false" /> .</para>
      </returns>
    </member>
    <member name="M:System.Messaging.BinaryMessageFormatter.Clone">
      <summary>
        <para>Creates an instance of the <see cref="T:System.Messaging.BinaryMessageFormatter" /> class whose read/write properties (the root object and type description formats) are
   the same as the current <see cref="T:System.Messaging.BinaryMessageFormatter" /> . </para>
      </summary>
      <returns>
        <para>An object whose properties are identical to those of
      this <see cref="T:System.Messaging.BinaryMessageFormatter" />
      , but whose metadata does not specify it to be a
      formatter class instance.</para>
      </returns>
    </member>
    <member name="M:System.Messaging.BinaryMessageFormatter.Read(System.Messaging.Message)">
      <summary>
        <para>Reads the contents from the given message and creates an object
      containing the deserialized message.</para>
      </summary>
      <param name="message">The <see cref="T:System.Messaging.Message" /> , in binary format, to deserialize.</param>
      <returns>
        <para> The deserialized message.</para>
      </returns>
    </member>
    <member name="M:System.Messaging.BinaryMessageFormatter.Write(System.Messaging.Message,System.Object)">
      <summary>
        <para> Serializes an object into the body of the message.</para>
      </summary>
      <param name="message">The <see cref="T:System.Messaging.Message" /> whose <see cref="P:System.Messaging.Message.Body" /> property will contain the serialized object.</param>
      <param name="obj">The object to be serialized into the message body.</param>
    </member>
    <member name="P:System.Messaging.BinaryMessageFormatter.TopObjectFormat">
      <summary>
        <para>Gets or sets a value that defines how the top (root) object of a graph
      is laid out in the serialized stream.</para>
      </summary>
    </member>
    <member name="P:System.Messaging.BinaryMessageFormatter.TypeFormat">
      <summary>
        <para>Gets or sets a value that defines how type descriptions are laid out in the
      serialized stream.</para>
      </summary>
    </member>
    <member name="T:System.Messaging.CryptographicProviderType">
      <summary>
        <para> Specifies the cryptographic service providers available for validating digital signatures.</para>
      </summary>
    </member>
    <member name="F:System.Messaging.CryptographicProviderType.None">
      <summary>
        <para>No cryptographic provider type specified.</para>
      </summary>
    </member>
    <member name="F:System.Messaging.CryptographicProviderType.RsaFull">
      <summary>
        <para>The full RSA provider type, which supports both digital 
 signatures and data encryption. Considered a general purpose cryptographic
 services provider. The RSA public-key algorithm is used for all public-key operations.</para>
        <note type="note">
 RSA Data Security, Inc., is a
 major developer and publisher of public-key cryptography standards. The "RSA" in
 the name stands for the names of the company's three developers and the owners:
 Rivest, Shamir, and Adelman
 </note>
      </summary>
    </member>
    <member name="F:System.Messaging.CryptographicProviderType.RsqSig">
      <summary>
        <para>A subset of the <see langword="RsaFull" /> provider type, which supports
   only those functions and algorithms required for hashes and digital signatures.</para>
      </summary>
    </member>
    <member name="F:System.Messaging.CryptographicProviderType.Dss">
      <summary>
        <para>A provider type that, like
   <see langword="RsqSig" />, only supports hashes and digital signatures.
   <see langword="Dss" /> specifies the DSA (Digital Signature Algorithm) signature algorithm.</para>
        <para>
        </para>
      </summary>
    </member>
    <member name="F:System.Messaging.CryptographicProviderType.Fortezza">
      <summary>
        <para>A provider type that contains a set of cryptographic 
 protocols and algorithms owned by the National Institute of Standards and Technology.</para>
      </summary>
    </member>
    <member name="F:System.Messaging.CryptographicProviderType.MicrosoftExchange">
      <summary>
        <para>A provider type designed for the cryptographic needs of 
 the Microsoft Exchange mail application and other applications compatible with Microsoft Mail.</para>
        <note type="note">
 This provider type
 is preliminary.
 </note>
      </summary>
    </member>
    <member name="F:System.Messaging.CryptographicProviderType.Ssl">
      <summary>
        <para>A provider type that supports the Secure Sockets Layer (SSL) protocol.</para>
      </summary>
    </member>
    <member name="F:System.Messaging.CryptographicProviderType.SttMer">
      <summary>
        <para>Secure Transaction Technology Provider.</para>
      </summary>
    </member>
    <member name="F:System.Messaging.CryptographicProviderType.SttAcq">
      <summary>
        <para> Secure Transaction Technology Provider.</para>
      </summary>
    </member>
    <member name="F:System.Messaging.CryptographicProviderType.SttBrnd">
      <summary>
        <para> Secure Transaction Technology Provider.</para>
      </summary>
    </member>
    <member name="F:System.Messaging.CryptographicProviderType.SttRoot">
      <summary>
        <para>Secure Transaction Technology Provider.</para>
      </summary>
    </member>
    <member name="F:System.Messaging.CryptographicProviderType.SttIss">
      <summary>
        <para>Secure Transaction Technology Provider.</para>
      </summary>
    </member>
    <member name="T:System.Messaging.DefaultPropertiesToSend">
      <summary>
        <para>Specifies the default property values that will be used
      when sending objects other than <see cref="T:System.Messaging.Message" />
      instances to a message queue.</para>
      </summary>
    </member>
    <member name="M:System.Messaging.DefaultPropertiesToSend.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Messaging.DefaultPropertiesToSend" />
class.</para>
      </summary>
    </member>
    <member name="P:System.Messaging.DefaultPropertiesToSend.AcknowledgeType">
      <summary>
        <para> Gets or sets the type of acknowledgement message to be returned to the sending
      application.</para>
      </summary>
    </member>
    <member name="P:System.Messaging.DefaultPropertiesToSend.AdministrationQueue">
      <summary>
        <para> Gets or
      sets the queue that receives acknowledgement messages generated by Message
      Queuing.</para>
      </summary>
    </member>
    <member name="P:System.Messaging.DefaultPropertiesToSend.AppSpecific">
      <summary>
        <para>Gets or sets additional, application-specific information.</para>
      </summary>
    </member>
    <member name="P:System.Messaging.DefaultPropertiesToSend.AttachSenderId">
      <summary>
        <para> Gets or sets a value indicating whether the sender ID should be attached to the
       message.</para>
      </summary>
    </member>
    <member name="P:System.Messaging.DefaultPropertiesToSend.EncryptionAlgorithm">
      <summary>
        <para> Gets or sets the encryption algorithm used to encrypt the body of a
      private message.</para>
      </summary>
    </member>
    <member name="P:System.Messaging.DefaultPropertiesToSend.Extension">
      <summary>
        <para> Gets or sets additional information associated with the message.</para>
      </summary>
    </member>
    <member name="P:System.Messaging.DefaultPropertiesToSend.HashAlgorithm">
      <summary>
        <para> Gets or sets the hashing algorithm used when authenticating 
       messages or creating a digital signature for
       a
       message.</para>
      </summary>
    </member>
    <member name="P:System.Messaging.DefaultPropertiesToSend.Label">
      <summary>
        <para>Gets or sets an application-defined string that describes the message.</para>
      </summary>
    </member>
    <member name="P:System.Messaging.DefaultPropertiesToSend.Priority">
      <summary>
        <para>Gets or sets the message priority, used to determine where 
       the message is placed in the queue.</para>
      </summary>
    </member>
    <member name="P:System.Messaging.DefaultPropertiesToSend.Recoverable">
      <summary>
        <para> Gets or sets a value indicating whether the message is
       guaranteed to be delivered in the event
       of a computer failure or network problem.</para>
      </summary>
    </member>
    <member name="P:System.Messaging.DefaultPropertiesToSend.ResponseQueue">
      <summary>
        <para> Gets or sets the queue that receives application-generated response
       messages.</para>
      </summary>
    </member>
    <member name="P:System.Messaging.DefaultPropertiesToSend.TimeToBeReceived">
      <summary>
        <para> Gets or sets the time limit for the message to be
 retrieved from
 the destination queue.</para>
      </summary>
    </member>
    <member name="P:System.Messaging.DefaultPropertiesToSend.TimeToReachQueue">
      <summary>
        <para> Gets or sets the time limit for the message to
      reach the queue.</para>
      </summary>
    </member>
    <member name="P:System.Messaging.DefaultPropertiesToSend.TransactionStatusQueue">
      <summary>
        <para> Gets the transaction status queue on the source computer. </para>
      </summary>
    </member>
    <member name="P:System.Messaging.DefaultPropertiesToSend.UseAuthentication">
      <summary>
        <para> Gets or sets a value indicating whether the message must be authenticated before being sent.</para>
      </summary>
    </member>
    <member name="P:System.Messaging.DefaultPropertiesToSend.UseDeadLetterQueue">
      <summary>
        <para> Gets or sets a value indicating whether a copy of the message that could not
       be delivered should be sent to a dead-letter queue.</para>
      </summary>
    </member>
    <member name="P:System.Messaging.DefaultPropertiesToSend.UseEncryption">
      <summary>
        <para> Gets or sets a value indicating whether to make the message private.</para>
      </summary>
    </member>
    <member name="P:System.Messaging.DefaultPropertiesToSend.UseJournalQueue">
      <summary>
        <para> Gets or sets a value indicating whether a copy of the message should be kept
       in a machine journal on the originating computer.</para>
      </summary>
    </member>
    <member name="P:System.Messaging.DefaultPropertiesToSend.UseTracing">
      <summary>
        <para> Gets or sets a value indicating whether to trace a message as it moves toward
       its destination queue.</para>
      </summary>
    </member>
    <member name="T:System.Messaging.EncryptionAlgorithm">
      <summary>
        <para> Specifies the encryption algorithm used to encrypt the message body of a
 private message.
 
 </para>
      </summary>
    </member>
    <member name="F:System.Messaging.EncryptionAlgorithm.None">
      <summary>
        <para>
       No encryption.
    </para>
      </summary>
    </member>
    <member name="F:System.Messaging.EncryptionAlgorithm.Rc2">
      <summary>
        <para> The value MQMSG_CALG_RC2. This is the default value for 
 the encryption property of the
 Message Queuing application's message
 
 object.
 
 </para>
      </summary>
    </member>
    <member name="F:System.Messaging.EncryptionAlgorithm.Rc4">
      <summary>
        <para> The value MQMSG_CALG_RC4. This corresponds to the less 
 secure option for the encryption property of the Message Queuing application's message
 
 object.
 
 </para>
      </summary>
    </member>
    <member name="T:System.Messaging.EncryptionRequired">
      <summary>
        <para>Specifies the privacy level of messages received by the queue.
      </para>
      </summary>
    </member>
    <member name="F:System.Messaging.EncryptionRequired.None">
      <summary>
        <para> Accepts
      only
      nonprivate (nonencrypted) messages.
      
   </para>
      </summary>
    </member>
    <member name="F:System.Messaging.EncryptionRequired.Optional">
      <summary>
        <para> Does not force privacy. Accepts private (encrypted) messages and nonprivate (nonencrypted) messages.
      
   </para>
      </summary>
    </member>
    <member name="F:System.Messaging.EncryptionRequired.Body">
      <summary>
        <para>
       Accepts only private (encrypted) messages.
    </para>
      </summary>
    </member>
    <member name="T:System.Messaging.GenericAccessRights">
      <summary>
        <para>Uses the Windows 2000/Windows NT access format to specify a set of common access rights that Message
      Queuing maps to both standard and object-specific access rights for reading,
      writing, and executing.</para>
      </summary>
    </member>
    <member name="F:System.Messaging.GenericAccessRights.All">
      <summary>
        <para>Read, write, and execute access.</para>
      </summary>
    </member>
    <member name="F:System.Messaging.GenericAccessRights.Execute">
      <summary>
        <para> Execute access.</para>
      </summary>
    </member>
    <member name="F:System.Messaging.GenericAccessRights.Write">
      <summary>
        <para> Write access.</para>
      </summary>
    </member>
    <member name="F:System.Messaging.GenericAccessRights.Read">
      <summary>
        <para> Read access.</para>
      </summary>
    </member>
    <member name="F:System.Messaging.GenericAccessRights.None">
      <summary>
        <para> No access.</para>
      </summary>
    </member>
    <member name="T:System.Messaging.HashAlgorithm">
      <summary>
        <para>Specifies the hash algorithm used by Message
      Queuing when authenticating messages.
      </para>
      </summary>
    </member>
    <member name="F:System.Messaging.HashAlgorithm.None">
      <summary>
        <para>
       No hashing
       algorithm.
       
    </para>
      </summary>
    </member>
    <member name="F:System.Messaging.HashAlgorithm.Md2">
      <summary>
        <para>
       MD2 hashing algorithm.
    </para>
      </summary>
    </member>
    <member name="F:System.Messaging.HashAlgorithm.Md4">
      <summary>
        <para>
       MD4 hashing algorithm.
       
    </para>
      </summary>
    </member>
    <member name="F:System.Messaging.HashAlgorithm.Md5">
      <summary>
        <para>
       MD5 hashing algorithm.
    </para>
      </summary>
    </member>
    <member name="F:System.Messaging.HashAlgorithm.Sha">
      <summary>
        <para>
       SHA hashing algorithm.
    </para>
      </summary>
    </member>
    <member name="F:System.Messaging.HashAlgorithm.Mac">
      <summary>
        <para>
       MAC keyed hashing algorithm.
    </para>
      </summary>
    </member>
    <member name="T:System.Messaging.Message">
      <summary>
        <para>Provides access to the properties needed to define a
 Message Queuing message.</para>
      </summary>
    </member>
    <member name="F:System.Messaging.Message.InfiniteTimeout">
      <summary>
        <para> Specifies that no timeout exists.</para>
      </summary>
    </member>
    <member name="M:System.Messaging.Message.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Messaging.Message" /> class with an empty body.</para>
      </summary>
    </member>
    <member name="M:System.Messaging.Message.#ctor(System.Object)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Messaging.Message" /> class, using the <see cref="T:System.Messaging.XmlMessageFormatter" /> to serialize the specified object into the
   body of the message.</para>
      </summary>
      <param name="body">The object to be serialized into the body of the message.</param>
    </member>
    <member name="M:System.Messaging.Message.#ctor(System.Object,System.Messaging.IMessageFormatter)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Messaging.Message" /> class, using the specified formatter to serialize
   the specified object into the body
   of the message.</para>
      </summary>
      <param name="body">The object to be serialized into the body of the message.</param>
      <param name=" formatter">An <see cref="T:System.Messaging.IMessageFormatter" /> that specifies the formatter with which to serialize the message body.</param>
    </member>
    <member name="P:System.Messaging.Message.Acknowledgment">
      <summary>
        <para> Gets the
       classification of acknowledgment that this message represents.</para>
      </summary>
    </member>
    <member name="P:System.Messaging.Message.AcknowledgeType">
      <summary>
        <para> Gets or sets
      the type
      of
      acknowledgment message to be returned to the sending application.</para>
      </summary>
    </member>
    <member name="P:System.Messaging.Message.AdministrationQueue">
      <summary>
        <para>Gets or sets the queue that receives the acknowledgement messages that Message Queuing
      generates.</para>
      </summary>
    </member>
    <member name="P:System.Messaging.Message.AppSpecific">
      <summary>
        <para> Gets or
      sets additional, application-specific information.</para>
      </summary>
    </member>
    <member name="P:System.Messaging.Message.ArrivedTime">
      <summary>
        <para>Gets the time that the message arrived in the destination queue.</para>
      </summary>
    </member>
    <member name="P:System.Messaging.Message.AttachSenderId">
      <summary>
        <para> Gets or sets a value indicating whether the sender identifier should be attached
      to the message.</para>
      </summary>
    </member>
    <member name="P:System.Messaging.Message.Authenticated">
      <summary>
        <para>Gets a value indicating whether the message was
      authenticated.</para>
      </summary>
    </member>
    <member name="P:System.Messaging.Message.AuthenticationProviderName">
      <summary>
        <para> Gets or sets the name of the cryptographic
      provider used to generate the digital signature of the message.</para>
      </summary>
    </member>
    <member name="P:System.Messaging.Message.AuthenticationProviderType">
      <summary>
        <para>Gets or sets the type of cryptographic provider used to
      generate the digital signature of the
      message.</para>
      </summary>
    </member>
    <member name="P:System.Messaging.Message.Body">
      <summary>
        <para> Gets or sets the
      content of the message.</para>
      </summary>
    </member>
    <member name="P:System.Messaging.Message.BodyStream">
      <summary>
        <para>Gets or sets the information in the body of
 the message.</para>
      </summary>
    </member>
    <member name="P:System.Messaging.Message.BodyType">
      <summary>
        <para>Gets
      or sets the type of data that the message body contains.</para>
      </summary>
    </member>
    <member name="P:System.Messaging.Message.ConnectorType">
      <summary>
        <para> Gets
      or sets a value that indicates that some
      message properties typically set by Message Queuing were set by
      the sending
      application.</para>
      </summary>
    </member>
    <member name="P:System.Messaging.Message.CorrelationId">
      <summary>
        <para>Gets or sets the message identifier used by
      acknowledgment, report, and response messages to reference the original
      message.</para>
      </summary>
    </member>
    <member name="P:System.Messaging.Message.DestinationQueue">
      <summary>
        <para> Gets the intended destination queue for a message.</para>
      </summary>
    </member>
    <member name="P:System.Messaging.Message.DestinationSymmetricKey">
      <summary>
        <para>Gets or sets the symmetric key used to encrypt
      application-encrypted messages or messages sent to foreign queues.</para>
      </summary>
    </member>
    <member name="P:System.Messaging.Message.DigitalSignature">
      <summary>
        <para>Gets or sets the digital
      signature that Message Queuing uses to authenticate
      the message.</para>
      </summary>
    </member>
    <member name="P:System.Messaging.Message.EncryptionAlgorithm">
      <summary>
        <para> Gets or sets the encryption algorithm used to encrypt the
      body of a private message.</para>
      </summary>
    </member>
    <member name="P:System.Messaging.Message.Extension">
      <summary>
        <para> Gets or sets additional, application-defined information associated with the message.</para>
      </summary>
    </member>
    <member name="P:System.Messaging.Message.Formatter">
      <summary>
        <para>Gets or sets the formatter
      used to serialize an object into or deserialize an object from the message
      body.</para>
      </summary>
    </member>
    <member name="P:System.Messaging.Message.HashAlgorithm">
      <summary>
        <para>Gets or sets the hashing algorithm that Message Queuing uses when authenticating a message or creating a
      digital signature for a message.</para>
      </summary>
    </member>
    <member name="P:System.Messaging.Message.Id">
      <summary>
        <para> Gets the message's identifier.</para>
      </summary>
    </member>
    <member name="P:System.Messaging.Message.IsFirstInTransaction">
      <summary>
        <para>Gets a value indicating
      whether the message was the first message sent in a transaction.</para>
      </summary>
    </member>
    <member name="P:System.Messaging.Message.IsLastInTransaction">
      <summary>
        <para>Gets a value indicating whether the message was
      the last message sent in a transaction.</para>
      </summary>
    </member>
    <member name="P:System.Messaging.Message.Label">
      <summary>
        <para>Gets or sets an application-defined Unicode string that describes the message.</para>
      </summary>
    </member>
    <member name="P:System.Messaging.Message.MessageType">
      <summary>
        <para> Gets the message type: normal, acknowledgment, or report.</para>
      </summary>
    </member>
    <member name="P:System.Messaging.Message.Priority">
      <summary>
        <para> Gets or sets the message priority, which determines
      where in
      the queue the message is
      placed.</para>
      </summary>
    </member>
    <member name="P:System.Messaging.Message.Recoverable">
      <summary>
        <para> Gets or sets a value
      indicating whether the message is guaranteed to be delivered in the event of
      a computer failure or network problem.</para>
      </summary>
    </member>
    <member name="P:System.Messaging.Message.ResponseQueue">
      <summary>
        <para> Gets or sets the queue that receives application-generated
      response messages.</para>
      </summary>
    </member>
    <member name="P:System.Messaging.Message.SenderCertificate">
      <summary>
        <para>Gets or sets the security certificate used to authenticate messages.</para>
      </summary>
    </member>
    <member name="P:System.Messaging.Message.SenderId">
      <summary>
        <para> Gets the
      identifier of the sending
      user.</para>
      </summary>
    </member>
    <member name="P:System.Messaging.Message.SenderVersion">
      <summary>
        <para> Gets the version of Message Queuing used to send the message.</para>
      </summary>
    </member>
    <member name="P:System.Messaging.Message.SentTime">
      <summary>
        <para> Gets the date and time on the sending computer that the message was sent by
      the source queue manager.</para>
      </summary>
    </member>
    <member name="P:System.Messaging.Message.SourceMachine">
      <summary>
        <para> Gets the computer from which the message originated.</para>
      </summary>
    </member>
    <member name="P:System.Messaging.Message.TimeToBeReceived">
      <summary>
        <para> Gets or
      sets the maximum
      amount of time for the message to be received from the destination
      queue.</para>
      </summary>
    </member>
    <member name="P:System.Messaging.Message.TimeToReachQueue">
      <summary>
        <para> Gets or sets the maximum amount of time for the message to reach
      the queue.</para>
      </summary>
    </member>
    <member name="P:System.Messaging.Message.TransactionId">
      <summary>
        <para> Gets the
      identifier for the transaction of which the message was a part.</para>
      </summary>
    </member>
    <member name="P:System.Messaging.Message.TransactionStatusQueue">
      <summary>
        <para> Gets the
      transaction status queue on the source computer.</para>
      </summary>
    </member>
    <member name="P:System.Messaging.Message.UseAuthentication">
      <summary>
        <para> Gets or sets a value indicating whether the message was
      (or must be) authenticated before being sent.</para>
      </summary>
    </member>
    <member name="P:System.Messaging.Message.UseDeadLetterQueue">
      <summary>
        <para> Gets or sets a value indicating whether a copy of the
      message that could not be delivered should be sent to a dead-letter queue.</para>
      </summary>
    </member>
    <member name="P:System.Messaging.Message.UseEncryption">
      <summary>
        <para> Gets or sets a value indicating whether to make the message private.</para>
      </summary>
    </member>
    <member name="P:System.Messaging.Message.UseJournalQueue">
      <summary>
        <para> Gets or sets a value indicating whether a copy of the message should be kept in a machine
      journal on the originating computer.</para>
      </summary>
    </member>
    <member name="P:System.Messaging.Message.UseTracing">
      <summary>
        <para> Gets or sets a value
      indicating whether to trace a message as
      it moves toward its destination queue.</para>
      </summary>
    </member>
    <member name="T:System.Messaging.MessageEnumerator">
      <summary>
        <para>Provides a
      forward-only cursor to enumerate through messages in a
      message queue.</para>
      </summary>
    </member>
    <member name="M:System.Messaging.MessageEnumerator.Close">
      <summary>
        <para> Frees the resources associated with the enumerator.
      </para>
      </summary>
    </member>
    <member name="M:System.Messaging.MessageEnumerator.Dispose">
      <summary>
        <para>Releases all resources used by the <see cref="T:System.Messaging.MessageEnumerator" />.</para>
      </summary>
    </member>
    <member name="M:System.Messaging.MessageEnumerator.Dispose(System.Boolean)">
      <summary>
        <para>Releases the unmanaged resources used by the <see cref="T:System.Messaging.MessageEnumerator" /> and optionally releases the managed
   resources.</para>
      </summary>
      <param name="disposing">
        <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</param>
    </member>
    <member name="M:System.Messaging.MessageEnumerator.MoveNext">
      <summary>
        <para>Advances the enumerator to the next message in the queue, if one
      is currently available.</para>
      </summary>
      <returns>
        <para>
          <see langword="true" /> if the enumerator was
   succesfully advanced to the next message; <see langword="false" /> if the enumerator has
   reached the end of the queue.</para>
      </returns>
    </member>
    <member name="M:System.Messaging.MessageEnumerator.MoveNext(System.TimeSpan)">
      <summary>
        <para>Advances the enumerator to the next message in the queue.
 If the enumerator is positioned at the end of the queue, <see cref="M:System.Messaging.MessageEnumerator.MoveNext" /> waits until a message is available or the
 given timeout
 expires.</para>
      </summary>
      <param name="timeout">The <see cref="T:System.TimeSpan" /> to wait for a message to be available if the enumerator is positioned at the end of the queue.</param>
      <returns>
        <para>
          <see langword="true" /> if the enumerator successfully
 advanced to the next message; <see langword="false" /> if the enumerator has
 reached the end of the queue and a message does not become available within the
 time specified by the <paramref name="timeout" />
 parameter.</para>
      </returns>
    </member>
    <member name="M:System.Messaging.MessageEnumerator.RemoveCurrent">
      <summary>
        <para>Removes the current message from a transactional or non-transactional queue and returns the
      message to the calling application. There is no timeout specified for a message
      to arrive in the queue.</para>
      </summary>
      <returns>
        <para>A <see cref="T:System.Messaging.Message" /> that references the first message available in the queue.</para>
      </returns>
    </member>
    <member name="M:System.Messaging.MessageEnumerator.RemoveCurrent(System.Messaging.MessageQueueTransaction)">
      <summary>
        <para> Removes the current message from a transactional queue
      and returns the message to the calling application. There is no
      timeout specified for a message to arrive in the queue.</para>
      </summary>
      <param name="transaction">The <see cref="T:System.Messaging.MessageQueueTransaction" /> object that specifies the transaction in which the message will be removed.</param>
      <returns>
        <para>A <see cref="T:System.Messaging.Message" /> that references the first message available in the queue.</para>
      </returns>
    </member>
    <member name="M:System.Messaging.MessageEnumerator.RemoveCurrent(System.Messaging.MessageQueueTransactionType)">
      <summary>
        <para> Removes the current message from a queue
      and returns the message to the calling application. There is no
      timeout specified for a message to arrive in the queue.</para>
      </summary>
      <param name="transactionType">One of the <see cref="T:System.Messaging.MessageQueueTransactionType" /> values, describing the type of transaction context to associate with the message.</param>
      <returns>
        <para>A <see cref="T:System.Messaging.Message" /> that references the first message available in the queue.</para>
      </returns>
    </member>
    <member name="M:System.Messaging.MessageEnumerator.RemoveCurrent(System.TimeSpan)">
      <summary>
        <para> Removes the current message from the queue and returns
      the message to the calling application. If there is a message to remove, the method returns it
      immediately. Otherwise, the method waits the specified timeout for a new message to arrive.</para>
      </summary>
      <param name="timeout">The interval of time to wait for a message to arrive in the queue.</param>
      <returns>
        <para>A <see cref="T:System.Messaging.Message" /> that references the first message available in the queue.</para>
      </returns>
    </member>
    <member name="M:System.Messaging.MessageEnumerator.RemoveCurrent(System.TimeSpan,System.Messaging.MessageQueueTransaction)">
      <summary>
        <para> Removes the current message from a transactional queue
      and returns the message to the calling application. If there is a message to
      remove, the method returns it
      immediately. Otherwise, the method waits the specified timeout for a new message to arrive.</para>
      </summary>
      <param name="timeout">The interval of time to wait for the message to be removed.</param>
      <param name="transaction">The <see cref="T:System.Messaging.MessageQueueTransaction" /> object that specifies the transaction context for the message. </param>
      <returns>
        <para>A <see cref="T:System.Messaging.Message" /> that references the first message available in the queue.</para>
      </returns>
    </member>
    <member name="M:System.Messaging.MessageEnumerator.RemoveCurrent(System.TimeSpan,System.Messaging.MessageQueueTransactionType)">
      <summary>
        <para> Removes the current message from a queue and returns the message to the calling application. If there is a
      message to remove, the method returns it immediately. Otherwise, the method
      waits the specified timeout for a new message to arrive.</para>
      </summary>
      <param name="timeout">The interval of time to wait for the message to be removed.</param>
      <param name="transactionType">One of the <see cref="T:System.Messaging.MessageQueueTransactionType" /> values, describing the type of transaction context to associate with the message.</param>
      <returns>
        <para>A <see cref="T:System.Messaging.Message" /> that references the first message available in the queue.</para>
      </returns>
    </member>
    <member name="M:System.Messaging.MessageEnumerator.Reset">
      <summary>
        <para> Resets the current enumerator so it points to
      the head of the queue.</para>
      </summary>
    </member>
    <member name="P:System.Messaging.MessageEnumerator.Current">
      <summary>
        <para>Gets the current <see cref="T:System.Messaging.Message" /> that this
 enumerator points to.</para>
      </summary>
    </member>
    <member name="P:System.Messaging.MessageEnumerator.CursorHandle">
      <summary>
        <para>Gets the native Message Queuing cursor handle used to browse messages
      in the queue.</para>
      </summary>
    </member>
    <member name="T:System.Messaging.MessagePriority">
      <summary>
        <para> Specifies the priority Message Queuing applies to a message while it
      is en route to a queue, and when inserting the message into the destination
      queue.</para>
      </summary>
    </member>
    <member name="F:System.Messaging.MessagePriority.Lowest">
      <summary>
        <para>Lowest message priority.</para>
      </summary>
    </member>
    <member name="F:System.Messaging.MessagePriority.VeryLow">
      <summary>
        <para>Between <see langword="Low" /> and <see langword="Lowest" /> message priority.</para>
      </summary>
    </member>
    <member name="F:System.Messaging.MessagePriority.Low">
      <summary>
        <para>Low message priority.</para>
      </summary>
    </member>
    <member name="F:System.Messaging.MessagePriority.Normal">
      <summary>
        <para>Normal message priority.</para>
      </summary>
    </member>
    <member name="F:System.Messaging.MessagePriority.AboveNormal">
      <summary>
        <para>Between <see langword="High" /> and 
<see langword="Normal" /> message priority.</para>
      </summary>
    </member>
    <member name="F:System.Messaging.MessagePriority.High">
      <summary>
        <para>High message priority.</para>
      </summary>
    </member>
    <member name="F:System.Messaging.MessagePriority.VeryHigh">
      <summary>
        <para>Between <see langword="Highest" /> and 
<see langword="High" /> message priority.</para>
      </summary>
    </member>
    <member name="F:System.Messaging.MessagePriority.Highest">
      <summary>
        <para>Highest message priority.</para>
      </summary>
    </member>
    <member name="T:System.Messaging.MessagePropertyFilter">
      <summary>
        <para>Controls and selects the properties that are retrieved
      when peeking or receiving messages from a message queue.</para>
      </summary>
    </member>
    <member name="M:System.Messaging.MessagePropertyFilter.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Messaging.MessagePropertyFilter" /> class and sets
   default values for all properties.</para>
      </summary>
    </member>
    <member name="M:System.Messaging.MessagePropertyFilter.ClearAll">
      <summary>
        <para>Sets all Boolean filter values to <see langword="false" />, 
    so that no message
    properties are retrieved when receiving a message.</para>
      </summary>
      <returns>
        <para>Use <see cref="M:System.Messaging.MessagePropertyFilter.ClearAll" /> to set all <see cref="T:System.Messaging.MessagePropertyFilter" /> Boolean properties to <see langword="false" /> . This causes no message 
    properties to be retrieved when receiving messages. <see cref="M:System.Messaging.MessagePropertyFilter.ClearAll" /> does not affect the values for <see cref="P:System.Messaging.MessagePropertyFilter.DefaultBodySize" />, <see cref="P:System.Messaging.MessagePropertyFilter.DefaultExtensionSize" />, or <see cref="P:System.Messaging.MessagePropertyFilter.DefaultLabelSize" />
    .</para>
        <para>After calling <see cref="M:System.Messaging.MessagePropertyFilter.ClearAll" />, it is necessary to set at
 least one filter property to <see langword="true" /> in order to receive data
 related to a message. You can either set individual properties to
 <see langword="true" />, or you can call <see cref="M:System.Messaging.MessagePropertyFilter.SetDefaults" /> or <see cref="M:System.Messaging.MessagePropertyFilter.SetAll" />. </para>
      </returns>
    </member>
    <member name="M:System.Messaging.MessagePropertyFilter.SetDefaults">
      <summary>
        <para>Sets the filter values of common Message Queuing
      properties to <see langword="true" /> and the integer-valued properties to their default
      values.</para>
      </summary>
    </member>
    <member name="M:System.Messaging.MessagePropertyFilter.SetAll">
      <summary>
        <para>Specifies to retrieve all
       message properties when receiving a message.</para>
      </summary>
    </member>
    <member name="P:System.Messaging.MessagePropertyFilter.Acknowledgment">
      <summary>
        <para> Gets or sets a value indicating whether to retrieve
    <see cref="P:System.Messaging.Message.Acknowledgment" qualify="true" /> property information when receiving or peeking
       a message.</para>
      </summary>
    </member>
    <member name="P:System.Messaging.MessagePropertyFilter.AcknowledgeType">
      <summary>
        <para> Gets or sets a value indicating whether to retrieve <see cref="P:System.Messaging.Message.AcknowledgeType" qualify="true" /> property information when receiving or peeking
    a message.</para>
      </summary>
    </member>
    <member name="P:System.Messaging.MessagePropertyFilter.AdministrationQueue">
      <summary>
        <para> Gets or sets a value indicating whether to retrieve <see cref="P:System.Messaging.Message.AdministrationQueue" qualify="true" /> property information when receiving or peeking
   a message.</para>
      </summary>
    </member>
    <member name="P:System.Messaging.MessagePropertyFilter.AppSpecific">
      <summary>
        <para> Gets or sets a value indicating whether to retrieve <see cref="P:System.Messaging.Message.AppSpecific" qualify="true" /> property information when receiving or peeking
    a message.</para>
      </summary>
    </member>
    <member name="P:System.Messaging.MessagePropertyFilter.ArrivedTime">
      <summary>
        <para> Gets or sets a value indicating whether to retrieve <see cref="P:System.Messaging.Message.ArrivedTime" qualify="true" /> property information when receiving or peeking
   a message.</para>
      </summary>
    </member>
    <member name="P:System.Messaging.MessagePropertyFilter.AttachSenderId">
      <summary>
        <para> Gets or sets a value indicating whether to retrieve <see cref="P:System.Messaging.Message.AttachSenderId" qualify="true" /> property information when receiving or peeking
    a message.</para>
      </summary>
    </member>
    <member name="P:System.Messaging.MessagePropertyFilter.Authenticated">
      <summary>
        <para> Gets or sets a value indicating whether to retrieve <see cref="P:System.Messaging.Message.Authenticated" qualify="true" /> property information when receiving or peeking
    a message.</para>
      </summary>
    </member>
    <member name="P:System.Messaging.MessagePropertyFilter.AuthenticationProviderName">
      <summary>
        <para> Gets or sets a value indicating whether to retrieve <see cref="P:System.Messaging.Message.AuthenticationProviderName" qualify="true" /> property information when receiving or peeking
    a message.</para>
      </summary>
    </member>
    <member name="P:System.Messaging.MessagePropertyFilter.AuthenticationProviderType">
      <summary>
        <para> Gets or sets a value indicating whether to retrieve <see cref="P:System.Messaging.Message.AuthenticationProviderType" qualify="true" /> property information when receiving or peeking
    a message.</para>
      </summary>
    </member>
    <member name="P:System.Messaging.MessagePropertyFilter.Body">
      <summary>
        <para> Gets or sets a value indicating whether to retrieve <see cref="P:System.Messaging.Message.Body" qualify="true" /> property information when receiving or peeking
   a message.</para>
      </summary>
    </member>
    <member name="P:System.Messaging.MessagePropertyFilter.ConnectorType">
      <summary>
        <para> Gets or sets a value indicating whether to retrieve <see cref="P:System.Messaging.Message.ConnectorType" qualify="true" /> property information when receiving or peeking
    a message.</para>
      </summary>
    </member>
    <member name="P:System.Messaging.MessagePropertyFilter.CorrelationId">
      <summary>
        <para> Gets or sets a value indicating whether to retrieve <see cref="P:System.Messaging.Message.CorrelationId" qualify="true" /> property information when receiving or peeking
   a message.</para>
      </summary>
    </member>
    <member name="P:System.Messaging.MessagePropertyFilter.DefaultBodySize">
      <summary>
        <para> Gets or sets the size,
       in bytes, of the default body buffer.</para>
      </summary>
    </member>
    <member name="P:System.Messaging.MessagePropertyFilter.DefaultExtensionSize">
      <summary>
        <para> Gets or sets the
       size, in bytes, of the default extension buffer.</para>
      </summary>
    </member>
    <member name="P:System.Messaging.MessagePropertyFilter.DefaultLabelSize">
      <summary>
        <para> Gets or sets the size,
       in bytes, of the default label buffer.</para>
      </summary>
    </member>
    <member name="P:System.Messaging.MessagePropertyFilter.DestinationQueue">
      <summary>
        <para> Gets or sets a value indicating whether to retrieve <see cref="P:System.Messaging.Message.DestinationQueue" qualify="true" /> property information when receiving or peeking
    a message.</para>
      </summary>
    </member>
    <member name="P:System.Messaging.MessagePropertyFilter.DestinationSymmetricKey">
      <summary>
        <para> Gets or sets a value indicating whether to retrieve
    <see cref="P:System.Messaging.Message.DestinationSymmetricKey" qualify="true" /> property information when receiving or peeking
       a message.</para>
      </summary>
    </member>
    <member name="P:System.Messaging.MessagePropertyFilter.DigitalSignature">
      <summary>
        <para> Gets or sets a value indicating whether to retrieve <see cref="P:System.Messaging.Message.DigitalSignature" qualify="true" /> property information when receiving or peeking
    a message.</para>
      </summary>
    </member>
    <member name="P:System.Messaging.MessagePropertyFilter.EncryptionAlgorithm">
      <summary>
        <para> Gets or sets a value indicating whether to retrieve <see cref="P:System.Messaging.Message.EncryptionAlgorithm" qualify="true" /> property information when receiving or peeking
    a message.</para>
      </summary>
    </member>
    <member name="P:System.Messaging.MessagePropertyFilter.Extension">
      <summary>
        <para> Gets or sets a value indicating whether to retrieve <see cref="P:System.Messaging.Message.Extension" qualify="true" /> property information when receiving or peeking
    a message.</para>
      </summary>
    </member>
    <member name="P:System.Messaging.MessagePropertyFilter.HashAlgorithm">
      <summary>
        <para> Gets or sets a value indicating whether to retrieve <see cref="P:System.Messaging.Message.HashAlgorithm" qualify="true" /> property information when receiving or peeking
    a message.</para>
      </summary>
    </member>
    <member name="P:System.Messaging.MessagePropertyFilter.Id">
      <summary>
        <para> Gets or sets a value indicating whether to retrieve <see cref="P:System.Messaging.Message.Id" qualify="true" />
property information when receiving or peeking a message.</para>
      </summary>
    </member>
    <member name="P:System.Messaging.MessagePropertyFilter.IsFirstInTransaction">
      <summary>
        <para> Gets or sets a value indicating whether to retrieve <see cref="P:System.Messaging.Message.IsFirstInTransaction" qualify="true" /> property information when receiving or peeking
    a message.</para>
      </summary>
    </member>
    <member name="P:System.Messaging.MessagePropertyFilter.IsLastInTransaction">
      <summary>
        <para> Gets or sets a value indicating whether to retrieve <see cref="P:System.Messaging.Message.IsLastInTransaction" qualify="true" /> property information when receiving or peeking
    a message.</para>
      </summary>
    </member>
    <member name="P:System.Messaging.MessagePropertyFilter.Label">
      <summary>
        <para> Gets or sets a value indicating whether to retrieve <see cref="P:System.Messaging.Message.Label" qualify="true" /> property information when receiving or peeking
   a message.</para>
      </summary>
    </member>
    <member name="P:System.Messaging.MessagePropertyFilter.MessageType">
      <summary>
        <para> Gets or sets a value indicating whether to retrieve <see cref="P:System.Messaging.Message.MessageType" qualify="true" /> property information when receiving or peeking
    a message.</para>
      </summary>
    </member>
    <member name="P:System.Messaging.MessagePropertyFilter.Priority">
      <summary>
        <para> Gets or sets a value indicating whether to retrieve <see cref="P:System.Messaging.Message.Priority" qualify="true" /> property information when receiving or peeking
   a message.</para>
      </summary>
    </member>
    <member name="P:System.Messaging.MessagePropertyFilter.Recoverable">
      <summary>
        <para> Gets or sets a value indicating whether to retrieve <see cref="P:System.Messaging.Message.Recoverable" qualify="true" /> property information when receiving or peeking
    a message.</para>
      </summary>
    </member>
    <member name="P:System.Messaging.MessagePropertyFilter.ResponseQueue">
      <summary>
        <para> Gets or sets a value indicating whether to retrieve <see cref="P:System.Messaging.Message.ResponseQueue" qualify="true" /> property information when receiving or peeking
   a message.</para>
      </summary>
    </member>
    <member name="P:System.Messaging.MessagePropertyFilter.SenderCertificate">
      <summary>
        <para> Gets or sets a value indicating whether to retrieve <see cref="P:System.Messaging.Message.SenderCertificate" qualify="true" /> property information when receiving or peeking
    a message.</para>
      </summary>
    </member>
    <member name="P:System.Messaging.MessagePropertyFilter.SenderId">
      <summary>
        <para> Gets or sets a value indicating whether to retrieve <see cref="P:System.Messaging.Message.SenderId" qualify="true" /> property information when receiving or peeking
    a message.</para>
      </summary>
    </member>
    <member name="P:System.Messaging.MessagePropertyFilter.SenderVersion">
      <summary>
        <para> Gets or sets a value indicating whether to retrieve <see cref="P:System.Messaging.Message.SenderVersion" qualify="true" /> property information when receiving or peeking
    a message.</para>
      </summary>
    </member>
    <member name="P:System.Messaging.MessagePropertyFilter.SentTime">
      <summary>
        <para> Gets or sets a value indicating whether to retrieve <see cref="P:System.Messaging.Message.SentTime" qualify="true" /> property information when receiving or peeking
   a message.</para>
      </summary>
    </member>
    <member name="P:System.Messaging.MessagePropertyFilter.SourceMachine">
      <summary>
        <para> Gets or sets a value indicating whether to retrieve <see cref="P:System.Messaging.Message.SourceMachine" qualify="true" /> property information when receiving or peeking
    a message.</para>
      </summary>
    </member>
    <member name="P:System.Messaging.MessagePropertyFilter.TimeToBeReceived">
      <summary>
        <para> Gets or sets a value indicating whether to retrieve <see cref="P:System.Messaging.Message.TimeToBeReceived" qualify="true" /> property information when receiving or peeking
    a message.</para>
      </summary>
    </member>
    <member name="P:System.Messaging.MessagePropertyFilter.TimeToReachQueue">
      <summary>
        <para> Gets or sets a value indicating whether to retrieve <see cref="P:System.Messaging.Message.TimeToReachQueue" qualify="true" /> property information when receiving or peeking
    a message.</para>
      </summary>
    </member>
    <member name="P:System.Messaging.MessagePropertyFilter.TransactionId">
      <summary>
        <para> Gets or sets a value indicating whether to retrieve <see cref="P:System.Messaging.Message.TransactionId" qualify="true" /> property information when receiving or peeking
    a message.</para>
      </summary>
    </member>
    <member name="P:System.Messaging.MessagePropertyFilter.TransactionStatusQueue">
      <summary>
        <para> Gets or sets a value indicating whether to retrieve <see cref="P:System.Messaging.Message.TransactionStatusQueue" qualify="true" /> property information when receiving or peeking
    a message.</para>
      </summary>
    </member>
    <member name="P:System.Messaging.MessagePropertyFilter.UseAuthentication">
      <summary>
        <para> Gets or sets a value indicating whether to retrieve <see cref="P:System.Messaging.Message.UseAuthentication" qualify="true" /> property information when receiving or peeking
    a message.</para>
      </summary>
    </member>
    <member name="P:System.Messaging.MessagePropertyFilter.UseDeadLetterQueue">
      <summary>
        <para> Gets or sets a value indicating whether to retrieve <see cref="P:System.Messaging.Message.UseDeadLetterQueue" qualify="true" /> property information when receiving or peeking
    a message.</para>
      </summary>
    </member>
    <member name="P:System.Messaging.MessagePropertyFilter.UseEncryption">
      <summary>
        <para> Gets or sets a value indicating whether to retrieve <see cref="P:System.Messaging.Message.UseEncryption" qualify="true" /> property information when receiving or peeking
    a message.</para>
      </summary>
    </member>
    <member name="P:System.Messaging.MessagePropertyFilter.UseJournalQueue">
      <summary>
        <para> Gets or sets a value indicating whether to retrieve <see cref="P:System.Messaging.Message.UseJournalQueue" qualify="true" /> property information when receiving or peeking
    a message.</para>
      </summary>
    </member>
    <member name="P:System.Messaging.MessagePropertyFilter.UseTracing">
      <summary>
        <para> Gets or sets a value indicating whether to retrieve <see cref="P:System.Messaging.Message.UseTracing" qualify="true" /> property information when receiving or peeking
    a message.</para>
      </summary>
    </member>
    <member name="T:System.Messaging.MessageQueue">
      <summary>
        <para> Provides access to a queue on a Message Queuing server.</para>
      </summary>
    </member>
    <member name="F:System.Messaging.MessageQueue.InfiniteTimeout">
      <summary>
        <para> 
       Specifies
       that no time-out exists for methods that peek or receive messages.</para>
      </summary>
    </member>
    <member name="F:System.Messaging.MessageQueue.InfiniteQueueSize">
      <summary>
        <para>Specifies that no size restriction exists for a queue.</para>
      </summary>
    </member>
    <member name="M:System.Messaging.MessageQueue.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Messaging.MessageQueue" /> class. After the default constructor initializes the new instance, you must set
   the instance's <see cref="P:System.Messaging.MessageQueue.Path" /> property before you
   can use the instance.</para>
      </summary>
    </member>
    <member name="M:System.Messaging.MessageQueue.#ctor(System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Messaging.MessageQueue" /> class that references the Message Queuing
   queue at the specified path.</para>
      </summary>
      <param name="path">The location of the queue referenced by this <see cref="T:System.Messaging.MessageQueue" /> . For information on the proper syntax for this parameter, see the Remarks section.</param>
    </member>
    <member name="M:System.Messaging.MessageQueue.#ctor(System.String,System.Boolean)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Messaging.MessageQueue" /> class that references the Message Queuing
   queue at the specified path
   and with the specified read-access restriction.</para>
      </summary>
      <param name="path">The location of the queue referenced by this <see cref="T:System.Messaging.MessageQueue" /> , which can be "." for the local computer. For information on the proper syntax for this parameter, see the Remarks section.</param>
      <param name="sharedModeDenyReceive">
        <see langword="true" /> to grant exclusive read access to the first application that accesses the queue; otherwise, <see langword="false" /> .</param>
    </member>
    <member name="M:System.Messaging.MessageQueue.BeginPeek">
      <summary>
        <para> Initiates an asynchronous peek
      operation that has no time-out. The operation is not complete until a message becomes
      available in the
      queue.</para>
      </summary>
      <returns>
        <para>The <see cref="T:System.IAsyncResult" /> that identifies
   the posted asynchronous request.</para>
      </returns>
    </member>
    <member name="M:System.Messaging.MessageQueue.BeginPeek(System.TimeSpan)">
      <summary>
        <para> Initiates an asynchronous peek
      operation that has a specified time-out. The operation is not complete until either a message becomes available
      in the queue or the
      time-out occurs.</para>
      </summary>
      <param name="timeout">A <see cref="T:System.TimeSpan" /> that indicates the interval of time to wait for a message to become available.</param>
      <returns>
        <para>The <see cref="T:System.IAsyncResult" />
that identifies the
posted asynchronous request.</para>
      </returns>
    </member>
    <member name="M:System.Messaging.MessageQueue.BeginPeek(System.TimeSpan,System.Object)">
      <summary>
        <para> Initiates an asynchronous peek operation that has a
      specified time-out and a
      specified state object, which provides associated information
      throughout the operation's lifetime. The
      operation is not complete until either a message becomes available in the
      queue or the time-out
      occurs.</para>
      </summary>
      <param name="timeout">A <see cref="T:System.TimeSpan" /> that indicates the interval of time to wait for a message to become available.</param>
      <param name="stateObject">A state object, specified by the application, that contains information associated with the asynchronous operation.</param>
      <returns>
        <para>The <see cref="T:System.IAsyncResult" /> that identifies
   the posted asynchronous request.</para>
      </returns>
    </member>
    <member name="M:System.Messaging.MessageQueue.BeginPeek(System.TimeSpan,System.Object,System.AsyncCallback)">
      <summary>
        <para> Initiates an asynchronous peek operation that has a
      specified time-out and a specified
      state
      object, which provides associated information throughout
      the operation's lifetime.
      This overload receives notification, through a callback, of the identity of the event handler
      for the operation. The operation is not complete until either a message becomes available
      in the queue or the time-out
      occurs.</para>
      </summary>
      <param name="timeout">A <see cref="T:System.TimeSpan" /> that indicates the interval of time to wait for a message to become available.</param>
      <param name="stateObject">A state object, specified by the application, that contains information associated with the asynchronous operation.</param>
      <param name="callback">The <see cref="T:System.AsyncCallback" /> that will receive the notification of the asynchronous operation completion.</param>
      <returns>
        <para>The <see cref="T:System.IAsyncResult" />
that identifies the
posted asynchronous request.</para>
      </returns>
    </member>
    <member name="M:System.Messaging.MessageQueue.BeginReceive">
      <summary>
        <para> Initiates an
      asynchronous receive operation
      that has no time-out. The operation is not complete until a message becomes
      available in the
      queue.</para>
      </summary>
      <returns>
        <para>The <see cref="T:System.IAsyncResult" />
that identifies the
posted asynchronous request.</para>
      </returns>
    </member>
    <member name="M:System.Messaging.MessageQueue.BeginReceive(System.TimeSpan)">
      <summary>
        <para> Initiates an
      asynchronous receive operation that has a specified time-out. The operation is not complete until
      either a message becomes available in the
      queue or the time-out
      occurs.</para>
      </summary>
      <param name="timeout">A <see cref="T:System.TimeSpan" /> that indicates the interval of time to wait for a message to become available.</param>
      <returns>
        <para>The <see cref="T:System.IAsyncResult" />
that identifies the
posted asynchronous request.</para>
      </returns>
    </member>
    <member name="M:System.Messaging.MessageQueue.BeginReceive(System.TimeSpan,System.Object)">
      <summary>
        <para> Initiates an asynchronous receive operation
      that has a
      specified time-out and a specified state object, which provides associated information
      throughout the operation's lifetime. The operation
      is not complete until either a message becomes available in the queue or the
      time-out occurs.</para>
      </summary>
      <param name="timeout">A <see cref="T:System.TimeSpan" /> that indicates the interval of time to wait for a message to become available.</param>
      <param name="stateObject">A state object, specified by the application, that contains information associated with the asynchronous operation.</param>
      <returns>
        <para>The <see cref="T:System.IAsyncResult" />
that identifies the
posted asynchronous request.</para>
      </returns>
    </member>
    <member name="M:System.Messaging.MessageQueue.BeginReceive(System.TimeSpan,System.Object,System.AsyncCallback)">
      <summary>
        <para> Initiates an asynchronous receive operation that has a
      specified time-out and a specified state object, which provides associated
      information throughout the operation's
      lifetime. This overload receives notification, through a callback, of the identity of
      the event handler for the operation. The operation is not complete until either
      a message becomes available in the queue or the time-out
      occurs.</para>
      </summary>
      <param name="timeout">A <see cref="T:System.TimeSpan" /> that indicates the interval of time to wait for a message to become available.</param>
      <param name="stateObject">A state object, specified by the application, that contains information associated with the asynchronous operation.</param>
      <param name="callback">The <see cref="T:System.AsyncCallback" /> that will receive the notification of the asynchronous operation completion.</param>
      <returns>
        <para>The <see cref="T:System.IAsyncResult" /> that identifies the
   posted asynchronous request.</para>
      </returns>
    </member>
    <member name="M:System.Messaging.MessageQueue.ClearConnectionCache">
      <summary>
        <para>Clears the connection cache.</para>
      </summary>
    </member>
    <member name="M:System.Messaging.MessageQueue.Close">
      <summary>
        <para>Frees all resources allocated by the <see cref="T:System.Messaging.MessageQueue" />
.</para>
      </summary>
    </member>
    <member name="M:System.Messaging.MessageQueue.Create(System.String)">
      <summary>
        <para> Creates a nontransactional Message Queuing queue at the
      specified path.</para>
      </summary>
      <param name="path">The path of the queue to create.</param>
      <returns>
        <para>A <see cref="T:System.Messaging.MessageQueue" /> that represents the
   new queue.</para>
      </returns>
    </member>
    <member name="M:System.Messaging.MessageQueue.Create(System.String,System.Boolean)">
      <summary>
        <para> Creates a transactional or nontransactional Message Queuing queue at the
      specified path.</para>
      </summary>
      <param name="path">The path of the queue to create.</param>
      <param name="transactional">
        <see langword="true" /> to create a transactional queue; <see langword="false" /> to create a nontransactional queue.</param>
      <returns>
        <para>A <see cref="T:System.Messaging.MessageQueue" /> that represents the new
   queue.</para>
      </returns>
    </member>
    <member name="M:System.Messaging.MessageQueue.Delete(System.String)">
      <summary>
        <para> Deletes a queue on a
      Message Queuing server.</para>
      </summary>
      <param name="path">The location of the queue to be deleted.</param>
    </member>
    <member name="M:System.Messaging.MessageQueue.EndPeek(System.IAsyncResult)">
      <summary>
        <para> Completes the specified asynchronous peek
      operation.</para>
      </summary>
      <param name="asyncResult">The <see cref="T:System.IAsyncResult" /> that identifies the asynchronous peek operation to finish, and from which to retrieve an end result.</param>
      <returns>
        <para>The <see cref="T:System.Messaging.Message" /> associated with the completed asynchronous
   operation.</para>
      </returns>
    </member>
    <member name="M:System.Messaging.MessageQueue.EndReceive(System.IAsyncResult)">
      <summary>
        <para> Completes the specified asynchronous receive
      operation.</para>
      </summary>
      <param name="asyncResult">The <see cref="T:System.IAsyncResult" /> that identifies the asynchronous receive operation to finish, and from which to retrieve an end result.</param>
      <returns>
        <para>The <see cref="T:System.Messaging.Message" />
associated with the completed asynchronous operation.</para>
      </returns>
    </member>
    <member name="M:System.Messaging.MessageQueue.Exists(System.String)">
      <summary>
        <para>Determines whether a Message Queuing queue at the specified path
      exists.</para>
      </summary>
      <param name="path">The location of the queue to find.</param>
      <returns>
        <para>
          <see langword="true" /> if a queue with the specified
   path exists; otherwise, <see langword="false" /> .</para>
      </returns>
    </member>
    <member name="M:System.Messaging.MessageQueue.GetAllMessages">
      <summary>
        <para>Returns all the messages that are in the queue.</para>
      </summary>
      <returns>
        <para>An array of type <see cref="T:System.Messaging.Message" /> that represents all the messages in the
   queue, in the same order as they appear in the Message Queuing
   queue.</para>
      </returns>
    </member>
    <member name="M:System.Messaging.MessageQueue.GetEnumerator">
      <summary>
        <para>Enumerates the messages in a queue.</para>
      </summary>
      <returns>
        <para>An <see cref="T:System.Collections.IEnumerator" /> that provides a dynamic connection to the 
   messages in the queue.</para>
      </returns>
    </member>
    <member name="M:System.Messaging.MessageQueue.GetMachineId(System.String)">
      <summary>
        <para> Gets the identifier of the computer on
      which the queue referenced by this <see cref="T:System.Messaging.MessageQueue" />
      is located.</para>
      </summary>
      <param name="machineName">The name of the computer that contains the queue, without the two preceding backslashes (\\).</param>
      <returns>
        <para>A <see cref="T:System.Guid" />
that represents a unique identifier for the computer on which the queue
is located. </para>
      </returns>
    </member>
    <member name="M:System.Messaging.MessageQueue.GetMessageQueueEnumerator">
      <summary>
        <para>Provides forward-only cursor semantics to enumerate through all public
      queues on the network.</para>
      </summary>
      <returns>
        <para>A <see cref="T:System.Messaging.MessageQueueEnumerator" /> that provides a dynamic listing of all the public message
   queues on the network.</para>
      </returns>
    </member>
    <member name="M:System.Messaging.MessageQueue.GetMessageQueueEnumerator(System.Messaging.MessageQueueCriteria)">
      <summary>
        <para>Provides forward-only cursor semantics to enumerate through all public queues on the
      network that meet the specified criteria.</para>
      </summary>
      <param name="criteria">A <see cref="T:System.Messaging.MessageQueueCriteria" /> that contains the criteria used to filter the available message queues.</param>
      <returns>
        <para>A <see cref="T:System.Messaging.MessageQueueEnumerator" /> that provides a dynamic
   listing of the public message queues on the network that satisfy the restrictions
   specified by the <paramref name="criteria" />
   parameter.</para>
      </returns>
    </member>
    <member name="M:System.Messaging.MessageQueue.GetMessageEnumerator">
      <summary>
        <para> Creates an enumerator object for all the
      messages in the
      queue.</para>
      </summary>
      <returns>
        <para>The <see cref="T:System.Messaging.MessageEnumerator" /> holding
   the messages that
   are contained in the
   queue.</para>
      </returns>
    </member>
    <member name="M:System.Messaging.MessageQueue.GetPrivateQueuesByMachine(System.String)">
      <summary>
        <para>Retrieves all the private queues on
      the specified computer.</para>
      </summary>
      <param name="machineName">The computer from which to retrieve the private queues.</param>
      <returns>
        <para> An array of <see cref="T:System.Messaging.MessageQueue" /> objects
   that reference the retrieved private
   queues.</para>
      </returns>
    </member>
    <member name="M:System.Messaging.MessageQueue.GetPublicQueues">
      <summary>
        <para>Retrieves all the public queues on the network.</para>
      </summary>
      <returns>
        <para>An array of <see cref="T:System.Messaging.MessageQueue" />
objects that reference
the retrieved public queues.</para>
      </returns>
    </member>
    <member name="M:System.Messaging.MessageQueue.GetPublicQueues(System.Messaging.MessageQueueCriteria)">
      <summary>
        <para>Retrieves all the public queues on the network that meet the specified criteria.</para>
      </summary>
      <param name="criteria">A <see cref="T:System.Messaging.MessageQueueCriteria" /> that contains the criteria used to filter the queues.</param>
      <returns>
        <para>An array of <see cref="T:System.Messaging.MessageQueue" /> objects that reference
   the retrieved public queues.</para>
      </returns>
    </member>
    <member name="M:System.Messaging.MessageQueue.GetPublicQueuesByCategory(System.Guid)">
      <summary>
        <para>Retrieves all the public queues
      on the network that belong to the specified category.</para>
      </summary>
      <param name="category">A <see cref="T:System.Guid" /> that groups the set of queues to be retrieved.</param>
      <returns>
        <para>An array of <see cref="T:System.Messaging.MessageQueue" />
objects that reference
the retrieved public queues.</para>
      </returns>
    </member>
    <member name="M:System.Messaging.MessageQueue.GetPublicQueuesByLabel(System.String)">
      <summary>
        <para>Retrieves all the public queues on the network that carry the specified label.</para>
      </summary>
      <param name="label">A label that groups the set of queues to be retrieved.</param>
      <returns>
        <para>An array of <see cref="T:System.Messaging.MessageQueue" />
objects that reference
the retrieved public queues.</para>
      </returns>
    </member>
    <member name="M:System.Messaging.MessageQueue.GetPublicQueuesByMachine(System.String)">
      <summary>
        <para>Retrieves all the public queues that reside on the specified computer.</para>
      </summary>
      <param name="machineName">The name of the computer that contains the set of public queues to be retrieved.</param>
      <returns>
        <para>An array of <see cref="T:System.Messaging.MessageQueue" />
objects that
reference the public
queues on the computer.</para>
      </returns>
    </member>
    <member name="M:System.Messaging.MessageQueue.Peek">
      <summary>
        <para> Returns without removing (peeks) the first
      message in the queue referenced by this <see cref="T:System.Messaging.MessageQueue" /> . The <see cref="M:System.Messaging.MessageQueue.Peek" />
      method is
      synchronous, so it
      blocks the current thread until a message becomes
      available.</para>
      </summary>
      <returns>
        <para>The <see cref="T:System.Messaging.Message" />
that represents the first message in the
queue.</para>
      </returns>
    </member>
    <member name="M:System.Messaging.MessageQueue.Peek(System.TimeSpan)">
      <summary>
        <para>Returns without removing (peeks) the first message in the
      queue referenced by this <see cref="T:System.Messaging.MessageQueue" /> . The <see cref="M:System.Messaging.MessageQueue.Peek" />
      method is synchronous, so
      it blocks the
      current thread until
      a message becomes available or the specified time-out
      occurs.</para>
      </summary>
      <param name="timeout">A <see cref="T:System.TimeSpan" /> that indicates the maximum time to wait for the queue to contain a message.</param>
      <returns>
        <para>The <see cref="T:System.Messaging.Message" />
that represents the first message in the
queue.</para>
      </returns>
    </member>
    <member name="M:System.Messaging.MessageQueue.PeekById(System.String)">
      <summary>
        <para>Peeks the message whose message identifier matches
      the <paramref name="id" /> parameter. </para>
      </summary>
      <param name="id">The <see cref="P:System.Messaging.Message.Id" /> of the message to peek.</param>
      <returns>
        <para>The <see cref="T:System.Messaging.Message" /> whose <see cref="P:System.Messaging.Message.Id" />
property matches the <paramref name="id" /> parameter.</para>
      </returns>
    </member>
    <member name="M:System.Messaging.MessageQueue.PeekById(System.String,System.TimeSpan)">
      <summary>
        <para> Peeks the message whose message identifier matches
      the <paramref name="id" />
      parameter. Waits until the message appears in the queue or a
      time-out occurs.</para>
      </summary>
      <param name="id">The <see cref="P:System.Messaging.Message.Id" /> of the message to peek.</param>
      <param name="timeout">A <see cref="T:System.TimeSpan" /> that indicates the maximum amount of time to wait for the message to appear in the queue.</param>
      <returns>
        <para>The <see cref="T:System.Messaging.Message" /> whose <see cref="P:System.Messaging.Message.Id" /> property matches the
<paramref name="id" /> parameter.</para>
      </returns>
    </member>
    <member name="M:System.Messaging.MessageQueue.PeekByCorrelationId(System.String)">
      <summary>
        <para> Peeks the message that matches
      the given
      correlation identifier and immediately raises an exception if no message with
      the specified correlation identifier currently exists in the
      queue.</para>
      </summary>
      <param name="correlationId">The <see cref="P:System.Messaging.Message.CorrelationId" /> of the message to peek.</param>
      <returns>
        <para>The <see cref="T:System.Messaging.Message" /> whose
<see cref="P:System.Messaging.Message.CorrelationId" /> matches the <paramref name="correlationId" /> parameter passed in.</para>
      </returns>
    </member>
    <member name="M:System.Messaging.MessageQueue.PeekByCorrelationId(System.String,System.TimeSpan)">
      <summary>
        <para>Peeks the message that matches the given correlation identifier and waits
      until either a message with the specified correlation identifier is
      available in the queue, or the time-out expires.</para>
      </summary>
      <param name="correlationId">The <see cref="P:System.Messaging.Message.CorrelationId" /> of the message to peek.</param>
      <param name="timeout">A <see cref="T:System.TimeSpan" /> that indicates the time to wait until a new message is available for inspection .</param>
      <returns>
        <para>The <see cref="T:System.Messaging.Message" /> whose
<see cref="P:System.Messaging.Message.CorrelationId" /> matches the <paramref name="correlationId" /> parameter passed in.</para>
      </returns>
    </member>
    <member name="M:System.Messaging.MessageQueue.Purge">
      <summary>
        <para>Deletes all the messages contained in the queue.</para>
      </summary>
    </member>
    <member name="M:System.Messaging.MessageQueue.Receive">
      <summary>
        <para> Receives the first message available in the queue referenced by the <see cref="T:System.Messaging.MessageQueue" /> . This
   call is synchronous, and blocks the current thread of execution until a message is
   available.</para>
      </summary>
      <returns>
        <para>A <see cref="T:System.Messaging.Message" /> that references the first message
   available in the queue.</para>
      </returns>
    </member>
    <member name="M:System.Messaging.MessageQueue.Receive(System.Messaging.MessageQueueTransaction)">
      <summary>
        <para>Receives the first message available in the
      transactional queue referenced by the <see cref="T:System.Messaging.MessageQueue" /> . This
      call is synchronous, and blocks the current thread of execution until a message is
      available.</para>
      </summary>
      <param name="transaction">The <see cref="T:System.Messaging.MessageQueueTransaction" /> object.</param>
      <returns>
        <para>A <see cref="T:System.Messaging.Message" /> that references the first message
   available in the queue.</para>
      </returns>
    </member>
    <member name="M:System.Messaging.MessageQueue.Receive(System.Messaging.MessageQueueTransactionType)">
      <summary>
        <para> Receives the first message available in
      the queue referenced by the <see cref="T:System.Messaging.MessageQueue" /> . This
      call is synchronous, and blocks the current thread of execution until a message is
      available.</para>
      </summary>
      <param name="transactionType">One of the <see cref="T:System.Messaging.MessageQueueTransactionType" /> values, describing the type of transaction context to associate with the message.</param>
      <returns>
        <para>A <see cref="T:System.Messaging.Message" /> that references the first message
   available in the queue.</para>
      </returns>
    </member>
    <member name="M:System.Messaging.MessageQueue.Receive(System.TimeSpan)">
      <summary>
        <para> Receives the first message available in the queue
      referenced by the <see cref="T:System.Messaging.MessageQueue" />
      and waits until
      either a message is available in the queue, or the time-out
      expires.</para>
      </summary>
      <param name="timeout">A <see cref="T:System.TimeSpan" /> that indicates the time to wait until a new message is available for inspection.</param>
      <returns>
        <para>A <see cref="T:System.Messaging.Message" /> that
   references the first message available in the
   queue.</para>
      </returns>
    </member>
    <member name="M:System.Messaging.MessageQueue.Receive(System.TimeSpan,System.Messaging.MessageQueueTransaction)">
      <summary>
        <para>Receives the first message available in the transactional queue
      referenced by the <see cref="T:System.Messaging.MessageQueue" /> and waits until either
      a message is available in the queue, or the time-out
      expires.</para>
      </summary>
      <param name="timeout">A <see cref="T:System.TimeSpan" /> that indicates the time to wait until a new message is available for inspection.</param>
      <param name="transaction">The <see cref="T:System.Messaging.MessageQueueTransaction" /> object.</param>
      <returns>
        <para>A <see cref="T:System.Messaging.Message" /> that
   references the first message available in the
   queue.</para>
      </returns>
    </member>
    <member name="M:System.Messaging.MessageQueue.Receive(System.TimeSpan,System.Messaging.MessageQueueTransactionType)">
      <summary>
        <para> Receives the first message available in
      the queue referenced by the <see cref="T:System.Messaging.MessageQueue" /> . This
      call is synchronous, and waits until
      either a message is available in the queue, or the time-out
      expires.</para>
      </summary>
      <param name="timeout">A <see cref="T:System.TimeSpan" /> that indicates the time to wait until a new message is available for inspection.</param>
      <param name="transactionType">One of the <see cref="T:System.Messaging.MessageQueueTransactionType" /> values, describing the type of transaction context to associate with the message.</param>
      <returns>
        <para>A <see cref="T:System.Messaging.Message" /> that references the first message
   available in the queue.</para>
      </returns>
    </member>
    <member name="M:System.Messaging.MessageQueue.ReceiveById(System.String)">
      <summary>
        <para> Receives the message that matches the given identifier from a non-transactional queue, and immediately raises
      an exception if no message with the specified identifier
      currently exists in the queue.</para>
      </summary>
      <param name="id">The <see cref="P:System.Messaging.Message.Id" /> of the message to receive.</param>
      <returns>
        <para>The <see cref="T:System.Messaging.Message" /> whose <see cref="P:System.Messaging.Message.Id" /> property matches the
<paramref name="id" /> parameter passed in.</para>
      </returns>
    </member>
    <member name="M:System.Messaging.MessageQueue.ReceiveById(System.String,System.Messaging.MessageQueueTransaction)">
      <summary>
        <para>Receives the message that matches the given identifier,
      from a transactional queue, and immediately raises
      an exception if no message with the specified identifier
      currently exists in the queue.</para>
      </summary>
      <param name="id">The <see cref="P:System.Messaging.Message.Id" /> of the message to receive.</param>
      <param name="transaction">The <see cref="T:System.Messaging.MessageQueueTransaction" /> object .</param>
      <returns>
        <para>The <see cref="T:System.Messaging.Message" /> whose <see cref="P:System.Messaging.Message.Id" /> property matches the
<paramref name="id" /> parameter passed in.</para>
      </returns>
    </member>
    <member name="M:System.Messaging.MessageQueue.ReceiveById(System.String,System.Messaging.MessageQueueTransactionType)">
      <summary>
        <para> Receives the message that matches the
      given identifier, and immediately raises an exception if no message with the specified
      identifier currently exists in the queue.</para>
      </summary>
      <param name="id">The <see cref="P:System.Messaging.Message.Id" /> of the message to receive.</param>
      <param name="transactionType">One of the <see cref="T:System.Messaging.MessageQueueTransactionType" /> values, describing the type of transaction context to associate with the message.</param>
      <returns>
        <para>The <see cref="T:System.Messaging.Message" /> whose <see cref="P:System.Messaging.Message.Id" /> property matches the
<paramref name="id" /> parameter passed in.</para>
      </returns>
    </member>
    <member name="M:System.Messaging.MessageQueue.ReceiveById(System.String,System.TimeSpan)">
      <summary>
        <para> Receives the message that matches the given identifier,
      from a nontransactional queue, and waits until either a message with
      the specified identifier is
      available in the queue or the time-out
      expires.</para>
      </summary>
      <param name="id">The <see cref="P:System.Messaging.Message.Id" /> of the message to receive.</param>
      <param name="timeout">A <see cref="T:System.TimeSpan" /> that indicates the time to wait until a new message is available for inspection.</param>
      <returns>
        <para>The <see cref="T:System.Messaging.Message" /> whose <see cref="P:System.Messaging.Message.Id" /> property matches the
<paramref name="id" /> parameter passed in.</para>
      </returns>
    </member>
    <member name="M:System.Messaging.MessageQueue.ReceiveById(System.String,System.TimeSpan,System.Messaging.MessageQueueTransaction)">
      <summary>
        <para> Receives the message that matches the
      given identifier, from a transactional queue, and waits
      until either a message with the specified identifier is
      available in the queue or the time-out
      expires.</para>
      </summary>
      <param name="id">The <see cref="P:System.Messaging.Message.Id" /> of the message to receive.</param>
      <param name="timeout">A <see cref="T:System.TimeSpan" /> that indicates the time to wait until a new message is available for inspection.</param>
      <param name="transaction">The <see cref="T:System.Messaging.MessageQueueTransaction" /> object .</param>
      <returns>
        <para>The <see cref="T:System.Messaging.Message" /> whose <see cref="P:System.Messaging.Message.Id" /> property matches the
<paramref name="id" /> parameter passed in.</para>
      </returns>
    </member>
    <member name="M:System.Messaging.MessageQueue.ReceiveById(System.String,System.TimeSpan,System.Messaging.MessageQueueTransactionType)">
      <summary>
        <para> Receives the message that matches the given identifier,
      and waits until either a message with the specified identifier is available in
      the queue or the time-out expires.</para>
      </summary>
      <param name="id">The <see cref="P:System.Messaging.Message.Id" /> of the message to receive.</param>
      <param name="timeout">A <see cref="T:System.TimeSpan" /> that indicates the time to wait until a new message is available for inspection.</param>
      <param name="transactionType">One of the <see cref="T:System.Messaging.MessageQueueTransactionType" /> values, describing the type of transaction context to associate with the message.</param>
      <returns>
        <para>The <see cref="T:System.Messaging.Message" /> whose <see cref="P:System.Messaging.Message.Id" /> property matches the
<paramref name="id" /> parameter passed in.</para>
      </returns>
    </member>
    <member name="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String)">
      <summary>
        <para>Receives the message that matches the given correlation identifier, from a nontransactional queue, and
      immediately raises an exception if no message with the specified correlation
      identifier currently exists in the queue.</para>
      </summary>
      <param name="correlationId">The <see cref="P:System.Messaging.Message.CorrelationId" /> of the message to receive.</param>
      <returns>
        <para>The <see cref="T:System.Messaging.Message" /> whose <see cref="P:System.Messaging.Message.CorrelationId" /> matches the
<paramref name="correlationId" /> parameter passed in.</para>
      </returns>
    </member>
    <member name="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.Messaging.MessageQueueTransaction)">
      <summary>
        <para> Receives the message that matches the given correlation identifier, from a transactional
      queue, and immediately raises an exception if no message with the specified correlation
      identifier currently exists in the queue.</para>
      </summary>
      <param name="correlationId">The <see cref="P:System.Messaging.Message.CorrelationId" /> of the message to receive.</param>
      <param name="transaction">The <see cref="T:System.Messaging.MessageQueueTransaction" /> object.</param>
      <returns>
        <para>The <see cref="T:System.Messaging.Message" /> whose <see cref="P:System.Messaging.Message.CorrelationId" /> matches the
<paramref name="correlationId" /> parameter passed in.</para>
      </returns>
    </member>
    <member name="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.Messaging.MessageQueueTransactionType)">
      <summary>
        <para> Receives the message that matches the given correlation
      identifier, and immediately raises an exception if no message with the specified correlation
      identifier currently exists in the queue.</para>
      </summary>
      <param name="correlationId">The <see cref="P:System.Messaging.Message.CorrelationId" /> of the message to receive.</param>
      <param name="transactionType">One of the <see cref="T:System.Messaging.MessageQueueTransactionType" /> values, describing the type of transaction context to associate with the message.</param>
      <returns>
        <para>The <see cref="T:System.Messaging.Message" /> whose <see cref="P:System.Messaging.Message.CorrelationId" /> matches the
<paramref name="correlationId" /> parameter passed in.</para>
      </returns>
    </member>
    <member name="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.TimeSpan)">
      <summary>
        <para>Receives the message that matches the given correlation identifier, from a nontransactional queue, and waits
      until either a message with the specified correlation identifier is available in
      the queue, or the time-out expires.</para>
      </summary>
      <param name="correlationId">The <see cref="P:System.Messaging.Message.CorrelationId" /> of the message to receive.</param>
      <param name="timeout">A <see cref="T:System.TimeSpan" /> that indicates the time to wait until a new message is available for inspection .</param>
      <returns>
        <para>The <see cref="T:System.Messaging.Message" /> whose <see cref="P:System.Messaging.Message.CorrelationId" /> matches the
<paramref name="correlationId" /> parameter passed in.</para>
      </returns>
    </member>
    <member name="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.TimeSpan,System.Messaging.MessageQueueTransaction)">
      <summary>
        <para> Receives the message
      that matches the given correlation identifier, from
      a transactional queue, and waits until either a message with
      the specified correlation identifier is available in
      the queue, or the time-out expires.</para>
      </summary>
      <param name="correlationId">The <see cref="P:System.Messaging.Message.CorrelationId" /> of the message to receive.</param>
      <param name="timeout">A <see cref="T:System.TimeSpan" /> that indicates the time to wait until a new message is available for inspection .</param>
      <param name="transaction">The <see cref="T:System.Messaging.MessageQueueTransaction" /> object.</param>
      <returns>
        <para>The <see cref="T:System.Messaging.Message" /> whose <see cref="P:System.Messaging.Message.CorrelationId" /> matches the
<paramref name="correlationId" /> parameter passed in.</para>
      </returns>
    </member>
    <member name="M:System.Messaging.MessageQueue.ReceiveByCorrelationId(System.String,System.TimeSpan,System.Messaging.MessageQueueTransactionType)">
      <summary>
        <para> Receives the message that matches the given correlation identifier, and
      waits until either a message with the specified correlation identifier is available in
      the queue, or the time-out expires.</para>
      </summary>
      <param name="correlationId">The <see cref="P:System.Messaging.Message.CorrelationId" /> of the message to receive.</param>
      <param name="timeout">A <see cref="T:System.TimeSpan" /> that indicates the time to wait until a new message is available for inspection .</param>
      <param name="transactionType">One of the <see cref="T:System.Messaging.MessageQueueTransactionType" /> values, describing the type of transaction context to associate with the message.</param>
      <returns>
        <para>The <see cref="T:System.Messaging.Message" /> whose <see cref="P:System.Messaging.Message.CorrelationId" /> matches the
<paramref name="correlationId" /> parameter passed in.</para>
      </returns>
    </member>
    <member name="M:System.Messaging.MessageQueue.Refresh">
      <summary>
        <para>Refreshes the properties presented by the <see cref="T:System.Messaging.MessageQueue" />
to reflect the current state of the
resource.</para>
      </summary>
    </member>
    <member name="M:System.Messaging.MessageQueue.Send(System.Object)">
      <summary>
        <para> Sends an object to nontransactional queue referenced by this <see cref="T:System.Messaging.MessageQueue" />
.</para>
      </summary>
      <param name="obj">The object to send to the queue.</param>
    </member>
    <member name="M:System.Messaging.MessageQueue.Send(System.Object,System.Messaging.MessageQueueTransaction)">
      <summary>
        <para>Sends an object to the transactional queue referenced by this <see cref="T:System.Messaging.MessageQueue" />
.</para>
      </summary>
      <param name="obj">The object to send to the queue.</param>
      <param name="transaction">The <see cref="T:System.Messaging.MessageQueueTransaction" /> object.</param>
    </member>
    <member name="M:System.Messaging.MessageQueue.Send(System.Object,System.Messaging.MessageQueueTransactionType)">
      <summary>
        <para> Sends an object to the queue referenced by this <see cref="T:System.Messaging.MessageQueue" />
.</para>
      </summary>
      <param name="obj">The object to send to the queue.</param>
      <param name="transactionType">One of the <see cref="T:System.Messaging.MessageQueueTransactionType" /> values, describing the type of transaction context to associate with the message.</param>
    </member>
    <member name="M:System.Messaging.MessageQueue.Send(System.Object,System.String)">
      <summary>
        <para> Sends an object to the nontransactional queue referenced by this <see cref="T:System.Messaging.MessageQueue" />
and specifies
a label for the message.</para>
      </summary>
      <param name="obj">The object to send to the queue.</param>
      <param name="label">The label of the message.</param>
    </member>
    <member name="M:System.Messaging.MessageQueue.Send(System.Object,System.String,System.Messaging.MessageQueueTransaction)">
      <summary>
        <para>Sends an object to the transactional queue referenced by this <see cref="T:System.Messaging.MessageQueue" />
and
specifies a label for the message.</para>
      </summary>
      <param name="obj">The object to send to the queue.</param>
      <param name="label">The label of the message.</param>
      <param name="transaction">The <see cref="T:System.Messaging.MessageQueueTransaction" /> object.</param>
    </member>
    <member name="M:System.Messaging.MessageQueue.Send(System.Object,System.String,System.Messaging.MessageQueueTransactionType)">
      <summary>
        <para> Sends an object to the queue referenced by this <see cref="T:System.Messaging.MessageQueue" />
and specifies a
label for the message.</para>
      </summary>
      <param name="obj">The object to send to the queue.</param>
      <param name=" label">The label of the message.</param>
      <param name="transactionType">One of the <see cref="T:System.Messaging.MessageQueueTransactionType" /> values, describing the type of transaction context to associate with the message.</param>
    </member>
    <member name="M:System.Messaging.MessageQueue.ResetPermissions">
      <summary>
        <para>Resets the permission list to the operating system's default
      values. Removes any queue permissions you have appended to the default list.</para>
      </summary>
    </member>
    <member name="M:System.Messaging.MessageQueue.SetPermissions(System.String,System.Messaging.MessageQueueAccessRights)">
      <summary>
        <para>Gives a computer, group, or user the specified access
      rights.</para>
      </summary>
      <param name="user">The individual, group, or computer that gets additional rights to the queue.</param>
      <param name=" rights">A <see cref="T:System.Messaging.MessageQueueAccessRights" /> that indicates the set of rights to the queue that Message Queuing assigns to the <paramref name="user" /> passed in.</param>
    </member>
    <member name="M:System.Messaging.MessageQueue.SetPermissions(System.String,System.Messaging.MessageQueueAccessRights,System.Messaging.AccessControlEntryType)">
      <summary>
        <para>Gives a computer, group, or user the specified access
      rights, with the specified access control type (allow, deny, revoke, or set).</para>
      </summary>
      <param name="user">The individual, group, or computer that gets additional rights to the queue.</param>
      <param name=" rights">A <see cref="T:System.Messaging.MessageQueueAccessRights" /> that indicates the set of rights to the queue that Message Queuing assigns to the <paramref name="user" /> passed in.</param>
      <param name=" entryType">An <see cref="T:System.Messaging.AccessControlEntryType" /> that specifies whether to grant, deny, or revoke the permissions specified by the <paramref name="rights" /> parameter. </param>
    </member>
    <member name="M:System.Messaging.MessageQueue.SetPermissions(System.Messaging.MessageQueueAccessControlEntry)">
      <summary>
        <para>Assigns access rights to the queue based on the
      contents of an access control entry.</para>
      </summary>
      <param name="ace">A <see cref="T:System.Messaging.MessageQueueAccessControlEntry" /> that specifies a user, an access type, and a permission type.</param>
    </member>
    <member name="M:System.Messaging.MessageQueue.SetPermissions(System.Messaging.AccessControlList)">
      <summary>
        <para>Assigns access rights to the queue based on the contents
      of an access control list.</para>
      </summary>
      <param name="dacl">An <see cref="T:System.Messaging.AccessControlList" /> that contains one or more access control entries that specify the trustees and the permissions to grant.</param>
    </member>
    <member name="P:System.Messaging.MessageQueue.Authenticate">
      <summary>
        <para> Gets or sets a value indicating whether the queue accepts only authenticated
      messages.</para>
      </summary>
    </member>
    <member name="P:System.Messaging.MessageQueue.BasePriority">
      <summary>
        <para> Gets or sets the base priority Message
      Queuing uses to route a public queue's messages over the network.</para>
      </summary>
    </member>
    <member name="P:System.Messaging.MessageQueue.CanRead">
      <summary>
        <para> Gets a value indicating whether the <see cref="T:System.Messaging.MessageQueue" />
can be read.</para>
      </summary>
    </member>
    <member name="P:System.Messaging.MessageQueue.CanWrite">
      <summary>
        <para> Gets a value indicating whether the <see cref="T:System.Messaging.MessageQueue" /> can
   be written to.</para>
      </summary>
    </member>
    <member name="P:System.Messaging.MessageQueue.Category">
      <summary>
        <para>Gets or sets the queue category.</para>
      </summary>
    </member>
    <member name="P:System.Messaging.MessageQueue.CreateTime">
      <summary>
        <para>Gets the time and date that the queue was created in Message Queuing.</para>
      </summary>
    </member>
    <member name="P:System.Messaging.MessageQueue.DefaultPropertiesToSend">
      <summary>
        <para>Gets or sets the message property values to be used by
      default when the application sends messages to the
      queue.</para>
      </summary>
    </member>
    <member name="P:System.Messaging.MessageQueue.DenySharedReceive">
      <summary>
        <para>Gets or sets a value indicating whether this <see cref="T:System.Messaging.MessageQueue" /> has exclusive access to receive messages from the Message Queuing queue.</para>
      </summary>
    </member>
    <member name="P:System.Messaging.MessageQueue.EnableConnectionCache">
      <summary>
        <para>Gets or sets a value indicating whether a cache of
      connections will be maintained by the application.</para>
      </summary>
    </member>
    <member name="P:System.Messaging.MessageQueue.EncryptionRequired">
      <summary>
        <para>Gets or sets a value indicating whether the queue accepts only nonprivate
      (nonencrypted) messages.</para>
      </summary>
    </member>
    <member name="P:System.Messaging.MessageQueue.FormatName">
      <summary>
        <para>Gets the unique queue name that Message Queuing generated at the time of the queue's creation.</para>
      </summary>
    </member>
    <member name="P:System.Messaging.MessageQueue.Formatter">
      <summary>
        <para>Gets or sets the formatter used to serialize an object
      into or deserialize
      an object
      from the body of a message read from or written
      to the queue.</para>
      </summary>
    </member>
    <member name="P:System.Messaging.MessageQueue.Id">
      <summary>
        <para>Gets the unique Message Queuing identifier of the queue.</para>
      </summary>
    </member>
    <member name="P:System.Messaging.MessageQueue.Label">
      <summary>
        <para>Gets or sets the queue description.</para>
      </summary>
    </member>
    <member name="P:System.Messaging.MessageQueue.LastModifyTime">
      <summary>
        <para>Gets the last time the properties of a queue were modified.</para>
      </summary>
    </member>
    <member name="P:System.Messaging.MessageQueue.MachineName">
      <summary>
        <para>Gets or sets the name of the computer where the Message
      Queuing queue
      is located.</para>
      </summary>
    </member>
    <member name="P:System.Messaging.MessageQueue.MaximumJournalSize">
      <summary>
        <para>Gets or sets the maximum size of the journal queue.</para>
      </summary>
    </member>
    <member name="P:System.Messaging.MessageQueue.MaximumQueueSize">
      <summary>
        <para>Gets or sets the maximum size of the queue.</para>
      </summary>
    </member>
    <member name="P:System.Messaging.MessageQueue.MessageReadPropertyFilter">
      <summary>
        <para>Gets or sets the property filter for receiving
      or peeking messages.</para>
      </summary>
    </member>
    <member name="P:System.Messaging.MessageQueue.Path">
      <summary>
        <para> Gets or sets the queue's path. Setting the <see cref="P:System.Messaging.MessageQueue.Path" /> causes the <see cref="T:System.Messaging.MessageQueue" /> to point to a new queue.</para>
      </summary>
    </member>
    <member name="P:System.Messaging.MessageQueue.QueueName">
      <summary>
        <para>Gets or sets the friendly
      name that identifies the queue.</para>
      </summary>
    </member>
    <member name="P:System.Messaging.MessageQueue.ReadHandle">
      <summary>
        <para>Gets the native handle used to read messages from the message queue.</para>
      </summary>
    </member>
    <member name="P:System.Messaging.MessageQueue.SynchronizingObject">
      <summary>
        <para> Gets or sets the object
      that marshals the event-handler call resulting from a <see cref="E:System.Messaging.MessageQueue.ReceiveCompleted" /> or <see cref="E:System.Messaging.MessageQueue.PeekCompleted" />
      event.</para>
      </summary>
    </member>
    <member name="P:System.Messaging.MessageQueue.Transactional">
      <summary>
        <para>Gets a
      value indicating whether the queue accepts only transactions.</para>
      </summary>
    </member>
    <member name="P:System.Messaging.MessageQueue.UseJournalQueue">
      <summary>
        <para>Gets or sets a value indicating whether received messages are copied to the
      journal queue.</para>
      </summary>
    </member>
    <member name="P:System.Messaging.MessageQueue.WriteHandle">
      <summary>
        <para> Gets the native handle used to send messages to the message queue.</para>
      </summary>
    </member>
    <member name="E:System.Messaging.MessageQueue.PeekCompleted">
      <summary>
        <para>Occurs when a message is read without being removed
      from the queue. This is a result of the asynchronous operation, <see cref="M:System.Messaging.MessageQueue.BeginPeek" />
      .</para>
      </summary>
    </member>
    <member name="E:System.Messaging.MessageQueue.ReceiveCompleted">
      <summary>
        <para> Occurs when a message has been removed from the queue.
      This event is raised by the asynchronous operation, <see cref="M:System.Messaging.MessageQueue.BeginReceive" />.</para>
      </summary>
    </member>
    <member name="P:System.Messaging.MessageQueue.AsynchronousRequest.AsyncObject">
      <summary>
    IAsyncResult implementation        
 </summary>
    </member>
    <member name="P:System.Messaging.MessageQueue.AsynchronousRequest.AsyncState">
      <summary>
    IAsyncResult implementation        
 </summary>
    </member>
    <member name="P:System.Messaging.MessageQueue.AsynchronousRequest.AsyncWaitHandle">
      <summary>
    IAsyncResult implementation        
 </summary>
    </member>
    <member name="P:System.Messaging.MessageQueue.AsynchronousRequest.CompletedSynchronously">
      <summary>
    IAsyncResult implementation        
 </summary>
    </member>
    <member name="T:System.Messaging.MessageQueueAccessControlEntry">
      <summary>
        <para>Specifies access rights for a trustee (user, group, or
      computer) to perform Message Queuing tasks.</para>
      </summary>
    </member>
    <member name="M:System.Messaging.MessageQueueAccessControlEntry.#ctor(System.Messaging.Trustee,System.Messaging.MessageQueueAccessRights)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Messaging.MessageQueueAccessControlEntry" /> class, granting the specified Message
   Queuing access rights to the specified trustee.</para>
      </summary>
      <param name="trustee">A <see cref="T:System.Messaging.Trustee" /> that specifies a user, group, computer, domain, or alias.</param>
      <param name=" rights">A bitwise combination of the <see cref="T:System.Messaging.MessageQueueAccessRights" /> values which defines the combination of rights to grant to the trustee.</param>
    </member>
    <member name="M:System.Messaging.MessageQueueAccessControlEntry.#ctor(System.Messaging.Trustee,System.Messaging.MessageQueueAccessRights,System.Messaging.AccessControlEntryType)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Messaging.MessageQueueAccessControlEntry" /> class, with the 
   specified trustee and Message Queuing access rights. The type of access (such as
<see langword="Allow" /> or <see langword="Deny" /> 
) is defined
by the entry type you pass in.</para>
      </summary>
      <param name="trustee">A <see cref="T:System.Messaging.Trustee" /> that specifies a user, group, computer, domain, or alias.</param>
      <param name=" rights">A bitwise combination of the <see cref="T:System.Messaging.MessageQueueAccessRights" /> values which defines the combination of rights to grant to the trustee.</param>
      <param name=" entryType">One of the <see cref="T:System.Messaging.AccessControlEntryType" /> values, which specifies whether to allow, deny, set or revoke the specified rights.</param>
    </member>
    <member name="P:System.Messaging.MessageQueueAccessControlEntry.MessageQueueAccessRights">
      <summary>
        <para>Gets or sets the set of Message Queuing-specific rights to apply to the trustee.</para>
      </summary>
    </member>
    <member name="T:System.Messaging.MessageQueueAccessRights">
      <summary>
        <para> Specifies
      a set of object-specific access rights for operations specific to Message Queuing.</para>
      </summary>
    </member>
    <member name="F:System.Messaging.MessageQueueAccessRights.DeleteMessage">
      <summary>
        <para>The right to delete messages from the queue.</para>
      </summary>
    </member>
    <member name="F:System.Messaging.MessageQueueAccessRights.PeekMessage">
      <summary>
        <para>The right to peek messages from the queue.</para>
      </summary>
    </member>
    <member name="F:System.Messaging.MessageQueueAccessRights.WriteMessage">
      <summary>
        <para>The right to send messages to the queue.</para>
      </summary>
    </member>
    <member name="F:System.Messaging.MessageQueueAccessRights.DeleteJournalMessage">
      <summary>
        <para>The right to delete messages from the journal queue.</para>
      </summary>
    </member>
    <member name="F:System.Messaging.MessageQueueAccessRights.SetQueueProperties">
      <summary>
        <para>The right to modify properties of the queue.</para>
      </summary>
    </member>
    <member name="F:System.Messaging.MessageQueueAccessRights.GetQueueProperties">
      <summary>
        <para>The right to read properties of the queue.</para>
      </summary>
    </member>
    <member name="F:System.Messaging.MessageQueueAccessRights.DeleteQueue">
      <summary>
        <para>The right to delete the queue.</para>
      </summary>
    </member>
    <member name="F:System.Messaging.MessageQueueAccessRights.GetQueuePermissions">
      <summary>
        <para>The right to read queue permissions.</para>
      </summary>
    </member>
    <member name="F:System.Messaging.MessageQueueAccessRights.ChangeQueuePermissions">
      <summary>
        <para>The right to modify queue permissions.</para>
      </summary>
    </member>
    <member name="F:System.Messaging.MessageQueueAccessRights.TakeQueueOwnership">
      <summary>
        <para>The right to take ownership of the queue.</para>
      </summary>
    </member>
    <member name="F:System.Messaging.MessageQueueAccessRights.ReceiveMessage">
      <summary>
        <para>The right to receive messages from the queue. This 
      includes the rights to delete and peek messages.</para>
      </summary>
    </member>
    <member name="F:System.Messaging.MessageQueueAccessRights.ReceiveJournalMessage">
      <summary>
        <para>The right to receive messages from the journal queue. This
      includes the rights to delete and peek messages from the journal queue.</para>
      </summary>
    </member>
    <member name="F:System.Messaging.MessageQueueAccessRights.GenericRead">
      <summary>
        <para>A combination of <see langword="GetQueueProperties" />, 
<see langword="GetQueuePermissions" />, <see langword="ReceiveMessage" />, and 
<see langword="ReceiveJournalMessage" /> .</para>
      </summary>
    </member>
    <member name="F:System.Messaging.MessageQueueAccessRights.GenericWrite">
      <summary>
        <para>A combination of <see langword="GetQueueProperties" />, 
<see langword="GetQueuePermissions" />, and <see langword="WriteMessage" /> .</para>
      </summary>
    </member>
    <member name="F:System.Messaging.MessageQueueAccessRights.FullControl">
      <summary>
        <para>Full rights to the queue. A union of all other rights in the enumeration.</para>
      </summary>
    </member>
    <member name="T:System.Messaging.MessageQueueCriteria">
      <summary>
        <para> Filters message queues when performing a query using
      the <see cref="T:System.Messaging.MessageQueue" /> class's <see cref="M:System.Messaging.MessageQueue.GetPublicQueues" />
      method.
      </para>
      </summary>
    </member>
    <member name="M:System.Messaging.MessageQueueCriteria.ClearAll">
      <summary>
        <para> Clears all properties from being built into a filter
      and puts all property values into a "not set" state.</para>
      </summary>
    </member>
    <member name="P:System.Messaging.MessageQueueCriteria.CreatedAfter">
      <summary>
        <para>Gets or sets the lower boundary of the
      queue creation date and time by which to filter queues on
      the network.</para>
      </summary>
    </member>
    <member name="P:System.Messaging.MessageQueueCriteria.CreatedBefore">
      <summary>
        <para>Gets or sets the upper boundary of the
      queue creation date and time by which to filter queues on
      the network.</para>
      </summary>
    </member>
    <member name="P:System.Messaging.MessageQueueCriteria.Label">
      <summary>
        <para> Gets or sets the label
      by which to filter queues in the network.</para>
      </summary>
    </member>
    <member name="P:System.Messaging.MessageQueueCriteria.MachineName">
      <summary>
        <para> Gets or sets the computer
      name by which to filter queues in the network.
      </para>
      </summary>
    </member>
    <member name="P:System.Messaging.MessageQueueCriteria.ModifiedAfter">
      <summary>
        <para>Gets or sets the lower boundary of the
      queue modification date and time by which to filter queues on
      the network.</para>
      </summary>
    </member>
    <member name="P:System.Messaging.MessageQueueCriteria.ModifiedBefore">
      <summary>
        <para>Gets or sets the upper boundary of the
      queue modification date and time by which to filter queues on
      the network.</para>
      </summary>
    </member>
    <member name="P:System.Messaging.MessageQueueCriteria.Category">
      <summary>
        <para> Gets or sets the
      category by which to filter queues in the network.
      </para>
      </summary>
    </member>
    <member name="T:System.Messaging.MessageQueueEnumerator">
      <summary>
        <para>Provides a forward-only cursor to enumerate through messages in a message
      queue. </para>
      </summary>
    </member>
    <member name="M:System.Messaging.MessageQueueEnumerator.Close">
      <summary>
        <para>Frees the resources associated with the enumerator.</para>
      </summary>
    </member>
    <member name="M:System.Messaging.MessageQueueEnumerator.Dispose">
      <summary>
        <para> Releases all resources used by
      the <see cref="T:System.Messaging.MessageQueueEnumerator" /> .</para>
      </summary>
    </member>
    <member name="M:System.Messaging.MessageQueueEnumerator.Dispose(System.Boolean)">
      <summary>
        <para>Releases the unmanaged resources used by the <see cref="T:System.Messaging.MessageQueueEnumerator" /> and optionally releases the managed
   resources.</para>
      </summary>
      <param name="disposing">
        <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</param>
    </member>
    <member name="M:System.Messaging.MessageQueueEnumerator.MoveNext">
      <summary>
        <para> Advances the enumerator to the next queue of the enumeration, if one
      is currently available.</para>
      </summary>
      <returns>
        <para>
          <see langword="true," /> if the enumerator was succesfully
   advanced to the next queue; <see langword="false" /> , if the
   enumerator has reached the end of the enumeration.</para>
      </returns>
    </member>
    <member name="M:System.Messaging.MessageQueueEnumerator.Reset">
      <summary>
        <para>Resets the cursor, so it points to the beginning of the enumeration.</para>
      </summary>
    </member>
    <member name="P:System.Messaging.MessageQueueEnumerator.Current">
      <summary>
        <para>Gets the current <see cref="T:System.Messaging.MessageQueue" /> of the enumeration.</para>
      </summary>
    </member>
    <member name="P:System.Messaging.MessageQueueEnumerator.LocatorHandle">
      <summary>
        <para> Gets the native Message Queuing handle used to locate queues
      in a network.</para>
      </summary>
    </member>
    <member name="T:System.Messaging.MessageQueueErrorCode">
      <summary>
        <para>Identifies the source of an error
      that occurred within the Message Queuing application and generated a
   <see cref="T:System.Messaging.MessageQueueException" /> exception.</para>
      </summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.Generic">
      <summary>
        <para>Message text: Generic Error.</para>
        <para>Message Queuing returns this error if it cannot identify a more specific
      source.</para>
      </summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.QueueNotFound">
      <summary>
        <para>Message text: The queue is not registered in the directory service.</para>
        <para> Message Queuing returns this error if
      it cannot find the queue. This includes public queues not registered in the
      directory service and Internet queues that do not exist in the Message Queuing
      namespace.
      
   </para>
      </summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.QueueExists">
      <summary>
        <para>Message text: A queue with the same pathname is already registered.</para>
        <para>Message Queuing registers public queues in the directory service, and
      registers private queues on the local computer. </para>
      </summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.OperationCanceled">
      <summary>
        <para>Message text: The operation was canceled before it could be completed.</para>
      </summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.SharingViolation">
      <summary>
        <para>Message text: Sharing violation. The queue is already opened for
      exclusive receive.</para>
        <para>Message Queuing returns this error if an application is 
      trying to open an already opened queue that has exclusive read rights. For more information
      about receiving messages exclusively from a queue, see the <see cref="T:System.Messaging.MessageQueue" />
      class's <see cref="P:System.Messaging.MessageQueue.DenySharedReceive" />
      property.</para>
      </summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.ServiceNotAvailable">
      <summary>
        <para>Message text: The Message Queues service is not available.</para>
        <para> Message Queuing returns this error if the application is unable
      to connect to the Queue Manager.</para>
      </summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.MachineNotFound">
      <summary>
        <para>Message text: The specified computer could not be found.</para>
        <para> Message Queuing returns this error if it cannot find
      the queue's computer in the directory service.</para>
      </summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.IllegalUser">
      <summary>
        <para>Message text: The user has an invalid user name.</para>
        <para>Message Queuing returns this error if your application is connecting to it
      through an invalid user name.</para>
      </summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.NoDs">
      <summary>
        <para>Message text: No connection with this site's controller(s).</para>
        <para> Message Queuing returns this error if the application
      cannot access the directory service. If this error is returned, verify
      permissions for accessing the directory service.</para>
      </summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.IllegalQueuePathName">
      <summary>
        <para>Message text: Invalid queue path name.</para>
        <para>See the <see cref="T:System.Messaging.MessageQueue" /> class's <see cref="P:System.Messaging.MessageQueue.Path" /> property for valid path syntax options.</para>
      </summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.IllegalPropertyValue">
      <summary>
        <para>Message text: Invalid property value.</para>
      </summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.IOTimeout">
      <summary>
        <para>Message text: The receive or peek message time-out has expired.</para>
        <para>Message Queuing returns this error if the time-out specified in a call to
   <see cref="M:System.Messaging.MessageQueue.Receive" qualify="true" /> or <see cref="M:System.Messaging.MessageQueue.Peek" qualify="true" /> expires before a new message
      arrives in the queue. This can only happen if there was no message already
      in the queue; both methods would return immediately if a message
      exists.</para>
      </summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.MessageAlreadyReceived">
      <summary>
        <para>Message text: A message that is currently pointed at by the cursor has been removed from
      the queue by another process or by another call to receive the
      message without the use of this cursor.</para>
        <para>Message Queuing returns this error when some other
      cursor, application, or the system administrator has already removed the message
      from the queue. This error is most likely to occur when using the <see cref="T:System.Messaging.MessageEnumerator" /> class, such as the instance returned
      through a call to <see cref="M:System.Messaging.MessageQueue.GetMessageEnumerator" qualify="true" /> or <see cref="M:System.Messaging.MessageQueue.GetEnumerator" qualify="true" />
      .</para>
      </summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.IllegalFormatName">
      <summary>
        <para>Message text: The given format name is invalid.</para>
        <para>For valid format name syntax options, see the <see cref="T:System.Messaging.MessageQueue" /> class's <see cref="P:System.Messaging.MessageQueue.FormatName" /> 
property.</para>
      </summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.UnsupportedFormatNameOperation">
      <summary>
        <para> Message text: The requested operation
      for the specified format name is not supported.</para>
        <para> Message Queuing returns
      this error when the requested operation is not supported for the specified
      format name. Operations include trying to open a queue to receive messages by specifying
      a direct format name.</para>
      </summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.CannotImpersonateClient">
      <summary>
        <para> Message text: The RPC server cannot impersonate the client application, hence security
      credentials could not be verified.</para>
        <para> Message Queuing returns this error if the
      directory service server cannot impersonate the client application. This is necessary
      to verify the security credentials.</para>
      </summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.AccessDenied">
      <summary>
        <para>Message text: Access is denied.</para>
        <para>Message Queuing returns this error if access to the 
      specified queue or computer is denied. If this error is returned, verify
      that you have access rights for the operation, such as creating, deleting, or
      setting properties for a queue. For information about changing access rights
      for a queue, see the <see cref="T:System.Messaging.MessageQueueAccessRights" /> and <see cref="M:System.Messaging.MessageQueue.SetPermissions(System.String,System.Messaging.MessageQueueAccessRights)" qualify="true" />
      topics.</para>
      </summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.PrivilegeNotHeld">
      <summary>
        <para>Message text: Client does not have the required privileges to perform the operation.</para>
      </summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.InsufficientResources">
      <summary>
        <para>Message text: Insufficient resources to perform operation.</para>
        <para>Message Queuing returns this error, for example, if there is not enough
      memory to complete the operation. When this error is returned, the operation
      fails.</para>
      </summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.MessageStorageFailed">
      <summary>
        <para>Message text: Could not store a recoverable or journal message. Message was not sent.</para>
        <para>Message Queuing returns this error if the local computer cannot store a
      recoverable message (one whose delivery is guaranteed in the case of a network
      problem) or a journal message. See the <see cref="T:System.Messaging.Message" /> class's <see cref="P:System.Messaging.Message.Recoverable" /> and <see cref="P:System.Messaging.Message.UseJournalQueue" /> properties for more information
      about these message sending options.</para>
      </summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.InvalidCertificate">
      <summary>
        <para>Message text: The user certificate is not valid.</para>
        <para>Message Queuing returns this error if the security certificate specified in
      the <see cref="T:System.Messaging.Message" /> class's <see cref="P:System.Messaging.Message.SenderCertificate" /> property is invalid, or if the certificate is
      not correctly placed in the Microsoft Internet Explorer personal certificate
      store.</para>
      </summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.CorruptedInternalCertificate">
      <summary>
        <para>Message text: The internal Message Queuing certificate is corrupted.</para>
        <para>This error applies only to Message Queuing 1.0.</para>
      </summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.NoInternalUserCertificate">
      <summary>
        <para>Message text: The internal Message Queuing certificate for the user
      does not exist.</para>
        <para>Message Queuing returns this error if no internal certificate
      is registered or the registered certificate is corrupted. </para>
      </summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.CorruptedSecurityData">
      <summary>
        <para> Message text: A cryptographic function has failed.</para>
      </summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.CorruptedPersonalCertStore">
      <summary>
        <para>Message text: The personal certificate store is corrupted.</para>
        <para>Message Queuing returns this error when the Microsoft Internet Explorer
      personal certificate store is corrupted.</para>
        <para>
        </para>
      </summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.ComputerDoesNotSupportEncryption">
      <summary>
        <para>Message text: The computer does not support encryption operations.</para>
        <para>Message Queuing returns this error when the application requests encryption and the computer (source or destination)
      does not support encryption operations. When this error is returned, the
      encryption operation fails. For more information about using encryption, see the <see cref="P:System.Messaging.MessageQueue.EncryptionRequired" qualify="true" /> and <see cref="P:System.Messaging.Message.EncryptionAlgorithm" qualify="true" />
      topics.</para>
      </summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.CouldNotGetUserSid">
      <summary>
        <para>Message text: Could not get the SID information out of the thread token.</para>
        <para>For more information about sender identifiers, see the <see cref="T:System.Messaging.Message" /> class's <see cref="P:System.Messaging.Message.SenderId" /> 
property.</para>
      </summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.CouldNotGetAccountInfo">
      <summary>
        <para>Message text: Could not get the account information for the user.</para>
      </summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.PropertyNotAllowed">
      <summary>
        <para> Message text: Invalid property
      for the requested operation</para>
        <para>
        </para>
      </summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.InsufficientProperties">
      <summary>
        <para>Message text: Not all the required properties for the operation were specified
      in the input parameters.</para>
        <para>
        </para>
      </summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.MachineExists">
      <summary>
        <para>Message text: Computer with the same name already exists in the site.</para>
        <para>
        </para>
      </summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.DsIsFull">
      <summary>
        <para>Message text: Directory service is full.</para>
        <para>Message Queuing returns this error if the information store is full. This
      error applies only to Message Queuing 1.0.</para>
      </summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.DsError">
      <summary>
        <para>Message text: Internal directory service error.</para>
      </summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.InvalidOwner">
      <summary>
        <para>Message text: Invalid object owner. For example CreateQueue failed because the
      Queue Manager object is invalid.</para>
        <para> 
      Message Queuing returns this error, for example, if your
      application attempts to create a queue on a computer on which Message Queuing is
      not installed.</para>
      </summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.UnsupportedAccessMode">
      <summary>
        <para>Message text: The specified access mode is not supported.</para>
        <para>Message Queuing returns this error if the access mode specified when opening
      the queue is set to an invalid value, or the access mode and the share mode
      specified are not compatible.</para>
        <para>
        </para>
      </summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.DeleteConnectedNetworkInUse">
      <summary>
        <para> Message text: The connected network cannot be deleted; it is in use.</para>
        <para>Message Queuing returns this error if it cannot delete the specified
      connected network because the network is defined in at least one other
      computer. Remove the connected network from all connected network lists and try
      again to delete it.</para>
      </summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.NoResponseFromObjectServer">
      <summary>
        <para>Message text: No response from object owner.</para>
        <para>Message Queuing returns this error if there is no
      response from the directory service server. When this error is returned, the
      status of the operation is unknown.</para>
        <para>
        </para>
      </summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.ObjectServerNotAvailable">
      <summary>
        <para>Message text: Object owner is not reachable.</para>
        <para>Message Queuing returns this error if the directory
      service server for the object is not available. When this error is returned,
      the operation fails.</para>
        <para>
        </para>
      </summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.QueueNotAvailable">
      <summary>
        <para>Message text: Error while reading from a queue residing on a remote computer.</para>
        <para>
        </para>
      </summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.DtcConnect">
      <summary>
        <para>Message text: Cannot connect to MS DTC.</para>
        <para>Message Queuing returns this error if it is unable to connect to the 
      Microsoft Distributed Transaction Coordinator.</para>
      </summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.TransactionImport">
      <summary>
        <para>Message text: Cannot import the transaction.</para>
        <para>
        </para>
      </summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.TransactionUsage">
      <summary>
        <para>Message text: Wrong transaction usage.</para>
        <para>Message Queuing returns this error if an attempt was made to open a remote
      queue for read access from within a transaction, or an attempt was made to read
      a message from a nontransactional queue from within a transaction.</para>
      </summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.TransactionSequence">
      <summary>
        <para>Message text: Wrong transaction operations sequence.</para>
        <para>
        </para>
      </summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.MissingConnectorType">
      <summary>
        <para>Message text: Connector Type is mandatory when sending an Acknowledgment or secure message.</para>
        <para>Message Queuing returns this error when the application sets a property typically set by Message Queuing, but
      doesn't specify the connector to use. For more information about connector
      types, see the <see cref="T:System.Messaging.Message" /> class's <see cref="P:System.Messaging.Message.ConnectorType" />
      property.</para>
      </summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.TransactionEnlist">
      <summary>
        <para>Message text: Cannot enlist the transaction.</para>
      </summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.QueueDeleted">
      <summary>
        <para> Message text: The queue was deleted. Messages cannot be received anymore using this
 queue instance. The queue should be closed.</para>
      </summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.IllegalContext">
      <summary>
        <para> Message text: Invalid context parameter.</para>
        <para>
        </para>
      </summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.MqisServerEmpty">
      <summary>
        <para>Message text: The list of MQIS servers (in registry) is empty.</para>
        <para>
        </para>
        <para>This error applies only to Message Queuing 1.0.</para>
      </summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.MqisReadOnlyMode">
      <summary>
        <para>Message text: MQIS database is in read-only mode.</para>
        <para>
        </para>
      </summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.IllegalOperation">
      <summary>
        <para>Message text: The operation is invalid on foreign message queuing systems.</para>
      </summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.WriteNotAllowed">
      <summary>
        <para>Message text: Another MQIS server is being installed; write operations to the
      database are not allowed at this time.</para>
      </summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.WksCantServeClient">
      <summary>
        <para>Message text: Message Queuing-independent clients cannot serve Message Queuing-dependent
      clients.</para>
        <para>
        </para>
      </summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.DependentClientLicenseOverflow">
      <summary>
        <para>Message text: The number of dependent clients served by this Message Queuing server reached
      its upper limit.</para>
        <para>
        </para>
      </summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.CorruptedQueueWasDeleted">
      <summary>
        <para>Message text: The .ini file for the queue in LQS was deleted because it was corrupted.</para>
      </summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.RemoteMachineNotAvailable">
      <summary>
        <para>Message text: The remote machine is not available.</para>
        <para>
        </para>
      </summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.UnsupportedOperation">
      <summary>
        <para>Message text: The operation is not supported for a WORKGROUP installation computer.</para>
      </summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.EncryptionProviderNotSupported">
      <summary>
        <para>Message text: The Cryptographic Service Provider is not supported by Message Queuing.</para>
      </summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.CannotSetCryptographicSecurityDescriptor">
      <summary>
        <para>Message text: Unable to set the security descriptor for the cryptographic keys.</para>
        <para>For information about cryptographic providers, see the <see cref="T:System.Messaging.CryptographicProviderType" /> and <see cref="P:System.Messaging.Message.AuthenticationProviderType" qualify="true" /> 
topics.</para>
      </summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.CertificateNotProvided">
      <summary>
        <para>Message text: A user attempted to send an authenticated message without a certificate.</para>
        <para>Message Queuing returns this error if the sending application attempts to use security context information to authenticate
      a message, and the security context does not include a certificate.
      For more information about certificates, see the <see cref="T:System.Messaging.Message" /> class's <see cref="P:System.Messaging.Message.SenderCertificate" />
      property.</para>
      </summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.CannotCreateCertificateStore">
      <summary>
        <para>Message text: Unable to create a certificate store for the internal certificate.</para>
        <para>Message Queuing returns this error if you do not have permission to
      manipulate your own profile.</para>
        <para>
        </para>
      </summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.CannotOpenCertificateStore">
      <summary>
        <para>Message text: Unable to open the certificates store for the internal certificate.</para>
        <para>Message Queuing returns this error if you do not have permission to
      manipulate your own profile.</para>
        <para>
        </para>
      </summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.IllegalEnterpriseOperation">
      <summary>
        <para>Message text: The operation is invalid for a Message Queuing services object.</para>
      </summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.CannotGrantAddGuid">
      <summary>
        <para>Message text: Failed to grant the "Add Guid" permission to current user.</para>
      </summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.CannotLoadMsmqOcm">
      <summary>
        <para>Message text: Cannot load the MSMQOCM.DLL library.</para>
      </summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.NoEntryPointMsmqOcm">
      <summary>
        <para>Message text: Cannot locate an entry point in the MSMQOCM.DLL library.</para>
      </summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.NoMsmqServersOnDc">
      <summary>
        <para>Message text: Failed to find Message Queuing servers on domain controllers.</para>
      </summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.CannotJoinDomain">
      <summary>
        <para>Message text: Failed to join Message Queuing enterprise on Windows 2000 domain.</para>
      </summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.CannotCreateOnGlobalCatalog">
      <summary>
        <para>Message text: Failed to create an object on a specified global catalog server.</para>
        <para>
        </para>
      </summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.GuidNotMatching">
      <summary>
        <para>Message text: Failed to create Message Queuing configuration object with a GUID that matches the computer installation. You must uninstall Message Queuing and then reinstall it.</para>
      </summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.PublicKeyNotFound">
      <summary>
        <para>Message text: Unable to find the public key for computer.</para>
        <para> 
      Message Queuing returns this error, for example, if
      you are trying to retrieve the computer properties of a computer running Message
      Queuing 1.0 or if you are trying to get remote computer properties while working
      offline. This error applies only to Message Queuing 2.0.</para>
      </summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.PublicKeyDoesNotExist">
      <summary>
        <para>Message text: The public key for the computer does not exist.</para>
        <para> Message Queuing returns this
      error if it was able to query the directory service, but the enhanced key was not
      found. This error applies only to Message Queuing 2.0.</para>
        <para>
        </para>
      </summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.NoGlobalCatalogInDomain">
      <summary>
        <para>Message text: Unable to find Global Catalog servers in the specified domain.</para>
      </summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.NoMsmqServersOnGlobalCatalog">
      <summary>
        <para>Message text: Failed to find Message Queuing servers on Global Catalog domain controllers.</para>
      </summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.CannotGetDistinguishedName">
      <summary>
        <para>Message text: Failed to retrieve the distinguished name of local computer.</para>
      </summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.CannotHashDataEx">
      <summary>
        <para>Message text: Unable to hash data for an authenticated message.</para>
      </summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.CannotSignDataEx">
      <summary>
        <para>Message text: Unable to sign data before sending an authenticated message.</para>
        <para>See the <see cref="T:System.Messaging.Message" /> class's <see cref="P:System.Messaging.Message.DigitalSignature" /> property for more information about 
   signing data.</para>
      </summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.CannotCreateHashEx">
      <summary>
        <para>Message text: Unable to create a hash object for an authenticated message.</para>
        <para>See the <see cref="T:System.Messaging.Message" /> class's <see cref="P:System.Messaging.Message.HashAlgorithm" /> property for more
   information about hash algorithms.</para>
      </summary>
    </member>
    <member name="F:System.Messaging.MessageQueueErrorCode.FailVerifySignatureEx">
      <summary>
        <para>Message text: Signature of received message is not valid.</para>
      </summary>
    </member>
    <member name="T:System.Messaging.MessageQueueException">
      <summary>
        <para> The exception that is thrown if a
      Microsoft Message Queuing internal error occurs.
      </para>
      </summary>
    </member>
    <member name="M:System.Messaging.MessageQueueException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
        <para> Populates a serialization information object
      with the data needed to serialize the <see cref="T:System.Messaging.MessageQueueException" /> . </para>
      </summary>
      <param name="info">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized data associated with the <see cref="T:System.Messaging.MessageQueueException" /> . </param>
      <param name=" context">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains the source and destination of the serialized stream associated with the <see cref="T:System.Messaging.MessageQueueException" /> . </param>
    </member>
    <member name="P:System.Messaging.MessageQueueException.MessageQueueErrorCode">
      <summary>
        <para>Gets a value that indicates the error code associated with this exception.</para>
      </summary>
    </member>
    <member name="P:System.Messaging.MessageQueueException.Message">
      <summary>
        <para> Gets a value that describes the Message 
 Queuing error. </para>
      </summary>
    </member>
    <member name="T:System.Messaging.MessageQueueInstaller">
      <summary>
        <para>Allows you to install and configure a queue that your application needs
      in order to run. This class is called by the installation utility, for
      example InstallUtil.exe, when installing a <see cref="T:System.Messaging.MessageQueue" />.
      </para>
      </summary>
    </member>
    <member name="M:System.Messaging.MessageQueueInstaller.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Messaging.MessageQueueInstaller" /> class. Does not set any instance properties.</para>
      </summary>
    </member>
    <member name="M:System.Messaging.MessageQueueInstaller.#ctor(System.Messaging.MessageQueue)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Messaging.MessageQueueInstaller" /> class, initializing the installation settings
   to those of an existing <see cref="T:System.Messaging.MessageQueue" /> instance.</para>
      </summary>
      <param name="componentToCopy">The <see cref="T:System.Messaging.MessageQueue" /> component whose settings determine the property settings of the new queue installed.</param>
    </member>
    <member name="M:System.Messaging.MessageQueueInstaller.Commit(System.Collections.IDictionary)">
      <summary>
        <para>Completes the installation process by committing the <see cref="T:System.Messaging.MessageQueue" />
installation information that the <see cref="M:System.Messaging.MessageQueueInstaller.Install(System.Collections.IDictionary)" /> method wrote to the
Registry. This method is meant to be used by installation tools, which
automatically call the appropriate methods.</para>
      </summary>
      <param name="savedState">An <see cref="T:System.Collections.IDictionary" /> that contains the post-installation state of the computer. </param>
    </member>
    <member name="M:System.Messaging.MessageQueueInstaller.CopyFromComponent(System.ComponentModel.IComponent)">
      <summary>
        <para>Copies the property values of a <see cref="T:System.Messaging.MessageQueue" /> component that are required at install time
   for a message queue.
   </para>
      </summary>
      <param name="component">An <see cref="T:System.ComponentModel.IComponent" /> to use as a template for the <see cref="T:System.Messaging.MessageQueueInstaller" />.</param>
    </member>
    <member name="M:System.Messaging.MessageQueueInstaller.Install(System.Collections.IDictionary)">
      <summary>
        <para>Performs the installation and writes message queue
      information to the Registry. This method is meant to be
      used by installation tools, which automatically call the appropriate methods.</para>
      </summary>
      <param name="stateSaver">
        <para>An <see cref="T:System.Collections.IDictionary" /> used to save information needed to perform a commit, rollback, or uninstall operation. </para>
      </param>
    </member>
    <member name="M:System.Messaging.MessageQueueInstaller.IsEquivalentInstaller(System.Configuration.Install.ComponentInstaller)">
      <summary>
        <para>Determines whether the specified installer can handle the
      same kind of installation as this installer.</para>
      </summary>
      <param name="otherInstaller">The installer to compare.</param>
      <returns>
        <para>
          <see langword="true" /> if this installer and the
   installer specified by the <paramref name="otherInstaller" /> parameter can handle the
   same kind of installation; otherwise, <see langword="false" />.</para>
      </returns>
    </member>
    <member name="M:System.Messaging.MessageQueueInstaller.Rollback(System.Collections.IDictionary)">
      <summary>
        <para> Restores the computer to the state it was in before the
      installation, by rolling back the queue information that the installation procedure wrote to the
      Registry. This method is meant to be used by installation tools, which automatically call
      the appropriate methods.
      </para>
      </summary>
      <param name="savedState">
        <para>An <see cref="T:System.Collections.IDictionary" /> that contains the pre-installation state of the computer.</para>
      </param>
    </member>
    <member name="M:System.Messaging.MessageQueueInstaller.Uninstall(System.Collections.IDictionary)">
      <summary>
        <para> Removes an installation by removing queue information
      from the Registry. This method is meant to be used by uninstallation tools, which automatically call the appropriate methods.
      </para>
      </summary>
      <param name="savedState">
        <para>An <see cref="T:System.Collections.IDictionary" /> that contains the post-installation state of the computer. </para>
      </param>
    </member>
    <member name="P:System.Messaging.MessageQueueInstaller.Authenticate">
      <summary>
        <para> Gets or sets a value indicating whether the queue to be installed accepts only authenticated messages.</para>
      </summary>
    </member>
    <member name="P:System.Messaging.MessageQueueInstaller.BasePriority">
      <summary>
        <para> Gets or sets
      the base priority that is used
      to route a public queue's messages over the network.</para>
      </summary>
    </member>
    <member name="P:System.Messaging.MessageQueueInstaller.Category">
      <summary>
        <para> Gets or
      sets an implementation-specific queue type.</para>
      </summary>
    </member>
    <member name="P:System.Messaging.MessageQueueInstaller.EncryptionRequired">
      <summary>
        <para> Gets or sets a value indicating whether the queue accepts only private, or
      encrypted, messages.</para>
      </summary>
    </member>
    <member name="P:System.Messaging.MessageQueueInstaller.Label">
      <summary>
        <para>Gets or sets a description of the queue.</para>
      </summary>
    </member>
    <member name="P:System.Messaging.MessageQueueInstaller.MaximumJournalSize">
      <summary>
        <para>Gets or sets the maximum size of the journal that is associated with the queue.</para>
      </summary>
    </member>
    <member name="P:System.Messaging.MessageQueueInstaller.MaximumQueueSize">
      <summary>
        <para> Gets or sets the maximum size of the queue.</para>
      </summary>
    </member>
    <member name="P:System.Messaging.MessageQueueInstaller.Path">
      <summary>
        <para> Gets or
      sets the
      location of the
      queue
      that is referenced by this object.</para>
      </summary>
    </member>
    <member name="P:System.Messaging.MessageQueueInstaller.Permissions">
      <summary>
        <para>Gets or sets permissions associated with the queue.</para>
      </summary>
    </member>
    <member name="P:System.Messaging.MessageQueueInstaller.Transactional">
      <summary>
        <para> 
      Gets or sets a value indicating whether the queue accepts only
      messages sent as part of a transaction.</para>
      </summary>
    </member>
    <member name="P:System.Messaging.MessageQueueInstaller.UninstallAction">
      <summary>
        <para>Gets or sets a value indicating what the installer does with the queue at uninstall time: remove it, restore it
      to its pre-installation state, or leave it in its current installed state.</para>
      </summary>
    </member>
    <member name="P:System.Messaging.MessageQueueInstaller.UseJournalQueue">
      <summary>
        <para>Gets or sets a value indicating whether messages that are retrieved from the queue are also copied to the
      associated journal queue.</para>
      </summary>
    </member>
    <member name="T:System.Messaging.MessageQueuePermission">
      <summary>
        <para>Allows control of code access permissions for messaging.</para>
      </summary>
    </member>
    <member name="M:System.Messaging.MessageQueuePermission.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Messaging.MessageQueuePermission" /> class.</para>
      </summary>
    </member>
    <member name="M:System.Messaging.MessageQueuePermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Messaging.MessageQueuePermission" /> class with the
   specified permission state.</para>
      </summary>
      <param name="state">One of the <see cref="T:System.Security.Permissions.PermissionState" /> values.</param>
    </member>
    <member name="M:System.Messaging.MessageQueuePermission.#ctor(System.Messaging.MessageQueuePermissionAccess,System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Messaging.MessageQueuePermission" /> class with the 
   specified access levels and the path of the queue.</para>
      </summary>
      <param name="permissionAccess">One of the <see cref="T:System.Messaging.MessageQueuePermissionAccess" /> values.</param>
      <param name=" path">The path of the queue that is referenced by the <see cref="T:System.Messaging.MessageQueue" />.</param>
    </member>
    <member name="M:System.Messaging.MessageQueuePermission.#ctor(System.Messaging.MessageQueuePermissionAccess,System.String,System.String,System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Messaging.MessageQueuePermission" /> class with the 
   specified access levels, computer to use, queue description, and queue
   category.</para>
      </summary>
      <param name="permissionAccess">One of the <see cref="T:System.Messaging.MessageQueuePermissionAccess" /> values.</param>
      <param name=" machineName">The name of the computer where the Message Queuing queue is located.</param>
      <param name=" label">The queue description.</param>
      <param name=" category">The queue category (Message Queuing type identifier).</param>
    </member>
    <member name="M:System.Messaging.MessageQueuePermission.#ctor(System.Messaging.MessageQueuePermissionEntry[])">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Messaging.MessageQueuePermission" /> class with the
   specified permission access level entries.</para>
      </summary>
      <param name="permissionAccessEntries">An array of <see cref="T:System.Messaging.MessageQueuePermissionEntry" /> objects. The <see cref="P:System.Messaging.MessageQueuePermission.PermissionEntries" /> property is set to this value.</param>
    </member>
    <member name="P:System.Messaging.MessageQueuePermission.PermissionEntries">
      <summary>
        <para>Gets the collection of permission entries for this permissions request.</para>
      </summary>
    </member>
    <member name="T:System.Messaging.MessageQueuePermissionAccess">
      <summary>
        <para>Defines access levels used by <see cref="N:System.Messaging" /> permission classes.</para>
      </summary>
    </member>
    <member name="F:System.Messaging.MessageQueuePermissionAccess.None">
      <summary>
        <para>The <see cref="T:System.Messaging.MessageQueue" /> has no permissions.</para>
      </summary>
    </member>
    <member name="F:System.Messaging.MessageQueuePermissionAccess.Browse">
      <summary>
        <para>The <see cref="T:System.Messaging.MessageQueue" /> can look 
 at the queues that are available.</para>
      </summary>
    </member>
    <member name="F:System.Messaging.MessageQueuePermissionAccess.Send">
      <summary>
        <para>The <see cref="T:System.Messaging.MessageQueue" /> can look 
 at the queues that are available and send
 messages.</para>
      </summary>
    </member>
    <member name="F:System.Messaging.MessageQueuePermissionAccess.Peek">
      <summary>
        <para>The <see cref="T:System.Messaging.MessageQueue" /> can look at the queues that are available and
 read the messages in the queue.</para>
      </summary>
    </member>
    <member name="F:System.Messaging.MessageQueuePermissionAccess.Receive">
      <summary>
        <para>The <see cref="T:System.Messaging.MessageQueue" /> can look at the queues that are available, 
 read the messages in the queue, and receive messages.</para>
      </summary>
    </member>
    <member name="F:System.Messaging.MessageQueuePermissionAccess.Administer">
      <summary>
        <para>The <see cref="T:System.Messaging.MessageQueue" /> can look 
 at the queues that are available, read the
 messages in the queue, and send and receive
 messages.</para>
      </summary>
    </member>
    <member name="T:System.Messaging.MessageQueuePermissionAttribute">
      <summary>
        <para>Allows declaritive <see cref="T:System.Messaging.MessageQueue" /> permission checks.</para>
      </summary>
    </member>
    <member name="M:System.Messaging.MessageQueuePermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Messaging.MessageQueuePermissionAttribute" /> class.</para>
      </summary>
      <param name="action">One of the <see cref="T:System.Security.Permissions.SecurityAction" /> values.</param>
    </member>
    <member name="M:System.Messaging.MessageQueuePermissionAttribute.CreatePermission">
      <summary>
        <para> Creates the permission based on the requested
      access levels, category, label, computer name, and path that are set through the
   <see cref="P:System.Messaging.MessageQueuePermissionAttribute.PermissionAccess" />, <see cref="P:System.Messaging.MessageQueuePermissionAttribute.Category" />, <see cref="P:System.Messaging.MessageQueuePermissionAttribute.Label" />, <see cref="P:System.Messaging.MessageQueuePermissionAttribute.MachineName" />, and <see cref="P:System.Messaging.MessageQueuePermissionAttribute.Path" /> properties on the attribute.</para>
      </summary>
      <returns>
        <para>An <see cref="T:System.Security.IPermission" /> that represents the created permission.</para>
      </returns>
    </member>
    <member name="P:System.Messaging.MessageQueuePermissionAttribute.Category">
      <summary>
        <para> Gets or sets the queue category.</para>
      </summary>
    </member>
    <member name="P:System.Messaging.MessageQueuePermissionAttribute.Label">
      <summary>
        <para> Gets or sets the queue description.</para>
      </summary>
    </member>
    <member name="P:System.Messaging.MessageQueuePermissionAttribute.MachineName">
      <summary>
        <para> Gets or sets the name of the computer where the Message
      Queuing queue is located.</para>
      </summary>
    </member>
    <member name="P:System.Messaging.MessageQueuePermissionAttribute.Path">
      <summary>
        <para> Gets or sets the queue's path.</para>
      </summary>
    </member>
    <member name="P:System.Messaging.MessageQueuePermissionAttribute.PermissionAccess">
      <summary>
        <para>Gets or sets the permission access levels used in the
      permissions request.</para>
      </summary>
    </member>
    <member name="T:System.Messaging.MessageQueuePermissionEntry">
      <summary>
        <para>Defines the smallest unit of a code access security permission set for messaging.</para>
      </summary>
    </member>
    <member name="M:System.Messaging.MessageQueuePermissionEntry.#ctor(System.Messaging.MessageQueuePermissionAccess,System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Messaging.MessageQueuePermissionEntry" /> class with the
   specified permission access levels and the path of the queue.</para>
      </summary>
      <param name="permissionAccess">A bitwise combination of the <see cref="T:System.Messaging.MessageQueuePermissionAccess" /> values. The <see cref="P:System.Messaging.MessageQueuePermissionEntry.PermissionAccess" /> property is set to this value.</param>
      <param name=" path">The path of the queue that is referenced by the <see cref="T:System.Messaging.MessageQueue" /> object. The <see cref="P:System.Messaging.MessageQueuePermissionEntry.Path" /> property is set to this value.</param>
    </member>
    <member name="M:System.Messaging.MessageQueuePermissionEntry.#ctor(System.Messaging.MessageQueuePermissionAccess,System.String,System.String,System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Messaging.MessageQueuePermissionEntry" /> class with the specified
   permission access levels, the name of the computer where the queue is
   located, the queue description, and the queue category.</para>
      </summary>
      <param name="permissionAccess">A bitwise combination of the <see cref="T:System.Messaging.MessageQueuePermissionAccess" /> values. The <see cref="P:System.Messaging.MessageQueuePermissionEntry.PermissionAccess" /> property is set to this value.</param>
      <param name=" machineName">The name of the computer where the Message Queuing queue is located. The <see cref="P:System.Messaging.MessageQueuePermissionEntry.MachineName" /> property is set to this value.</param>
      <param name=" label">The queue description. The <see cref="P:System.Messaging.MessageQueuePermissionEntry.Label" /> property is set to this value.</param>
      <param name=" category">The queue category (Message Queuing type identifier). The <see cref="P:System.Messaging.MessageQueuePermissionEntry.Category" /> property is set to this value.</param>
    </member>
    <member name="P:System.Messaging.MessageQueuePermissionEntry.Category">
      <summary>
        <para> Gets the queue category.</para>
      </summary>
    </member>
    <member name="P:System.Messaging.MessageQueuePermissionEntry.Label">
      <summary>
        <para> Gets the queue description.</para>
      </summary>
    </member>
    <member name="P:System.Messaging.MessageQueuePermissionEntry.MachineName">
      <summary>
        <para> Gets the name of the computer where the Message
      Queuing queue is located.</para>
      </summary>
    </member>
    <member name="P:System.Messaging.MessageQueuePermissionEntry.Path">
      <summary>
        <para> Gets the queue's path.</para>
      </summary>
    </member>
    <member name="P:System.Messaging.MessageQueuePermissionEntry.PermissionAccess">
      <summary>
        <para>Gets the permission access levels used in the 
      permissions request.</para>
      </summary>
    </member>
    <member name="T:System.Messaging.MessageQueuePermissionEntryCollection">
      <summary>
        <para>Contains a strongly typed collection of <see cref="T:System.Messaging.MessageQueuePermissionEntry" /> objects.</para>
      </summary>
    </member>
    <member name="M:System.Messaging.MessageQueuePermissionEntryCollection.Add(System.Messaging.MessageQueuePermissionEntry)">
      <summary>
        <para>Adds a specified <see cref="T:System.Messaging.MessageQueuePermissionEntry" /> to this collection.</para>
      </summary>
      <param name="value">The <see cref="T:System.Messaging.MessageQueuePermissionEntry" /> to add.</param>
      <returns>
        <para>The zero-based index of the added <see cref="T:System.Messaging.MessageQueuePermissionEntry" />.</para>
      </returns>
    </member>
    <member name="M:System.Messaging.MessageQueuePermissionEntryCollection.AddRange(System.Messaging.MessageQueuePermissionEntry[])">
      <summary>
        <para>Appends a set of specified permission entries to this collection.</para>
      </summary>
      <param name="value">An array of type <see cref="T:System.Messaging.MessageQueuePermissionEntry" /> objects that contains the permission entries to add.</param>
    </member>
    <member name="M:System.Messaging.MessageQueuePermissionEntryCollection.AddRange(System.Messaging.MessageQueuePermissionEntryCollection)">
      <summary>
        <para> Appends a set of specified permission entries to this collection.</para>
      </summary>
      <param name="value">A <see cref="T:System.Messaging.MessageQueuePermissionEntryCollection" /> that contains the permission entries to add.</param>
    </member>
    <member name="M:System.Messaging.MessageQueuePermissionEntryCollection.Contains(System.Messaging.MessageQueuePermissionEntry)">
      <summary>
        <para>Determines whether this collection contains a specified
   <see cref="T:System.Messaging.MessageQueuePermissionEntry" /> .</para>
      </summary>
      <param name="value">The <see cref="T:System.Messaging.MessageQueuePermissionEntry" /> to find.</param>
      <returns>
        <para>
          <see langword="true" /> if the specified <see cref="T:System.Messaging.MessageQueuePermissionEntry" /> belongs to this collection;
   otherwise, <see langword="false" />.</para>
      </returns>
    </member>
    <member name="M:System.Messaging.MessageQueuePermissionEntryCollection.CopyTo(System.Messaging.MessageQueuePermissionEntry[],System.Int32)">
      <summary>
        <para>Copies the permission entries from this collection to an
      array, starting at a particular index of the array.</para>
      </summary>
      <param name="array">An array of type <see cref="T:System.Messaging.MessageQueuePermissionEntry" /> that receives this collection's permission entries.</param>
      <param name=" index"> The zero-based index at which to begin copying the permission entries.</param>
    </member>
    <member name="M:System.Messaging.MessageQueuePermissionEntryCollection.IndexOf(System.Messaging.MessageQueuePermissionEntry)">
      <summary>
        <para>Determines the index of a specified permission entry in this collection.</para>
      </summary>
      <param name="value">The permission entry to search for.</param>
      <returns>
        <para>The zero-based index of the specified permission 
      entry, or -1 if the permission entry was not found in the collection.</para>
      </returns>
    </member>
    <member name="M:System.Messaging.MessageQueuePermissionEntryCollection.Insert(System.Int32,System.Messaging.MessageQueuePermissionEntry)">
      <summary>
        <para>Inserts a permission entry into this collection at a specified index.</para>
      </summary>
      <param name="index">The zero-based index into the collection at which to insert the permission entry.</param>
      <param name=" value">The permission entry to insert into this collection.</param>
    </member>
    <member name="M:System.Messaging.MessageQueuePermissionEntryCollection.Remove(System.Messaging.MessageQueuePermissionEntry)">
      <summary>
        <para>Removes a specified permission entry from this collection.</para>
      </summary>
      <param name="value">The permission entry to remove.</param>
    </member>
    <member name="P:System.Messaging.MessageQueuePermissionEntryCollection.Item(System.Int32)">
      <summary>
        <para>Gets or sets the object at a specified index.</para>
      </summary>
      <param name="index">The zero-based index into the collection.</param>
    </member>
    <member name="T:System.Messaging.MessageQueueTransaction">
      <summary>
        <para> Provides a Message Queuing internal transaction.</para>
      </summary>
    </member>
    <member name="M:System.Messaging.MessageQueueTransaction.#ctor">
      <summary>
        <para> Initializes a new instance of the <see cref="T:System.Messaging.MessageQueueTransaction" /> class.
   </para>
      </summary>
    </member>
    <member name="M:System.Messaging.MessageQueueTransaction.Abort">
      <summary>
        <para> Rolls back the pending internal transaction.
      </para>
      </summary>
    </member>
    <member name="M:System.Messaging.MessageQueueTransaction.Begin">
      <summary>
        <para> Begins a new Message Queuing internal transaction.
      </para>
      </summary>
    </member>
    <member name="M:System.Messaging.MessageQueueTransaction.Commit">
      <summary>
        <para> Commits a pending internal transaction.
      </para>
      </summary>
    </member>
    <member name="M:System.Messaging.MessageQueueTransaction.Dispose">
      <summary>
        <para> Releases all resources used by the <see cref="T:System.Messaging.MessageQueueTransaction" />
.</para>
      </summary>
    </member>
    <member name="M:System.Messaging.MessageQueueTransaction.Dispose(System.Boolean)">
      <summary>
        <para>Releases the unmanaged resources used by the <see cref="T:System.Messaging.MessageQueueTransaction" /> and optionally releases the managed resources. </para>
      </summary>
      <param name="disposing">
        <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources. </param>
    </member>
    <member name="P:System.Messaging.MessageQueueTransaction.Status">
      <summary>
        <para> Gets the status of the transaction.
      </para>
      </summary>
    </member>
    <member name="T:System.Messaging.MessageQueueTransactionStatus">
      <summary>
        <para>Specifies the state of an internal Message Queuing transaction.</para>
      </summary>
    </member>
    <member name="F:System.Messaging.MessageQueueTransactionStatus.Aborted">
      <summary>
        <para>The transaction has been aborted and all participants 
      have been notified.</para>
      </summary>
    </member>
    <member name="F:System.Messaging.MessageQueueTransactionStatus.Committed">
      <summary>
        <para>The transaction has been committed and all participants 
      have been notified.</para>
      </summary>
    </member>
    <member name="F:System.Messaging.MessageQueueTransactionStatus.Initialized">
      <summary>
        <para>The transaction has been initialized. It has not yet been started.</para>
      </summary>
    </member>
    <member name="F:System.Messaging.MessageQueueTransactionStatus.Pending">
      <summary>
        <para>The transaction has been started. It has not yet been 
      either committed or rolled back.</para>
      </summary>
    </member>
    <member name="T:System.Messaging.MessageQueueTransactionType">
      <summary>
        <para> Specifies the type of a Message Queuing transaction.</para>
      </summary>
    </member>
    <member name="F:System.Messaging.MessageQueueTransactionType.None">
      <summary>
        <para>Operation will not be transactional.</para>
      </summary>
    </member>
    <member name="F:System.Messaging.MessageQueueTransactionType.Automatic">
      <summary>
        <para>A transaction type used for Microsoft Transaction Server
      (MTS) or COM+ 1.0 Services. If there is already an MTS transaction context, it will be used when
      sending or receiving the message.</para>
        <para>
        </para>
      </summary>
    </member>
    <member name="F:System.Messaging.MessageQueueTransactionType.Single">
      <summary>
        <para>A transaction type used for single internal 
      transactions.</para>
      </summary>
    </member>
    <member name="T:System.Messaging.MessageType">
      <summary>
        <para> Identifies the type of a message. A message can be a typical Message Queuing message, a positive (arrival and read) or negative
      (arrival and read) acknowledgment message, or a report message.</para>
      </summary>
    </member>
    <member name="F:System.Messaging.MessageType.Acknowledgment">
      <summary>
        <para> 
 An acknowledgment message.</para>
      </summary>
    </member>
    <member name="F:System.Messaging.MessageType.Normal">
      <summary>
        <para>A normal Message Queuing message.</para>
      </summary>
    </member>
    <member name="F:System.Messaging.MessageType.Report">
      <summary>
        <para>A report message.</para>
      </summary>
    </member>
    <member name="T:System.Messaging.MessagingDescriptionAttribute">
      <summary>
        <para> 
      Specifies a description for a property
      or event.</para>
      </summary>
    </member>
    <member name="M:System.Messaging.MessagingDescriptionAttribute.#ctor(System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Messaging.MessagingDescriptionAttribute" /> class, using the
   specified description.</para>
      </summary>
      <param name="description">The application-defined description text. </param>
    </member>
    <member name="P:System.Messaging.MessagingDescriptionAttribute.Description">
      <summary>
        <para>Gets description text associated with the item monitored.</para>
      </summary>
    </member>
    <member name="T:System.Messaging.PeekCompletedEventArgs">
      <summary>
        <para>Provides data for the <see cref="E:System.Messaging.MessageQueue.PeekCompleted" /> event. When your asynchronous peek
   operation calls an event handler, an instance of this class is passed to the
   handler.</para>
      </summary>
    </member>
    <member name="P:System.Messaging.PeekCompletedEventArgs.AsyncResult">
      <summary>
        <para>Gets or sets the result of the asynchronous
       operation requested.</para>
      </summary>
    </member>
    <member name="P:System.Messaging.PeekCompletedEventArgs.Message">
      <summary>
        <para> Gets the message associated with the asynchronous peek operation.</para>
      </summary>
    </member>
    <member name="T:System.Messaging.PeekCompletedEventHandler">
      <summary>
        <para>Represents the method that will handle the <see cref="E:System.Messaging.MessageQueue.PeekCompleted" /> event of a <see cref="T:System.Messaging.MessageQueue" />.</para>
      </summary>
      <param name="sender">The source of the event, the <see cref="T:System.Messaging.MessageQueue" /> .</param>
      <param name="e">A <see cref="T:System.Messaging.PeekCompletedEventArgs" /> that contains the event data.</param>
    </member>
    <member name="T:System.Messaging.ReceiveCompletedEventArgs">
      <summary>
        <para>Provides data for the <see cref="E:System.Messaging.MessageQueue.ReceiveCompleted" />
event. When your asynchronous receive operation calls an event handler, an
instance of this class is passed to the
handler.</para>
      </summary>
    </member>
    <member name="P:System.Messaging.ReceiveCompletedEventArgs.AsyncResult">
      <summary>
        <para> Gets or sets the result of the asynchronous
       operation requested.</para>
      </summary>
    </member>
    <member name="P:System.Messaging.ReceiveCompletedEventArgs.Message">
      <summary>
        <para> Gets the message associated
 with the asynchronous receive operation.</para>
      </summary>
    </member>
    <member name="T:System.Messaging.ReceiveCompletedEventHandler">
      <summary>
        <para>Represents the method that will handle the <see cref="E:System.Messaging.MessageQueue.ReceiveCompleted" /> event of a <see cref="T:System.Messaging.MessageQueue" />.</para>
      </summary>
      <param name="sender">The source of the event, the <see cref="T:System.Messaging.MessageQueue" /> .</param>
      <param name="e">A <see cref="T:System.Messaging.ReceiveCompletedEventArgs" /> that contains the event data.</param>
    </member>
    <member name="T:System.Messaging.StandardAccessRights">
      <summary>
        <para>Specifies a set of standard access rights that correspond
      to operations common to most types of securable objects.</para>
      </summary>
    </member>
    <member name="F:System.Messaging.StandardAccessRights.Delete">
      <summary>
        <para>The right to delete the object.</para>
      </summary>
    </member>
    <member name="F:System.Messaging.StandardAccessRights.ReadSecurity">
      <summary>
        <para>The right to read the information in the object's
      security descriptor.</para>
        <para>
        </para>
      </summary>
    </member>
    <member name="F:System.Messaging.StandardAccessRights.WriteSecurity">
      <summary>
        <para>The right to modify the discretionary access control 
      list (DACL) in the security descriptor.</para>
        <note type="note">
      The DACL controls access to the
      object. Being able to write to the DACL gives the user the ability to set
      security for the object.
   </note>
      </summary>
    </member>
    <member name="F:System.Messaging.StandardAccessRights.Synchronize">
      <summary>
        <para>The right to use the object for synchronization. This
      enables a thread to wait until the object is in a specific state.</para>
        <para>
        </para>
      </summary>
    </member>
    <member name="F:System.Messaging.StandardAccessRights.ModifyOwner">
      <summary>
        <para>The right to change the owner in the object's security descriptor.</para>
      </summary>
    </member>
    <member name="F:System.Messaging.StandardAccessRights.Read">
      <summary>
        <para>The right to read the information in the object's 
      security descriptor. <see langword="Read" /> is currently defined
      to equal <see langword="ReadSecurity" />.
      </para>
      </summary>
    </member>
    <member name="F:System.Messaging.StandardAccessRights.Write">
      <summary>
        <para>The right to read the information in the object's 
      security descriptor. <see langword="Write" /> is currently defined
      to equal <see langword="ReadSecurity" />.</para>
      </summary>
    </member>
    <member name="F:System.Messaging.StandardAccessRights.Execute">
      <summary>
        <para>The right to read the information in the object's 
      security descriptor. On Windows 2000 and Windows NT, the security descriptor
      contains the security information for a securable object. It identifies the object's owner and primary group. <see langword="Execute" /> is currently defined
      to equal <see langword="ReadSecurity" />.</para>
        <para>
        </para>
      </summary>
    </member>
    <member name="F:System.Messaging.StandardAccessRights.Required">
      <summary>
        <para>Combines <see langword="Delete" />, 
<see langword="ReadSecurity" />, <see langword="WriteSecurity" />, and 
<see langword="ModifyOwner" /> access.</para>
      </summary>
    </member>
    <member name="F:System.Messaging.StandardAccessRights.All">
      <summary>
        <para>Combines <see langword="Delete" />, 
<see langword="ReadSecurity" />, <see langword="WriteSecurity" /> , 
<see langword="ModifyOwner" />, and <see langword="Synchronize" /> access.</para>
      </summary>
    </member>
    <member name="F:System.Messaging.StandardAccessRights.None">
      <summary>
        <para> No access.</para>
      </summary>
    </member>
    <member name="T:System.Messaging.Trustee">
      <summary>
        <para>Specifies a user account, group account, or logon
      session to which an access control entry applies.</para>
      </summary>
    </member>
    <member name="M:System.Messaging.Trustee.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Messaging.Trustee" /> class
   without setting any of its read/write properties.</para>
      </summary>
    </member>
    <member name="M:System.Messaging.Trustee.#ctor(System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Messaging.Trustee" /> class
   of type <see langword="Unknown" />, setting the <see cref="P:System.Messaging.Trustee.Name" />
   property to the value specified, and the <see cref="P:System.Messaging.Trustee.SystemName" /> to <see langword="null" />.</para>
      </summary>
      <param name="name">The value to assign to the <see cref="P:System.Messaging.Trustee.Name" /> property.</param>
    </member>
    <member name="M:System.Messaging.Trustee.#ctor(System.String,System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Messaging.Trustee" /> class
   of type <see langword="Unknown" />, setting the <see cref="P:System.Messaging.Trustee.Name" /> and the
<see langword="SystemName" /> properties to the values specified. </para>
      </summary>
      <param name="name">The value to assign to the <see cref="P:System.Messaging.Trustee.Name" /> property.</param>
      <param name=" systemName">The value to assign to the <see cref="P:System.Messaging.Trustee.SystemName" /> property.</param>
    </member>
    <member name="M:System.Messaging.Trustee.#ctor(System.String,System.String,System.Messaging.TrusteeType)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Messaging.Trustee" /> class of the specified type, setting the <see cref="P:System.Messaging.Trustee.Name" /> and 
   the <see cref="P:System.Messaging.Trustee.SystemName" /> properties to the values specified. </para>
      </summary>
      <param name="name">The value to assign to the <see cref="P:System.Messaging.Trustee.Name" /> property.</param>
      <param name=" systemName">The value to assign to the <see cref="P:System.Messaging.Trustee.SystemName" /> property.</param>
      <param name=" trusteeType">A <see cref="T:System.Messaging.TrusteeType" /> that indicates the account type of the trustee.</param>
    </member>
    <member name="P:System.Messaging.Trustee.Name">
      <summary>
        <para>Gets or sets the name of the trustee.</para>
      </summary>
    </member>
    <member name="P:System.Messaging.Trustee.SystemName">
      <summary>
        <para> Gets or sets the computer on which to look up the
      trustee's account.</para>
      </summary>
    </member>
    <member name="P:System.Messaging.Trustee.TrusteeType">
      <summary>
        <para>Gets or sets the type of the trustee, which identifies
      whether the trustee is a user, group, computer, domain, or alias.</para>
      </summary>
    </member>
    <member name="T:System.Messaging.TrusteeType">
      <summary>
        <para>Specifies the type of a trustee.</para>
      </summary>
    </member>
    <member name="F:System.Messaging.TrusteeType.Unknown">
      <summary>
        <para>The trustee type is unknown, but not necessarily invalid.</para>
      </summary>
    </member>
    <member name="F:System.Messaging.TrusteeType.User">
      <summary>
        <para> The trustee is a user.</para>
      </summary>
    </member>
    <member name="F:System.Messaging.TrusteeType.Group">
      <summary>
        <para> The trustee is a group.</para>
        <para>
        </para>
      </summary>
    </member>
    <member name="F:System.Messaging.TrusteeType.Domain">
      <summary>
        <para> The
      trustee is a domain.</para>
        <para>
        </para>
      </summary>
    </member>
    <member name="F:System.Messaging.TrusteeType.Alias">
      <summary>
        <para>The trustee is an alias.</para>
        <para>
        </para>
      </summary>
    </member>
    <member name="F:System.Messaging.TrusteeType.Computer">
      <summary>
        <para>The trustee is a computer.</para>
        <para>
        </para>
      </summary>
    </member>
    <member name="T:System.Messaging.XmlMessageFormatter">
      <summary>
        <para>Serializes and deserializes objects to or from the body of a message, using the XML format based on the XSD schema
      definition.</para>
      </summary>
    </member>
    <member name="M:System.Messaging.XmlMessageFormatter.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Messaging.XmlMessageFormatter" />
class, without target types set.</para>
      </summary>
    </member>
    <member name="M:System.Messaging.XmlMessageFormatter.#ctor(System.String[])">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Messaging.XmlMessageFormatter" /> class, setting
   target types passed in as an array of
   (fully qualified) string values.</para>
      </summary>
      <param name="targetTypeNames">An array of type <see cref="T:System.String" /> that specifies the set of possible types that will be deserialized by the formatter from the message provided. These values must be fully qualified, for example, "MyNamespace.MyOrders, MyOrdersAssemblyName".</param>
    </member>
    <member name="M:System.Messaging.XmlMessageFormatter.#ctor(System.Type[])">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Messaging.XmlMessageFormatter" />class, setting target types passed in as
   an array of object types.</para>
      </summary>
      <param name="targetTypes">An array of type <see cref="T:System.Type" /> that specifies the set of possible types that will be deserialized by the formatter from the message provided.</param>
    </member>
    <member name="M:System.Messaging.XmlMessageFormatter.CanRead(System.Messaging.Message)">
      <summary>
        <para> Determines whether the formatter can deserialize the message. </para>
      </summary>
      <param name="message">The <see cref="T:System.Messaging.Message" /> to inspect.</param>
      <returns>
        <para>
          <see langword="true" /> if the XML formatter can deserialize the
   message; otherwise, <see langword="false" />.</para>
      </returns>
    </member>
    <member name="M:System.Messaging.XmlMessageFormatter.Clone">
      <summary>
        <para>Creates an instance of the <see cref="T:System.Messaging.XmlMessageFormatter" /> class whose read/write properties (the sets of target types) are
   the same as the current <see cref="T:System.Messaging.XmlMessageFormatter" /> instance. </para>
      </summary>
      <returns>
        <para>An object whose properties are identical to those of
      this <see cref="T:System.Messaging.XmlMessageFormatter" />
      instance, but whose metadata does not specify it to be a
      formatter class instance.</para>
      </returns>
    </member>
    <member name="M:System.Messaging.XmlMessageFormatter.Read(System.Messaging.Message)">
      <summary>
        <para>Reads the contents from the given message and creates an object
      containing the deserialized message.</para>
      </summary>
      <param name="message">The <see cref="T:System.Messaging.Message" /> , in XML format, to deserialize.</param>
      <returns>
        <para> The deserialized message.</para>
      </returns>
    </member>
    <member name="M:System.Messaging.XmlMessageFormatter.Write(System.Messaging.Message,System.Object)">
      <summary>
        <para> Serializes an object into the body of the message.</para>
      </summary>
      <param name="message">The <see cref="T:System.Messaging.Message" /> whose <see cref="P:System.Messaging.Message.Body" /> property will contain the serialized object.</param>
      <param name="obj">The <see cref="T:System.Object" /> to be serialized into the message body.</param>
    </member>
    <member name="P:System.Messaging.XmlMessageFormatter.TargetTypeNames">
      <summary>
        <para>Specifies the set of possible types that will
      be deserialized by the formatter from the
      message provided.</para>
      </summary>
    </member>
    <member name="P:System.Messaging.XmlMessageFormatter.TargetTypes">
      <summary>
        <para>Specifies the set of possible types that will
      be deserialized by the formatter from the
      message provided.</para>
      </summary>
    </member>
    <member name="M:System.Messaging.Design.MessageFormatterConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>
        <para>Gets a value indicating whether this converter can
       convert an object to the given destination type using the context.</para>
      </summary>
      <param name="context">
        <para>An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context. </para>
      </param>
      <param name="destinationType">A <see cref="T:System.Type" /> that represents the type you wish to convert to.</param>
      <returns>
        <para>
          <see langword="true " />if this converter can perform the conversion; otherwise, 
 <see langword="false" />. </para>
      </returns>
    </member>
    <member name="M:System.Messaging.Design.QueuePathDialog.#ctor(System.IServiceProvider)">
      <summary>
     Creates a path editor control.
     This will create also a tree view control, and an ImageList with
     the icons.
 </summary>
    </member>
    <member name="M:System.Messaging.Design.QueuePathDialog.#ctor(System.Windows.Forms.Design.IUIService)">
    </member>
    <member name="M:System.Messaging.Design.QueuePathDialog.ChoosePath">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Messaging.Design.QueuePathDialog.DoubleClicked(System.Object,System.EventArgs)">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Messaging.Design.QueuePathDialog.SelectQueue(System.Messaging.MessageQueue)">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="P:System.Messaging.Design.QueuePathDialog.Path">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="T:System.Messaging.Design.QueuePathEditor">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Messaging.Design.QueuePathEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>
      Edits the given object value using the editor style provided by
      GetEditorStyle.  A service provider is provided so that any
      required editing services can be obtained.
 </summary>
      <param name="context">
      A type descriptor context that can be used to provide additional
      context information.
 </param>
      <param name="provider">
      A service provider object through which editing services may
      be obtained.
 </param>
      <param name="value">
      An instance of the value being edited.
 </param>
      <returns>
      The new value of the object.  If the value of the object hasn't
      changed, this should return the same object it was passed.
 </returns>
    </member>
    <member name="M:System.Messaging.Design.QueuePathEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary>
      Retrieves the editing style of the Edit method.  If the method
      is not supported, this will return None.
 </summary>
      <param name="context">
      A type descriptor context that can be used to provide additional
      context information.
 </param>
      <returns>
      An enum value indicating the provided editing style.
 </returns>
    </member>
    <member name="M:System.Messaging.Design.SizeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
    </member>
    <member name="M:System.Messaging.Design.SizeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
    </member>
    <member name="M:System.Messaging.Design.SizeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
    </member>
    <member name="M:System.Messaging.Design.TimeoutConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>
      Determines if this converter can convert an object in the given source
      type to the native type of the converter.
 </summary>
      <param name="context">
      A formatter context.  This object can be used to extract additional information
      about the environment this converter is being invoked from.  This may be null,
      so you should always check.  Also, properties on the context object may also
      return null.
 </param>
      <param name="sourceType">
      The type you wish to convert from.
 </param>
      <returns>
      True if this object can perform the conversion.
 </returns>
    </member>
    <member name="M:System.Messaging.Design.TimeoutConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>
      Converts the given object to the converter's native type.
 </summary>
      <param name="context">
      A formatter context.  This object can be used to extract additional information
      about the environment this converter is being invoked from.  This may be null,
      so you should always check.  Also, properties on the context object may also
      return null.
 </param>
      <param name="culture">
      Culture to use to perform the conversion
 </param>
      <param name="value">
      The object to convert.
 </param>
      <returns>
      The converted object.  This will throw an excetpion if the converson
      could not be performed.
 </returns>
    </member>
    <member name="M:System.Messaging.Design.TimeoutConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>
      Converts the given object to another type.  The most common types to convert
      are to and from a string object.  The default implementation will make a call
      to ToString on the object if the object is valid and if the destination
      type is string.  If this cannot convert to the desitnation type, this will
      throw a NotSupportedException.
 </summary>
      <param name="context">
      A formatter context.  This object can be used to extract additional information
      about the environment this converter is being invoked from.  This may be null,
      so you should always check.  Also, properties on the context object may also
      return null.
 </param>
      <param name="culture">
      Culture to use to perform the conversion
 </param>
      <param name="value">
      The object to convert.
 </param>
      <param name="destinationType">
      The type to convert the object to.
 </param>
      <returns>
      The converted object.
 </returns>
    </member>
  </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\tools\x86\managed\urt\v1.0.3705\system.management.xml ===
<?xml version="1.0"?>
<doc>
  <assembly>
    <name>System.Management</name>
  </assembly>
  <members>
    <member name="T:System.Management.ManagementNamedValueCollection">
      <summary>
        <para> Represents a collection of named values
                  suitable for use as context information to WMI operations. The
                  names are case-insensitive.</para>
      </summary>
    </member>
    <member name="M:System.Management.ManagementNamedValueCollection.#ctor">
      <summary>
        <para> Initializes a new instance of the <see cref="T:System.Management.ManagementNamedValueCollection" /> class, which is empty. This is 
               the default constructor.</para>
      </summary>
    </member>
    <member name="M:System.Management.ManagementNamedValueCollection.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Management.ManagementNamedValueCollection" /> class that is serializable 
               and uses the specified <see cref="T:System.Runtime.Serialization.SerializationInfo" />
               and <see cref="T:System.Runtime.Serialization.StreamingContext" />.</para>
      </summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> to populate with data.</param>
      <param name="context">The destination (see <see cref="T:System.Runtime.Serialization.StreamingContext" /> ) for this serialization.</param>
    </member>
    <member name="M:System.Management.ManagementNamedValueCollection.Add(System.String,System.Object)">
      <summary>
        <para> Adds a single-named value to the collection.</para>
      </summary>
      <param name=" name">The name of the new value.</param>
      <param name=" value">The value to be associated with the name.</param>
    </member>
    <member name="M:System.Management.ManagementNamedValueCollection.Remove(System.String)">
      <summary>
        <para> Removes a single-named value from the collection. 
                  If the collection does not contain an element with the
                  specified name, the collection remains unchanged and no
                  exception is thrown.</para>
      </summary>
      <param name=" name">The name of the value to be removed.</param>
    </member>
    <member name="M:System.Management.ManagementNamedValueCollection.RemoveAll">
      <summary>
        <para>Removes all entries from the collection.</para>
      </summary>
    </member>
    <member name="M:System.Management.ManagementNamedValueCollection.Clone">
      <summary>
        <para>Creates a clone of the collection. Individual values 
                  are cloned. If a value does not support cloning, then a <see cref="T:System.NotSupportedException" />
                  is thrown. </para>
      </summary>
      <returns>
               The new copy of the collection.
            </returns>
    </member>
    <member name="P:System.Management.ManagementNamedValueCollection.Item(System.String)">
      <summary>
        <para>Returns the value associated with the specified name from this collection.</para>
      </summary>
      <param name=" name">The name of the value to be returned.</param>
    </member>
    <member name="T:System.Management.TextFormat">
      <summary>
        <para>Describes the possible text formats that can be used with <see cref="M:System.Management.ManagementBaseObject.GetText(System.Management.TextFormat)" />.</para>
      </summary>
    </member>
    <member name="F:System.Management.TextFormat.Mof">
      <summary>
            Managed Object Format
            </summary>
    </member>
    <member name="T:System.Management.CimType">
      <summary>
        <para>Describes the possible CIM types for properties, qualifiers, or method parameters.</para>
      </summary>
    </member>
    <member name="F:System.Management.CimType.SInt8">
      <summary>
        <para>A signed 8-bit integer.</para>
      </summary>
    </member>
    <member name="F:System.Management.CimType.UInt8">
      <summary>
        <para>An unsigned 8-bit integer.</para>
      </summary>
    </member>
    <member name="F:System.Management.CimType.SInt16">
      <summary>
        <para>A signed 16-bit integer.</para>
      </summary>
    </member>
    <member name="F:System.Management.CimType.UInt16">
      <summary>
        <para>An unsigned 16-bit integer.</para>
      </summary>
    </member>
    <member name="F:System.Management.CimType.SInt32">
      <summary>
        <para>A signed 32-bit integer.</para>
      </summary>
    </member>
    <member name="F:System.Management.CimType.UInt32">
      <summary>
        <para>An unsigned 32-bit integer.</para>
      </summary>
    </member>
    <member name="F:System.Management.CimType.SInt64">
      <summary>
        <para>A signed 64-bit integer.</para>
      </summary>
    </member>
    <member name="F:System.Management.CimType.UInt64">
      <summary>
        <para>An unsigned 64-bit integer.</para>
      </summary>
    </member>
    <member name="F:System.Management.CimType.Real32">
      <summary>
        <para>A floating-point 32-bit number.</para>
      </summary>
    </member>
    <member name="F:System.Management.CimType.Real64">
      <summary>
        <para>A floating point 64-bit number.</para>
      </summary>
    </member>
    <member name="F:System.Management.CimType.Boolean">
      <summary>
        <para> A boolean.</para>
      </summary>
    </member>
    <member name="F:System.Management.CimType.String">
      <summary>
        <para>A string.</para>
      </summary>
    </member>
    <member name="F:System.Management.CimType.DateTime">
      <summary>
        <para> A date or time value, represented in a string in DMTF 
                  date/time format: yyyymmddHHMMSS.mmmmmmsUUU</para>
        <para>where:</para>
        <para>yyyymmdd - is the date in year/month/day</para>
        <para>HHMMSS - is the time in hours/minutes/seconds</para>
        <para>mmmmmm - is the number of microseconds in 6 digits</para>
        <para>sUUU - is a sign (+ or -) and a 3-digit UTC offset</para>
      </summary>
    </member>
    <member name="F:System.Management.CimType.Reference">
      <summary>
        <para>A reference to another object. This is represented by a 
                  string containing the path to the referenced object</para>
      </summary>
    </member>
    <member name="F:System.Management.CimType.Char16">
      <summary>
        <para> A 16-bit character.</para>
      </summary>
    </member>
    <member name="F:System.Management.CimType.Object">
      <summary>
        <para>An embedded object.</para>
        <para>Note that embedded objects differ from references in that the embedded object 
                  doesn't have a path and its lifetime is identical to the lifetime of the
                  containing object.</para>
      </summary>
    </member>
    <member name="T:System.Management.ComparisonSettings">
      <summary>
        <para>Describes the object comparison modes that can be used with <see cref="M:System.Management.ManagementBaseObject.CompareTo(System.Management.ManagementBaseObject,System.Management.ComparisonSettings)" />.
               Note that these values may be combined.</para>
      </summary>
    </member>
    <member name="F:System.Management.ComparisonSettings.IncludeAll">
      <summary>
        <para>A mode that compares all elements of the compared objects.</para>
      </summary>
    </member>
    <member name="F:System.Management.ComparisonSettings.IgnoreQualifiers">
      <summary>
        <para>A mode that compares the objects, ignoring qualifiers.</para>
      </summary>
    </member>
    <member name="F:System.Management.ComparisonSettings.IgnoreObjectSource">
      <summary>
        <para> A mode that ignores the source of the objects, namely the server
                  and the namespace they came from, in comparison to other objects.</para>
      </summary>
    </member>
    <member name="F:System.Management.ComparisonSettings.IgnoreDefaultValues">
      <summary>
        <para> A mode that ignores the default values of properties.
                  This value is only meaningful when comparing classes.</para>
      </summary>
    </member>
    <member name="F:System.Management.ComparisonSettings.IgnoreClass">
      <summary>
        <para>A mode that assumes that the objects being compared are instances of 
                  the same class. Consequently, this value causes comparison
                  of instance-related information only. Use this flag to optimize
                  performance. If the objects are not of the same class, the results are undefined.</para>
      </summary>
    </member>
    <member name="F:System.Management.ComparisonSettings.IgnoreCase">
      <summary>
        <para> A mode that compares string values in a case-insensitive
                  manner. This applies to strings and to qualifier values. Property and qualifier
                  names are always compared in a case-insensitive manner whether this flag is
                  specified or not.</para>
      </summary>
    </member>
    <member name="F:System.Management.ComparisonSettings.IgnoreFlavor">
      <summary>
        <para>A mode that ignores qualifier flavors. This flag still takes
                  qualifier values into account, but ignores flavor distinctions such as
                  propagation rules and override restrictions.</para>
      </summary>
    </member>
    <member name="T:System.Management.ManagementBaseObject">
      <summary>
        <para> Contains the basic elements of a management 
                  object. It serves as a base class to more specific management object classes.</para>
      </summary>
    </member>
    <member name="M:System.Management.ManagementBaseObject.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Management.ManagementBaseObject" /> class that is serializable.</para>
      </summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> to populate with data.</param>
      <param name="context">The destination (see <see cref="T:System.Runtime.Serialization.StreamingContext" /> ) for this serialization.</param>
    </member>
    <member name="M:System.Management.ManagementBaseObject.op_Explicit(System.Management.ManagementBaseObject)~System.IntPtr">
      <summary>
        <para>Provides the internal WMI object represented by a ManagementObject.</para>
      </summary>
      <param name="managementObject">The <see cref="T:System.Management.ManagementBaseObject" /> that references the requested WMI object. </param>
      <returns>
        <para>An <see cref="T:System.IntPtr" /> representing the internal WMI object.</para>
      </returns>
    </member>
    <member name="M:System.Management.ManagementBaseObject.Clone">
      <summary>
        <para>Returns a copy of the object.</para>
      </summary>
      <returns>
        <para>The new cloned object.</para>
      </returns>
    </member>
    <member name="M:System.Management.ManagementBaseObject.GetPropertyValue(System.String)">
      <summary>
        <para>Gets an equivalent accessor to a property's value.</para>
      </summary>
      <param name="propertyName">The name of the property of interest. </param>
      <returns>
        <para>The value of the specified property.</para>
      </returns>
    </member>
    <member name="M:System.Management.ManagementBaseObject.GetQualifierValue(System.String)">
      <summary>
        <para>Gets the value of the specified qualifier.</para>
      </summary>
      <param name="qualifierName">The name of the qualifier of interest. </param>
      <returns>
        <para>The value of the specified qualifier.</para>
      </returns>
    </member>
    <member name="M:System.Management.ManagementBaseObject.SetQualifierValue(System.String,System.Object)">
      <summary>
        <para>Sets the value of the named qualifier.</para>
      </summary>
      <param name="qualifierName">The name of the qualifier to set. This parameter cannot be null.</param>
      <param name="qualifierValue">The value to set.</param>
    </member>
    <member name="M:System.Management.ManagementBaseObject.GetPropertyQualifierValue(System.String,System.String)">
      <summary>
        <para>Returns the value of the specified property qualifier.</para>
      </summary>
      <param name="propertyName">The name of the property to which the qualifier belongs. </param>
      <param name="qualifierName">The name of the property qualifier of interest. </param>
      <returns>
        <para>The value of the specified qualifier.</para>
      </returns>
    </member>
    <member name="M:System.Management.ManagementBaseObject.SetPropertyQualifierValue(System.String,System.String,System.Object)">
      <summary>
        <para>Sets the value of the specified property qualifier.</para>
      </summary>
      <param name="propertyName">The name of the property to which the qualifier belongs.</param>
      <param name="qualifierName">The name of the property qualifier of interest.</param>
      <param name="qualifierValue">The new value for the qualifier.</param>
    </member>
    <member name="M:System.Management.ManagementBaseObject.GetText(System.Management.TextFormat)">
      <summary>
        <para>Returns a textual representation of the object in the specified format.</para>
      </summary>
      <param name="format">The requested textual format. </param>
      <returns>
        <para>The textual representation of the
                  object in the specified format.</para>
      </returns>
    </member>
    <member name="M:System.Management.ManagementBaseObject.Equals(System.Object)">
      <summary>
        <para>Compares two management objects.</para>
      </summary>
      <param name="obj">An object to compare with this instance.</param>
      <returns>
        <see langword="true" /> if 
            <paramref name="obj" /> is an instance of <see cref="T:System.Management.ManagementBaseObject" /> and represents 
               the same object as this instance; otherwise, <see langword="false" />.
            </returns>
    </member>
    <member name="M:System.Management.ManagementBaseObject.GetHashCode">
      <summary>
        <para>Serves as a hash function for a particular type, suitable for use in hashing algorithms and data structures like a hash table.</para>
      </summary>
      <returns>
        <para>A hash code for the current object.</para>
      </returns>
    </member>
    <member name="M:System.Management.ManagementBaseObject.CompareTo(System.Management.ManagementBaseObject,System.Management.ComparisonSettings)">
      <summary>
        <para>Compares this object to another, based on specified options.</para>
      </summary>
      <param name="otherObject">The object to which to compare this object. </param>
      <param name="settings">Options on how to compare the objects. </param>
      <returns>
        <para>
          <see langword="true" /> if the objects compared are equal 
               according to the given options; otherwise, <see langword="false" />
               .</para>
      </returns>
    </member>
    <member name="M:System.Management.ManagementBaseObject.SetPropertyValue(System.String,System.Object)">
      <summary>
        <para>Sets the value of the named property.</para>
      </summary>
      <param name="propertyName">The name of the property to be changed.</param>
      <param name="propertyValue">The new value for this property.</param>
    </member>
    <member name="P:System.Management.ManagementBaseObject.Properties">
      <summary>
        <para>Gets or sets a collection of <see cref="T:System.Management.PropertyData" /> objects describing the properties of the
               management object.</para>
      </summary>
    </member>
    <member name="P:System.Management.ManagementBaseObject.SystemProperties">
      <summary>
        <para>Gets or sets the collection of WMI system properties of the management object (for example, the 
                  class name, server, and namespace). WMI system property names begin with
                  "__".</para>
      </summary>
    </member>
    <member name="P:System.Management.ManagementBaseObject.Qualifiers">
      <summary>
        <para>Gets or sets the collection of <see cref="T:System.Management.QualifierData" /> objects defined on the management object. 
               Each element in the collection holds information such as the qualifier name,
               value, and flavor.</para>
      </summary>
    </member>
    <member name="P:System.Management.ManagementBaseObject.ClassPath">
      <summary>
        <para>Gets or sets the path to the management object's class.</para>
      </summary>
    </member>
    <member name="P:System.Management.ManagementBaseObject.Item(System.String)">
      <summary>
        <para> Gets access to property values through [] notation.</para>
      </summary>
      <param name="propertyName">The name of the property of interest. </param>
    </member>
    <member name="T:System.Management.ManagementClass">
      <summary>
        <para> Represents a management class.</para>
      </summary>
    </member>
    <member name="T:System.Management.ManagementObject">
      <summary>
        <para> Represents a data management object.</para>
      </summary>
    </member>
    <member name="M:System.Management.ManagementObject.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Management.ManagementObject" /> class. This is the
               default constructor.</para>
      </summary>
    </member>
    <member name="M:System.Management.ManagementObject.#ctor(System.Management.ManagementPath)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Management.ManagementObject" /> class for the specified WMI 
               object path. The path is provided as a <see cref="T:System.Management.ManagementPath" />.</para>
      </summary>
      <param name="path">A <see cref="T:System.Management.ManagementPath" /> that contains a path to a WMI object.</param>
    </member>
    <member name="M:System.Management.ManagementObject.#ctor(System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Management.ManagementObject" /> class for the specified WMI object path. The path 
               is provided as a string.</para>
      </summary>
      <param name="path">A WMI path.</param>
    </member>
    <member name="M:System.Management.ManagementObject.#ctor(System.Management.ManagementPath,System.Management.ObjectGetOptions)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Management.ManagementObject" /> class bound to the specified 
               WMI path, including the specified additional options.</para>
      </summary>
      <param name="path">A <see cref="T:System.Management.ManagementPath" /> containing the WMI path.</param>
      <param name=" options">An <see cref="T:System.Management.ObjectGetOptions" /> containing additional options for binding to the WMI object. This parameter could be null if default options are to be used.</param>
    </member>
    <member name="M:System.Management.ManagementObject.#ctor(System.String,System.Management.ObjectGetOptions)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Management.ManagementObject" /> class bound to the specified WMI path, including the 
               specified additional options. In this variant, the path can be specified as a
               string.</para>
      </summary>
      <param name="path">The WMI path to the object.</param>
      <param name=" options">An <see cref="T:System.Management.ObjectGetOptions" /> representing options to get the specified WMI object.</param>
    </member>
    <member name="M:System.Management.ManagementObject.#ctor(System.Management.ManagementScope,System.Management.ManagementPath,System.Management.ObjectGetOptions)">
      <summary>
        <para> Initializes a new instance of the <see cref="T:System.Management.ManagementObject" /> 
            class bound to the specified WMI path that includes the specified options.</para>
      </summary>
      <param name="scope">A <see cref="T:System.Management.ManagementScope" /> representing the scope in which the WMI object resides. In this version, scopes can only be WMI namespaces.</param>
      <param name=" path">A <see cref="T:System.Management.ManagementPath" /> representing the WMI path to the manageable object.</param>
      <param name=" options">An <see cref="T:System.Management.ObjectGetOptions" /> specifying additional options for getting the object.</param>
    </member>
    <member name="M:System.Management.ManagementObject.#ctor(System.String,System.String,System.Management.ObjectGetOptions)">
      <summary>
        <para> Initializes a new instance of the <see cref="T:System.Management.ManagementObject" /> class
               bound to the specified WMI path, and includes the specified options. The scope and
               the path are specified as strings.</para>
      </summary>
      <param name="scopeString">The scope for the WMI object.</param>
      <param name=" pathString">The WMI object path.</param>
      <param name=" options">An <see cref="T:System.Management.ObjectGetOptions" /> representing additional options for getting the WMI object.</param>
    </member>
    <member name="M:System.Management.ManagementObject.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Management.ManagementObject" /> class that is serializable.</para>
      </summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> to populate with data.</param>
      <param name="context">The destination (see <see cref="T:System.Runtime.Serialization.StreamingContext" /> ) for this serialization.</param>
    </member>
    <member name="M:System.Management.ManagementObject.Get">
      <summary>
        <para> Binds to the management object.</para>
      </summary>
    </member>
    <member name="M:System.Management.ManagementObject.Get(System.Management.ManagementOperationObserver)">
      <summary>
        <para> Binds to the management object asynchronously.</para>
      </summary>
      <param name="watcher">The object to receive the results of the operation as events.</param>
    </member>
    <member name="M:System.Management.ManagementObject.GetRelated">
      <summary>
        <para>Gets a collection of objects related to the object (associators).</para>
      </summary>
      <returns>
        <para>A <see cref="T:System.Management.ManagementObjectCollection" /> containing the 
               related objects.</para>
      </returns>
    </member>
    <member name="M:System.Management.ManagementObject.GetRelated(System.String)">
      <summary>
        <para>Gets a collection of objects related to the object (associators).</para>
      </summary>
      <param name="relatedClass">A class of related objects. </param>
      <returns>
               A <see cref="T:System.Management.ManagementObjectCollection" /> containing the related objects.
            </returns>
    </member>
    <member name="M:System.Management.ManagementObject.GetRelated(System.String,System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Management.EnumerationOptions)">
      <summary>
        <para>Gets a collection of objects related to the object (associators).</para>
      </summary>
      <param name="relatedClass">The class of the related objects. </param>
      <param name="relationshipClass">The relationship class of interest. </param>
      <param name="relationshipQualifier">The qualifier required to be present on the relationship class. </param>
      <param name="relatedQualifier">The qualifier required to be present on the related class. </param>
      <param name="relatedRole">The role that the related class is playing in the relationship. </param>
      <param name="thisRole">The role that this class is playing in the relationship. </param>
      <param name="classDefinitionsOnly">When this method returns, it contains only class definitions for the instances that match the query. </param>
      <param name="options">Extended options for how to execute the query. </param>
      <returns>
               A <see cref="T:System.Management.ManagementObjectCollection" /> containing the related objects.
            </returns>
    </member>
    <member name="M:System.Management.ManagementObject.GetRelated(System.Management.ManagementOperationObserver)">
      <summary>
        <para> Gets a collection of objects
                  related to the object (associators) asynchronously. This call returns immediately, and a
                  delegate is called when the results are available.</para>
      </summary>
      <param name="watcher">The object to use to return results. </param>
    </member>
    <member name="M:System.Management.ManagementObject.GetRelated(System.Management.ManagementOperationObserver,System.String)">
      <summary>
        <para>Gets a collection of objects related to the object (associators).</para>
      </summary>
      <param name="watcher">The object to use to return results. </param>
      <param name="relatedClass">The class of related objects. </param>
    </member>
    <member name="M:System.Management.ManagementObject.GetRelated(System.Management.ManagementOperationObserver,System.String,System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Management.EnumerationOptions)">
      <summary>
        <para>Gets a collection of objects related to the object (associators).</para>
      </summary>
      <param name="watcher">The object to use to return results. </param>
      <param name="relatedClass">The class of the related objects. </param>
      <param name="relationshipClass">The relationship class of interest. </param>
      <param name="relationshipQualifier">The qualifier required to be present on the relationship class. </param>
      <param name="relatedQualifier">The qualifier required to be present on the related class. </param>
      <param name="relatedRole">The role that the related class is playing in the relationship. </param>
      <param name="thisRole">The role that this class is playing in the relationship. </param>
      <param name="classDefinitionsOnly">Return only class definitions for the instances that match the query. </param>
      <param name="options">Extended options for how to execute the query.</param>
    </member>
    <member name="M:System.Management.ManagementObject.GetRelationships">
      <summary>
        <para>Gets a collection of associations to the object.</para>
      </summary>
      <returns>
        <para>A <see cref="T:System.Management.ManagementObjectCollection" /> containing the association objects.</para>
      </returns>
    </member>
    <member name="M:System.Management.ManagementObject.GetRelationships(System.String)">
      <summary>
        <para>Gets a collection of associations to the object.</para>
      </summary>
      <param name="relationshipClass">The associations to include. </param>
      <returns>
               A <see cref="T:System.Management.ManagementObjectCollection" /> containing the association objects.
            </returns>
    </member>
    <member name="M:System.Management.ManagementObject.GetRelationships(System.String,System.String,System.String,System.Boolean,System.Management.EnumerationOptions)">
      <summary>
        <para>Gets a collection of associations to the object.</para>
      </summary>
      <param name="relationshipClass">The type of relationship of interest. </param>
      <param name="relationshipQualifier">The qualifier to be present on the relationship. </param>
      <param name="thisRole">The role of this object in the relationship. </param>
      <param name="classDefinitionsOnly">When this method returns, it contains only the class definitions for the result set. </param>
      <param name="options">The extended options for the query execution. </param>
      <returns>
               A <see cref="T:System.Management.ManagementObjectCollection" /> containing the association objects.
            </returns>
    </member>
    <member name="M:System.Management.ManagementObject.GetRelationships(System.Management.ManagementOperationObserver)">
      <summary>
        <para>Gets a collection of associations to the object.</para>
      </summary>
      <param name="watcher">The object to use to return results. </param>
    </member>
    <member name="M:System.Management.ManagementObject.GetRelationships(System.Management.ManagementOperationObserver,System.String)">
      <summary>
        <para>Gets a collection of associations to the object.</para>
      </summary>
      <param name="watcher">The object to use to return results. </param>
      <param name="relationshipClass">The associations to include. </param>
    </member>
    <member name="M:System.Management.ManagementObject.GetRelationships(System.Management.ManagementOperationObserver,System.String,System.String,System.String,System.Boolean,System.Management.EnumerationOptions)">
      <summary>
        <para>Gets a collection of associations to the object.</para>
      </summary>
      <param name="watcher">The object to use to return results. </param>
      <param name="relationshipClass">The type of relationship of interest. </param>
      <param name="relationshipQualifier">The qualifier to be present on the relationship. </param>
      <param name="thisRole">The role of this object in the relationship. </param>
      <param name="classDefinitionsOnly">When this method returns, it contains only the class definitions for the result set. </param>
      <param name="options">The extended options for the query execution. </param>
    </member>
    <member name="M:System.Management.ManagementObject.Put">
      <summary>
        <para>Commits the changes to the object.</para>
      </summary>
      <returns>
        <para>A <see cref="T:System.Management.ManagementPath" /> containing the path to the committed 
               object.</para>
      </returns>
    </member>
    <member name="M:System.Management.ManagementObject.Put(System.Management.PutOptions)">
      <summary>
        <para>Commits the changes to the object.</para>
      </summary>
      <param name="options">The options for how to commit the changes. </param>
      <returns>
               A <see cref="T:System.Management.ManagementPath" /> containing the path to the committed object.
            </returns>
    </member>
    <member name="M:System.Management.ManagementObject.Put(System.Management.ManagementOperationObserver)">
      <summary>
        <para>Commits the changes to the object, asynchronously.</para>
      </summary>
      <param name="watcher">A <see cref="T:System.Management.ManagementOperationObserver" /> used to handle the progress and results of the asynchronous operation.</param>
    </member>
    <member name="M:System.Management.ManagementObject.Put(System.Management.ManagementOperationObserver,System.Management.PutOptions)">
      <summary>
        <para>Commits the changes to the object asynchronously and
                  using the specified options.</para>
      </summary>
      <param name="watcher">A <see cref="T:System.Management.ManagementOperationObserver" /> used to handle the progress and results of the asynchronous operation.</param>
      <param name=" options">A <see cref="T:System.Management.PutOptions" /> used to specify additional options for the commit operation.</param>
    </member>
    <member name="M:System.Management.ManagementObject.CopyTo(System.Management.ManagementPath)">
      <summary>
        <para>Copies the object to a different location.</para>
      </summary>
      <param name="path">The <see cref="T:System.Management.ManagementPath" /> to which the object should be copied. </param>
      <returns>
        <para>The new path of the copied object.</para>
      </returns>
    </member>
    <member name="M:System.Management.ManagementObject.CopyTo(System.String)">
      <summary>
        <para>Copies the object to a different location.</para>
      </summary>
      <param name="path">The path to which the object should be copied. </param>
      <returns>
               The new path of the copied object.
            </returns>
    </member>
    <member name="M:System.Management.ManagementObject.CopyTo(System.String,System.Management.PutOptions)">
      <summary>
        <para>Copies the object to a different location.</para>
      </summary>
      <param name="path">The path to which the object should be copied.</param>
      <param name="options">The options for how the object should be put.</param>
      <returns>
               The new path of the copied object.
            </returns>
    </member>
    <member name="M:System.Management.ManagementObject.CopyTo(System.Management.ManagementPath,System.Management.PutOptions)">
      <summary>
        <para>Copies the object to a different location.</para>
      </summary>
      <param name="path">The <see cref="T:System.Management.ManagementPath" /> to which the object should be copied.</param>
      <param name="options">The options for how the object should be put.</param>
      <returns>
               The new path of the copied object.
            </returns>
    </member>
    <member name="M:System.Management.ManagementObject.CopyTo(System.Management.ManagementOperationObserver,System.Management.ManagementPath)">
      <summary>
        <para>Copies the object to a different location, asynchronously.</para>
      </summary>
      <param name="watcher">The object that will receive the results of the operation.</param>
      <param name="path">A <see cref="T:System.Management.ManagementPath" /> specifying the path to which the object should be copied.</param>
    </member>
    <member name="M:System.Management.ManagementObject.CopyTo(System.Management.ManagementOperationObserver,System.String)">
      <summary>
        <para>Copies the object to a different location, asynchronously.</para>
      </summary>
      <param name="watcher">The object that will receive the results of the operation.</param>
      <param name="path"> The path to which the object should be copied.</param>
    </member>
    <member name="M:System.Management.ManagementObject.CopyTo(System.Management.ManagementOperationObserver,System.String,System.Management.PutOptions)">
      <summary>
        <para>Copies the object to a different location, asynchronously.</para>
      </summary>
      <param name="watcher">The object that will receive the results of the operation.</param>
      <param name="path">The path to which the object should be copied.</param>
      <param name="options">The options for how the object should be put.</param>
    </member>
    <member name="M:System.Management.ManagementObject.CopyTo(System.Management.ManagementOperationObserver,System.Management.ManagementPath,System.Management.PutOptions)">
      <summary>
        <para>Copies the object to a different location, asynchronously.</para>
      </summary>
      <param name="watcher">The object that will receive the results of the operation.</param>
      <param name="path">The path to which the object should be copied.</param>
      <param name="options">The options for how the object should be put.</param>
    </member>
    <member name="M:System.Management.ManagementObject.Delete">
      <summary>
        <para>Deletes the object.</para>
      </summary>
    </member>
    <member name="M:System.Management.ManagementObject.Delete(System.Management.DeleteOptions)">
      <summary>
        <para>Deletes the object.</para>
      </summary>
      <param name="options">The options for how to delete the object. </param>
    </member>
    <member name="M:System.Management.ManagementObject.Delete(System.Management.ManagementOperationObserver)">
      <summary>
        <para>Deletes the object.</para>
      </summary>
      <param name="watcher">The object that will receive the results of the operation.</param>
    </member>
    <member name="M:System.Management.ManagementObject.Delete(System.Management.ManagementOperationObserver,System.Management.DeleteOptions)">
      <summary>
        <para>Deletes the object.</para>
      </summary>
      <param name="watcher">The object that will receive the results of the operation.</param>
      <param name="options">The options for how to delete the object.</param>
    </member>
    <member name="M:System.Management.ManagementObject.InvokeMethod(System.String,System.Object[])">
      <summary>
        <para> 
                  Invokes a method on the object.</para>
      </summary>
      <param name="methodName">The name of the method to execute. </param>
      <param name="args">An array containing parameter values. </param>
      <returns>
        <para>The value returned by the method.</para>
      </returns>
    </member>
    <member name="M:System.Management.ManagementObject.InvokeMethod(System.Management.ManagementOperationObserver,System.String,System.Object[])">
      <summary>
        <para>Invokes a method on the object, asynchronously.</para>
      </summary>
      <param name="watcher">The object to receive the results of the operation.</param>
      <param name="methodName">The name of the method to execute. </param>
      <param name="args">An array containing parameter values. </param>
    </member>
    <member name="M:System.Management.ManagementObject.InvokeMethod(System.String,System.Management.ManagementBaseObject,System.Management.InvokeMethodOptions)">
      <summary>
        <para>Invokes a method on the WMI object. The input and output 
                  parameters are represented as <see cref="T:System.Management.ManagementBaseObject" />
                  objects.</para>
      </summary>
      <param name="methodName">The name of the method to execute.</param>
      <param name=" inParameters">A <see cref="T:System.Management.ManagementBaseObject" /> holding the input parameters to the method.</param>
      <param name=" options">An <see cref="T:System.Management.InvokeMethodOptions" /> containing additional options for the execution of the method.</param>
      <returns>
        <para>A <see cref="T:System.Management.ManagementBaseObject" /> containing the
               output parameters and return value of the executed method.</para>
      </returns>
    </member>
    <member name="M:System.Management.ManagementObject.InvokeMethod(System.Management.ManagementOperationObserver,System.String,System.Management.ManagementBaseObject,System.Management.InvokeMethodOptions)">
      <summary>
        <para>Invokes a method on the object, asynchronously.</para>
      </summary>
      <param name="watcher">A <see cref="T:System.Management.ManagementOperationObserver" /> used to handle the asynchronous execution's progress and results.</param>
      <param name=" methodName">The name of the method to be executed.</param>
      <param name=" inParameters">
        <para>A <see cref="T:System.Management.ManagementBaseObject" /> containing the input parameters for the method.</para>
      </param>
      <param name=" options">An <see cref="T:System.Management.InvokeMethodOptions" /> containing additional options used to execute the method.</param>
    </member>
    <member name="M:System.Management.ManagementObject.GetMethodParameters(System.String)">
      <summary>
        <para>Returns a <see cref="T:System.Management.ManagementBaseObject" /> representing the list of input parameters for a method.</para>
      </summary>
      <param name="methodName">The name of the method. </param>
      <returns>
        <para>A <see cref="T:System.Management.ManagementBaseObject" /> containing the
               input parameters to the method.</para>
      </returns>
    </member>
    <member name="M:System.Management.ManagementObject.Clone">
      <summary>
        <para>Creates a copy of the object.</para>
      </summary>
      <returns>
        <para>The copied object.</para>
      </returns>
    </member>
    <member name="M:System.Management.ManagementObject.ToString">
      <summary>
        <para>Returns the full path of the object. This is an override of the
                  default object implementation.</para>
      </summary>
      <returns>
        <para> The full path of
                  the object.</para>
      </returns>
    </member>
    <member name="P:System.Management.ManagementObject.Scope">
      <summary>
        <para> Gets or sets the scope in which this object resides.</para>
      </summary>
    </member>
    <member name="P:System.Management.ManagementObject.Path">
      <summary>
        <para> Gets or sets the object's WMI path.</para>
      </summary>
    </member>
    <member name="P:System.Management.ManagementObject.Options">
      <summary>
        <para> 
                  Gets or
                  sets additional information to use when retrieving the object.</para>
      </summary>
    </member>
    <member name="P:System.Management.ManagementObject.ClassPath">
      <summary>
        <para>Gets or sets the path to the object's class.</para>
      </summary>
    </member>
    <member name="M:System.Management.ManagementClass.#ctor">
      <summary>
        <para> Initializes a new instance of the <see cref="T:System.Management.ManagementClass" /> class. This is the
               default constructor.</para>
      </summary>
    </member>
    <member name="M:System.Management.ManagementClass.#ctor(System.Management.ManagementPath)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Management.ManagementClass" /> class initialized to the
               given path.</para>
      </summary>
      <param name="path">A <see cref="T:System.Management.ManagementPath" /> specifying which WMI class to bind to.</param>
    </member>
    <member name="M:System.Management.ManagementClass.#ctor(System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Management.ManagementClass" /> class initialized to the given path.</para>
      </summary>
      <param name="path">The path to the WMI class.</param>
    </member>
    <member name="M:System.Management.ManagementClass.#ctor(System.Management.ManagementPath,System.Management.ObjectGetOptions)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Management.ManagementClass" /> class initialized to the
               given WMI class path using the specified options.</para>
      </summary>
      <param name="path">A <see cref="T:System.Management.ManagementPath" /> representing the WMI class path.</param>
      <param name=" options">An <see cref="T:System.Management.ObjectGetOptions" /> representing the options to use when retrieving this class.</param>
    </member>
    <member name="M:System.Management.ManagementClass.#ctor(System.String,System.Management.ObjectGetOptions)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Management.ManagementClass" /> class initialized to the given WMI class path 
               using the specified options.</para>
      </summary>
      <param name="path">The path to the WMI class.</param>
      <param name=" options">An <see cref="T:System.Management.ObjectGetOptions" /> representing the options to use when retrieving the WMI class.</param>
    </member>
    <member name="M:System.Management.ManagementClass.#ctor(System.Management.ManagementScope,System.Management.ManagementPath,System.Management.ObjectGetOptions)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Management.ManagementClass" /> class for the specified
               WMI class in the specified scope and with the specified options.</para>
      </summary>
      <param name="scope">A <see cref="T:System.Management.ManagementScope" /> that specifies the scope (server and namespace) where the WMI class resides. </param>
      <param name=" path">A <see cref="T:System.Management.ManagementPath" /> that represents the path to the WMI class in the specified scope.</param>
      <param name=" options">An <see cref="T:System.Management.ObjectGetOptions" /> that specifies the options to use when retrieving the WMI class.</param>
    </member>
    <member name="M:System.Management.ManagementClass.#ctor(System.String,System.String,System.Management.ObjectGetOptions)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Management.ManagementClass" /> class for the specified WMI class, in the 
               specified scope, and with the specified options.</para>
      </summary>
      <param name="scope">The scope in which the WMI class resides.</param>
      <param name=" path">The path to the WMI class within the specified scope.</param>
      <param name=" options">The options to use when retrieving the WMI class.</param>
    </member>
    <member name="M:System.Management.ManagementClass.GetInstances">
      <summary>
        <para>Returns the collection of all instances of the class.</para>
      </summary>
      <returns>
        <para>A collection of the <see cref="T:System.Management.ManagementObject" /> objects 
               representing the instances of the class.</para>
      </returns>
    </member>
    <member name="M:System.Management.ManagementClass.GetInstances(System.Management.EnumerationOptions)">
      <summary>
        <para>Returns the collection of all instances of the class using the specified options.</para>
      </summary>
      <param name="options">The additional operation options.</param>
      <returns>
        <para>A collection of the <see cref="T:System.Management.ManagementObject" /> objects 
               representing the instances of the class, according to the specified options.</para>
      </returns>
    </member>
    <member name="M:System.Management.ManagementClass.GetInstances(System.Management.ManagementOperationObserver)">
      <summary>
        <para>Returns the collection of all instances of the class, asynchronously.</para>
      </summary>
      <param name="watcher">The object to handle the asynchronous operation's progress. </param>
    </member>
    <member name="M:System.Management.ManagementClass.GetInstances(System.Management.ManagementOperationObserver,System.Management.EnumerationOptions)">
      <summary>
        <para>Returns the collection of all instances of the class, asynchronously, using 
                  the specified options.</para>
      </summary>
      <param name="watcher">The object to handle the asynchronous operation's progress. </param>
      <param name=" options">The specified additional options for getting the instances.</param>
    </member>
    <member name="M:System.Management.ManagementClass.GetSubclasses">
      <summary>
        <para>Returns the collection of all subclasses for the class.</para>
      </summary>
      <returns>
        <para>A collection of the <see cref="T:System.Management.ManagementObject" /> objects that
               represent the subclasses of the WMI class.</para>
      </returns>
    </member>
    <member name="M:System.Management.ManagementClass.GetSubclasses(System.Management.EnumerationOptions)">
      <summary>
        <para>Retrieves the subclasses of the class using the specified
                  options.</para>
      </summary>
      <param name="options">The specified additional options for retrieving subclasses of the class.</param>
      <returns>
        <para>A collection of the <see cref="T:System.Management.ManagementObject" /> objects
               representing the subclasses of the WMI class, according to the specified
               options.</para>
      </returns>
    </member>
    <member name="M:System.Management.ManagementClass.GetSubclasses(System.Management.ManagementOperationObserver)">
      <summary>
        <para>Returns the collection of all subclasses of the class, asynchronously.</para>
      </summary>
      <param name="watcher">The object to handle the asynchronous operation's progress. </param>
    </member>
    <member name="M:System.Management.ManagementClass.GetSubclasses(System.Management.ManagementOperationObserver,System.Management.EnumerationOptions)">
      <summary>
        <para>Retrieves the subclasses of the class, asynchronously, using the specified 
                  options.</para>
      </summary>
      <param name="watcher">The object to handle the asynchronous operation's progress. </param>
      <param name="options">The specified additional options to use in subclass retrieval.</param>
    </member>
    <member name="M:System.Management.ManagementClass.Derive(System.String)">
      <summary>
        <para>Derives a new class from this class.</para>
      </summary>
      <param name="newClassName">The name of the new class to be derived.</param>
      <returns>
        <para>A new <see cref="T:System.Management.ManagementClass" /> 
            that represents a new WMI class derived from the original class.</para>
      </returns>
    </member>
    <member name="M:System.Management.ManagementClass.CreateInstance">
      <summary>
        <para>Creates a new instance of the WMI class.</para>
      </summary>
      <returns>
        <para>A <see cref="T:System.Management.ManagementObject" /> that represents a new
               instance of the WMI class.</para>
      </returns>
    </member>
    <member name="M:System.Management.ManagementClass.Clone">
      <summary>
        <para>Returns a copy of the object.</para>
      </summary>
      <returns>
        <para> The cloned 
                  object.</para>
      </returns>
    </member>
    <member name="M:System.Management.ManagementClass.GetRelatedClasses">
      <summary>
        <para> Retrieves classes related to the WMI class.</para>
      </summary>
      <returns>
        <para>A collection of the <see cref="T:System.Management.ManagementClass" /> or <see cref="T:System.Management.ManagementObject" /> 
            objects that represents WMI classes or instances related to
            the WMI class.</para>
      </returns>
    </member>
    <member name="M:System.Management.ManagementClass.GetRelatedClasses(System.String)">
      <summary>
        <para> Retrieves classes related to the WMI class.</para>
      </summary>
      <param name="relatedClass">
        <para>The class from which resulting classes have to be derived.</para>
      </param>
      <returns>
               A collection of classes related to
               this class.
            </returns>
    </member>
    <member name="M:System.Management.ManagementClass.GetRelatedClasses(System.String,System.String,System.String,System.String,System.String,System.String,System.Management.EnumerationOptions)">
      <summary>
        <para> Retrieves classes related to the WMI class based on the specified 
                  options.</para>
      </summary>
      <param name=" relatedClass">
        <para>The class from which resulting classes have to be derived.</para>
      </param>
      <param name=" relationshipClass"> The relationship type which resulting classes must have with the source class.</param>
      <param name=" relationshipQualifier">This qualifier must be present on the relationship.</param>
      <param name=" relatedQualifier">This qualifier must be present on the resulting classes.</param>
      <param name=" relatedRole">The resulting classes must have this role in the relationship.</param>
      <param name=" thisRole">The source class must have this role in the relationship.</param>
      <param name=" options">The options for retrieving the resulting classes.</param>
      <returns>
        <para>A collection of classes related to
                  this class.</para>
      </returns>
    </member>
    <member name="M:System.Management.ManagementClass.GetRelatedClasses(System.Management.ManagementOperationObserver)">
      <summary>
        <para> Retrieves classes 
                  related to the WMI class, asynchronously.</para>
      </summary>
      <param name="watcher">The object to handle the asynchronous operation's progress. </param>
    </member>
    <member name="M:System.Management.ManagementClass.GetRelatedClasses(System.Management.ManagementOperationObserver,System.String)">
      <summary>
        <para> Retrieves classes related to the WMI class, asynchronously, given the related 
                  class name.</para>
      </summary>
      <param name="watcher">The object to handle the asynchronous operation's progress. </param>
      <param name=" relatedClass">The name of the related class.</param>
    </member>
    <member name="M:System.Management.ManagementClass.GetRelatedClasses(System.Management.ManagementOperationObserver,System.String,System.String,System.String,System.String,System.String,System.String,System.Management.EnumerationOptions)">
      <summary>
        <para> Retrieves classes related to the 
                  WMI class, asynchronously, using the specified options.</para>
      </summary>
      <param name="watcher">Handler for progress and results of the asynchronous operation.</param>
      <param name=" relatedClass">
        <para>The class from which resulting classes have to be derived.</para>
      </param>
      <param name=" relationshipClass"> The relationship type which resulting classes must have with the source class.</param>
      <param name=" relationshipQualifier">This qualifier must be present on the relationship.</param>
      <param name=" relatedQualifier">This qualifier must be present on the resulting classes.</param>
      <param name=" relatedRole">The resulting classes must have this role in the relationship.</param>
      <param name=" thisRole">The source class must have this role in the relationship.</param>
      <param name=" options">The options for retrieving the resulting classes.</param>
    </member>
    <member name="M:System.Management.ManagementClass.GetRelationshipClasses">
      <summary>
        <para>Retrieves relationship classes that relate the class to others.</para>
      </summary>
      <returns>
        <para>A collection of association classes
                  that relate the class to any other class.</para>
      </returns>
    </member>
    <member name="M:System.Management.ManagementClass.GetRelationshipClasses(System.String)">
      <summary>
        <para>Retrieves relationship classes that relate the class to others, where the 
                  endpoint class is the specified class.</para>
      </summary>
      <param name="relationshipClass">The endpoint class for all relationship classes returned.</param>
      <returns>
        <para>A collection of association classes
                  that relate the class to the specified class.</para>
      </returns>
    </member>
    <member name="M:System.Management.ManagementClass.GetRelationshipClasses(System.String,System.String,System.String,System.Management.EnumerationOptions)">
      <summary>
        <para> Retrieves relationship classes that relate this class to others, according to 
                  specified options.</para>
      </summary>
      <param name="relationshipClass">
        <para> All resulting relationship classes must derive from this class.</para>
      </param>
      <param name=" relationshipQualifier">Resulting relationship classes must have this qualifier.</param>
      <param name=" thisRole">The source class must have this role in the resulting relationship classes.</param>
      <param name=" options">Specifies options for retrieving the results.</param>
      <returns>
        <para>A collection of association classes
                  that relate this class to others, according to the specified options.</para>
      </returns>
    </member>
    <member name="M:System.Management.ManagementClass.GetRelationshipClasses(System.Management.ManagementOperationObserver)">
      <summary>
        <para>Retrieves relationship classes that relate the class to others, 
                  asynchronously.</para>
      </summary>
      <param name="watcher">The object to handle the asynchronous operation's progress. </param>
    </member>
    <member name="M:System.Management.ManagementClass.GetRelationshipClasses(System.Management.ManagementOperationObserver,System.String)">
      <summary>
        <para>Retrieves relationship classes that relate the class to the specified WMI class, 
                  asynchronously.</para>
      </summary>
      <param name="watcher">The object to handle the asynchronous operation's progress. </param>
      <param name=" relationshipClass">The WMI class to which all returned relationships should point.</param>
    </member>
    <member name="M:System.Management.ManagementClass.GetRelationshipClasses(System.Management.ManagementOperationObserver,System.String,System.String,System.String,System.Management.EnumerationOptions)">
      <summary>
        <para>Retrieves relationship classes that relate the class according to the specified 
                  options, asynchronously.</para>
      </summary>
      <param name="watcher">The handler for progress and results of the asynchronous operation.</param>
      <param name="relationshipClass">
        <para>The class from which all resulting relationship classes must derive.</para>
      </param>
      <param name=" relationshipQualifier">The qualifier which the resulting relationship classes must have.</param>
      <param name=" thisRole">The role which the source class must have in the resulting relationship classes.</param>
      <param name=" options"> The options for retrieving the results.</param>
      <returns>
        <para>A collection of association classes
                  relating this class to others, according to the given options.</para>
      </returns>
    </member>
    <member name="M:System.Management.ManagementClass.GetStronglyTypedClassCode(System.Boolean,System.Boolean)">
      <summary>
        <para>Generates a strongly-typed class for a given WMI class.</para>
      </summary>
      <param name="includeSystemClassInClassDef">
        <see langword="true" /> if the class for managing system properties must be included; otherwise, <see langword="false" />.</param>
      <param name="systemPropertyClass">
        <see langword="true" /> if the generated class will manage system properties; otherwise, <see langword="false" />.</param>
      <returns>
        <para>A <see cref="T:System.CodeDom.CodeTypeDeclaration" /> instance
               representing the declaration for the strongly-typed class.</para>
      </returns>
    </member>
    <member name="M:System.Management.ManagementClass.GetStronglyTypedClassCode(System.Management.CodeLanguage,System.String,System.String)">
      <summary>
        <para>Generates a strongly-typed class for a given WMI class. This function generates code for Visual Basic, 
                  C#, or JScript, depending on the input parameters.</para>
      </summary>
      <param name="lang">The language of the code to be generated.</param>
      <param name="filePath">The path of the file where the code is to be written.</param>
      <param name="classNamespace">The .NET namespace into which the class should be generated. If this is empty, the namespace will be generated from the WMI namespace.</param>
      <returns>
        <para>
          <see langword="true" />, if the method succeeded; 
               otherwise, <see langword="false" /> .</para>
      </returns>
    </member>
    <member name="P:System.Management.ManagementClass.Path">
      <summary>
        <para>Gets or sets the path of the WMI class to 
                  which the <see cref="T:System.Management.ManagementClass" />
                  object is bound.</para>
      </summary>
    </member>
    <member name="P:System.Management.ManagementClass.Derivation">
      <summary>
        <para> Gets or sets an array containing all WMI classes in the 
                  inheritance hierarchy from this class to the top.</para>
      </summary>
    </member>
    <member name="P:System.Management.ManagementClass.Methods">
      <summary>
        <para>Gets or sets a collection of <see cref="T:System.Management.MethodData" /> objects that
               represent the methods defined in the WMI class.</para>
      </summary>
    </member>
    <member name="T:System.Management.ManagementEventArgs">
      <summary>
        <para>Represents the virtual base class to hold event data for WMI events.</para>
      </summary>
    </member>
    <member name="P:System.Management.ManagementEventArgs.Context">
      <summary>
        <para> Gets the operation context echoed back
                  from the operation that triggered the event.</para>
      </summary>
    </member>
    <member name="T:System.Management.ObjectReadyEventArgs">
      <summary>
        <para>Holds event data for the <see cref="F:System.Management.ManagementOperationObserver.ObjectReady" /> event.</para>
      </summary>
    </member>
    <member name="P:System.Management.ObjectReadyEventArgs.NewObject">
      <summary>
        <para> Gets the newly-returned object.</para>
      </summary>
    </member>
    <member name="T:System.Management.CompletedEventArgs">
      <summary>
        <para> Holds event data for the <see cref="F:System.Management.ManagementOperationObserver.Completed" /> event.</para>
      </summary>
    </member>
    <member name="P:System.Management.CompletedEventArgs.StatusObject">
      <summary>
        <para>Gets or sets additional status information
                  within a WMI object. This may be null.</para>
      </summary>
    </member>
    <member name="P:System.Management.CompletedEventArgs.Status">
      <summary>
        <para>Gets the completion status of the operation.</para>
      </summary>
    </member>
    <member name="T:System.Management.ObjectPutEventArgs">
      <summary>
        <para>Holds event data for the <see cref="F:System.Management.ManagementOperationObserver.ObjectPut" /> event.</para>
      </summary>
    </member>
    <member name="P:System.Management.ObjectPutEventArgs.Path">
      <summary>
        <para> Gets the identity of the
                  object that has been put.</para>
      </summary>
    </member>
    <member name="T:System.Management.ProgressEventArgs">
      <summary>
        <para>Holds event data for the <see cref="F:System.Management.ManagementOperationObserver.Progress" /> event.</para>
      </summary>
    </member>
    <member name="P:System.Management.ProgressEventArgs.UpperBound">
      <summary>
        <para> Gets the total
                  amount of work required to be done by the operation.</para>
      </summary>
    </member>
    <member name="P:System.Management.ProgressEventArgs.Current">
      <summary>
        <para> Gets the current amount of work 
                  done by the operation. This is always less than or equal to <see cref="P:System.Management.ProgressEventArgs.UpperBound" />.</para>
      </summary>
    </member>
    <member name="P:System.Management.ProgressEventArgs.Message">
      <summary>
        <para>Gets or sets optional additional information regarding the operation's progress.</para>
      </summary>
    </member>
    <member name="T:System.Management.EventArrivedEventArgs">
      <summary>
        <para>Holds event data for the <see cref="F:System.Management.ManagementEventWatcher.EventArrived" /> event.</para>
      </summary>
    </member>
    <member name="P:System.Management.EventArrivedEventArgs.NewEvent">
      <summary>
        <para> Gets the WMI event that was delivered.</para>
      </summary>
    </member>
    <member name="T:System.Management.StoppedEventArgs">
      <summary>
        <para>Holds event data for the <see cref="F:System.Management.ManagementEventWatcher.Stopped" /> event.</para>
      </summary>
    </member>
    <member name="P:System.Management.StoppedEventArgs.Status">
      <summary>
        <para> Gets the completion status of the operation.</para>
      </summary>
    </member>
    <member name="T:System.Management.EventArrivedEventHandler">
      <summary>
        <para>Represents the method that will handle the <see cref="F:System.Management.ManagementEventWatcher.EventArrived" /> event.</para>
      </summary>
    </member>
    <member name="T:System.Management.StoppedEventHandler">
      <summary>
        <para>Represents the method that will handle the <see cref="F:System.Management.ManagementEventWatcher.Stopped" /> event.</para>
      </summary>
    </member>
    <member name="T:System.Management.ManagementEventWatcher">
      <summary>
        <para> Subscribes to temporary event notifications
                  based on a specified event query.</para>
      </summary>
    </member>
    <member name="M:System.Management.ManagementEventWatcher.#ctor">
      <summary>
        <para> Initializes a new instance of the <see cref="T:System.Management.ManagementEventWatcher" /> class. For further
               initialization, set the properties on the object. This is the default constructor.</para>
      </summary>
    </member>
    <member name="M:System.Management.ManagementEventWatcher.#ctor(System.Management.EventQuery)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Management.ManagementEventWatcher" /> class when given a WMI event query.</para>
      </summary>
      <param name="query">A WMI event query, which determines the events for which the watcher will listen.</param>
    </member>
    <member name="M:System.Management.ManagementEventWatcher.#ctor(System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Management.ManagementEventWatcher" /> class when given a WMI event query in the 
               form of a string.</para>
      </summary>
      <param name="query"> A WMI event query, which defines the events for which the watcher will listen.</param>
    </member>
    <member name="M:System.Management.ManagementEventWatcher.#ctor(System.Management.ManagementScope,System.Management.EventQuery)">
      <summary>
        <para> Initializes a new instance of the <see cref="T:System.Management.ManagementEventWatcher" /> 
            class that listens for events conforming to the given WMI event query.</para>
      </summary>
      <param name="scope"> The management scope (namespace) in which the watcher will listen for events.</param>
      <param name=" query"> The query that defines the events for which the watcher will listen.</param>
    </member>
    <member name="M:System.Management.ManagementEventWatcher.#ctor(System.String,System.String)">
      <summary>
        <para> Initializes a new instance of the <see cref="T:System.Management.ManagementEventWatcher" /> 
            class that listens for events conforming to the given WMI event query. For this
            variant, the query and the scope are specified as strings.</para>
      </summary>
      <param name="scope"> The management scope (namespace) in which the watcher will listen for events.</param>
      <param name=" query"> The query that defines the events for which the watcher will listen.</param>
    </member>
    <member name="M:System.Management.ManagementEventWatcher.#ctor(System.String,System.String,System.Management.EventWatcherOptions)">
      <summary>
        <para> Initializes a new instance of the <see cref="T:System.Management.ManagementEventWatcher" /> class that listens for 
               events conforming to the given WMI event query, according to the specified options. For
               this variant, the query and the scope are specified as strings. The options
               object can specify options such as a timeout and context information.</para>
      </summary>
      <param name="scope"> The management scope (namespace) in which the watcher will listen for events.</param>
      <param name=" query"> The query that defines the events for which the watcher will listen.</param>
      <param name="options"> Additional options used to watch for events. </param>
    </member>
    <member name="M:System.Management.ManagementEventWatcher.#ctor(System.Management.ManagementScope,System.Management.EventQuery,System.Management.EventWatcherOptions)">
      <summary>
        <para> Initializes a new instance of the <see cref="T:System.Management.ManagementEventWatcher" /> class 
               that listens for events conforming to the given WMI event query, according to the specified
               options. For this variant, the query and the scope are specified objects. The
               options object can specify options such as timeout and context information.</para>
      </summary>
      <param name="scope"> The management scope (namespace) in which the watcher will listen for events.</param>
      <param name=" query"> The query that defines the events for which the watcher will listen.</param>
      <param name="options"> Additional options used to watch for events. </param>
    </member>
    <member name="M:System.Management.ManagementEventWatcher.Finalize">
      <summary>
        <para>Ensures that outstanding calls are cleared. This is the destructor for the object.</para>
      </summary>
    </member>
    <member name="M:System.Management.ManagementEventWatcher.WaitForNextEvent">
      <summary>
        <para>Waits for the next event that matches the specified query to arrive, and
                  then returns it.</para>
      </summary>
      <returns>
        <para>A <see cref="T:System.Management.ManagementBaseObject" /> representing the 
               newly arrived event.</para>
      </returns>
    </member>
    <member name="M:System.Management.ManagementEventWatcher.Start">
      <summary>
        <para>Subscribes to events with the given query and delivers 
                  them, asynchronously, through the <see cref="F:System.Management.ManagementEventWatcher.EventArrived" /> event.</para>
      </summary>
    </member>
    <member name="M:System.Management.ManagementEventWatcher.Stop">
      <summary>
        <para>Cancels the subscription whether it is synchronous or asynchronous.</para>
      </summary>
    </member>
    <member name="E:System.Management.ManagementEventWatcher.EventArrived">
      <summary>
        <para> Occurs when a new event arrives.</para>
      </summary>
    </member>
    <member name="E:System.Management.ManagementEventWatcher.Stopped">
      <summary>
        <para> Occurs when a subscription is canceled.</para>
      </summary>
    </member>
    <member name="P:System.Management.ManagementEventWatcher.Scope">
      <summary>
        <para>Gets or sets the scope in which to watch for events (namespace or scope).</para>
      </summary>
    </member>
    <member name="P:System.Management.ManagementEventWatcher.Query">
      <summary>
        <para>Gets or sets the criteria to apply to events.</para>
      </summary>
    </member>
    <member name="P:System.Management.ManagementEventWatcher.Options">
      <summary>
        <para>Gets or sets the options used to watch for events.</para>
      </summary>
    </member>
    <member name="T:System.Management.ManagementStatus">
      <summary>
        <para>Represents the enumeration of all WMI error codes that are currently defined.</para>
      </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.NoError">
      <summary>
               The operation was successful.
            </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.False">
      <summary>
        <para> This value is returned when no more objects 
                  are available, the number of objects returned is less than the number requested,
                  or at the end of an enumeration. It is also returned when the method is called
                  with a value of 0 for the <paramref name="uCount" /> parameter.</para>
      </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.ResetToDefault">
      <summary>
        <para>An overridden property was deleted. This value is
                  returned to signal that the original, non-overridden value has been restored as a
                  result of the deletion.</para>
      </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.Different">
      <summary>
        <para> The compared items (such as objects and classes)
                  are not identical.</para>
      </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.Timedout">
      <summary>
        <para> A call timed out. This is not an
                  error condition; therefore, some results may have been returned.</para>
      </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.NoMoreData">
      <summary>
        <para> No more data is available from the enumeration; the 
                  user should terminate the enumeration. </para>
      </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.OperationCanceled">
      <summary>
        <para> The operation was
                  canceled.</para>
      </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.Pending">
      <summary>
        <para>A request is still in progress; however, the results are not
                  yet available.</para>
      </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.DuplicateObjects">
      <summary>
        <para> More than one copy of the same object was detected in 
                  the result set of an enumeration. </para>
      </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.PartialResults">
      <summary>
        <para>The user did not receive all of the requested objects
                  because of inaccessible resources (other than security violations).</para>
      </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.Failed">
      <summary>
        <para>The call failed.</para>
      </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.NotFound">
      <summary>
        <para> The object could not be found. </para>
      </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.AccessDenied">
      <summary>
               The current user does not have permission to perform the
               action.
            </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.ProviderFailure">
      <summary>
        <para> The provider failed after 
                  initialization. </para>
      </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.TypeMismatch">
      <summary>
               A type mismatch occurred.
            </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.OutOfMemory">
      <summary>
               There was not enough memory for the operation.
            </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.InvalidContext">
      <summary>
        <para>The context object is not valid.</para>
      </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.InvalidParameter">
      <summary>
        <para> One of the parameters to the call is not correct. 
               </para>
      </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.NotAvailable">
      <summary>
        <para> The resource, typically a remote server, is not 
                  currently available. </para>
      </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.CriticalError">
      <summary>
        <para>An internal, critical, and unexpected error occurred. 
                  Report this error to Microsoft Technical Support.</para>
      </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.InvalidStream">
      <summary>
        <para>One or more network packets were corrupted during a remote session.</para>
      </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.NotSupported">
      <summary>
        <para> The feature or operation is not supported. </para>
      </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.InvalidSuperclass">
      <summary>
               The specified superclass is not valid.
            </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.InvalidNamespace">
      <summary>
        <para> The specified namespace could not be found. </para>
      </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.InvalidObject">
      <summary>
               The specified instance is not valid.
            </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.InvalidClass">
      <summary>
               The specified class is not valid.
            </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.ProviderNotFound">
      <summary>
               A provider referenced in the schema does not have a
               corresponding registration.
            </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.InvalidProviderRegistration">
      <summary>
               A provider referenced in the schema has an incorrect or
               incomplete registration.
            </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.ProviderLoadFailure">
      <summary>
               COM cannot locate a provider referenced in the schema.
            </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.InitializationFailure">
      <summary>
             A component, such as a provider, failed to initialize for internal reasons. 
            </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.TransportFailure">
      <summary>
               A networking error that prevents normal operation has
               occurred.
            </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.InvalidOperation">
      <summary>
        <para> The requested operation is not valid. This error usually 
                  applies to invalid attempts to delete classes or properties. </para>
      </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.InvalidQuery">
      <summary>
               The query was not syntactically valid.
            </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.InvalidQueryType">
      <summary>
        <para>The requested query language is not supported.</para>
      </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.AlreadyExists">
      <summary>
        <para>In a put operation, the <see langword="wbemChangeFlagCreateOnly" />
            flag was specified, but the instance already exists.</para>
      </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.OverrideNotAllowed">
      <summary>
        <para>The add operation cannot be performed on the qualifier 
                  because the owning object does not permit overrides.</para>
      </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.PropagatedQualifier">
      <summary>
        <para> The user attempted to delete a qualifier that was not 
                  owned. The qualifier was inherited from a parent class. </para>
      </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.PropagatedProperty">
      <summary>
        <para> The user attempted to delete a property that was not 
                  owned. The property was inherited from a parent class. </para>
      </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.Unexpected">
      <summary>
               The client made an unexpected and illegal sequence of
               calls.
            </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.IllegalOperation">
      <summary>
        <para>The user requested an illegal operation, such as 
                  spawning a class from an instance.</para>
      </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.CannotBeKey">
      <summary>
        <para> There was an illegal attempt to specify a key qualifier 
                  on a property that cannot be a key. The keys are specified in the class
                  definition for an object and cannot be altered on a per-instance basis.</para>
      </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.IncompleteClass">
      <summary>
        <para>The current object is not a valid class definition.
                  Either it is incomplete, or it has not been registered with WMI using
               <see cref="M:System.Management.ManagementObject.Put" />().</para>
      </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.InvalidSyntax">
      <summary>
               Reserved for future use.
            </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.NondecoratedObject">
      <summary>
               Reserved for future use.
            </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.ReadOnly">
      <summary>
        <para>The property that you are attempting to modify is read-only.</para>
      </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.ProviderNotCapable">
      <summary>
        <para> The provider cannot perform the requested operation, such 
                  as requesting a query that is too complex, retrieving an instance, creating or
                  updating a class, deleting a class, or enumerating a class. </para>
      </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.ClassHasChildren">
      <summary>
        <para>An attempt was made to make a change that would
                  invalidate a derived class.</para>
      </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.ClassHasInstances">
      <summary>
        <para> An attempt has been made to delete or modify a class that 
                  has instances. </para>
      </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.QueryNotImplemented">
      <summary>
               Reserved for future use.
            </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.IllegalNull">
      <summary>
        <para> A value of null was specified for a property that may
                  not be null, such as one that is marked by a <see langword="Key" />, <see langword="Indexed" />, or
               <see langword="Not_Null" /> qualifier.</para>
      </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.InvalidQualifierType">
      <summary>
        <para> The value provided for a qualifier was not a 
                  legal qualifier type.</para>
      </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.InvalidPropertyType">
      <summary>
               The CIM type specified for a property is not valid.
            </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.ValueOutOfRange">
      <summary>
        <para> The request was made with an out-of-range value, or is 
                  incompatible with the type. </para>
      </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.CannotBeSingleton">
      <summary>
        <para>An illegal attempt was made to make a class singleton, 
                  such as when the class is derived from a non-singleton class.</para>
      </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.InvalidCimType">
      <summary>
               The CIM type specified is not valid.
            </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.InvalidMethod">
      <summary>
               The requested method is not available.
            </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.InvalidMethodParameters">
      <summary>
        <para> The parameters provided for the method are not valid. 
               </para>
      </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.SystemProperty">
      <summary>
               There was an attempt to get qualifiers on a system
               property.
            </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.InvalidProperty">
      <summary>
               The property type is not recognized.
            </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.CallCanceled">
      <summary>
        <para> An asynchronous process has been canceled internally or 
                  by the user. Note that because of the timing and nature of the asynchronous
                  operation, the operation may not have been truly canceled. </para>
      </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.ShuttingDown">
      <summary>
        <para>The user has requested an operation while WMI is in the 
                  process of quitting.</para>
      </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.PropagatedMethod">
      <summary>
        <para> An attempt was made to reuse an existing method name from 
                  a superclass, and the signatures did not match. </para>
      </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.UnsupportedParameter">
      <summary>
        <para> One or more parameter values, such as a query text, is 
                  too complex or unsupported. WMI is requested to retry the operation
                  with simpler parameters. </para>
      </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.MissingParameterID">
      <summary>
               A parameter was missing from the method call.
            </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.InvalidParameterID">
      <summary>
               A method parameter has an invalid <see langword="ID" /> qualifier.
            </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.NonconsecutiveParameterIDs">
      <summary>
        <para> One or more of the method parameters have <see langword="ID" /> 
            qualifiers that are out of sequence. </para>
      </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.ParameterIDOnRetval">
      <summary>
        <para> The return value for a method has an <see langword="ID" /> qualifier. 
            </para>
      </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.InvalidObjectPath">
      <summary>
               The specified object path was invalid.
            </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.OutOfDiskSpace">
      <summary>
        <para> There is not enough free disk space to continue the 
                  operation. </para>
      </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.BufferTooSmall">
      <summary>
        <para> The supplied buffer was too small to hold all the objects 
                  in the enumerator or to read a string property. </para>
      </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.UnsupportedPutExtension">
      <summary>
               The provider does not support the requested put
               operation.
            </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.UnknownObjectType">
      <summary>
        <para> An object with an incorrect type or version was 
                  encountered during marshaling. </para>
      </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.UnknownPacketType">
      <summary>
        <para> A packet with an incorrect type or version was 
                  encountered during marshaling. </para>
      </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.MarshalVersionMismatch">
      <summary>
               The packet has an unsupported version.
            </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.MarshalInvalidSignature">
      <summary>
        <para>The packet is corrupted.</para>
      </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.InvalidQualifier">
      <summary>
               An attempt has been made to mismatch qualifiers, such as
               putting [key] on an object instead of a property.
            </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.InvalidDuplicateParameter">
      <summary>
               A duplicate parameter has been declared in a CIM method.
            </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.TooMuchData">
      <summary>
        <para> Reserved for future use. </para>
      </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.ServerTooBusy">
      <summary>
        <para>The delivery of an event has failed. The provider may 
                  choose to re-raise the event.</para>
      </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.InvalidFlavor">
      <summary>
               The specified flavor was invalid.
            </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.CircularReference">
      <summary>
        <para> An attempt has been made to create a reference that is 
                  circular (for example, deriving a class from itself). </para>
      </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.UnsupportedClassUpdate">
      <summary>
               The specified class is not supported.
            </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.CannotChangeKeyInheritance">
      <summary>
        <para> An attempt was made to change a key when instances or derived 
                  classes are already using the key. </para>
      </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.CannotChangeIndexInheritance">
      <summary>
        <para> An attempt was made to change an index when instances or derived 
                  classes are already using the index. </para>
      </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.TooManyProperties">
      <summary>
        <para> An attempt was made to create more properties than the 
                  current version of the class supports. </para>
      </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.UpdateTypeMismatch">
      <summary>
        <para> A property was redefined with a conflicting type in a 
                  derived class. </para>
      </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.UpdateOverrideNotAllowed">
      <summary>
        <para> An attempt was made in a derived class to override a 
                  non-overrideable qualifier. </para>
      </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.UpdatePropagatedMethod">
      <summary>
        <para> A method was redeclared with a conflicting signature in a 
                  derived class. </para>
      </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.MethodNotImplemented">
      <summary>
               An attempt was made to execute a method not marked with
               [implemented] in any relevant class.
            </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.MethodDisabled">
      <summary>
        <para> An attempt was made to execute a method marked with 
                  [disabled]. </para>
      </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.RefresherBusy">
      <summary>
        <para> The refresher is busy with another operation. </para>
      </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.UnparsableQuery">
      <summary>
        <para> The filtering query is syntactically invalid. </para>
      </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.NotEventClass">
      <summary>
               The FROM clause of a filtering query references a class
               that is not an event class.
            </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.MissingGroupWithin">
      <summary>
               A GROUP BY clause was used without the corresponding
               GROUP WITHIN clause.
            </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.MissingAggregationList">
      <summary>
               A GROUP BY clause was used. Aggregation on all properties
               is not supported.
            </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.PropertyNotAnObject">
      <summary>
        <para> Dot notation was used on a property that is not an 
                  embedded object. </para>
      </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.AggregatingByObject">
      <summary>
               A GROUP BY clause references a property that is an
               embedded object without using dot notation.
            </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.UninterpretableProviderQuery">
      <summary>
               An event provider registration query
               (<see langword="__EventProviderRegistration" />) did not specify the classes for which
               events were provided.
            </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.BackupRestoreWinmgmtRunning">
      <summary>
        <para> An request was made to back up or restore the repository 
                  while WinMgmt.exe was using it. </para>
      </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.QueueOverflow">
      <summary>
        <para> The asynchronous delivery queue overflowed from the 
                  event consumer being too slow. </para>
      </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.PrivilegeNotHeld">
      <summary>
               The operation failed because the client did not have the
               necessary security privilege.
            </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.InvalidOperator">
      <summary>
        <para>The operator is not valid for this property type.</para>
      </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.LocalCredentials">
      <summary>
        <para> The user specified a username, password, or authority on a 
                  local connection. The user must use an empty user name and password and rely on
                  default security. </para>
      </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.CannotBeAbstract">
      <summary>
        <para> The class was made abstract when its superclass is not 
                  abstract. </para>
      </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.AmendedObject">
      <summary>
        <para> An amended object was used in a put operation without the 
                  WBEM_FLAG_USE_AMENDED_QUALIFIERS flag being specified. </para>
      </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.ClientTooSlow">
      <summary>
               The client was not retrieving objects quickly enough from
               an enumeration.
            </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.RegistrationTooBroad">
      <summary>
        <para> The provider registration overlaps with the system event 
                  domain. </para>
      </summary>
    </member>
    <member name="F:System.Management.ManagementStatus.RegistrationTooPrecise">
      <summary>
        <para> A WITHIN clause was not used in this query. </para>
      </summary>
    </member>
    <member name="T:System.Management.ManagementException">
      <summary>
        <para> Represents management exceptions.</para>
      </summary>
    </member>
    <member name="M:System.Management.ManagementException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Management.ManagementException" /> class that is serializable.</para>
      </summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> to populate with data.</param>
      <param name="context">The destination (see <see cref="T:System.Runtime.Serialization.StreamingContext" /> ) for this serialization.</param>
    </member>
    <member name="M:System.Management.ManagementException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
        <para>Populates the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object with the data needed to 
               serialize the <see cref="T:System.Management.ManagementException" />
               object.</para>
      </summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> to populate with data.</param>
      <param name="context">The destination (see <see cref="T:System.Runtime.Serialization.StreamingContext" /> ) for this serialization.</param>
    </member>
    <member name="P:System.Management.ManagementException.ErrorInformation">
      <summary>
        <para>Gets the extended error object provided by WMI.</para>
      </summary>
    </member>
    <member name="P:System.Management.ManagementException.ErrorCode">
      <summary>
        <para>Gets the error code reported by WMI, which caused this exception.</para>
      </summary>
    </member>
    <member name="T:System.Management.ManagementObjectCollection">
      <summary>
        <para> Represents different collections of WMI instances (namespaces,
                  scopes, and query watcher).</para>
      </summary>
    </member>
    <member name="M:System.Management.ManagementObjectCollection.Finalize">
      <summary>
        <para>Disposes of resources the object is holding. This is the destructor for the object.</para>
      </summary>
    </member>
    <member name="M:System.Management.ManagementObjectCollection.Dispose">
      <summary>
            Releases resources associated with this object. After this
            method has been called, an attempt to use this object will
            result in an ObjectDisposedException being thrown.
            </summary>
    </member>
    <member name="M:System.Management.ManagementObjectCollection.CopyTo(System.Array,System.Int32)">
      <summary>
        <para> Copies the collection to an array.</para>
      </summary>
      <param name="array">An array to copy to. </param>
      <param name="index">The index to start from. </param>
    </member>
    <member name="M:System.Management.ManagementObjectCollection.CopyTo(System.Management.ManagementBaseObject[],System.Int32)">
      <summary>
        <para>Copies the items in the collection to a <see cref="T:System.Management.ManagementBaseObject" /> 
            array.</para>
      </summary>
      <param name="objectCollection">The target array.</param>
      <param name=" index">The index to start from.</param>
    </member>
    <member name="M:System.Management.ManagementObjectCollection.GetEnumerator">
      <summary>
        <para>Returns the enumerator for the collection.</para>
      </summary>
      <returns>
               An <see cref="T:System.Collections.IEnumerator" />that can be used to iterate through the
               collection.
            </returns>
    </member>
    <member name="P:System.Management.ManagementObjectCollection.Count">
      <summary>
        <para>Represents the number of objects in the collection.</para>
      </summary>
    </member>
    <member name="P:System.Management.ManagementObjectCollection.IsSynchronized">
      <summary>
        <para>Represents whether the object is synchronized.</para>
      </summary>
    </member>
    <member name="P:System.Management.ManagementObjectCollection.SyncRoot">
      <summary>
        <para>Represents the object to be used for synchronization.</para>
      </summary>
    </member>
    <member name="M:System.Management.ManagementObjectCollection.ManagementObjectEnumerator.Finalize">
      <summary>
        <para>Disposes of resources the object is holding. This is the destructor for the object.</para>
      </summary>
    </member>
    <member name="M:System.Management.ManagementObjectCollection.ManagementObjectEnumerator.Dispose">
      <summary>
            Releases resources associated with this object. After this
            method has been called, an attempt to use this object will
            result in an ObjectDisposedException being thrown.
            </summary>
    </member>
    <member name="M:System.Management.ManagementObjectCollection.ManagementObjectEnumerator.MoveNext">
      <summary>
               Indicates whether the enumerator has moved to
               the next object in the enumeration.
            </summary>
      <returns>
        <para>
          <see langword="true" />, if the enumerator was 
               successfully advanced to the next element; <see langword="false" /> if the enumerator has
               passed the end of the collection.</para>
      </returns>
    </member>
    <member name="M:System.Management.ManagementObjectCollection.ManagementObjectEnumerator.Reset">
      <summary>
        <para>Resets the enumerator to the beginning of the collection.</para>
      </summary>
    </member>
    <member name="P:System.Management.ManagementObjectCollection.ManagementObjectEnumerator.Current">
      <summary>
        <para>Returns the current object in the
                  enumeration.</para>
      </summary>
    </member>
    <member name="M:System.Management.RelationshipCollection.Add(System.Management.ManagementPath)">
      <summary>
            Adds a relationship to the specified object
            </summary>
    </member>
    <member name="M:System.Management.RelationshipCollection.Remove(System.Management.ManagementPath)">
      <summary>
            Removes the relationship to the specified object
            </summary>
    </member>
    <member name="T:System.Management.ManagementObjectSearcher">
      <summary>
        <para> Retrieves a collection of WMI objects based
                  on a specified query.</para>
      </summary>
    </member>
    <member name="M:System.Management.ManagementObjectSearcher.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Management.ManagementObjectSearcher" /> class. After some properties on 
               this object are set, the object can be used to invoke a query for management information. This is the default
               constructor.</para>
      </summary>
    </member>
    <member name="M:System.Management.ManagementObjectSearcher.#ctor(System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Management.ManagementObjectSearcher" /> class used 
               to invoke the specified query for management information.</para>
      </summary>
      <param name="queryString">The WMI query to be invoked by the object.</param>
    </member>
    <member name="M:System.Management.ManagementObjectSearcher.#ctor(System.Management.ObjectQuery)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Management.ManagementObjectSearcher" /> class used to invoke the 
               specified query for management information.</para>
      </summary>
      <param name="query">An <see cref="T:System.Management.ObjectQuery" /> representing the query to be invoked by the searcher.</param>
    </member>
    <member name="M:System.Management.ManagementObjectSearcher.#ctor(System.String,System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Management.ManagementObjectSearcher" /> class used to invoke the
               specified query in the specified scope.</para>
      </summary>
      <param name="scope">The scope in which to query.</param>
      <param name=" queryString">The query to be invoked.</param>
    </member>
    <member name="M:System.Management.ManagementObjectSearcher.#ctor(System.Management.ManagementScope,System.Management.ObjectQuery)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Management.ManagementObjectSearcher" /> class used to invoke the 
               specified query in the specified scope.</para>
      </summary>
      <param name="scope">A <see cref="T:System.Management.ManagementScope" /> representing the scope in which to invoke the query.</param>
      <param name=" query">An <see cref="T:System.Management.ObjectQuery" /> representing the query to be invoked.</param>
    </member>
    <member name="M:System.Management.ManagementObjectSearcher.#ctor(System.String,System.String,System.Management.EnumerationOptions)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Management.ManagementObjectSearcher" /> class used to invoke the specified
               query, in the specified scope, and with the specified options.</para>
      </summary>
      <param name="scope">The scope in which the query should be invoked.</param>
      <param name=" queryString">The query to be invoked.</param>
      <param name=" options">An <see cref="T:System.Management.EnumerationOptions" /> specifying additional options for the query.</param>
    </member>
    <member name="M:System.Management.ManagementObjectSearcher.#ctor(System.Management.ManagementScope,System.Management.ObjectQuery,System.Management.EnumerationOptions)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Management.ManagementObjectSearcher" /> class to be
               used to invoke the specified query in the specified scope, with the specified
               options.</para>
      </summary>
      <param name="scope">A <see cref="T:System.Management.ManagementScope" /> specifying the scope of the query</param>
      <param name=" query">An <see cref="T:System.Management.ObjectQuery" /> specifying the query to be invoked</param>
      <param name=" options">An <see cref="T:System.Management.EnumerationOptions" /> specifying additional options to be used for the query.</param>
    </member>
    <member name="M:System.Management.ManagementObjectSearcher.Get">
      <summary>
        <para>Invokes the specified WMI query and returns the
                  resulting collection.</para>
      </summary>
      <returns>
        <para>A <see cref="T:System.Management.ManagementObjectCollection" /> containing the objects that match the
               specified query.</para>
      </returns>
    </member>
    <member name="M:System.Management.ManagementObjectSearcher.Get(System.Management.ManagementOperationObserver)">
      <summary>
        <para>Invokes the WMI query, asynchronously, and binds to a watcher to deliver the results.</para>
      </summary>
      <param name="watcher">The watcher that raises events triggered by the operation. </param>
    </member>
    <member name="P:System.Management.ManagementObjectSearcher.Scope">
      <summary>
        <para>Gets or sets the scope in which to look for objects (currently a WMI namespace).</para>
      </summary>
    </member>
    <member name="P:System.Management.ManagementObjectSearcher.Query">
      <summary>
        <para> Gets or sets the query to be invoked in the
                  searcher (that is, the criteria to be applied to the search for management objects).</para>
      </summary>
    </member>
    <member name="P:System.Management.ManagementObjectSearcher.Options">
      <summary>
        <para>Gets or sets the options for how to search for objects.</para>
      </summary>
    </member>
    <member name="T:System.Management.ObjectReadyEventHandler">
      <summary>
        <para>Represents the method that will handle the <see cref="F:System.Management.ManagementOperationObserver.ObjectReady" /> event.</para>
      </summary>
    </member>
    <member name="T:System.Management.CompletedEventHandler">
      <summary>
        <para>Represents the method that will handle the <see cref="F:System.Management.ManagementOperationObserver.Completed" /> event.</para>
      </summary>
    </member>
    <member name="T:System.Management.ProgressEventHandler">
      <summary>
        <para>Represents the method that will handle the <see cref="F:System.Management.ManagementOperationObserver.Progress" /> event.</para>
      </summary>
    </member>
    <member name="T:System.Management.ObjectPutEventHandler">
      <summary>
        <para>Represents the method that will handle the <see cref="F:System.Management.ManagementOperationObserver.ObjectPut" /> event.</para>
      </summary>
    </member>
    <member name="T:System.Management.ManagementOperationObserver">
      <summary>
        <para>Used to manage asynchronous operations and handle management information and events received asynchronously.</para>
      </summary>
    </member>
    <member name="M:System.Management.ManagementOperationObserver.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Management.ManagementOperationObserver" /> class. This is the default constructor.</para>
      </summary>
    </member>
    <member name="M:System.Management.ManagementOperationObserver.Cancel">
      <summary>
        <para> Cancels all outstanding operations.</para>
      </summary>
    </member>
    <member name="E:System.Management.ManagementOperationObserver.ObjectReady">
      <summary>
        <para> Occurs when a new object is available.</para>
      </summary>
    </member>
    <member name="E:System.Management.ManagementOperationObserver.Completed">
      <summary>
        <para> Occurs when an operation has completed.</para>
      </summary>
    </member>
    <member name="E:System.Management.ManagementOperationObserver.Progress">
      <summary>
        <para> Occurs to indicate the progress of an ongoing operation.</para>
      </summary>
    </member>
    <member name="E:System.Management.ManagementOperationObserver.ObjectPut">
      <summary>
        <para> Occurs when an object has been successfully committed.</para>
      </summary>
    </member>
    <member name="T:System.Management.AuthenticationLevel">
      <summary>
        <para>Describes the authentication level to be used to connect to WMI. This is used for the COM connection to WMI.</para>
      </summary>
    </member>
    <member name="F:System.Management.AuthenticationLevel.Default">
      <summary>
        <para>The default COM authentication level. WMI uses the default Windows Authentication setting.</para>
      </summary>
    </member>
    <member name="F:System.Management.AuthenticationLevel.None">
      <summary>
        <para> No COM authentication.</para>
      </summary>
    </member>
    <member name="F:System.Management.AuthenticationLevel.Connect">
      <summary>
        <para> Connect-level COM authentication.</para>
      </summary>
    </member>
    <member name="F:System.Management.AuthenticationLevel.Call">
      <summary>
        <para> Call-level COM authentication.</para>
      </summary>
    </member>
    <member name="F:System.Management.AuthenticationLevel.Packet">
      <summary>
        <para> Packet-level COM authentication.</para>
      </summary>
    </member>
    <member name="F:System.Management.AuthenticationLevel.PacketIntegrity">
      <summary>
        <para>Packet Integrity-level COM authentication.</para>
      </summary>
    </member>
    <member name="F:System.Management.AuthenticationLevel.PacketPrivacy">
      <summary>
        <para>Packet Privacy-level COM authentication.</para>
      </summary>
    </member>
    <member name="F:System.Management.AuthenticationLevel.Unchanged">
      <summary>
        <para>Authentication level should remain as it was before.</para>
      </summary>
    </member>
    <member name="T:System.Management.ImpersonationLevel">
      <summary>
        <para>Describes the impersonation level to be used to connect to WMI.</para>
      </summary>
    </member>
    <member name="F:System.Management.ImpersonationLevel.Default">
      <summary>
        <para>Default impersonation.</para>
      </summary>
    </member>
    <member name="F:System.Management.ImpersonationLevel.Anonymous">
      <summary>
        <para> Anonymous COM impersonation level that hides the 
                  identity of the caller. Calls to WMI may fail
                  with this impersonation level.</para>
      </summary>
    </member>
    <member name="F:System.Management.ImpersonationLevel.Identify">
      <summary>
        <para> Identify-level COM impersonation level that allows objects 
                  to query the credentials of the caller. Calls to
                  WMI may fail with this impersonation level.</para>
      </summary>
    </member>
    <member name="F:System.Management.ImpersonationLevel.Impersonate">
      <summary>
        <para> Impersonate-level COM impersonation level that allows 
                  objects to use the credentials of the caller. This is the recommended impersonation level for WMI calls.</para>
      </summary>
    </member>
    <member name="F:System.Management.ImpersonationLevel.Delegate">
      <summary>
        <para> Delegate-level COM impersonation level that allows objects
                  to permit other objects to use the credentials of the caller. This
                  level, which will work with WMI calls but may constitute an unnecessary
                  security risk, is supported only under Windows 2000.</para>
      </summary>
    </member>
    <member name="T:System.Management.PutType">
      <summary>
        <para>Describes the possible effects of saving an object to WMI when 
                  using <see cref="M:System.Management.ManagementObject.Put" />.</para>
      </summary>
    </member>
    <member name="F:System.Management.PutType.UpdateOnly">
      <summary>
        <para> Updates an existing object
                  only; does not create a new object.</para>
      </summary>
    </member>
    <member name="F:System.Management.PutType.CreateOnly">
      <summary>
        <para> Creates an object only;
                  does not update an existing object.</para>
      </summary>
    </member>
    <member name="F:System.Management.PutType.UpdateOrCreate">
      <summary>
        <para> Saves the object, whether
                  updating an existing object or creating a new object.</para>
      </summary>
    </member>
    <member name="T:System.Management.ManagementOptions">
      <summary>
        <para>Provides an abstract base class for all options objects.</para>
      </summary>
    </member>
    <member name="F:System.Management.ManagementOptions.InfiniteTimeout">
      <summary>
        <para> Specifies an infinite timeout.</para>
      </summary>
    </member>
    <member name="M:System.Management.ManagementOptions.Clone">
      <summary>
        <para> Returns a copy of the object.</para>
      </summary>
      <returns>
        <para>The cloned object.</para>
      </returns>
    </member>
    <member name="P:System.Management.ManagementOptions.Context">
      <summary>
        <para> Gets or sets a WMI context object. This is a
                  name-value pairs list to be passed through to a WMI provider that supports
                  context information for customized operation.</para>
      </summary>
    </member>
    <member name="P:System.Management.ManagementOptions.Timeout">
      <summary>
        <para>Gets or sets the timeout to apply to the operation. 
                  Note that for operations that return collections, this timeout applies to the
                  enumeration through the resulting collection, not the operation itself
                  (the <see cref="P:System.Management.EnumerationOptions.ReturnImmediately" />
                  property is used for the latter).</para>
               This property is used to indicate that the operation should be performed semisynchronously.
            </summary>
    </member>
    <member name="T:System.Management.EnumerationOptions">
      <summary>
        <para>Provides a base class for query and enumeration-related options
                  objects.</para>
      </summary>
    </member>
    <member name="M:System.Management.EnumerationOptions.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Management.EnumerationOptions" />
            class with default values (see the individual property descriptions
            for what the default values are). This is the default constructor. </para>
      </summary>
    </member>
    <member name="M:System.Management.EnumerationOptions.#ctor(System.Management.ManagementNamedValueCollection,System.TimeSpan,System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Management.EnumerationOptions" /> class to be used for queries or enumerations, 
               allowing the user to specify values for the different options.</para>
      </summary>
      <param name="context">The options context object containing provider-specific information that can be passed through to the provider.</param>
      <param name=" timeout">The timeout value for enumerating through the results.</param>
      <param name=" blockSize">The number of items to retrieve at one time from WMI.</param>
      <param name=" rewindable">
        <see langword="true" /> to specify whether the result set is rewindable (=allows multiple traversal or one-time); otherwise, <see langword="false" />.</param>
      <param name=" returnImmediatley">
        <see langword="true" /> to specify whether the operation should return immediately (semi-sync) or block until all results are available; otherwise, <see langword="false" /> .</param>
      <param name=" useAmendedQualifiers">
        <see langword="true" /> to specify whether the returned objects should contain amended (locale-aware) qualifiers; otherwise, <see langword="false" /> .</param>
      <param name=" ensureLocatable">
        <see langword="true" /> to specify to WMI that it should ensure all returned objects have valid paths; otherwise, <see langword="false" /> .</param>
      <param name=" prototypeOnly">
        <see langword="true" /> to return a prototype of the result set instead of the actual results; otherwise, <see langword="false" /> .</param>
      <param name=" directRead">
        <see langword="true" /> to to retrieve objects of only the specified class only or from derived classes as well; otherwise, <see langword="false" /> .</param>
      <param name=" enumerateDeep">
        <see langword="true" /> to specify recursive enumeration in subclasses; otherwise, <see langword="false" /> .</param>
    </member>
    <member name="M:System.Management.EnumerationOptions.Clone">
      <summary>
        <para> Returns a copy of the object.</para>
      </summary>
      <returns>
        <para>The cloned object.</para>
      </returns>
    </member>
    <member name="P:System.Management.EnumerationOptions.ReturnImmediately">
      <summary>
        <para>Gets or sets a value indicating whether the invoked operation should be 
                  performed in a synchronous or semisynchronous fashion. If this property is set
                  to <see langword="true" />, the enumeration is invoked and the call returns immediately. The actual
                  retrieval of the results will occur when the resulting collection is walked.</para>
      </summary>
    </member>
    <member name="P:System.Management.EnumerationOptions.BlockSize">
      <summary>
        <para> Gets or sets the block size
                  for block operations. When enumerating through a collection, WMI will return results in
                  groups of the specified size.</para>
      </summary>
    </member>
    <member name="P:System.Management.EnumerationOptions.Rewindable">
      <summary>
        <para>Gets or sets a value indicating whether the collection is assumed to be 
                  rewindable. If <see langword="true" />, the objects in the
                  collection will be kept available for multiple enumerations. If
               <see langword="false" />, the collection
                  can only be enumerated one time.</para>
      </summary>
    </member>
    <member name="P:System.Management.EnumerationOptions.UseAmendedQualifiers">
      <summary>
        <para> Gets or sets a value indicating whether the objects returned from
                  WMI should contain amended information. Typically, amended information is localizable
                  information attached to the WMI object, such as object and property
                  descriptions.</para>
      </summary>
    </member>
    <member name="P:System.Management.EnumerationOptions.EnsureLocatable">
      <summary>
        <para>Gets or sets a value indicating whether to the objects returned should have
                  locatable information in them. This ensures that the system properties, such as
               <see langword="__PATH" />, <see langword="__RELPATH" />, and 
               <see langword="__SERVER" />, are non-NULL. This flag can only be used in queries,
                  and is ignored in enumerations.</para>
      </summary>
    </member>
    <member name="P:System.Management.EnumerationOptions.PrototypeOnly">
      <summary>
        <para>Gets or sets a value indicating whether the query should return a
                  prototype of the result set instead of the actual results. This flag is used for
                  prototyping.</para>
      </summary>
    </member>
    <member name="P:System.Management.EnumerationOptions.DirectRead">
      <summary>
        <para> Gets or sets a value indicating whether direct access to the WMI provider is requested for the specified
                  class, without any regard to its superclass or derived classes.</para>
      </summary>
    </member>
    <member name="P:System.Management.EnumerationOptions.EnumerateDeep">
      <summary>
        <para> Gets or sets a value indicating whether recursive enumeration is 
                  requested into all classes derived from the specified superclass. If
               <see langword="false" />, only immediate derived
                  class members are returned.</para>
      </summary>
    </member>
    <member name="T:System.Management.EventWatcherOptions">
      <summary>
        <para> Specifies options for management event watching.</para>
      </summary>
    </member>
    <member name="M:System.Management.EventWatcherOptions.#ctor">
      <summary>
        <para> Initializes a new instance of the <see cref="T:System.Management.EventWatcherOptions" /> class for event watching, using default values.
               This is the default constructor.</para>
      </summary>
    </member>
    <member name="M:System.Management.EventWatcherOptions.#ctor(System.Management.ManagementNamedValueCollection,System.TimeSpan,System.Int32)">
      <summary>
        <para> Initializes a new instance of the <see cref="T:System.Management.EventWatcherOptions" /> class with the given
               values.</para>
      </summary>
      <param name="context">The options context object containing provider-specific information to be passed through to the provider. </param>
      <param name=" timeout">The timeout to wait for the next events.</param>
      <param name=" blockSize">The number of events to wait for in each block.</param>
    </member>
    <member name="M:System.Management.EventWatcherOptions.Clone">
      <summary>
        <para> Returns a copy of the object.</para>
      </summary>
      <returns>
               The cloned object.
            </returns>
    </member>
    <member name="P:System.Management.EventWatcherOptions.BlockSize">
      <summary>
        <para>Gets or sets the block size for block operations. When waiting for events, this
                  value specifies how many events to wait for before returning.</para>
      </summary>
    </member>
    <member name="T:System.Management.ObjectGetOptions">
      <summary>
        <para> Specifies options for getting a management object.</para>
      </summary>
    </member>
    <member name="M:System.Management.ObjectGetOptions.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Management.ObjectGetOptions" /> class for getting a WMI object, using
               default values. This is the default constructor.</para>
      </summary>
    </member>
    <member name="M:System.Management.ObjectGetOptions.#ctor(System.Management.ManagementNamedValueCollection)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Management.ObjectGetOptions" /> class for getting a WMI object, using the
               specified provider-specific context.</para>
      </summary>
      <param name="context">A provider-specific, named-value pairs context object to be passed through to the provider.</param>
    </member>
    <member name="M:System.Management.ObjectGetOptions.#ctor(System.Management.ManagementNamedValueCollection,System.TimeSpan,System.Boolean)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Management.ObjectGetOptions" /> class for getting a WMI object,
               using the given options values.</para>
      </summary>
      <param name="context">A provider-specific, named-value pairs context object to be passed through to the provider.</param>
      <param name=" timeout">The length of time to let the operation perform before it times out. The default is <see cref="F:System.Management.ManagementOptions.InfiniteTimeout" /> .</param>
      <param name=" useAmendedQualifiers">
        <see langword="true" /> if the returned objects should contain amended (locale-aware) qualifiers; otherwise, <see langword="false" />. </param>
    </member>
    <member name="M:System.Management.ObjectGetOptions.Clone">
      <summary>
        <para> Returns a copy of the object.</para>
      </summary>
      <returns>
        <para>The cloned object.</para>
      </returns>
    </member>
    <member name="P:System.Management.ObjectGetOptions.UseAmendedQualifiers">
      <summary>
        <para> Gets or sets a value indicating whether the objects returned from WMI should
                  contain amended information. Typically, amended information is localizable information
                  attached to the WMI object, such as object and property descriptions.</para>
      </summary>
    </member>
    <member name="T:System.Management.PutOptions">
      <summary>
        <para> Specifies options for committing management
                  object changes.</para>
      </summary>
    </member>
    <member name="M:System.Management.PutOptions.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Management.PutOptions" /> class for put operations, using default values.
               This is the default constructor.</para>
      </summary>
    </member>
    <member name="M:System.Management.PutOptions.#ctor(System.Management.ManagementNamedValueCollection)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Management.PutOptions" /> class for committing a WMI object, using the
               specified provider-specific context.</para>
      </summary>
      <param name="context">A provider-specific, named-value pairs context object to be passed through to the provider.</param>
    </member>
    <member name="M:System.Management.PutOptions.#ctor(System.Management.ManagementNamedValueCollection,System.TimeSpan,System.Boolean,System.Management.PutType)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Management.PutOptions" /> class for committing a WMI object, using
               the specified option values.</para>
      </summary>
      <param name="context">A provider-specific, named-value pairs object to be passed through to the provider. </param>
      <param name=" timeout">The length of time to let the operation perform before it times out. The default is <see cref="F:System.Management.ManagementOptions.InfiniteTimeout" /> .</param>
      <param name=" useAmendedQualifiers">
        <see langword="true" /> if the returned objects should contain amended (locale-aware) qualifiers; otherwise, <see langword="false" />. </param>
      <param name=" putType"> The type of commit to be performed (update or create).</param>
    </member>
    <member name="M:System.Management.PutOptions.Clone">
      <summary>
        <para> Returns a copy of the object.</para>
      </summary>
      <returns>
        <para>The cloned object.</para>
      </returns>
    </member>
    <member name="P:System.Management.PutOptions.UseAmendedQualifiers">
      <summary>
        <para> Gets or sets a value indicating whether the objects returned from WMI should
                  contain amended information. Typically, amended information is localizable information
                  attached to the WMI object, such as object and property descriptions.</para>
      </summary>
    </member>
    <member name="P:System.Management.PutOptions.Type">
      <summary>
        <para>Gets or sets the type of commit to be performed for the object.</para>
      </summary>
    </member>
    <member name="T:System.Management.DeleteOptions">
      <summary>
        <para> Specifies options for deleting a management
                  object.</para>
      </summary>
    </member>
    <member name="M:System.Management.DeleteOptions.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Management.DeleteOptions" /> class for the delete operation, using default values.
               This is the default constructor.</para>
      </summary>
    </member>
    <member name="M:System.Management.DeleteOptions.#ctor(System.Management.ManagementNamedValueCollection,System.TimeSpan)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Management.DeleteOptions" /> class for a delete operation, using
               the specified values.</para>
      </summary>
      <param name="context">A provider-specific, named-value pairs object to be passed through to the provider. </param>
      <param name="timeout">The length of time to let the operation perform before it times out. The default value is <see cref="F:System.Management.ManagementOptions.InfiniteTimeout" /> . Setting this parameter will invoke the operation semisynchronously.</param>
    </member>
    <member name="M:System.Management.DeleteOptions.Clone">
      <summary>
        <para> Returns a copy of the object.</para>
      </summary>
      <returns>
        <para>A cloned object.</para>
      </returns>
    </member>
    <member name="T:System.Management.InvokeMethodOptions">
      <summary>
        <para> Specifies options for invoking a management method.</para>
      </summary>
    </member>
    <member name="M:System.Management.InvokeMethodOptions.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Management.InvokeMethodOptions" /> class for the <see cref="M:System.Management.ManagementObject.InvokeMethod(System.String,System.Object[])" /> operation, using default values.
               This is the default constructor.</para>
      </summary>
    </member>
    <member name="M:System.Management.InvokeMethodOptions.#ctor(System.Management.ManagementNamedValueCollection,System.TimeSpan)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Management.InvokeMethodOptions" /> class for an invoke operation using 
               the specified values.</para>
      </summary>
      <param name=" context">A provider-specific, named-value pairs object to be passed through to the provider. </param>
      <param name="timeout">The length of time to let the operation perform before it times out. The default value is <see cref="F:System.Management.ManagementOptions.InfiniteTimeout" /> . Setting this parameter will invoke the operation semisynchronously.</param>
    </member>
    <member name="M:System.Management.InvokeMethodOptions.Clone">
      <summary>
        <para> Returns a copy of the object.</para>
      </summary>
      <returns>
        <para>The cloned object.</para>
      </returns>
    </member>
    <member name="T:System.Management.ConnectionOptions">
      <summary>
        <para> Specifies all settings required to make a WMI connection.</para>
      </summary>
    </member>
    <member name="M:System.Management.ConnectionOptions.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Management.ConnectionOptions" /> class for the connection operation, using default values. This is the 
               default constructor.</para>
      </summary>
    </member>
    <member name="M:System.Management.ConnectionOptions.#ctor(System.String,System.String,System.String,System.String,System.Management.ImpersonationLevel,System.Management.AuthenticationLevel,System.Boolean,System.Management.ManagementNamedValueCollection,System.TimeSpan)">
      <summary>
        <para> Initializes a new instance of the <see cref="T:System.Management.ConnectionOptions" /> class to be used for a WMI
               connection, using the specified values.</para>
      </summary>
      <param name="locale">The locale to be used for the connection.</param>
      <param name=" username">The user name to be used for the connection. If null, the credentials of the currently logged-on user are used.</param>
      <param name=" password">The password for the given user name. If the user name is also null, the credentials used will be those of the currently logged-on user.</param>
      <param name=" authority">
        <para>The authority to be used to authenticate the specified user.</para>
      </param>
      <param name=" impersonation">The COM impersonation level to be used for the connection.</param>
      <param name=" authentication">The COM authentication level to be used for the connection.</param>
      <param name=" enablePrivileges">
        <see langword="true" />to enable special user privileges; otherwise, <see langword="false" /> . This parameter should only be used when performing an operation that requires special Windows NT user privileges.</param>
      <param name=" context">A provider-specific, named value pairs object to be passed through to the provider.</param>
      <param name=" timeout">Reserved for future use.</param>
    </member>
    <member name="M:System.Management.ConnectionOptions.Clone">
      <summary>
        <para> Returns a copy of the object.</para>
      </summary>
      <returns>
        <para>The cloned object.</para>
      </returns>
    </member>
    <member name="P:System.Management.ConnectionOptions.Locale">
      <summary>
        <para>Gets or sets the locale to be used for the connection operation.</para>
      </summary>
    </member>
    <member name="P:System.Management.ConnectionOptions.Username">
      <summary>
        <para>Gets or sets the user name to be used for the connection operation.</para>
      </summary>
    </member>
    <member name="P:System.Management.ConnectionOptions.Password">
      <summary>
        <para>Gets or sets the password for the specified user.</para>
      </summary>
    </member>
    <member name="P:System.Management.ConnectionOptions.Authority">
      <summary>
        <para>Gets or sets the authority to be used to authenticate the specified user.</para>
      </summary>
    </member>
    <member name="P:System.Management.ConnectionOptions.Impersonation">
      <summary>
        <para>Gets or sets the COM impersonation level to be used for the connection operation.</para>
      </summary>
    </member>
    <member name="P:System.Management.ConnectionOptions.Authentication">
      <summary>
        <para>Gets or sets the COM authentication level to be used for the connection operation.</para>
      </summary>
    </member>
    <member name="P:System.Management.ConnectionOptions.EnablePrivileges">
      <summary>
        <para>Gets or sets a value indicating whether user privileges need to be enabled for 
                  the connection operation. This property should only be used when the operation
                  performed requires a certain user privilege to be enabled
                  (for example, a machine reboot).</para>
      </summary>
    </member>
    <member name="T:System.Management.ManagementPath">
      <summary>
        <para>Provides a wrapper for parsing and building paths to WMI objects.</para>
      </summary>
    </member>
    <member name="M:System.Management.ManagementPath.#ctor">
      <summary>
        <para> Initializes a new instance of the <see cref="T:System.Management.ManagementPath" /> class that is empty. This is the default constructor.</para>
      </summary>
    </member>
    <member name="M:System.Management.ManagementPath.#ctor(System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Management.ManagementPath" /> class for the given path.</para>
      </summary>
      <param name="path"> The object path. </param>
    </member>
    <member name="M:System.Management.ManagementPath.ToString">
      <summary>
        <para>Returns the full object path as the string representation.</para>
      </summary>
      <returns>
               A string containing the full object
               path represented by this object. This value is equivalent to the value of the
            <see cref="P:System.Management.ManagementPath.Path" /> property.
            </returns>
    </member>
    <member name="M:System.Management.ManagementPath.Clone">
      <summary>
        <para>Returns a copy of the <see cref="T:System.Management.ManagementPath" />.</para>
      </summary>
      <returns>
               The cloned object.
            </returns>
    </member>
    <member name="M:System.Management.ManagementPath.SetAsClass">
      <summary>
        <para> Sets the path as a new class path. This means that the path must have
                  a class name but not key values.</para>
      </summary>
    </member>
    <member name="M:System.Management.ManagementPath.SetAsSingleton">
      <summary>
        <para> Sets the path as a new singleton object path. This means that it is a path to an instance but
                  there are no key values.</para>
      </summary>
    </member>
    <member name="P:System.Management.ManagementPath.DefaultPath">
      <summary>
        <para>Gets or sets the default scope path used when no scope is specified.
                  The default scope is \\.\root\cimv2, and can be changed by setting this property.</para>
      </summary>
    </member>
    <member name="P:System.Management.ManagementPath.Path">
      <summary>
        <para> Gets or sets the string representation of the full path in the object.</para>
      </summary>
    </member>
    <member name="P:System.Management.ManagementPath.RelativePath">
      <summary>
        <para> Gets or sets the relative path: class name and keys only.</para>
      </summary>
    </member>
    <member name="P:System.Management.ManagementPath.Server">
      <summary>
        <para>Gets or sets the server part of the path.</para>
      </summary>
    </member>
    <member name="P:System.Management.ManagementPath.NamespacePath">
      <summary>
        <para>Gets or sets the namespace part of the path. Note that this does not include
                  the server name, which can be retrieved separately.</para>
      </summary>
    </member>
    <member name="P:System.Management.ManagementPath.ClassName">
      <summary>
               Gets or sets the class portion of the path.
            </summary>
    </member>
    <member name="P:System.Management.ManagementPath.IsClass">
      <summary>
        <para>Gets or sets a value indicating whether this is a class path.</para>
      </summary>
    </member>
    <member name="P:System.Management.ManagementPath.IsInstance">
      <summary>
        <para>Gets or sets a value indicating whether this is an instance path.</para>
      </summary>
    </member>
    <member name="P:System.Management.ManagementPath.IsSingleton">
      <summary>
        <para>Gets or sets a value indicating whether this is a singleton instance path.</para>
      </summary>
    </member>
    <member name="M:System.Management.ManagementPathConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>
            Determines if this converter can convert an object in the given source type to the native type of the converter. 
            </summary>
      <param name="context">An ITypeDescriptorContext that provides a format context.</param>
      <param name="sourceType">A Type that represents the type you wish to convert from.</param>
      <returns>
        <para>true if this converter can perform the conversion; otherwise, false.</para>
      </returns>
    </member>
    <member name="M:System.Management.ManagementPathConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>
            Gets a value indicating whether this converter can convert an object to the given destination type using the context.
            </summary>
      <param name="context">An ITypeDescriptorContext that provides a format context.</param>
      <param name="destinationType">A Type that represents the type you wish to convert to.</param>
      <returns>
        <para>true if this converter can perform the conversion; otherwise, false.</para>
      </returns>
    </member>
    <member name="M:System.Management.ManagementPathConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>
                 Converts the given object to another type.  The most common types to convert
                 are to and from a string object.  The default implementation will make a call
                 to ToString on the object if the object is valid and if the destination
                 type is string.  If this cannot convert to the desitnation type, this will
                 throw a NotSupportedException.
            </summary>
      <param name="context">An ITypeDescriptorContext that provides a format context.</param>
      <param name="culture">A CultureInfo object. If a null reference (Nothing in Visual Basic) is passed, the current culture is assumed.</param>
      <param name="value">The Object to convert.</param>
      <param name="destinationType">The Type to convert the value parameter to.</param>
      <returns>An Object that represents the converted value.</returns>
    </member>
    <member name="T:System.Management.ManagementQuery">
      <summary>
        <para> Provides an abstract base class for all management query objects.</para>
      </summary>
    </member>
    <member name="M:System.Management.ManagementQuery.ParseQuery(System.String)">
      <summary>
             Parses the query string and sets the property values accordingly.
            </summary>
      <param name="query">The query string to be parsed.</param>
    </member>
    <member name="M:System.Management.ManagementQuery.Clone">
      <summary>
        <para>Returns a copy of the object.</para>
      </summary>
      <returns>
               The cloned object.
            </returns>
    </member>
    <member name="M:System.Management.ManagementQuery.GetValueOfKeyword(System.String,System.String,System.Int32)">
      <summary>
               Finds a keyword in a query string and returns
               the value associated with the keyword.
            </summary>
      <param name="query">
        <para>A string representing the query</para>
      </param>
      <param name=" keyword">The keyword we are searching for in the query</param>
      <param name=" keywordIndex">The index to start searching at.</param>
      <returns>
               The string containing the value for the
               specified keyword in the query string.
            </returns>
    </member>
    <member name="P:System.Management.ManagementQuery.QueryString">
      <summary>
        <para>Gets or sets the query in text format.</para>
      </summary>
    </member>
    <member name="P:System.Management.ManagementQuery.QueryLanguage">
      <summary>
        <para> Gets or sets the query language used in the query
                  string, defining the format of the query string.</para>
      </summary>
    </member>
    <member name="T:System.Management.ObjectQuery">
      <summary>
        <para> Represents a management query that returns instances or classes.</para>
      </summary>
    </member>
    <member name="M:System.Management.ObjectQuery.#ctor">
      <summary>
        <para> Initializes a new instance of the <see cref="T:System.Management.ObjectQuery" /> 
            class with no initialized values. This
            is the default constructor.</para>
      </summary>
    </member>
    <member name="M:System.Management.ObjectQuery.#ctor(System.String)">
      <summary>
        <para> Initializes a new instance of the <see cref="T:System.Management.ObjectQuery" /> 
            class
            for a specific query string.</para>
      </summary>
      <param name="query">The string representation of the query.</param>
    </member>
    <member name="M:System.Management.ObjectQuery.#ctor(System.String,System.String)">
      <summary>
        <para> Initializes a new instance of the <see cref="T:System.Management.ObjectQuery" /> 
            class for a specific
            query string and language.</para>
      </summary>
      <param name="language">The query language in which this query is specified.</param>
      <param name=" query">The string representation of the query.</param>
    </member>
    <member name="M:System.Management.ObjectQuery.Clone">
      <summary>
        <para>Returns a copy of the object.</para>
      </summary>
      <returns>
               The cloned object.
            </returns>
    </member>
    <member name="T:System.Management.EventQuery">
      <summary>
        <para> Represents a WMI event query.</para>
      </summary>
    </member>
    <member name="M:System.Management.EventQuery.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Management.EventQuery" /> 
            class. This is the
            default constructor.</para>
      </summary>
    </member>
    <member name="M:System.Management.EventQuery.#ctor(System.String)">
      <summary>
        <para> Initializes a new instance of the <see cref="T:System.Management.EventQuery" /> 
            class for the specified query.</para>
      </summary>
      <param name="query">A textual representation of the event query.</param>
    </member>
    <member name="M:System.Management.EventQuery.#ctor(System.String,System.String)">
      <summary>
        <para> Initializes a new instance of the <see cref="T:System.Management.EventQuery" /> 
            class for the specified
            language and query.</para>
      </summary>
      <param name="language">The language in which the query string is specified. </param>
      <param name=" query">The string representation of the query.</param>
    </member>
    <member name="M:System.Management.EventQuery.Clone">
      <summary>
        <para>Returns a copy of the object.</para>
      </summary>
      <returns>
               The cloned object.
            </returns>
    </member>
    <member name="T:System.Management.WqlObjectQuery">
      <summary>
        <para> Represents a WMI data query in WQL format.</para>
      </summary>
    </member>
    <member name="M:System.Management.WqlObjectQuery.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Management.WqlObjectQuery" /> class. This is the
               default constructor.</para>
      </summary>
    </member>
    <member name="M:System.Management.WqlObjectQuery.#ctor(System.String)">
      <summary>
        <para> Initializes a new instance of the <see cref="T:System.Management.WqlObjectQuery" /> class initialized to the
               specified query.</para>
      </summary>
      <param name="query">
        <para> The representation of the data query.</para>
      </param>
    </member>
    <member name="M:System.Management.WqlObjectQuery.Clone">
      <summary>
        <para>Creates a copy of the object.</para>
      </summary>
      <returns>
               The copied object.
            </returns>
    </member>
    <member name="P:System.Management.WqlObjectQuery.QueryLanguage">
      <summary>
        <para>Gets or sets the language of the query.</para>
      </summary>
    </member>
    <member name="T:System.Management.SelectQuery">
      <summary>
        <para> Represents a WQL SELECT data query.</para>
      </summary>
    </member>
    <member name="M:System.Management.SelectQuery.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Management.SelectQuery" /> 
            class. This is the
            default constructor.</para>
      </summary>
    </member>
    <member name="M:System.Management.SelectQuery.#ctor(System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Management.SelectQuery" /> class for the specified
               query or the specified class name.</para>
      </summary>
      <param name="queryOrClassName">The entire query or the class name to use in the query. The parser in this class attempts to parse the string as a valid WQL SELECT query. If the parser is unsuccessful, it assumes the string is a class name.</param>
    </member>
    <member name="M:System.Management.SelectQuery.#ctor(System.String,System.String)">
      <summary>
        <para> Initializes a new instance of the <see cref="T:System.Management.SelectQuery" /> 
            class with the specified
            class name and condition.</para>
      </summary>
      <param name="className">The name of the class to select in the query.</param>
      <param name=" condition">The condition to be applied in the query.</param>
    </member>
    <member name="M:System.Management.SelectQuery.#ctor(System.String,System.String,System.String[])">
      <summary>
        <para> Initializes a new instance of the <see cref="T:System.Management.SelectQuery" /> 
            class with the specified
            class name and condition, selecting only the specified properties.</para>
      </summary>
      <param name="className">The name of the class from which to select.</param>
      <param name=" condition">The condition to be applied to instances of the selected class.</param>
      <param name=" selectedProperties">An array of property names to be returned in the query results.</param>
    </member>
    <member name="M:System.Management.SelectQuery.#ctor(System.Boolean,System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Management.SelectQuery" /> 
            class for a schema query, optionally specifying a condition. For schema queries,
            only the <paramref name="condition" /> parameter is valid: <paramref name="className" />
            and <paramref name="selectedProperties" />
            are not supported and are ignored.</para>
      </summary>
      <param name="isSchemaQuery">
        <see langword="true" />to indicate that this is a schema query; otherwise, <see langword="false" />. A <see langword="false" /> value is invalid in this constructor.</param>
      <param name=" condition">The condition to be applied to form the result set of classes.</param>
    </member>
    <member name="M:System.Management.SelectQuery.BuildQuery">
      <summary>
             Builds the query string according to the current property values.
            </summary>
    </member>
    <member name="M:System.Management.SelectQuery.ParseQuery(System.String)">
      <summary>
             Parses the query string and sets the property values accordingly.
            </summary>
      <param name="query">The query string to be parsed.</param>
    </member>
    <member name="M:System.Management.SelectQuery.Clone">
      <summary>
        <para> Creates a copy of the object.</para>
      </summary>
      <returns>
               The copied object.
            </returns>
    </member>
    <member name="P:System.Management.SelectQuery.QueryString">
      <summary>
        <para>Gets or sets the query in the <see cref="T:System.Management.SelectQuery" />, in string form.</para>
      </summary>
    </member>
    <member name="P:System.Management.SelectQuery.IsSchemaQuery">
      <summary>
        <para>Gets or sets a value indicating whether this query is a schema query or an instances query.</para>
      </summary>
    </member>
    <member name="P:System.Management.SelectQuery.ClassName">
      <summary>
        <para>Gets or sets the class name to be selected from in the query.</para>
      </summary>
    </member>
    <member name="P:System.Management.SelectQuery.Condition">
      <summary>
        <para>Gets or sets the condition to be applied in the SELECT
                  query.</para>
      </summary>
    </member>
    <member name="P:System.Management.SelectQuery.SelectedProperties">
      <summary>
        <para> Gets or sets an array of property names to be
                  selected in the query.</para>
      </summary>
    </member>
    <member name="T:System.Management.RelatedObjectQuery">
      <summary>
        <para> Represents a WQL ASSOCIATORS OF data query. 
                  It can be used for both instances and schema queries.</para>
      </summary>
    </member>
    <member name="M:System.Management.RelatedObjectQuery.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Management.RelatedObjectQuery" /> class. This is the
               default constructor.</para>
      </summary>
    </member>
    <member name="M:System.Management.RelatedObjectQuery.#ctor(System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Management.RelatedObjectQuery" />class. If the specified string can be succesfully parsed as 
               a WQL query, it is considered to be the query string; otherwise, it is assumed to be the path of the source
               object for the query. In this case, the query is assumed to be an instance query. </para>
      </summary>
      <param name="queryOrSourceObject">The query string or the path of the source object.</param>
    </member>
    <member name="M:System.Management.RelatedObjectQuery.#ctor(System.String,System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Management.RelatedObjectQuery" /> class for the given source object and related class.
               The query is assumed to be an instance query (as opposed to a schema query).</para>
      </summary>
      <param name="sourceObject">The path of the source object for this query.</param>
      <param name="relatedClass">The related objects class.</param>
    </member>
    <member name="M:System.Management.RelatedObjectQuery.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Boolean)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Management.RelatedObjectQuery" /> class for the given set of parameters.
               The query is assumed to be an instance query (as opposed to a schema query).</para>
      </summary>
      <param name="sourceObject">The path of the source object.</param>
      <param name="relatedClass">The related objects required class.</param>
      <param name="relationshipClass">The relationship type.</param>
      <param name="relatedQualifier">The qualifier required to be present on the related objects.</param>
      <param name="relationshipQualifier">The qualifier required to be present on the relationships.</param>
      <param name="relatedRole">The role that the related objects are required to play in the relationship.</param>
      <param name="thisRole">The role that the source object is required to play in the relationship.</param>
      <param name="classDefinitionsOnly">
        <see langword="true" />to return only the class definitions of the related objects; otherwise, <see langword="false" /> .</param>
    </member>
    <member name="M:System.Management.RelatedObjectQuery.#ctor(System.Boolean,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Management.RelatedObjectQuery" /> class for a schema query using the given set 
               of parameters. This constructor is used for schema queries only: the first
               parameter must be set to <see langword="true" />
               .</para>
      </summary>
      <param name="isSchemaQuery">
        <see langword="true" />to indicate that this is a schema query; otherwise, <see langword="false" /> .</param>
      <param name="sourceObject">The path of the source class.</param>
      <param name="relatedClass">The related objects' required base class.</param>
      <param name="relationshipClass">The relationship type.</param>
      <param name="relatedQualifier">The qualifier required to be present on the related objects.</param>
      <param name="relationshipQualifier">The qualifier required to be present on the relationships.</param>
      <param name="relatedRole">The role that the related objects are required to play in the relationship.</param>
      <param name="thisRole">The role that the source class is required to play in the relationship.</param>
    </member>
    <member name="M:System.Management.RelatedObjectQuery.BuildQuery">
      <summary>
             Builds the query string according to the current property values.
            </summary>
    </member>
    <member name="M:System.Management.RelatedObjectQuery.ParseQuery(System.String)">
      <summary>
             Parses the query string and sets the property values accordingly.
            </summary>
      <param name="query">The query string to be parsed.</param>
    </member>
    <member name="M:System.Management.RelatedObjectQuery.Clone">
      <summary>
        <para>Creates a copy of the object.</para>
      </summary>
      <returns>
               The copied object.
            </returns>
    </member>
    <member name="P:System.Management.RelatedObjectQuery.IsSchemaQuery">
      <summary>
        <para>Gets or sets a value indicating whether this is a schema query or an instance query.</para>
      </summary>
    </member>
    <member name="P:System.Management.RelatedObjectQuery.SourceObject">
      <summary>
        <para> Gets or sets the source object to be used for the query. For instance
                  queries, this is typically an instance path. For schema queries, this is typically a class name.</para>
      </summary>
    </member>
    <member name="P:System.Management.RelatedObjectQuery.RelatedClass">
      <summary>
        <para>Gets or sets the class of the endpoint objects.</para>
      </summary>
    </member>
    <member name="P:System.Management.RelatedObjectQuery.RelationshipClass">
      <summary>
        <para>Gets or sets the type of relationship (association).</para>
      </summary>
    </member>
    <member name="P:System.Management.RelatedObjectQuery.RelatedQualifier">
      <summary>
        <para>Gets or sets a qualifier required to be defined on the related objects.</para>
      </summary>
    </member>
    <member name="P:System.Management.RelatedObjectQuery.RelationshipQualifier">
      <summary>
        <para>Gets or sets a qualifier required to be defined on the relationship objects.</para>
      </summary>
    </member>
    <member name="P:System.Management.RelatedObjectQuery.RelatedRole">
      <summary>
        <para>Gets or sets the role that the related objects returned should be playing in the relationship.</para>
      </summary>
    </member>
    <member name="P:System.Management.RelatedObjectQuery.ThisRole">
      <summary>
        <para>Gets or sets the role that the source object should be playing in the relationship.</para>
      </summary>
    </member>
    <member name="P:System.Management.RelatedObjectQuery.ClassDefinitionsOnly">
      <summary>
        <para>Gets or sets a value indicating that for all instances that adhere to the query, only their class definitions be returned.
                  This parameter is only valid for instance queries.</para>
      </summary>
    </member>
    <member name="T:System.Management.RelationshipQuery">
      <summary>
        <para> Represents a WQL REFERENCES OF data query.</para>
      </summary>
    </member>
    <member name="M:System.Management.RelationshipQuery.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Management.RelationshipQuery" /> class. This is the default constructor.</para>
      </summary>
    </member>
    <member name="M:System.Management.RelationshipQuery.#ctor(System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Management.RelationshipQuery" />class. If the specified string can be succesfully parsed as 
               a WQL query, it is considered to be the query string; otherwise, it is assumed to be the path of the source
               object for the query. In this case, the query is assumed to be an instances query. </para>
      </summary>
      <param name="queryOrSourceObject">The query string or the class name for this query.</param>
    </member>
    <member name="M:System.Management.RelationshipQuery.#ctor(System.String,System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Management.RelationshipQuery" /> class for the given source object and relationship class.
               The query is assumed to be an instance query (as opposed to a schema query).</para>
      </summary>
      <param name="sourceObject"> The path of the source object for this query.</param>
      <param name="relationshipClass"> The type of relationship for which to query.</param>
    </member>
    <member name="M:System.Management.RelationshipQuery.#ctor(System.String,System.String,System.String,System.String,System.Boolean)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Management.RelationshipQuery" /> class for the given set of parameters.
               The query is assumed to be an instance query (as opposed to a schema query).</para>
      </summary>
      <param name="sourceObject"> The path of the source object for this query.</param>
      <param name="relationshipClass"> The type of relationship for which to query.</param>
      <param name="relationshipQualifier"> A qualifier required to be present on the relationship object.</param>
      <param name="thisRole"> The role that the source object is required to play in the relationship.</param>
      <param name="classDefinitionsOnly">When this method returns, it contains a boolean that indicates that only class definitions for the resulting objects are returned.</param>
    </member>
    <member name="M:System.Management.RelationshipQuery.#ctor(System.Boolean,System.String,System.String,System.String,System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Management.RelationshipQuery" /> class for a schema query using the given set 
               of parameters. This constructor is used for schema queries only, so the first
               parameter must be <see langword="true" />
               .</para>
      </summary>
      <param name="isSchemaQuery">
        <see langword="true" />to indicate that this is a schema query; otherwise, <see langword="false" /> .</param>
      <param name="sourceObject"> The path of the source class for this query.</param>
      <param name="relationshipClass"> The type of relationship for which to query.</param>
      <param name="relationshipQualifier"> A qualifier required to be present on the relationship class.</param>
      <param name="thisRole"> The role that the source class is required to play in the relationship.</param>
    </member>
    <member name="M:System.Management.RelationshipQuery.BuildQuery">
      <summary>
             Builds the query string according to the current property values.
            </summary>
    </member>
    <member name="M:System.Management.RelationshipQuery.ParseQuery(System.String)">
      <summary>
             Parses the query string and sets the property values accordingly.
            </summary>
      <param name="query">The query string to be parsed.</param>
    </member>
    <member name="M:System.Management.RelationshipQuery.Clone">
      <summary>
        <para>Creates a copy of the object.</para>
      </summary>
      <returns>
               The copied object.
            </returns>
    </member>
    <member name="P:System.Management.RelationshipQuery.IsSchemaQuery">
      <summary>
        <para>Gets or sets a value indicating whether this query is a schema query or an instance query.</para>
      </summary>
    </member>
    <member name="P:System.Management.RelationshipQuery.SourceObject">
      <summary>
        <para>Gets or sets the source object for this query.</para>
      </summary>
    </member>
    <member name="P:System.Management.RelationshipQuery.RelationshipClass">
      <summary>
        <para>Gets or sets the class of the relationship objects wanted in the query.</para>
      </summary>
    </member>
    <member name="P:System.Management.RelationshipQuery.RelationshipQualifier">
      <summary>
        <para>Gets or sets a qualifier required on the relationship objects.</para>
      </summary>
    </member>
    <member name="P:System.Management.RelationshipQuery.ThisRole">
      <summary>
        <para>Gets or sets the role of the source object in the relationship.</para>
      </summary>
    </member>
    <member name="P:System.Management.RelationshipQuery.ClassDefinitionsOnly">
      <summary>
        <para>Gets or sets a value indicating that only the class definitions of the relevant relationship objects be returned.</para>
      </summary>
    </member>
    <member name="T:System.Management.WqlEventQuery">
      <summary>
        <para> Represents a WMI event query in WQL format.</para>
      </summary>
    </member>
    <member name="M:System.Management.WqlEventQuery.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Management.WqlEventQuery" /> 
            class. This is the default
            constructor.</para>
      </summary>
    </member>
    <member name="M:System.Management.WqlEventQuery.#ctor(System.String)">
      <summary>
        <para> Initializes a new instance of the <see cref="T:System.Management.WqlEventQuery" /> 
            class based on the given
            query string or event class name.</para>
      </summary>
      <param name="queryOrEventClassName">The string representing either the entire event query or the name of the event class to query. The object will try to parse the string as a valid event query. If unsuccessful, the parser will assume that the parameter represents an event class name.</param>
    </member>
    <member name="M:System.Management.WqlEventQuery.#ctor(System.String,System.String)">
      <summary>
        <para> Initializes a new instance of the <see cref="T:System.Management.WqlEventQuery" /> 
            class for the
            specified event class name, with the specified condition.</para>
      </summary>
      <param name="eventClassName">The name of the event class to query.</param>
      <param name=" condition">The condition to apply to events of the specified class.</param>
    </member>
    <member name="M:System.Management.WqlEventQuery.#ctor(System.String,System.TimeSpan)">
      <summary>
        <para> Initializes a new instance of the <see cref="T:System.Management.WqlEventQuery" /> 
            class for the specified
            event class, with the specified latency time.</para>
      </summary>
      <param name="eventClassName">The name of the event class to query.</param>
      <param name=" withinInterval">A timespan value specifying the latency acceptable for receiving this event. This value is used in cases where there is no explicit event provider for the query requested, and WMI is required to poll for the condition. This interval is the maximum amount of time that can pass before notification of an event must be delivered. </param>
    </member>
    <member name="M:System.Management.WqlEventQuery.#ctor(System.String,System.TimeSpan,System.String)">
      <summary>
        <para> Initializes a new instance of the <see cref="T:System.Management.WqlEventQuery" /> 
            class with the specified
            event class name, polling interval, and condition.</para>
      </summary>
      <param name="eventClassName">The name of the event class to query. </param>
      <param name=" withinInterval">A timespan value specifying the latency acceptable for receiving this event. This value is used in cases where there is no explicit event provider for the query requested and WMI is required to poll for the condition. This interval is the maximum amount of time that can pass before notification of an event must be delivered. </param>
      <param name=" condition">The condition to apply to events of the specified class.</param>
    </member>
    <member name="M:System.Management.WqlEventQuery.#ctor(System.String,System.String,System.TimeSpan)">
      <summary>
        <para> Initializes a new instance of the <see cref="T:System.Management.WqlEventQuery" /> 
            class with the specified
            event class name, condition, and grouping interval.</para>
      </summary>
      <param name="eventClassName">The name of the event class to query. </param>
      <param name="condition">The condition to apply to events of the specified class.</param>
      <param name=" groupWithinInterval">The specified interval at which WMI sends one aggregate event, rather than many events.</param>
    </member>
    <member name="M:System.Management.WqlEventQuery.#ctor(System.String,System.String,System.TimeSpan,System.String[])">
      <summary>
        <para> Initializes a new instance of the <see cref="T:System.Management.WqlEventQuery" /> 
            class with the specified event class
            name, condition, grouping interval, and grouping properties.</para>
      </summary>
      <param name="eventClassName">The name of the event class to query. </param>
      <param name="condition">The condition to apply to events of the specified class.</param>
      <param name=" groupWithinInterval">The specified interval at which WMI sends one aggregate event, rather than many events. </param>
      <param name=" groupByPropertyList">The properties in the event class by which the events should be grouped.</param>
    </member>
    <member name="M:System.Management.WqlEventQuery.#ctor(System.String,System.TimeSpan,System.String,System.TimeSpan,System.String[],System.String)">
      <summary>
        <para> Initializes a new instance of the <see cref="T:System.Management.WqlEventQuery" /> 
            class with the specified event class
            name, condition, grouping interval, grouping properties, and specified number of events.</para>
      </summary>
      <param name="eventClassName">The name of the event class on which to be queried.</param>
      <param name="withinInterval">A timespan value specifying the latency acceptable for receiving this event. This value is used in cases where there is no explicit event provider for the query requested, and WMI is required to poll for the condition. This interval is the maximum amount of time that can pass before notification of an event must be delivered.</param>
      <param name=" condition">The condition to apply to events of the specified class.</param>
      <param name=" groupWithinInterval">The specified interval at which WMI sends one aggregate event, rather than many events. </param>
      <param name=" groupByPropertyList">The properties in the event class by which the events should be grouped.</param>
      <param name=" havingCondition">The condition to apply to the number of events.</param>
    </member>
    <member name="M:System.Management.WqlEventQuery.BuildQuery">
      <summary>
             Builds the query string according to the current property values.
            </summary>
    </member>
    <member name="M:System.Management.WqlEventQuery.ParseQuery(System.String)">
      <summary>
             Parses the query string and sets the property values accordingly.
            </summary>
      <param name="query">The query string to be parsed.</param>
    </member>
    <member name="M:System.Management.WqlEventQuery.Clone">
      <summary>
        <para>Creates a copy of the object.</para>
      </summary>
      <returns>
               The copied object.
            </returns>
    </member>
    <member name="P:System.Management.WqlEventQuery.QueryLanguage">
      <summary>
        <para>Gets or sets the language of the query.</para>
      </summary>
    </member>
    <member name="P:System.Management.WqlEventQuery.QueryString">
      <summary>
        <para>Gets or sets the string representing the query.</para>
      </summary>
    </member>
    <member name="P:System.Management.WqlEventQuery.EventClassName">
      <summary>
        <para> Gets or sets the event class to query.</para>
      </summary>
    </member>
    <member name="P:System.Management.WqlEventQuery.Condition">
      <summary>
        <para>Gets or sets the condition to be applied to events of the
                  specified class.</para>
      </summary>
    </member>
    <member name="P:System.Management.WqlEventQuery.WithinInterval">
      <summary>
        <para>Gets or sets the polling interval to be used in this query.</para>
      </summary>
    </member>
    <member name="P:System.Management.WqlEventQuery.GroupWithinInterval">
      <summary>
        <para>Gets or sets the interval to be used for grouping events of
                  the same type.</para>
      </summary>
    </member>
    <member name="P:System.Management.WqlEventQuery.GroupByPropertyList">
      <summary>
        <para>Gets or sets properties in the event to be used for
                  grouping events of the same type.</para>
      </summary>
    </member>
    <member name="P:System.Management.WqlEventQuery.HavingCondition">
      <summary>
        <para>Gets or sets the condition to be applied to the aggregation of
                  events, based on the number of events received.</para>
      </summary>
    </member>
    <member name="M:System.Management.ManagementQueryConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>
            Determines if this converter can convert an object in the given source type to the native type of the converter. 
            </summary>
      <param name="context">An ITypeDescriptorContext that provides a format context.</param>
      <param name="sourceType">A Type that represents the type you wish to convert from.</param>
      <returns>
        <para>true if this converter can perform the conversion; otherwise, false.</para>
      </returns>
    </member>
    <member name="M:System.Management.ManagementQueryConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>
            Gets a value indicating whether this converter can convert an object to the given destination type using the context.
            </summary>
      <param name="context">An ITypeDescriptorContext that provides a format context.</param>
      <param name="destinationType">A Type that represents the type you wish to convert to.</param>
      <returns>
        <para>true if this converter can perform the conversion; otherwise, false.</para>
      </returns>
    </member>
    <member name="M:System.Management.ManagementQueryConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>
                 Converts the given object to another type.  The most common types to convert
                 are to and from a string object.  The default implementation will make a call
                 to ToString on the object if the object is valid and if the destination
                 type is string.  If this cannot convert to the desitnation type, this will
                 throw a NotSupportedException.
            </summary>
      <param name="context">An ITypeDescriptorContext that provides a format context.</param>
      <param name="culture">A CultureInfo object. If a null reference (Nothing in Visual Basic) is passed, the current culture is assumed.</param>
      <param name="value">The Object to convert.</param>
      <param name="destinationType">The Type to convert the value parameter to.</param>
      <returns>An Object that represents the converted value.</returns>
    </member>
    <member name="T:System.Management.ManagementScope">
      <summary>
        <para>Represents a scope for management operations. In v1.0 the scope defines the WMI namespace in which management operations are performed.</para>
      </summary>
    </member>
    <member name="M:System.Management.ManagementScope.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Management.ManagementScope" /> class, with default values. This is the
               default constructor.</para>
      </summary>
    </member>
    <member name="M:System.Management.ManagementScope.#ctor(System.Management.ManagementPath)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Management.ManagementScope" /> class representing
               the specified scope path.</para>
      </summary>
      <param name="path">A <see cref="T:System.Management.ManagementPath" /> containing the path to a server and namespace for the <see cref="T:System.Management.ManagementScope" />.</param>
    </member>
    <member name="M:System.Management.ManagementScope.#ctor(System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Management.ManagementScope" /> class representing the specified scope 
               path.</para>
      </summary>
      <param name="path">The server and namespace path for the <see cref="T:System.Management.ManagementScope" />.</param>
    </member>
    <member name="M:System.Management.ManagementScope.#ctor(System.String,System.Management.ConnectionOptions)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Management.ManagementScope" /> class representing the specified scope path, 
               with the specified options.</para>
      </summary>
      <param name="path">The server and namespace for the <see cref="T:System.Management.ManagementScope" />.</param>
      <param name=" options">A <see cref="T:System.Management.ConnectionOptions" /> containing options for the connection.</param>
    </member>
    <member name="M:System.Management.ManagementScope.#ctor(System.Management.ManagementPath,System.Management.ConnectionOptions)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Management.ManagementScope" /> class representing the specified scope path, 
               with the specified options.</para>
      </summary>
      <param name="path">A <see cref="T:System.Management.ManagementPath" /> containing the path to the server and namespace for the <see cref="T:System.Management.ManagementScope" />.</param>
      <param name=" options">The <see cref="T:System.Management.ConnectionOptions" /> containing options for the connection.</param>
    </member>
    <member name="M:System.Management.ManagementScope.Clone">
      <summary>
        <para>Returns a copy of the object.</para>
      </summary>
      <returns>
        <para>A new copy of the <see cref="T:System.Management.ManagementScope" />.</para>
      </returns>
    </member>
    <member name="M:System.Management.ManagementScope.Connect">
      <summary>
        <para>Connects this <see cref="T:System.Management.ManagementScope" /> to the actual WMI
               scope.</para>
      </summary>
    </member>
    <member name="P:System.Management.ManagementScope.IsConnected">
      <summary>
        <para> Gets or sets a value indicating whether the <see cref="T:System.Management.ManagementScope" /> is currently bound to a
               WMI server and namespace.</para>
      </summary>
    </member>
    <member name="P:System.Management.ManagementScope.Options">
      <summary>
        <para> Gets or sets options for making the WMI connection.</para>
      </summary>
    </member>
    <member name="P:System.Management.ManagementScope.Path">
      <summary>
        <para>Gets or sets the path for the <see cref="T:System.Management.ManagementScope" />.</para>
      </summary>
    </member>
    <member name="T:System.Management.PropertyData">
      <summary>
        <para> Represents information about a WMI property.</para>
      </summary>
    </member>
    <member name="P:System.Management.PropertyData.Name">
      <summary>
        <para>Gets or sets the name of the property.</para>
      </summary>
    </member>
    <member name="P:System.Management.PropertyData.Value">
      <summary>
        <para>Gets or sets the current value of the property.</para>
      </summary>
    </member>
    <member name="P:System.Management.PropertyData.Type">
      <summary>
        <para>Gets or sets the CIM type of the property.</para>
      </summary>
    </member>
    <member name="P:System.Management.PropertyData.IsLocal">
      <summary>
        <para>Gets or sets a value indicating whether the property has been defined in the current WMI class.</para>
      </summary>
    </member>
    <member name="P:System.Management.PropertyData.IsArray">
      <summary>
        <para>Gets or sets a value indicating whether the property is an array.</para>
      </summary>
    </member>
    <member name="P:System.Management.PropertyData.Origin">
      <summary>
        <para>Gets or sets the name of the WMI class in the hierarchy in which the property was introduced.</para>
      </summary>
    </member>
    <member name="P:System.Management.PropertyData.Qualifiers">
      <summary>
        <para>Gets or sets the set of qualifiers defined on the property.</para>
      </summary>
    </member>
    <member name="T:System.Management.PropertyDataCollection">
      <summary>
        <para> Represents the set of properties of a WMI object.</para>
      </summary>
    </member>
    <member name="M:System.Management.PropertyDataCollection.CopyTo(System.Array,System.Int32)">
      <summary>
        <para>Copies the <see cref="T:System.Management.PropertyDataCollection" /> into an array.</para>
      </summary>
      <param name="array">The array to which to copy the <see cref="T:System.Management.PropertyDataCollection" />. </param>
      <param name="index">The index from which to start copying. </param>
    </member>
    <member name="M:System.Management.PropertyDataCollection.CopyTo(System.Management.PropertyData[],System.Int32)">
      <summary>
        <para>Copies the <see cref="T:System.Management.PropertyDataCollection" /> to a specialized <see cref="T:System.Management.PropertyData" /> object
               array.</para>
      </summary>
      <param name="propertyArray">The destination array to contain the copied <see cref="T:System.Management.PropertyDataCollection" />.</param>
      <param name=" index">The index in the destination array from which to start copying.</param>
    </member>
    <member name="M:System.Management.PropertyDataCollection.GetEnumerator">
      <summary>
        <para>Returns the enumerator for this <see cref="T:System.Management.PropertyDataCollection" />.</para>
      </summary>
      <returns>
        <para>An <see cref="T:System.Collections.IEnumerator" /> 
            that can be used to iterate through the collection.</para>
      </returns>
    </member>
    <member name="M:System.Management.PropertyDataCollection.Remove(System.String)">
      <summary>
        <para>Removes a <see cref="T:System.Management.PropertyData" /> from the <see cref="T:System.Management.PropertyDataCollection" />.</para>
      </summary>
      <param name="propertyName">The name of the property to be removed.</param>
    </member>
    <member name="M:System.Management.PropertyDataCollection.Add(System.String,System.Object)">
      <summary>
        <para>Adds a new <see cref="T:System.Management.PropertyData" /> with the specified value. The value cannot
               be null and must be convertable to a CIM type.</para>
      </summary>
      <param name="propertyName">The name of the new property.</param>
      <param name="propertyValue">The value of the property (cannot be null).</param>
    </member>
    <member name="M:System.Management.PropertyDataCollection.Add(System.String,System.Object,System.Management.CimType)">
      <summary>
        <para>Adds a new <see cref="T:System.Management.PropertyData" /> with the specified value and CIM type.</para>
      </summary>
      <param name="propertyName">The name of the property.</param>
      <param name="propertyValue">The value of the property (which can be null).</param>
      <param name="propertyType">The CIM type of the property.</param>
    </member>
    <member name="M:System.Management.PropertyDataCollection.Add(System.String,System.Management.CimType,System.Boolean)">
      <summary>
        <para>Adds a new <see cref="T:System.Management.PropertyData" /> with no assigned value.</para>
      </summary>
      <param name="propertyName">The name of the property.</param>
      <param name="propertyType">The CIM type of the property.</param>
      <param name="isArray">
        <see langword="true" /> to specify that the property is an array type; otherwise, <see langword="false" />.</param>
    </member>
    <member name="P:System.Management.PropertyDataCollection.Count">
      <summary>
        <para>Gets or sets the number of objects in the <see cref="T:System.Management.PropertyDataCollection" />.</para>
      </summary>
    </member>
    <member name="P:System.Management.PropertyDataCollection.IsSynchronized">
      <summary>
        <para>Gets or sets a value indicating whether the object is synchronized.</para>
      </summary>
    </member>
    <member name="P:System.Management.PropertyDataCollection.SyncRoot">
      <summary>
        <para>Gets or sets the object to be used for synchronization.</para>
      </summary>
    </member>
    <member name="P:System.Management.PropertyDataCollection.Item(System.String)">
      <summary>
        <para> Returns the specified property from the <see cref="T:System.Management.PropertyDataCollection" />, using [] syntax.</para>
      </summary>
      <param name="propertyName">The name of the property to retrieve.</param>
    </member>
    <member name="M:System.Management.PropertyDataCollection.PropertyDataEnumerator.MoveNext">
      <summary>
        <para> Moves to the next element in the <see cref="T:System.Management.PropertyDataCollection" /> 
            enumeration.</para>
      </summary>
      <returns>
        <para>
          <see langword="true" /> if the enumerator was successfully advanced to the next element; 
            <see langword="false" /> if the enumerator has passed the end of the collection.</para>
      </returns>
    </member>
    <member name="M:System.Management.PropertyDataCollection.PropertyDataEnumerator.Reset">
      <summary>
        <para>Resets the enumerator to the beginning of the <see cref="T:System.Management.PropertyDataCollection" /> 
            enumeration.</para>
      </summary>
    </member>
    <member name="P:System.Management.PropertyDataCollection.PropertyDataEnumerator.Current">
      <summary>
        <para>Gets the current <see cref="T:System.Management.PropertyData" /> in the <see cref="T:System.Management.PropertyDataCollection" /> enumeration.</para>
      </summary>
    </member>
    <member name="T:System.Management.QualifierData">
      <summary>
        <para> Contains information about a WMI qualifier.</para>
      </summary>
    </member>
    <member name="P:System.Management.QualifierData.Name">
      <summary>
        <para>Represents the name of the qualifier.</para>
      </summary>
    </member>
    <member name="P:System.Management.QualifierData.Value">
      <summary>
        <para>Gets or sets the value of the qualifier.</para>
      </summary>
    </member>
    <member name="P:System.Management.QualifierData.IsAmended">
      <summary>
        <para> Gets or sets a value indicating whether the qualifier is amended.</para>
      </summary>
    </member>
    <member name="P:System.Management.QualifierData.IsLocal">
      <summary>
        <para>Gets or sets a value indicating whether the qualifier has been defined locally on 
                  this class or has been propagated from a base class.</para>
      </summary>
    </member>
    <member name="P:System.Management.QualifierData.PropagatesToInstance">
      <summary>
        <para>Gets or sets a value indicating whether the qualifier should be propagated to instances of the 
                  class.</para>
      </summary>
    </member>
    <member name="P:System.Management.QualifierData.PropagatesToSubclass">
      <summary>
        <para>Gets or sets a value indicating whether the qualifier should be propagated to 
                  subclasses of the class.</para>
      </summary>
    </member>
    <member name="P:System.Management.QualifierData.IsOverridable">
      <summary>
        <para>Gets or sets a value indicating whether the value of the qualifier can be 
                  overridden when propagated.</para>
      </summary>
    </member>
    <member name="T:System.Management.QualifierDataCollection">
      <summary>
        <para> Represents a collection of <see cref="T:System.Management.QualifierData" /> objects.</para>
      </summary>
    </member>
    <member name="M:System.Management.QualifierDataCollection.CopyTo(System.Array,System.Int32)">
      <summary>
        <para> Copies the <see cref="T:System.Management.QualifierDataCollection" /> into an array.</para>
      </summary>
      <param name="array">The array to which to copy the <see cref="T:System.Management.QualifierDataCollection" />. </param>
      <param name="index">The index from which to start copying. </param>
    </member>
    <member name="M:System.Management.QualifierDataCollection.CopyTo(System.Management.QualifierData[],System.Int32)">
      <summary>
        <para>Copies the <see cref="T:System.Management.QualifierDataCollection" /> into a specialized 
            <see cref="T:System.Management.QualifierData" /> 
            array.</para>
      </summary>
      <param name="qualifierArray">
        <para>The specialized array of <see cref="T:System.Management.QualifierData" /> objects 
            to which to copy the <see cref="T:System.Management.QualifierDataCollection" />.</para>
      </param>
      <param name=" index">The index from which to start copying.</param>
    </member>
    <member name="M:System.Management.QualifierDataCollection.GetEnumerator">
      <summary>
        <para>Returns an enumerator for the <see cref="T:System.Management.QualifierDataCollection" />. This method is strongly typed.</para>
      </summary>
      <returns>
        <para>An <see cref="T:System.Collections.IEnumerator" /> that can be used to iterate through the 
               collection.</para>
      </returns>
    </member>
    <member name="M:System.Management.QualifierDataCollection.Remove(System.String)">
      <summary>
        <para>Removes a <see cref="T:System.Management.QualifierData" /> from the <see cref="T:System.Management.QualifierDataCollection" /> by name.</para>
      </summary>
      <param name="qualifierName">The name of the <see cref="T:System.Management.QualifierData" /> to remove. </param>
    </member>
    <member name="M:System.Management.QualifierDataCollection.Add(System.String,System.Object)">
      <summary>
        <para>Adds a <see cref="T:System.Management.QualifierData" /> to the <see cref="T:System.Management.QualifierDataCollection" />. This overload specifies the qualifier name and value.</para>
      </summary>
      <param name="qualifierName">The name of the <see cref="T:System.Management.QualifierData" /> to be added to the <see cref="T:System.Management.QualifierDataCollection" />. </param>
      <param name="qualifierValue">The value for the new qualifier. </param>
    </member>
    <member name="M:System.Management.QualifierDataCollection.Add(System.String,System.Object,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
      <summary>
        <para>Adds a <see cref="T:System.Management.QualifierData" /> to the <see cref="T:System.Management.QualifierDataCollection" />. This overload 
               specifies all property values for a <see cref="T:System.Management.QualifierData" /> object.</para>
      </summary>
      <param name="qualifierName">The qualifier name. </param>
      <param name="qualifierValue">The qualifier value. </param>
      <param name="isAmended">
        <see langword="true" /> to specify that this qualifier is amended (flavor); otherwise, <see langword="false" />. </param>
      <param name="propagatesToInstance">
        <see langword="true" /> to propagate this qualifier to instances; otherwise, <see langword="false" />. </param>
      <param name="propagatesToSubclass">
        <see langword="true" /> to propagate this qualifier to subclasses; otherwise, <see langword="false" />. </param>
      <param name="isOverridable">
        <see langword="true" /> to specify that this qualifier's value is overridable in instances of subclasses; otherwise, <see langword="false" />. </param>
    </member>
    <member name="P:System.Management.QualifierDataCollection.Count">
      <summary>
        <para>Gets or sets the number of <see cref="T:System.Management.QualifierData" /> objects in the <see cref="T:System.Management.QualifierDataCollection" />.</para>
      </summary>
    </member>
    <member name="P:System.Management.QualifierDataCollection.IsSynchronized">
      <summary>
        <para>Gets or sets a value indicating whether the object is synchronized.</para>
      </summary>
    </member>
    <member name="P:System.Management.QualifierDataCollection.SyncRoot">
      <summary>
        <para>Gets or sets the object to be used for synchronization.</para>
      </summary>
    </member>
    <member name="P:System.Management.QualifierDataCollection.Item(System.String)">
      <summary>
        <para> Gets the specified <see cref="T:System.Management.QualifierData" /> from the <see cref="T:System.Management.QualifierDataCollection" />.</para>
      </summary>
      <param name="qualifierName">The name of the <see cref="T:System.Management.QualifierData" /> to access in the <see cref="T:System.Management.QualifierDataCollection" />. </param>
    </member>
    <member name="M:System.Management.QualifierDataCollection.QualifierDataEnumerator.MoveNext">
      <summary>
        <para> Moves to the next element in the <see cref="T:System.Management.QualifierDataCollection" /> enumeration.</para>
      </summary>
      <returns>
        <para>
          <see langword="true" /> if the enumerator was successfully advanced to the next 
               element; <see langword="false" /> if the enumerator has passed the end of the
               collection.</para>
      </returns>
    </member>
    <member name="M:System.Management.QualifierDataCollection.QualifierDataEnumerator.Reset">
      <summary>
        <para>Resets the enumerator to the beginning of the <see cref="T:System.Management.QualifierDataCollection" /> enumeration.</para>
      </summary>
    </member>
    <member name="P:System.Management.QualifierDataCollection.QualifierDataEnumerator.Current">
      <summary>
        <para>Gets or sets the current <see cref="T:System.Management.QualifierData" /> in the <see cref="T:System.Management.QualifierDataCollection" /> enumeration.</para>
      </summary>
    </member>
    <member name="T:System.Management.MethodData">
      <summary>
        <para> Contains information about a WMI method.</para>
      </summary>
    </member>
    <member name="P:System.Management.MethodData.Name">
      <summary>
        <para>Gets or sets the name of the method.</para>
      </summary>
    </member>
    <member name="P:System.Management.MethodData.InParameters">
      <summary>
        <para> Gets or sets the input parameters to the method. Each 
                  parameter is described as a property in the object. If a parameter is both in
                  and out, it appears in both the <see cref="P:System.Management.MethodData.InParameters" /> and <see cref="P:System.Management.MethodData.OutParameters" />
                  properties.</para>
      </summary>
    </member>
    <member name="P:System.Management.MethodData.OutParameters">
      <summary>
        <para> Gets or sets the output parameters to the method. Each 
                  parameter is described as a property in the object. If a parameter is both in
                  and out, it will appear in both the <see cref="P:System.Management.MethodData.InParameters" /> and <see cref="P:System.Management.MethodData.OutParameters" />
                  properties.</para>
      </summary>
    </member>
    <member name="P:System.Management.MethodData.Origin">
      <summary>
        <para>Gets the name of the management class in which the method was first 
                  introduced in the class inheritance hierarchy.</para>
      </summary>
    </member>
    <member name="P:System.Management.MethodData.Qualifiers">
      <summary>
        <para>Gets a collection of qualifiers defined in the 
                  method. Each element is of type <see cref="T:System.Management.QualifierData" />
                  and contains information such as the qualifier name, value, and
                  flavor.</para>
      </summary>
    </member>
    <member name="T:System.Management.MethodDataCollection">
      <summary>
        <para> Represents the set of methods available in the collection.</para>
      </summary>
    </member>
    <member name="M:System.Management.MethodDataCollection.CopyTo(System.Array,System.Int32)">
      <summary>
        <para> Copies the <see cref="T:System.Management.MethodDataCollection" /> into an array.</para>
      </summary>
      <param name="array">The array to which to copy the collection. </param>
      <param name="index">The index from which to start. </param>
    </member>
    <member name="M:System.Management.MethodDataCollection.CopyTo(System.Management.MethodData[],System.Int32)">
      <summary>
        <para>Copies the <see cref="T:System.Management.MethodDataCollection" /> to a specialized <see cref="T:System.Management.MethodData" /> 
            array.</para>
      </summary>
      <param name="methodArray">The destination array to which to copy the <see cref="T:System.Management.MethodData" /> objects.</param>
      <param name=" index">The index in the destination array from which to start the copy.</param>
    </member>
    <member name="M:System.Management.MethodDataCollection.GetEnumerator">
      <summary>
        <para>Returns an enumerator for the <see cref="T:System.Management.MethodDataCollection" />.</para>
      </summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> to enumerate through the collection.</returns>
    </member>
    <member name="M:System.Management.MethodDataCollection.Remove(System.String)">
      <summary>
        <para>Removes a <see cref="T:System.Management.MethodData" /> from the <see cref="T:System.Management.MethodDataCollection" />.</para>
      </summary>
      <param name="methodName">The name of the method to remove from the collection.</param>
    </member>
    <member name="M:System.Management.MethodDataCollection.Add(System.String)">
      <summary>
        <para>Adds a <see cref="T:System.Management.MethodData" /> to the <see cref="T:System.Management.MethodDataCollection" />. This overload will
               add a new method with no parameters to the collection.</para>
      </summary>
      <param name="methodName">The name of the method to add.</param>
    </member>
    <member name="M:System.Management.MethodDataCollection.Add(System.String,System.Management.ManagementBaseObject,System.Management.ManagementBaseObject)">
      <summary>
        <para>Adds a <see cref="T:System.Management.MethodData" /> to the <see cref="T:System.Management.MethodDataCollection" />. This overload will add a new method with the 
               specified parameter objects to the collection.</para>
      </summary>
      <param name="methodName">The name of the method to add.</param>
      <param name=" inParams">The <see cref="T:System.Management.ManagementBaseObject" /> holding the input parameters to the method.</param>
      <param name=" outParams">The <see cref="T:System.Management.ManagementBaseObject" /> holding the output parameters to the method.</param>
    </member>
    <member name="P:System.Management.MethodDataCollection.Count">
      <summary>
        <para>Represents the number of objects in the <see cref="T:System.Management.MethodDataCollection" />.</para>
      </summary>
    </member>
    <member name="P:System.Management.MethodDataCollection.IsSynchronized">
      <summary>
        <para>Indicates whether the object is synchronized.</para>
      </summary>
    </member>
    <member name="P:System.Management.MethodDataCollection.SyncRoot">
      <summary>
        <para>Represents the object to be used for synchronization.</para>
      </summary>
    </member>
    <member name="P:System.Management.MethodDataCollection.Item(System.String)">
      <summary>
        <para>Returns the specified <see cref="T:System.Management.MethodData" /> from the <see cref="T:System.Management.MethodDataCollection" />.</para>
      </summary>
      <param name="methodName">The name of the method requested.</param>
    </member>
    <!-- Badly formed XML comment ignored for member "T:System.Management.MethodDataCollection.MethodDataEnumerator" -->
    <member name="M:System.Management.MethodDataCollection.MethodDataEnumerator.MoveNext">
      <summary>
        <para>Moves to the next element in the <see cref="T:System.Management.MethodDataCollection" /> enumeration.</para>
      </summary>
      <returns>
        <see langword="true" /> if the enumerator was successfully advanced to the next method; <see langword="false" /> if the enumerator has passed the end of the collection.</returns>
    </member>
    <member name="M:System.Management.MethodDataCollection.MethodDataEnumerator.Reset">
      <summary>
        <para>Resets the enumerator to the beginning of the <see cref="T:System.Management.MethodDataCollection" /> enumeration.</para>
      </summary>
    </member>
    <member name="P:System.Management.MethodDataCollection.MethodDataEnumerator.Current">
      <summary>
        <para>Returns the current <see cref="T:System.Management.MethodData" /> in the <see cref="T:System.Management.MethodDataCollection" /> 
            enumeration.</para>
      </summary>
    </member>
    <member name="T:System.Management.Instrumentation.InstrumentedAttribute">
      <summary>
        <para>Specifies that this assembly provides management instrumentation. This attribute should appear one time per assembly.</para>
      </summary>
    </member>
    <member name="M:System.Management.Instrumentation.InstrumentedAttribute.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Management.Instrumentation.InstrumentedAttribute" /> 
            class that is set for the root\default namespace. This is the default constructor.</para>
      </summary>
    </member>
    <member name="M:System.Management.Instrumentation.InstrumentedAttribute.#ctor(System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Management.Instrumentation.InstrumentedAttribute" /> class that is set to the specified namespace for instrumentation within this assembly.</para>
      </summary>
      <param name="namespaceName">The namespace for instrumentation instances and events.</param>
    </member>
    <member name="M:System.Management.Instrumentation.InstrumentedAttribute.#ctor(System.String,System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Management.Instrumentation.InstrumentedAttribute" /> class that is set to the specified namespace and security settings for instrumentation within this assembly.</para>
      </summary>
      <param name="namespaceName">The namespace for instrumentation instances and events.</param>
      <param name="securityDescriptor"> A security descriptor that allows only the specified users or groups to run applications that provide the instrumentation supported by this assembly.</param>
    </member>
    <member name="P:System.Management.Instrumentation.InstrumentedAttribute.NamespaceName">
      <summary>
        <para>Gets or sets the namespace for instrumentation instances and events in this assembly.</para>
      </summary>
    </member>
    <member name="P:System.Management.Instrumentation.InstrumentedAttribute.SecurityDescriptor">
      <summary>
        <para> Gets or sets a security descriptor that allows only the specified users or groups to run
                  applications that provide the instrumentation supported by this assembly.</para>
      </summary>
    </member>
    <member name="T:System.Management.Instrumentation.InstrumentationType">
      <summary>
        <para>Specifies the type of instrumentation provided by a class.</para>
      </summary>
    </member>
    <member name="F:System.Management.Instrumentation.InstrumentationType.Instance">
      <summary>
        <para>Specifies that the class provides instances for management instrumentation.</para>
      </summary>
    </member>
    <member name="F:System.Management.Instrumentation.InstrumentationType.Event">
      <summary>
        <para>Specifies that the class provides events for management instrumentation.</para>
      </summary>
    </member>
    <member name="F:System.Management.Instrumentation.InstrumentationType.Abstract">
      <summary>
        <para>Specifies that the class defines an abstract class for management instrumentation.</para>
      </summary>
    </member>
    <member name="T:System.Management.Instrumentation.InstrumentationClassAttribute">
      <summary>
            Specifies that a class provides event or instance instrumentation.
            </summary>
    </member>
    <member name="M:System.Management.Instrumentation.InstrumentationClassAttribute.#ctor(System.Management.Instrumentation.InstrumentationType)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Management.Instrumentation.InstrumentationClassAttribute" /> class that is used if this type is derived from another type that has the <see cref="T:System.Management.Instrumentation.InstrumentationClassAttribute" /> attribute, or if this is a 
               top-level instrumentation class (for example, an instance or abstract class
               without a base class, or an event derived from <see langword="__ExtrinsicEvent" />).</para>
      </summary>
      <param name="instrumentationType">The type of instrumentation provided by this class.</param>
    </member>
    <member name="M:System.Management.Instrumentation.InstrumentationClassAttribute.#ctor(System.Management.Instrumentation.InstrumentationType,System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Management.Instrumentation.InstrumentationClassAttribute" /> class that
               has schema for an existing base class. The class must contain
               proper member definitions for the properties of the existing
               WMI base class.</para>
      </summary>
      <param name="instrumentationType">The type of instrumentation provided by this class.</param>
      <param name="managedBaseClassName">The name of the base class.</param>
    </member>
    <member name="P:System.Management.Instrumentation.InstrumentationClassAttribute.InstrumentationType">
      <summary>
        <para>Gets or sets the type of instrumentation provided by this class.</para>
      </summary>
    </member>
    <member name="P:System.Management.Instrumentation.InstrumentationClassAttribute.ManagedBaseClassName">
      <summary>
        <para>Gets or sets the name of the base class of this instrumentation class.</para>
      </summary>
    </member>
    <member name="T:System.Management.Instrumentation.ManagedNameAttribute">
      <summary>
        <para>Allows an instrumented class, or member of an instrumented class,
                  to present an alternate name through management instrumentation.</para>
      </summary>
    </member>
    <member name="M:System.Management.Instrumentation.ManagedNameAttribute.#ctor(System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Management.Instrumentation.ManagedNameAttribute" /> class that allows the alternate name to be specified
               for the type, field, property, method, or parameter to which this attribute is applied.</para>
      </summary>
      <param name="name">The alternate name for the type, field, property, method, or parameter to which this attribute is applied.</param>
    </member>
    <member name="T:System.Management.Instrumentation.IgnoreMemberAttribute">
      <summary>
        <para>Allows a particular member of an instrumented class to be ignored
                  by management instrumentation</para>
      </summary>
    </member>
    <member name="T:System.Management.Instrumentation.Instrumentation">
      <summary>
        <para> Provides helper functions for exposing events and data for management.
                  There is a single instance of this class per application domain.</para>
      </summary>
    </member>
    <member name="M:System.Management.Instrumentation.Instrumentation.RegisterAssembly(System.Reflection.Assembly)">
      <summary>
        <para>Registers the management instance or event classes in the specified assembly with WMI.  This ensures that the instrumentation schema is accessible to System.Management client applications.</para>
      </summary>
      <param name="assemblyToRegister">
        <para>The assembly containing instrumentation instance or event types.</para>
      </param>
    </member>
    <member name="M:System.Management.Instrumentation.Instrumentation.IsAssemblyRegistered(System.Reflection.Assembly)">
      <summary>
        <para>Determines if the instrumentation schema of the specified assembly has already been correctly registered with WMI.</para>
      </summary>
      <param name="assemblyToRegister">
        <para>The assembly containing instrumentation instance or event types.</para>
      </param>
      <returns>
        <para>true if the instrumentation schema in the specified assembly is registered with WMI; otherwise, false.</para>
      </returns>
    </member>
    <member name="M:System.Management.Instrumentation.Instrumentation.Fire(System.Object)">
      <summary>
        <para>Raises a management event.</para>
      </summary>
      <param name="eventData">The object that determines the class, properties, and values of the event.</param>
    </member>
    <member name="M:System.Management.Instrumentation.Instrumentation.Publish(System.Object)">
      <summary>
        <para>Makes an instance visible through management instrumentation.</para>
      </summary>
      <param name="instanceData">The instance that is to be visible through management instrumentation.</param>
    </member>
    <member name="M:System.Management.Instrumentation.Instrumentation.Revoke(System.Object)">
      <summary>
        <para>Makes an instance that was previously published through the <see cref="M:System.Management.Instrumentation.Instrumentation.Publish(System.Object)" />
            method no longer visible through management instrumentation.</para>
      </summary>
      <param name="instanceData">The object to remove from visibility for management instrumentation.</param>
    </member>
    <member name="M:System.Management.Instrumentation.Instrumentation.SetBatchSize(System.Type,System.Int32)">
      <summary>
            Specifies the maximum number of objects of the specified type to be provided at a time.
            </summary>
      <param name="instrumentationClass">The class for which the batch size is being set.</param>
      <param name="batchSize">The maximum number of objects to be provided at a time.</param>
    </member>
    <member name="T:System.Management.Instrumentation.IEvent">
      <summary>
        <para>Specifies a source of a management instrumentation event. 
                  Objects that implement this interface are known to be sources of management
                  instrumentation events. Classes that do not derive from <see cref="T:System.Management.Instrumentation.BaseEvent" /> should implement
                  this interface instead.</para>
      </summary>
    </member>
    <member name="M:System.Management.Instrumentation.IEvent.Fire">
      <summary>
        <para> 
                  Raises a management event.</para>
      </summary>
    </member>
    <member name="T:System.Management.Instrumentation.BaseEvent">
      <summary>
        <para>Represents classes derived 
                  from <see cref="T:System.Management.Instrumentation.BaseEvent" /> that are known to be
               management event classes. These derived classes inherit an implementation
               of <see cref="T:System.Management.Instrumentation.IEvent" /> that allows events to be
               fired through the <see cref="M:System.Management.Instrumentation.IEvent.Fire" />
               method.</para>
      </summary>
    </member>
    <member name="M:System.Management.Instrumentation.BaseEvent.Fire">
      <summary>
        <para>Raises a management event.</para>
      </summary>
    </member>
    <member name="T:System.Management.Instrumentation.IInstance">
      <summary>
        <para>Specifies a source of a management instrumentation 
                  instance. Objects that implement this interface are known to be sources of
                  management instrumentation instances. Classes that do not derive from <see cref="T:System.Management.Instrumentation.Instance" /> should implement
                  this interface instead.</para>
      </summary>
    </member>
    <member name="P:System.Management.Instrumentation.IInstance.Published">
      <summary>
               Gets or sets a value indicating whether instances of
               classes that implement this interface are visible through management
               instrumentation.
            </summary>
    </member>
    <member name="T:System.Management.Instrumentation.Instance">
      <summary>
        <para> Represents derived classes known to be management 
                  instrumentation instance classes. These derived classes inherit an
                  implementation of <see cref="T:System.Management.Instrumentation.IInstance" /> that allows instances to be
                  published through the <see cref="P:System.Management.Instrumentation.IInstance.Published" />
                  property.</para>
      </summary>
    </member>
    <member name="P:System.Management.Instrumentation.Instance.Published">
      <summary>
        <para>Gets or sets a value indicating whether instances of classes that implement this interface are visible through management instrumentation.</para>
      </summary>
    </member>
    <member name="T:System.Management.Instrumentation.ManagementInstaller">
      <summary>
        <para>Installs instrumented assemblies. Include an instance of this installer class in the project installer for
                  an assembly that includes instrumentation.</para>
      </summary>
    </member>
    <member name="M:System.Management.Instrumentation.ManagementInstaller.Install(System.Collections.IDictionary)">
      <summary>
        <para>Installs the assembly.</para>
      </summary>
      <param name="savedState">The state of the assembly.</param>
    </member>
    <member name="M:System.Management.Instrumentation.ManagementInstaller.Commit(System.Collections.IDictionary)">
      <summary>
        <para>Commits the assembly to the operation.</para>
      </summary>
      <param name="savedState">The state of the assembly.</param>
    </member>
    <member name="M:System.Management.Instrumentation.ManagementInstaller.Rollback(System.Collections.IDictionary)">
      <summary>
        <para>Rolls back the state of the assembly.</para>
      </summary>
      <param name="savedState">The state of the assembly.</param>
    </member>
    <member name="M:System.Management.Instrumentation.ManagementInstaller.Uninstall(System.Collections.IDictionary)">
      <summary>
        <para>Uninstalls the assembly.</para>
      </summary>
      <param name="savedState">The state of the assembly.</param>
    </member>
    <member name="P:System.Management.Instrumentation.ManagementInstaller.HelpText">
      <summary>
        <para>Gets or sets installer options for this class.</para>
      </summary>
    </member>
    <member name="T:System.Management.Instrumentation.DefaultManagementProjectInstaller">
      <summary>
        <para> Installs an instrumented assembly. This class is a default project installer for assemblies that contain
                  management instrumentation and do not use other installers (such as services, or message
                  queues). To use this default project installer, simply derive a class from
               <see cref="T:System.Management.Instrumentation.DefaultManagementProjectInstaller" /> inside the assembly. No methods need
                  to be overridden.</para>
      </summary>
    </member>
    <member name="M:System.Management.Instrumentation.DefaultManagementProjectInstaller.#ctor">
      <summary>
        <para>Initializes a new instance of the 
               <see cref="T:System.Management.Instrumentation.DefaultManagementProjectInstaller" /> class. This is the default constructor.</para>
      </summary>
    </member>
    <member name="T:System.Management.CodeLanguage">
      <summary>
        <para>Defines the languages supported by the code generator.</para>
      </summary>
    </member>
    <member name="F:System.Management.CodeLanguage.CSharp">
      <summary>
               A value for generating C# code.
            </summary>
    </member>
    <member name="F:System.Management.CodeLanguage.JScript">
      <summary>
        <para>A value for generating JScript code.</para>
      </summary>
    </member>
    <member name="F:System.Management.CodeLanguage.VB">
      <summary>
        <para>A value for generating Visual Basic code.</para>
      </summary>
    </member>
    <member name="M:System.Management.ManagementClassGenerator.#ctor">
      <summary>
        <para>Creates an empty generator object. This is the default constructor.</para>
      </summary>
    </member>
    <member name="M:System.Management.ManagementClassGenerator.#ctor(System.Management.ManagementClass)">
      <summary>
        <para>Creates a generator object and initializes it
                with the specified <see cref="T:System.Management.ManagementClass" />.</para>
      </summary>
      <param name="cls">
        <see cref="T:System.Management.ManagementClass" /> object for which the code is to be generated.</param>
    </member>
    <member name="M:System.Management.ManagementClassGenerator.GenerateCode(System.Boolean,System.Boolean)">
      <summary>
        <para> 
                  Returns a <see cref="T:System.CodeDom.CodeTypeDeclaration" /> for
                  this class.</para>
      </summary>
      <param name="includeSystemProperties">Indicates if a class for handling system properties should be included.</param>
      <param name="systemPropertyClass">Indicates if the generated code is for a class that handles system properties.</param>
      <returns>
        <para>Returns the <see cref="T:System.CodeDom.CodeTypeDeclaration" /> for the WMI class.</para>
      </returns>
    </member>
    <member name="M:System.Management.ManagementClassGenerator.GenerateCode(System.Management.CodeLanguage,System.String,System.String)">
      <summary>
            Generates a strongly-typed code class for the specified language provider (C#, Visual Basic or JScript)
            and writes it to the specified file.
            </summary>
      <param name="lang">The language to generate in.</param>
      <param name="FilePath">The path to the file where the generated code should be stored.</param>
      <param name="Namespace">The .NET namespace into which the class is generated.</param>
    </member>
    <member name="P:System.Management.ManagementClassGenerator.Server">
      <summary>
        <para>Indicates the name of the server from which the WMI class originates.</para>
      </summary>
    </member>
    <member name="P:System.Management.ManagementClassGenerator.WMINamespace">
      <summary>
        <para>Indicates the WMI namespace from which the WMI class originates.</para>
      </summary>
    </member>
    <member name="P:System.Management.ManagementClassGenerator.ClassName">
      <summary>
        <para>Indicates the original name of the WMI class.</para>
      </summary>
    </member>
    <member name="P:System.Management.ManagementClassGenerator.WMIPath">
      <summary>
        <para>The full path of the WMI class.</para>
      </summary>
    </member>
    <member name="P:System.Management.ManagementClassGenerator.UnsignedSupported">
      <summary>
        <para>Checks if the current language supports unsigned values.</para>
      </summary>
      <returns>
        <see langword="true" /> if the language supports unsigned values, <see langword="false" /> otherwise.</returns>
    </member>
    <member name="P:System.Management.ManagementClassGenerator.Username">
      <summary>
        <para>Specifies a user name for the WMI connection.</para>
      </summary>
    </member>
    <member name="P:System.Management.ManagementClassGenerator.Password">
      <summary>
        <para>Specifies a user password if a different user name was specified.</para>
      </summary>
    </member>
    <member name="P:System.Management.ManagementClassGenerator.Authority">
      <summary>
        <para>Specifies an authority to be used for the WMI connection.</para>
      </summary>
    </member>
    <member name="P:System.Management.ManagementClassGenerator.GeneratedFileName">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="P:System.Management.ManagementClassGenerator.GeneratedTypeName">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
  </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\tools\x86\managed\urt\v1.0.3705\system.data.xml ===
<?xml version="1.0"?>
<doc>
  <assembly>
    <name>System.Data</name>
  </assembly>
  <members>
    <member name="M:System.Data.ResDescriptionAttribute.#ctor(System.String)">
      <summary>
                Constructs a new sys description.
            </summary>
      <param name="description">
                description text.
            </param>
    </member>
    <member name="P:System.Data.ResDescriptionAttribute.Description">
      <summary>
                Retrieves the description text.
            </summary>
      <returns>
                description
            </returns>
    </member>
    <member name="T:System.Data.AcceptRejectRule">
      <summary>
        <para>Determines the action that occurs when the <see cref="M:System.Data.DataSet.AcceptChanges" /> or <see cref="M:System.Data.DataTable.RejectChanges" /> method is invoked on a <see cref="T:System.Data.DataTable" /> with a <see cref="T:System.Data.ForeignKeyConstraint" />
.</para>
      </summary>
    </member>
    <member name="F:System.Data.AcceptRejectRule.None">
      <summary>
        <para>
       No action occurs.
    </para>
      </summary>
    </member>
    <member name="F:System.Data.AcceptRejectRule.Cascade">
      <summary>
        <para>
       Changes are cascaded across the relationship.
    </para>
      </summary>
    </member>
    <member name="F:System.Data.AggregateType.None">
      <summary>
        <para>None.</para>
      </summary>
    </member>
    <member name="F:System.Data.AggregateType.Sum">
      <summary>
        <para>Sum.</para>
      </summary>
    </member>
    <member name="F:System.Data.AggregateType.Mean">
      <summary>
        <para>Average value of the aggregate set.</para>
      </summary>
    </member>
    <member name="F:System.Data.AggregateType.Min">
      <summary>
        <para>The minimum value of the set.</para>
      </summary>
    </member>
    <member name="F:System.Data.AggregateType.Max">
      <summary>
        <para>The maximum value of the set.</para>
      </summary>
    </member>
    <member name="F:System.Data.AggregateType.First">
      <summary>
        <para>First element of the set.</para>
      </summary>
    </member>
    <member name="F:System.Data.AggregateType.Count">
      <summary>
        <para>The count of the set.</para>
      </summary>
    </member>
    <member name="F:System.Data.AggregateType.Var">
      <summary>
        <para>Variance.</para>
      </summary>
    </member>
    <member name="F:System.Data.AggregateType.StDev">
      <summary>
        <para>Standard deviation.</para>
      </summary>
    </member>
    <member name="T:System.Data.InternalDataCollectionBase">
      <summary>
        <para>Provides the base functionality for creating collections.</para>
      </summary>
    </member>
    <member name="M:System.Data.InternalDataCollectionBase.CopyTo(System.Array,System.Int32)">
      <summary>
        <para>Copies all the elements of the current <see cref="T:System.Data.InternalDataCollectionBase" /> to a one-dimensional <see cref="T:System.Array" />, starting at
   the specified <see cref="T:System.Data.InternalDataCollectionBase" /> index.</para>
      </summary>
      <param name="ar">The one-dimensional <see cref="T:System.Array" /> to copy the current <see cref="T:System.Data.InternalDataCollectionBase" /> object's elements into.</param>
      <param name=" index">The destination <see cref="T:System.Array" /> index to start copying into.</param>
    </member>
    <member name="M:System.Data.InternalDataCollectionBase.GetEnumerator">
      <summary>
        <para>Gets an <see cref="T:System.Collections.IEnumerator" /> for the collection.</para>
      </summary>
      <returns>
        <para>An <see cref="T:System.Collections.IEnumerator" /> for the collection.</para>
      </returns>
    </member>
    <member name="P:System.Data.InternalDataCollectionBase.Count">
      <summary>
        <para>Gets the total number of elements in a collection.</para>
      </summary>
    </member>
    <member name="P:System.Data.InternalDataCollectionBase.IsReadOnly">
      <summary>
        <para>Gets a value indicating whether the <see cref="T:System.Data.InternalDataCollectionBase" /> is
   read-only.</para>
      </summary>
    </member>
    <member name="P:System.Data.InternalDataCollectionBase.IsSynchronized">
      <summary>
        <para>Gets a value indicating whether the <see cref="T:System.Data.InternalDataCollectionBase" /> is synchonized.</para>
      </summary>
    </member>
    <member name="P:System.Data.InternalDataCollectionBase.SyncRoot">
      <summary>
        <para>Gets an object that can be used to synchronize the
      collection.</para>
      </summary>
    </member>
    <member name="P:System.Data.InternalDataCollectionBase.List">
      <summary>
        <para>Gets the items of the collection as a list.</para>
      </summary>
    </member>
    <member name="M:System.Data.ColumnTypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
    </member>
    <member name="T:System.Data.CommandBehavior">
      <summary>
        <para> Provdes a description of the results of the query and its effect on
      the database.</para>
      </summary>
    </member>
    <member name="F:System.Data.CommandBehavior.Default">
      <summary>
        <para>The query may return multiple result sets. Execution of
      the query may effect the database state. <see langword="Default" /> sets
      no <see cref="T:System.Data.CommandBehavior" /> flags, so calling
   <see langword="ExecuteReader(CommandBehavior.Default)" /> is functionally
      equivalent to calling <see langword="ExecuteReader()" />
      .</para>
      </summary>
    </member>
    <member name="F:System.Data.CommandBehavior.SingleResult">
      <summary>
        <para> The query returns a single result set. Execution of the
      query may effect the database state.
      </para>
      </summary>
    </member>
    <member name="F:System.Data.CommandBehavior.SchemaOnly">
      <summary>
        <para> The query returns column information only and does not effect the
      database state.
      </para>
      </summary>
    </member>
    <member name="F:System.Data.CommandBehavior.KeyInfo">
      <summary>
        <para> 
      The query
      returns column and primary key information. The query is executed without any locking
      on the selected rows.
      </para>
        <note type="note">
      When using KeyInfo[cref, System.Data.CommandBehavior], the SQL Server .NET Data Provider appends a FOR BROWSE clause to the statement being executed. The user should be aware of potential side effects, such as interference with the use of SET FMTONLY ON statements. See SQL Server Books Online for more information.
   </note>
      </summary>
    </member>
    <member name="F:System.Data.CommandBehavior.SingleRow">
      <summary>
        <para> The query is expected to return a single row. Execution
      of the query may effect the database state. Some .NET data providers may, but
      are not required to, use this information to optimize the performance of the
      command. When you specify <see cref="F:System.Data.CommandBehavior.SingleRow" /> with the <see cref="M:System.Data.OleDb.OleDbCommand.ExecuteReader" /> method of the <see cref="T:System.Data.OleDb.OleDbCommand" /> object, the OLE DB .NET Data Provider
      performs binding using the OLE DB <see langword="IRow" /> interface if it is
      available. Otherwise, it uses the <see langword="IRowset" />
      interface. If your SQL statement is
      expected to return only a single row, specifying <see cref="F:System.Data.CommandBehavior.SingleRow" />
      can also improve application performance.</para>
        <para>It is possible to specify <see langword="SingleRow" /> when
   executing queries that return multiple result sets. In that case, multiple
   result sets are still returned, but each result set has a single row.</para>
      </summary>
    </member>
    <member name="F:System.Data.CommandBehavior.SequentialAccess">
      <summary>
        <para>Provides a way for the <see langword="DataReader" /> to handle rows
   that contain columns with large binary values. Rather than loading the
   entire row, <see langword="SequentialAccess" /> enables
   the <see langword="DataReader" /> to load
   data as a stream. You can then use the <see langword="GetBytes" /> or
<see langword="GetChars" />
method to specify a byte location to start the
read operation, and a limited buffer size for the data being returned.</para>
        <para>When you specify <see langword="SequentialAccess" />, you are not required to read 
from the columns in the order they are returned. However, once you have read
past a location in the returned stream of data, data at or before that location
can no longer be read from the <see langword="DataReader" />
. </para>
      </summary>
    </member>
    <member name="F:System.Data.CommandBehavior.CloseConnection">
      <summary>
        <para>When the command is executed, the associated 
   <see langword="Connection " />object is closed when the associated 
   <see langword="DataReader " />object is closed.</para>
      </summary>
    </member>
    <member name="T:System.Data.CommandType">
      <summary>
        <para>Specifies how a command string is interpreted.</para>
      </summary>
    </member>
    <member name="F:System.Data.CommandType.Text">
      <summary>
        <para>
       A
       SQL text command.
    </para>
      </summary>
    </member>
    <member name="F:System.Data.CommandType.StoredProcedure">
      <summary>
        <para>
       The name of a stored procedure.
    </para>
      </summary>
    </member>
    <member name="F:System.Data.CommandType.TableDirect">
      <summary>
        <para>When the <see cref="T:System.Data.CommandType" /> property is set to <see cref="F:System.Data.CommandType.TableDirect" />, the <see cref="P:System.Data.IDbCommand.CommandText" /> 
property should be set to the name of the table
or tables to be accessed. The user may be required to use escape
character syntax or include qualifying characters if any of the tables named contain any special characters. All rows and columns of the named table or
tables will be returned when you call one of the Execute methods.</para>
        <para>In order to access multiple tables, use a comma delimited list, without 
   spaces or padding, containing the names of the tables to
   access. When the CommandText property names multiple tables, a
   join of the specified tables is returned</para>
      </summary>
    </member>
    <member name="T:System.Data.ConnectionState">
      <summary>
        <para>Describes the current state of the connection to a data source.</para>
      </summary>
    </member>
    <member name="F:System.Data.ConnectionState.Closed">
      <summary>
        <para> The connection is closed.</para>
      </summary>
    </member>
    <member name="F:System.Data.ConnectionState.Open">
      <summary>
        <para> The connection is open.
      </para>
      </summary>
    </member>
    <member name="F:System.Data.ConnectionState.Connecting">
      <summary>
        <para> The connection object is connecting to the data source. (This value is reserved for
      future versions of the product.)
      </para>
      </summary>
    </member>
    <member name="F:System.Data.ConnectionState.Executing">
      <summary>
        <para> The connection object is executing a command. (This value is
      reserved for future versions of the product.)
      </para>
      </summary>
    </member>
    <member name="F:System.Data.ConnectionState.Fetching">
      <summary>
        <para> The connection object is retrieving data. (This value is reserved for
      future versions of the product.)
      </para>
      </summary>
    </member>
    <member name="F:System.Data.ConnectionState.Broken">
      <summary>
        <para> The connection to the data source is broken. This can occur only after the
      connection has been opened. A connection in this state may
      be closed and then re-opened. (This value is reserved for future
      versions of the product.)
      </para>
      </summary>
    </member>
    <member name="T:System.Data.Constraint">
      <summary>
        <para>Represents a constraint that can be enforced on one or
 more <see cref="T:System.Data.DataColumn" /> objects.</para>
      </summary>
    </member>
    <member name="M:System.Data.Constraint.ToString">
      <summary>
        <para>Gets the <see cref="P:System.Data.Constraint.ConstraintName" />, if there is one, as a
 string.</para>
      </summary>
      <returns>
        <para>The string value of the <see cref="P:System.Data.Constraint.ConstraintName" />.</para>
      </returns>
    </member>
    <member name="P:System.Data.Constraint.ConstraintName">
      <summary>
        <para>The name of a constraint in the <see cref="T:System.Data.ConstraintCollection" />
.</para>
      </summary>
    </member>
    <member name="P:System.Data.Constraint.Table">
      <summary>
        <para>Gets the <see cref="T:System.Data.DataTable" /> to which the constraint applies.</para>
      </summary>
    </member>
    <member name="P:System.Data.Constraint.ExtendedProperties">
      <summary>
        <para>Gets the collection of user-defined constraint properties.</para>
      </summary>
    </member>
    <member name="T:System.Data.ConstraintCollection">
      <summary>
        <para>Represents a collection of constraints for a <see cref="T:System.Data.DataTable" />
.</para>
      </summary>
    </member>
    <member name="M:System.Data.ConstraintCollection.Add(System.Data.Constraint)">
      <summary>
        <para> Adds
      the specified <see cref="T:System.Data.Constraint" /> object to the collection.</para>
      </summary>
      <param name="constraint">The <see langword="Constraint" /> to add.</param>
      <returns>
        <para>A new <see cref="T:System.Data.UniqueConstraint" /> or <see cref="T:System.Data.ForeignKeyConstraint" /> .</para>
      </returns>
    </member>
    <member name="M:System.Data.ConstraintCollection.Add(System.String,System.Data.DataColumn[],System.Boolean)">
      <summary>
        <para>Constructs a new <see cref="T:System.Data.UniqueConstraint" /> with the
   specified name, array of <see cref="T:System.Data.DataColumn" /> objects, and value
   indicating whether the columns are primary
   keys, and adds it to the collection.</para>
      </summary>
      <param name="name">The name of the <see cref="T:System.Data.UniqueConstraint" />.</param>
      <param name="columns">An array of <see cref="T:System.Data.DataColumn" /> objects to which the constraint applies.</param>
      <param name="primaryKey">
        <see langword="true" /> if the columns are primary key columns; otherwise, <see langword="false" />.</param>
      <returns>
        <para>A new <see cref="T:System.Data.UniqueConstraint" />.</para>
      </returns>
    </member>
    <member name="M:System.Data.ConstraintCollection.Add(System.String,System.Data.DataColumn,System.Boolean)">
      <summary>
        <para>Constructs a new <see cref="T:System.Data.UniqueConstraint" />with the specified
   name, <see cref="T:System.Data.DataColumn" />, and value indicating whether the column is a
   primary key, and adds it to the collection.</para>
      </summary>
      <param name="name">The name of the <see langword="UniqueConstraint" />.</param>
      <param name="column">The <see cref="T:System.Data.DataColumn" /> to which the constraint applies.</param>
      <param name="primaryKey">
        <see langword="true" /> if the column is a primary key column; otherwise, <see langword="false" />.</param>
      <returns>
        <para>A new <see langword="UniqueConstraint" />.</para>
      </returns>
    </member>
    <member name="M:System.Data.ConstraintCollection.Add(System.String,System.Data.DataColumn,System.Data.DataColumn)">
      <summary>
        <para> Constructs a new <see cref="T:System.Data.ForeignKeyConstraint" /> with the
   specified name, parent column, and child column, and adds the constraint to the collection.</para>
      </summary>
      <param name="name">The name of the <see cref="T:System.Data.ForeignKeyConstraint" />.</param>
      <param name="primaryKeyColumn">The primary key, or parent, <see cref="T:System.Data.DataColumn" />. </param>
      <param name="foreignKeyColumn">The foreign key, or child, <see cref="T:System.Data.DataColumn" />.</param>
      <returns>
        <para>A new <see cref="T:System.Data.ForeignKeyConstraint" />.</para>
      </returns>
    </member>
    <member name="M:System.Data.ConstraintCollection.Add(System.String,System.Data.DataColumn[],System.Data.DataColumn[])">
      <summary>
        <para>Constructs a new <see cref="T:System.Data.ForeignKeyConstraint" />, with the specified arrays of parent columns and
   child columns, and adds the constraint to the collection.</para>
      </summary>
      <param name="name">The name of the <see cref="T:System.Data.ForeignKeyConstraint" />.</param>
      <param name="primaryKeyColumns">An array of <see cref="T:System.Data.DataColumn" /> objects that are the primary key, or parent, columns. </param>
      <param name="foreignKeyColumns">An array of <see cref="T:System.Data.DataColumn" /> objects that are the foreign key, or child, columns.</param>
      <returns>
        <para>A new <see cref="T:System.Data.ForeignKeyConstraint" />.</para>
      </returns>
    </member>
    <member name="M:System.Data.ConstraintCollection.AddRange(System.Data.Constraint[])">
      <summary>
        <para> Copies the elements of the specified <see cref="T:System.Data.ConstraintCollection" />
array to the end of the collection.</para>
      </summary>
      <param name="constraints">An array of <see cref="T:System.Data.ConstraintCollection" /> objects to add to the collection.</param>
    </member>
    <member name="M:System.Data.ConstraintCollection.CanRemove(System.Data.Constraint)">
      <summary>
        <para>Indicates if a <see cref="T:System.Data.Constraint" /> can be removed.</para>
      </summary>
      <param name="constraint">The <see cref="T:System.Data.Constraint" /> to be tested for removal from the collection.</param>
      <returns>
        <para>Generates an exception if the <see cref="T:System.Data.Constraint" /> cannot
   be removed from collection. Otherwise, <see langword="true " />if the <see cref="T:System.Data.Constraint" /> can be removed.</para>
      </returns>
    </member>
    <member name="M:System.Data.ConstraintCollection.Clear">
      <summary>
        <para>Clears the collection of any <see cref="T:System.Data.Constraint" />
objects.</para>
      </summary>
    </member>
    <member name="M:System.Data.ConstraintCollection.Contains(System.String)">
      <summary>
        <para>Indicates whether the <see cref="T:System.Data.Constraint" /> object specified by name exists in the collection.</para>
      </summary>
      <param name="name">The <see cref="P:System.Data.Constraint.ConstraintName" /> of the constraint.</param>
      <returns>
        <para>
          <see langword="true " />if the collection contains the
   specified constraint; otherwise, <see langword="false" /> .</para>
      </returns>
    </member>
    <member name="M:System.Data.ConstraintCollection.IndexOf(System.Data.Constraint)">
      <summary>
        <para>Gets the index of the specified <see cref="T:System.Data.Constraint" /> .</para>
      </summary>
      <param name="constraint">The <see cref="T:System.Data.Constraint" /> to search for.</param>
      <returns>
        <para>The zero-based index of the <see cref="T:System.Data.Constraint" /> if it is in the collection; otherwise, -1.</para>
      </returns>
    </member>
    <member name="M:System.Data.ConstraintCollection.IndexOf(System.String)">
      <summary>
        <para>Gets the index of the <see cref="T:System.Data.Constraint" /> specified by name.</para>
      </summary>
      <param name="constraintName">The name of the <see cref="T:System.Data.Constraint" /> .</param>
      <returns>
        <para>The index of the <see cref="T:System.Data.Constraint" /> if it is
   in the collection; otherwise, -1.</para>
      </returns>
    </member>
    <member name="M:System.Data.ConstraintCollection.OnCollectionChanged(System.ComponentModel.CollectionChangeEventArgs)">
      <summary>
        <para>Raises the <see cref="E:System.Data.ConstraintCollection.CollectionChanged" /> event.</para>
      </summary>
      <param name="ccevent">A <see cref="T:System.ComponentModel.CollectionChangeEventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.Data.ConstraintCollection.Remove(System.Data.Constraint)">
      <summary>
        <para> Removes the specified <see cref="T:System.Data.Constraint" />
from the collection.</para>
      </summary>
      <param name="constraint">The <see cref="T:System.Data.Constraint" /> to remove.</param>
    </member>
    <member name="M:System.Data.ConstraintCollection.RemoveAt(System.Int32)">
      <summary>
        <para>Removes the <see cref="T:System.Data.Constraint" /> object at the specified index from the
   collection.</para>
      </summary>
      <param name="index">The index of the <see cref="T:System.Data.Constraint" /> to remove.</param>
    </member>
    <member name="M:System.Data.ConstraintCollection.Remove(System.String)">
      <summary>
        <para>Removes the <see cref="T:System.Data.Constraint" /> object specified by name from the collection.</para>
      </summary>
      <param name="name">The name of the <see cref="T:System.Data.Constraint" /> to remove.</param>
    </member>
    <member name="P:System.Data.ConstraintCollection.List">
      <summary>
        <para>Gets the list of <see cref="T:System.Data.Constraint" /> objects contained by the collection.</para>
      </summary>
    </member>
    <member name="P:System.Data.ConstraintCollection.Item(System.Int32)">
      <summary>
        <para>Gets the <see cref="T:System.Data.Constraint" />
from the collection at the specified index.</para>
      </summary>
      <param name="index">The index of the constraint to return.</param>
    </member>
    <member name="P:System.Data.ConstraintCollection.Item(System.String)">
      <summary>
        <para>Gets the <see cref="T:System.Data.Constraint" /> from the collection with the specified name.</para>
      </summary>
      <param name="name">The <see cref="P:System.Data.Constraint.ConstraintName" /> of the constraint to return.</param>
    </member>
    <member name="E:System.Data.ConstraintCollection.CollectionChanged">
      <summary>
        <para>Occurs whenever the <see cref="T:System.Data.ConstraintCollection" /> is changed as a result 
   of <see cref="T:System.Data.Constraint" /> objects being added or
   removed.</para>
      </summary>
    </member>
    <member name="M:System.Data.ConstraintConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>
        <para>Gets a value indicating whether this converter can
      convert an object to the given destination type using the context.</para>
      </summary>
      <param name="context">
        <para>An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context. </para>
      </param>
      <param name="destinationType">A <see cref="T:System.Type" /> that represents the type to convert to.</param>
      <returns>
        <para>
          <see langword="true " />if this converter can perform the conversion; otherwise,
<see langword="false" />. </para>
      </returns>
    </member>
    <member name="M:System.Data.ConstraintConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>
      Converts the given object to another type.  The most common types to convert
      are to and from a string object.  The default implementation will make a call
      to ToString on the object if the object is valid and if the destination
      type is string.  If this cannot convert to the desitnation type, this will
      throw a NotSupportedException.
 </summary>
      <param name="context">
      A formatter context.  This object can be used to extract additional information
      about the environment this converter is being invoked from.  This may be null,
      so you should always check.  Also, properties on the context object may also
      return null.
 </param>
      <param name="culture">
     An optional culture info.  If not supplied the current culture is assumed.
 </param>
      <param name="value">
      The object to convert.
 </param>
      <param name="destinationType">
      The type to convert the object to.
 </param>
      <returns>
      The converted object.
 </returns>
    </member>
    <member name="M:System.Data.DataCategoryAttribute.#ctor(System.String)">
      <summary>
        <para>
       Initializes a new instance of the <see cref="T:System.ComponentModel.CategoryAttribute" /> class.
    </para>
      </summary>
      <param name="category">
    The name of the category.
 </param>
    </member>
    <member name="M:System.Data.DataCategoryAttribute.GetLocalizedString(System.String)">
      <summary>
     This method is called the first time the category property
     is accessed.  It provides a way to lookup a localized string for
     the given category.  Classes may override this to add their
     own localized names to categories.  If a localized string is
     available for the given value, the method should return it.
     Otherwise, it should return null.
 </summary>
      <param name="value">
     The value of the string.
 </param>
    </member>
    <member name="T:System.Data.DataColumn">
      <summary>
        <para>Represents the schema of a column in a <see cref="T:System.Data.DataTable" />.</para>
      </summary>
    </member>
    <member name="M:System.Data.DataColumn.#ctor">
      <summary>
        <para>Initializes a new instance of a <see cref="T:System.Data.DataColumn" />
class.</para>
      </summary>
    </member>
    <member name="M:System.Data.DataColumn.#ctor(System.String)">
      <summary>
        <para>Inititalizes a new instance of the <see cref="T:System.Data.DataColumn" /> class
    using the specified column name.</para>
      </summary>
      <param name="columnName">A string that represents the name of the column to be created. If set to <see langword="null" /> or an empty string (""), a default name will be given when added to the columns collection.</param>
    </member>
    <member name="M:System.Data.DataColumn.#ctor(System.String,System.Type)">
      <summary>
        <para>Inititalizes a new instance of the <see cref="T:System.Data.DataColumn" /> class
    using the specified column name and data type.</para>
      </summary>
      <param name="columnName">A string that represents the name of the column to be created. If set to <see langword="null" /> or an empty string (""), a default name will be given when added to the columns collection.</param>
      <param name="dataType">A supported <see cref="P:System.Data.DataColumn.DataType" /> .</param>
    </member>
    <member name="M:System.Data.DataColumn.#ctor(System.String,System.Type,System.String)">
      <summary>
        <para>Initializes a new instance
       of the <see cref="T:System.Data.DataColumn" /> class
       using the specified name, data type, and expression.</para>
      </summary>
      <param name="columnName">A string that represents the name of the column to be created. If set to <see langword="null" /> or an empty string (""), a default name will be given when added to the columns collection.</param>
      <param name="dataType">A supported <see cref="P:System.Data.DataColumn.DataType" /> .</param>
      <param name="expr">The expression used to create this column. For more details, see the <see cref="P:System.Data.DataColumn.Expression" /> property.</param>
    </member>
    <member name="M:System.Data.DataColumn.#ctor(System.String,System.Type,System.String,System.Data.MappingType)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.DataColumn" /> class
   using
   the specified name, data type, expression, and value that determines whether the
   column is an attribute.</para>
      </summary>
      <param name="columnName">A string that represents the name of the column to be created. If set to <see langword="null" /> or an empty string (""), a default name will be given when added to the columns collection.</param>
      <param name="dataType">A supported <see cref="P:System.Data.DataColumn.DataType" /> .</param>
      <param name="expr">The expression used to create this column. For more details, see the <see cref="P:System.Data.DataColumn.Expression" /> property.</param>
      <param name="type">One of the <see cref="T:System.Data.MappingType" /> values.</param>
    </member>
    <member name="M:System.Data.DataColumn.OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs)">
      <summary>
        <para>Raises the <see cref="M:System.Data.DataColumn.OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs)" /> event.</para>
      </summary>
      <param name="pcevent">A <see cref="T:System.ComponentModel.PropertyChangedEventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Data.DataColumn.RaisePropertyChanging(System.String)">
      <summary>
        <para>Sends notification that the specified <see cref="T:System.Data.DataColumn" /> property is about to change.</para>
      </summary>
      <param name="name">The name of the property that is about to change.</param>
    </member>
    <member name="M:System.Data.DataColumn.ToString">
      <summary>
        <para>Gets the <see cref="P:System.Data.DataColumn.Expression" /> of the column, if one exists.</para>
      </summary>
      <returns>
        <para>The <see cref="P:System.Data.DataColumn.Expression" /> value, if the property is set;
    otherwise, the <see cref="P:System.Data.DataColumn.ColumnName" />
    property.</para>
      </returns>
    </member>
    <member name="P:System.Data.DataColumn.AllowDBNull">
      <summary>
        <para>Gets or sets a value indicating whether null
      values are
      allowed in this column for rows belonging to the table.</para>
      </summary>
    </member>
    <member name="P:System.Data.DataColumn.AutoIncrement">
      <summary>
        <para>Gets or
      sets a value indicating whether the column automatically increments the value of the column for new
      rows added to the table.</para>
      </summary>
    </member>
    <member name="P:System.Data.DataColumn.AutoIncrementSeed">
      <summary>
        <para>Gets
       or sets the starting value for a column that has its
    <see cref="P:System.Data.DataColumn.AutoIncrement" /> property 
       set to <see langword="true" />
       .</para>
      </summary>
    </member>
    <member name="P:System.Data.DataColumn.AutoIncrementStep">
      <summary>
        <para>Gets or sets the increment used by a column with its <see cref="P:System.Data.DataColumn.AutoIncrement" />
 property set to <see langword="true" />
 .</para>
      </summary>
    </member>
    <member name="P:System.Data.DataColumn.Caption">
      <summary>
        <para>Gets or sets
      the caption for the column.</para>
      </summary>
    </member>
    <member name="P:System.Data.DataColumn.ColumnName">
      <summary>
        <para>Gets or sets the name of the column in the <see cref="T:System.Data.DataColumnCollection" />.</para>
      </summary>
    </member>
    <member name="P:System.Data.DataColumn.Prefix">
      <summary>
        <para>Gets or sets an XML prefix that aliases the namespace of the <see cref="T:System.Data.DataTable" />.</para>
      </summary>
    </member>
    <member name="P:System.Data.DataColumn.DataType">
      <summary>
        <para>Gets or sets the type of
      data stored in the column.</para>
      </summary>
    </member>
    <member name="P:System.Data.DataColumn.DefaultValue">
      <summary>
        <para>Gets or sets the default value for the
      column when creating new rows.</para>
      </summary>
    </member>
    <member name="P:System.Data.DataColumn.Expression">
      <summary>
        <para> Gets
      or sets the expresssion used to filter rows, calculate the values in a
      column, or create an aggregate column.</para>
      </summary>
    </member>
    <member name="P:System.Data.DataColumn.ExtendedProperties">
      <summary>
        <para>Gets the collection of custom user information.</para>
      </summary>
    </member>
    <member name="P:System.Data.DataColumn.MaxLength">
      <summary>
        <para>Gets or sets the maximum length of a text column.</para>
      </summary>
    </member>
    <member name="P:System.Data.DataColumn.Namespace">
      <summary>
        <para>Gets or sets the namespace of the <see cref="T:System.Data.DataColumn" />.</para>
      </summary>
    </member>
    <member name="P:System.Data.DataColumn.Ordinal">
      <summary>
        <para>Gets the position of the column in the <see cref="T:System.Data.DataColumnCollection" />
collection.</para>
      </summary>
    </member>
    <member name="P:System.Data.DataColumn.ReadOnly">
      <summary>
        <para>Gets or sets a value
      indicating whether the column allows changes once a row has been added to the table.</para>
      </summary>
    </member>
    <member name="P:System.Data.DataColumn.Table">
      <summary>
        <para>Gets the <see cref="T:System.Data.DataTable" /> to which the column belongs to.</para>
      </summary>
    </member>
    <member name="P:System.Data.DataColumn.Unique">
      <summary>
        <para>Gets or sets a value indicating whether the values in each row of the column must be unique.</para>
      </summary>
    </member>
    <member name="P:System.Data.DataColumn.ColumnMapping">
      <summary>
        <para>Gets or sets the <see cref="T:System.Data.MappingType" /> of the column.</para>
      </summary>
    </member>
    <member name="T:System.Data.DataColumnChangeEventArgs">
      <summary>
        <para> Provides data for the <see cref="E:System.Data.DataTable.ColumnChanging" /> event.
   </para>
      </summary>
    </member>
    <member name="M:System.Data.DataColumnChangeEventArgs.#ctor(System.Data.DataRow,System.Data.DataColumn,System.Object)">
      <summary>
        <para> Initializes a new instance of the <see cref="T:System.Data.DataColumnChangeEventArgs" />
class.</para>
      </summary>
      <param name="row">The <see cref="T:System.Data.DataRow" /> of the column with the changing value. </param>
      <param name="column">The <see cref="T:System.Data.DataColumn" /> with the changing value. </param>
      <param name=" value">The new value. </param>
    </member>
    <member name="P:System.Data.DataColumnChangeEventArgs.Column">
      <summary>
        <para> Gets the <see cref="T:System.Data.DataColumn" /> with a changing value.</para>
      </summary>
    </member>
    <member name="P:System.Data.DataColumnChangeEventArgs.Row">
      <summary>
        <para> Gets the <see cref="T:System.Data.DataRow" /> of the column with a changing value.</para>
      </summary>
    </member>
    <member name="P:System.Data.DataColumnChangeEventArgs.ProposedValue">
      <summary>
        <para>Gets or sets the proposed new
      value for the column.</para>
      </summary>
    </member>
    <member name="T:System.Data.DataColumnChangeEventHandler">
      <summary>
        <para>Represents the method that will handle the the <see cref="E:System.Data.DataTable.ColumnChanging" /> event.</para>
      </summary>
      <param name="sender">The source of the event.</param>
      <param name="e">A <see cref="T:System.Data.DataColumnChangeEventArgs" /> that contains the event data.</param>
    </member>
    <member name="T:System.Data.DataColumnCollection">
      <summary>
        <para>Represents a collection of <see cref="T:System.Data.DataColumn" />
objects for a <see cref="T:System.Data.DataTable" />.</para>
      </summary>
    </member>
    <member name="M:System.Data.DataColumnCollection.Add(System.Data.DataColumn)">
      <summary>
        <para>Creates and adds the specified <see cref="T:System.Data.DataColumn" /> object 
   to the <see cref="T:System.Data.DataColumnCollection" />.</para>
      </summary>
      <param name="column">The <see cref="T:System.Data.DataColumn" /> to add.</param>
    </member>
    <member name="M:System.Data.DataColumnCollection.AddRange(System.Data.DataColumn[])">
      <summary>
        <para>Copies the elements of the specified <see cref="T:System.Data.DataColumn" /> array to 
   the end of the collection.</para>
      </summary>
      <param name="columns">The array of <see cref="T:System.Data.DataColumn" /> objects to add to the collection.</param>
    </member>
    <member name="M:System.Data.DataColumnCollection.Add(System.String,System.Type,System.String)">
      <summary>
        <para> Creates and adds a <see cref="T:System.Data.DataColumn" /> object 
   with the specified name, type, and expression to the <see cref="T:System.Data.DataColumnCollection" />.</para>
      </summary>
      <param name="columnName">The name to use when creating the column.</param>
      <param name="type">The <see cref="P:System.Data.DataColumn.DataType" /> of the new column.</param>
      <param name="expression">The expression to assign to the <see cref="P:System.Data.DataColumn.Expression" /> property.</param>
      <returns>
        <para>The newly created <see cref="T:System.Data.DataColumn" />
.</para>
      </returns>
    </member>
    <member name="M:System.Data.DataColumnCollection.Add(System.String,System.Type)">
      <summary>
        <para> Creates and adds a <see cref="T:System.Data.DataColumn" /> object 
   with the
   specified name and type to the <see cref="T:System.Data.DataColumnCollection" />.</para>
      </summary>
      <param name="columnName">The <see cref="P:System.Data.DataColumn.ColumnName" /> to use when cretaing the column.</param>
      <param name="type">The <see cref="P:System.Data.DataColumn.DataType" /> of the new column.</param>
      <returns>
        <para>The newly created <see cref="T:System.Data.DataColumn" />
.</para>
      </returns>
    </member>
    <member name="M:System.Data.DataColumnCollection.Add(System.String)">
      <summary>
        <para> Creates and adds a <see cref="T:System.Data.DataColumn" /> object 
   with the specified name to the <see cref="T:System.Data.DataColumnCollection" />.</para>
      </summary>
      <param name="columnName">The name of the column.</param>
      <returns>
        <para>The newly created <see cref="T:System.Data.DataColumn" />.</para>
      </returns>
    </member>
    <member name="M:System.Data.DataColumnCollection.Add">
      <summary>
        <para> Creates and adds a <see cref="T:System.Data.DataColumn" /> object to the <see cref="T:System.Data.DataColumnCollection" />.</para>
      </summary>
      <returns>
        <para>The newly created <see cref="T:System.Data.DataColumn" /> .</para>
      </returns>
    </member>
    <member name="M:System.Data.DataColumnCollection.CanRemove(System.Data.DataColumn)">
      <summary>
        <para> Checks whether
      a given column can be removed from the collection.</para>
      </summary>
      <param name="column">A <see cref="T:System.Data.DataColumn" /> in the collection.</param>
      <returns>
        <para>
          <see langword="true" />
if the column can be
removed; otherwise, <see langword="false" />
.</para>
      </returns>
    </member>
    <member name="M:System.Data.DataColumnCollection.Clear">
      <summary>
        <para>
       Clears the collection of any columns.
    </para>
      </summary>
    </member>
    <member name="M:System.Data.DataColumnCollection.Contains(System.String)">
      <summary>
        <para>Checks whether the collection contains a column with the specified name.</para>
      </summary>
      <param name="name">The <see cref="P:System.Data.DataColumn.ColumnName" /> of the column to check for.</param>
      <returns>
        <para>
          <see langword="true " />if a column exists with this
   name; otherwise, <see langword="false" /> .</para>
      </returns>
    </member>
    <member name="M:System.Data.DataColumnCollection.IndexOf(System.Data.DataColumn)">
      <summary>
        <para>Gets the index of
      a column specified by name.</para>
      </summary>
      <param name="column">The name of the column to return.</param>
      <returns>
        <para>The index of the column specified by
   <paramref name="column" />
   if it is found; otherwise, -1.</para>
      </returns>
    </member>
    <member name="M:System.Data.DataColumnCollection.IndexOf(System.String)">
      <summary>
        <para>Gets the index of the column with the given name (the name is not case sensitive).</para>
      </summary>
      <param name="columnName">The name of the column to find.</param>
      <returns>
        <para>The zero-based index of the column with the specified name, or -1 if the column doesn't exist in the collection.</para>
      </returns>
    </member>
    <member name="M:System.Data.DataColumnCollection.OnCollectionChanged(System.ComponentModel.CollectionChangeEventArgs)">
      <summary>
        <para>
       Raises the <see cref="M:System.Data.DataColumnCollection.OnCollectionChanged(System.ComponentModel.CollectionChangeEventArgs)" /> event.
    </para>
      </summary>
      <param name="ccevent">
    A <see cref="T:System.ComponentModel.CollectionChangeEventArgs" /> that contains the event data.
 </param>
    </member>
    <member name="M:System.Data.DataColumnCollection.OnCollectionChanging(System.ComponentModel.CollectionChangeEventArgs)">
      <summary>
        <para> Raises the <see cref="M:System.Data.DataColumnCollection.OnCollectionChanging(System.ComponentModel.CollectionChangeEventArgs)" /> event.
   </para>
      </summary>
      <param name="ccevent">A <see cref="T:System.ComponentModel.CollectionChangeEventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Data.DataColumnCollection.Remove(System.Data.DataColumn)">
      <summary>
        <para>Removes the specified <see cref="T:System.Data.DataColumn" /> object from the collection.</para>
      </summary>
      <param name="column">The <see cref="T:System.Data.DataColumn" /> to remove.</param>
    </member>
    <member name="M:System.Data.DataColumnCollection.RemoveAt(System.Int32)">
      <summary>
        <para>Removes the
      column at the specified index from the collection.</para>
      </summary>
      <param name="index">The index of the column to remove.</param>
    </member>
    <member name="M:System.Data.DataColumnCollection.Remove(System.String)">
      <summary>
        <para>Removes the <see cref="T:System.Data.DataColumn" /> object with the specified name from the collection.</para>
      </summary>
      <param name="name">The name of the column to remove.</param>
    </member>
    <member name="P:System.Data.DataColumnCollection.List">
      <summary>
        <para>Gets a list of the <see cref="T:System.Data.DataColumnCollection" /> items.</para>
      </summary>
    </member>
    <member name="P:System.Data.DataColumnCollection.Item(System.Int32)">
      <summary>
        <para>Gets the <see cref="T:System.Data.DataColumn" />
from the collection at the specified index.</para>
      </summary>
      <param name="index">The zero-based index of the column to return.</param>
    </member>
    <member name="P:System.Data.DataColumnCollection.Item(System.String)">
      <summary>
        <para>Gets the <see cref="T:System.Data.DataColumn" /> from the collection with the specified name.</para>
      </summary>
      <param name="name">The <see cref="P:System.Data.DataColumn.ColumnName" /> of the column to return.</param>
    </member>
    <member name="E:System.Data.DataColumnCollection.CollectionChanged">
      <summary>
        <para>Occurs when the columns collection changes, either by adding or removing a column.</para>
      </summary>
    </member>
    <member name="M:System.Data.DataColumnPropertyDescriptor.Equals(System.Object)">
    </member>
    <member name="M:System.Data.DataColumnPropertyDescriptor.GetHashCode">
    </member>
    <member name="M:System.Data.DataColumnPropertyDescriptor.CanResetValue(System.Object)">
    </member>
    <member name="M:System.Data.DataColumnPropertyDescriptor.GetValue(System.Object)">
    </member>
    <member name="M:System.Data.DataColumnPropertyDescriptor.ResetValue(System.Object)">
    </member>
    <member name="M:System.Data.DataColumnPropertyDescriptor.SetValue(System.Object,System.Object)">
    </member>
    <member name="M:System.Data.DataColumnPropertyDescriptor.ShouldSerializeValue(System.Object)">
    </member>
    <member name="P:System.Data.DataColumnPropertyDescriptor.Column">
    </member>
    <member name="P:System.Data.DataColumnPropertyDescriptor.ComponentType">
    </member>
    <member name="P:System.Data.DataColumnPropertyDescriptor.IsReadOnly">
    </member>
    <member name="P:System.Data.DataColumnPropertyDescriptor.PropertyType">
    </member>
    <member name="P:System.Data.DataColumnPropertyDescriptor.IsBrowsable">
    </member>
    <member name="T:System.Data.DataException">
      <summary>
        <para>Represents the exception that is thrown when errors are generated using ADO.NET
      components.</para>
      </summary>
    </member>
    <member name="M:System.Data.DataException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.DataException" /> class with the specified serialization information 
   and context.</para>
      </summary>
      <param name="info">The data necessary to serialize or deserialize an object.</param>
      <param name="context">Description of the source and destination of the specified serialized stream.</param>
    </member>
    <member name="M:System.Data.DataException.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.DataException" /> class. This is the default constructor.</para>
      </summary>
    </member>
    <member name="M:System.Data.DataException.#ctor(System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.DataException" /> class with the specified string.</para>
      </summary>
      <param name="s">The string to display when the exception is thrown.</param>
    </member>
    <member name="M:System.Data.DataException.#ctor(System.String,System.Exception)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.DataException" /> class with the specified string and inner 
   exception.</para>
      </summary>
      <param name="s">The string to display when the exception is thrown.</param>
      <param name="innerException">A reference to an inner exception.</param>
    </member>
    <member name="T:System.Data.ConstraintException">
      <summary>
        <para>Represents the exception that is thrown when attempting an action that violates a constraint.</para>
      </summary>
    </member>
    <member name="M:System.Data.ConstraintException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.ConstraintException" /> class using the 
   specified serialization and stream context.</para>
      </summary>
      <param name="info">The data necessary to serialize or deserialize an object.</param>
      <param name="context">Description of the source and destination of the specified serialized stream.</param>
    </member>
    <member name="M:System.Data.ConstraintException.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.ConstraintException" /> class. This is the 
   default constructor.</para>
      </summary>
    </member>
    <member name="M:System.Data.ConstraintException.#ctor(System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.ConstraintException" /> class with the specified string.</para>
      </summary>
      <param name="s">The string to display when the exception is thrown.</param>
    </member>
    <member name="T:System.Data.DeletedRowInaccessibleException">
      <summary>
        <para> Represents the exception that is thrown when an action
      is attempted on a <see cref="T:System.Data.DataRow" />
      that has been deleted.</para>
      </summary>
    </member>
    <member name="M:System.Data.DeletedRowInaccessibleException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.DeletedRowInaccessibleException" /> class with 
   serialization information.</para>
      </summary>
      <param name="info">The data necessary to serialize or deserialize an object.</param>
      <param name="context">Description of the source and destination of the specified serialized stream.</param>
    </member>
    <member name="M:System.Data.DeletedRowInaccessibleException.#ctor">
      <summary>
        <para>
       Initializes a new instance of the <see cref="T:System.Data.DeletedRowInaccessibleException" /> class.
    </para>
      </summary>
    </member>
    <member name="M:System.Data.DeletedRowInaccessibleException.#ctor(System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.DeletedRowInaccessibleException" /> class with the specified string.</para>
      </summary>
      <param name="s">The string to display when the exception is thrown.</param>
    </member>
    <member name="T:System.Data.DuplicateNameException">
      <summary>
        <para>Represents the exception that is thrown when a duplicate database object name
      is encountered during an add operation in a <see cref="T:System.Data.DataSet" /> -related object.</para>
      </summary>
    </member>
    <member name="M:System.Data.DuplicateNameException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.DuplicateNameException" /> class with 
   serialization information.</para>
      </summary>
      <param name="info">The data necessary to serialize or deserialize an object.</param>
      <param name="context">Description of the source and destination of the specified serialized stream.</param>
    </member>
    <member name="M:System.Data.DuplicateNameException.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.DuplicateNameException" /> class.</para>
      </summary>
    </member>
    <member name="M:System.Data.DuplicateNameException.#ctor(System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.DuplicateNameException" /> class with the 
   specified
   string.</para>
      </summary>
      <param name="s">The string to display when the exception is thrown.</param>
    </member>
    <member name="T:System.Data.InRowChangingEventException">
      <summary>
        <para> Represents the exception that is 
      thrown when when calling the <see cref="M:System.Data.DataRow.EndEdit" /> method within the
   <see cref="E:System.Data.DataTable.RowChanging" /> event.</para>
      </summary>
    </member>
    <member name="M:System.Data.InRowChangingEventException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.InRowChangingEventException" /> class with 
   serialization information.</para>
      </summary>
      <param name="info">The data necessary to serialize or deserialize an object.</param>
      <param name="context">Description of the source and destination of the specified serialized stream.</param>
    </member>
    <member name="M:System.Data.InRowChangingEventException.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.InRowChangingEventException" /> class.</para>
      </summary>
    </member>
    <member name="M:System.Data.InRowChangingEventException.#ctor(System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.InRowChangingEventException" /> class with the 
   specified string.</para>
      </summary>
      <param name="s">The string to display when the exception is thrown.</param>
    </member>
    <member name="T:System.Data.InvalidConstraintException">
      <summary>
        <para> Represents the exception that
      is thrown when incorrectly attempting to create or access a relation.</para>
      </summary>
    </member>
    <member name="M:System.Data.InvalidConstraintException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.InvalidConstraintException" /> class with 
   serialization information.</para>
      </summary>
      <param name="info">The data necessary to serialize or deserialize an object.</param>
      <param name="context">Description of the source and destination of the specified serialized stream.</param>
    </member>
    <member name="M:System.Data.InvalidConstraintException.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.InvalidConstraintException" /> class.</para>
      </summary>
    </member>
    <member name="M:System.Data.InvalidConstraintException.#ctor(System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.InvalidConstraintException" /> class with the 
   specified string.</para>
      </summary>
      <param name="s">The string to display when the exception is thrown.</param>
    </member>
    <member name="T:System.Data.MissingPrimaryKeyException">
      <summary>
        <para>Represents the exception that is thrown when attempting to
      access a row in a table that has no primary key.</para>
      </summary>
    </member>
    <member name="M:System.Data.MissingPrimaryKeyException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.MissingPrimaryKeyException" /> class with
 serialization information.</para>
      </summary>
      <param name="info">The data necessary to serialize or deserialize an object.</param>
      <param name="context">A description of the source and destination of the specified serialized stream.</param>
    </member>
    <member name="M:System.Data.MissingPrimaryKeyException.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.MissingPrimaryKeyException" /> class.</para>
      </summary>
    </member>
    <member name="M:System.Data.MissingPrimaryKeyException.#ctor(System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.MissingPrimaryKeyException" /> class with the 
   specified string.</para>
      </summary>
      <param name="s">The string to display when the exception is thrown.</param>
    </member>
    <member name="T:System.Data.NoNullAllowedException">
      <summary>
        <para>Represents the exception that is thrown when attempting to 
      insert a null value into a column where <see cref="P:System.Data.DataColumn.AllowDBNull" /> is set to <see langword="false" />
      .</para>
      </summary>
    </member>
    <member name="M:System.Data.NoNullAllowedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.NoNullAllowedException" /> class with 
   serialization information.</para>
      </summary>
      <param name="info">The data necessary to serialize or deserialize an object.</param>
      <param name="context">Description of the source and destination of the specified serialized stream.</param>
    </member>
    <member name="M:System.Data.NoNullAllowedException.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.NoNullAllowedException" /> class.</para>
      </summary>
    </member>
    <member name="M:System.Data.NoNullAllowedException.#ctor(System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.NoNullAllowedException" /> class with the 
   specified string.</para>
      </summary>
      <param name="s">The string to display when the exception is thrown.</param>
    </member>
    <member name="T:System.Data.ReadOnlyException">
      <summary>
        <para>Represents the exception that is thrown when attempting to 
      change the value of a read-only column.</para>
      </summary>
    </member>
    <member name="M:System.Data.ReadOnlyException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.ReadOnlyException" /> class with 
   serialization information.</para>
      </summary>
      <param name="info">The data necessary to serialize or deserialize an object.</param>
      <param name="context">Description of the source and destination of the specified serialized stream.</param>
    </member>
    <member name="M:System.Data.ReadOnlyException.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.ReadOnlyException" /> class.</para>
      </summary>
    </member>
    <member name="M:System.Data.ReadOnlyException.#ctor(System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.ReadOnlyException" /> class with the 
   specified string.</para>
      </summary>
      <param name="s">The string to display when the exception is thrown.</param>
    </member>
    <member name="T:System.Data.RowNotInTableException">
      <summary>
        <para>Represents the exception that is thrown when trying to perform an operation on a <see cref="T:System.Data.DataRow" /> that is not
   in a <see cref="T:System.Data.DataTable" />.</para>
      </summary>
    </member>
    <member name="M:System.Data.RowNotInTableException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.RowNotInTableException" /> class with 
   serialization information.</para>
      </summary>
      <param name="info">The data necessary to serialize or deserialize an object.</param>
      <param name="context">Description of the source and destination of the specified serialized stream.</param>
    </member>
    <member name="M:System.Data.RowNotInTableException.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.RowNotInTableException" /> class.</para>
      </summary>
    </member>
    <member name="M:System.Data.RowNotInTableException.#ctor(System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.RowNotInTableException" /> class with the specified string.</para>
      </summary>
      <param name="s">The string to display when the exception is thrown.</param>
    </member>
    <member name="T:System.Data.VersionNotFoundException">
      <summary>
        <para>Represents the exception that is thrown when attempting to return a
      version of a <see cref="T:System.Data.DataRow" /> that has been deleted.</para>
      </summary>
    </member>
    <member name="M:System.Data.VersionNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.VersionNotFoundException" /> class with 
   serialization information.</para>
      </summary>
      <param name="info">The data necessary to serialize or deserialize an object.</param>
      <param name="context">Description of the source and destination of the specified serialized stream.</param>
    </member>
    <member name="M:System.Data.VersionNotFoundException.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.VersionNotFoundException" /> class.</para>
      </summary>
    </member>
    <member name="M:System.Data.VersionNotFoundException.#ctor(System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.VersionNotFoundException" /> class with the 
   specified string.</para>
      </summary>
      <param name="s">The string to display when the exception is thrown.</param>
    </member>
    <member name="M:System.Data.DataKey.#ctor(System.Data.DataColumn)">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Data.DataKey.#ctor(System.Data.DataColumn,System.Int32)">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Data.DataKey.#ctor(System.Data.DataColumn[])">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Data.DataKey.#ctor(System.Data.DataColumn[],System.Int32[])">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Data.DataKey.Equals(System.Object)">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Data.DataKey.GetHashCode">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Data.DataKey.ColumnsEqual(System.Data.DataKey)">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Data.DataKey.RecordsEqual(System.Int32,System.Int32)">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Data.DataKey.ContainsColumn(System.Data.DataColumn)">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Data.DataKey.GetDebugString">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="P:System.Data.DataKey.Columns">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="P:System.Data.DataKey.SortOrder">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="P:System.Data.DataKey.Table">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="T:System.Data.DataRelation">
      <summary>
        <para>Represents a parent/child relationship between two
   <see cref="T:System.Data.DataTable" /> objects.</para>
      </summary>
    </member>
    <member name="M:System.Data.DataRelation.#ctor(System.String,System.Data.DataColumn,System.Data.DataColumn)">
      <summary>
        <para> Initializes a new instance of the <see cref="T:System.Data.DataRelation" /> class using the specified <see cref="T:System.Data.DataRelation" /> name, and parent and child <see cref="T:System.Data.DataColumn" />
objects.</para>
      </summary>
      <param name="relationName">The name of the <see cref="T:System.Data.DataRelation" /> . If <see langword="null" /> or an empty string (""), a default name will be given when the created object is added to the <see cref="T:System.Data.DataRelationCollection" /> . </param>
      <param name="parentColumn">The parent <see cref="T:System.Data.DataColumn" /> in the relationship. </param>
      <param name="childColumn">The child <see cref="T:System.Data.DataColumn" /> in the relationship. </param>
    </member>
    <member name="M:System.Data.DataRelation.#ctor(System.String,System.Data.DataColumn,System.Data.DataColumn,System.Boolean)">
      <summary>
        <para> Initializes a new instance of the <see cref="T:System.Data.DataRelation" /> class using the specified name, parent and
   child <see cref="T:System.Data.DataColumn" /> objects, and a value
   indicating whether to create constraints.
   </para>
      </summary>
      <param name="relationName">The name of the relation. If <see langword="null" /> or an empty string (""), a default name will be given when the created object is added to the <see cref="T:System.Data.DataRelationCollection" /> . </param>
      <param name="parentColumn">The parent <see cref="T:System.Data.DataColumn" /> in the relation. </param>
      <param name="childColumn">The child <see cref="T:System.Data.DataColumn" /> in the relation. </param>
      <param name=" createConstraints">A value indicating whether constraints are created. <see langword="true" />, if constraints are created, otherwise, <see langword="false" />. </param>
    </member>
    <member name="M:System.Data.DataRelation.#ctor(System.String,System.Data.DataColumn[],System.Data.DataColumn[])">
      <summary>
        <para> Initializes a new instance of the <see cref="T:System.Data.DataRelation" /> class using the specified <see cref="T:System.Data.DataRelation" /> name
   and matched arrays of parent and child <see cref="T:System.Data.DataColumn" />
   objects.
   </para>
      </summary>
      <param name="relationName">The name of the relation. If <see langword="null" /> or an empty string (""), a default name will be given when the created object is added to the <see cref="T:System.Data.DataRelationCollection" /> . </param>
      <param name="parentColumns">An array of parent <see cref="T:System.Data.DataColumn" /> objects. </param>
      <param name="childColumns">An array of child <see cref="T:System.Data.DataColumn" /> objects. </param>
    </member>
    <member name="M:System.Data.DataRelation.#ctor(System.String,System.Data.DataColumn[],System.Data.DataColumn[],System.Boolean)">
      <summary>
        <para> Initializes a new instance of the <see cref="T:System.Data.DataRelation" /> class using the specified name, matched arrays of 
   parent and child <see cref="T:System.Data.DataColumn" />
   objects, and value indicating whether to create constraints.
   </para>
      </summary>
      <param name="relationName">The name of the relation. If <see langword="null" /> or an empty string (""), a default name will be given when the created object is added to the <see cref="T:System.Data.DataRelationCollection" /> . </param>
      <param name="parentColumns">An array of parent <see cref="T:System.Data.DataColumn" /> objects. </param>
      <param name="childColumns">An array of child <see cref="T:System.Data.DataColumn" /> objects. </param>
      <param name="createConstraints">A value indicating whether to create constraints. <see langword="true" />, if constraints are created, otherwise, <see langword="false" />. </param>
    </member>
    <member name="M:System.Data.DataRelation.#ctor(System.String,System.String,System.String,System.String[],System.String[],System.Boolean)">
      <summary>
        <para>This constructor is provided for design time support in 
      the Visual Studio .NET environment. Any <see cref="T:System.Data.DataRelation" /> object created by using this
      constructor must then be added to the collection via <see cref="M:System.Data.DataRelationCollection.AddRange(System.Data.DataRelation[])" />.
      Tables and columns with the specified names must exist at the time the method is called, or if <see cref="M:System.Data.DataTable.BeginInit" /> has been called
      prior to calling this constructor, the tables and columns with the specified names must exist at the time that <see cref="M:System.Data.DataTable.EndInit" /> is called.</para>
      </summary>
      <param name="relationName">The name of the relation. If <see langword="null" /> or an empty string (""), a default name will be given when the created object is added to the <see cref="T:System.Data.DataRelationCollection" /> . </param>
      <param name="parentTableName">
        <para>The name of the <see cref="T:System.Data.DataTable" /> that is the parent table of the relation.</para>
      </param>
      <param name="childTableName">
        <para>The name of the <see cref="T:System.Data.DataTable" /> that is the child table of the relation.</para>
      </param>
      <param name="parentColumnNames">
        <para>An array of <see cref="T:System.Data.DataColumn" /> object names in the parent <see cref="T:System.Data.DataTable" /> of the relation.</para>
      </param>
      <param name="childColumnNames">
        <para>An array of <see cref="T:System.Data.DataColumn" /> object namess in the child <see cref="T:System.Data.DataTable" /> of the relation.</para>
      </param>
      <param name="nested">A value indicating whether relationships are nested.</param>
    </member>
    <member name="M:System.Data.DataRelation.CheckStateForProperty">
      <summary>
        <para>Ensures that the <see cref="T:System.Data.DataRelation" /> is a valid object.</para>
      </summary>
    </member>
    <member name="M:System.Data.DataRelation.ToString">
      <summary>
        <para>Gets the <see cref="P:System.Data.DataRelation.RelationName" />, if one exists.</para>
      </summary>
      <returns>
        <para>The value of the <see cref="P:System.Data.DataRelation.RelationName" /> 
property.</para>
      </returns>
    </member>
    <member name="P:System.Data.DataRelation.ChildColumns">
      <summary>
        <para>Gets the child <see cref="T:System.Data.DataColumn" /> objectsof this relation.</para>
      </summary>
    </member>
    <member name="P:System.Data.DataRelation.ChildTable">
      <summary>
        <para>Gets the child table of this relation.</para>
      </summary>
    </member>
    <member name="P:System.Data.DataRelation.DataSet">
      <summary>
        <para>Gets the <see cref="T:System.Data.DataSet" /> to which the <see cref="T:System.Data.DataRelation" /> belongs.</para>
      </summary>
    </member>
    <member name="P:System.Data.DataRelation.ParentColumns">
      <summary>
        <para>Gets an array of <see cref="T:System.Data.DataColumn" /> objects that are the parent columns of 
   this <see cref="T:System.Data.DataRelation" /> .</para>
      </summary>
    </member>
    <member name="P:System.Data.DataRelation.ParentTable">
      <summary>
        <para>Gets the parent <see cref="T:System.Data.DataTable" /> of this <see cref="T:System.Data.DataRelation" /> .</para>
      </summary>
    </member>
    <member name="P:System.Data.DataRelation.RelationName">
      <summary>
        <para>Gets or sets the name used to retrieve
      a <see cref="T:System.Data.DataRelation" /> from the <see cref="T:System.Data.DataRelationCollection" />.</para>
      </summary>
    </member>
    <member name="P:System.Data.DataRelation.Nested">
      <summary>
        <para>Gets or sets a value indicating whether <see cref="T:System.Data.DataRelation" /> objects are nested.</para>
      </summary>
    </member>
    <member name="P:System.Data.DataRelation.ParentKeyConstraint">
      <summary>
        <para>Gets the <see cref="T:System.Data.UniqueConstraint" /> that ensures values in the parent column of a 
<see cref="T:System.Data.DataRelation" /> are unique.</para>
      </summary>
    </member>
    <member name="P:System.Data.DataRelation.ChildKeyConstraint">
      <summary>
        <para>Gets the <see cref="T:System.Data.ForeignKeyConstraint" /> for the relation.</para>
      </summary>
    </member>
    <member name="P:System.Data.DataRelation.ExtendedProperties">
      <summary>
        <para>Gets the collection that stores customized properties.</para>
      </summary>
    </member>
    <member name="T:System.Data.DataRelationCollection">
      <summary>
        <para>Represents the collection of <see cref="T:System.Data.DataRelation" />
objects for this<see cref="T:System.Data.DataSet" />.</para>
      </summary>
    </member>
    <member name="M:System.Data.DataRelationCollection.Add(System.Data.DataRelation)">
      <summary>
        <para> Adds a <see cref="T:System.Data.DataRelation" /> to the <see cref="T:System.Data.DataRelationCollection" />.</para>
      </summary>
      <param name="relation">The <see langword="DataRelation" /> to add to the collection.</param>
    </member>
    <member name="M:System.Data.DataRelationCollection.AddRange(System.Data.DataRelation[])">
      <summary>
        <para>Copies the elements of the specified <see cref="T:System.Data.DataRelation" /> array to
   the end of the collection.</para>
      </summary>
      <param name="relations">The array of <see cref="T:System.Data.DataRelation" /> objects to add to the collection.</param>
    </member>
    <member name="M:System.Data.DataRelationCollection.Add(System.String,System.Data.DataColumn[],System.Data.DataColumn[])">
      <summary>
        <para> Creates a <see cref="T:System.Data.DataRelation" /> with the
   specified name, and arrays of parent and child columns, and adds it to the collection.</para>
      </summary>
      <param name="name">The name of the <see langword="DataRelation" /> to create.</param>
      <param name="parentColumns">An array of parent <see cref="T:System.Data.DataColumn" /> objects.</param>
      <param name="childColumns">An array of child <see langword="DataColumn" /> objects.</param>
      <returns>
        <para>The created <see langword="DataRelation" />.</para>
      </returns>
    </member>
    <member name="M:System.Data.DataRelationCollection.Add(System.String,System.Data.DataColumn[],System.Data.DataColumn[],System.Boolean)">
      <summary>
        <para>Creates a <see cref="T:System.Data.DataRelation" /> with the specified name, arrays of parent and child columns, and
   value specifying whether to create a constraint, and adds it to the collection.</para>
      </summary>
      <param name="name">The name of the <see langword="DataRelation" /> to create.</param>
      <param name="parentColumns">An array of parent <see cref="T:System.Data.DataColumn" /> objects.</param>
      <param name="childColumns">An array of child <see langword="DataColumn" /> objects.</param>
      <param name="createConstraints">
        <see langword="true" /> to create a constraint; otherwise <see langword="false" /> .</param>
      <returns>
        <para>The created relation.</para>
      </returns>
    </member>
    <member name="M:System.Data.DataRelationCollection.Add(System.Data.DataColumn[],System.Data.DataColumn[])">
      <summary>
        <para> Creates a relation given the parameters and adds it to the collection. The name is
      defaulted. An ArgumentException is generated
      if this relation already belongs to this collection or belongs to another
      collection. An InvalidConstraintException is generated if the relation can't be created based on the
      parameters. The CollectionChanged event is raised if it succeeds.</para>
      </summary>
      <param name="parentColumns">parent columns of relation.</param>
      <param name="childColumns">child columns of relation.</param>
      <returns>
        <para>The created relation.</para>
      </returns>
    </member>
    <member name="M:System.Data.DataRelationCollection.Add(System.String,System.Data.DataColumn,System.Data.DataColumn)">
      <summary>
        <para>Creates a relation given the parameters and adds it to the collection.
      An ArgumentException is generated if this relation already belongs to
      this collection or belongs to another collection.
      A DuplicateNameException is generated if this collection already has a relation with the same
      name (case insensitive).
      An InvalidConstraintException is generated if the relation can't be created based on the parameters.
      The CollectionChanged event is raised if it succeeds.</para>
      </summary>
      <param name="name">The name of the relation.</param>
      <param name="parentColumn">parent column of relation.</param>
      <param name="childColumn">child column of relation.</param>
      <returns>
        <para>The created relation.</para>
      </returns>
    </member>
    <member name="M:System.Data.DataRelationCollection.Add(System.String,System.Data.DataColumn,System.Data.DataColumn,System.Boolean)">
      <summary>
        <para> Creates a relation given the parameters and adds it to the
      collection. An ArgumentException is generated if this relation already belongs
      to this collection or belongs to another
      collection. A DuplicateNameException is generated if this collection already has a relation with the
      same name (case
      insensitive). An InvalidConstraintException is generated if the relation can't be created based on the
      parameters. The CollectionChanged event is raised if it succeeds.</para>
      </summary>
      <param name="name">The name of the relation.</param>
      <param name="parentColumn">parent column of relation.</param>
      <param name="childColumn">child column of relation.</param>
      <param name="createConstraints">whether to create a constraints (default is <see langword="true" /> )</param>
      <returns>
        <para>The created relation.</para>
      </returns>
    </member>
    <member name="M:System.Data.DataRelationCollection.Add(System.Data.DataColumn,System.Data.DataColumn)">
      <summary>
        <para>Creates a relation given the parameters and adds it to the collection. The name is defaulted.
      An ArgumentException is generated if
      this relation already belongs to this collection or belongs to another collection.
      An InvalidConstraintException is generated if the relation can't be created based on the parameters.
      The CollectionChanged event is fired if it succeeds.</para>
      </summary>
      <param name="parentColumn">parent column of relation.</param>
      <param name="childColumn">child column of relation.</param>
      <returns>
        <para>The created relation.</para>
      </returns>
    </member>
    <member name="M:System.Data.DataRelationCollection.AddCore(System.Data.DataRelation)">
      <summary>
        <para>Performs verification on the table.</para>
      </summary>
      <param name="relation">The relation to check.</param>
    </member>
    <member name="M:System.Data.DataRelationCollection.Clear">
      <summary>
 Clears the collection of any relations.
 </summary>
    </member>
    <member name="M:System.Data.DataRelationCollection.Contains(System.String)">
      <summary>
        <para> Verifies whether a <see cref="T:System.Data.DataRelation" /> with the given name (case insensitive) exists in the collection.</para>
      </summary>
      <param name="name">The name of the relation to find.</param>
      <returns>
        <para>
          <see langword="true" />, if a relation with the specified 
   name exists; otherwise <see langword="false" /> .</para>
      </returns>
    </member>
    <member name="M:System.Data.DataRelationCollection.IndexOf(System.Data.DataRelation)">
      <summary>
        <para>Gets the index of the specified <see cref="T:System.Data.DataRelation" /> object.</para>
      </summary>
      <param name="relation">The relation to search for.</param>
      <returns>
        <para>The 0-based index of the relation, or -1 if the relation
      isn't found in the collection.</para>
      </returns>
    </member>
    <member name="M:System.Data.DataRelationCollection.IndexOf(System.String)">
      <summary>
        <para>Gets the index of the <see cref="T:System.Data.DataRelation" /> specified by name.</para>
      </summary>
      <param name="relationName">The name of the relation to find.</param>
      <returns>
        <para>The zero-based index of the relation with the specified name, or
      -1 if the relation doesn't exist in the collection.</para>
      </returns>
    </member>
    <member name="M:System.Data.DataRelationCollection.GetDataSet">
      <summary>
        <para>Gets the dataset for this collection.</para>
      </summary>
      <returns>
        <para>The dataSet.</para>
      </returns>
    </member>
    <member name="M:System.Data.DataRelationCollection.OnCollectionChanged(System.ComponentModel.CollectionChangeEventArgs)">
      <summary>
        <para> Raises the <see cref="M:System.Data.DataRelationCollection.OnCollectionChanged(System.ComponentModel.CollectionChangeEventArgs)" /> event.
   </para>
      </summary>
      <param name="ccevent">A <see cref="T:System.ComponentModel.CollectionChangeEventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Data.DataRelationCollection.OnCollectionChanging(System.ComponentModel.CollectionChangeEventArgs)">
      <summary>
        <para> Raises the <see cref="M:System.Data.DataRelationCollection.OnCollectionChanging(System.ComponentModel.CollectionChangeEventArgs)" /> event.
   </para>
      </summary>
      <param name="ccevent">A <see cref="T:System.ComponentModel.CollectionChangeEventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Data.DataRelationCollection.CanRemove(System.Data.DataRelation)">
      <summary>
        <para>Verifies whether the specified <see cref="T:System.Data.DataRelation" /> can be removed from the collection.</para>
      </summary>
      <param name="relation">The relation to perform the check against.</param>
      <returns>
        <para>
          <see langword="true" /> if the <see cref="T:System.Data.DataRelation" /> can be removed; otherwise, 
<see langword="false" />.</para>
      </returns>
    </member>
    <member name="M:System.Data.DataRelationCollection.Remove(System.Data.DataRelation)">
      <summary>
        <para>Removes the specified relation from the collection.
      An ArgumentNullException is generated if this relation is null. An ArgumentException is generated
      if this relation doesn't belong to this collection.
      The CollectionChanged event is fired if it succeeds.</para>
        <para>Note that removing the relation does not remove any associated constraint 
      objects.</para>
      </summary>
      <param name="relation">The relation to remove.</param>
    </member>
    <member name="M:System.Data.DataRelationCollection.RemoveAt(System.Int32)">
      <summary>
   
   Removes the relation at the specified index from the
   collection.
</summary>
      <param name="index"> The index of the relation to remove.</param>
    </member>
    <member name="M:System.Data.DataRelationCollection.Remove(System.String)">
      <summary>
        <para>Removes the relation with the specified name from the collection. An IndexOutOfRangeException is
      generated if this collection doesn't have a relation with that name
      The CollectionChanged event is fired if it succeeds.</para>
      </summary>
      <param name="name">The name of the relation to remove.</param>
    </member>
    <member name="M:System.Data.DataRelationCollection.RemoveCore(System.Data.DataRelation)">
      <summary>
        <para>Performs a verification on the specified <see cref="T:System.Data.DataRelation" /> object.</para>
      </summary>
      <param name="relation">The <see langword="DataRelation" /> object to verify.</param>
    </member>
    <member name="P:System.Data.DataRelationCollection.Item(System.Int32)">
      <summary>
        <para>Gets the <see cref="T:System.Data.DataRelation" />object at the specified index.</para>
      </summary>
      <param name="index">The zero-based index to find.</param>
    </member>
    <member name="P:System.Data.DataRelationCollection.Item(System.String)">
      <summary>
        <para>Gets the <see cref="T:System.Data.DataRelation" /> object specified by name.</para>
      </summary>
      <param name="name">The name of the relation to find.</param>
    </member>
    <member name="E:System.Data.DataRelationCollection.CollectionChanged">
      <summary>
        <para>Occurs when the collection has changed.</para>
      </summary>
    </member>
    <member name="M:System.Data.DataRelationPropertyDescriptor.Equals(System.Object)">
    </member>
    <member name="M:System.Data.DataRelationPropertyDescriptor.GetHashCode">
    </member>
    <member name="M:System.Data.DataRelationPropertyDescriptor.CanResetValue(System.Object)">
    </member>
    <member name="M:System.Data.DataRelationPropertyDescriptor.GetValue(System.Object)">
    </member>
    <member name="M:System.Data.DataRelationPropertyDescriptor.ResetValue(System.Object)">
    </member>
    <member name="M:System.Data.DataRelationPropertyDescriptor.SetValue(System.Object,System.Object)">
    </member>
    <member name="M:System.Data.DataRelationPropertyDescriptor.ShouldSerializeValue(System.Object)">
    </member>
    <member name="P:System.Data.DataRelationPropertyDescriptor.Relation">
    </member>
    <member name="P:System.Data.DataRelationPropertyDescriptor.ComponentType">
    </member>
    <member name="P:System.Data.DataRelationPropertyDescriptor.IsReadOnly">
    </member>
    <member name="P:System.Data.DataRelationPropertyDescriptor.PropertyType">
    </member>
    <member name="T:System.Data.DataRow">
      <summary>
        <para>Represents a row of data in a <see cref="T:System.Data.DataTable" />.</para>
      </summary>
    </member>
    <member name="M:System.Data.DataRow.AcceptChanges">
      <summary>
        <para>Commits all the changes made to this row
      since the last time <see cref="M:System.Data.DataRow.AcceptChanges" /> was called.</para>
      </summary>
    </member>
    <member name="M:System.Data.DataRow.BeginEdit">
      <summary>
        <para>Begins an edit operation on a <see cref="T:System.Data.DataRow" />object.</para>
      </summary>
    </member>
    <member name="M:System.Data.DataRow.CancelEdit">
      <summary>
        <para>Cancels the current edit on the row.</para>
      </summary>
    </member>
    <member name="M:System.Data.DataRow.Delete">
      <summary>
        <para>Deletes the <see cref="T:System.Data.DataRow" /> .</para>
      </summary>
    </member>
    <member name="M:System.Data.DataRow.EndEdit">
      <summary>
        <para>Ends the edit occurring on the row.</para>
      </summary>
    </member>
    <member name="M:System.Data.DataRow.SetColumnError(System.Int32,System.String)">
      <summary>
        <para>Sets the error description for a column specified by index.</para>
      </summary>
      <param name="columnIndex">The zero-based index of the column.</param>
      <param name="error">The error description.</param>
    </member>
    <member name="M:System.Data.DataRow.SetColumnError(System.String,System.String)">
      <summary>
        <para>Sets
       the error description for a column specified by name.</para>
      </summary>
      <param name="columnName">The name of the column.</param>
      <param name="error">The error description.</param>
    </member>
    <member name="M:System.Data.DataRow.SetColumnError(System.Data.DataColumn,System.String)">
      <summary>
        <para>Sets the error description for a column specified as a <see cref="T:System.Data.DataColumn" />.</para>
      </summary>
      <param name="column">The <see cref="T:System.Data.DataColumn" /> to set the error description for.</param>
      <param name="error">The error description.</param>
    </member>
    <member name="M:System.Data.DataRow.GetColumnError(System.Int32)">
      <summary>
        <para>Gets the error description for the column specified
       by index.</para>
      </summary>
      <param name="columnIndex">The zero-based index of the column.</param>
      <returns>
        <para>The text of the error description.</para>
      </returns>
    </member>
    <member name="M:System.Data.DataRow.GetColumnError(System.String)">
      <summary>
        <para>Gets the error description for a column, specified by name.</para>
      </summary>
      <param name="columnName">The name of the column.</param>
      <returns>
        <para>The text of the error description.</para>
      </returns>
    </member>
    <member name="M:System.Data.DataRow.GetColumnError(System.Data.DataColumn)">
      <summary>
        <para>Gets the error description of
       the specified <see cref="T:System.Data.DataColumn" />.</para>
      </summary>
      <param name="column">A <see cref="T:System.Data.DataColumn" />.</param>
      <returns>
        <para>The text of the error description.</para>
      </returns>
    </member>
    <member name="M:System.Data.DataRow.ClearErrors">
      <summary>
        <para> Clears the errors for the row, including the <see cref="P:System.Data.DataRow.RowError" /> 
 and errors set with <see cref="M:System.Data.DataRow.SetColumnError(System.Int32,System.String)" />
 .</para>
      </summary>
    </member>
    <member name="M:System.Data.DataRow.GetColumnsInError">
      <summary>
        <para>Gets an array of columns that have errors.</para>
      </summary>
      <returns>
        <para>An array of <see cref="T:System.Data.DataColumn" /> objects that contain errors.</para>
      </returns>
    </member>
    <member name="M:System.Data.DataRow.GetChildRows(System.String)">
      <summary>
        <para> Gets the child rows of a <see cref="T:System.Data.DataRow" /> using the specified <see cref="P:System.Data.DataRelation.RelationName" /> of a <see cref="T:System.Data.DataRelation" />.</para>
      </summary>
      <param name="relationName">The <see cref="P:System.Data.DataRelation.RelationName" /> of the <see cref="T:System.Data.DataRelation" /> to use.</param>
      <returns>
        <para>An array of <see cref="T:System.Data.DataRow" /> objects (or an array of length zero).</para>
      </returns>
    </member>
    <member name="M:System.Data.DataRow.GetChildRows(System.String,System.Data.DataRowVersion)">
      <summary>
        <para> Gets the child rows of a <see cref="T:System.Data.DataRow" /> using the specified <see cref="P:System.Data.DataRelation.RelationName" /> of a
<see cref="T:System.Data.DataRelation" />, and <see cref="T:System.Data.DataRowVersion" />.</para>
      </summary>
      <param name="relationName">The <see cref="P:System.Data.DataRelation.RelationName" /> of the <see cref="T:System.Data.DataRelation" /> to use.</param>
      <param name=" version">One of the <see cref="T:System.Data.DataRowVersion" /> values specifying the version of the data to get. Possible values are <see langword="Default" />, <see langword="Original" />, <see langword="Current" />, and <see langword="Proposed" />. </param>
      <returns>
        <para>An array of <see cref="T:System.Data.DataRow" /> objects (or an array of length zero).</para>
      </returns>
    </member>
    <member name="M:System.Data.DataRow.GetChildRows(System.Data.DataRelation)">
      <summary>
        <para>Gets the child rows of this <see cref="T:System.Data.DataRow" /> using the
   specified <see cref="T:System.Data.DataRelation" />
   .</para>
      </summary>
      <param name="relation">The <see cref="T:System.Data.DataRelation" /> to use.</param>
      <returns>
        <para>An array of <see cref="T:System.Data.DataRow" /> objects (or an array of length zero).</para>
      </returns>
    </member>
    <member name="M:System.Data.DataRow.GetChildRows(System.Data.DataRelation,System.Data.DataRowVersion)">
      <summary>
        <para>Gets the child rows of a <see cref="T:System.Data.DataRow" /> using the specified <see cref="T:System.Data.DataRelation" />, and <see cref="T:System.Data.DataRowVersion" />.</para>
      </summary>
      <param name="relation">The <see cref="T:System.Data.DataRelation" /> to use.</param>
      <param name="version">One of the <see cref="T:System.Data.DataRowVersion" /> values specifying the version of the data to get. Possible values are <see langword="Default" />, <see langword="Original" />, <see langword="Current" />, and <see langword="Proposed" /> .</param>
      <returns>
        <para>An array of <see cref="T:System.Data.DataRow" /> objects.</para>
      </returns>
    </member>
    <member name="M:System.Data.DataRow.GetParentRow(System.String)">
      <summary>
        <para>Gets the parent row of a <see cref="T:System.Data.DataRow" /> using the specified <see cref="P:System.Data.DataRelation.RelationName" /> of a <see cref="T:System.Data.DataRelation" />.</para>
      </summary>
      <param name="relationName">The <see cref="P:System.Data.DataRelation.RelationName" /> of a <see cref="T:System.Data.DataRelation" />.</param>
      <returns>
        <para>The parent <see cref="T:System.Data.DataRow" /> of the current row.</para>
      </returns>
    </member>
    <member name="M:System.Data.DataRow.GetParentRow(System.String,System.Data.DataRowVersion)">
      <summary>
        <para>Gets the parent row of a <see cref="T:System.Data.DataRow" /> using the specified <see cref="P:System.Data.DataRelation.RelationName" /> of a <see cref="T:System.Data.DataRelation" /> 
, and <see cref="T:System.Data.DataRowVersion" />.</para>
      </summary>
      <param name="relationName">The <see cref="P:System.Data.DataRelation.RelationName" /> of a <see cref="T:System.Data.DataRelation" />.</param>
      <param name=" version">One of the <see cref="T:System.Data.DataRowVersion" /> values.</param>
      <returns>
        <para>The parent <see cref="T:System.Data.DataRow" /> of the current row.</para>
      </returns>
    </member>
    <member name="M:System.Data.DataRow.GetParentRow(System.Data.DataRelation)">
      <summary>
        <para>Gets the parent row of a <see cref="T:System.Data.DataRow" /> using the specified <see cref="T:System.Data.DataRelation" /> .</para>
      </summary>
      <param name="relation">The <see cref="T:System.Data.DataRelation" /> to use.</param>
      <returns>
        <para>The parent <see cref="T:System.Data.DataRow" /> of the current row.</para>
      </returns>
    </member>
    <member name="M:System.Data.DataRow.GetParentRow(System.Data.DataRelation,System.Data.DataRowVersion)">
      <summary>
        <para>Gets the parent row of a <see cref="T:System.Data.DataRow" />
using the specified <see cref="T:System.Data.DataRelation" />, and <see cref="T:System.Data.DataRowVersion" />.</para>
      </summary>
      <param name="relation">The <see cref="T:System.Data.DataRelation" /> to use.</param>
      <param name="version">One of the <see cref="T:System.Data.DataRowVersion" /> values specifying the version of the data to get.</param>
      <returns>
        <para>The parent <see cref="T:System.Data.DataRow" /> of the current row.</para>
      </returns>
    </member>
    <member name="M:System.Data.DataRow.GetParentRows(System.String)">
      <summary>
        <para> Gets the parent rows of a <see cref="T:System.Data.DataRow" /> using the specified <see cref="P:System.Data.DataRelation.RelationName" /> of a
<see cref="T:System.Data.DataRelation" />. </para>
      </summary>
      <param name="relationName">The <see cref="P:System.Data.DataRelation.RelationName" /> of a <see cref="T:System.Data.DataRelation" />.</param>
      <returns>
        <para>An array of <see cref="T:System.Data.DataRow" /> objects (or an array of length zero).</para>
      </returns>
    </member>
    <member name="M:System.Data.DataRow.GetParentRows(System.String,System.Data.DataRowVersion)">
      <summary>
        <para> Gets the parent rows of a <see cref="T:System.Data.DataRow" /> using the specified <see cref="P:System.Data.DataRelation.RelationName" /> of a
<see cref="T:System.Data.DataRelation" />, and <see cref="T:System.Data.DataRowVersion" />. </para>
      </summary>
      <param name="relationName">The <see cref="P:System.Data.DataRelation.RelationName" /> of a <see cref="T:System.Data.DataRelation" />.</param>
      <param name="version">One of the <see cref="T:System.Data.DataRowVersion" /> values specifying the version of the data to get. Possible values are <see langword="Default" />, <see langword="Original" />, <see langword="Current" />, and <see langword="Proposed" /> .</param>
      <returns>
        <para>An array of <see cref="T:System.Data.DataRow" /> objects (or an array of length zero).</para>
      </returns>
    </member>
    <member name="M:System.Data.DataRow.GetParentRows(System.Data.DataRelation)">
      <summary>
        <para>Gets the parent rows of a <see cref="T:System.Data.DataRow" /> using the specified <see cref="T:System.Data.DataRelation" /> .</para>
      </summary>
      <param name="relation">The <see cref="T:System.Data.DataRelation" /> to use.</param>
      <returns>
        <para>An array of <see cref="T:System.Data.DataRow" /> objects (or an array of length zero).</para>
      </returns>
    </member>
    <member name="M:System.Data.DataRow.GetParentRows(System.Data.DataRelation,System.Data.DataRowVersion)">
      <summary>
        <para> Gets the parent rows of a <see cref="T:System.Data.DataRow" /> using the specified <see cref="T:System.Data.DataRelation" />, and <see cref="T:System.Data.DataRowVersion" /> .</para>
      </summary>
      <param name="relation">The <see cref="T:System.Data.DataRelation" /> to use.</param>
      <param name="version">One of the <see cref="T:System.Data.DataRowVersion" /> values specifying the version of the data to get.</param>
      <returns>
        <para>An array of <see cref="T:System.Data.DataRow" /> objects (or an array of length zero).</para>
      </returns>
    </member>
    <member name="M:System.Data.DataRow.HasVersion(System.Data.DataRowVersion)">
      <summary>
        <para>Gets a value indicating whether a specified version exists.</para>
      </summary>
      <param name="version">One of the <see cref="T:System.Data.DataRowVersion" /> values that specifies the row version. Possible values are <see langword="Default" />, <see langword="Original" />, <see langword="Current" />, and <see langword="Proposed" />.</param>
      <returns>
        <para>
          <see langword="true " />if the version exists; <see langword="otherwise" />, 
    false.</para>
      </returns>
    </member>
    <member name="M:System.Data.DataRow.IsNull(System.Int32)">
      <summary>
        <para>Gets
      a value indicating whether the column at the specified index contains a
      null value.</para>
      </summary>
      <param name="columnIndex">The zero-based index of the column.</param>
      <returns>
        <para>
          <see langword="true " />if the column contains a null value; otherwise,
<see langword="false" />.</para>
      </returns>
    </member>
    <member name="M:System.Data.DataRow.IsNull(System.String)">
      <summary>
        <para>Gets a value indicating whether the named column contains a null value.</para>
      </summary>
      <param name="columnName">The name of the column.</param>
      <returns>
        <para>
          <see langword="true " />if the column contains a null value; otherwise,
<see langword="false" />. </para>
      </returns>
    </member>
    <member name="M:System.Data.DataRow.IsNull(System.Data.DataColumn)">
      <summary>
        <para>Gets a value indicating whether the specified <see cref="T:System.Data.DataColumn" />
contains a null value.</para>
      </summary>
      <param name="column">A <see cref="T:System.Data.DataColumn" />.</param>
      <returns>
        <para>
          <see langword="true " />if the column contains a null value; otherwise,
<see langword="false" />. </para>
      </returns>
    </member>
    <member name="M:System.Data.DataRow.IsNull(System.Data.DataColumn,System.Data.DataRowVersion)">
      <summary>
        <para>Gets a value indicating whether the specified <see cref="T:System.Data.DataColumn" /> and 
<see cref="T:System.Data.DataRowVersion" /> contains a null value.</para>
      </summary>
      <param name="column">A <see cref="T:System.Data.DataColumn" />.</param>
      <param name="version">One of the <see cref="T:System.Data.DataRowVersion" /> values that specifies the row version. Possible values are <see langword="Default" />, <see langword="Original" />, <see langword="Current" />, and <see langword="Proposed" />.</param>
      <returns>
        <para>
          <see langword="true " />if the column contains a null value; otherwise, 
<see langword="false" />.</para>
      </returns>
    </member>
    <member name="M:System.Data.DataRow.RejectChanges">
      <summary>
        <para>Rejects all changes made to the row since <see cref="M:System.Data.DataRow.AcceptChanges" />
was last called.</para>
      </summary>
    </member>
    <member name="M:System.Data.DataRow.SetNull(System.Data.DataColumn)">
      <summary>
        <para> Sets the the value of the specified <see cref="T:System.Data.DataColumn" /> to a null value.
   </para>
      </summary>
      <param name="column">A <see cref="T:System.Data.DataColumn" />. </param>
    </member>
    <member name="M:System.Data.DataRow.SetParentRow(System.Data.DataRow)">
      <summary>
        <para>Sets the parent row of a <see cref="T:System.Data.DataRow" /> with specified new parent <see cref="T:System.Data.DataRow" /> .</para>
      </summary>
      <param name="parentRow">The new parent <see cref="T:System.Data.DataRow" /> .</param>
    </member>
    <member name="M:System.Data.DataRow.SetParentRow(System.Data.DataRow,System.Data.DataRelation)">
      <summary>
        <para> Sets the parent row of a <see cref="T:System.Data.DataRow" /> with specified new parent <see cref="T:System.Data.DataRow" /> and
<see cref="T:System.Data.DataRelation" /> .
   </para>
      </summary>
      <param name="parentRow">The new parent <see cref="T:System.Data.DataRow" /> . </param>
      <param name="relation">The relation <see cref="T:System.Data.DataRelation" /> to use. </param>
    </member>
    <member name="P:System.Data.DataRow.RowError">
      <summary>
        <para>Gets or sets the custom error description for a row.</para>
      </summary>
    </member>
    <member name="P:System.Data.DataRow.RowState">
      <summary>
        <para>Gets the current state of the row in regards to its
      relationship to the <see cref="T:System.Data.DataRowCollection" /> .</para>
      </summary>
    </member>
    <member name="P:System.Data.DataRow.Table">
      <summary>
        <para>Gets the <see cref="T:System.Data.DataTable" />
 for which this row has a schema.</para>
      </summary>
    </member>
    <member name="P:System.Data.DataRow.Item(System.Int32)">
      <summary>
        <para>Gets or sets the data stored in the column specified by index.</para>
      </summary>
      <param name="columnIndex">The zero-based index of the column</param>
    </member>
    <member name="P:System.Data.DataRow.Item(System.String)">
      <summary>
        <para>Gets or sets the data stored in the column specified by
      name.</para>
      </summary>
      <param name="columnName">The name of the column.</param>
    </member>
    <member name="P:System.Data.DataRow.Item(System.Data.DataColumn)">
      <summary>
        <para>Gets or sets
       the data stored in the specified <see cref="T:System.Data.DataColumn" />.</para>
      </summary>
      <param name="column">A <see cref="T:System.Data.DataColumn" /> that contains the data.</param>
    </member>
    <member name="P:System.Data.DataRow.Item(System.Int32,System.Data.DataRowVersion)">
      <summary>
        <para>Gets the data stored
      in the column, specified by index and version of the data to retrieve.</para>
      </summary>
      <param name="columnIndex">The zero-based index of the column.</param>
      <param name="version">One of the <see cref="T:System.Data.DataRowVersion" /> values that specifies the desired row version. Possible values are <see langword="Default" />, <see langword="Original" />, <see langword="Current" />, and <see langword="Proposed" />.</param>
    </member>
    <member name="P:System.Data.DataRow.Item(System.String,System.Data.DataRowVersion)">
      <summary>
        <para> Gets the specified version of data stored in
      the named column.</para>
      </summary>
      <param name="columnName">The name of the column.</param>
      <param name="version">One of the <see cref="T:System.Data.DataRowVersion" /> values that specifies the desired row version. Possible values are <see langword="Default" />, <see langword="Original" />, <see langword="Current" />, and <see langword="Proposed" />.</param>
    </member>
    <member name="P:System.Data.DataRow.Item(System.Data.DataColumn,System.Data.DataRowVersion)">
      <summary>
        <para>Gets the specified version of data stored in the specified <see cref="T:System.Data.DataColumn" />.</para>
      </summary>
      <param name="column">A <see cref="T:System.Data.DataColumn" /> that contains information about the column.</param>
      <param name="version">One of the <see cref="T:System.Data.DataRowVersion" /> values that specifies the desired row version. Possible values are <see langword="Default" />, <see langword="Original" />, <see langword="Current" />, and <see langword="Proposed" />.</param>
    </member>
    <member name="P:System.Data.DataRow.ItemArray">
      <summary>
        <para>Gets
       or sets all of the values for this row through an array.</para>
      </summary>
    </member>
    <member name="P:System.Data.DataRow.HasErrors">
      <summary>
        <para>Gets a value indicating whether there are errors in a columns collection.</para>
      </summary>
    </member>
    <member name="T:System.Data.DataRowAction">
      <summary>
        <para>Describes an action performed on a <see cref="T:System.Data.DataRow" />.</para>
      </summary>
    </member>
    <member name="F:System.Data.DataRowAction.Nothing">
      <summary>
        <para>The row has not changed.</para>
      </summary>
    </member>
    <member name="F:System.Data.DataRowAction.Delete">
      <summary>
        <para>
       The row was
       deleted from the table.
       
    </para>
      </summary>
    </member>
    <member name="F:System.Data.DataRowAction.Change">
      <summary>
        <para>The row has changed.
       </para>
      </summary>
    </member>
    <member name="F:System.Data.DataRowAction.Rollback">
      <summary>
        <para> The most recent change to the row has been rolled back.
      </para>
      </summary>
    </member>
    <member name="F:System.Data.DataRowAction.Commit">
      <summary>
        <para> The changes to the row have been committed.
      </para>
      </summary>
    </member>
    <member name="F:System.Data.DataRowAction.Add">
      <summary>
        <para>
       The row has been added to the table.
       
    </para>
      </summary>
    </member>
    <member name="T:System.Data.DataRowChangeEventArgs">
      <summary>
        <para> Provides data for the <see cref="E:System.Data.DataTable.RowChanged" />, <see cref="E:System.Data.DataTable.RowChanging" />, <see cref="M:System.Data.DataTable.OnRowDeleting(System.Data.DataRowChangeEventArgs)" />, and <see cref="M:System.Data.DataTable.OnRowDeleted(System.Data.DataRowChangeEventArgs)" /> events.
   </para>
      </summary>
    </member>
    <member name="M:System.Data.DataRowChangeEventArgs.#ctor(System.Data.DataRow,System.Data.DataRowAction)">
      <summary>
        <para>
       Initializes a new instance of the <see cref="T:System.Data.DataRowChangeEventArgs" /> class.
    </para>
      </summary>
      <param name="row">
    The <see cref="T:System.Data.DataRow" /> upon which an action is occuring.
 </param>
      <param name=" action">
    One of the <see cref="T:System.Data.DataRowAction" /> values.
 </param>
    </member>
    <member name="P:System.Data.DataRowChangeEventArgs.Row">
      <summary>
        <para>Gets the row upon which an action has occurred.</para>
      </summary>
    </member>
    <member name="P:System.Data.DataRowChangeEventArgs.Action">
      <summary>
        <para>Gets the action that has occurred on a <see cref="T:System.Data.DataRow" />.</para>
      </summary>
    </member>
    <member name="T:System.Data.DataRowChangeEventHandler">
      <summary>
        <para>Represents the method that will handle the <see cref="E:System.Data.DataTable.RowChanging" />, <see cref="E:System.Data.DataTable.RowChanged" />, <see cref="E:System.Data.DataTable.RowDeleting" />, and <see cref="E:System.Data.DataTable.RowDeleted" /> events of a
 <see cref="T:System.Data.DataTable" />.</para>
      </summary>
      <param name="sender">The source of the event.</param>
      <param name="e">A <see cref="T:System.Data.DataRowChangeEventArgs" /> that contains the event data.</param>
    </member>
    <member name="T:System.Data.DataRowCollection">
      <summary>
        <para>Represents a collection of rows for a <see cref="T:System.Data.DataTable" />
.</para>
      </summary>
    </member>
    <member name="M:System.Data.DataRowCollection.Add(System.Data.DataRow)">
      <summary>
        <para>Adds the specified <see cref="T:System.Data.DataRow" /> to the <see cref="T:System.Data.DataRowCollection" /> object.</para>
      </summary>
      <param name="row">The <see cref="T:System.Data.DataRow" /> to add.</param>
      <returns>
        <para>A new <see cref="T:System.Data.DataRow" />.</para>
      </returns>
    </member>
    <member name="M:System.Data.DataRowCollection.InsertAt(System.Data.DataRow,System.Int32)">
      <summary>
        <para>Inserts a new row into the collection at the specified
      location.</para>
      </summary>
      <param name="row">The <see cref="T:System.Data.DataRow" /> to add.</param>
      <param name="pos">The location in the collection where you want to add the <see langword="DataRow" />.</param>
    </member>
    <member name="M:System.Data.DataRowCollection.Add(System.Object[])">
      <summary>
        <para>Creates a row using specified values and adds it to the
   <see cref="T:System.Data.DataRowCollection" />.</para>
      </summary>
      <param name="values">The array of values that are used to create the new row.</param>
      <returns>
        <para>A new <see cref="T:System.Data.DataRow" />.</para>
      </returns>
    </member>
    <member name="M:System.Data.DataRowCollection.Find(System.Object)">
      <summary>
        <para>Gets
 the row specified by the primary key value.</para>
      </summary>
      <param name="key">The primary key value of the <see cref="T:System.Data.DataRow" /> to find.</param>
      <returns>
        <para>A <see cref="T:System.Data.DataRow" /> containing
 the primary key value specified; otherwise a null value if the primary key value
 does not exist in the <see cref="T:System.Data.DataRowCollection" />
 .</para>
      </returns>
    </member>
    <member name="M:System.Data.DataRowCollection.Find(System.Object[])">
      <summary>
        <para>Gets the row containing the specified primary key values.</para>
      </summary>
      <param name="keys">An array of primary key values to find. The type of the array is Object.</param>
      <returns>
        <para>An array of <see cref="T:System.Data.DataRow" /> objects containing the primary key
 values specified; otherwise a null value if the primary key values do not exist
 in the <see cref="T:System.Data.DataRowCollection" /> .</para>
      </returns>
    </member>
    <member name="M:System.Data.DataRowCollection.Clear">
      <summary>
        <para>Clears the collection of all rows.</para>
      </summary>
    </member>
    <member name="M:System.Data.DataRowCollection.Contains(System.Object)">
      <summary>
        <para>Gets a value indicating whether the primary key of any row in the
      collection contains the specified value.</para>
      </summary>
      <param name="key">The value of the primary key to test for.</param>
      <returns>
        <para>
          <see langword="true " />if the
   collection contains a <see cref="T:System.Data.DataRow" />
   with the specified primary key value;
   otherwise, <see langword="false" />.</para>
      </returns>
    </member>
    <member name="M:System.Data.DataRowCollection.Contains(System.Object[])">
      <summary>
        <para>Gets a value indicating whether the primary key column(s) of any row in the collection contains the values specified in the object array.</para>
      </summary>
      <param name="keys">An array of primary key values to test for.</param>
      <returns>
        <para>
          <see langword="true " />if the <see cref="T:System.Data.DataRowCollection" /> contains a <see cref="T:System.Data.DataRow" /> with the specified
   key values; otherwise, <see langword="false" />.</para>
      </returns>
    </member>
    <member name="M:System.Data.DataRowCollection.Remove(System.Data.DataRow)">
      <summary>
        <para>Removes the specified <see cref="T:System.Data.DataRow" /> from the collection.</para>
      </summary>
      <param name="row">The <see cref="T:System.Data.DataRow" /> to remove.</param>
    </member>
    <member name="M:System.Data.DataRowCollection.RemoveAt(System.Int32)">
      <summary>
        <para>Removes the row at the specified index from
      the collection.</para>
      </summary>
      <param name="index">The index of the row to remove.</param>
    </member>
    <member name="P:System.Data.DataRowCollection.Item(System.Int32)">
      <summary>
        <para>Gets the row at the specified index.</para>
      </summary>
      <param name="index">The zero-based index of the row to return.</param>
    </member>
    <member name="T:System.Data.DataRowState">
      <summary>
        <para>Gets the state of a <see cref="T:System.Data.DataRow" /> object.</para>
      </summary>
    </member>
    <member name="F:System.Data.DataRowState.Detached">
      <summary>
        <para>The row 
       has been created but is not part of any <see cref="T:System.Data.DataRowCollection" />. A <see cref="T:System.Data.DataRow" /> is in this state immediately
       after it has been created and before it is added to a collection, or if it has
       been removed from a collection. </para>
      </summary>
    </member>
    <member name="F:System.Data.DataRowState.Unchanged">
      <summary>
        <para>
       The row has not changed since <see cref="M:System.Data.DataRow.AcceptChanges" /> was last called.
    </para>
      </summary>
    </member>
    <member name="F:System.Data.DataRowState.Added">
      <summary>
        <para>The row has been added to a <see cref="T:System.Data.DataRowCollection" />, 
    and <see cref="M:System.Data.DataRow.AcceptChanges" /> has not been called.</para>
      </summary>
    </member>
    <member name="F:System.Data.DataRowState.Deleted">
      <summary>
        <para>The row was deleted using the <see cref="M:System.Data.DataRow.Delete" /> 
 method of the <see cref="T:System.Data.DataRow" /> .</para>
      </summary>
    </member>
    <member name="F:System.Data.DataRowState.Modified">
      <summary>
        <para>The row has been modified and <see cref="M:System.Data.DataRow.AcceptChanges" /> has not been called.</para>
      </summary>
    </member>
    <member name="T:System.Data.DataRowVersion">
      <summary>
        <para>Describes the version of a <see cref="T:System.Data.DataRow" />.</para>
      </summary>
    </member>
    <member name="F:System.Data.DataRowVersion.Original">
      <summary>
        <para>
       The row contains its original values.
       
    </para>
      </summary>
    </member>
    <member name="F:System.Data.DataRowVersion.Current">
      <summary>
        <para>
       The row contains current values.
       
    </para>
      </summary>
    </member>
    <member name="F:System.Data.DataRowVersion.Proposed">
      <summary>
        <para>
       The row contains a proposed value.
       
    </para>
      </summary>
    </member>
    <member name="F:System.Data.DataRowVersion.Default">
      <summary>
        <para>
       The row contains its default values.
       
    </para>
      </summary>
    </member>
    <member name="T:System.Data.DataRowView">
      <summary>
        <para>Represents a customized view of a <see cref="T:System.Data.DataRow" /> exposed as a fully featured Windows Forms
   control.</para>
      </summary>
    </member>
    <member name="M:System.Data.DataRowView.Equals(System.Object)">
      <summary>
        <para>Gets a value indicating whether the current <see cref="T:System.Data.DataRowView" /> is
    identical to the specified object.</para>
      </summary>
      <param name="other">An <see cref="T:System.Object" /> to be compared.</param>
      <returns>
        <para>
          <see langword="true" />, if <paramref name="object " />is a <see cref="T:System.Data.DataRowView" /> and it 
    returns the same row as the current <see cref="T:System.Data.DataRowView" />; otherwise,
 <see langword="false" /> .</para>
      </returns>
    </member>
    <member name="M:System.Data.DataRowView.GetHashCode">
      <summary>
        <para>Returns the hash code of the <see cref="T:System.Data.DataRow" /> object.</para>
      </summary>
      <returns>
        <para>A 32-bit signed integer hash code, one, which represents 
      Boolean <see langword="true" /> if the value of this instance is nonzero; otherwise, the
      integer, zero, which represents Boolean <see langword="false" /> .</para>
      </returns>
    </member>
    <member name="M:System.Data.DataRowView.CreateChildView(System.Data.DataRelation)">
      <summary>
        <para>Returns a <see cref="T:System.Data.DataView" /> for the child <see cref="T:System.Data.DataTable" /> with the specified the <see cref="T:System.Data.DataRelation" /> .</para>
      </summary>
      <param name="relation">The <see cref="T:System.Data.DataRelation" /> object.</param>
      <returns>
        <para>a <see cref="T:System.Data.DataView" /> for the child <see cref="T:System.Data.DataTable" />.</para>
      </returns>
    </member>
    <member name="M:System.Data.DataRowView.CreateChildView(System.String)">
      <summary>
        <para>Returns a <see cref="T:System.Data.DataView" /> for the child <see cref="T:System.Data.DataTable" /> with the specified the <see cref="T:System.Data.DataRelation" /> name.</para>
      </summary>
      <param name="relationName">A string containing the <see cref="T:System.Data.DataRelation" /> name.</param>
      <returns>
        <para>a <see cref="T:System.Data.DataView" /> for the child <see cref="T:System.Data.DataTable" />.</para>
      </returns>
    </member>
    <member name="M:System.Data.DataRowView.BeginEdit">
      <summary>
        <para>Begins an edit procedure.</para>
      </summary>
    </member>
    <member name="M:System.Data.DataRowView.CancelEdit">
      <summary>
        <para>Cancels an edit procedure.</para>
      </summary>
    </member>
    <member name="M:System.Data.DataRowView.EndEdit">
      <summary>
        <para>
       Ends an edit procedure.
    </para>
      </summary>
    </member>
    <member name="M:System.Data.DataRowView.Delete">
      <summary>
        <para>Deletes a row.</para>
      </summary>
    </member>
    <member name="P:System.Data.DataRowView.DataView">
      <summary>
        <para>Gets the <see cref="T:System.Data.DataView" /> to which this row belongs.</para>
      </summary>
    </member>
    <member name="P:System.Data.DataRowView.Item(System.Int32)">
      <summary>
        <para>Gets or sets a value in a specified column.</para>
      </summary>
      <param name="ndx">The specified column.</param>
    </member>
    <member name="P:System.Data.DataRowView.Item(System.String)">
      <summary>
        <para>Gets or sets a value in a specified column.</para>
      </summary>
      <param name="property">String that contains the specified column.</param>
    </member>
    <member name="P:System.Data.DataRowView.Row">
      <summary>
        <para>Gets the <see cref="T:System.Data.DataRow" />
 being viewed.</para>
      </summary>
    </member>
    <member name="P:System.Data.DataRowView.RowVersion">
      <summary>
        <para>Gets the current version description of the <see cref="T:System.Data.DataRow" />.</para>
      </summary>
    </member>
    <member name="P:System.Data.DataRowView.IsNew">
      <summary>
        <para>Indicates whether a <see cref="T:System.Data.DataRowView" /> is new.</para>
      </summary>
    </member>
    <member name="P:System.Data.DataRowView.IsEdit">
      <summary>
        <para> Indicates whether the row is in edit mode.</para>
      </summary>
    </member>
    <member name="T:System.Data.DataSet">
      <summary>
        <para>Represents an in-memory cache of data.</para>
      </summary>
    </member>
    <member name="M:System.Data.DataSet.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.DataSet" /> class.</para>
      </summary>
    </member>
    <member name="M:System.Data.DataSet.#ctor(System.String)">
      <summary>
        <para>Initializes a new instance of a <see cref="T:System.Data.DataSet" />
class with the given name.</para>
      </summary>
      <param name="dataSetName">The name of the <see cref="T:System.Data.DataSet" /> .</param>
    </member>
    <member name="M:System.Data.DataSet.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.DataSet" /> class with the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> and the <see cref="T:System.Runtime.Serialization.StreamingContext" /> .</para>
      </summary>
      <param name="info">The data needed to serialize or deserialize an object.</param>
      <param name="context">The source and destination of a given serialized stream.</param>
    </member>
    <member name="M:System.Data.DataSet.ShouldSerializeRelations">
      <summary>
        <para>Gets a value indicating whether <see cref="P:System.Data.DataSet.Relations" /> property should be persisted.</para>
      </summary>
      <returns>
        <para>
          <see langword="true " />if the property value has been changed from its 
    default; otherwise, <see langword="false" />.</para>
      </returns>
    </member>
    <member name="M:System.Data.DataSet.ShouldSerializeTables">
      <summary>
        <para>Gets a value indicating whether <see cref="P:System.Data.DataSet.Tables" /> property should be persisted.</para>
      </summary>
      <returns>
        <para>
          <see langword="true " />if the property value has been changed from its 
    default; otherwise, <see langword="false" />.</para>
      </returns>
    </member>
    <member name="M:System.Data.DataSet.AcceptChanges">
      <summary>
        <para>Commits all the changes made to this <see cref="T:System.Data.DataSet" /> since it was loaded or the last
   time <see cref="M:System.Data.DataSet.AcceptChanges" /> was called.</para>
      </summary>
    </member>
    <member name="M:System.Data.DataSet.BeginInit">
      <summary>
        <para>Begins the initialization of a <see cref="T:System.Data.DataSet" /> that is used on a form or used by another component. The initialization occurs at runtime.</para>
      </summary>
    </member>
    <member name="M:System.Data.DataSet.EndInit">
      <summary>
        <para>Ends the initialization of a <see cref="T:System.Data.DataSet" /> that is used on a form or used by another component. The initialization occurs at runtime.</para>
      </summary>
    </member>
    <member name="M:System.Data.DataSet.Clear">
      <summary>
        <para>Clears the <see cref="T:System.Data.DataSet" /> of any data by removing all rows in all tables.</para>
      </summary>
    </member>
    <member name="M:System.Data.DataSet.Clone">
      <summary>
        <para>Copies the structure of the <see cref="T:System.Data.DataSet" />, including all <see cref="T:System.Data.DataTable" /> schemas, relations, and constraints. Does not copy any
   data.</para>
      </summary>
      <returns>
        <para>A new <see cref="T:System.Data.DataSet" /> with the same schema as the current <see cref="T:System.Data.DataSet" />, but none of the 
   data.</para>
      </returns>
    </member>
    <member name="M:System.Data.DataSet.Copy">
      <summary>
        <para>Copies both the structure and data for this <see cref="T:System.Data.DataSet" />.</para>
      </summary>
      <returns>
        <para>A new <see cref="T:System.Data.DataSet" /> with the same structure (table schemas, relations,
    and constraints) and data as this <see cref="T:System.Data.DataSet" />
    .</para>
        <note type="note">
    If these classes have been
    subclassed, the copy will also be of the same subclasses.
 </note>
      </returns>
    </member>
    <member name="M:System.Data.DataSet.GetChanges">
      <summary>
        <para>Gets a copy of the <see cref="T:System.Data.DataSet" /> that contains all changes made to
    it since it was loaded or <see cref="M:System.Data.DataSet.AcceptChanges" />
    was last called.</para>
      </summary>
      <returns>
        <para>A copy of the changes from this <see cref="T:System.Data.DataSet" /> that can 
    have actions performed on it and subsequently be merged back in using <see cref="M:System.Data.DataSet.Merge(System.Data.DataSet)" />, or
 <see langword="null " /> 
 if none are found.</para>
      </returns>
    </member>
    <member name="M:System.Data.DataSet.GetChanges(System.Data.DataRowState)">
      <summary>
        <para>Gets a copy of the <see cref="T:System.Data.DataSet" /> containing all changes made to it since it was last
   loaded, or since <see cref="M:System.Data.DataSet.AcceptChanges" /> was called, filtered by <see cref="T:System.Data.DataRowState" />.</para>
      </summary>
      <param name="rowStates">One of the <see cref="T:System.Data.DataRowState" /> values.</param>
      <returns>
        <para>A filtered copy of the <see cref="T:System.Data.DataSet" /> that can have actions performed
   on it, and subsequently be merged back in using <see cref="M:System.Data.DataSet.Merge(System.Data.DataSet)" />. If
   no rows of the desired <see cref="T:System.Data.DataRowState" /> are found, the method returns
<see langword="null" />
.</para>
      </returns>
    </member>
    <member name="M:System.Data.DataSet.GetSerializationData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
        <para>Retrieves <see cref="T:System.Runtime.Serialization.SerializationInfo" /> and <see cref="T:System.Runtime.Serialization.StreamingContext" /> information for the implementation 
   of <see langword="IXmlSerializable" />.</para>
      </summary>
      <param name="info">The data needed to serialize or deserialize an object.</param>
      <param name="context">The source and destination of a given serialized stream.</param>
      <returns>
        <para>
          <see cref="T:System.Runtime.Serialization.SerializationInfo" /> and <see cref="T:System.Runtime.Serialization.StreamingContext" /> information.</para>
      </returns>
    </member>
    <member name="M:System.Data.DataSet.GetXml">
      <summary>
        <para>Returns the XML
      representation of the data stored in the <see cref="T:System.Data.DataSet" />
      .
      </para>
      </summary>
      <returns>
        <para>A string that is a representation of the data stored in the <see cref="T:System.Data.DataSet" /> .</para>
      </returns>
    </member>
    <member name="M:System.Data.DataSet.GetXmlSchema">
      <summary>
        <para>Returns
      the XSD schema for the XML representation of the data stored in the
   <see cref="T:System.Data.DataSet" />.
      </para>
      </summary>
      <returns>
        <para>String that is the XSD schema for the XML representation of the
      data stored in the <see cref="T:System.Data.DataSet" /> .</para>
      </returns>
    </member>
    <member name="M:System.Data.DataSet.HasChanges">
      <summary>
        <para>Gets a value indicating whether the <see cref="T:System.Data.DataSet" /> has changes, including new,
    deleted, or modified rows.</para>
      </summary>
      <returns>
        <para>
          <see langword="true" />, if the <see cref="T:System.Data.DataSet" /> has changes; otherwise, 
 <see langword="false" />.</para>
      </returns>
    </member>
    <member name="M:System.Data.DataSet.HasChanges(System.Data.DataRowState)">
      <summary>
        <para>Gets a value indicating whether the <see cref="T:System.Data.DataSet" /> has changes, including new,
   deleted, or modified rows, filtered by <see cref="T:System.Data.DataRowState" />.</para>
      </summary>
      <param name="rowStates">One of the <see cref="T:System.Data.DataRowState" /> values.</param>
      <returns>
        <para>
          <see langword="true" />, if the <see cref="T:System.Data.DataSet" /> has changes; otherwise,
<see langword="false" />. </para>
      </returns>
    </member>
    <member name="M:System.Data.DataSet.InferXmlSchema(System.Xml.XmlReader,System.String[])">
      <summary>
        <para>Infer the XML schema from the specified <see cref="T:System.IO.TextReader" /> into the <see cref="T:System.Data.DataSet" />.</para>
      </summary>
      <param name="reader">The <see cref="T:System.IO.TextReader" /> from which to read.</param>
      <param name="nsArray">An array of namespace URI strings to be excluded from schema inference.</param>
    </member>
    <member name="M:System.Data.DataSet.InferXmlSchema(System.IO.Stream,System.String[])">
      <summary>
        <para>Infers the XML schema from the specified <see cref="T:System.IO.TextReader" /> into the <see cref="T:System.Data.DataSet" />.</para>
      </summary>
      <param name="stream">The <see cref="T:System.IO.Stream" /> from which to read. </param>
      <param name="nsArray">An array of namespace URI strings to be excluded from schema inference.</param>
    </member>
    <member name="M:System.Data.DataSet.InferXmlSchema(System.IO.TextReader,System.String[])">
      <summary>
        <para>Infers the XML schema from the specified <see cref="T:System.IO.TextReader" /> into the <see cref="T:System.Data.DataSet" />.</para>
      </summary>
      <param name="reader">The <see cref="T:System.IO.TextReader" /> from which to read.</param>
      <param name="nsArray">An array of namespace URI strings to be excluded from schema inference.</param>
    </member>
    <member name="M:System.Data.DataSet.InferXmlSchema(System.String,System.String[])">
      <summary>
        <para>Infers the XML schema from the specified file into the <see cref="T:System.Data.DataSet" />.</para>
      </summary>
      <param name="fileName">The file name (including the path) from which to read.</param>
      <param name="nsArray">An array of namespace URI strings to be excluded from schema inference.</param>
    </member>
    <member name="M:System.Data.DataSet.ReadXmlSchema(System.Xml.XmlReader)">
      <summary>
        <para>Reads the XML schema from the specified <see cref="T:System.Xml.XmlReader" /> into the <see cref="T:System.Data.DataSet" />
.</para>
      </summary>
      <param name="reader">The <see cref="T:System.Xml.XmlReader" /> from which to read.</param>
    </member>
    <member name="M:System.Data.DataSet.ReadXmlSchema(System.IO.Stream)">
      <summary>
        <para>Reads the XML schema from the specified <see cref="T:System.IO.Stream" /> into the
<see cref="T:System.Data.DataSet" />.</para>
      </summary>
      <param name="stream">The <see cref="T:System.IO.Stream" /> from which to read.</param>
    </member>
    <member name="M:System.Data.DataSet.ReadXmlSchema(System.IO.TextReader)">
      <summary>
        <para>Reads the XML schema from the specified <see cref="T:System.IO.TextReader" /> into the <see cref="T:System.Data.DataSet" />.</para>
      </summary>
      <param name="reader">The <see cref="T:System.IO.TextReader" /> from which to read.</param>
    </member>
    <member name="M:System.Data.DataSet.ReadXmlSchema(System.String)">
      <summary>
        <para>Reads the XML schema from the specified file into the <see cref="T:System.Data.DataSet" />.</para>
      </summary>
      <param name="fileName">The file name (including the path) from which to read. </param>
    </member>
    <member name="M:System.Data.DataSet.WriteXmlSchema(System.IO.Stream)">
      <summary>
        <para>Writes the <see cref="T:System.Data.DataSet" /> structure as an XML schema to using the specified 
 <see cref="T:System.IO.Stream" qualify="true" /> object.</para>
      </summary>
      <param name="stream">A <see cref="T:System.IO.Stream" /> object used to write to a file.</param>
    </member>
    <member name="M:System.Data.DataSet.WriteXmlSchema(System.IO.TextWriter)">
      <summary>
        <para>Writes the <see cref="T:System.Data.DataSet" /> structure as an XML schema to a <see cref="T:System.IO.TextWriter" />
object.</para>
      </summary>
      <param name="writer">The <see cref="T:System.IO.TextWriter" /> object with which to write.</param>
    </member>
    <member name="M:System.Data.DataSet.WriteXmlSchema(System.Xml.XmlWriter)">
      <summary>
        <para>Writes the <see cref="T:System.Data.DataSet" /> structure as an XML schema to an <see cref="T:System.Xml.XmlWriter" />
object.</para>
      </summary>
      <param name="writer">The <see cref="T:System.Xml.XmlWriter" /> with which to write.</param>
    </member>
    <member name="M:System.Data.DataSet.WriteXmlSchema(System.String)">
      <summary>
        <para>Writes the <see cref="T:System.Data.DataSet" /> structure as an XML schema to a file.</para>
      </summary>
      <param name="fileName">The file name (including the path) to which to write. </param>
    </member>
    <member name="M:System.Data.DataSet.ReadXml(System.Xml.XmlReader)">
      <summary>
        <para>Reads XML schema and data into the <see cref="T:System.Data.DataSet" /> using the
   specified <see cref="T:System.Xml.XmlReader" qualify="true" />.</para>
      </summary>
      <param name="reader">The <see cref="T:System.Xml.XmlReader" /> from which to read.</param>
      <returns>
        <para>An XML schema and data. </para>
      </returns>
    </member>
    <member name="M:System.Data.DataSet.ReadXml(System.IO.Stream)">
      <summary>
        <para>Reads XML schema and data into the <see cref="T:System.Data.DataSet" /> using the specified <see cref="T:System.IO.Stream" qualify="true" />.</para>
      </summary>
      <param name="stream">An object that derives from <see cref="T:System.IO.Stream" />.</param>
      <returns>
        <para>An XML schema and data.</para>
      </returns>
    </member>
    <member name="M:System.Data.DataSet.ReadXml(System.IO.TextReader)">
      <summary>
        <para>Reads XML schema and data into the <see cref="T:System.Data.DataSet" /> using the specified <see cref="T:System.IO.TextReader" qualify="true" />.</para>
      </summary>
      <param name="reader">An object that derives from the <see cref="T:System.IO.TextReader" /> class.</param>
      <returns>
        <para>An XML schema and data.</para>
      </returns>
    </member>
    <member name="M:System.Data.DataSet.ReadXml(System.String)">
      <summary>
        <para>Reads XML schema and data into the <see cref="T:System.Data.DataSet" /> using the specified file.</para>
      </summary>
      <param name="fileName">The file name (including the path) from which to read.</param>
      <returns>
        <para>An XML schema and data.</para>
      </returns>
    </member>
    <member name="M:System.Data.DataSet.ReadXml(System.Xml.XmlReader,System.Data.XmlReadMode)">
      <summary>
        <para>Writes schema and data for the DataSet.</para>
      </summary>
      <param name="reader">The <see cref="T:System.Xml.XmlReader" /> from which to read.</param>
      <param name="mode">One of the <see cref="T:System.Data.XmlReadMode" /> values.</param>
      <returns>
        <para>An XML schema and data.</para>
      </returns>
    </member>
    <member name="M:System.Data.DataSet.ReadXml(System.IO.Stream,System.Data.XmlReadMode)">
      <summary>
        <para>Reads XML schema and data into the <see cref="T:System.Data.DataSet" /> using the specified <see cref="T:System.IO.Stream" qualify="true" /> and <see cref="T:System.Data.XmlReadMode" />.</para>
      </summary>
      <param name="stream">The <see cref="T:System.IO.Stream" /> from which to read.</param>
      <param name="mode">One of the <see cref="T:System.Data.XmlReadMode" /> values.</param>
      <returns>
        <para>An XML schema and data.</para>
      </returns>
    </member>
    <member name="M:System.Data.DataSet.ReadXml(System.IO.TextReader,System.Data.XmlReadMode)">
      <summary>
        <para>Reads XML schema and data into the <see cref="T:System.Data.DataSet" /> using the specified <see cref="T:System.IO.TextReader" qualify="true" /> and <see cref="T:System.Data.XmlReadMode" />.</para>
      </summary>
      <param name="reader">The <see cref="T:System.IO.TextReader" /> from which to read.</param>
      <param name="mode">One of the <see cref="T:System.Data.XmlReadMode" /> values.</param>
      <returns>
        <para>An XML schema and data.</para>
      </returns>
    </member>
    <member name="M:System.Data.DataSet.ReadXml(System.String,System.Data.XmlReadMode)">
      <summary>
        <para>Reads XML schema and data into the <see cref="T:System.Data.DataSet" /> using the specified file and <see cref="T:System.Data.XmlReadMode" />.</para>
      </summary>
      <param name="fileName">The file name (including the path) from which to read.</param>
      <param name="mode">One of the <see cref="T:System.Data.XmlReadMode" /> values.</param>
      <returns>
        <para>An XML schema and data.</para>
      </returns>
    </member>
    <member name="M:System.Data.DataSet.WriteXml(System.IO.Stream)">
      <summary>
        <para> Writes the current data for the <see cref="T:System.Data.DataSet" /> using the
   specified <see cref="T:System.IO.Stream" qualify="true" />
   .</para>
      </summary>
      <param name="stream">A <see cref="T:System.IO.Stream" /> object used to write to a file. </param>
    </member>
    <member name="M:System.Data.DataSet.WriteXml(System.IO.TextWriter)">
      <summary>
        <para> Writes the current data for the <see cref="T:System.Data.DataSet" /> using the specified <see cref="T:System.IO.TextWriter" />
.</para>
      </summary>
      <param name="writer">The <see cref="T:System.IO.TextWriter" /> object with which to write.</param>
    </member>
    <member name="M:System.Data.DataSet.WriteXml(System.Xml.XmlWriter)">
      <summary>
        <para> Writes the current data for the <see cref="T:System.Data.DataSet" /> to the specified <see cref="T:System.Xml.XmlWriter" />
.</para>
      </summary>
      <param name="writer">The <see cref="T:System.Xml.XmlWriter" /> with which to write.</param>
    </member>
    <member name="M:System.Data.DataSet.WriteXml(System.String)">
      <summary>
        <para> Writes the current data for the <see cref="T:System.Data.DataSet" /> to the specified file.</para>
      </summary>
      <param name="fileName">The file name (including the path) to which to write.</param>
    </member>
    <member name="M:System.Data.DataSet.WriteXml(System.IO.Stream,System.Data.XmlWriteMode)">
      <summary>
        <para> Writes the current data, and optionally the schema, for the <see cref="T:System.Data.DataSet" /> using the
   specified <see cref="T:System.IO.Stream" qualify="true" /> and <see cref="T:System.Data.XmlWriteMode" />. To write the schema, set the value for the
<see langword="XMLWriteMode" /> parameter to <paramref name="WriteSchema" /> .</para>
      </summary>
      <param name="stream">A <see cref="T:System.IO.Stream" /> object used to write to a file.</param>
      <param name="mode">One of the <see cref="T:System.Data.XmlWriteMode" /> values.</param>
    </member>
    <member name="M:System.Data.DataSet.WriteXml(System.IO.TextWriter,System.Data.XmlWriteMode)">
      <summary>
        <para> Writes the current data, and optionally the schema, for the <see cref="T:System.Data.DataSet" /> using the specified <see cref="T:System.IO.TextWriter" /> and <see cref="T:System.Data.XmlWriteMode" />. To write the schema, set the value for the 
<see langword="XMLWriteMode" /> parameter to <paramref name="WriteSchema" /> .</para>
      </summary>
      <param name="writer">A <see cref="T:System.IO.TextWriter" qualify="true" /> object used to write the document.</param>
      <param name="mode">One of the <see cref="T:System.Data.XmlWriteMode" /> values.</param>
    </member>
    <member name="M:System.Data.DataSet.WriteXml(System.Xml.XmlWriter,System.Data.XmlWriteMode)">
      <summary>
        <para>Writes the current data, and optionally the schema, for the <see cref="T:System.Data.DataSet" /> using the specified <see cref="T:System.Xml.XmlWriter" /> and <see cref="T:System.Data.XmlWriteMode" />. To write the schema, set the value for the 
<see langword="XMLWriteMode" /> parameter to <paramref name="WriteSchema" /> .</para>
      </summary>
      <param name="writer">The <see cref="T:System.Xml.XmlWriter" /> with which to write. </param>
      <param name="mode">One of the <see cref="T:System.Data.XmlWriteMode" /> values.</param>
    </member>
    <member name="M:System.Data.DataSet.WriteXml(System.String,System.Data.XmlWriteMode)">
      <summary>
        <para>Writes the current data, and optionally the schema, for the <see cref="T:System.Data.DataSet" /> to the specified
   file using the specified <see cref="T:System.Data.XmlWriteMode" />. To write the
   schema, set the value for the <see langword="XMLWriteMode" /> parameter to
<paramref name="WriteSchema" /> .</para>
      </summary>
      <param name="fileName">The file name (including the path) to which to write. </param>
      <param name="mode">One of the <see cref="T:System.Data.XmlWriteMode" /> values.</param>
    </member>
    <member name="M:System.Data.DataSet.Merge(System.Data.DataSet)">
      <summary>
        <para>Merges this <see cref="T:System.Data.DataSet" /> into a specified <see cref="T:System.Data.DataSet" />.</para>
      </summary>
      <param name="dataSet">The <see cref="T:System.Data.DataSet" /> whose data and schema will be merged.</param>
    </member>
    <member name="M:System.Data.DataSet.Merge(System.Data.DataSet,System.Boolean)">
      <summary>
        <para>Merges this <see cref="T:System.Data.DataSet" /> with a specified <see cref="T:System.Data.DataSet" /> preserving changes according to
   the specified argument.</para>
      </summary>
      <param name="dataSet">The <see cref="T:System.Data.DataSet" /> whose data and schema will be merged.</param>
      <param name="preserveChanges">A value indicating whether changes made to the current <see cref="T:System.Data.DataSet" /> should be maintained. <see langword="true" />, if changes should be maintained; otherwise, <see langword="false" /> .</param>
    </member>
    <member name="M:System.Data.DataSet.Merge(System.Data.DataSet,System.Boolean,System.Data.MissingSchemaAction)">
      <summary>
        <para>Merges this <see cref="T:System.Data.DataSet" /> with a specified <see cref="T:System.Data.DataSet" /> preserving changes according to
   the specified argument, and handling an incompatible schema according to the
   specified argument.</para>
      </summary>
      <param name="dataSet">The <see cref="T:System.Data.DataSet" /> whose data and schema will be merged.</param>
      <param name="preserveChanges">A value indicating whether changes in the current (target) <see cref="T:System.Data.DataSet" /> should be maintained. <see langword="true" />, if changes should be maintained; otherwise, <see langword="false" /> .</param>
      <param name="missingSchemaAction">One of the <see cref="T:System.Data.MissingSchemaAction" /> values.</param>
    </member>
    <member name="M:System.Data.DataSet.Merge(System.Data.DataTable)">
      <summary>
        <para>Merges a <see cref="T:System.Data.DataSet" /> with a specified <see cref="T:System.Data.DataTable" />.</para>
      </summary>
      <param name="table">The <see cref="T:System.Data.DataTable" /> whose data and schema will be merged.</param>
    </member>
    <member name="M:System.Data.DataSet.Merge(System.Data.DataTable,System.Boolean,System.Data.MissingSchemaAction)">
      <summary>
        <para>Merges this <see cref="T:System.Data.DataTable" /> with a specified <see cref="T:System.Data.DataTable" /> preserving changes according to the
   specified argument, and handling an incompatible schema according to the specified argument.</para>
      </summary>
      <param name="table">The <see cref="T:System.Data.DataSet" /> whose data and schema will be merged.</param>
      <param name="missingSchemaAction">One of the <see cref="T:System.Data.MissingSchemaAction" /> values.</param>
      <param name="preserveChanges">Whether changes in the current (target) <see cref="T:System.Data.DataSet" /> should be maintained.</param>
    </member>
    <member name="M:System.Data.DataSet.Merge(System.Data.DataRow[])">
      <summary>
        <para>Merges this <see cref="T:System.Data.DataSet" /> with an array of <see cref="T:System.Data.DataRow" /> objects.</para>
      </summary>
      <param name="rows">The array of <see cref="T:System.Data.DataRow" /> objects that will be merged into the <see cref="T:System.Data.DataSet" />.</param>
    </member>
    <member name="M:System.Data.DataSet.Merge(System.Data.DataRow[],System.Boolean,System.Data.MissingSchemaAction)">
      <summary>
        <para>Merges this <see cref="T:System.Data.DataSet" /> with an array of <see cref="T:System.Data.DataRow" /> objects, preserving changes according to the 
    specified argument, and handling an incompatible schema according to the
    specified argument.</para>
      </summary>
      <param name="rows">The array of <see cref="T:System.Data.DataRow" /> objects to merge with.</param>
      <param name=" preserveChanges">
        <see langword="true" /> to preserve changes made to the <see cref="T:System.Data.DataSet" />; otherwise, <see langword="false" />.</param>
      <param name=" missingSchemaAction">One of the <see cref="T:System.Data.MissingSchemaAction" /> values. </param>
    </member>
    <member name="M:System.Data.DataSet.OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs)">
      <summary>
        <para>Raises the <see cref="M:System.Data.DataSet.OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs)" /> event.</para>
      </summary>
      <param name="pcevent">A <see cref="T:System.ComponentModel.PropertyChangedEventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Data.DataSet.OnRemoveTable(System.Data.DataTable)">
      <summary>
        <para>Occurs when when a <see cref="T:System.Data.DataTable" /> is being removed.</para>
      </summary>
      <param name="table">The <see cref="T:System.Data.DataTable" /> being removed.</param>
    </member>
    <member name="M:System.Data.DataSet.OnRemoveRelation(System.Data.DataRelation)">
      <summary>
        <para>This method should be overriden by subclasses to restrict tables being removed.</para>
      </summary>
      <param name="relation">The <see cref="T:System.Data.DataRelation" /> being removed.</param>
    </member>
    <member name="M:System.Data.DataSet.RaisePropertyChanging(System.String)">
      <summary>
        <para>Sends notification that the specified <see cref="T:System.Data.DataSet" /> property is about to change.</para>
      </summary>
      <param name="name">The name of the property that is about to change.</param>
    </member>
    <member name="M:System.Data.DataSet.RejectChanges">
      <summary>
        <para>Rolls back all the changes made to the <see cref="T:System.Data.DataSet" /> since it was
   created, or since the last time <see cref="M:System.Data.DataSet.AcceptChanges" qualify="true" /> was called.</para>
      </summary>
    </member>
    <member name="M:System.Data.DataSet.Reset">
      <summary>
        <para> Resets the <see cref="T:System.Data.DataSet" />
      to its original state. Subclasses should
      override <see cref="M:System.Data.DataSet.Reset" />to restore a <see cref="T:System.Data.DataSet" /> to its original state.</para>
      </summary>
    </member>
    <member name="M:System.Data.DataSet.ReadXmlSerializable(System.Xml.XmlReader)">
      <summary>
        <para>Reads XML serialization information for the implementation
      of <see langword="IXmlSerializable" />.</para>
      </summary>
      <param name="reader">The <see cref="T:System.Xml.XmlReader" /> object.</param>
    </member>
    <member name="M:System.Data.DataSet.GetSchemaSerializable">
      <summary>
        <para>Retrieves an <see cref="T:System.Xml.Schema.XmlSchema" /> object for the implementation
   of <see langword="IXmlSerializable" />.</para>
      </summary>
      <returns>
        <para>An <see cref="T:System.Xml.Schema.XmlSchema" /> object .</para>
      </returns>
    </member>
    <member name="P:System.Data.DataSet.CaseSensitive">
      <summary>
        <para>Gets or sets a value indicating whether string
      comparisons within <see cref="T:System.Data.DataTable" />
      objects are
      case-sensitive.</para>
      </summary>
    </member>
    <member name="P:System.Data.DataSet.DefaultViewManager">
      <summary>
        <para>Gets a custom view of the data contained by the <see cref="T:System.Data.DataSet" /> that allows filtering, searching, and
   navigating using a custom <see cref="T:System.Data.DataViewManager" />
   .</para>
      </summary>
    </member>
    <member name="P:System.Data.DataSet.EnforceConstraints">
      <summary>
        <para>Gets or sets a value indicating whether constraint rules are followed when
      attempting any update operation.</para>
      </summary>
    </member>
    <member name="P:System.Data.DataSet.DataSetName">
      <summary>
        <para>Gets or sets
      the name of the current <see cref="T:System.Data.DataSet" /> .</para>
      </summary>
    </member>
    <member name="P:System.Data.DataSet.Namespace">
      <summary>
        <para>Gets or sets the namespace of the <see cref="T:System.Data.DataSet" />.</para>
      </summary>
    </member>
    <member name="P:System.Data.DataSet.Prefix">
      <summary>
        <para>Gets or sets an XML prefix that aliases the namespace of the <see cref="T:System.Data.DataSet" />.</para>
      </summary>
    </member>
    <member name="P:System.Data.DataSet.ExtendedProperties">
      <summary>
        <para>Gets the collection of custom user information.</para>
      </summary>
    </member>
    <member name="P:System.Data.DataSet.HasErrors">
      <summary>
        <para>Gets a value indicating whether there are errors in any
      of the rows in any of the tables of this <see cref="T:System.Data.DataSet" /> .</para>
      </summary>
    </member>
    <member name="P:System.Data.DataSet.Locale">
      <summary>
        <para>Gets or sets the locale information used to compare strings within the table.</para>
      </summary>
    </member>
    <member name="P:System.Data.DataSet.Site">
      <summary>
        <para>Gets or sets an <see cref="T:System.ComponentModel.ISite" qualify="true" /> for the <see cref="T:System.Data.DataSet" /> .</para>
      </summary>
    </member>
    <member name="P:System.Data.DataSet.Relations">
      <summary>
        <para> Get the collection of relations that link tables and
      allow navigation from parent tables to child tables.
      </para>
      </summary>
    </member>
    <member name="P:System.Data.DataSet.Tables">
      <summary>
        <para>Gets the collection of tables contained in the <see cref="T:System.Data.DataSet" />.</para>
      </summary>
    </member>
    <member name="E:System.Data.DataSet.MergeFailed">
      <summary>
        <para>Occurs when a target and source <see cref="T:System.Data.DataRow" /> have the 
    same primary key value, and <see cref="P:System.Data.DataSet.EnforceConstraints" /> is set to
    true.</para>
      </summary>
    </member>
    <member name="T:System.Data.DataSysDescriptionAttribute">
      <summary>
        <para> Marks a property, event, or extender with a
      description. Visual designers can display this description when referencing
      the member.</para>
      </summary>
    </member>
    <member name="M:System.Data.DataSysDescriptionAttribute.#ctor(System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.DataSysDescriptionAttribute" /> class using the specified description string.</para>
      </summary>
      <param name="description">The description string. </param>
    </member>
    <member name="P:System.Data.DataSysDescriptionAttribute.Description">
      <summary>
        <para>Gets the text for the description.</para>
      </summary>
    </member>
    <member name="T:System.Data.DataTable">
      <summary>
        <para>Represents one table of in-memory data.</para>
      </summary>
    </member>
    <member name="F:System.Data.DataTable.fInitInProgress">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Data.DataTable.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.DataTable" /> class with no arguments.</para>
      </summary>
    </member>
    <member name="M:System.Data.DataTable.#ctor(System.String)">
      <summary>
        <para>Intitalizes a new instance of the <see cref="T:System.Data.DataTable" /> class with the specified table
    name.</para>
      </summary>
      <param name="tableName">The name to give the table. If <see langword="null" /> or an empty string, a default name will be given when added to the <see cref="T:System.Data.DataTableCollection" />.</param>
    </member>
    <member name="M:System.Data.DataTable.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.DataTable" /> class with the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> and 
   the <see cref="T:System.Runtime.Serialization.StreamingContext" /> .</para>
      </summary>
      <param name="info">The data needed to serialize or deserialize an object.</param>
      <param name="context">The source and destination of a given serialized stream.</param>
    </member>
    <member name="M:System.Data.DataTable.BeginInit">
      <summary>
        <para>Begins the initialization of a <see cref="T:System.Data.DataTable" /> that is used on a form or used by another component. The initialization occurs at runtime.</para>
      </summary>
    </member>
    <member name="M:System.Data.DataTable.EndInit">
      <summary>
        <para>Ends the initialization of a <see cref="T:System.Data.DataTable" /> that is used on a form or used by another component. The initialization occurs at runtime.</para>
      </summary>
    </member>
    <member name="M:System.Data.DataTable.AcceptChanges">
      <summary>
        <para>Commits all the changes made to this table since the last time <see cref="M:System.Data.DataTable.AcceptChanges" /> was called.</para>
      </summary>
    </member>
    <member name="M:System.Data.DataTable.Clone">
      <summary>
        <para>Clones the structure of the <see cref="T:System.Data.DataTable" />, 
   including all <see cref="T:System.Data.DataTable" /> schemas, relations, and constraints.</para>
      </summary>
      <returns>
        <para>A new <see cref="T:System.Data.DataTable" /> with the same schema as the current <see cref="T:System.Data.DataTable" /> .</para>
      </returns>
    </member>
    <member name="M:System.Data.DataTable.Copy">
      <summary>
        <para>Copies both the structure and data for this <see cref="T:System.Data.DataTable" />.</para>
      </summary>
      <returns>
        <para>A new <see cref="T:System.Data.DataTable" /> with the same structure (table schemas, relations,
   and constraints) and data as this <see cref="T:System.Data.DataTable" />
   .</para>
        <note type="note">
   If these classes have been
   subclassed, the copy will also be of the same subclasses.
   
</note>
      </returns>
    </member>
    <member name="M:System.Data.DataTable.Clear">
      <summary>
        <para> Clears the <see cref="T:System.Data.DataTable" />
of all data.</para>
      </summary>
    </member>
    <member name="M:System.Data.DataTable.Compute(System.String,System.String)">
      <summary>
        <para>Computes the given expression on the current rows that pass the filter criteria.</para>
      </summary>
      <param name="expression">The expression to compute.</param>
      <param name="filter">The filter to limit the rows that evaluate in the expression.</param>
      <returns>
        <para>An <see cref="T:System.Object" />, set to
    the result of the computation.</para>
      </returns>
    </member>
    <member name="M:System.Data.DataTable.GetChanges">
      <summary>
        <para>Gets a copy of the <see cref="T:System.Data.DataTable" /> that contains all changes made to
   it since it was loaded or <see cref="M:System.Data.DataTable.AcceptChanges" />
   was last called.</para>
      </summary>
      <returns>
        <para>A copy of the changes from this <see cref="T:System.Data.DataTable" /> that can
   have actions performed on it and subsequently be merged back in using <see cref="M:System.Data.DataSet.Merge(System.Data.DataSet)" />, or
   <see langword="null " />
if none are found.</para>
      </returns>
    </member>
    <member name="M:System.Data.DataTable.GetChanges(System.Data.DataRowState)">
      <summary>
        <para>Gets a copy of the <see cref="T:System.Data.DataTable" /> containing all changes made to it since it was last
   loaded, or since <see cref="M:System.Data.DataTable.AcceptChanges" /> was called, filtered by <see cref="T:System.Data.DataRowState" />.</para>
      </summary>
      <param name="rowStates">One of the <see cref="T:System.Data.DataRowState" /> values.</param>
      <returns>
        <para>A filtered copy of the <see cref="T:System.Data.DataTable" /> that can have actions performed
   on it, and subsequently be merged back in using <see cref="M:System.Data.DataSet.Merge(System.Data.DataSet)" />. If
   no rows of the desired <see cref="T:System.Data.DataRowState" /> are found, the method returns
<see langword="null" />
.</para>
      </returns>
    </member>
    <member name="M:System.Data.DataTable.GetErrors">
      <summary>
        <para>Gets an array of <see cref="T:System.Data.DataRow" /> objects that contain errors.</para>
      </summary>
      <returns>
        <para>An array of <see cref="T:System.Data.DataRow" />
 objects that have errors.</para>
      </returns>
    </member>
    <member name="M:System.Data.DataTable.ImportRow(System.Data.DataRow)">
      <summary>
        <para>Copies a <see cref="T:System.Data.DataRow" /> into a <see cref="T:System.Data.DataTable" />, preserving any property settings, as well as original and current values.</para>
      </summary>
      <param name="row">The <see langword="DataRow" />to be imported.</param>
    </member>
    <member name="M:System.Data.DataTable.NewRow">
      <summary>
        <para>Creates a new <see cref="T:System.Data.DataRow" />
 with the same schema as the table.</para>
      </summary>
      <returns>
        <para>A <see cref="T:System.Data.DataRow" /> with the
    same schema as the <see cref="T:System.Data.DataTable" /> .</para>
      </returns>
    </member>
    <member name="M:System.Data.DataTable.NewRowFromBuilder(System.Data.DataRowBuilder)">
      <summary>
        <para> Creates a new row from an existing row.
      </para>
      </summary>
      <param name="builder">A <see cref="T:System.Data.DataRowBuilder" /> object.</param>
      <returns>
        <para>A <see cref="T:System.Data.DataRow" /> subclass.</para>
      </returns>
    </member>
    <member name="M:System.Data.DataTable.GetRowType">
      <summary>
        <para>Gets the row type.</para>
      </summary>
      <returns>
        <para>The <see cref="T:System.Type" /> of the row.</para>
      </returns>
    </member>
    <member name="M:System.Data.DataTable.OnColumnChanging(System.Data.DataColumnChangeEventArgs)">
      <summary>
        <para>Raises the <see cref="E:System.Data.DataTable.ColumnChanging" /> event.</para>
      </summary>
      <param name="e">A <see cref="T:System.Data.DataColumnChangeEventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.Data.DataTable.OnColumnChanged(System.Data.DataColumnChangeEventArgs)">
      <summary>
        <para>Raises the <see cref="E:System.Data.DataTable.ColumnChanged" /> event.</para>
      </summary>
      <param name="e">A <see cref="T:System.Data.DataColumnChangeEventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.Data.DataTable.OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs)">
      <summary>
        <para>Raises the <see cref="E:System.Data.DataTable.PropertyChanging" /> event.</para>
      </summary>
      <param name="pcevent">A <see cref="T:System.ComponentModel.PropertyChangedEventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Data.DataTable.OnRemoveColumn(System.Data.DataColumn)">
      <summary>
        <para>Notifies the <see cref="T:System.Data.DataTable" /> that a <see cref="T:System.Data.DataColumn" /> is
    being removed.</para>
      </summary>
      <param name="column">The <see cref="T:System.Data.DataColumn" /> being removed.</param>
    </member>
    <member name="M:System.Data.DataTable.OnRowChanged(System.Data.DataRowChangeEventArgs)">
      <summary>
        <para> Raises the <see cref="E:System.Data.DataTable.RowChanged" /> event.
 </para>
      </summary>
      <param name="e">A <see cref="T:System.Data.DataRowChangeEventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Data.DataTable.OnRowChanging(System.Data.DataRowChangeEventArgs)">
      <summary>
        <para>
       Raises the <see cref="E:System.Data.DataTable.RowChanging" /> event.
    </para>
      </summary>
      <param name="e">
    A <see cref="T:System.Data.DataRowChangeEventArgs" /> that contains the event data.
 </param>
    </member>
    <member name="M:System.Data.DataTable.OnRowDeleting(System.Data.DataRowChangeEventArgs)">
      <summary>
        <para> Raises the <see cref="E:System.Data.DataTable.RowDeleting" /> event.
   </para>
      </summary>
      <param name="e">A <see cref="T:System.Data.DataRowChangeEventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Data.DataTable.OnRowDeleted(System.Data.DataRowChangeEventArgs)">
      <summary>
        <para> Raises the <see cref="E:System.Data.DataTable.RowDeleted" /> event.
 </para>
      </summary>
      <param name="e">A <see cref="T:System.Data.DataRowChangeEventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Data.DataTable.RejectChanges">
      <summary>
        <para>Rolls back all changes that have been made to the table
       since it was loaded, or the last time <see cref="M:System.Data.DataTable.AcceptChanges" /> was called.</para>
      </summary>
    </member>
    <member name="M:System.Data.DataTable.Reset">
      <summary>
        <para> Resets the <see cref="T:System.Data.DataTable" /> to its original state.</para>
      </summary>
    </member>
    <member name="M:System.Data.DataTable.Select">
      <summary>
        <para>Gets an array of all <see cref="T:System.Data.DataRow" /> objects.</para>
      </summary>
      <returns>
        <para>An array of <see cref="T:System.Data.DataRow" /> objects.</para>
      </returns>
    </member>
    <member name="M:System.Data.DataTable.Select(System.String)">
      <summary>
        <para>Gets an array of all <see cref="T:System.Data.DataRow" /> objects that match the filter criteria in order of
    primary key (or lacking one, order of addition.)</para>
      </summary>
      <param name="filterExpression">The criteria to use to filter the rows.</param>
      <returns>
        <para>An array of <see cref="T:System.Data.DataRow" /> objects.</para>
      </returns>
    </member>
    <member name="M:System.Data.DataTable.Select(System.String,System.String)">
      <summary>
        <para>Gets an array of all <see cref="T:System.Data.DataRow" /> objects that match the filter criteria, in the the
    specified sort order.</para>
      </summary>
      <param name="filterExpression">The criteria to use to filter the rows.</param>
      <param name="sort">A string specifying the column and sort direction.</param>
      <returns>
        <para>An array of <see cref="T:System.Data.DataRow" /> objects matching the filter
    expression.</para>
      </returns>
    </member>
    <member name="M:System.Data.DataTable.Select(System.String,System.String,System.Data.DataViewRowState)">
      <summary>
        <para>Gets an array of all <see cref="T:System.Data.DataRow" /> objects that match the filter in the order of the
    sort, that match the specified state.</para>
      </summary>
      <param name="filterExpression">The criteria to use to filter the rows.</param>
      <param name="sort">A string specifying the column and sort direction.</param>
      <param name="recordStates">One of the <see cref="T:System.Data.DataViewRowState" /> values.</param>
      <returns>
        <para>An array of <see cref="T:System.Data.DataRow" /> objects.</para>
      </returns>
    </member>
    <member name="M:System.Data.DataTable.ToString">
      <summary>
        <para>Gets the <see cref="P:System.Data.DataTable.TableName" /> and <see cref="P:System.Data.DataTable.DisplayExpression" />, if there is one as a concatenated string.</para>
      </summary>
      <returns>
        <para>A string consisting of the <see cref="P:System.Data.DataTable.TableName" /> and the <see cref="P:System.Data.DataTable.DisplayExpression" /> values.</para>
      </returns>
    </member>
    <member name="M:System.Data.DataTable.BeginLoadData">
      <summary>
        <para>Turns off notifications, index maintenance, and constraints while loading data.</para>
      </summary>
    </member>
    <member name="M:System.Data.DataTable.EndLoadData">
      <summary>
        <para>Turns on notifications, index maintenance, and constraints after loading data.</para>
      </summary>
    </member>
    <member name="M:System.Data.DataTable.LoadDataRow(System.Object[],System.Boolean)">
      <summary>
        <para>Finds and updates a specific row. If no matching
      row is found, a new row is created using the given values.</para>
      </summary>
      <param name="values">An array of values used to create the new row.</param>
      <param name="fAcceptChanges">
        <see langword="true" /> to accept changes; otherwise, <see langword="false" />.</param>
      <returns>
        <para>The new <see cref="T:System.Data.DataRow" />
.</para>
      </returns>
    </member>
    <member name="P:System.Data.DataTable.CaseSensitive">
      <summary>
        <para>Indicates whether string comparisons within the table are
       case-sensitive.</para>
      </summary>
    </member>
    <member name="P:System.Data.DataTable.ChildRelations">
      <summary>
        <para>Gets the collection of child relations for this <see cref="T:System.Data.DataTable" />.</para>
      </summary>
    </member>
    <member name="P:System.Data.DataTable.Columns">
      <summary>
        <para>Gets the collection of columns that belong to this table.</para>
      </summary>
    </member>
    <member name="P:System.Data.DataTable.Constraints">
      <summary>
        <para>Gets the collection of constraints maintained by this table.</para>
      </summary>
    </member>
    <member name="P:System.Data.DataTable.DataSet">
      <summary>
        <para>Gets the <see cref="T:System.Data.DataSet" /> that this table belongs to.</para>
      </summary>
    </member>
    <member name="P:System.Data.DataTable.DefaultView">
      <summary>
        <para>Gets a customized view of the table which may include a
       filtered view, or a cursor position.</para>
      </summary>
    </member>
    <member name="P:System.Data.DataTable.DisplayExpression">
      <summary>
        <para>Gets or sets the expression that will return a value used to represent this table
 in the user interface.</para>
      </summary>
    </member>
    <member name="P:System.Data.DataTable.ExtendedProperties">
      <summary>
        <para>Gets the collection of customized user information.</para>
      </summary>
    </member>
    <member name="P:System.Data.DataTable.HasErrors">
      <summary>
        <para>Gets a value indicating whether there are errors in any of the rows in any of
       the tables of the <see cref="T:System.Data.DataSet" /> to which the table belongs.</para>
      </summary>
    </member>
    <member name="P:System.Data.DataTable.Locale">
      <summary>
        <para>Gets or sets the locale information used to compare strings within the table.</para>
      </summary>
    </member>
    <member name="P:System.Data.DataTable.MinimumCapacity">
      <summary>
        <para>Gets or sets the initial starting size for this table.</para>
      </summary>
    </member>
    <member name="P:System.Data.DataTable.ParentRelations">
      <summary>
        <para>Gets the collection of parent relations for this <see cref="T:System.Data.DataTable" />.</para>
      </summary>
    </member>
    <member name="P:System.Data.DataTable.PrimaryKey">
      <summary>
        <para>Gets or sets an array of columns that function as primary keys for the data
      table.</para>
      </summary>
    </member>
    <member name="P:System.Data.DataTable.Rows">
      <summary>
        <para>Gets the collection of rows that belong to this table.</para>
      </summary>
    </member>
    <member name="P:System.Data.DataTable.TableName">
      <summary>
        <para>Gets or sets the name of the the <see cref="T:System.Data.DataTable" /> .</para>
      </summary>
    </member>
    <member name="P:System.Data.DataTable.Namespace">
      <summary>
        <para>Gets or sets the namespace for the XML represenation of the data stored in the <see cref="T:System.Data.DataTable" />.</para>
      </summary>
    </member>
    <member name="P:System.Data.DataTable.Prefix">
      <summary>
        <para>Gets or sets the namespace for the XML represenation of the data stored in the <see cref="T:System.Data.DataTable" />.</para>
      </summary>
    </member>
    <member name="E:System.Data.DataTable.ColumnChanging">
      <summary>
        <para>Occurs when a value is being changed for the
      specified <see cref="T:System.Data.DataColumn" /> in a <see cref="T:System.Data.DataRow" /> .</para>
      </summary>
    </member>
    <member name="E:System.Data.DataTable.ColumnChanged">
      <summary>
        <para>Occurs when after a value has been changed for the
      specified <see cref="T:System.Data.DataColumn" /> in a <see cref="T:System.Data.DataRow" /> .</para>
      </summary>
    </member>
    <member name="E:System.Data.DataTable.RowChanged">
      <summary>
        <para> Occurs after a <see cref="T:System.Data.DataRow" /> has been changed successfully.
   </para>
      </summary>
    </member>
    <member name="E:System.Data.DataTable.RowChanging">
      <summary>
        <para> Occurs when a <see cref="T:System.Data.DataRow" /> is changing.
   </para>
      </summary>
    </member>
    <member name="E:System.Data.DataTable.RowDeleting">
      <summary>
        <para>       Occurs before a row in the table is
      about to be deleted.
      </para>
      </summary>
    </member>
    <member name="E:System.Data.DataTable.RowDeleted">
      <summary>
        <para>       Occurs after a row in the
      table has been deleted.
      </para>
      </summary>
    </member>
    <member name="P:System.Data.DataTable.Site">
      <summary>
        <para>Gets or sets an <see cref="T:System.ComponentModel.ISite" qualify="true" /> for the <see cref="T:System.Data.DataTable" /> .</para>
      </summary>
    </member>
    <member name="T:System.Data.DataTableCollection">
      <summary>
        <para>Represents the collection of tables for the <see cref="T:System.Data.DataSet" />.</para>
      </summary>
    </member>
    <member name="M:System.Data.DataTableCollection.Add(System.Data.DataTable)">
      <summary>
        <para> Adds the specified <see langword="DataTable" />
to the collection.</para>
      </summary>
      <param name="table">The <see langword="DataTable" /> object to add. </param>
    </member>
    <member name="M:System.Data.DataTableCollection.AddRange(System.Data.DataTable[])">
      <summary>
        <para>Copies the elements of the specified <see cref="T:System.Data.DataTable" /> array to
   the end of the collection.</para>
      </summary>
      <param name="tables">The array of <see cref="T:System.Data.DataTable" /> objects to add to the collection.</param>
    </member>
    <member name="M:System.Data.DataTableCollection.Add(System.String)">
      <summary>
        <para> Creates a <see cref="T:System.Data.DataTable" /> object with the specified name and adds it to the
   collection.
   </para>
      </summary>
      <param name="name">The name to give the created <see cref="T:System.Data.DataTable" />. </param>
      <returns>
        <para> The newly created <see cref="T:System.Data.DataTable" /> .
   </para>
      </returns>
    </member>
    <member name="M:System.Data.DataTableCollection.Add">
      <summary>
        <para> Creates a new <see cref="T:System.Data.DataTable" /> object with a default name and adds it to
   the collection.
   </para>
      </summary>
      <returns>
        <para> The newly created <see cref="T:System.Data.DataTable" />.</para>
      </returns>
    </member>
    <member name="M:System.Data.DataTableCollection.CanRemove(System.Data.DataTable)">
      <summary>
        <para> Verifies if the specified <see cref="T:System.Data.DataTable" /> object can be removed from the collection.
   </para>
      </summary>
      <param name="table">The <see langword="DataTable" /> in the collection to perform the check against.</param>
      <returns>
        <para>
          <see langword="true " />if the table can be removed; otherwise,
<see langword="false" />.
   </para>
      </returns>
    </member>
    <member name="M:System.Data.DataTableCollection.Clear">
      <summary>
        <para> Clears the collection of all <see cref="T:System.Data.DataTable" /> objects.
   </para>
      </summary>
    </member>
    <member name="M:System.Data.DataTableCollection.Contains(System.String)">
      <summary>
        <para> Gets a value indicating whether a <see cref="T:System.Data.DataTable" /> object with the specified name exists in the collection.
   </para>
      </summary>
      <param name="name">The name of the <see langword="DataTable" /> to find. </param>
      <returns>
        <para>
          <see langword="true " />if the specified table exists;
   otherwise, <see langword="false" />.
   </para>
      </returns>
    </member>
    <member name="M:System.Data.DataTableCollection.IndexOf(System.Data.DataTable)">
      <summary>
        <para>Gets the index of the specified <see cref="T:System.Data.DataTable" /> object.</para>
      </summary>
      <param name="table">The <see langword="DataTable" /> to search for.</param>
      <returns>
        <para>The 0-based index of the table, or -1 if the table
      isn't found in the collection.</para>
      </returns>
    </member>
    <member name="M:System.Data.DataTableCollection.IndexOf(System.String)">
      <summary>
        <para>Gets the index in the collection of the <see cref="T:System.Data.DataTable" /> 
object with the specified name.</para>
      </summary>
      <param name="tableName">The name of the <see langword="DataTable" /> object to look for.</param>
      <returns>
        <para>The zero-based index of the <see langword="DataTable" /> with the specified name, or
   -1 if the table doesn't exist in the collection.</para>
      </returns>
    </member>
    <member name="M:System.Data.DataTableCollection.OnCollectionChanged(System.ComponentModel.CollectionChangeEventArgs)">
      <summary>
        <para>
       Raises the <see cref="M:System.Data.DataTableCollection.OnCollectionChanged(System.ComponentModel.CollectionChangeEventArgs)" /> event.
    </para>
      </summary>
      <param name="ccevent">
    A <see cref="T:System.ComponentModel.CollectionChangeEventArgs" /> that contains the event data.
 </param>
    </member>
    <member name="M:System.Data.DataTableCollection.OnCollectionChanging(System.ComponentModel.CollectionChangeEventArgs)">
      <summary>
        <para> Raises the <see cref="M:System.Data.DataTableCollection.OnCollectionChanging(System.ComponentModel.CollectionChangeEventArgs)" /> event.
   </para>
      </summary>
      <param name="ccevent">A <see cref="T:System.ComponentModel.CollectionChangeEventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Data.DataTableCollection.Remove(System.Data.DataTable)">
      <summary>
        <para>Removes the specified <see cref="T:System.Data.DataTable" /> object from the collection.
   </para>
      </summary>
      <param name="table">The <see langword="DataTable" /> to remove. </param>
    </member>
    <member name="M:System.Data.DataTableCollection.RemoveAt(System.Int32)">
      <summary>
        <para> Removes the <see cref="T:System.Data.DataTable" /> object at the specified index from the collection.
   </para>
      </summary>
      <param name="index">The index of the <see langword="DataTable" /> to remove. </param>
    </member>
    <member name="M:System.Data.DataTableCollection.Remove(System.String)">
      <summary>
        <para> Removes the <see cref="T:System.Data.DataTable" /> object with the specified name from the
   collection.
   </para>
      </summary>
      <param name="name">The name of the <see cref="T:System.Data.DataTable" /> object to remove. </param>
    </member>
    <member name="P:System.Data.DataTableCollection.List">
      <summary>
        <para>Gets all of the <see cref="T:System.Data.DataTable" /> objects
   in the collection as an array.</para>
      </summary>
    </member>
    <member name="P:System.Data.DataTableCollection.Item(System.Int32)">
      <summary>
        <para>Gets the <see cref="T:System.Data.DataTable" /> object at the specified index.</para>
      </summary>
      <param name="index">The zero-based index of the <see cref="T:System.Data.DataTable" /> to find.</param>
    </member>
    <member name="P:System.Data.DataTableCollection.Item(System.String)">
      <summary>
        <para>Gets the <see cref="T:System.Data.DataTable" /> object with the specified name (not case-sensitive).</para>
      </summary>
      <param name="name">The name of the <see langword="DataTable" /> to find.</param>
    </member>
    <member name="E:System.Data.DataTableCollection.CollectionChanged">
      <summary>
        <para> Occurs whenever the collection is changed.
      </para>
      </summary>
    </member>
    <member name="E:System.Data.DataTableCollection.CollectionChanging">
      <summary>
        <para>Occurs when the collection is changing.</para>
      </summary>
    </member>
    <member name="M:System.Data.DataTablePropertyDescriptor.Equals(System.Object)">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Data.DataTablePropertyDescriptor.GetHashCode">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Data.DataTablePropertyDescriptor.CanResetValue(System.Object)">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Data.DataTablePropertyDescriptor.GetValue(System.Object)">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Data.DataTablePropertyDescriptor.ResetValue(System.Object)">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Data.DataTablePropertyDescriptor.SetValue(System.Object,System.Object)">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Data.DataTablePropertyDescriptor.ShouldSerializeValue(System.Object)">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="P:System.Data.DataTablePropertyDescriptor.Table">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="P:System.Data.DataTablePropertyDescriptor.ComponentType">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="P:System.Data.DataTablePropertyDescriptor.IsReadOnly">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="P:System.Data.DataTablePropertyDescriptor.PropertyType">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="T:System.Data.DataView">
      <summary>
        <para>Represents a databindable, customized view of a <see cref="T:System.Data.DataTable" />
for sorting, filtering, searching, editing, and navigation.</para>
      </summary>
    </member>
    <member name="M:System.Data.DataView.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.DataView" /> class.</para>
      </summary>
    </member>
    <member name="M:System.Data.DataView.#ctor(System.Data.DataTable)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.DataView" /> class with the
   specified <see cref="T:System.Data.DataTable" />.</para>
      </summary>
      <param name="table">A <see cref="T:System.Data.DataTable" /> to add to the <see cref="T:System.Data.DataView" />.</param>
    </member>
    <member name="M:System.Data.DataView.#ctor(System.Data.DataTable,System.String,System.String,System.Data.DataViewRowState)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.DataView" /> class with the
   specified <see cref="T:System.Data.DataTable" />, <see cref="P:System.Data.DataView.RowFilter" />, <see cref="P:System.Data.DataView.Sort" />, and <see cref="T:System.Data.DataViewRowState" />.</para>
      </summary>
      <param name="table">A <see cref="T:System.Data.DataTable" /> to add to the <see cref="T:System.Data.DataView" />.</param>
      <param name="RowFilter">A <see cref="P:System.Data.DataView.RowFilter" /> to apply to the <see cref="T:System.Data.DataView" />.</param>
      <param name="Sort">A <see cref="P:System.Data.DataView.Sort" /> to apply to the <see cref="T:System.Data.DataView" />.</param>
      <param name="RowState">A <see cref="T:System.Data.DataViewRowState" /> to apply to the <see cref="T:System.Data.DataView" />.</param>
    </member>
    <member name="M:System.Data.DataView.AddNew">
      <summary>
        <para>Adds a new row to the <see cref="T:System.Data.DataView" /> .</para>
      </summary>
      <returns>
        <para>A <see cref="T:System.Data.DataRowView" />
 .</para>
      </returns>
    </member>
    <member name="M:System.Data.DataView.BeginInit">
      <summary>
        <para>Begins the initialization of a <see cref="T:System.Data.DataView" /> that is used on a form or used by another component. The initialization occurs at runtime.</para>
      </summary>
    </member>
    <member name="M:System.Data.DataView.EndInit">
      <summary>
        <para>Ends the initialization of a <see cref="T:System.Data.DataView" /> that is used on a form or used by another component. The initialization occurs at runtime.</para>
      </summary>
    </member>
    <member name="M:System.Data.DataView.Close">
      <summary>
        <para> Closes the <see cref="T:System.Data.DataView" />
.</para>
      </summary>
    </member>
    <member name="M:System.Data.DataView.CopyTo(System.Array,System.Int32)">
      <summary>
        <para> Copies items into
      an array. Only for Web Forms Interfaces.
      </para>
      </summary>
      <param name="array">array to copy into. </param>
      <param name="index">index to start at. </param>
    </member>
    <member name="M:System.Data.DataView.Delete(System.Int32)">
      <summary>
        <para>Deletes a row at the specified index.</para>
      </summary>
      <param name="index">The index of the row to delete.</param>
    </member>
    <member name="M:System.Data.DataView.Dispose(System.Boolean)">
      <summary>
        <para>Disposes of the resources (other than memory) used
      by the <see cref="T:System.Data.DataView" /> object.</para>
      </summary>
      <param name="disposing">
        <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</param>
    </member>
    <member name="M:System.Data.DataView.Find(System.Object)">
      <summary>
        <para> Finds a row in the <see cref="T:System.Data.DataView" /> by the specified sort key
   value.
   </para>
      </summary>
      <param name="key">The object to search for.</param>
      <returns>
        <para> The index of the row in the <see cref="T:System.Data.DataView" /> containing the sort key value specified;
   otherwise a null value if the sort key value does not exist.</para>
      </returns>
    </member>
    <member name="M:System.Data.DataView.Find(System.Object[])">
      <summary>
        <para> Finds an array of rows in the <see cref="T:System.Data.DataView" /> by the specified sort key values.
   </para>
      </summary>
      <param name="key">An array of values, typed as <see cref="T:System.Object" />. </param>
      <returns>
        <para> The array of row indexes in the <see cref="T:System.Data.DataView" /> containing the sort key values specified;
   otherwise a null value if the sort key values do not exist.
   </para>
      </returns>
    </member>
    <member name="M:System.Data.DataView.FindRows(System.Object)">
      <summary>
        <para>Returns an array of <see cref="T:System.Data.DataRowView" /> objects whose columns match the specified sort key 
   value. </para>
      </summary>
      <param name="key">The column value, typed as <see cref="T:System.Object" />, to search for.</param>
      <returns>
        <para>An array of <see langword="DataRowView" /> objects whose columns match the 
   specified sort key value; or, if no rows contain the specified sort key values,
   an empty <see langword="DataRowView" /> array. </para>
      </returns>
    </member>
    <member name="M:System.Data.DataView.FindRows(System.Object[])">
      <summary>
        <para>Returns an array of <see cref="T:System.Data.DataRowView" /> objects whose columns match the specified sort key 
   value. </para>
      </summary>
      <param name="key">An array of column values, typed as <see cref="T:System.Object" /> , to search for.</param>
      <returns>
        <para>An array of <see langword="DataRowView" /> objects whose columns match the 
   specified sort key value; or, if no rows contain the specified sort key values,
   an empty <see langword="DataRowView" /> array. </para>
      </returns>
    </member>
    <member name="M:System.Data.DataView.GetEnumerator">
      <summary>
        <para>Gets an enumerator for this <see cref="T:System.Data.DataView" />.</para>
      </summary>
      <returns>
        <para>An <see cref="T:System.Collections.IEnumerator" /> for navigating through
    the list.</para>
      </returns>
    </member>
    <member name="M:System.Data.DataView.IndexListChanged(System.Object,System.ComponentModel.ListChangedEventArgs)">
      <summary>
        <para>Occurs after a <see cref="T:System.Data.DataView" /> has been changed successfully.</para>
      </summary>
      <param name="sender">The source of the event.</param>
      <param name=" e">A <see cref="T:System.ComponentModel.ListChangedEventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.Data.DataView.OnListChanged(System.ComponentModel.ListChangedEventArgs)">
      <summary>
        <para>
       Raises the <see cref="E:System.Data.DataView.ListChanged" /> event.
    </para>
      </summary>
      <param name="e">
    A <see cref="T:System.ComponentModel.ListChangedEventArgs" /> that contains the event data.
 </param>
    </member>
    <member name="M:System.Data.DataView.Open">
      <summary>
        <para> Opens a <see cref="T:System.Data.DataView" />.
   </para>
      </summary>
    </member>
    <member name="M:System.Data.DataView.Reset">
      <summary>
        <para>Reserved for internal use only.</para>
      </summary>
    </member>
    <member name="M:System.Data.DataView.UpdateIndex">
      <summary>
        <para>Reserved for internal use only.</para>
      </summary>
    </member>
    <member name="M:System.Data.DataView.UpdateIndex(System.Boolean)">
      <summary>
        <para>Reserved for internal use only.</para>
      </summary>
      <param name="force">Reserved for internal use only.</param>
    </member>
    <member name="M:System.Data.DataView.ColumnCollectionChanged(System.Object,System.ComponentModel.CollectionChangeEventArgs)">
      <summary>
        <para>Occurs after a <see cref="T:System.Data.DataColumnCollection" /> has been changed successfully.</para>
      </summary>
      <param name="sender">The source of the event.</param>
      <param name=" e">A <see cref="T:System.ComponentModel.ListChangedEventArgs" /> that contains the event data.</param>
    </member>
    <member name="P:System.Data.DataView.AllowDelete">
      <summary>
        <para>
       Sets or gets a value indicating whether deletes are
       allowed.
    </para>
      </summary>
    </member>
    <member name="P:System.Data.DataView.ApplyDefaultSort">
      <summary>
        <para>Gets or sets a value indicating whether to use the default sort.</para>
      </summary>
    </member>
    <member name="P:System.Data.DataView.AllowEdit">
      <summary>
        <para>Gets or sets a value indicating whether edits are allowed.</para>
      </summary>
    </member>
    <member name="P:System.Data.DataView.AllowNew">
      <summary>
        <para>Gets or sets a value indicating whether the new rows can
       be added using the <see cref="M:System.Data.DataView.AddNew" />
       method.</para>
      </summary>
    </member>
    <member name="P:System.Data.DataView.Count">
      <summary>
        <para>Gets the number of records in the <see cref="T:System.Data.DataView" />
after <see cref="P:System.Data.DataView.RowFilter" /> and <see cref="P:System.Data.DataView.RowStateFilter" />
have been applied.</para>
      </summary>
    </member>
    <member name="P:System.Data.DataView.DataViewManager">
      <summary>
        <para>Gets the <see cref="T:System.Data.DataViewManager" /> associated with this view .</para>
      </summary>
    </member>
    <member name="P:System.Data.DataView.IsOpen">
      <summary>
        <para>Gets a value indicating whether the data source is currently open and
      projecting views of data on the <see cref="T:System.Data.DataTable" />.</para>
      </summary>
    </member>
    <member name="P:System.Data.DataView.RowFilter">
      <summary>
        <para>Gets or sets the expression used to filter which rows are viewed in the
    <see cref="T:System.Data.DataView" />.</para>
      </summary>
    </member>
    <member name="P:System.Data.DataView.RowStateFilter">
      <summary>
        <para>Gets or sets the row state filter used in the <see cref="T:System.Data.DataView" />.</para>
      </summary>
    </member>
    <member name="P:System.Data.DataView.Sort">
      <summary>
        <para>Gets
      or sets the sort column or columns, and sort order for the <see cref="T:System.Data.DataTable" />.</para>
      </summary>
    </member>
    <member name="P:System.Data.DataView.Table">
      <summary>
        <para>Gets or sets the source <see cref="T:System.Data.DataTable" />.</para>
      </summary>
    </member>
    <member name="P:System.Data.DataView.Item(System.Int32)">
      <summary>
        <para>Gets a row of data from a specified table.</para>
      </summary>
      <param name="recordIndex">The index of a record in the <see cref="T:System.Data.DataTable" />.</param>
    </member>
    <member name="E:System.Data.DataView.ListChanged">
      <summary>
        <para> Occurs when the list managed by the <see cref="T:System.Data.DataView" /> changes.
   </para>
      </summary>
    </member>
    <member name="T:System.Data.DataViewManager">
      <summary>
        <para> Contains a default <see cref="T:System.Data.DataViewSettingCollection" /> for each
<see cref="T:System.Data.DataTable" /> in a <see cref="T:System.Data.DataSet" />.</para>
      </summary>
    </member>
    <member name="M:System.Data.DataViewManager.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.DataViewManager" /> class.</para>
      </summary>
    </member>
    <member name="M:System.Data.DataViewManager.#ctor(System.Data.DataSet)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.DataViewManager" /> 
class for the specified <see cref="T:System.Data.DataSet" /> .</para>
      </summary>
      <param name="dataSet">The name of the <see cref="T:System.Data.DataSet" /> to use.</param>
    </member>
    <member name="M:System.Data.DataViewManager.CreateDataView(System.Data.DataTable)">
      <summary>
        <para>Creates a <see cref="T:System.Data.DataView" /> for the specified <see cref="T:System.Data.DataTable" /> .</para>
      </summary>
      <param name="table">The name of the <see cref="T:System.Data.DataTable" /> to use in the <see cref="T:System.Data.DataView" />. </param>
      <returns>
        <para>A <see cref="T:System.Data.DataView" /> object.</para>
      </returns>
    </member>
    <member name="M:System.Data.DataViewManager.OnListChanged(System.ComponentModel.ListChangedEventArgs)">
      <summary>
        <para>Raises the <see cref="E:System.Data.DataViewManager.ListChanged" /> event.</para>
      </summary>
      <param name="e">A <see cref="T:System.ComponentModel.ListChangedEventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.Data.DataViewManager.TableCollectionChanged(System.Object,System.ComponentModel.CollectionChangeEventArgs)">
      <summary>
        <para>Raises a <see cref="E:System.Data.DataTableCollection.CollectionChanged" /> event when a
<see cref="T:System.Data.DataTable" />is added to or removed from the <see cref="T:System.Data.DataTableCollection" />.</para>
      </summary>
      <param name="sender">The source of the event.</param>
      <param name="e">A <see cref="T:System.ComponentModel.CollectionChangeEventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.Data.DataViewManager.RelationCollectionChanged(System.Object,System.ComponentModel.CollectionChangeEventArgs)">
      <summary>
        <para>Raises a <see cref="E:System.Data.DataRelationCollection.CollectionChanged" /> event when a
<see cref="T:System.Data.DataRelation" />is added to or removed from the <see cref="T:System.Data.DataRelationCollection" />.</para>
      </summary>
      <param name="sender">The source of the event.</param>
      <param name="e">A <see cref="T:System.ComponentModel.CollectionChangeEventArgs" /> that contains the event data.</param>
    </member>
    <member name="P:System.Data.DataViewManager.DataSet">
      <summary>
        <para>Gets or sets the name of the <see cref="T:System.Data.DataSet" /> to use with the <see cref="T:System.Data.DataViewManager" /> .</para>
      </summary>
    </member>
    <member name="P:System.Data.DataViewManager.DataViewSettings">
      <summary>
        <para>Gets the <see cref="T:System.Data.DataViewSettingCollection" /> for each <see cref="T:System.Data.DataTable" /> in the <see cref="T:System.Data.DataSet" /> .</para>
      </summary>
    </member>
    <member name="P:System.Data.DataViewManager.DataViewSettingCollectionString">
      <summary>
        <para>Gets or sets a value used for code persistence.</para>
      </summary>
    </member>
    <member name="E:System.Data.DataViewManager.ListChanged">
      <summary>
        <para>Occurs a row is added to or deleted from a <see cref="T:System.Data.DataView" />.</para>
      </summary>
    </member>
    <member name="T:System.Data.DataViewRowState">
      <summary>
        <para>Describes the version of data in a <see cref="T:System.Data.DataRow" />.</para>
      </summary>
    </member>
    <member name="F:System.Data.DataViewRowState.None">
      <summary>
        <para>
       None.
    </para>
      </summary>
    </member>
    <member name="F:System.Data.DataViewRowState.Unchanged">
      <summary>
        <para>An unchanged row.</para>
      </summary>
    </member>
    <member name="F:System.Data.DataViewRowState.Added">
      <summary>
        <para>A new row.</para>
      </summary>
    </member>
    <member name="F:System.Data.DataViewRowState.Deleted">
      <summary>
        <para>A deleted row.</para>
      </summary>
    </member>
    <member name="F:System.Data.DataViewRowState.ModifiedCurrent">
      <summary>
        <para>A current version, which is a modified version of original
       data (see <see langword="ModifiedOriginal" />
       ).</para>
      </summary>
    </member>
    <member name="F:System.Data.DataViewRowState.ModifiedOriginal">
      <summary>
        <para>The original version (although it has since been
       modified and is available as <see langword="ModifiedCurrent" />).</para>
      </summary>
    </member>
    <member name="F:System.Data.DataViewRowState.OriginalRows">
      <summary>
        <para>Original rows including unchanged and
       deleted rows.</para>
      </summary>
    </member>
    <member name="F:System.Data.DataViewRowState.CurrentRows">
      <summary>
        <para>Current rows including unchanged, new, and modified rows.</para>
      </summary>
    </member>
    <member name="T:System.Data.DataViewSetting">
      <summary>
        <para>Represents
      the default settings for ApplyDefaultSort, DataViewManager, RowFilter,
      RowStateFilter, Sort, and Table for DataViews created from the
   <see cref="T:System.Data.DataViewManager" />.</para>
      </summary>
    </member>
    <member name="P:System.Data.DataViewSetting.ApplyDefaultSort">
      <summary>
        <para>Gets or sets a value indicating whether to use the default sort.</para>
      </summary>
    </member>
    <member name="P:System.Data.DataViewSetting.DataViewManager">
      <summary>
        <para>Gets the <see cref="T:System.Data.DataViewManager" /> that contains this <see cref="T:System.Data.DataViewSetting" /> .</para>
      </summary>
    </member>
    <member name="P:System.Data.DataViewSetting.Table">
      <summary>
        <para>Gets the <see cref="T:System.Data.DataTable" /> to
   which the <see cref="T:System.Data.DataViewSetting" />
   properties apply.
   </para>
      </summary>
    </member>
    <member name="P:System.Data.DataViewSetting.RowFilter">
      <summary>
        <para>Gets or sets the filter to apply in the <see cref="T:System.Data.DataView" /> .</para>
      </summary>
    </member>
    <member name="P:System.Data.DataViewSetting.RowStateFilter">
      <summary>
        <para>Gets or sets a value indicating whether to display
      Current, Deleted, Modified Current, ModifiedOriginal, New, Original, Unchanged,
      or no rows in the <see cref="T:System.Data.DataView" />
      . </para>
      </summary>
    </member>
    <member name="P:System.Data.DataViewSetting.Sort">
      <summary>
        <para>Gets or sets a value indicating the sort to apply in the
   <see cref="T:System.Data.DataView" /> .</para>
      </summary>
    </member>
    <member name="T:System.Data.DataViewSettingCollection">
      <summary>
        <para>Contains a read-only collection of <see cref="T:System.Data.DataViewSetting" /> objects
   for each <see cref="T:System.Data.DataTable" /> in a <see cref="T:System.Data.DataSet" />.</para>
      </summary>
    </member>
    <member name="M:System.Data.DataViewSettingCollection.CopyTo(System.Array,System.Int32)">
      <summary>
        <para> Copies the elements of the <see cref="T:System.Data.DataViewSettingCollection" /> to the specified array.
   </para>
      </summary>
      <param name="ar"> An <see cref="T:System.Array" /> to which to copy <see cref="T:System.Data.DataViewSettingCollection" /> elements. </param>
      <param name="index">The starting index of the array. </param>
    </member>
    <member name="M:System.Data.DataViewSettingCollection.GetEnumerator">
      <summary>
        <para>Gets an IEnumerator for the collection.</para>
      </summary>
      <returns>
        <para>An <see cref="T:System.Collections.IEnumerator" /> object.</para>
      </returns>
    </member>
    <member name="P:System.Data.DataViewSettingCollection.Item(System.Data.DataTable)">
      <summary>
        <para>Gets the specified <see cref="T:System.Data.DataTable" /> object 
   from the collection.</para>
      </summary>
      <param name="table">The <see cref="T:System.Data.DataTable" />to find.</param>
    </member>
    <member name="P:System.Data.DataViewSettingCollection.Item(System.String)">
      <summary>
        <para>Gets the specified <see cref="T:System.Data.DataTable" /> from the collection.</para>
      </summary>
      <param name="tableName">The name of the <see cref="T:System.Data.DataTable" /> to find.</param>
    </member>
    <member name="P:System.Data.DataViewSettingCollection.Item(System.Int32)">
      <summary>
        <para>Gets the <see cref="T:System.Data.DataTable" /> specified by its index.</para>
      </summary>
      <param name="index">The zero-based index of the <see cref="T:System.Data.DataTable" /> to find.</param>
    </member>
    <member name="P:System.Data.DataViewSettingCollection.Count">
      <summary>
        <para> Gets the number of <see cref="T:System.Data.DataViewSetting" />
objects in the <see cref="T:System.Data.DataViewSettingCollection" /> .</para>
      </summary>
    </member>
    <member name="P:System.Data.DataViewSettingCollection.IsReadOnly">
      <summary>
        <para>Gets a value indicating whether the <see cref="T:System.Data.DataViewSettingCollection" /> is read-only.</para>
      </summary>
    </member>
    <member name="P:System.Data.DataViewSettingCollection.IsSynchronized">
      <summary>
        <para>Gets a value indicating whether access to 
      the <see cref="T:System.Data.DataViewSettingCollection" /> is
      synchronized (thread-safe).</para>
      </summary>
    </member>
    <member name="P:System.Data.DataViewSettingCollection.SyncRoot">
      <summary>
        <para>Gets an object that can be used to synchronize access to 
      the <see cref="T:System.Data.DataViewSettingCollection" /> .</para>
      </summary>
    </member>
    <member name="T:System.Data.DBConcurrencyException">
      <summary>
        <para> The exception that is thrown by the DataAdapter during the update operation if the number of rows affected equals zero. </para>
      </summary>
    </member>
    <member name="M:System.Data.DBConcurrencyException.#ctor(System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.DBConcurrencyException" /> class.</para>
      </summary>
      <param name="message">The text string describing the details of the exception.</param>
    </member>
    <member name="M:System.Data.DBConcurrencyException.#ctor(System.String,System.Exception)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.DBConcurrencyException" /> class.</para>
      </summary>
      <param name="message">The text string describing the details of the exception.</param>
      <param name="inner">A reference to an inner exception.</param>
    </member>
    <member name="P:System.Data.DBConcurrencyException.Row">
      <summary>
        <para>Gets or sets the value of the <see cref="T:System.Data.DataRow" /> .</para>
      </summary>
    </member>
    <member name="T:System.Data.DbType">
      <summary>
        <para>Specifies the data type of a field, a property, or a
      <see langword="Parameter" />
   object of a .NET data provider.</para>
      </summary>
    </member>
    <member name="F:System.Data.DbType.AnsiString">
      <summary>
        <para>A variable-length stream of non-Unicode characters 
      ranging between 1 and 8,000 characters.</para>
      </summary>
    </member>
    <member name="F:System.Data.DbType.Binary">
      <summary>
        <para>A variable-length stream of binary data ranging between 1 and 8,000
      bytes.</para>
        <note type="note">
      ADO.NET cannot correctly infer the type if
      the byte array is larger than 8,000 bytes. Explicitly specify the <see cref="T:System.Data.DbType" />
      
      when working with
      byte arrays larger than 8,000 bytes.
      
      </note>
      </summary>
    </member>
    <member name="F:System.Data.DbType.Byte">
      <summary>
        <para>An 8-bit unsigned integer ranging in value from 0 to 255.</para>
      </summary>
    </member>
    <member name="F:System.Data.DbType.Boolean">
      <summary>
        <para>A simple type representing Boolean values of <see langword="true" /> 
or <see langword="false" /> .</para>
      </summary>
    </member>
    <member name="F:System.Data.DbType.Currency">
      <summary>
        <para>A currency value ranging from -2<superscript term="63" /> (or 
   -922,337,203,685,477.5808) to 2<superscript term="63" /> -1 (or +922,337,203,685,477.5807)
   with an accuracy to a ten-thousandth of a currency unit.</para>
      </summary>
    </member>
    <member name="F:System.Data.DbType.Date">
      <summary>
        <para>Date and time data ranging in value from January 1, 1753 
      to December 31, 9999 to an accuracy of 3.33 milliseconds.</para>
      </summary>
    </member>
    <member name="F:System.Data.DbType.DateTime">
      <summary>
        <para>A type representing a date and time value.</para>
      </summary>
    </member>
    <member name="F:System.Data.DbType.Decimal">
      <summary>
        <para>A simple type representing values ranging from 1.0 x 
      10<superscript term="-28" /> to approximately 7.9 x 10 <superscript term="28" /> with 28-29 significant digits.</para>
      </summary>
    </member>
    <member name="F:System.Data.DbType.Double">
      <summary>
        <para>A floating point type representing values ranging from 
      approximately 5.0 x 10<superscript term="-324" /> to 1.7 x 10 <superscript term="308" /> with a
      precision of 15-16 digits.</para>
      </summary>
    </member>
    <member name="F:System.Data.DbType.Guid">
      <summary>
        <para>A globally unique identifier (or GUID).</para>
      </summary>
    </member>
    <member name="F:System.Data.DbType.Int16">
      <summary>
        <para>An integral type representing signed 16-bit integers 
      with values between -32768 and 32767.</para>
      </summary>
    </member>
    <member name="F:System.Data.DbType.Int32">
      <summary>
        <para>An integral type representing signed 32-bit integers 
      with values between -2147483648 and 2147483647.</para>
      </summary>
    </member>
    <member name="F:System.Data.DbType.Int64">
      <summary>
        <para>An integral type representing signed 64-bit integers 
      with values between -9223372036854775808 and 9223372036854775807.</para>
      </summary>
    </member>
    <member name="F:System.Data.DbType.Object">
      <summary>
        <para>A general type representing any reference or value type 
      not explicitly represented by another <see langword="DbType" /> value.</para>
      </summary>
    </member>
    <member name="F:System.Data.DbType.SByte">
      <summary>
        <para>An integral type representing signed 8-bit integers with 
      values between -128 and 127.</para>
      </summary>
    </member>
    <member name="F:System.Data.DbType.Single">
      <summary>
        <para>A floating point type representing values ranging from 
      approximately 1.5 x 10<superscript term="-45" /> to 3.4 x 10 <superscript term="38" /> with a precision
      of 7 digits.</para>
      </summary>
    </member>
    <member name="F:System.Data.DbType.String">
      <summary>
        <para> A type representing Unicode character strings.</para>
      </summary>
    </member>
    <member name="F:System.Data.DbType.Time">
      <summary>
        <para>Date and time data ranging in value from January 1, 1753 
      to December 31, 9999 to an accuracy of 3.33 milliseconds.</para>
      </summary>
    </member>
    <member name="F:System.Data.DbType.UInt16">
      <summary>
        <para>An integral type representing unsigned 16-bit integers 
      with values between 0 and 65535.</para>
      </summary>
    </member>
    <member name="F:System.Data.DbType.UInt32">
      <summary>
        <para>An integral type representing unsigned 32-bit integers 
      with values between 0 and 4294967295.</para>
      </summary>
    </member>
    <member name="F:System.Data.DbType.UInt64">
      <summary>
        <para>An integral type representing unsigned 64-bit integers 
      with values between 0 and 18446744073709551615.</para>
      </summary>
    </member>
    <member name="F:System.Data.DbType.VarNumeric">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="F:System.Data.DbType.AnsiStringFixedLength">
      <summary>
        <para> A fixed-length stream of non-Unicode characters.</para>
      </summary>
    </member>
    <member name="F:System.Data.DbType.StringFixedLength">
      <summary>
        <para> A fixed-length stream of Unicode characters.</para>
      </summary>
    </member>
    <member name="T:System.Data.FillErrorEventArgs">
      <summary>
        <para>Provides data for the <see cref="E:System.Data.Common.DbDataAdapter.FillError" /> event of 
   a <see cref="T:System.Data.Common.DbDataAdapter" />.</para>
      </summary>
    </member>
    <member name="M:System.Data.FillErrorEventArgs.#ctor(System.Data.DataTable,System.Object[])">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.FillErrorEventArgs" /> class.</para>
      </summary>
      <param name="dataTable">The <see cref="T:System.Data.DataTable" /> being updated.</param>
      <param name="values">The values for the row being updated.</param>
    </member>
    <member name="P:System.Data.FillErrorEventArgs.Continue">
      <summary>
        <para>Gets or sets a value indicating whether to continue the fill 
      operation despite the error.</para>
      </summary>
    </member>
    <member name="P:System.Data.FillErrorEventArgs.DataTable">
      <summary>
        <para>Gets the <see cref="T:System.Data.DataTable" /> being updated when the error occurred.</para>
      </summary>
    </member>
    <member name="P:System.Data.FillErrorEventArgs.Errors">
      <summary>
        <para>Gets the errors being handled.</para>
      </summary>
    </member>
    <member name="P:System.Data.FillErrorEventArgs.Values">
      <summary>
        <para>Gets the values for the row being updated when the error occurred.</para>
      </summary>
    </member>
    <member name="T:System.Data.FillErrorEventHandler">
      <summary>
        <para>Represents the method that will handle the <see cref="E:System.Data.Common.DbDataAdapter.FillError" /> event.</para>
      </summary>
      <param name="sender">The source of the event.</param>
      <param name="e">The <see cref="T:System.Data.FillErrorEventArgs" /> that contains the event data.</param>
    </member>
    <member name="T:System.Data.ForeignKeyConstraint">
      <summary>
        <para>Represents an action
      restriction enforced on a set of columns in a primary key/foreign key relationship when
      a value or row is either deleted or updated.</para>
      </summary>
    </member>
    <member name="M:System.Data.ForeignKeyConstraint.#ctor(System.Data.DataColumn,System.Data.DataColumn)">
      <summary>
        <para>
       Initializes a new instance of the <see cref="T:System.Data.ForeignKeyConstraint" /> class with the specified parent and
       child <see cref="T:System.Data.DataColumn" /> objects.
    </para>
      </summary>
      <param name="parentColumn">
    The parent <see cref="T:System.Data.DataColumn" /> in the constraint.
 </param>
      <param name="childColumn">
    The child <see cref="T:System.Data.DataColumn" /> in the constraint.
 </param>
    </member>
    <member name="M:System.Data.ForeignKeyConstraint.#ctor(System.String,System.Data.DataColumn,System.Data.DataColumn)">
      <summary>
        <para>
       Initializes a new instance of the <see cref="T:System.Data.ForeignKeyConstraint" /> class with the specified name,
       parent and child <see cref="T:System.Data.DataColumn" /> objects.
    </para>
      </summary>
      <param name=" constraintName">
    The name of the constraint.
 </param>
      <param name="parentColumn">
    The parent <see cref="T:System.Data.DataColumn" /> in the constraint.
 </param>
      <param name="childColumn">
    The child <see cref="T:System.Data.DataColumn" /> in the constraint.
 </param>
    </member>
    <member name="M:System.Data.ForeignKeyConstraint.#ctor(System.Data.DataColumn[],System.Data.DataColumn[])">
      <summary>
        <para>
       Initializes a new instance of the <see cref="T:System.Data.ForeignKeyConstraint" /> class with the specified arrays
       of parent and child <see cref="T:System.Data.DataColumn" /> objects.
    </para>
      </summary>
      <param name="parentColumns">
    An array of parent <see cref="T:System.Data.DataColumn" /> in the constraint.
 </param>
      <param name="childColumns">
    An array of child <see cref="T:System.Data.DataColumn" /> in the constraint.
 </param>
    </member>
    <member name="M:System.Data.ForeignKeyConstraint.#ctor(System.String,System.Data.DataColumn[],System.Data.DataColumn[])">
      <summary>
        <para>
       Initializes a new instance of the <see cref="T:System.Data.ForeignKeyConstraint" /> class with the specified name,
       and arrays of parent and child <see cref="T:System.Data.DataColumn" /> objects.
    </para>
      </summary>
      <param name="constraintName">
    The name of the <see cref="T:System.Data.ForeignKeyConstraint" />. If <see langword="null" /> or empty string, a default name will be given when added to the constraints collection.
 </param>
      <param name="parentColumns">
    An array of parent <see cref="T:System.Data.DataColumn" /> in the constraint.
 </param>
      <param name="childColumns">
    An array of child <see cref="T:System.Data.DataColumn" /> in the constraint.
 </param>
    </member>
    <member name="M:System.Data.ForeignKeyConstraint.#ctor(System.String,System.String,System.String[],System.String[],System.Data.AcceptRejectRule,System.Data.Rule,System.Data.Rule)">
      <summary>
        <para>This constructor is provided for design time support in the Visual Studio .NET environment. 
   <see cref="T:System.Data.ForeignKeyConstraint" /> objects created by using this constructor must then be added to the collection via
   <see cref="M:System.Data.ConstraintCollection.AddRange(System.Data.Constraint[])" />. Tables and columns with the specified names must exist at the time the method is called, 
      or if <see cref="M:System.Data.DataTable.BeginInit" /> has been called prior to calling this constructor, the tables and columns with the specified names
      must exist at the time that <see cref="M:System.Data.DataTable.EndInit" /> is called.</para>
      </summary>
      <param name="constraintName">The name of the constraint. </param>
      <param name="parentColumnNames">An array of the names of parent <see cref="T:System.Data.DataColumn" /> objects in the constraint. </param>
      <param name="childColumnNames">An array of the names of child <see cref="T:System.Data.DataColumn" /> objects in the constraint. </param>
      <param name="parentTableName">The names of the parent <see cref="T:System.Data.DataTable" /> that contains parent <see cref="T:System.Data.DataColumn" /> objects in the constraint. </param>
      <param name="acceptRejectRule">One of the <see cref="T:System.Data.AcceptRejectRule" /> values. Possible values include <see langword="None" />, <see langword="Cascade" />, and <see langword="Default" />.</param>
      <param name="deleteRule">One of the <see cref="T:System.Data.Rule" /> values to use when a row is deleted. The default is <see langword="Cascade" />. Possible values include: <see langword="None" />, <see langword="Cascade" />, <see langword="SetNull" />, <see langword="SetDefault" />, and <see langword="Default" />.</param>
      <param name="updateRule">One of the <see cref="T:System.Data.Rule" /> values to use when a row is updated. The default is <see langword="Cascade" />. Possible values include: <see langword="None" />, <see langword="Cascade" />, <see langword="SetNull" />, <see langword="SetDefault" />, and <see langword="Default" />.</param>
    </member>
    <member name="M:System.Data.ForeignKeyConstraint.Equals(System.Object)">
      <summary>
        <para>Gets a value indicating whether the current <see cref="T:System.Data.ForeignKeyConstraint" /> is identical to the specified object.</para>
      </summary>
      <param name="key">The object to which this <see cref="T:System.Data.ForeignKeyConstraint" /> is compared. Two <see cref="T:System.Data.ForeignKeyConstraint" /> are equal if they constrain the same columns.</param>
      <returns>
        <para>
          <see langword="true" />, if the objects are identical; 
    otherwise, <see langword="false" /> .</para>
      </returns>
    </member>
    <member name="M:System.Data.ForeignKeyConstraint.GetHashCode">
      <summary>
        <para>Gets the hash code of this instance of the <see cref="T:System.Data.ForeignKeyConstraint" /> object. </para>
      </summary>
      <returns>
        <para>A 32-bit signed integer hash code.</para>
      </returns>
    </member>
    <member name="P:System.Data.ForeignKeyConstraint.Columns">
      <summary>
        <para>Gets the child columns of this constraint.</para>
      </summary>
    </member>
    <member name="P:System.Data.ForeignKeyConstraint.Table">
      <summary>
        <para>Gets the child table of this constraint.</para>
      </summary>
    </member>
    <member name="P:System.Data.ForeignKeyConstraint.AcceptRejectRule">
      <summary>
        <para>Indicates the action that should take place across
      this constraint when <see cref="M:System.Data.DataTable.AcceptChanges" />
      is invoked.</para>
      </summary>
    </member>
    <member name="P:System.Data.ForeignKeyConstraint.DeleteRule">
      <summary>
        <para> Gets
      or sets the action that occurs across this constraint when a row is deleted.</para>
      </summary>
    </member>
    <member name="P:System.Data.ForeignKeyConstraint.RelatedColumns">
      <summary>
        <para> The parent columns of this constraint.
      </para>
      </summary>
    </member>
    <member name="P:System.Data.ForeignKeyConstraint.RelatedTable">
      <summary>
        <para>Gets the parent table of this constraint.</para>
      </summary>
    </member>
    <member name="P:System.Data.ForeignKeyConstraint.UpdateRule">
      <summary>
        <para>Gets or
      sets the action that occurs across this constraint on when a row is
      updated.</para>
      </summary>
    </member>
    <member name="T:System.Data.IColumnMapping">
      <summary>
        <para> Associates a data source column with a <see cref="T:System.Data.DataSet" /> column, and is implemented by the <see cref="T:System.Data.Common.DataColumnMapping" /> class, which is
   used in common by .NET data providers.
   </para>
      </summary>
    </member>
    <member name="P:System.Data.IColumnMapping.DataSetColumn">
      <summary>
        <para>Gets or sets the name of the column within
 the <see cref="T:System.Data.DataSet" /> to map to.</para>
      </summary>
    </member>
    <member name="P:System.Data.IColumnMapping.SourceColumn">
      <summary>
        <para>Gets or sets
      the name of the column within the data source to map from. The name is case-sensitive.</para>
      </summary>
    </member>
    <member name="T:System.Data.IColumnMappingCollection">
      <summary>
        <para> Contains a collection of DataColumnMapping objects,
      and is implemented by the <see cref="T:System.Data.Common.DataColumnMappingCollection" />, which is used in common by
      .NET data
      providers.</para>
      </summary>
    </member>
    <member name="M:System.Data.IColumnMappingCollection.Add(System.String,System.String)">
      <summary>
        <para> Adds a ColumnMapping object to the ColumnMapping 
      collection using the source column and <see cref="T:System.Data.DataSet" /> column names.
      </para>
      </summary>
      <param name="sourceColumnName">The case-sensitive name of the source column. </param>
      <param name="dataSetColumnName">The name of the <see cref="T:System.Data.DataSet" /> column. </param>
      <returns>
        <para> The ColumnMapping object that was added to the collection.
      </para>
      </returns>
    </member>
    <member name="M:System.Data.IColumnMappingCollection.Contains(System.String)">
      <summary>
        <para>Gets a value indicating whether the <see cref="T:System.Data.Common.DataColumnMappingCollection" /> contains
   a <see cref="T:System.Data.Common.DataColumnMapping" /> object
   with the specified source column name.</para>
      </summary>
      <param name="sourceColumnName">The case-sensitive name of the source column.</param>
      <returns>
        <para>
          <see langword="true" />
if a <see cref="T:System.Data.Common.DataColumnMapping" /> object with
the specified source column name exists, otherwise <see langword="false" /> .</para>
      </returns>
    </member>
    <member name="M:System.Data.IColumnMappingCollection.GetByDataSetColumn(System.String)">
      <summary>
        <para> Gets the ColumnMapping object with
      the specified <see cref="T:System.Data.DataSet" /> column name.</para>
      </summary>
      <param name="dataSetColumnName">The name of the <see cref="T:System.Data.DataSet" /> column within the collection.</param>
      <returns>
        <para> The ColumnMapping object with the specified <see langword="DataSet" /> column name.</para>
      </returns>
    </member>
    <member name="M:System.Data.IColumnMappingCollection.IndexOf(System.String)">
      <summary>
        <para>Gets the location of the <see cref="T:System.Data.Common.DataColumnMapping" /> object with the specified source column name. The name is
   case-sensitive.</para>
      </summary>
      <param name="sourceColumnName">The case-sensitive name of the source column.</param>
      <returns>
        <para>The zero-based location of the <see langword="DataColumnMapping" /> object with the
   specified source column name.</para>
      </returns>
    </member>
    <member name="M:System.Data.IColumnMappingCollection.RemoveAt(System.String)">
      <summary>
        <para> Removes the <see cref="T:System.Data.IColumnMapping" /> object with the specified <see cref="P:System.Data.IColumnMapping.SourceColumn" /> 
name from the
collection.
</para>
      </summary>
      <param name="sourceColumnName">The case-sensitive <see langword="SourceColumn" /> name. </param>
    </member>
    <member name="P:System.Data.IColumnMappingCollection.Item(System.String)">
      <summary>
        <para>Gets or sets
      the <see cref="T:System.Data.IColumnMapping" /> object with the specified
   <see langword="SourceColumn" /> 
   name.</para>
      </summary>
      <param name="index">The <see langword="SourceColumn" /> name of the <see langword="IColumnMapping" /> object to find.</param>
    </member>
    <member name="T:System.Data.IDataParameter">
      <summary>
        <para> Represents a parameter to a Command object, and
      optionally, its mapping to <see cref="T:System.Data.DataSet" /> columns; and is implemented by .NET data providers
      that access data sources.
      </para>
      </summary>
    </member>
    <member name="P:System.Data.IDataParameter.DbType">
      <summary>
        <para> Gets or sets the <see cref="T:System.Data.DbType" /> of the
   parameter.</para>
      </summary>
    </member>
    <member name="P:System.Data.IDataParameter.Direction">
      <summary>
        <para> Gets or sets a value indicating whether
      the parameter
      is input-only, output-only, bidirectional, or a stored procedure return value parameter.</para>
      </summary>
    </member>
    <member name="P:System.Data.IDataParameter.IsNullable">
      <summary>
        <para>Gets
      or sets a value indicating whether the parameter accepts null values.</para>
      </summary>
    </member>
    <member name="P:System.Data.IDataParameter.ParameterName">
      <summary>
        <para>Gets or sets the name of the <see cref="T:System.Data.IDataParameter" />
.</para>
      </summary>
    </member>
    <member name="P:System.Data.IDataParameter.SourceColumn">
      <summary>
        <para>Gets or sets the name of the source column that is mapped to
      the <see cref="T:System.Data.DataSet" /> and used for loading or returning the <see cref="P:System.Data.IDataParameter.Value" />
      .</para>
      </summary>
    </member>
    <member name="P:System.Data.IDataParameter.SourceVersion">
      <summary>
        <para>Gets or sets the <see cref="T:System.Data.DataRowVersion" /> to use when loading <see cref="P:System.Data.IDataParameter.Value" /> .</para>
      </summary>
    </member>
    <member name="P:System.Data.IDataParameter.Value">
      <summary>
        <para>Gets or sets the value of the parameter.</para>
      </summary>
    </member>
    <member name="T:System.Data.IDataParameterCollection">
      <summary>
        <para>Collects all parameters relevant to a Command
      object
      and
      their mappings to <see cref="T:System.Data.DataSet" /> columns, and is
      implemented by .NET data providers that access data
      sources.</para>
      </summary>
    </member>
    <member name="M:System.Data.IDataParameterCollection.Contains(System.String)">
      <summary>
        <para>Gets a value indicating whether a
      parameter in the collection has the specified source table name.</para>
      </summary>
      <param name="parameterName"> The name of the parameter.</param>
      <returns>
        <para>
          <see langword="true" /> if the collection contains the parameter; otherwise,
<see langword="false" />.</para>
      </returns>
    </member>
    <member name="M:System.Data.IDataParameterCollection.IndexOf(System.String)">
      <summary>
        <para>Gets the location of the <see cref="T:System.Data.IDataParameter" /> within the collection.</para>
      </summary>
      <param name="parameterName">The name of the parameter.</param>
      <returns>
        <para>The zero-based location of the <see cref="T:System.Data.IDataParameter" />
within the collection.</para>
      </returns>
    </member>
    <member name="M:System.Data.IDataParameterCollection.RemoveAt(System.String)">
      <summary>
        <para> Removes the <see cref="T:System.Data.IDataParameter" /> from the collection.
   </para>
      </summary>
      <param name="parameterName"> The name of the parameter. </param>
    </member>
    <member name="P:System.Data.IDataParameterCollection.Item(System.String)">
      <summary>
        <para>Gets the parameter at the specified index.</para>
      </summary>
      <param name="parameterName"> The name of the parameter to retrieve.</param>
    </member>
    <member name="T:System.Data.IDataReader">
      <summary>
        <para>Provides a means of reading one or more forward-only
      streams of result sets obtained by executing a command at a data source, and is
      implemented by .NET data providers that access relational databases.</para>
      </summary>
    </member>
    <member name="T:System.Data.IDataRecord">
      <summary>
        <para> Provides access
      to the column values within each row for a DataReader, and is implemented
      by .NET data providers that access relational databases.
      </para>
      </summary>
    </member>
    <member name="M:System.Data.IDataRecord.GetName(System.Int32)">
      <summary>
        <para>Gets the name for the field to find.</para>
      </summary>
      <param name="i">The index of the field to find.</param>
      <returns>
        <para>The name of the field or the empty string (""), if there is no value to
       return.</para>
      </returns>
    </member>
    <member name="M:System.Data.IDataRecord.GetDataTypeName(System.Int32)">
      <summary>
        <para>Gets the data type information for the specified field.</para>
      </summary>
      <param name="i">The index of the field to find.</param>
      <returns>
        <para>The data type information for the specified field.</para>
      </returns>
    </member>
    <member name="M:System.Data.IDataRecord.GetFieldType(System.Int32)">
      <summary>
        <para>Gets the <see cref="T:System.Type" /> information corresponding to the type
    of <see cref="T:System.Object" />
    that would be returned from <see cref="M:System.Data.IDataRecord.GetValue(System.Int32)" />
    .</para>
      </summary>
      <param name="i">The index of the field to find.</param>
      <returns>
        <para>The <see cref="T:System.Type" /> information corresponding to the type of <see cref="T:System.Object" /> that would be
    returned from <see cref="M:System.Data.IDataRecord.GetValue(System.Int32)" /> .</para>
      </returns>
    </member>
    <member name="M:System.Data.IDataRecord.GetValue(System.Int32)">
      <summary>
        <para>
       Return the value of the specified field.
    </para>
      </summary>
      <param name="i">
    The index of the field to find.
 </param>
      <returns>
        <para>
       The <see cref="T:System.Object" /> which will contain the field value upon return.
    </para>
      </returns>
    </member>
    <member name="M:System.Data.IDataRecord.GetValues(System.Object[])">
      <summary>
        <para>Gets all the attribute fields in the collection for the current
      record.</para>
      </summary>
      <param name="values">An array of <see cref="T:System.Object" /> to copy the attribute fields into.</param>
      <returns>
        <para>The number of instances of <see cref="T:System.Object" /> in the array.</para>
      </returns>
    </member>
    <member name="M:System.Data.IDataRecord.GetOrdinal(System.String)">
      <summary>
        <para> Return the index of the named field.
      </para>
      </summary>
      <param name="name">The name of the field to find. </param>
      <returns>
        <para> The index of the named field.
      </para>
      </returns>
    </member>
    <member name="M:System.Data.IDataRecord.GetBoolean(System.Int32)">
      <summary>
        <para>Gets the value of the specified column as a Boolean.</para>
      </summary>
      <param name="i"> The zero-based column ordinal.</param>
      <returns>
        <para>The value of the column.</para>
      </returns>
    </member>
    <member name="M:System.Data.IDataRecord.GetByte(System.Int32)">
      <summary>
        <para>Gets the 8-bit unsigned integer value of the specified column.</para>
      </summary>
      <param name="i"> The zero-based column ordinal.</param>
      <returns>
        <para>The 8-bit unsigned integer value of the specified column.</para>
      </returns>
    </member>
    <member name="M:System.Data.IDataRecord.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)">
      <summary>
        <para> Reads a stream of bytes from the specified column offset into the buffer as
      an array, starting at the given buffer offset.
      </para>
      </summary>
      <param name="i">The zero-based column ordinal. </param>
      <param name=" fieldOffset">The index within the field from which to begin the read operation. </param>
      <param name=" buffer">The buffer into which to read the stream of bytes. </param>
      <param name=" bufferoffset">The index for <paramref name="buffer" /> to begin the read operation. </param>
      <param name=" length">The number of bytes to read. </param>
      <returns>
        <para> The actual number of bytes read.
      </para>
      </returns>
    </member>
    <member name="M:System.Data.IDataRecord.GetChar(System.Int32)">
      <summary>
        <para>Gets the character value of the specified column.</para>
      </summary>
      <param name="i"> The zero-based column ordinal.</param>
      <returns>
        <para>The character value of the specified column.</para>
      </returns>
    </member>
    <member name="M:System.Data.IDataRecord.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)">
      <summary>
        <para> Reads a stream of characters from the specified column offset into the buffer as an array, starting at the given buffer offset.
      </para>
      </summary>
      <param name="i">The zero-based column ordinal. </param>
      <param name=" buffer">The buffer into which to read the stream of bytes. </param>
      <param name=" length">The number of bytes to read. </param>
      <param name=" bufferoffset">The index for <paramref name="buffer" /> to begin the read operation. </param>
      <param name=" fieldoffset">The index within the row from which to begin the read operation. </param>
      <returns>
        <para> The actual number of characters read.
      </para>
      </returns>
    </member>
    <member name="M:System.Data.IDataRecord.GetGuid(System.Int32)">
      <summary>
        <para>
       Returns the guid value of the specified field.
    </para>
      </summary>
      <param name="i">
    The index of the field to find.
 </param>
      <returns>
        <para>
       The guid value of the specified field.
    </para>
      </returns>
    </member>
    <member name="M:System.Data.IDataRecord.GetInt16(System.Int32)">
      <summary>
        <para>Gets the 16-bit signed integer value of the specified field.</para>
      </summary>
      <param name="i">The index of the field to find.</param>
      <returns>
        <para>The 16-bit signed integer value of the specified field.</para>
      </returns>
    </member>
    <member name="M:System.Data.IDataRecord.GetInt32(System.Int32)">
      <summary>
        <para>Gets the 32-bit signed integer value of the specified field.</para>
      </summary>
      <param name="i">The index of the field to find.</param>
      <returns>
        <para>The 32-bit signed integer value of the specified field.</para>
      </returns>
    </member>
    <member name="M:System.Data.IDataRecord.GetInt64(System.Int32)">
      <summary>
        <para>Gets the 64-bit signed integer value of the specified field.</para>
      </summary>
      <param name="i">The index of the field to find.</param>
      <returns>
        <para>The 64-bit signed integer value of the specified field.</para>
      </returns>
    </member>
    <member name="M:System.Data.IDataRecord.GetFloat(System.Int32)">
      <summary>
        <para>Gets the single-precision floating point number of the specified
       field.</para>
      </summary>
      <param name="i">The index of the field to find.</param>
      <returns>
        <para>The single-precision floating point number of the
       specified field.</para>
      </returns>
    </member>
    <member name="M:System.Data.IDataRecord.GetDouble(System.Int32)">
      <summary>
        <para>Gets the double-precision floating point number of the specified
       field.</para>
      </summary>
      <param name="i">The index of the field to find.</param>
      <returns>
        <para>The double-precision floating point number of the
       specified field.</para>
      </returns>
    </member>
    <member name="M:System.Data.IDataRecord.GetString(System.Int32)">
      <summary>
        <para>Gets the string value of the specified field.</para>
      </summary>
      <param name="i">The index of the field to find.</param>
      <returns>
        <para>The string value of the specified field.</para>
      </returns>
    </member>
    <member name="M:System.Data.IDataRecord.GetDecimal(System.Int32)">
      <summary>
        <para>Gets the fixed-position numeric value of the specified field.</para>
      </summary>
      <param name="i">The index of the field to find.</param>
      <returns>
        <para>The fixed-position numeric value of the specified field.</para>
      </returns>
    </member>
    <member name="M:System.Data.IDataRecord.GetDateTime(System.Int32)">
      <summary>
        <para>Gets the date and time data value of the spcified field.</para>
      </summary>
      <param name="i">The index of the field to find.</param>
      <returns>
        <para>The date and time data value of the spcified field.</para>
      </returns>
    </member>
    <member name="M:System.Data.IDataRecord.GetData(System.Int32)">
      <summary>
        <para>Gets an <see cref="T:System.Data.IDataReader" /> to be used when the field points to more remote
    structured data.</para>
      </summary>
      <param name="i">The index of the field to find.</param>
      <returns>
        <para>An <see cref="T:System.Data.IDataReader" /> to be used when the field points
    to more remote structured data.</para>
      </returns>
    </member>
    <member name="M:System.Data.IDataRecord.IsDBNull(System.Int32)">
      <summary>
        <para> Return whether the specified field is set to null.
      </para>
      </summary>
      <param name="i">The index of the field to find. </param>
      <returns>
        <para>
          <see langword="true" /> if the specified field is set to null, otherwise
<see langword="false" />.
   </para>
      </returns>
    </member>
    <member name="P:System.Data.IDataRecord.FieldCount">
      <summary>
        <para>Gets the number of columns in the current row.</para>
      </summary>
    </member>
    <member name="P:System.Data.IDataRecord.Item(System.Int32)">
      <summary>
        <para>Gets the column located at the specified index.</para>
      </summary>
      <param name="i">The index of the column to get.</param>
    </member>
    <member name="P:System.Data.IDataRecord.Item(System.String)">
      <summary>
        <para>Gets the column with the specified name.</para>
      </summary>
      <param name="name">The name of the column to find.</param>
    </member>
    <member name="M:System.Data.IDataReader.Close">
      <summary>
        <para>Closes the <see cref="T:System.Data.IDataReader" />0bject.</para>
      </summary>
    </member>
    <member name="M:System.Data.IDataReader.NextResult">
      <summary>
        <para> Advances the data reader to the next result, when reading the results of
      batch SQL statements.
      </para>
      </summary>
      <returns>
        <para>
          <see langword="true" /> if there are more rows; otherwise,
<see langword="false" />.</para>
      </returns>
    </member>
    <member name="M:System.Data.IDataReader.Read">
      <summary>
        <para>Advances the <see cref="T:System.Data.IDataReader" />
to the next record.</para>
      </summary>
      <returns>
        <para>
          <see langword="true" /> if there are more rows; otherwise,
<see langword="false" />.</para>
      </returns>
    </member>
    <member name="M:System.Data.IDataReader.GetSchemaTable">
      <summary>
        <para>Returns a <see cref="T:System.Data.DataTable" /> that describes the column metadata
   of the <see cref="T:System.Data.IDataReader" /> . </para>
      </summary>
      <returns>
        <para>A <see cref="T:System.Data.DataTable" /> that describes the column metadata.</para>
      </returns>
    </member>
    <member name="P:System.Data.IDataReader.Depth">
      <summary>
        <para>Gets a value indicating the depth of nesting for the current row.</para>
      </summary>
    </member>
    <member name="P:System.Data.IDataReader.IsClosed">
      <summary>
        <para>Gets a value indicating whether the data reader is
      closed.</para>
      </summary>
    </member>
    <member name="P:System.Data.IDataReader.RecordsAffected">
      <summary>
        <para> Gets the number of rows changed, inserted, or deleted by execution of the SQL statement.</para>
      </summary>
    </member>
    <member name="T:System.Data.IDataAdapter">
      <summary>
        <para> Allows an object
      to implement a DataAdapter, and represents a set of methods and mapping action-related properties used to fill and
      refresh a <see cref="T:System.Data.DataSet" />
      and update a data source.</para>
      </summary>
    </member>
    <member name="M:System.Data.IDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)">
      <summary>
        <para>Adds a <see cref="T:System.Data.DataTable" /> named "Table" to the specified <see cref="T:System.Data.DataSet" /> and configures the schema to match that in the data source based on the specified <see cref="T:System.Data.SchemaType" />.</para>
      </summary>
      <param name="dataSet">The <see cref="T:System.Data.DataSet" /> to be filled with the schema from the data source.</param>
      <param name="schemaType">One of the<see cref="T:System.Data.SchemaType" /> values.</param>
      <returns>
        <para>An array of <see cref="T:System.Data.DataTable" /> objects that contain schema information returned from the data
   source.</para>
      </returns>
    </member>
    <member name="M:System.Data.IDataAdapter.Fill(System.Data.DataSet)">
      <summary>
        <para>Adds or refreshes rows in the <see cref="T:System.Data.DataSet" /> to match those
   in the data source using the <see cref="T:System.Data.DataSet" /> name, and creates
   a <see cref="T:System.Data.DataTable" /> named "Table".</para>
      </summary>
      <param name="dataSet">A <see cref="T:System.Data.DataSet" /> to fill with records and, if necessary, schema.</param>
      <returns>
        <para>The number of rows successfully added to or refreshed in the <see cref="T:System.Data.DataSet" />. This does not include rows affected by statements
   that do not return rows.</para>
      </returns>
    </member>
    <member name="M:System.Data.IDataAdapter.GetFillParameters">
      <summary>
        <para>Gets the parameters set by the user when executing an SQL SELECT statement.</para>
      </summary>
      <returns>
        <para>An array of <see cref="T:System.Data.IDataParameter" /> objects that contains the
   parameters set by the
   user.</para>
      </returns>
    </member>
    <member name="M:System.Data.IDataAdapter.Update(System.Data.DataSet)">
      <summary>
        <para> Calls the respective INSERT, UPDATE, or DELETE statements for each inserted, updated, or deleted row
      in the specified <see cref="T:System.Data.DataSet" /> from a <see cref="T:System.Data.DataTable" /> named "Table".</para>
      </summary>
      <param name="dataSet">The <see cref="T:System.Data.DataSet" /> used to update the data source.</param>
      <returns>
        <para>The number of rows successfully updated from the <see cref="T:System.Data.DataSet" />.</para>
      </returns>
    </member>
    <member name="P:System.Data.IDataAdapter.MissingMappingAction">
      <summary>
        <para>Indicates or specifies whether unmapped
       source tables
       or columns are passed with their source names in order to be filtered or to raise an error.</para>
      </summary>
    </member>
    <member name="P:System.Data.IDataAdapter.MissingSchemaAction">
      <summary>
        <para>Indicates or specifies whether missing source
       tables, columns, and their relationships are added to the data set schema, ignored, or cause an error to be raised.</para>
      </summary>
    </member>
    <member name="P:System.Data.IDataAdapter.TableMappings">
      <summary>
        <para>Indicates how a source table is mapped to a data set table.</para>
      </summary>
    </member>
    <member name="T:System.Data.IDbCommand">
      <summary>
        <para>Represents
      an SQL statement that is executed while connected to a data source, and is implemented by .NET data providers that access relational databases.</para>
      </summary>
    </member>
    <member name="M:System.Data.IDbCommand.Prepare">
      <summary>
        <para>Creates a prepared (or compiled) version of the command on the data
      source.</para>
      </summary>
    </member>
    <member name="M:System.Data.IDbCommand.Cancel">
      <summary>
        <para>Attempts to cancels the execution of an <see cref="T:System.Data.IDbCommand" /> .</para>
      </summary>
    </member>
    <member name="M:System.Data.IDbCommand.CreateParameter">
      <summary>
        <para> Creates a new instance of an
      <see cref="T:System.Data.IDbDataParameter" /> object. </para>
      </summary>
      <returns>
        <para>An <see langword="IDbDataParameter" /> object.</para>
      </returns>
    </member>
    <member name="M:System.Data.IDbCommand.ExecuteNonQuery">
      <summary>
        <para>Executes a SQL statement against the
      <see langword="Connection" /> object of an ADO.NET data provider, and returns the number of rows affected.
      </para>
      </summary>
      <returns>
        <para>The number of rows affected.</para>
      </returns>
    </member>
    <member name="M:System.Data.IDbCommand.ExecuteReader">
      <summary>
        <para>Executes the <see cref="P:System.Data.IDbCommand.CommandText" /> against the <see cref="P:System.Data.IDbCommand.Connection" /> and builds an <see cref="T:System.Data.IDataReader" /> .</para>
      </summary>
      <returns>
        <para>An <see cref="T:System.Data.IDataReader" /> object.</para>
      </returns>
    </member>
    <member name="M:System.Data.IDbCommand.ExecuteReader(System.Data.CommandBehavior)">
      <summary>
        <para>Executes the <see cref="P:System.Data.IDbCommand.CommandText" /> against the <see cref="P:System.Data.IDbCommand.Connection" />, and builds an <see cref="T:System.Data.IDataReader" /> using one of the <see cref="T:System.Data.CommandBehavior" /> values.</para>
      </summary>
      <param name="behavior">One of the <see cref="T:System.Data.CommandBehavior" />values.</param>
      <returns>
        <para>An <see cref="T:System.Data.IDataReader" /> object.</para>
      </returns>
    </member>
    <member name="M:System.Data.IDbCommand.ExecuteScalar">
      <summary>
        <para>Executes the query, and returns the first column of the
      first row in the resultset returned by the query. Extra columns or rows are
      ignored.</para>
      </summary>
      <returns>
        <para>The first column of the first row in the resultset.</para>
      </returns>
    </member>
    <member name="P:System.Data.IDbCommand.Connection">
      <summary>
        <para>Gets or sets the <see cref="T:System.Data.IDbConnection" /> used by this instance of the
<see cref="T:System.Data.IDbCommand" />.</para>
      </summary>
    </member>
    <member name="P:System.Data.IDbCommand.Transaction">
      <summary>
        <para>Gets or sets the transaction in which the
      <see langword="Command" /> object of an ADO.NET data provider
      executes.
      </para>
      </summary>
    </member>
    <member name="P:System.Data.IDbCommand.CommandText">
      <summary>
        <para>Gets or sets the text command to run against the data source.</para>
      </summary>
    </member>
    <member name="P:System.Data.IDbCommand.CommandTimeout">
      <summary>
        <para>Gets or sets the wait time before terminating
      the attempt to execute a command and generating an error.</para>
      </summary>
    </member>
    <member name="P:System.Data.IDbCommand.CommandType">
      <summary>
        <para>Indicates or specifies how the <see cref="P:System.Data.IDbCommand.CommandText" /> property is
   interpreted.</para>
      </summary>
    </member>
    <member name="P:System.Data.IDbCommand.Parameters">
      <summary>
        <para> Gets the <see cref="T:System.Data.IDataParameterCollection" />
.</para>
      </summary>
    </member>
    <member name="P:System.Data.IDbCommand.UpdatedRowSource">
      <summary>
        <para>Gets or sets how command results are applied
      to the <see cref="T:System.Data.DataRow" /> when used by the <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" />
      method of a <see cref="T:System.Data.Common.DbDataAdapter" /> .</para>
      </summary>
    </member>
    <member name="T:System.Data.IDbConnection">
      <summary>
        <para>Represents an open connection to a data source, and is implemented by
      .NET data providers that access relational databases.</para>
      </summary>
    </member>
    <member name="M:System.Data.IDbConnection.BeginTransaction">
      <summary>
        <para> Begins a database transaction.
      </para>
      </summary>
      <returns>
        <para>An object representing the new transaction.</para>
      </returns>
    </member>
    <member name="M:System.Data.IDbConnection.BeginTransaction(System.Data.IsolationLevel)">
      <summary>
        <para>Begins a database transaction with the specified <see cref="T:System.Data.IsolationLevel" /> value.</para>
      </summary>
      <param name="il">One of the <see cref="T:System.Data.IsolationLevel" /> values.</param>
      <returns>
        <para>An object representing the new transaction.</para>
      </returns>
    </member>
    <member name="M:System.Data.IDbConnection.Close">
      <summary>
        <para> Closes the
      connection to the database.
      </para>
      </summary>
    </member>
    <member name="M:System.Data.IDbConnection.ChangeDatabase(System.String)">
      <summary>
        <para>Changes the current database for an open 
   <see langword="Connection" /> object.</para>
      </summary>
      <param name="databaseName">The name of the database to use in place of the current database.</param>
    </member>
    <member name="M:System.Data.IDbConnection.CreateCommand">
      <summary>
        <para>Creates and returns a Command object associated with the 
      connection.</para>
      </summary>
      <returns>
        <para>A Command object associated with the connection.</para>
      </returns>
    </member>
    <member name="M:System.Data.IDbConnection.Open">
      <summary>
        <para> Opens a database connection with the settings 
      specified by the <see langword="ConnectionString" /> property of the
      provider-specific Connection object.
      </para>
      </summary>
    </member>
    <member name="P:System.Data.IDbConnection.ConnectionString">
      <summary>
        <para> Gets or sets the string used to open a database.</para>
      </summary>
    </member>
    <member name="P:System.Data.IDbConnection.ConnectionTimeout">
      <summary>
        <para>Gets the time to wait while trying to establish a connection before terminating the attempt and generating an
      error.</para>
      </summary>
    </member>
    <member name="P:System.Data.IDbConnection.Database">
      <summary>
        <para> Gets the name of the current database or the
      database to be used once a connection is open.</para>
      </summary>
    </member>
    <member name="P:System.Data.IDbConnection.State">
      <summary>
        <para>Gets the current state of the connection.</para>
      </summary>
    </member>
    <member name="T:System.Data.IDbDataAdapter">
      <summary>
        <para> Represents a set of command-related
      properties that are used to fill the <see cref="T:System.Data.DataSet" /> and update a data source, and is implemented by
      .NET data providers
      that access relational databases.</para>
      </summary>
    </member>
    <member name="P:System.Data.IDbDataAdapter.SelectCommand">
      <summary>
        <para>Gets or sets
      an SQL statement used to select records in the data source.</para>
      </summary>
    </member>
    <member name="P:System.Data.IDbDataAdapter.InsertCommand">
      <summary>
        <para>Gets or sets an SQL statement used to insert new records into the data source.</para>
      </summary>
    </member>
    <member name="P:System.Data.IDbDataAdapter.UpdateCommand">
      <summary>
        <para>Gets or
      sets an SQL statement used to update records in the data source.</para>
      </summary>
    </member>
    <member name="P:System.Data.IDbDataAdapter.DeleteCommand">
      <summary>
        <para>Gets or sets an SQL statement for deleting records from the data set.</para>
      </summary>
    </member>
    <member name="T:System.Data.IDbDataParameter">
      <summary>
        <para>Used by the Visual Basic .NET Data Designers to represent 
      a parameter to a Command object, and optionally, its mapping to <see cref="T:System.Data.DataSet" />
      columns.</para>
      </summary>
    </member>
    <member name="P:System.Data.IDbDataParameter.Precision">
      <summary>
        <para>Indicates the precision of numeric parameters.</para>
      </summary>
    </member>
    <member name="P:System.Data.IDbDataParameter.Scale">
      <summary>
        <para>Indicates the scale of numeric parameters.</para>
      </summary>
    </member>
    <member name="P:System.Data.IDbDataParameter.Size">
      <summary>
        <para>The size of the parameter.</para>
      </summary>
    </member>
    <member name="T:System.Data.IDbTransaction">
      <summary>
        <para> Represents a transaction to be performed at
      a data source, and is implemented by .NET data providers that access relational
      databases.</para>
      </summary>
    </member>
    <member name="M:System.Data.IDbTransaction.Commit">
      <summary>
        <para> Commits the database transaction.
 </para>
      </summary>
    </member>
    <member name="M:System.Data.IDbTransaction.Rollback">
      <summary>
        <para> Rolls back a transaction from a pending state.</para>
      </summary>
    </member>
    <member name="P:System.Data.IDbTransaction.Connection">
      <summary>
        <para>Specifies the Connection object to associate with the transaction. </para>
      </summary>
    </member>
    <member name="P:System.Data.IDbTransaction.IsolationLevel">
      <summary>
        <para>Specifies the <see cref="T:System.Data.IsolationLevel" />
for this transaction.</para>
      </summary>
    </member>
    <member name="T:System.Data.IsolationLevel">
      <summary>
        <para> Specifies the transaction locking behavior for the connection.
      </para>
      </summary>
    </member>
    <member name="F:System.Data.IsolationLevel.Unspecified">
      <summary>
        <para>
       A different isolation level than the one specified is being used, but the
       level cannot be determined.
    </para>
      </summary>
    </member>
    <member name="F:System.Data.IsolationLevel.Chaos">
      <summary>
        <para>
       The pending changes from more highly isolated transactions cannot be
       overwritten.
    </para>
      </summary>
    </member>
    <member name="F:System.Data.IsolationLevel.ReadUncommitted">
      <summary>
        <para>
       A dirty read is possible, meaning that no shared locks are issued and no exclusive locks are honored.
    </para>
      </summary>
    </member>
    <member name="F:System.Data.IsolationLevel.ReadCommitted">
      <summary>
        <para>
       Shared locks are held while the data is being read to avoid dirty reads, but
       the data can be changed before the end of the transaction, resulting in
       non-repeatable reads or phantom data.
    </para>
      </summary>
    </member>
    <member name="F:System.Data.IsolationLevel.RepeatableRead">
      <summary>
        <para>
       Locks are placed on all data that is used in a query, preventing other users from updating the data. Prevents non-repeatable reads but phantom rows are still possible.
    </para>
      </summary>
    </member>
    <member name="F:System.Data.IsolationLevel.Serializable">
      <summary>
        <para>
       A range lock is palced on the <see cref="T:System.Data.DataSet" />
       , preventing other users from updating or inserting rows into the dataset until the transaction is complete.
    </para>
      </summary>
    </member>
    <member name="T:System.Data.ITableMapping">
      <summary>
        <para> Associates a source table with a table in a <see cref="T:System.Data.DataSet" />, and is implemented by the <see cref="T:System.Data.Common.DataTableMapping" /> class, which is
   used in common by .NET data providers.
   </para>
      </summary>
    </member>
    <member name="P:System.Data.ITableMapping.ColumnMappings">
      <summary>
        <para>Gets the derived <see cref="T:System.Data.Common.DataColumnMappingCollection" /> for the
<see cref="T:System.Data.DataTable" /> .</para>
      </summary>
    </member>
    <member name="P:System.Data.ITableMapping.DataSetTable">
      <summary>
        <para>Gets or sets the case-insensitive name of the table within the <see cref="T:System.Data.DataSet" />.</para>
      </summary>
    </member>
    <member name="P:System.Data.ITableMapping.SourceTable">
      <summary>
        <para>Gets or sets the case-sensitive name of the source
       table.</para>
      </summary>
    </member>
    <member name="T:System.Data.ITableMappingCollection">
      <summary>
        <para> Contains a collection of TableMapping objects, and is
      implemented by the <see cref="T:System.Data.Common.DataTableMappingCollection" />, which is used in common by .NET data
      providers.</para>
      </summary>
    </member>
    <member name="M:System.Data.ITableMappingCollection.Add(System.String,System.String)">
      <summary>
        <para>
       Adds a table mapping to the collection.
    </para>
      </summary>
      <param name="sourceTableName">
    The case-sensitive name of the source table.
 </param>
      <param name="dataSetTableName">
    The name of the <see cref="T:System.Data.DataSet" />table.
 </param>
      <returns>
        <para>
       A reference to the newly-mapped <see cref="T:System.Data.ITableMapping" /> object.
    </para>
      </returns>
    </member>
    <member name="M:System.Data.ITableMappingCollection.Contains(System.String)">
      <summary>
        <para>Gets a value indicating whether the collection contains a table mapping
       with the specified source table name.</para>
      </summary>
      <param name="sourceTableName">The case-sensitive name of the source table.</param>
      <returns>
        <para>
          <see langword="true" /> if a table mapping with the 
    specified source table name exists, otherwise <see langword="false" /> .</para>
      </returns>
    </member>
    <member name="M:System.Data.ITableMappingCollection.GetByDataSetTable(System.String)">
      <summary>
        <para>Gets the TableMapping object with the 
      specified <see cref="T:System.Data.DataSet" /> table name.</para>
      </summary>
      <param name="dataSetTableName">The name of the <see langword="DataSet" /> table within the collection.</param>
      <returns>
        <para>The DataMapping object with the specified 
   <see langword="DataSet" /> table name.</para>
      </returns>
    </member>
    <member name="M:System.Data.ITableMappingCollection.IndexOf(System.String)">
      <summary>
        <para>Gets the location of the <see cref="T:System.Data.ITableMapping" /> object within the collection.</para>
      </summary>
      <param name="sourceTableName">The case-sensitive name of the source table.</param>
      <returns>
        <para>The zero-based location of the <see cref="T:System.Data.ITableMapping" /> object within the collection.</para>
      </returns>
    </member>
    <member name="M:System.Data.ITableMappingCollection.RemoveAt(System.String)">
      <summary>
        <para> Removes the <see cref="T:System.Data.ITableMapping" /> object with the specified <see cref="P:System.Data.ITableMapping.SourceTable" /> name from the
   collection.
   </para>
      </summary>
      <param name="sourceTableName">The case-sensitive name of the <see langword="SourceTable" /> . </param>
    </member>
    <member name="P:System.Data.ITableMappingCollection.Item(System.String)">
      <summary>
        <para>Gets or sets the instance of <see cref="T:System.Data.ITableMapping" /> with the specified <see cref="P:System.Data.ITableMapping.SourceTable" /> name.</para>
      </summary>
      <param name="index">The <see langword="SourceTable" /> name of the <see cref="T:System.Data.ITableMapping" />.</param>
    </member>
    <member name="T:System.Data.MappingType">
      <summary>
        <para>Specifies how a <see cref="T:System.Data.DataColumn" /> is mapped.</para>
      </summary>
    </member>
    <member name="F:System.Data.MappingType.Element">
      <summary>
        <para>The column is mapped to an XML element.</para>
      </summary>
    </member>
    <member name="F:System.Data.MappingType.Attribute">
      <summary>
        <para>The column is mapped to an XML attribute.</para>
      </summary>
    </member>
    <member name="F:System.Data.MappingType.SimpleContent">
      <summary>
        <para>The column is mapped to an <see cref="T:System.Xml.XmlText" /> node.</para>
      </summary>
    </member>
    <member name="F:System.Data.MappingType.Hidden">
      <summary>
        <para>The column is mapped to an internal structure.</para>
      </summary>
    </member>
    <member name="T:System.Data.MergeFailedEventArgs">
      <summary>
        <para>Occurs when a target and source <see langword="DataRow" /> have the 
   same primary key value, and the <see cref="P:System.Data.DataSet.EnforceConstraints" /> property is set to true.</para>
      </summary>
    </member>
    <member name="M:System.Data.MergeFailedEventArgs.#ctor(System.Data.DataTable,System.String)">
      <summary>
        <para>Initializes a new instance of a <see cref="T:System.Data.MergeFailedEventArgs" /> class with 
   the <see cref="T:System.Data.DataTable" /> name and a description
   of the merge conflict.</para>
      </summary>
      <param name="table">The <see cref="T:System.Data.DataTable" /> name.</param>
      <param name="conflict">A description of the merge conflict.</param>
    </member>
    <member name="P:System.Data.MergeFailedEventArgs.Table">
      <summary>
        <para>Returns the name of the <see cref="T:System.Data.DataTable" />.</para>
      </summary>
    </member>
    <member name="P:System.Data.MergeFailedEventArgs.Conflict">
      <summary>
        <para>Returns a description of the merge conflict.</para>
      </summary>
    </member>
    <member name="T:System.Data.MergeFailedEventHandler">
      <summary>
        <para>Represents the method that will handle the <see cref="E:System.Data.DataSet.MergeFailed" /> event.</para>
      </summary>
    </member>
    <member name="T:System.Data.MissingMappingAction">
      <summary>
        <para> Determines the action that occurs when a
       mapping is missing from a source table or a source
       column.</para>
      </summary>
    </member>
    <member name="F:System.Data.MissingMappingAction.Passthrough">
      <summary>
        <para>
       The source column or source table created and added
       to the <see cref="T:System.Data.DataSet" /> using its original
       name.
    </para>
      </summary>
    </member>
    <member name="F:System.Data.MissingMappingAction.Ignore">
      <summary>
        <para>
       The column or table not having a mapping is ignored.
       Returns <see langword="null" />
       .
    </para>
      </summary>
    </member>
    <member name="F:System.Data.MissingMappingAction.Error">
      <summary>
        <para>A <see cref="T:System.SystemException" /> is generated.</para>
      </summary>
    </member>
    <member name="T:System.Data.MissingSchemaAction">
      <summary>
        <para>
       Specifies
       the action to take when adding data to
       the <see cref="T:System.Data.DataSet" /> and the required <see cref="T:System.Data.DataTable" />
       or <see cref="T:System.Data.DataColumn" /> is
       missing.
    </para>
      </summary>
    </member>
    <member name="F:System.Data.MissingSchemaAction.Add">
      <summary>
        <para>
       Adds the necessary columns to complete the schema.
    </para>
      </summary>
    </member>
    <member name="F:System.Data.MissingSchemaAction.Ignore">
      <summary>
        <para>
       Ignores the extra columns.
    </para>
      </summary>
    </member>
    <member name="F:System.Data.MissingSchemaAction.Error">
      <summary>
        <para>A <see cref="T:System.SystemException" /> is generated.</para>
      </summary>
    </member>
    <member name="F:System.Data.MissingSchemaAction.AddWithKey">
      <summary>
        <para> Adds the necessary columns and primary key information 
      to complete the schema. For more information about how primary key information
      is added to a <see cref="T:System.Data.DataTable" />, see <see cref="M:System.Data.IDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)" />
      .To function properly with the OLE DB .NET Data
      Provider, <see langword="AddWithKey " />requires that the native OLE DB
      provider obtains necessary primary key information by setting the
      DBPROP_UNIQUEROWS property, and then determines which columns are primary key
      columns by examining DBCOLUMN_KEYCOLUMN in the IColumnsRowset. As an
      alternative, the user may explicitly set the primary key constraints on each
   <see cref="T:System.Data.DataTable" />. This ensures that
      incoming records that match existing records are updated instead of
      appended. When using <see langword="AddWithKey" />, the SQL Server .NET Data
      Provider appends a FOR BROWSE clause to the statement being executed. The user
      should be aware of potential side effects, such as interference with the use of
      SET FMTONLY ON statements. See SQL Server Books Online for more
      information.
      
   </para>
      </summary>
    </member>
    <member name="T:System.Data.ParameterDirection">
      <summary>
        <para> Specifies the type of a parameter within a query
      relative to the <see cref="T:System.Data.DataSet" />
      .
      </para>
      </summary>
    </member>
    <member name="F:System.Data.ParameterDirection.Input">
      <summary>
        <para>
       The parameter
       is an input parameter.
    </para>
      </summary>
    </member>
    <member name="F:System.Data.ParameterDirection.Output">
      <summary>
        <para>
       The parameter
       is an output parameter.
    </para>
      </summary>
    </member>
    <member name="F:System.Data.ParameterDirection.InputOutput">
      <summary>
        <para>
       The parameter is capable of both input and output.
    </para>
      </summary>
    </member>
    <member name="F:System.Data.ParameterDirection.ReturnValue">
      <summary>
        <para> The parameter represents a return value from an operation 
      such as a stored procedure, built-in function, or user-defined function.
      </para>
      </summary>
    </member>
    <member name="T:System.Data.PropertyAttributes">
      <summary>
        <para>
       Specifies the attributes of a property.
    </para>
      </summary>
    </member>
    <member name="F:System.Data.PropertyAttributes.NotSupported">
      <summary>
        <para>
       The property is not supported by the provider.
    </para>
      </summary>
    </member>
    <member name="F:System.Data.PropertyAttributes.Required">
      <summary>
        <para>
       The user must specify a value for this property before the data source is
       initialized.
    </para>
      </summary>
    </member>
    <member name="F:System.Data.PropertyAttributes.Optional">
      <summary>
        <para>
       The user does not need to specify a value for this property before the data
       source is initialized.
    </para>
      </summary>
    </member>
    <member name="F:System.Data.PropertyAttributes.Read">
      <summary>
        <para>
       The user can read the property.
    </para>
      </summary>
    </member>
    <member name="F:System.Data.PropertyAttributes.Write">
      <summary>
        <para>
       The user can write to the property.
    </para>
      </summary>
    </member>
    <member name="T:System.Data.PropertyCollection">
      <summary>
        <para>Represents a collection of properties that can be added to <see cref="T:System.Data.DataColumn" />, 
 <see cref="T:System.Data.DataSet" />, 
    or <see cref="T:System.Data.DataTable" />.</para>
      </summary>
    </member>
    <member name="F:System.Data.Range.Null">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Data.Range.#ctor(System.Int32,System.Int32)">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Data.Range.Intersection(System.Data.Range,System.Data.Range)">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Data.Range.Equals(System.Object)">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Data.Range.GetHashCode">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Data.Range.Offset(System.Int32)">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Data.Range.Resize(System.Int32,System.Int32)">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Data.Range.ToString">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="P:System.Data.Range.Count">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="P:System.Data.Range.Difference">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="P:System.Data.Range.IsNull">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="P:System.Data.Range.Max">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="P:System.Data.Range.Min">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Data.IFilter.Invoke(System.Data.DataRow,System.Data.DataRowVersion)">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Data.RelatedView.#ctor(System.Data.DataColumn[],System.Object[])">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Data.RelatedView.Invoke(System.Data.DataRow,System.Data.DataRowVersion)">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Data.RelatedView.AddNew">
      <summary>
        <para>Adds a new row to the <see cref="T:System.Data.DataRowView" /> .</para>
      </summary>
    </member>
    <member name="M:System.Data.RelatedView.UpdateIndex(System.Boolean)">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Data.RelationshipConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>
        <para>Gets a value indicating whether this converter can
      convert an object to the given destination type using the context.</para>
      </summary>
      <param name="context">
        <para>An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context. </para>
      </param>
      <param name="destinationType">A <see cref="T:System.Type" /> that represents the type you wish to convert to.</param>
      <returns>
        <para>
          <see langword="true " />if this converter can perform the conversion; otherwise,
   <see langword="false" />. </para>
      </returns>
    </member>
    <member name="M:System.Data.RelationshipConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>
        <para>Converts the given object to another type. The most common types to convert
      are to and from a string object. The default implementation will make a call
      to ToString on the object if the object is valid and if the destination
      type is string. If this cannot convert to the desitnation type, this will
      throw a NotSupportedException.</para>
      </summary>
      <param name="context">A formatter context. This object can be used to extract additional information about the environment this converter is being invoked from. This may be null, so you should always check. Also, properties on the context object may also return null. </param>
      <param name="culture">An optional culture info. If not supplied the current culture is assumed. </param>
      <param name="value">The object to convert. </param>
      <param name="destinationType">The type to convert the object to. </param>
      <returns>
        <para>The converted object.</para>
      </returns>
    </member>
    <member name="T:System.Data.Rule">
      <summary>
        <para>Indicates the action that occurs when a <see cref="T:System.Data.ForeignKeyConstraint" />
 is enforced.</para>
      </summary>
    </member>
    <member name="F:System.Data.Rule.None">
      <summary>
        <para> No action taken on related rows.
      </para>
      </summary>
    </member>
    <member name="F:System.Data.Rule.Cascade">
      <summary>
        <para> Delete or update related rows. This is the default.
      </para>
      </summary>
    </member>
    <member name="F:System.Data.Rule.SetNull">
      <summary>
        <para> Set values in related rows to <see langword="DBNull" /> .
   </para>
      </summary>
    </member>
    <member name="F:System.Data.Rule.SetDefault">
      <summary>
        <para> Set values in related rows to the value contained in 
      the <see cref="P:System.Data.DataColumn.DefaultValue" /> property.
      </para>
      </summary>
    </member>
    <member name="T:System.Data.SchemaType">
      <summary>
        <para> Specifies how to handle existing schema mappings when performing a 
   <see cref="M:System.Data.Common.DataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)" /> operation.</para>
      </summary>
    </member>
    <member name="F:System.Data.SchemaType.Source">
      <summary>
        <para>Ignore 
      any table mappings on the DataAdapter. Configure the <see cref="T:System.Data.DataSet" /> using the incoming
      schema without applying any transformations. </para>
      </summary>
    </member>
    <member name="F:System.Data.SchemaType.Mapped">
      <summary>
        <para>Apply any existing table mappings to the incoming schema. Configure the 
   <see cref="T:System.Data.DataSet" /> with the transformed schema.</para>
      </summary>
    </member>
    <member name="T:System.Data.SqlDbType">
      <summary>
        <para> Specifies SQL Server data types.
      </para>
      </summary>
    </member>
    <member name="F:System.Data.SqlDbType.BigInt">
      <summary>
        <para>
          <see cref="T:System.Int64" />
        </para>
        <para>A 64-bit signed integer.</para>
      </summary>
    </member>
    <member name="F:System.Data.SqlDbType.Binary">
      <summary>
        <para>
          <see cref="T:System.Array" /> of type <see cref="T:System.Byte" /></para>
        <para>A fixed-length stream of binary data ranging between 1 and 8,000 bytes.</para>
      </summary>
    </member>
    <member name="F:System.Data.SqlDbType.Bit">
      <summary>
        <para>
          <see cref="T:System.Boolean" />
        </para>
        <para> An unsigned numeric value that can be 0, 1, or
 <see langword="null" /> .</para>
      </summary>
    </member>
    <member name="F:System.Data.SqlDbType.Char">
      <summary>
        <para>
          <see cref="T:System.String" />
        </para>
        <para>A fixed-length stream of non-Unicode characters ranging between 1 and 8,000 
    characters.</para>
      </summary>
    </member>
    <member name="F:System.Data.SqlDbType.DateTime">
      <summary>
        <para>
          <see cref="T:System.DateTime" />
        </para>
        <para>Date and time data ranging in value from January 1, 1753 to December 31, 9999 
    to an accuracy of 3.33 milliseconds.</para>
      </summary>
    </member>
    <member name="F:System.Data.SqlDbType.Decimal">
      <summary>
        <para>
          <see cref="T:System.Decimal" />
        </para>
        <para>A fixed precision and scale numeric
    value between -10<superscript term="38" /> -1 and 10<superscript term="38" />
    -1.</para>
      </summary>
    </member>
    <member name="F:System.Data.SqlDbType.Float">
      <summary>
        <para>
          <see cref="T:System.Double" />
        </para>
        <para>A floating point number within the range of -1.79E +308 through 1.79E 
    +308.</para>
      </summary>
    </member>
    <member name="F:System.Data.SqlDbType.Image">
      <summary>
        <para>
          <see cref="T:System.Array" /> of type <see cref="T:System.Byte" /></para>
        <para> A variable-length stream of binary data ranging from 0
    to 2<superscript term="31 " />-1 (or 2,147,483,647) bytes.</para>
      </summary>
    </member>
    <member name="F:System.Data.SqlDbType.Int">
      <summary>
        <para>
          <see cref="T:System.Int32" />
        </para>
        <para>A 32-bit signed integer.</para>
      </summary>
    </member>
    <member name="F:System.Data.SqlDbType.Money">
      <summary>
        <para>
          <see cref="T:System.Decimal" />
        </para>
        <para> A currency value ranging from -2<superscript term="63" /> (or
-922,337,203,685,477.5808) to 2<superscript term="63" /> -1 (or +922,337,203,685,477.5807)
with an accuracy to a ten-thousandth of a currency
unit.</para>
      </summary>
    </member>
    <member name="F:System.Data.SqlDbType.NChar">
      <summary>
        <para>
          <see cref="T:System.String" />
        </para>
        <para>A fixed-length stream of Unicode characters ranging between 1 and 4,000 
    characters.</para>
      </summary>
    </member>
    <member name="F:System.Data.SqlDbType.NText">
      <summary>
        <para>
          <see cref="T:System.String" />
        </para>
        <para> A variable-length stream of Unicode data with a maximum length
    of 2<superscript term="30" /> - 1 (or 1,073,741,823) characters.</para>
      </summary>
    </member>
    <member name="F:System.Data.SqlDbType.NVarChar">
      <summary>
        <para>
          <see cref="T:System.String" />
        </para>
        <para>A variable-length stream of Unicode characters ranging between 1 and 4,000 
    characters.</para>
        <note type="note">
    Implicit conversion fails if the string
    is greater than
    4,000 characters. Explicitly set the object when
    working with strings longer than 4,000
    characters.
 </note>
      </summary>
    </member>
    <member name="F:System.Data.SqlDbType.Real">
      <summary>
        <para>
          <see cref="T:System.Single" />
        </para>
        <para>A floating point number within the range of -3.40E +38 through 3.40E +38.</para>
      </summary>
    </member>
    <member name="F:System.Data.SqlDbType.UniqueIdentifier">
      <summary>
        <para>
          <see cref="T:System.Guid" />
        </para>
        <para>A globally unique identifier (or GUID).</para>
      </summary>
    </member>
    <member name="F:System.Data.SqlDbType.SmallDateTime">
      <summary>
        <para>
          <see cref="T:System.DateTime" />
        </para>
        <para>Date and time data ranging in value from January 1, 1900 to June 6, 2079 to 
    an accuracy of one minute.</para>
      </summary>
    </member>
    <member name="F:System.Data.SqlDbType.SmallInt">
      <summary>
        <para>
          <see cref="T:System.Int16" />
        </para>
        <para>A 16-bit signed integer.</para>
      </summary>
    </member>
    <member name="F:System.Data.SqlDbType.SmallMoney">
      <summary>
        <para>
          <see cref="T:System.Decimal" />
        </para>
        <para>A currency value ranging from -214,748.3648 to +214,748.3647 with an accuracy 
    to a ten-thousandth of a currency unit.</para>
      </summary>
    </member>
    <member name="F:System.Data.SqlDbType.Text">
      <summary>
        <para>
          <see cref="T:System.String" />
        </para>
        <para> A variable-length stream of non-Unicode data with a
    maximum length of 2<superscript term="31 " />-1 (or 2,147,483,647) characters. </para>
      </summary>
    </member>
    <member name="F:System.Data.SqlDbType.Timestamp">
      <summary>
        <para>
          <see cref="T:System.DateTime" />
        </para>
        <para>Data and time data in the format yyyymmddhhmmss.</para>
      </summary>
    </member>
    <member name="F:System.Data.SqlDbType.TinyInt">
      <summary>
        <para>
          <see cref="T:System.Byte" />
        </para>
        <para>An 8-bit unsigned integer.</para>
      </summary>
    </member>
    <member name="F:System.Data.SqlDbType.VarBinary">
      <summary>
        <para>
          <see cref="T:System.Array" /> of type <see cref="T:System.Byte" /></para>
        <para>A variable-length stream of binary data ranging between 1 and 8,000 
    bytes.</para>
        <note type="note">
    Implicit conversion fails if the byte array is greater than 8,000 bytes. Explicitly
    set the object when working with byte arrays larger than 8,000 bytes.
 </note>
      </summary>
    </member>
    <member name="F:System.Data.SqlDbType.VarChar">
      <summary>
        <para>
          <see cref="T:System.String" />
        </para>
        <para>A variable-length stream of non-Unicode characters ranging between 1 and 
    8,000 characters.</para>
      </summary>
    </member>
    <member name="F:System.Data.SqlDbType.Variant">
      <summary>
        <para>
          <see cref="T:System.Object" />
        </para>
        <para>A special data type that can contain numeric, string, binary, or date data as 
    well as the SQL Server values Empty and Null, which is assumed if no other type
    is declared.</para>
      </summary>
    </member>
    <member name="T:System.Data.StateChangeEventArgs">
      <summary>
        <para>Provides data for the state change event of a .NET data provider.</para>
      </summary>
    </member>
    <member name="M:System.Data.StateChangeEventArgs.#ctor(System.Data.ConnectionState,System.Data.ConnectionState)">
      <summary>
        <para>
       Initializes a new instance of the <see cref="T:System.Data.StateChangeEventArgs" /> class, when given the original
       state and the current state of the object.
    </para>
      </summary>
      <param name="originalState">
    One of the <see cref="T:System.Data.ConnectionState" /> values.
 </param>
      <param name=" currentState">
    One of the <see cref="T:System.Data.ConnectionState" /> values.
 </param>
    </member>
    <member name="P:System.Data.StateChangeEventArgs.CurrentState">
      <summary>
        <para> Gets the new state
      of the connection. The connection object
      will be in the new state already when the event is
      fired.</para>
      </summary>
    </member>
    <member name="P:System.Data.StateChangeEventArgs.OriginalState">
      <summary>
        <para> Gets the original state of the
      connection.</para>
      </summary>
    </member>
    <member name="T:System.Data.StateChangeEventHandler">
      <summary>
        <para> Represents the method that will handle the <see cref="E:System.Data.OleDb.OleDbConnection.StateChange" /> 
event.
</para>
      </summary>
      <param name="sender">The source of the event. </param>
      <param name=" e">The <see cref="T:System.Data.StateChangeEventArgs" /> that contains the event data. </param>
    </member>
    <member name="T:System.Data.StatementType">
      <summary>
        <para> Specifies the type of SQL query to be used by the <see cref="T:System.Data.OleDb.OleDbRowUpdatedEventArgs" />,
<see cref="T:System.Data.OleDb.OleDbRowUpdatingEventArgs" />, <see cref="T:System.Data.SqlClient.SqlRowUpdatedEventArgs" />, or
<see cref="T:System.Data.SqlClient.SqlRowUpdatingEventArgs" /> 
class.</para>
      </summary>
    </member>
    <member name="F:System.Data.StatementType.Select">
      <summary>
        <para> A SQL query that is a SELECT statement.</para>
      </summary>
    </member>
    <member name="F:System.Data.StatementType.Insert">
      <summary>
        <para> A SQL query that is an INSERT statement.</para>
      </summary>
    </member>
    <member name="F:System.Data.StatementType.Update">
      <summary>
        <para> A SQL query that is an UPDATE statement.</para>
      </summary>
    </member>
    <member name="F:System.Data.StatementType.Delete">
      <summary>
        <para> A SQL query that is a DELETE statement.</para>
      </summary>
    </member>
    <member name="T:System.Data.UniqueConstraint">
      <summary>
        <para>Represents a restriction on a set of columns in which all values must be unique.</para>
      </summary>
    </member>
    <member name="M:System.Data.UniqueConstraint.#ctor(System.String,System.Data.DataColumn)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.UniqueConstraint" /> class with the specified name and
<see cref="T:System.Data.DataColumn" />.</para>
      </summary>
      <param name="name">The name of the constraint.</param>
      <param name="column">The <see cref="T:System.Data.DataColumn" /> to constrain.</param>
    </member>
    <member name="M:System.Data.UniqueConstraint.#ctor(System.Data.DataColumn)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.UniqueConstraint" /> class with the specified <see cref="T:System.Data.DataColumn" />.</para>
      </summary>
      <param name="column">The <see cref="T:System.Data.DataColumn" /> to constrain.</param>
    </member>
    <member name="M:System.Data.UniqueConstraint.#ctor(System.String,System.Data.DataColumn[])">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.UniqueConstraint" /> class with the specified name and array
   of <see cref="T:System.Data.DataColumn" /> objects.</para>
      </summary>
      <param name="name">The name of the constraint.</param>
      <param name="columns">The array of <see cref="T:System.Data.DataColumn" /> objects to constrain.</param>
    </member>
    <member name="M:System.Data.UniqueConstraint.#ctor(System.Data.DataColumn[])">
      <summary>
        <para> Initializes a new instance of the <see cref="T:System.Data.UniqueConstraint" /> class with the given array of <see cref="T:System.Data.DataColumn" />
objects.</para>
      </summary>
      <param name="columns">The array of <see cref="T:System.Data.DataColumn" /> objects to constrain. </param>
    </member>
    <member name="M:System.Data.UniqueConstraint.#ctor(System.String,System.String[],System.Boolean)">
      <summary>
        <para>This constructor is provided for design time support in the Visual Studio .NET environment. <see cref="T:System.Data.UniqueConstraint" /> 
objects created by using this constructor must then be added to the collection via <see cref="M:System.Data.ConstraintCollection.AddRange(System.Data.Constraint[])" />.
Columns with the specified names must exist at the time the method is called, or if <see cref="M:System.Data.DataTable.BeginInit" /> has been called
prior to calling this constructor, the columns with the specified names must exist at the time that <see cref="M:System.Data.DataTable.EndInit" /> is called.</para>
      </summary>
      <param name="name">The name of the constraint.</param>
      <param name="columnNames">An array containing names of <see cref="T:System.Data.DataColumn" /> objects to constrain. </param>
      <param name="isPrimaryKey">
        <see langword="true" /> to indicate that the constraint is a primary key; otherwise, <see langword="false" />.</param>
    </member>
    <member name="M:System.Data.UniqueConstraint.#ctor(System.String,System.Data.DataColumn,System.Boolean)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.UniqueConstraint" /> class 
   with the specified name, the <see cref="T:System.Data.DataColumn" /> to constrain, and a value specifying whether the constraint is a primary key.</para>
      </summary>
      <param name="name">The name of the constraint.</param>
      <param name="column">The <see cref="T:System.Data.DataColumn" /> to constrain.</param>
      <param name="isPrimaryKey">
        <see langword="true" /> to indicate that the constraint is a primary key; otherwise, <see langword="false" />.</param>
    </member>
    <member name="M:System.Data.UniqueConstraint.#ctor(System.Data.DataColumn,System.Boolean)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.UniqueConstraint" /> class 
   with the <see cref="T:System.Data.DataColumn" /> to constrain, and a value specifying whether the constraint is a primary key.</para>
      </summary>
      <param name="column">The <see cref="T:System.Data.DataColumn" /> to constrain.</param>
      <param name="isPrimaryKey">
        <see langword="true" /> to indicate that the constraint is a primary key; otherwise, <see langword="false" />.</param>
    </member>
    <member name="M:System.Data.UniqueConstraint.#ctor(System.String,System.Data.DataColumn[],System.Boolean)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.UniqueConstraint" /> class with the specified name, an array
   of <see cref="T:System.Data.DataColumn" /> objects to constrain,
   and a value specifying whether the constraint is a primary key.</para>
      </summary>
      <param name="name">The name of the constraint.</param>
      <param name="columns">An array of <see cref="T:System.Data.DataColumn" /> objects to constrain.</param>
      <param name="isPrimaryKey">
        <see langword="true" /> to indicate that the constraint is a primary key; otherwise, <see langword="false" />.</param>
    </member>
    <member name="M:System.Data.UniqueConstraint.#ctor(System.Data.DataColumn[],System.Boolean)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.UniqueConstraint" /> class with an array
   of <see cref="T:System.Data.DataColumn" /> objects to constrain,
   and a value specifying whether the constraint is a primary key.</para>
      </summary>
      <param name="columns">An array of <see cref="T:System.Data.DataColumn" /> objects to constrain.</param>
      <param name="isPrimaryKey">
        <see langword="true" /> to indicate that the constraint is a primary key; otherwise, <see langword="false" />.</param>
    </member>
    <member name="M:System.Data.UniqueConstraint.Equals(System.Object)">
      <summary>
        <para>Compares this constraint to a second to
      determine if both are identical.</para>
      </summary>
      <param name="key2">The object to which this <see cref="T:System.Data.UniqueConstraint" /> is compared.</param>
      <returns>
        <para>
          <see langword="true" />, if the contraints are equal;
   otherwise, <see langword="false" /> .</para>
      </returns>
    </member>
    <member name="M:System.Data.UniqueConstraint.GetHashCode">
      <summary>
        <para>Gets the hash code of this instance of the <see cref="T:System.Data.UniqueConstraint" /> object. </para>
      </summary>
      <returns>
        <para>A 32-bit signed integer hash code.</para>
      </returns>
    </member>
    <member name="P:System.Data.UniqueConstraint.Columns">
      <summary>
        <para>Gets the array of columns that this constraint affects.</para>
      </summary>
    </member>
    <member name="P:System.Data.UniqueConstraint.IsPrimaryKey">
      <summary>
        <para>Gets
       a value indicating whether or not the constraint is on a primary key.</para>
      </summary>
    </member>
    <member name="P:System.Data.UniqueConstraint.Table">
      <summary>
        <para>Gets the table to which this constraint belongs.</para>
      </summary>
    </member>
    <member name="T:System.Data.UpdateRowSource">
      <summary>
        <para>
       Specifies how query command results are applied to the row being updated.
    </para>
      </summary>
    </member>
    <member name="F:System.Data.UpdateRowSource.None">
      <summary>
        <para> Any returned parameters or rows are ignored.
      </para>
      </summary>
    </member>
    <member name="F:System.Data.UpdateRowSource.OutputParameters">
      <summary>
        <para>
       Output parameters are mapped to the changed row in the <see cref="T:System.Data.DataSet" />.
    </para>
      </summary>
    </member>
    <member name="F:System.Data.UpdateRowSource.FirstReturnedRecord">
      <summary>
        <para> The data in the first returned row is mapped to the changed row in the
   <see cref="T:System.Data.DataSet" />.
      </para>
      </summary>
    </member>
    <member name="F:System.Data.UpdateRowSource.Both">
      <summary>
        <para> Both the output parameters and the first returned row are mapped to the
      changed row in the <see cref="T:System.Data.DataSet" />.
      </para>
      </summary>
    </member>
    <member name="T:System.Data.UpdateStatus">
      <summary>
        <para>Specifies the action to take with regard to the current and remaining
       rows during an <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</para>
      </summary>
    </member>
    <member name="F:System.Data.UpdateStatus.Continue">
      <summary>
        <para>The <see cref="T:System.Data.Common.DataAdapter" /> is to continue proccessing rows.</para>
      </summary>
    </member>
    <member name="F:System.Data.UpdateStatus.ErrorsOccurred">
      <summary>
        <para>
       The event handler reports that the update should be treated as an error.
    </para>
      </summary>
    </member>
    <member name="F:System.Data.UpdateStatus.SkipCurrentRow">
      <summary>
        <para>
       The current row is not to be updated.
    </para>
      </summary>
    </member>
    <member name="F:System.Data.UpdateStatus.SkipAllRemainingRows">
      <summary>
        <para>
       The
       current row and all remaining rows are not to be updated.
    </para>
      </summary>
    </member>
    <member name="F:System.Data.XmlContent.None">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="F:System.Data.XmlContent.Empty">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="F:System.Data.XmlContent.TextOnly">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="F:System.Data.XmlContent.EltOnly">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="F:System.Data.XmlContent.Mixed">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="T:System.Data.XmlReadMode">
      <summary>
        <para>Specifies how to read XML data and a relational
      schema into a <see cref="T:System.Data.DataSet" />.</para>
      </summary>
    </member>
    <member name="F:System.Data.XmlReadMode.Auto">
      <summary>
        <para>Default. Performs the most appropriate of these actions:</para>
        <para>If the
      data is a DiffGram, sets <paramref name="XmlReadMode " />to
   <see langword="DiffGram" />.</para>
        <para>-or-</para>
        <para>If
      the dataset already has a schema, or the document contains an in-line schema,
      sets <paramref name="XmlReadMode " />to
   <see langword="ReadSchema" /> .</para>
        <para>-or-</para>
        <para>If
      the dataset does not already have a schema and the document does not contain an
      in-line schema, sets <paramref name="XmlReadMode " />to
   <see langword="InferSchema" />.</para>
      </summary>
    </member>
    <member name="F:System.Data.XmlReadMode.ReadSchema">
      <summary>
        <para>Reads
      any inline schema and loads the data. If the <see cref="T:System.Data.DataSet" /> already contains schema,
      new tables may be added to the schema, but an exception is thrown if any tables
      in the inline schema already exist in the <see cref="T:System.Data.DataSet" />.
   </para>
      </summary>
    </member>
    <member name="F:System.Data.XmlReadMode.IgnoreSchema">
      <summary>
        <para> Ignores
      any inline schema and reads data into the existing <see cref="T:System.Data.DataSet" />
      schema.
      If any data does not match the
      existing schema, it is discarded (including data from differing namespaces
      defined for the <see cref="T:System.Data.DataSet" />). If the data is a DiffGram, <see langword="IgnoreSchema " />has the same functionality as <see langword="DiffGram" />
      .
      </para>
      </summary>
    </member>
    <member name="F:System.Data.XmlReadMode.InferSchema">
      <summary>
        <para>Ignores any inline schema, infers schema from the data and loads the data. If 
      the <see cref="T:System.Data.DataSet" /> already contains a schema, the current schema is extended by adding
      new tables or adding columns to existing tables. An exception is thrown if the
      inferred table already exists but with a different namespace, or if any of the
      inferred columns conflict with existing columns.</para>
      </summary>
    </member>
    <member name="F:System.Data.XmlReadMode.DiffGram">
      <summary>
        <para>Reads a DiffGram, applying changes from the DiffGram to the <see cref="T:System.Data.DataSet" />. The semantics are
   identical
   to those of a <see cref="M:System.Data.DataSet.Merge(System.Data.DataSet)" /> operation. As with the <see cref="M:System.Data.DataSet.Merge(System.Data.DataSet)" /> operation, <see cref="P:System.Data.DataRow.RowState" /> values are preserved.
   Input to <see cref="M:System.Data.DataSet.ReadXml(System.Xml.XmlReader)" /> with DiffGrams should only be obtained using the output from
<see cref="M:System.Data.DataSet.WriteXml(System.IO.Stream)" /> 
as a
DiffGram.</para>
        <para> The target <see cref="T:System.Data.DataSet" /> must have the 
same schema as the <see cref="T:System.Data.DataSet" /> on which <see cref="M:System.Data.DataSet.WriteXml(System.IO.Stream)" /> as DiffGram is
called. Otherwise the DiffGram merge operation fails, and an exception is
thrown.</para>
      </summary>
    </member>
    <member name="F:System.Data.XmlReadMode.Fragment">
      <summary>
        <para>Reads XML documents containing inline XDR schema 
      fragments, such as those generated by executing FOR XML schemas that include
      inline XDR schemaagainst an instance of SQL Server. When <see cref="T:System.Data.XmlReadMode" /> is set to
   <see langword="SqlXml" /> 
   
   , the default namespace is read as the inline schema.</para>
      </summary>
    </member>
    <member name="T:System.Data.XmlWriteMode">
      <summary>
        <para>Specifies how to write XML data and a 
      relational schema from a <see cref="T:System.Data.DataSet" />.</para>
      </summary>
    </member>
    <member name="F:System.Data.XmlWriteMode.WriteSchema">
      <summary>
        <para> Default. Writes the current contents of the <see cref="T:System.Data.DataSet" /> as XML data with the 
   relational structure as inline XSD schema. If the <see cref="T:System.Data.DataSet" /> has only a schema
   with no data, only the inline schema is written. If the <see cref="T:System.Data.DataSet" /> does not have a current
   schema, nothing is written.</para>
      </summary>
    </member>
    <member name="F:System.Data.XmlWriteMode.IgnoreSchema">
      <summary>
        <para>Writes the current contents of the <see cref="T:System.Data.DataSet" /> as XML data, 
   without an XSD schema. If no data is loaded into the <see cref="T:System.Data.DataSet" />, nothing is written.</para>
      </summary>
    </member>
    <member name="F:System.Data.XmlWriteMode.DiffGram">
      <summary>
        <para>Writes the entire <see cref="T:System.Data.DataSet" /> as a DiffGram, 
   including original and current values. To generate a DiffGram containing only changed values, call
<see cref="M:System.Data.DataSet.GetChanges" />, and then call <see cref="M:System.Data.DataSet.WriteXml(System.IO.Stream)" /> as a DiffGram on the returned 
<see cref="T:System.Data.DataSet" /> 
.</para>
        <para> The DiffGram can be sent to an instance of SQL Server because 
   it is a subset of an UpdateGram.</para>
      </summary>
    </member>
    <member name="T:System.Data.Common.DataAdapter">
      <summary>
        <para>Represents a set of data commands and a database connection that are used to
 fill the <see cref="T:System.Data.DataSet" />
 and update the data source.</para>
      </summary>
    </member>
    <member name="M:System.Data.Common.DataAdapter.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.Common.DataAdapter" /> class.</para>
      </summary>
    </member>
    <member name="M:System.Data.Common.DataAdapter.ShouldSerializeTableMappings">
      <summary>
        <para>Determines whether one or more <see cref="T:System.Data.Common.DataTableMapping" /> objects exist and they should be persisted.</para>
      </summary>
      <returns>
        <para>
          <see langword="true " />if one or more <see cref="T:System.Data.Common.DataTableMapping" /> objects exist; otherwise 
<see langword="false" /> .</para>
      </returns>
    </member>
    <member name="M:System.Data.Common.DataAdapter.CloneInternals">
      <summary>
        <para>Creates a copy of this instance of <see cref="T:System.Data.Common.DataAdapter" />.</para>
      </summary>
      <returns>
        <para>The cloned instance of <see cref="T:System.Data.Common.DataAdapter" /> .</para>
      </returns>
    </member>
    <member name="M:System.Data.Common.DataAdapter.CreateTableMappings">
      <summary>
        <para>Creates a new <see cref="T:System.Data.Common.DataTableMappingCollection" /> .</para>
      </summary>
      <returns>
        <para>A new <see cref="T:System.Data.Common.DataTableMappingCollection" /> .</para>
      </returns>
    </member>
    <member name="M:System.Data.Common.DataAdapter.Dispose(System.Boolean)">
      <summary>
        <para>Releases the unmanaged resources used by the <see cref="T:System.Data.Common.DataAdapter" /> and optionally releases the managed 
   resources.</para>
      </summary>
      <param name="disposing">
        <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources. </param>
    </member>
    <member name="M:System.Data.Common.DataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)">
      <summary>
        <para>Adds a <see cref="T:System.Data.DataTable" /> named "Table" to the specified <see cref="T:System.Data.DataSet" /> and configures the schema to match that in the data source based on the specified <see cref="T:System.Data.SchemaType" />.</para>
      </summary>
      <param name="dataSet">The <see cref="T:System.Data.DataSet" /> to be filled with the schema from the data source.</param>
      <param name="schemaType">One of the<see cref="T:System.Data.SchemaType" /> values.</param>
      <returns>
        <para>An array of <see cref="T:System.Data.DataTable" />
objects that contain schema information returned from the data
source.</para>
      </returns>
    </member>
    <member name="M:System.Data.Common.DataAdapter.Fill(System.Data.DataSet)">
      <summary>
        <para>Adds or refreshes rows in the <see cref="T:System.Data.DataSet" /> to match those
   in the data source using the <see cref="T:System.Data.DataSet" /> name, and creates
   a <see cref="T:System.Data.DataTable" /> named "Table".</para>
      </summary>
      <param name="dataSet">A <see cref="T:System.Data.DataSet" /> to fill with records and, if necessary, schema.</param>
      <returns>
        <para>The number of rows successfully added to or refreshed in the <see cref="T:System.Data.DataSet" />. This does not include rows affected by statements
   that do not return rows.</para>
      </returns>
    </member>
    <member name="M:System.Data.Common.DataAdapter.GetFillParameters">
      <summary>
        <para>Gets the parameters set by the user when executing an SQL SELECT statement.</para>
      </summary>
      <returns>
        <para>An array of <see cref="T:System.Data.IDataParameter" /> objects that contains the parameters set
   by the user.</para>
      </returns>
    </member>
    <member name="M:System.Data.Common.DataAdapter.Update(System.Data.DataSet)">
      <summary>
        <para> Calls the respective INSERT, UPDATE, or DELETE statements for each inserted, updated, or deleted row
      in the specified <see cref="T:System.Data.DataSet" /> from a <see cref="T:System.Data.DataTable" /> named "Table".</para>
      </summary>
      <param name="dataSet">The <see cref="T:System.Data.DataSet" /> used to update the data source.</param>
      <returns>
        <para>The number of rows successfully updated from the <see cref="T:System.Data.DataSet" />.</para>
      </returns>
    </member>
    <member name="P:System.Data.Common.DataAdapter.AcceptChangesDuringFill">
      <summary>
        <para>Gets or sets a value indicating whether <see cref="M:System.Data.DataRow.AcceptChanges" /> 
is called on a <see cref="T:System.Data.DataRow" /> after it is added to the <see cref="T:System.Data.DataTable" />.</para>
      </summary>
    </member>
    <member name="P:System.Data.Common.DataAdapter.ContinueUpdateOnError">
      <summary>
        <para> Gets or sets a value that specifies whether to generate
      an exception, or the row in error when an error is encountered during a row update.</para>
      </summary>
    </member>
    <member name="P:System.Data.Common.DataAdapter.MissingMappingAction">
      <summary>
        <para>Determines the 
      action to take when incoming data does not have a matching table or
      column.
			</para>
      </summary>
    </member>
    <member name="P:System.Data.Common.DataAdapter.MissingSchemaAction">
      <summary>
        <para>Determines the 
      action to take when existing <see cref="T:System.Data.DataSet" /> schema does not match incoming
      data.
			</para>
      </summary>
    </member>
    <member name="P:System.Data.Common.DataAdapter.TableMappings">
      <summary>
        <para>Gets a collection that provides the master mapping between
      a source table and a <see cref="T:System.Data.DataTable" />
      .</para>
      </summary>
    </member>
    <member name="T:System.Data.Common.DataColumnMapping">
      <summary>
        <para> Contains a generic column mapping for an object that
      inherits from <see cref="T:System.Data.Common.DataAdapter" />. This class cannot be inherited.
      </para>
      </summary>
    </member>
    <member name="M:System.Data.Common.DataColumnMapping.#ctor">
      <summary>
        <para> Initializes a new instance of the <see cref="T:System.Data.Common.DataColumnMapping" /> class. </para>
      </summary>
    </member>
    <member name="M:System.Data.Common.DataColumnMapping.#ctor(System.String,System.String)">
      <summary>
        <para> Initializes a new instance of the <see cref="T:System.Data.Common.DataColumnMapping" /> class with the specified source
   column name and <see cref="T:System.Data.DataSet" /> column name to map to.
   </para>
      </summary>
      <param name="sourceColumn">The case-sensitive column name from a data source. </param>
      <param name="dataSetColumn">The column name, which is not case sensitive, from a <see cref="T:System.Data.DataSet" /> to map to. </param>
    </member>
    <member name="M:System.Data.Common.DataColumnMapping.GetDataColumnBySchemaAction(System.Data.DataTable,System.Type,System.Data.MissingSchemaAction)">
      <summary>
        <para>Gets a <see cref="T:System.Data.DataColumn" /> from the given <see cref="T:System.Data.DataTable" /> using the <see cref="T:System.Data.MissingSchemaAction" /> and the <see cref="P:System.Data.Common.DataColumnMapping.DataSetColumn" /> property.</para>
      </summary>
      <param name="dataTable">The <see cref="T:System.Data.DataTable" /> to get the column from.</param>
      <param name="dataType">The <see cref="T:System.Type" /> of the data column.</param>
      <param name="schemaAction">One of the <see cref="T:System.Data.MissingSchemaAction" /> values.</param>
      <returns>
        <para>A <see cref="T:System.Data.DataColumn" /> .</para>
      </returns>
    </member>
    <member name="M:System.Data.Common.DataColumnMapping.ToString">
      <summary>
        <para>
       Converts the current <see cref="P:System.Data.Common.DataColumnMapping.SourceColumn" /> name
       to a string.
    </para>
      </summary>
      <returns>
        <para>
       The current <see cref="P:System.Data.Common.DataColumnMapping.SourceColumn" /> name as a string.
    </para>
      </returns>
    </member>
    <member name="P:System.Data.Common.DataColumnMapping.DataSetColumn">
      <summary>
        <para>Gets or sets the name of the column within
 the <see cref="T:System.Data.DataSet" /> to map to.</para>
      </summary>
    </member>
    <member name="P:System.Data.Common.DataColumnMapping.SourceColumn">
      <summary>
        <para>Gets or sets the name of the column
      within the data source to map from. The name
      is
      case-sensitive.</para>
      </summary>
    </member>
    <member name="T:System.Data.Common.DataColumnMappingCollection">
      <summary>
        <para> Contains a collection of <see cref="T:System.Data.Common.DataColumnMapping" /> objects. This
   class cannot be inherited.
   </para>
      </summary>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.#ctor">
      <summary>
        <para> Creates an empty <see cref="T:System.Data.Common.DataColumnMappingCollection" /> .
   </para>
      </summary>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.Add(System.Object)">
      <summary>
        <para> Adds a <see cref="T:System.Data.Common.DataColumnMapping" /> object to the collection.
   </para>
      </summary>
      <param name="value">A <see langword="DataColumnMapping" /> object to add to the collection. </param>
      <returns>
        <para> The index of the <see langword="DataColumnMapping" /> object that was added to the collection.
   </para>
      </returns>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.Add(System.String,System.String)">
      <summary>
        <para> Adds a <see cref="T:System.Data.Common.DataColumnMapping" /> object to the collection when given a source column 
   name and a <see cref="T:System.Data.DataSet" /> column name.
   </para>
      </summary>
      <param name="sourceColumn">The case-sensitive name of the source column to map to. </param>
      <param name="dataSetColumn">The name, which is not case-sensitive, of the <see cref="T:System.Data.DataSet" /> column to map to. </param>
      <returns>
        <para> The <see langword="DataColumnMapping" /> object that was added to
   the collection.
   </para>
      </returns>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.AddRange(System.Data.Common.DataColumnMapping[])">
      <summary>
        <para>Copies the elements of the specified <see cref="T:System.Data.Common.DataColumnMapping" /> array to the end of the collection.</para>
      </summary>
      <param name="values">The array of <see cref="T:System.Data.Common.DataColumnMapping" /> objects to add to the collection.</param>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.Clear">
      <summary>
        <para> Removes all <see cref="T:System.Data.Common.DataColumnMapping" /> objects from the collection.
   </para>
      </summary>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.Contains(System.String)">
      <summary>
        <para>Gets a value indicating whether a <see cref="T:System.Data.Common.DataColumnMapping" /> object with the given source column
   name exists in the collection.</para>
      </summary>
      <param name="value">The case-sensitive source column name of the <see cref="T:System.Data.Common.DataColumnMapping" /> object.</param>
      <returns>
        <para>
          <see langword="true" /> if collection
   contains a <see cref="T:System.Data.Common.DataColumnMapping" /> object
   with
   the specified source column name; otherwise, <see langword="false" /> .</para>
      </returns>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.Contains(System.Object)">
      <summary>
        <para>Gets a value indicating whether a <see cref="T:System.Data.Common.DataColumnMapping" /> object with
   the given <see cref="T:System.Object" />
   exists in the collection.</para>
      </summary>
      <param name="value">An <see cref="T:System.Object" /> that is the <see cref="T:System.Data.Common.DataColumnMapping" />.</param>
      <returns>
        <para>
          <see langword="true" /> if the
   collection contains the specified
   <see cref="T:System.Data.Common.DataColumnMapping" /> object; otherwise, <see langword="false" /> .</para>
      </returns>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.CopyTo(System.Array,System.Int32)">
      <summary>
        <para> Copies the elements of the <see cref="T:System.Data.Common.DataColumnMappingCollection" /> to the specified array.
   </para>
      </summary>
      <param name="array"> An <see cref="T:System.Array" /> to which to copy <see cref="T:System.Data.Common.DataColumnMappingCollection" /> elements. </param>
      <param name="index">The starting index of the array. </param>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.GetByDataSetColumn(System.String)">
      <summary>
        <para>Gets the <see cref="T:System.Data.Common.DataColumnMapping" /> object with
    the specified <see cref="T:System.Data.DataSet" />
    column name.</para>
      </summary>
      <param name="value">The name, which is not case-sensitive, of the <see cref="T:System.Data.DataSet" /> column to find.</param>
      <returns>
        <para>The <see cref="T:System.Data.Common.DataColumnMapping" /> object with
    the specified <see cref="T:System.Data.DataSet" /> column
    name.</para>
      </returns>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.IndexOf(System.Object)">
      <summary>
        <para>Gets the location of the specified <see cref="T:System.Object" />
that is a <see cref="T:System.Data.Common.DataColumnMapping" /> within the
collection.</para>
      </summary>
      <param name="value">An <see cref="T:System.Object" /> that is the <see cref="T:System.Data.Common.DataColumnMapping" /> to find.</param>
      <returns>
        <para>The zero-based location of the specified <see cref="T:System.Object" />
that is a <see cref="T:System.Data.Common.DataColumnMapping" /> within the collection.</para>
      </returns>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.IndexOf(System.String)">
      <summary>
        <para>Gets the location of the <see cref="T:System.Data.Common.DataColumnMapping" /> with the specified source column
   name.</para>
      </summary>
      <param name="sourceColumn">The case-sensitive name of the source column.</param>
      <returns>
        <para>The zero-based location of the <see cref="T:System.Data.Common.DataColumnMapping" /> with the specified
   case-sensitive source column name.</para>
      </returns>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.IndexOfDataSetColumn(System.String)">
      <summary>
        <para>Gets the location of the specified <see cref="T:System.Data.Common.DataColumnMapping" /> with the
   given <see cref="T:System.Data.DataSet" /> column
   name.</para>
      </summary>
      <param name="dataSetColumn">The name, which is not case-sensitive, of the data set column to find.</param>
      <returns>
        <para>The zero-based location of the specified <see cref="T:System.Data.Common.DataColumnMapping" /> with the given 
<see langword="DataSet" /> 
column name, or -1 if the <see langword="DataColumnMapping" /> object does not exist in the collection.</para>
      </returns>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.Insert(System.Int32,System.Object)">
      <summary>
        <para>Inserts a <see cref="T:System.Data.Common.DataColumnMapping" /> object into 
   the <see cref="T:System.Data.Common.DataColumnMappingCollection" /> at the specified index.</para>
      </summary>
      <param name="index">The zero-based index of the <see cref="T:System.Data.Common.DataColumnMapping" />object to insert. </param>
      <param name="value">The <see cref="T:System.Data.Common.DataColumnMapping" />object. </param>
      <returns>
        <para>A <see cref="T:System.Data.Common.DataColumnMapping" /> object.</para>
      </returns>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.RemoveAt(System.Int32)">
      <summary>
        <para> Removes the <see cref="T:System.Data.Common.DataColumnMapping" /> object with the specified index from the collection.
   </para>
      </summary>
      <param name="index">The zero-based index of the <see cref="T:System.Data.Common.DataColumnMapping" /> object to remove. </param>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.RemoveAt(System.String)">
      <summary>
        <para> Removes the <see cref="T:System.Data.Common.DataColumnMapping" /> object with the specified source column
   name from the
   collection.
   </para>
      </summary>
      <param name="sourceColumn">The case-sensitive source column name. </param>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.Remove(System.Object)">
      <summary>
        <para> Removes the <see cref="T:System.Object" />
that is a <see cref="T:System.Data.Common.DataColumnMapping" /> from the
collection.</para>
      </summary>
      <param name="value">The <see cref="T:System.Object" /> that is the <see cref="T:System.Data.Common.DataColumnMapping" /> to remove. </param>
    </member>
    <member name="M:System.Data.Common.DataColumnMappingCollection.GetColumnMappingBySchemaAction(System.Data.Common.DataColumnMappingCollection,System.String,System.Data.MissingMappingAction)">
      <summary>
        <para>Gets a <see cref="T:System.Data.Common.DataColumnMapping" /> for the specified
<see cref="T:System.Data.Common.DataColumnMappingCollection" /> 
, source column name, and <see cref="T:System.Data.MissingMappingAction" />.</para>
      </summary>
      <param name="columnMappings">the <see cref="T:System.Data.Common.DataColumnMappingCollection" />.</param>
      <param name="sourceColumn">The case-sensitive source column name to find.</param>
      <param name="mappingAction">One of the <see cref="T:System.Data.MissingMappingAction" /> values.</param>
      <returns>
        <para>A <see cref="T:System.Data.Common.DataColumnMapping" /> object.</para>
      </returns>
    </member>
    <member name="P:System.Data.Common.DataColumnMappingCollection.Count">
      <summary>
        <para>Gets the number of <see cref="T:System.Data.Common.DataColumnMapping" /> objects in the collection.</para>
      </summary>
    </member>
    <member name="P:System.Data.Common.DataColumnMappingCollection.Item(System.Int32)">
      <summary>
        <para>Gets or
 sets the <see cref="T:System.Data.Common.DataColumnMapping" /> object at the specified
 index.</para>
      </summary>
      <param name="index">The zero-based index of the <see cref="T:System.Data.Common.DataColumnMapping" /> object to find.</param>
    </member>
    <member name="P:System.Data.Common.DataColumnMappingCollection.Item(System.String)">
      <summary>
        <para>Gets or
       sets the <see cref="T:System.Data.Common.DataColumnMapping" /> object with the specified source column
       name.</para>
      </summary>
      <param name="sourceColumn">The case-sensitive name of the source column.</param>
    </member>
    <member name="T:System.Data.Common.DataTableMapping">
      <summary>
        <para>Contains a description of a mapped relationship between a source
      table and a <see cref="T:System.Data.DataTable" />
      . This class is used by a
   <see cref="T:System.Data.Common.DataAdapter" /> when
      populating a <see cref="T:System.Data.DataSet" /> .</para>
      </summary>
    </member>
    <member name="M:System.Data.Common.DataTableMapping.#ctor">
      <summary>
        <para> Initializes a new instance of the <see cref="T:System.Data.Common.DataTableMapping" />
class.</para>
      </summary>
    </member>
    <member name="M:System.Data.Common.DataTableMapping.#ctor(System.String,System.String)">
      <summary>
        <para> Initializes a new instance of the <see cref="T:System.Data.Common.DataTableMapping" /> class with a
   source when given a source table name and a <see cref="T:System.Data.DataTable" /> name.
   </para>
      </summary>
      <param name="sourceTable">The case-sensitive source table name from a data source. </param>
      <param name="dataSetTable"> The table name from a <see cref="T:System.Data.DataSet" /> to map to. </param>
    </member>
    <member name="M:System.Data.Common.DataTableMapping.#ctor(System.String,System.String,System.Data.Common.DataColumnMapping[])">
      <summary>
        <para> Initializes a new instance of the <see cref="T:System.Data.Common.DataTableMapping" /> class when given a source table name, a
<see cref="T:System.Data.DataTable" /> 
name, and an array of <see cref="T:System.Data.Common.DataColumnMapping" /> objects.</para>
      </summary>
      <param name="sourceTable">The case-sensitive source table name from a data source. </param>
      <param name="dataSetTable">The table name from a <see cref="T:System.Data.DataSet" /> to map to. </param>
      <param name="columnMappings">An array of <see cref="T:System.Data.Common.DataColumnMapping" /> objects. </param>
    </member>
    <member name="M:System.Data.Common.DataTableMapping.GetColumnMappingBySchemaAction(System.String,System.Data.MissingMappingAction)">
      <summary>
        <para>Gets a <see cref="T:System.Data.DataColumn" /> from the specified <see cref="T:System.Data.DataTable" /> using the specified <see cref="T:System.Data.MissingMappingAction" /> value and the name of the <see cref="T:System.Data.DataColumn" /> .</para>
      </summary>
      <param name="sourceColumn">The name of the <see cref="T:System.Data.DataColumn" /> .</param>
      <param name="mappingAction">One of the <see cref="T:System.Data.MissingMappingAction" /> values.</param>
      <returns>
        <para>A <see cref="T:System.Data.DataColumn" /> .</para>
      </returns>
    </member>
    <member name="M:System.Data.Common.DataTableMapping.GetDataTableBySchemaAction(System.Data.DataSet,System.Data.MissingSchemaAction)">
      <summary>
        <para>Gets the current <see cref="T:System.Data.DataTable" /> for the specified <see cref="T:System.Data.DataSet" /> using the specified <see cref="T:System.Data.MissingSchemaAction" /> value.</para>
      </summary>
      <param name="dataSet">The <see cref="T:System.Data.DataSet" /> from which to get the <see cref="T:System.Data.DataTable" /> .</param>
      <param name="schemaAction">One of the <see cref="T:System.Data.MissingSchemaAction" /> values.</param>
      <returns>
        <para>A <see cref="T:System.Data.DataTable" /> .</para>
      </returns>
    </member>
    <member name="M:System.Data.Common.DataTableMapping.ToString">
      <summary>
        <para> Converts the current <see cref="P:System.Data.Common.DataTableMapping.SourceTable" /> name to a string.
   </para>
      </summary>
      <returns>
        <para> The current <see cref="P:System.Data.Common.DataTableMapping.SourceTable" /> name, as a
   string.
   </para>
      </returns>
    </member>
    <member name="P:System.Data.Common.DataTableMapping.ColumnMappings">
      <summary>
        <para>Gets the <see cref="T:System.Data.Common.DataColumnMappingCollection" /> for the
<see cref="T:System.Data.DataTable" /> .</para>
      </summary>
    </member>
    <member name="P:System.Data.Common.DataTableMapping.DataSetTable">
      <summary>
        <para>Gets or sets the table name from a
   <see cref="T:System.Data.DataSet" />
   .</para>
      </summary>
    </member>
    <member name="P:System.Data.Common.DataTableMapping.SourceTable">
      <summary>
        <para> Gets or sets the case-sensitive source table
      name
      from a data source.</para>
      </summary>
    </member>
    <member name="T:System.Data.Common.DataTableMappingCollection">
      <summary>
        <para> A collection of <see cref="T:System.Data.Common.DataTableMapping" /> objects. This
   class cannot be inherited.
   </para>
      </summary>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.#ctor">
      <summary>
        <para> Initializes a new instance of the <see cref="T:System.Data.Common.DataTableMappingCollection" /> class. This new instance is empty, that is, it does not yet 
   contain any <see cref="T:System.Data.Common.DataTableMapping" /> objects.
   </para>
      </summary>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.Add(System.Object)">
      <summary>
        <para> Adds an <see cref="T:System.Object" /> that is a table mapping to the collection.
   </para>
      </summary>
      <param name="value">A <see langword="DataTableMapping" /> object to add to the collection. </param>
      <returns>
        <para> The index of the <see langword="DataTableMapping" /> object added to the collection.
   </para>
      </returns>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.AddRange(System.Data.Common.DataTableMapping[])">
      <summary>
        <para>Copies the elements of the specified <see cref="T:System.Data.Common.DataTableMapping" /> array to the end of the collection.</para>
      </summary>
      <param name="values">The array of <see cref="T:System.Data.Common.DataTableMapping" /> objects to add to the collection.</param>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.Add(System.String,System.String)">
      <summary>
        <para> Adds a <see cref="T:System.Data.Common.DataTableMapping" /> object to the collection when given a source table name
   and a <see cref="T:System.Data.DataSet" /> table name.
   </para>
      </summary>
      <param name="sourceTable">The case-sensitive name of the source table to map from. </param>
      <param name="dataSetTable">The name, which is not case-sensitive, of the <see cref="T:System.Data.DataSet" /> table to map to. </param>
      <returns>
        <para> The <see cref="T:System.Data.Common.DataTableMapping" /> object that was added to the
   collection.
   </para>
      </returns>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.Clear">
      <summary>
        <para> Removes all <see cref="T:System.Data.Common.DataTableMapping" /> objects from the collection.
   </para>
      </summary>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.Contains(System.String)">
      <summary>
        <para>Gets a value indicating whether a <see cref="T:System.Data.Common.DataTableMapping" /> object with the specified source table
   name exists in the collection.</para>
      </summary>
      <param name="value">The case-sensitive source table name containing the <see cref="T:System.Data.Common.DataTableMapping" /> object.</param>
      <returns>
        <para>
          <see langword="true" /> if the collection contains
   a <see cref="T:System.Data.Common.DataTableMapping" /> object with this source table name; otherwise,
<see langword="false" /> .</para>
      </returns>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.Contains(System.Object)">
      <summary>
        <para>Gets a value indicating whether the given <see cref="T:System.Data.Common.DataTableMapping" />
 object exists in the collection.</para>
      </summary>
      <param name="value">An <see cref="T:System.Object" /> that is the <see cref="T:System.Data.Common.DataTableMapping" />.</param>
      <returns>
        <para>
          <see langword="true" /> if this collection contains the
    specified <see cref="T:System.Data.Common.DataTableMapping" />; otherwise, <see langword="false" /> .</para>
      </returns>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.CopyTo(System.Array,System.Int32)">
      <summary>
        <para> Copies the elements of the <see cref="T:System.Data.Common.DataTableMappingCollection" /> to the specified array.
   </para>
      </summary>
      <param name="array">An <see cref="T:System.Array" /> to which to copy the <see cref="T:System.Data.Common.DataTableMappingCollection" /> elements. </param>
      <param name="index">The starting index of the array. </param>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.GetByDataSetTable(System.String)">
      <summary>
        <para>Gets the <see cref="T:System.Data.Common.DataTableMapping" /> object with
   the specified <see cref="T:System.Data.DataSet" /> table name.</para>
      </summary>
      <param name="dataSetTable"> The name, which is not case-sensitive, of the <see cref="T:System.Data.DataSet" /> table to find.</param>
      <returns>
        <para>The <see cref="T:System.Data.Common.DataTableMapping" /> object with
   the specified <see cref="T:System.Data.DataSet" /> table name.</para>
      </returns>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.IndexOf(System.Object)">
      <summary>
        <para>Gets the location of the specified <see cref="T:System.Data.Common.DataTableMapping" /> object within the collection.</para>
      </summary>
      <param name="value">An <see cref="T:System.Object" /> that is the <see cref="T:System.Data.Common.DataTableMapping" /> object to find.</param>
      <returns>
        <para>The zero-based location of the specified <see cref="T:System.Data.Common.DataTableMapping" /> object within the collection.</para>
      </returns>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.IndexOf(System.String)">
      <summary>
        <para>Gets the location of the <see cref="T:System.Data.Common.DataTableMapping" /> object with the
   specified source table name.</para>
      </summary>
      <param name="sourceTable">The case-sensitive name of the source table.</param>
      <returns>
        <para>The zero-based location of the <see cref="T:System.Data.Common.DataTableMapping" /> object with the specified source table name.</para>
      </returns>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.IndexOfDataSetTable(System.String)">
      <summary>
        <para>Gets the location of the <see cref="T:System.Data.Common.DataTableMapping" /> object with the
   specified <see cref="T:System.Data.DataSet" /> table name.</para>
      </summary>
      <param name="dataSetTable">The name, which is not case-sensitive, of the <see langword="DataSet" /> table to find.</param>
      <returns>
        <para>The zero-based location of the <see cref="T:System.Data.Common.DataTableMapping" /> object with
   the given <see cref="T:System.Data.DataSet" /> table name, or -1 if the <see cref="T:System.Data.Common.DataTableMapping" /> object does not exist in the collection.</para>
      </returns>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.Insert(System.Int32,System.Object)">
      <summary>
        <para>Inserts a <see cref="T:System.Data.Common.DataTableMapping" /> object into
   the <see cref="T:System.Data.Common.DataTableMappingCollection" /> at the specified index.</para>
      </summary>
      <param name="index">The zero-based index of the <see cref="T:System.Data.Common.DataTableMapping" /> object to insert. </param>
      <param name="value">The <see cref="T:System.Data.Common.DataTableMapping" /> object to insert. </param>
      <returns>
        <para>A <see cref="T:System.Data.Common.DataTableMapping" /> object.</para>
      </returns>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.RemoveAt(System.Int32)">
      <summary>
        <para>
       Removes the <see cref="T:System.Data.Common.DataTableMapping" /> object located at the specified index from the collection.
    </para>
      </summary>
      <param name="index">
    The zero-based index of the <see cref="T:System.Data.Common.DataTableMapping" /> object to remove.
 </param>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.RemoveAt(System.String)">
      <summary>
        <para>
       Removes the <see cref="T:System.Data.Common.DataTableMapping" /> object with the specified source table
       name from the
       collection.
    </para>
      </summary>
      <param name="sourceTable">
    The case-sensitive source table name to find.
 </param>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.Remove(System.Object)">
      <summary>
        <para> Removes the specified <see cref="T:System.Data.Common.DataTableMapping" /> object from the
   collection.
   </para>
      </summary>
      <param name="value"> The <see cref="T:System.Data.Common.DataTableMapping" /> object to remove. </param>
    </member>
    <member name="M:System.Data.Common.DataTableMappingCollection.GetTableMappingBySchemaAction(System.Data.Common.DataTableMappingCollection,System.String,System.String,System.Data.MissingMappingAction)">
      <summary>
        <para>Gets a <see cref="T:System.Data.Common.DataColumnMapping" /> object with the specified source table
   name and <see cref="T:System.Data.DataSet" />
   table name, using the given <see cref="T:System.Data.MissingMappingAction" />.</para>
      </summary>
      <param name="tableMappings">The <see cref="T:System.Data.Common.DataTableMappingCollection" /> collection to search.</param>
      <param name="sourceTable">The case-sensitive name of the mapped source table.</param>
      <param name="dataSetTable">The name, which is not case-sensitive, of the mapped <see cref="T:System.Data.DataSet" /> table.</param>
      <param name="mappingAction">One of the <see cref="T:System.Data.MissingMappingAction" /> values.</param>
      <returns>
        <para>A <see cref="T:System.Data.Common.DataTableMapping" /> object.</para>
      </returns>
    </member>
    <member name="P:System.Data.Common.DataTableMappingCollection.Count">
      <summary>
        <para>Gets the number of <see cref="T:System.Data.Common.DataTableMapping" /> objects in the collection.</para>
      </summary>
    </member>
    <member name="P:System.Data.Common.DataTableMappingCollection.Item(System.Int32)">
      <summary>
        <para>Gets or sets the <see cref="T:System.Data.Common.DataTableMapping" /> object at the
   specified index.</para>
      </summary>
      <param name="index">The zero-based index of the <see cref="T:System.Data.Common.DataTableMapping" /> object to return.</param>
    </member>
    <member name="P:System.Data.Common.DataTableMappingCollection.Item(System.String)">
      <summary>
        <para>Gets or sets the <see cref="T:System.Data.Common.DataTableMapping" /> object
    with the specified source table name.</para>
      </summary>
      <param name="sourceTable">The case-sensitive name of the source table.</param>
    </member>
    <member name="T:System.Data.Common.DbDataAdapter">
      <summary>
        <para>Aids implementation
      of the <see cref="T:System.Data.IDbDataAdapter" /> interface. Inheritors of <see cref="T:System.Data.Common.DbDataAdapter" /> implement a set of functions to provide
      strong typing, but inherit most of the functionality needed to
      fully implement a DataAdapter.</para>
      </summary>
    </member>
    <member name="F:System.Data.Common.DbDataAdapter.DefaultSourceTableName">
      <summary>
        <para>The default name used by the <see cref="T:System.Data.Common.DataAdapter" /> object for table mappings.</para>
      </summary>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.Common.DbDataAdapter" /> class.</para>
      </summary>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.CreateRowUpdatedEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.Common.RowUpdatedEventArgs" /> class.</para>
      </summary>
      <param name="dataRow">The <see cref="T:System.Data.DataRow" /> used to update the data source.</param>
      <param name="command">The <see cref="T:System.Data.IDbCommand" /> executed during the <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" />.</param>
      <param name="statementType">Whether the command is an UPDATE, INSERT, DELETE, or SELECT statement.</param>
      <param name="tableMapping">A <see cref="T:System.Data.Common.DataTableMapping" /> object.</param>
      <returns>
        <para>A new instance of the <see cref="T:System.Data.Common.RowUpdatedEventArgs" /> class.</para>
      </returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.CreateRowUpdatingEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.Common.RowUpdatingEventArgs" /> class.</para>
      </summary>
      <param name="dataRow">The <see cref="T:System.Data.DataRow" /> that updates the data source.</param>
      <param name="command">The <see cref="T:System.Data.IDbCommand" /> to execute during the <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" />.</param>
      <param name="statementType">Whether the command is an UPDATE, INSERT, DELETE, or SELECT statement .</param>
      <param name="tableMapping">A <see cref="T:System.Data.Common.DataTableMapping" /> object.</param>
      <returns>
        <para>A new instance of the <see cref="T:System.Data.Common.RowUpdatingEventArgs" /> class.</para>
      </returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.Dispose(System.Boolean)">
      <summary>
        <para>Releases the unmanaged resources used by the <see cref="T:System.Data.Common.DbDataAdapter" /> and optionally 
   releases the managed resources.</para>
      </summary>
      <param name="disposing">
        <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources. </param>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType)">
      <summary>
        <para>Configures the schema of the
      specified <see cref="T:System.Data.DataTable" /> based on the specified <see cref="T:System.Data.SchemaType" />.</para>
      </summary>
      <param name="dataTable">The <see cref="T:System.Data.DataTable" /> to be filled with the schema from the data source.</param>
      <param name="schemaType">One of the<see cref="T:System.Data.SchemaType" /> values.</param>
      <returns>
        <para> A <see cref="T:System.Data.DataTable" />
that contains schema information returned from the data
source.</para>
      </returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)">
      <summary>
        <para>Adds a <see cref="T:System.Data.DataTable" /> named "Table" to the specified <see cref="T:System.Data.DataSet" /> and
   configures the schema to match that in the data source based on the specified
<see cref="T:System.Data.SchemaType" />
.</para>
      </summary>
      <param name="dataSet">A <see cref="T:System.Data.DataSet" /> to insert the schema in.</param>
      <param name="schemaType">One of the <see cref="T:System.Data.SchemaType" /> values that specify how to insert the schema.</param>
      <returns>
        <para>A reference to a collection
      of <see cref="T:System.Data.DataTable" />
      objects that were added to the <see cref="T:System.Data.DataSet" />
      .</para>
      </returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.String)">
      <summary>
        <para>Adds a <see cref="T:System.Data.DataTable" /> to the specified <see cref="T:System.Data.DataSet" /> and configures the schema to match that in the data source based upon
   the specified <see cref="T:System.Data.SchemaType" /> and <see cref="T:System.Data.DataTable" />
   .</para>
      </summary>
      <param name="dataSet">A <see cref="T:System.Data.DataSet" /> to insert the schema in.</param>
      <param name="schemaType">One of the <see cref="T:System.Data.SchemaType" /> values that specify how to insert the schema.</param>
      <param name="srcTable">The name of the source table to use for table mapping.</param>
      <returns>
        <para>A reference to a collection of <see cref="T:System.Data.DataTable" />
objects that were added to the <see cref="T:System.Data.DataSet" />.</para>
      </returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.Data.IDbCommand,System.String,System.Data.CommandBehavior)">
      <summary>
        <para>Adds a <see cref="T:System.Data.DataTable" /> to the specified <see cref="T:System.Data.DataSet" /> and configures the schema to match that in the data source based on the specified <see cref="T:System.Data.SchemaType" />.</para>
      </summary>
      <param name="dataSet">The <see cref="T:System.Data.DataSet" /> to be filled with the schema from the data source.</param>
      <param name="schemaType">One of the<see cref="T:System.Data.SchemaType" /> values.</param>
      <param name="command">The SQL SELECT statement used to retrieve rows from the data source.</param>
      <param name="srcTable">The name of the source table to use for table mapping.</param>
      <param name="behavior">One of the the <see cref="T:System.Data.CommandBehavior" /> values.</param>
      <returns>
        <para>An array of <see cref="T:System.Data.DataTable" />
objects that contain schema information returned from the data
source.</para>
      </returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType,System.Data.IDbCommand,System.Data.CommandBehavior)">
      <summary>
        <para>Configures the schema of the specified <see cref="T:System.Data.DataTable" /> based on
   the specified <see cref="T:System.Data.SchemaType" />, command string, and <see cref="T:System.Data.CommandBehavior" />
   values.</para>
      </summary>
      <param name="dataTable">The <see cref="T:System.Data.DataTable" /> to be filled with the schema from the data source.</param>
      <param name="schemaType">One of the<see cref="T:System.Data.SchemaType" /> values.</param>
      <param name="command">The SQL SELECT statement used to retrieve rows from the data source.</param>
      <param name="behavior">One of the the <see cref="T:System.Data.CommandBehavior" /> values.</param>
      <returns>
        <para>An array of <see cref="T:System.Data.DataTable" />
objects that contain schema information returned from the data
source.</para>
      </returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable)">
      <summary>
        <para>Adds or refreshes rows in a <see cref="T:System.Data.DataTable" /> to match those
   in the data source using the <see cref="T:System.Data.DataTable" /> name.</para>
      </summary>
      <param name="dataTable">A <see cref="T:System.Data.DataTable" /> to fill with records and, if necessary, schema.</param>
      <returns>
        <para>The number of rows successfully added to or refreshed in the <see cref="T:System.Data.DataTable" />. This does not include rows affected by statements
   that do not return rows.</para>
      </returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)">
      <summary>
        <para>Adds or refreshes rows in the <see cref="T:System.Data.DataSet" /> to match those
   in the data source using the <see cref="T:System.Data.DataSet" /> name, and creates
   a <see cref="T:System.Data.DataTable" /> named "Table".</para>
      </summary>
      <param name="dataSet">A <see cref="T:System.Data.DataSet" /> to fill with records and, if necessary, schema.</param>
      <returns>
        <para>The number of rows successfully added to or refreshed in the <see cref="T:System.Data.DataSet" />. This does not include rows affected by statements
   that do not return rows.</para>
      </returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.String)">
      <summary>
        <para>Adds or refreshes rows in the <see cref="T:System.Data.DataSet" /> to match those
   in the data source using the <see cref="T:System.Data.DataSet" /> and <see cref="T:System.Data.DataTable" /> names.</para>
      </summary>
      <param name="dataSet">A <see cref="T:System.Data.DataSet" /> to fill with records and, if necessary, schema.</param>
      <param name="srcTable">The name of the source table to use for table mapping. </param>
      <returns>
        <para>The number of rows successfully added to or refreshed in the <see cref="T:System.Data.DataSet" />. This does not include rows affected by statements
   that do not return rows.</para>
      </returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String)">
      <summary>
        <para>Adds or refreshes rows in a specified range in the <see cref="T:System.Data.DataSet" /> to match those
   in the data source using the <see cref="T:System.Data.DataSet" /> and <see cref="T:System.Data.DataTable" /> names.</para>
      </summary>
      <param name="dataSet">A <see cref="T:System.Data.DataSet" /> to fill with records and, if necessary, schema.</param>
      <param name="startRecord">The zero-based record number to start with.</param>
      <param name="maxRecords">The maximum number of records to retrieve.</param>
      <param name="srcTable">The name of the source table to use for table mapping. </param>
      <returns>
        <para>The number of rows successfully added to or refreshed in the <see cref="T:System.Data.DataSet" />. This does not include rows affected by statements
   that do not return rows.</para>
      </returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String,System.Data.IDbCommand,System.Data.CommandBehavior)">
      <summary>
        <para>Adds or refreshes rows in a specified range in the <see cref="T:System.Data.DataSet" /> to match those
   in the data source using the <see cref="T:System.Data.DataSet" /> and source table names, command string and command behavior.</para>
      </summary>
      <param name="dataSet">A <see cref="T:System.Data.DataSet" /> to fill with records and, if necessary, schema.</param>
      <param name="startRecord">The zero-based record number to start with.</param>
      <param name="maxRecords">The maximum number of records to retrieve.</param>
      <param name="srcTable">The name of the source table to use for table mapping. </param>
      <param name="command">The SQL SELECT statement used to retrieve rows from the data source.</param>
      <param name="behavior">One of the the <see cref="T:System.Data.CommandBehavior" /> values.</param>
      <returns>
        <para>The number of rows successfully added to or refreshed in the <see cref="T:System.Data.DataSet" />. This does not include rows affected by statements
   that do not return rows.</para>
      </returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable,System.Data.IDbCommand,System.Data.CommandBehavior)">
      <summary>
        <para>Adds or refreshes rows in a <see cref="T:System.Data.DataTable" /> to match those
   in the data source using the <see cref="T:System.Data.DataTable" /> name, the specified SQL
   SELECT statement, and <see cref="T:System.Data.CommandBehavior" /> .</para>
      </summary>
      <param name="dataTable">A <see cref="T:System.Data.DataTable" /> to fill with records and, if necessary, schema.</param>
      <param name="command">The SQL SELECT statement used to retrieve rows from the data source.</param>
      <param name="behavior">One of the the <see cref="T:System.Data.CommandBehavior" /> values.</param>
      <returns>
        <para>The number of rows successfully added to or refreshed in the <see cref="T:System.Data.DataTable" />. This does not include rows affected by statements
   that do not return rows.</para>
      </returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.String,System.Data.IDataReader,System.Int32,System.Int32)">
      <summary>
        <para>Adds or refreshes rows in a specified range in the <see cref="T:System.Data.DataSet" /> to match those
   in the data source using the <see cref="T:System.Data.DataSet" />, <see cref="T:System.Data.DataTable" /> , and <see cref="T:System.Data.IDataReader" /> names.</para>
      </summary>
      <param name="dataSet">A <see cref="T:System.Data.DataSet" /> to fill with records and, if necessary, schema.</param>
      <param name="srcTable">The name of the <see cref="T:System.Data.DataTable" /> to use for table mapping. </param>
      <param name="dataReader">The name of the <see cref="T:System.Data.IDataReader" />.</param>
      <param name="startRecord">The zero-based record number to start with.</param>
      <param name="maxRecords">The maximum number of records to retrieve.</param>
      <returns>
        <para>The number of rows successfully added to or refreshed in the <see cref="T:System.Data.DataSet" />. This does not include rows affected by statements
   that do not return rows.</para>
      </returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable,System.Data.IDataReader)">
      <summary>
        <para>Adds or refreshes rows in a <see cref="T:System.Data.DataTable" /> to match those in
   the data source using the specified <see cref="T:System.Data.DataTable" /> and <see cref="T:System.Data.IDataReader" />
   names.</para>
      </summary>
      <param name="dataTable">A <see cref="T:System.Data.DataTable" /> to fill with records and, if necessary, schema.</param>
      <param name="dataReader">The name of the <see cref="T:System.Data.IDataReader" /> .</param>
      <returns>
        <para>The number of rows successfully added to or refreshed in the <see cref="T:System.Data.DataTable" />. This does not include rows affected by statements
   that do not return rows.</para>
      </returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.GetFillParameters">
      <summary>
        <para>Gets the parameters set by the user when executing an SQL SELECT statement.</para>
      </summary>
      <returns>
        <para>An array of <see cref="T:System.Data.IDataParameter" /> objects that contains the parameters set
   by the user.</para>
      </returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.OnFillError(System.Data.FillErrorEventArgs)">
      <summary>
        <para>Raises the <see cref="E:System.Data.Common.DbDataAdapter.FillError" /> event.</para>
      </summary>
      <param name="value">A <see cref="T:System.Data.FillErrorEventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.OnRowUpdated(System.Data.Common.RowUpdatedEventArgs)">
      <summary>
        <para> Raises the <see langword="RowUpdated" /> event of a .NET data provider.</para>
      </summary>
      <param name="value">A <see cref="T:System.Data.Common.RowUpdatedEventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.OnRowUpdating(System.Data.Common.RowUpdatingEventArgs)">
      <summary>
        <para> Raises the <see langword="RowUpdating" /> event of a .NET
   data provider.</para>
      </summary>
      <param name="value">An <see cref="T:System.Data.OleDb.OleDbRowUpdatingEventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)">
      <summary>
        <para> Calls the respective INSERT, UPDATE, or DELETE statements for each inserted, updated, or deleted row
      in the specified <see cref="T:System.Data.DataSet" />.</para>
      </summary>
      <param name="dataSet">The <see cref="T:System.Data.DataSet" /> used to update the data source.</param>
      <returns>
        <para>The number of rows successfully updated from the <see cref="T:System.Data.DataSet" />.</para>
      </returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[])">
      <summary>
        <para> Calls the respective INSERT, UPDATE, or DELETE
      statements for each inserted, updated, or deleted row in the specified array of <see cref="T:System.Data.DataRow" />
      objects.</para>
      </summary>
      <param name="dataRows">An array of <see cref="T:System.Data.DataRow" /> objects used to update the data source.</param>
      <returns>
        <para>The number of rows successfully updated from the <see cref="T:System.Data.DataSet" />.</para>
      </returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataTable)">
      <summary>
        <para> Calls the respective INSERT, UPDATE, or DELETE statements for each inserted, updated, or deleted row
      in the specified <see cref="T:System.Data.DataTable" />.</para>
      </summary>
      <param name="dataTable">The <see cref="T:System.Data.DataTable" /> used to update the data source.</param>
      <returns>
        <para>The number of rows successfully updated from the <see cref="T:System.Data.DataSet" />.</para>
      </returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet,System.String)">
      <summary>
        <para> Calls the respective INSERT, UPDATE, or DELETE statements
      for each inserted, updated, or deleted row in the <see cref="T:System.Data.DataSet" /> with the specified <see cref="T:System.Data.DataTable" />
      name.</para>
      </summary>
      <param name="dataSet">The <see cref="T:System.Data.DataSet" /> to use to update the data source.</param>
      <param name="srcTable">The name of the source table to use for table mapping. </param>
      <returns>
        <para>The number of rows successfully updated from the <see cref="T:System.Data.DataSet" />.</para>
      </returns>
    </member>
    <member name="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[],System.Data.Common.DataTableMapping)">
      <summary>
        <para>Calls the respective INSERT, UPDATE, or DELETE
      statements for each inserted, updated, or deleted row in the specified array of <see cref="T:System.Data.DataRow" />
      objects.</para>
      </summary>
      <param name="dataRows">An array of <see cref="T:System.Data.DataRow" /> objects used to update the data source.</param>
      <param name="tableMapping">The <see cref="P:System.Data.IDataAdapter.TableMappings" /> collection to use.</param>
      <returns>
        <para>The number of rows successfully updated from the <see cref="T:System.Data.DataSet" />.</para>
      </returns>
    </member>
    <member name="E:System.Data.Common.DbDataAdapter.FillError">
      <summary>
        <para>Returned when an error occurs during a fill operation.</para>
      </summary>
    </member>
    <member name="T:System.Data.Common.DBDataPermission">
      <summary>
        <para>Provides
      the capability for a .NET data provider to ensure that a user has a
      security level adequate for accessing data.
      </para>
      </summary>
    </member>
    <member name="M:System.Data.Common.DBDataPermission.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.Common.DBDataPermission" /> class.</para>
      </summary>
    </member>
    <member name="M:System.Data.Common.DBDataPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.Common.DBDataPermission" /> class.</para>
      </summary>
      <param name="state">One of the <see cref="T:System.Security.Permissions.PermissionState" /> values.</param>
    </member>
    <member name="M:System.Data.Common.DBDataPermission.#ctor(System.Security.Permissions.PermissionState,System.Boolean)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.Common.DBDataPermission" /> class.</para>
      </summary>
      <param name="state">One of the <see cref="T:System.Security.Permissions.PermissionState" /> values.</param>
      <param name="allowBlankPassword">Indicates whether a blank password is allowed.</param>
    </member>
    <member name="M:System.Data.Common.DBDataPermission.Copy">
      <summary>
        <para>Creates and returns an identical copy of the current permission object.</para>
      </summary>
      <returns>
        <para>A copy of the current permission object.</para>
      </returns>
    </member>
    <member name="M:System.Data.Common.DBDataPermission.Intersect(System.Security.IPermission)">
      <summary>
        <para>Returns a new permission object representing the intersection of
      the current permission object and the specified permission object.</para>
      </summary>
      <param name="target">A permission object to intersect with the current permission object. It must be of the same type as the current permission object.</param>
      <returns>
        <para>A new permission object that represents the intersection
      of the current permission object and the specified permission object. This new
      permission object is a null reference (<see langword="Nothing" /> in Visual Basic) if the
      intersection is empty.</para>
      </returns>
    </member>
    <member name="M:System.Data.Common.DBDataPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>
        <para>Returns a value indicating whether the current permission object
      is a subset of the specified permission object.</para>
      </summary>
      <param name="target">A permission object that is to be tested for the subset relationship. This object must be of the same type as the current permission object.</param>
      <returns>
        <para>
          <see langword="True " />if the 
   current permission object is a
   subset of the specified permission object; otherwise <see langword="false" /> .</para>
      </returns>
    </member>
    <member name="M:System.Data.Common.DBDataPermission.IsUnrestricted">
      <summary>
        <para>Returns a value indicating whether the permission can be 
      represented as unrestricted without any knowledge of the permission semantics.</para>
      </summary>
      <returns>
        <para>
          <see langword="True " />if the permission can be represented as 
   unrestricted.</para>
      </returns>
    </member>
    <member name="M:System.Data.Common.DBDataPermission.Union(System.Security.IPermission)">
      <summary>
        <para> Returns a new permission object that is the union of
      the current and specified permission objects.</para>
      </summary>
      <param name="target">A permission object to combine with the current permission object. It must be of the same type as the current permission object.</param>
      <returns>
        <para>A new permission object that represents the union of the
      current permission object and the specified permission object.</para>
      </returns>
    </member>
    <member name="M:System.Data.Common.DBDataPermission.FromXml(System.Security.SecurityElement)">
      <summary>
        <para>Reconstructs a security object with a specified state 
      from an XML encoding.</para>
      </summary>
      <param name="securityElement">The XML encoding to use to reconstruct the security object.</param>
    </member>
    <member name="M:System.Data.Common.DBDataPermission.ToXml">
      <summary>
        <para>Creates an XML encoding of the security object and its current state.</para>
      </summary>
      <returns>
        <para>An XML encoding of the security object, including any state information.</para>
      </returns>
    </member>
    <member name="P:System.Data.Common.DBDataPermission.AllowBlankPassword">
      <summary>
        <para>Gets a value indicating whether a blank password is allowed.</para>
      </summary>
    </member>
    <member name="T:System.Data.Common.DBDataPermissionAttribute">
      <summary>
        <para>Associates a security action with a custom security attribute.</para>
      </summary>
    </member>
    <member name="M:System.Data.Common.DBDataPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.Common.DBDataPermissionAttribute" /> class.</para>
      </summary>
      <param name="action">One of the the <see cref="T:System.Security.Permissions.SecurityAction" /> values representing an action that can be performed using declarative security.</param>
      <returns>
        <para> A <see cref="T:System.Data.Common.DBDataPermissionAttribute" /> object.</para>
      </returns>
    </member>
    <member name="P:System.Data.Common.DBDataPermissionAttribute.AllowBlankPassword">
      <summary>
        <para>Gets a value indicating whether a blank password is allowed.</para>
      </summary>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetValues(System.Object[])">
      <summary>
        <para>
       Returns all the attribute fields in the collection for the current
       record.
    </para>
      </summary>
      <param name="values">
    An array of <see cref="T:System.Object" /> to copy the attribute fields into.
 </param>
      <returns>
        <para>
       The number of instances of <see cref="T:System.Object" /> in the array.
    </para>
      </returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetName(System.Int32)">
      <summary>
        <para>
       Returns the name of the specified column.
    </para>
      </summary>
      <param name="i">
    The column ordinal.
 </param>
      <returns>
        <para>
       The name of the specified column.
    </para>
      </returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetValue(System.Int32)">
      <summary>
        <para>
       Returns the value at the specified column in its native format.
    </para>
      </summary>
      <param name="i">
    The column ordinal.
 </param>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetDataTypeName(System.Int32)">
      <summary>
        <para>
       Returns the name of the back-end data type.
    </para>
      </summary>
      <param name="i">
    The column ordinal.
 </param>
      <returns>
        <para>
       The name of the back-end data type.
    </para>
      </returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetFieldType(System.Int32)">
      <summary>
        <para>
       Returns the <see cref="T:System.Type" />
       that is the data type of the object.
    </para>
      </summary>
      <param name="i">
    The column ordinal.
 </param>
      <returns>
        <para>
       The <see cref="T:System.Type" />
       that is the data type of the object.
    </para>
      </returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetOrdinal(System.String)">
      <summary>
        <para>
       Returns the column ordinal, given the name of the column.
    </para>
      </summary>
      <param name="name">
    The name of the column.
 </param>
      <returns>
        <para>
       The column ordinal.
    </para>
      </returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetBoolean(System.Int32)">
      <summary>
        <para>
       Returns the value of the specified column as a boolean.
    </para>
      </summary>
      <param name="i">
    The column ordinal.
 </param>
      <returns>
        <para>
          <see langword="true" /> if the boolean is <see langword="true" />; otherwise, 
    <see langword="false" />.
    </para>
      </returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetByte(System.Int32)">
      <summary>
        <para>
       Returns the value of the specified column as a byte.
    </para>
      </summary>
      <param name="i">
    The column ordinal.
 </param>
      <returns>
        <para>
       The value of the specified column.
    </para>
      </returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)">
      <summary>
        <para>
       Returns
       the value of the specified column as a byte array.
    </para>
      </summary>
      <param name="i">
    column ordinal.
 </param>
      <param name=" buffer">
    buffer to copy data into.
 </param>
      <param name=" length">
    max length to copy into the buffer.
 </param>
      <param name=" bufferIndex">
    point to start from within the buffer.
 </param>
      <param name=" dataIndex">
    point to start from within the source data.
 </param>
      <returns>
        <para>
       The value of the specified column.
    </para>
      </returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetChar(System.Int32)">
      <summary>
        <para>
       Returns the value of the specified column as a character.
    </para>
      </summary>
      <param name="i">
    The column ordinal.
 </param>
      <returns>
        <para>
       The value of the specified column.
    </para>
      </returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)">
      <summary>
        <para>
       Returns
       the value of the specified column as a character array.
    </para>
      </summary>
      <param name="i">
    column ordinal.
 </param>
      <param name=" buffer">
    buffer to copy data into.
 </param>
      <param name=" length">
    max length to copy into the buffer.
 </param>
      <param name=" bufferIndex">
    point to start from within the buffer.
 </param>
      <param name=" dataIndex">
    point to start from within the source data.
 </param>
      <returns>
        <para>
       The value of the specified column.
    </para>
      </returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetGuid(System.Int32)">
      <summary>
        <para> Returns the GUID value of the specified field.
      </para>
      </summary>
      <param name="i">The index of the field to return. </param>
      <returns>
        <para> The guid value of the specified field.
      </para>
      </returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetInt16(System.Int32)">
      <summary>
        <para>
       Returns the
       value of the specified column as a 16-bit signed integer.
    </para>
      </summary>
      <param name="i">
    The column ordinal.
 </param>
      <returns>
        <para>
       The value of the specified column.
    </para>
      </returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetInt32(System.Int32)">
      <summary>
        <para>
       Returns the
       value of the specified column as a 32-bit signed integer.
    </para>
      </summary>
      <param name="i">
    The column ordinal.
 </param>
      <returns>
        <para>
       The value of the specified column.
    </para>
      </returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetInt64(System.Int32)">
      <summary>
        <para>
       Returns the
       value of the specified column as a 64-bit signed integer.
    </para>
      </summary>
      <param name="i">
    The column ordinal.
 </param>
      <returns>
        <para>
       The value of the specified column.
    </para>
      </returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetFloat(System.Int32)">
      <summary>
        <para>
       Returns the value of the specified column as a single-precision floating point number.
    </para>
      </summary>
      <param name="i">
    The column ordinal.
 </param>
      <returns>
        <para>
       The value of the specified column.
    </para>
      </returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetDouble(System.Int32)">
      <summary>
        <para>
       Returns the value of the specified column as a double-precision floating point number.
    </para>
      </summary>
      <param name="i">
    The column ordinal.
 </param>
      <returns>
        <para>
       The value of the specified column.
    </para>
      </returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetString(System.Int32)">
      <summary>
        <para>
       Returns the value of the specified column as a string.
    </para>
      </summary>
      <param name="i">
    The column ordinal.
 </param>
      <returns>
        <para>
       The value of the specified column.
    </para>
      </returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetDecimal(System.Int32)">
      <summary>
        <para>
       Returns the value of the specified column as
       a <see cref="T:System.Decimal" />
       object.
    </para>
      </summary>
      <param name="i">
    The column ordinal.
 </param>
      <returns>
        <para>
       The value of the specified column.
    </para>
      </returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetDateTime(System.Int32)">
      <summary>
        <para>
       Returns the value of the specified column as
       a <see cref="T:System.DateTime" />
       object.
    </para>
      </summary>
      <param name="i">
    The column ordinal.
 </param>
      <returns>
        <para>
       The value of the specified column.
    </para>
      </returns>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.GetData(System.Int32)">
      <summary>
        <para>
       Not currently supported.
    </para>
      </summary>
    </member>
    <member name="M:System.Data.Common.DbDataRecord.IsDBNull(System.Int32)">
      <summary>
        <para> Used to indicate non-existant values.
      </para>
      </summary>
      <param name="i">The column ordinal. </param>
      <returns>
        <para>
          <see langword="true" /> if the
   specified column is equivalent to <see cref="T:System.DBNull" /> ;
   otherwise, <see langword="false" />.
   </para>
      </returns>
    </member>
    <member name="P:System.Data.Common.DbDataRecord.FieldCount">
      <summary>
        <para>
       Indicates the number of
       fields within the current record. This property is read-only.
    </para>
      </summary>
    </member>
    <member name="P:System.Data.Common.DbDataRecord.Item(System.Int32)">
      <summary>
        <para>
       Indicates the value at
       the specified column in its native format given the column ordinal. This
       property is read-only.
    </para>
      </summary>
      <param name="i">
    The column ordinal.
 </param>
    </member>
    <member name="P:System.Data.Common.DbDataRecord.Item(System.String)">
      <summary>
        <para>
       Indicates the value at
       the specified column in its native format given the column name. This
       property is read-only.
    </para>
      </summary>
      <param name="name">
    The column name.
 </param>
    </member>
    <member name="M:System.Data.Common.DbEnumerator.#ctor(System.Data.IDataReader)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.Common.DbEnumerator" /> class using the specified 
<see langword="DataReader" /> .</para>
      </summary>
      <param name="reader">The <see langword="DataReader" /> through which to iterate.</param>
    </member>
    <member name="M:System.Data.Common.DbEnumerator.#ctor(System.Data.IDataReader,System.Boolean)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.Common.DbEnumerator" /> class using the specified 
<see langword="DataReader" />, and indicates whether to automatically close the 
<see langword="DataReader" /> after iterating through its data.</para>
      </summary>
      <param name="reader">The <see langword="DataReader" /> through which to iterate.</param>
      <param name=" closeReader">
        <see langword="true" /> to automatically close the <see langword="DataReader" /> after iterating through its data; otherwise, <see langword="false" />.</param>
    </member>
    <member name="M:System.Data.Common.DbEnumerator.MoveNext">
      <summary>
        <para>Advances the enumerator to the next element of the collection.</para>
      </summary>
    </member>
    <member name="M:System.Data.Common.DbEnumerator.Reset">
      <summary>
        <para>Sets the enumerator to its initial position, which is before the first 
      element in the collection.</para>
      </summary>
    </member>
    <member name="P:System.Data.Common.DbEnumerator.Current">
      <summary>
        <para> Gets the current element in the collection.</para>
      </summary>
    </member>
    <member name="M:System.Data.Common.DbEnumerator.DbColumnDescriptor.CanResetValue(System.Object)">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Data.Common.DbEnumerator.DbColumnDescriptor.GetValue(System.Object)">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Data.Common.DbEnumerator.DbColumnDescriptor.ResetValue(System.Object)">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Data.Common.DbEnumerator.DbColumnDescriptor.SetValue(System.Object,System.Object)">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Data.Common.DbEnumerator.DbColumnDescriptor.ShouldSerializeValue(System.Object)">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="P:System.Data.Common.DbEnumerator.DbColumnDescriptor.ComponentType">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="P:System.Data.Common.DbEnumerator.DbColumnDescriptor.IsReadOnly">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="P:System.Data.Common.DbEnumerator.DbColumnDescriptor.PropertyType">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="T:System.Data.Common.RowUpdatedEventArgs">
      <summary>
        <para> Provides data for the <see langword="RowUpdated" /> event of a .NET data provider.
 </para>
      </summary>
    </member>
    <member name="M:System.Data.Common.RowUpdatedEventArgs.#ctor(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.Common.RowUpdatedEventArgs" /> class.</para>
      </summary>
      <param name="dataRow">The <see cref="T:System.Data.DataRow" /> sent through an <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</param>
      <param name="command">The <see cref="T:System.Data.IDbCommand" /> executed when <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> is called.</param>
      <param name="statementType">The type of SQL statement executed.</param>
      <param name="tableMapping">The <see cref="T:System.Data.Common.DataTableMapping" /> sent through an <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</param>
    </member>
    <member name="P:System.Data.Common.RowUpdatedEventArgs.Command">
      <summary>
        <para>Gets the <see cref="T:System.Data.IDbCommand" /> executed when <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> 
is called.</para>
      </summary>
    </member>
    <member name="P:System.Data.Common.RowUpdatedEventArgs.StatementType">
      <summary>
   Gets the type of SQL statement executed.
</summary>
    </member>
    <member name="P:System.Data.Common.RowUpdatedEventArgs.Errors">
      <summary>
        <para>Gets any errors generated by the .NET data provider when
 the <see cref="P:System.Data.Common.RowUpdatedEventArgs.Command" />
 was
 executed.</para>
      </summary>
    </member>
    <member name="P:System.Data.Common.RowUpdatedEventArgs.RecordsAffected">
      <summary>
        <para> Gets the number of rows changed, inserted, or deleted by execution of the SQL statement.</para>
      </summary>
    </member>
    <member name="P:System.Data.Common.RowUpdatedEventArgs.Row">
      <summary>
        <para>Gets the <see cref="T:System.Data.DataRow" /> sent through an <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />
.</para>
      </summary>
    </member>
    <member name="P:System.Data.Common.RowUpdatedEventArgs.Status">
      <summary>
        <para>Gets the <see cref="T:System.Data.UpdateStatus" /> of the <see cref="P:System.Data.Common.RowUpdatedEventArgs.Command" />.</para>
      </summary>
    </member>
    <member name="P:System.Data.Common.RowUpdatedEventArgs.TableMapping">
      <summary>
        <para>Gets the <see cref="T:System.Data.Common.DataTableMapping" /> sent through an <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</para>
      </summary>
    </member>
    <member name="T:System.Data.Common.RowUpdatingEventArgs">
      <summary>
        <para> Provides the data for the <see langword="RowUpdating" /> event of a .NET data provider.
 </para>
      </summary>
    </member>
    <member name="M:System.Data.Common.RowUpdatingEventArgs.#ctor(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.Common.RowUpdatingEventArgs" /> class.</para>
      </summary>
      <param name="dataRow">The <see cref="T:System.Data.DataRow" /> to <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</param>
      <param name="command">The <see cref="T:System.Data.IDbCommand" /> to execute when <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> is called.</param>
      <param name="statementType">The type of SQL statement to execute.</param>
      <param name="tableMapping">The <see cref="T:System.Data.Common.DataTableMapping" /> to send through an <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</param>
    </member>
    <member name="P:System.Data.Common.RowUpdatingEventArgs.Command">
      <summary>
        <para>Gets the <see cref="T:System.Data.IDbCommand" /> to execute during the <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> operation.</para>
      </summary>
    </member>
    <member name="P:System.Data.Common.RowUpdatingEventArgs.StatementType">
      <summary>
        <para> Gets the type of SQL
      statement to execute.</para>
      </summary>
    </member>
    <member name="P:System.Data.Common.RowUpdatingEventArgs.Errors">
      <summary>
        <para>Gets any errors generated by the .NET data provider when
 the <see cref="P:System.Data.Common.RowUpdatedEventArgs.Command" />
 executes.</para>
      </summary>
    </member>
    <member name="P:System.Data.Common.RowUpdatingEventArgs.Row">
      <summary>
        <para>Gets the <see cref="T:System.Data.DataRow" /> to send through an <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> 
.</para>
      </summary>
    </member>
    <member name="P:System.Data.Common.RowUpdatingEventArgs.Status">
      <summary>
        <para>Gets the <see cref="T:System.Data.UpdateStatus" /> of the <see cref="P:System.Data.Common.RowUpdatedEventArgs.Command" />.</para>
      </summary>
    </member>
    <member name="P:System.Data.Common.RowUpdatingEventArgs.TableMapping">
      <summary>
        <para>Gets the <see cref="T:System.Data.Common.DataTableMapping" /> to send through the <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</para>
      </summary>
    </member>
    <member name="M:System.Data.DataExpression.#ctor">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Data.DataExpression.#ctor(System.String,System.Data.DataTable)">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Data.DataExpression.#ctor(System.String,System.Data.DataTable,System.Type)">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Data.DataExpression.Bind(System.Data.DataTable)">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Data.DataExpression.Evaluate">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Data.DataExpression.Evaluate(System.Data.DataRow,System.Data.DataRowVersion)">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Data.DataExpression.Evaluate(System.Data.DataRow[])">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Data.DataExpression.Evaluate(System.Data.DataRow[],System.Data.DataRowVersion)">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Data.DataExpression.ToString">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="P:System.Data.DataExpression.Expression">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Data.DataFilter.#ctor">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Data.DataFilter.#ctor(System.String,System.Data.DataTable)">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Data.DataFilter.Invoke">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Data.DataFilter.Invoke(System.Data.DataRow)">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Data.DataFilter.Invoke(System.Data.DataRow,System.Data.DataRowVersion)">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Data.ExpressionParser.IsWhiteSpace(System.Char)">
      <summary>
     is the character a white space character?
     Consider using CharacterInfo().IsWhiteSpace(ch) (System.Globalization)
 </summary>
    </member>
    <member name="M:System.Data.ExpressionParser.IsAlphaNumeric(System.Char)">
      <summary>
     is the character an alphanumeric?
 </summary>
    </member>
    <member name="M:System.Data.ExpressionParser.IsHexChar(System.Char)">
      <summary>
     is the character an hex value
 </summary>
    </member>
    <member name="M:System.Data.ExpressionParser.IsAlpha(System.Char)">
      <summary>
     is the character an alpha?
 </summary>
    </member>
    <member name="T:System.Data.InvalidExpressionException">
      <summary>
        <para>Represents the exception that is thrown when attempting to add 
      a <see cref="T:System.Data.DataColumn" /> containing an invalid
   <see cref="P:System.Data.DataColumn.Expression" /> to
      a <see cref="T:System.Data.DataColumnCollection" />.</para>
      </summary>
    </member>
    <member name="M:System.Data.InvalidExpressionException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.InvalidExpressionException" /> class with the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> and the <see cref="T:System.Runtime.Serialization.StreamingContext" /> .</para>
      </summary>
      <param name="info">The data needed to serialize or deserialize an object.</param>
      <param name="context">The source and destination of a given serialized stream.</param>
    </member>
    <member name="M:System.Data.InvalidExpressionException.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.InvalidExpressionException" /> class.</para>
      </summary>
    </member>
    <member name="M:System.Data.InvalidExpressionException.#ctor(System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.InvalidExpressionException" /> class with the specified 
   string.</para>
      </summary>
      <param name="s">The string to display when the exception is thrown.</param>
    </member>
    <member name="T:System.Data.EvaluateException">
      <summary>
        <para>Represents the exception that is thrown 
      when the <see cref="P:System.Data.DataColumn.Expression" /> property of a <see cref="T:System.Data.DataColumn" /> cannot be evaluated.</para>
      </summary>
    </member>
    <member name="M:System.Data.EvaluateException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.EvaluateException" /> class with the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> and the <see cref="T:System.Runtime.Serialization.StreamingContext" /> .</para>
      </summary>
      <param name="info">The data needed to serialize or deserialize an object.</param>
      <param name="context">The source and destination of a given serialized stream.</param>
    </member>
    <member name="M:System.Data.EvaluateException.#ctor">
      <summary>
   Initializes a new instance of the <see cref="T:System.Data.EvaluateException" /> class.
</summary>
    </member>
    <member name="M:System.Data.EvaluateException.#ctor(System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.EvaluateException" /> class with the specified string.</para>
      </summary>
      <param name="s">The string to display when the exception is thrown.</param>
    </member>
    <member name="T:System.Data.SyntaxErrorException">
      <summary>
        <para>Represents the exception that is thrown when the <see cref="P:System.Data.DataColumn.Expression" /> property of a <see cref="T:System.Data.DataColumn" /> contains 
   a syntax error.</para>
      </summary>
    </member>
    <member name="M:System.Data.SyntaxErrorException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.SyntaxErrorException" /> class with the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> and the <see cref="T:System.Runtime.Serialization.StreamingContext" /> .</para>
      </summary>
      <param name="info">The data needed to serialize or deserialize an object.</param>
      <param name="context">The source and destination of a given serialized stream.</param>
    </member>
    <member name="M:System.Data.SyntaxErrorException.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.SyntaxErrorException" /> class.</para>
      </summary>
    </member>
    <member name="M:System.Data.SyntaxErrorException.#ctor(System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.SyntaxErrorException" /> class with the specified 
   string.</para>
      </summary>
      <param name="s">The string to display when the exception is thrown.</param>
    </member>
    <member name="T:System.Data.OleDb.OleDbCommand">
      <summary>
        <para>Represents an SQL statement or stored procedure to execute against a data source.</para>
      </summary>
    </member>
    <member name="M:System.Data.OleDb.OleDbCommand.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.OleDb.OleDbCommand" />
class.</para>
      </summary>
    </member>
    <member name="M:System.Data.OleDb.OleDbCommand.#ctor(System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.OleDb.OleDbCommand" /> class with the text of the query.</para>
      </summary>
      <param name="cmdText">The text of the query.</param>
    </member>
    <member name="M:System.Data.OleDb.OleDbCommand.#ctor(System.String,System.Data.OleDb.OleDbConnection)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.OleDb.OleDbCommand" /> class with the text of the query and an
<see cref="T:System.Data.OleDb.OleDbConnection" /> .</para>
      </summary>
      <param name="cmdText">The text of the query.</param>
      <param name="connection">An <see cref="T:System.Data.OleDb.OleDbConnection" /> that represents the connection to a data source.</param>
    </member>
    <member name="M:System.Data.OleDb.OleDbCommand.#ctor(System.String,System.Data.OleDb.OleDbConnection,System.Data.OleDb.OleDbTransaction)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.OleDb.OleDbCommand" /> class with the text of the query, an
<see cref="T:System.Data.OleDb.OleDbConnection" />, and the <see cref="P:System.Data.OleDb.OleDbCommand.Transaction" /> .</para>
      </summary>
      <param name="cmdText">The text of the query.</param>
      <param name="connection">An <see cref="T:System.Data.OleDb.OleDbConnection" /> that represents the connection to a data source.</param>
      <param name="transaction">The transaction in which the <see cref="T:System.Data.OleDb.OleDbCommand" /> executes.</param>
    </member>
    <member name="M:System.Data.OleDb.OleDbCommand.Cancel">
      <summary>
        <para>Attempts to cancel the execution of an <see cref="T:System.Data.OleDb.OleDbCommand" /> .</para>
      </summary>
    </member>
    <member name="M:System.Data.OleDb.OleDbCommand.CreateParameter">
      <summary>
        <para>Creates
      a new instance of an <see cref="T:System.Data.OleDb.OleDbParameter" /> object. </para>
      </summary>
      <returns>
        <para>An <see cref="T:System.Data.OleDb.OleDbParameter" /> object.</para>
      </returns>
    </member>
    <member name="M:System.Data.OleDb.OleDbCommand.Dispose(System.Boolean)">
      <summary>
        <para>Releases the unmanaged resources used by the <see cref="T:System.Data.OleDb.OleDbCommand" /> and optionally releases the managed 
   resources.</para>
      </summary>
      <param name="disposing">
        <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources. </param>
    </member>
    <member name="M:System.Data.OleDb.OleDbCommand.ExecuteReader">
      <summary>
        <para>Sends the <see cref="P:System.Data.OleDb.OleDbCommand.CommandText" /> to the <see cref="P:System.Data.OleDb.OleDbCommand.Connection" /> and builds an <see cref="T:System.Data.OleDb.OleDbDataReader" /> .</para>
      </summary>
      <returns>
        <para>An <see cref="T:System.Data.OleDb.OleDbDataReader" /> object.</para>
      </returns>
    </member>
    <member name="M:System.Data.OleDb.OleDbCommand.ExecuteReader(System.Data.CommandBehavior)">
      <summary>
        <para>Sends the <see cref="P:System.Data.OleDb.OleDbCommand.CommandText" /> to the <see cref="P:System.Data.OleDb.OleDbCommand.Connection" />, and builds an <see cref="T:System.Data.OleDb.OleDbDataReader" /> using one of the <see cref="T:System.Data.CommandBehavior" /> values.</para>
      </summary>
      <param name="behavior">One of the <see cref="T:System.Data.CommandBehavior" />values.</param>
      <returns>
        <para>An <see cref="T:System.Data.OleDb.OleDbDataReader" /> object.</para>
      </returns>
    </member>
    <member name="M:System.Data.OleDb.OleDbCommand.ExecuteNonQuery">
      <summary>
        <para> Executes a SQL statement against the <see cref="P:System.Data.OleDb.OleDbCommand.Connection" /> and returns the number of rows
   affected.</para>
      </summary>
      <returns>
        <para>The number of rows affected.</para>
      </returns>
    </member>
    <member name="M:System.Data.OleDb.OleDbCommand.ExecuteScalar">
      <summary>
        <para>Executes the query, and returns the first column of the first row in the resultset returned by the query. Extra columns or rows are ignored.</para>
      </summary>
      <returns>
        <para>The first column of the first row in the resultset.</para>
      </returns>
    </member>
    <member name="M:System.Data.OleDb.OleDbCommand.Prepare">
      <summary>
        <para>Creates a prepared (or compiled) version of the command on the data
      source.</para>
      </summary>
    </member>
    <member name="M:System.Data.OleDb.OleDbCommand.ResetCommandTimeout">
      <summary>
        <para> Resets the <see cref="P:System.Data.OleDb.OleDbCommand.CommandTimeout" /> property to the default value.
   </para>
      </summary>
    </member>
    <member name="P:System.Data.OleDb.OleDbCommand.CommandText">
      <summary>
        <para> Gets or
      sets the SQL statement or stored procedure to execute at the data source.</para>
      </summary>
    </member>
    <member name="P:System.Data.OleDb.OleDbCommand.CommandTimeout">
      <summary>
        <para> Gets or sets the wait time before
      terminating an attempt to execute a command and generating an error.</para>
      </summary>
    </member>
    <member name="P:System.Data.OleDb.OleDbCommand.CommandType">
      <summary>
        <para>Gets or sets a value indicating how the <see cref="P:System.Data.OleDb.OleDbCommand.CommandText" /> property is interpreted.</para>
      </summary>
    </member>
    <member name="P:System.Data.OleDb.OleDbCommand.Connection">
      <summary>
        <para>Gets or sets the <see cref="T:System.Data.OleDb.OleDbConnection" />
used by this instance of the <see cref="T:System.Data.OleDb.OleDbCommand" />.</para>
      </summary>
    </member>
    <member name="P:System.Data.OleDb.OleDbCommand.DesignTimeVisible">
      <summary>
        <para> Gets or sets a value indicating whether the command object should be visible in
      a customized Windows Forms Designer control.</para>
      </summary>
    </member>
    <member name="P:System.Data.OleDb.OleDbCommand.Parameters">
      <summary>
        <para> Gets the <see cref="T:System.Data.OleDb.OleDbParameterCollection" /> .</para>
      </summary>
    </member>
    <member name="P:System.Data.OleDb.OleDbCommand.Transaction">
      <summary>
        <para>Gets or sets the transaction
      in which the <see cref="T:System.Data.OleDb.OleDbCommand" />
      executes.
      </para>
      </summary>
    </member>
    <member name="P:System.Data.OleDb.OleDbCommand.UpdatedRowSource">
      <summary>
        <para> Gets or sets how command results are applied to the <see cref="T:System.Data.DataRow" /> when used
   by the <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> method of the <see cref="T:System.Data.Common.DbDataAdapter" />.</para>
      </summary>
    </member>
    <member name="T:System.Data.OleDb.OleDbCommandBuilder">
      <summary>
        <para>Provides a means of automatically generating
      single-table commands used to reconcile changes made to a <see cref="T:System.Data.DataSet" /> with the associated database. This
      class cannot be inherited.</para>
      </summary>
    </member>
    <member name="M:System.Data.OleDb.OleDbCommandBuilder.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.OleDb.OleDbCommandBuilder" /> 
class.</para>
      </summary>
    </member>
    <member name="M:System.Data.OleDb.OleDbCommandBuilder.#ctor(System.Data.OleDb.OleDbDataAdapter)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.OleDb.OleDbCommandBuilder" /> class with the associated <see cref="T:System.Data.OleDb.OleDbDataAdapter" />
object.</para>
      </summary>
      <param name="adapter">An <see cref="T:System.Data.OleDb.OleDbDataAdapter" />.</param>
    </member>
    <member name="M:System.Data.OleDb.OleDbCommandBuilder.Dispose(System.Boolean)">
      <summary>
        <para>Releases the unmanaged resources used by the <see cref="T:System.Data.OleDb.OleDbCommandBuilder" /> and optionally releases the managed 
   resources.</para>
      </summary>
      <param name="disposing">
        <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources. </param>
    </member>
    <member name="M:System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand">
      <summary>
        <para> Gets
      the automatically generated SQL statement required to perform inserts at the data source when an
      application calls <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> on the <see cref="T:System.Data.OleDb.OleDbDataAdapter" />
      .</para>
      </summary>
      <returns>
        <para>The text of the SQL statement to be executed.</para>
      </returns>
    </member>
    <member name="M:System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand">
      <summary>
        <para> Gets
      the automatically generated SQL statement required to perform updates at the data source when an
      application calls <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> on the
      <see cref="T:System.Data.OleDb.OleDbDataAdapter" />
   .</para>
      </summary>
      <returns>
        <para>The text of the SQL statement to be executed.</para>
      </returns>
    </member>
    <member name="M:System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand">
      <summary>
        <para> Gets
      the automatically generated SQL statement required to perform deletions at the data source when an
      application calls <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> on the
   <see cref="T:System.Data.OleDb.OleDbDataAdapter" />
   .</para>
      </summary>
      <returns>
        <para>The text of the SQL statement to be executed.</para>
      </returns>
    </member>
    <member name="M:System.Data.OleDb.OleDbCommandBuilder.RefreshSchema">
      <summary>
        <para>Refreshes the database schema information used to generate INSERT, UPDATE, or DELETE statements.</para>
      </summary>
    </member>
    <member name="M:System.Data.OleDb.OleDbCommandBuilder.DeriveParameters(System.Data.OleDb.OleDbCommand)">
      <summary>
        <para>Populates the specified <see cref="T:System.Data.OleDb.OleDbCommand" />
object's <see cref="P:System.Data.OleDb.OleDbCommand.Parameters" /> collection with
parameter information for the stored procedure specified in the
<see cref="T:System.Data.OleDb.OleDbCommand" /> 
.</para>
      </summary>
      <param name="command">The <see cref="T:System.Data.OleDb.OleDbCommand" /> referencing the stored procedure for which the parameter information is to be derived. The derived parameters will be populated into the <see cref="P:System.Data.OleDb.OleDbCommand.Parameters" /> of this command.</param>
    </member>
    <member name="P:System.Data.OleDb.OleDbCommandBuilder.DataAdapter">
      <summary>
        <para> Gets or sets an <see cref="T:System.Data.OleDb.OleDbDataAdapter" /> object for which SQL statements are
   automatically generated.</para>
      </summary>
    </member>
    <member name="P:System.Data.OleDb.OleDbCommandBuilder.QuotePrefix">
      <summary>
        <para> Gets or sets the beginning character or characters to use when specifying database object names,
      (for example, tables or columns), that contain characters such as spaces.</para>
      </summary>
    </member>
    <member name="P:System.Data.OleDb.OleDbCommandBuilder.QuoteSuffix">
      <summary>
        <para> Gets or sets the ending character or characters to use when specifying database object
      names, (for example, tables or columns), that contain characters such as spaces.</para>
      </summary>
    </member>
    <member name="T:System.Data.OleDb.OleDbConnection">
      <summary>
        <para>Represents an open connection to a data source.</para>
      </summary>
    </member>
    <member name="M:System.Data.OleDb.OleDbConnection.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.OleDb.OleDbConnection" />
class.</para>
      </summary>
    </member>
    <member name="M:System.Data.OleDb.OleDbConnection.#ctor(System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.OleDb.OleDbConnection" />
class with the specified connection string.</para>
      </summary>
      <param name="connectionString">The connection used to open the database.</param>
    </member>
    <member name="M:System.Data.OleDb.OleDbConnection.BeginTransaction(System.Data.IsolationLevel)">
      <summary>
        <para>Begins a database transaction with the current <see cref="T:System.Data.IsolationLevel" />
value.</para>
      </summary>
      <param name="isolationLevel">The transaction isolation level for this connection.</param>
      <returns>
        <para>An object representing the new transaction.</para>
      </returns>
    </member>
    <member name="M:System.Data.OleDb.OleDbConnection.BeginTransaction">
      <summary>
        <para>Begins a database transaction.</para>
      </summary>
      <returns>
        <para>An object representing the new transaction. </para>
      </returns>
    </member>
    <member name="M:System.Data.OleDb.OleDbConnection.ChangeDatabase(System.String)">
      <summary>
        <para>Changes the current database for an open <see cref="T:System.Data.OleDb.OleDbConnection" /> .</para>
      </summary>
      <param name="value">The database name.</param>
    </member>
    <member name="M:System.Data.OleDb.OleDbConnection.Close">
      <summary>
        <para>Closes the connection to the data source. This is the preferred method of closing any open connection.</para>
      </summary>
    </member>
    <member name="M:System.Data.OleDb.OleDbConnection.CreateCommand">
      <summary>
        <para>Creates and returns an <see cref="T:System.Data.OleDb.OleDbCommand" /> object associated with
   the <see cref="T:System.Data.OleDb.OleDbConnection" />.</para>
      </summary>
      <returns>
        <para>An <see cref="T:System.Data.OleDb.OleDbCommand" /> object. </para>
      </returns>
    </member>
    <member name="M:System.Data.OleDb.OleDbConnection.Dispose(System.Boolean)">
      <summary>
        <para>Releases the unmanaged resources used by the <see cref="T:System.Data.OleDb.OleDbConnection" /> and optionally releases the managed 
   resources.</para>
      </summary>
      <param name="disposing">
        <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources. </param>
    </member>
    <member name="M:System.Data.OleDb.OleDbConnection.GetOleDbSchemaTable(System.Guid,System.Object[])">
      <summary>
        <para>Returns schema information from a data source as indicated by a Guid, and after applying the specified restrictions.</para>
      </summary>
      <param name="schema">One of the <see cref="T:System.Data.OleDb.OleDbSchemaGuid" /> values that specifies the schema table to return.</param>
      <param name="restrictions">
        <para>An <see cref="T:System.Object" /> array of restriction values. These are applied in the order of the restriction columns. That is, the first restriction value applies to the first restriction column, the second restriction value applies to the second restriction column, and so on. </para>
      </param>
      <returns>
        <para>A <see cref="T:System.Data.DataTable" /> containing the requested schema information.</para>
      </returns>
    </member>
    <member name="M:System.Data.OleDb.OleDbConnection.Open">
      <summary>
        <para>Opens a database connection with the property
      settings specified by the <see cref="P:System.Data.OleDb.OleDbConnection.ConnectionString" /> .</para>
      </summary>
    </member>
    <member name="M:System.Data.OleDb.OleDbConnection.ReleaseObjectPool">
      <summary>
        <para>Indicates that the <see cref="T:System.Data.OleDb.OleDbConnection" /> object pooling can be cleared when the last
   underlying OLE DB Provider is released.</para>
      </summary>
    </member>
    <member name="P:System.Data.OleDb.OleDbConnection.ConnectionString">
      <summary>
        <para>Gets or sets the string used to open a database.</para>
      </summary>
    </member>
    <member name="P:System.Data.OleDb.OleDbConnection.ConnectionTimeout">
      <summary>
        <para> Gets the time to wait while trying to establish a
      connection before terminating the attempt and generating an error.</para>
      </summary>
    </member>
    <member name="P:System.Data.OleDb.OleDbConnection.Database">
      <summary>
        <para> Gets the name of the current database or the database to be used once a connection is open.</para>
      </summary>
    </member>
    <member name="P:System.Data.OleDb.OleDbConnection.DataSource">
      <summary>
        <para> Gets the location and file name of the data source.</para>
      </summary>
    </member>
    <member name="P:System.Data.OleDb.OleDbConnection.Provider">
      <summary>
        <para> Gets the name of the OLE DB provider.</para>
      </summary>
    </member>
    <member name="P:System.Data.OleDb.OleDbConnection.ServerVersion">
      <summary>
        <para> Gets a string containing the version of
      the of the server to which the client is connected.</para>
      </summary>
    </member>
    <member name="P:System.Data.OleDb.OleDbConnection.State">
      <summary>
        <para>Gets the current state of the connection.</para>
      </summary>
    </member>
    <member name="E:System.Data.OleDb.OleDbConnection.InfoMessage">
      <summary>
        <para>Occurs when the provider sends a warning or an informational message.</para>
      </summary>
    </member>
    <member name="E:System.Data.OleDb.OleDbConnection.StateChange">
      <summary>
        <para>Occurs when the state of the connection changes.</para>
      </summary>
    </member>
    <member name="T:System.Data.OleDb.OleDbDataAdapter">
      <summary>
        <para> Represents a set of data commands and a
      database connection that are used to fill the <see cref="T:System.Data.DataSet" />
      and update the data source.</para>
      </summary>
    </member>
    <member name="M:System.Data.OleDb.OleDbDataAdapter.#ctor">
      <summary>
        <para>Initializes a new
      instance of the <see cref="T:System.Data.OleDb.OleDbDataAdapter" />
      class.</para>
      </summary>
    </member>
    <member name="M:System.Data.OleDb.OleDbDataAdapter.#ctor(System.Data.OleDb.OleDbCommand)">
      <summary>
   Initializes a new instance of the <see cref="T:System.Data.OleDb.OleDbDataAdapter" /> class with the specified <see cref="T:System.Data.OleDb.OleDbCommand" /> as the <see cref="P:System.Data.OleDb.OleDbDataAdapter.SelectCommand" /> property.
</summary>
      <param name="selectCommand">An <see cref="T:System.Data.OleDb.OleDbCommand" /> that is a SELECT statement or stored procedure. This <see cref="T:System.Data.OleDb.OleDbCommand" /> is set as the <see cref="P:System.Data.OleDb.OleDbDataAdapter.SelectCommand" /> property of the <see cref="T:System.Data.OleDb.OleDbDataAdapter" /> .</param>
    </member>
    <member name="M:System.Data.OleDb.OleDbDataAdapter.#ctor(System.String,System.String)">
      <summary>
        <para>Initializes a new instance
      of the <see cref="T:System.Data.OleDb.OleDbDataAdapter" /> class with a <see cref="P:System.Data.OleDb.OleDbDataAdapter.SelectCommand" />
      .</para>
      </summary>
      <param name="selectCommandText">The <see cref="P:System.Data.OleDb.OleDbDataAdapter.SelectCommand" /> .</param>
      <param name="selectConnectionString">The connection string.</param>
    </member>
    <member name="M:System.Data.OleDb.OleDbDataAdapter.#ctor(System.String,System.Data.OleDb.OleDbConnection)">
      <summary>
        <para>Inintializes a new instance
 of the <see cref="T:System.Data.OleDb.OleDbDataAdapter" /> class with a <see cref="P:System.Data.OleDb.OleDbDataAdapter.SelectCommand" />
 .</para>
      </summary>
      <param name="selectCommandText">The <see cref="P:System.Data.OleDb.OleDbDataAdapter.SelectCommand" /> .</param>
      <param name="selectConnection">An <see cref="T:System.Data.OleDb.OleDbConnection" /> that represents the connection.</param>
    </member>
    <member name="M:System.Data.OleDb.OleDbDataAdapter.Fill(System.Data.DataTable,System.Object)">
      <summary>
        <para>Adds or refreshes rows in a <see cref="T:System.Data.DataTable" /> to match those in an ADO <see langword="Recordset " />or <see langword="Record" />
object using the specified <see cref="T:System.Data.DataTable" /> and ADO
objects.</para>
      </summary>
      <param name="dataTable">A <see cref="T:System.Data.DataTable" /> to fill with records and, if necessary, schema.</param>
      <param name="ADODBRecordSet">An ADO <see langword="Recordset" /> or <see langword="Record" /> object. </param>
      <returns>
        <para>The number of rows successfully refreshed to the <see cref="T:System.Data.DataTable" />. This does not include rows affected by statements
   that do not return rows.</para>
      </returns>
    </member>
    <member name="M:System.Data.OleDb.OleDbDataAdapter.Fill(System.Data.DataSet,System.Object,System.String)">
      <summary>
        <para>Adds or refreshes rows in the <see cref="T:System.Data.DataSet" /> to match those in an ADO <see langword="Recordset" /> or <see langword="Record" /> object using
   the specified <see cref="T:System.Data.DataSet" />, ADO object, and source table name.</para>
      </summary>
      <param name="dataSet">A <see cref="T:System.Data.DataSet" /> to fill with records and, if necessary, schema.</param>
      <param name="ADODBRecordSet">An ADO <see langword="Recordset" /> or <see langword="Record" /> object. </param>
      <param name="srcTable">The source table used for the table mappings.</param>
      <returns>
        <para>The number of rows successfully added to or refreshed in the <see cref="T:System.Data.DataSet" />. This does not include rows affected by statements
   that do not return rows.</para>
      </returns>
    </member>
    <member name="M:System.Data.OleDb.OleDbDataAdapter.OnRowUpdated(System.Data.Common.RowUpdatedEventArgs)">
      <summary>
        <para> Raises the <see cref="E:System.Data.OleDb.OleDbDataAdapter.RowUpdated" /> event using a <see cref="T:System.Data.Common.RowUpdatedEventArgs" />
object.</para>
      </summary>
      <param name="value">A <see cref="T:System.Data.Common.RowUpdatedEventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Data.OleDb.OleDbDataAdapter.OnRowUpdating(System.Data.Common.RowUpdatingEventArgs)">
      <summary>
        <para> Raises the <see cref="E:System.Data.OleDb.OleDbDataAdapter.RowUpdating" /> event using a <see cref="T:System.Data.Common.RowUpdatingEventArgs" />
object.</para>
      </summary>
      <param name="value">A <see cref="T:System.Data.Common.RowUpdatingEventArgs" /> that contains the event data. </param>
    </member>
    <member name="P:System.Data.OleDb.OleDbDataAdapter.DeleteCommand">
      <summary>
        <para>Gets or sets an SQL statement or stored procedure for deleting records from the data set.</para>
      </summary>
    </member>
    <member name="P:System.Data.OleDb.OleDbDataAdapter.InsertCommand">
      <summary>
        <para>Gets or sets an SQL statement or stored procedure used to insert new records into the data source.</para>
      </summary>
    </member>
    <member name="P:System.Data.OleDb.OleDbDataAdapter.SelectCommand">
      <summary>
        <para>Gets or sets an SQL statement
      or stored procedure used to select records in the data source.</para>
      </summary>
    </member>
    <member name="P:System.Data.OleDb.OleDbDataAdapter.UpdateCommand">
      <summary>
        <para>Gets or sets an SQL
      statement or stored procedure used to update records in the data source.</para>
      </summary>
    </member>
    <member name="E:System.Data.OleDb.OleDbDataAdapter.RowUpdated">
      <summary>
        <para>Occurs during <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> after a command is executed against the data
   source.
   The attempt to update is made, so the event fires.</para>
      </summary>
    </member>
    <member name="E:System.Data.OleDb.OleDbDataAdapter.RowUpdating">
      <summary>
        <para>Occurs during <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> before a command is
   executed against the data source. The attempt to update is made, so the event
   fires.</para>
      </summary>
    </member>
    <member name="T:System.Data.OleDb.OleDbDataReader">
      <summary>
        <para> Provides a way of reading
      a forward-only stream of data rows from a data source. This class cannot be
      inherited.</para>
      </summary>
    </member>
    <member name="M:System.Data.OleDb.OleDbDataReader.GetSchemaTable">
      <summary>
        <para>Returns a <see cref="T:System.Data.DataTable" /> that describes the column metadata
   of the <see cref="T:System.Data.OleDb.OleDbDataReader" /> . </para>
      </summary>
      <returns>
        <para>A <see cref="T:System.Data.DataTable" /> that describes the column metadata.</para>
      </returns>
    </member>
    <member name="M:System.Data.OleDb.OleDbDataReader.Close">
      <summary>
        <para>Closes the <see cref="T:System.Data.OleDb.OleDbDataReader" /> object.</para>
      </summary>
    </member>
    <member name="M:System.Data.OleDb.OleDbDataReader.Finalize">
      <summary>
        <para>Frees resources before the <see cref="T:System.Data.OleDb.OleDbDataReader" /> is reclaimed by the 
   Garbage Collector.</para>
      </summary>
    </member>
    <member name="M:System.Data.OleDb.OleDbDataReader.GetBoolean(System.Int32)">
      <summary>
        <para>Gets the value of the specified column as a Boolean.</para>
      </summary>
      <param name="ordinal">The zero-based column ordinal. </param>
      <returns>
        <para>The value of the column.</para>
      </returns>
    </member>
    <member name="M:System.Data.OleDb.OleDbDataReader.GetByte(System.Int32)">
      <summary>
        <para>Gets the value of the specified column as a byte.</para>
      </summary>
      <param name="ordinal">The zero-based column ordinal. </param>
      <returns>
        <para>The value of the specified column as a byte.</para>
      </returns>
    </member>
    <member name="M:System.Data.OleDb.OleDbDataReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)">
      <summary>
        <para> Reads a stream of bytes from the specified column offset into
      the
      buffer as an array starting at the given buffer offset.</para>
      </summary>
      <param name="ordinal">The zero-based column ordinal. </param>
      <param name=" dataIndex">The index within the field from which to begin the read operation. </param>
      <param name=" buffer">The buffer into which to read the stream of bytes. </param>
      <param name=" bufferIndex">The index for <paramref name="buffer" /> to begin the read operation. </param>
      <param name=" length">The maximum length to copy into the buffer. </param>
      <returns>
        <para>The actual number of bytes read.</para>
      </returns>
    </member>
    <member name="M:System.Data.OleDb.OleDbDataReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)">
      <summary>
        <para>Reads a stream of characters from the specified column offset
      into the buffer as an array starting at the given buffer offset.</para>
      </summary>
      <param name="ordinal">The zero-based column ordinal. </param>
      <param name=" dataIndex">The index within the row from which to begin the read operation. </param>
      <param name=" buffer">The buffer into which to copy data. </param>
      <param name=" bufferIndex">The index for <paramref name="buffer" /> to begin the read operation. </param>
      <param name=" length">The number of characters to read. </param>
      <returns>
        <para>The actual number of characters read.</para>
      </returns>
    </member>
    <member name="M:System.Data.OleDb.OleDbDataReader.GetChar(System.Int32)">
      <summary>
        <para>Gets the value of the specified column as a character.</para>
      </summary>
      <param name="ordinal">The zero-based column ordinal. </param>
      <returns>
        <para>The value of the specified column.</para>
      </returns>
    </member>
    <member name="M:System.Data.OleDb.OleDbDataReader.GetData(System.Int32)">
      <summary>
        <para> Not currently supported.
      </para>
      </summary>
      <param name="ordinal">The zero-based column ordinal. </param>
    </member>
    <member name="M:System.Data.OleDb.OleDbDataReader.GetDataTypeName(System.Int32)">
      <summary>
        <para>Gets the name of the source data type.</para>
      </summary>
      <param name="index">The zero-based column ordinal. </param>
      <returns>
        <para>The name of the back-end data type.</para>
      </returns>
    </member>
    <member name="M:System.Data.OleDb.OleDbDataReader.GetDateTime(System.Int32)">
      <summary>
        <para>Gets the value of the specified column as
      a <see cref="T:System.DateTime" />
      object.</para>
      </summary>
      <param name="ordinal">The zero-based column ordinal. </param>
      <returns>
        <para>The value of the specified column.</para>
      </returns>
    </member>
    <member name="M:System.Data.OleDb.OleDbDataReader.GetDecimal(System.Int32)">
      <summary>
        <para>Gets the value of the specified column as
      a <see cref="T:System.Decimal" />
      object.</para>
      </summary>
      <param name="ordinal">The zero-based column ordinal. </param>
      <returns>
        <para>The value of the specified column.</para>
      </returns>
    </member>
    <member name="M:System.Data.OleDb.OleDbDataReader.GetDouble(System.Int32)">
      <summary>
        <para>Gets the value of the specified column as a double-precision floating point number.</para>
      </summary>
      <param name="ordinal">The zero-based column ordinal. </param>
      <returns>
        <para>The value of the specified column.</para>
      </returns>
    </member>
    <member name="M:System.Data.OleDb.OleDbDataReader.GetFieldType(System.Int32)">
      <summary>
        <para>Gets the <see cref="T:System.Type" />
that is the data type of the object.</para>
      </summary>
      <param name="index">The zero-based column ordinal. </param>
      <returns>
        <para>The <see cref="T:System.Type" />
that is the data type of the object.</para>
      </returns>
    </member>
    <member name="M:System.Data.OleDb.OleDbDataReader.GetFloat(System.Int32)">
      <summary>
        <para>Gets the value of the specified column as a single-precision floating point number.</para>
      </summary>
      <param name="ordinal">The zero-based column ordinal. </param>
      <returns>
        <para>The value of the specified column.</para>
      </returns>
    </member>
    <member name="M:System.Data.OleDb.OleDbDataReader.GetGuid(System.Int32)">
      <summary>
        <para>Gets the value of the specified column as a globally-unique identifier (GUID).</para>
      </summary>
      <param name="ordinal">The zero-based column ordinal. </param>
      <returns>
        <para>The value of the specified column.</para>
      </returns>
    </member>
    <member name="M:System.Data.OleDb.OleDbDataReader.GetInt16(System.Int32)">
      <summary>
        <para>Gets the
      value of the specified column as a 16-bit signed integer.</para>
      </summary>
      <param name="ordinal">The zero-based column ordinal. </param>
      <returns>
        <para>The value of the specified column.</para>
      </returns>
    </member>
    <member name="M:System.Data.OleDb.OleDbDataReader.GetInt32(System.Int32)">
      <summary>
        <para>Gets the
      value of the specified column as a 32-bit signed integer.</para>
      </summary>
      <param name="ordinal">The zero-based column ordinal. </param>
      <returns>
        <para>The value of the specified column.</para>
      </returns>
    </member>
    <member name="M:System.Data.OleDb.OleDbDataReader.GetInt64(System.Int32)">
      <summary>
        <para>Gets the
      value of the specified column as a 64-bit signed integer.</para>
      </summary>
      <param name="ordinal">The zero-based column ordinal. </param>
      <returns>
        <para>The value of the specified column.</para>
      </returns>
    </member>
    <member name="M:System.Data.OleDb.OleDbDataReader.GetName(System.Int32)">
      <summary>
        <para>Gets the name of the specified column.</para>
      </summary>
      <param name="index">The zero-based column ordinal. </param>
      <returns>
        <para>The name of the specified column.</para>
      </returns>
    </member>
    <member name="M:System.Data.OleDb.OleDbDataReader.GetOrdinal(System.String)">
      <summary>
        <para>Gets the column ordinal, given the name of the column.</para>
      </summary>
      <param name="name">The name of the column.</param>
      <returns>
        <para>The zero-based column ordinal.</para>
      </returns>
    </member>
    <member name="M:System.Data.OleDb.OleDbDataReader.GetString(System.Int32)">
      <summary>
        <para>Gets the value of the specified column as a string.</para>
      </summary>
      <param name="ordinal">The zero-based column ordinal. </param>
      <returns>
        <para>The value of the specified column.</para>
      </returns>
    </member>
    <member name="M:System.Data.OleDb.OleDbDataReader.GetTimeSpan(System.Int32)">
      <summary>
        <para>Gets the value of the specified column as
      a <see cref="T:System.TimeSpan" />
      object.</para>
      </summary>
      <param name="ordinal">The zero-based column ordinal. </param>
      <returns>
        <para>The value of the specified column.</para>
      </returns>
    </member>
    <member name="M:System.Data.OleDb.OleDbDataReader.GetValue(System.Int32)">
      <summary>
        <para> Gets the
      value of the column at the specified ordinal in its native format.</para>
      </summary>
      <param name="ordinal">The zero-based column ordinal. </param>
      <returns>
        <para>The value to return.</para>
      </returns>
    </member>
    <member name="M:System.Data.OleDb.OleDbDataReader.GetValues(System.Object[])">
      <summary>
        <para> Gets all the attribute columns in the current
      row.</para>
      </summary>
      <param name="values">An array of <see cref="T:System.Object" /> into which to copy the attribute columns.</param>
      <returns>
        <para>The number of instances of <see cref="T:System.Object" /> in the array.</para>
      </returns>
    </member>
    <member name="M:System.Data.OleDb.OleDbDataReader.IsDBNull(System.Int32)">
      <summary>
        <para> Gets a value indicating whether the column contains non-existent or missing values.
      </para>
      </summary>
      <param name="ordinal">The zero-based column ordinal. </param>
      <returns>
        <para>
          <see langword="true" /> if the specified
   column value is equivalent to <see cref="T:System.DBNull" /> ;
   otherwise, <see langword="false" />.
   </para>
      </returns>
    </member>
    <member name="M:System.Data.OleDb.OleDbDataReader.NextResult">
      <summary>
        <para> Advances the data reader to the next result, when reading the results of
      batch SQL statements.
      </para>
      </summary>
      <returns>
        <para>
          <see langword="true" /> if there are more result sets; otherwise,
<see langword="false" />.</para>
      </returns>
    </member>
    <member name="M:System.Data.OleDb.OleDbDataReader.Read">
      <summary>
        <para>Advances the <see cref="T:System.Data.OleDb.OleDbDataReader" />
to the next record.</para>
      </summary>
      <returns>
        <para>
          <see langword="true" /> if there are more rows; otherwise,
<see langword="false" />.</para>
      </returns>
    </member>
    <member name="P:System.Data.OleDb.OleDbDataReader.Depth">
      <summary>
        <para> Gets a value indicating the depth of nesting for the current row.</para>
      </summary>
    </member>
    <member name="P:System.Data.OleDb.OleDbDataReader.FieldCount">
      <summary>
        <para> Gets the number of columns in the current row.
      </para>
      </summary>
    </member>
    <member name="P:System.Data.OleDb.OleDbDataReader.IsClosed">
      <summary>
        <para> Indicates whether the data reader
      is closed.
      </para>
      </summary>
    </member>
    <member name="P:System.Data.OleDb.OleDbDataReader.RecordsAffected">
      <summary>
        <para> Gets the number of rows changed, inserted, or deleted by execution of the SQL statement.</para>
      </summary>
    </member>
    <member name="P:System.Data.OleDb.OleDbDataReader.Item(System.Int32)">
      <summary>
        <para> 
      Gets the value of the specified column in its native format given
      the column ordinal.
      </para>
      </summary>
      <param name="index">The column ordinal. </param>
    </member>
    <member name="P:System.Data.OleDb.OleDbDataReader.Item(System.String)">
      <summary>
        <para> Gets the value of the specified column in its native format given
      the column name.
      </para>
      </summary>
      <param name="name">The column name. </param>
    </member>
    <member name="T:System.Data.OleDb.OleDbError">
      <summary>
        <para> Collects information relevant to a
      warning or error returned by the data source. This class cannot be
      inherited.
      </para>
      </summary>
    </member>
    <member name="M:System.Data.OleDb.OleDbError.ToString">
      <summary>
        <para>Gets the complete text of the error message.</para>
      </summary>
      <returns>
        <para>The complete text of the error.</para>
      </returns>
    </member>
    <member name="P:System.Data.OleDb.OleDbError.Message">
      <summary>
        <para>Gets a short description of the error.</para>
      </summary>
    </member>
    <member name="P:System.Data.OleDb.OleDbError.NativeError">
      <summary>
        <para>Gets the database-specific error information.</para>
      </summary>
    </member>
    <member name="P:System.Data.OleDb.OleDbError.Source">
      <summary>
        <para>Gets the name of the provider that generated the error.</para>
      </summary>
    </member>
    <member name="P:System.Data.OleDb.OleDbError.SQLState">
      <summary>
        <para>Gets the five-character error
      code following the ANSI SQL standard for the database.</para>
      </summary>
    </member>
    <member name="T:System.Data.OleDb.OleDbErrorCollection">
      <summary>
        <para> Collects all errors generated by the OLE DB .NET Data Provider. This class cannot be inherited.
      </para>
      </summary>
    </member>
    <member name="M:System.Data.OleDb.OleDbErrorCollection.CopyTo(System.Array,System.Int32)">
      <summary>
        <para>Copies the elements of the 
   <see cref="T:System.Data.OleDb.OleDbErrorCollection" /> into an <see cref="T:System.Array" /> , starting at the given index within the 
   <see cref="T:System.Array" /> .</para>
      </summary>
      <param name="array">The <see cref="T:System.Array" /> into which to copy the elements. </param>
      <param name=" index">The starting index of the <paramref name="array" /> . </param>
    </member>
    <member name="P:System.Data.OleDb.OleDbErrorCollection.Count">
      <summary>
        <para>Gets the number of errors in the collection.</para>
      </summary>
    </member>
    <member name="P:System.Data.OleDb.OleDbErrorCollection.Item(System.Int32)">
      <summary>
        <para>Gets the error at the specified index.</para>
      </summary>
      <param name="index">The zero-based index of the error to retrieve.</param>
    </member>
    <member name="T:System.Data.OleDb.OleDbException">
      <summary>
        <para>The exception that is thrown when the underlying provider returns a warning or
      error for an OLE DB data source. This class cannot be inherited.</para>
      </summary>
    </member>
    <member name="P:System.Data.OleDb.OleDbException.ErrorCode">
      <summary>
        <para>Gets the HRESULT of the error.</para>
      </summary>
    </member>
    <member name="P:System.Data.OleDb.OleDbException.Errors">
      <summary>
        <para>Gets a collection of one or more <see cref="T:System.Data.OleDb.OleDbError" /> 
objects that give detailed information about exceptions generated by
the OLE DB .NET Data Provider.</para>
      </summary>
    </member>
    <member name="P:System.Data.OleDb.OleDbException.Message">
      <summary>
        <para> Gets the text describing the error.</para>
      </summary>
    </member>
    <member name="P:System.Data.OleDb.OleDbException.Source">
      <summary>
        <para>Gets the name of the OLE DB provider that generated the error.</para>
      </summary>
    </member>
    <member name="T:System.Data.OleDb.OleDbInfoMessageEventArgs">
      <summary>
        <para> Provides data for the <see cref="E:System.Data.OleDb.OleDbConnection.InfoMessage" /> 
event. This class cannot be inherited.
</para>
      </summary>
    </member>
    <member name="M:System.Data.OleDb.OleDbInfoMessageEventArgs.ToString">
      <summary>
        <para>Retrieves a string representation of the <see cref="E:System.Data.OleDb.OleDbConnection.InfoMessage" /> event.</para>
      </summary>
      <returns>
        <para>A string representing the <see cref="E:System.Data.OleDb.OleDbConnection.InfoMessage" /> event.</para>
      </returns>
    </member>
    <member name="P:System.Data.OleDb.OleDbInfoMessageEventArgs.ErrorCode">
      <summary>
        <para>Gets
       the HRESULT following the ANSI SQL standard for the database.</para>
      </summary>
    </member>
    <member name="P:System.Data.OleDb.OleDbInfoMessageEventArgs.Errors">
      <summary>
        <para>Gets the collection of warnings sent from the data source.</para>
      </summary>
    </member>
    <member name="P:System.Data.OleDb.OleDbInfoMessageEventArgs.Message">
      <summary>
        <para>Gets the full text of the error sent from the data source.</para>
      </summary>
    </member>
    <member name="P:System.Data.OleDb.OleDbInfoMessageEventArgs.Source">
      <summary>
        <para>Gets the name of the object that generated the error.</para>
      </summary>
    </member>
    <member name="T:System.Data.OleDb.OleDbInfoMessageEventHandler">
      <summary>
        <para>Represents the method that will handle the <see cref="E:System.Data.OleDb.OleDbConnection.InfoMessage" /> event of an <see cref="T:System.Data.OleDb.OleDbConnection" />.</para>
      </summary>
      <param name="sender">The source of the event.</param>
      <param name=" e">An <see cref="T:System.Data.OleDb.OleDbInfoMessageEventArgs" /> object that contains the event data.</param>
    </member>
    <member name="T:System.Data.OleDb.OleDbLiteral">
      <summary>
        <para>Returns information about literals used in text commands,
      data values, and database objects.
      </para>
      </summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbLiteral.Invalid">
      <summary>
        <para>An invalid value. <see cref="F:System.Data.OleDb.OleDbLiteral.Invalid" /> maps to DBLITERAL_INVALID.</para>
      </summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbLiteral.Binary_Literal">
      <summary>
        <para>A binary literal in a text command. <see cref="F:System.Data.OleDb.OleDbLiteral.Binary_Literal" /> maps to DBLITERAL_BINARY_LITERAL.</para>
      </summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbLiteral.Catalog_Name">
      <summary>
        <para>A catalog name in a text command. <see cref="F:System.Data.OleDb.OleDbLiteral.Catalog_Name" /> maps to DBLITERAL_CATALOG_NAME.</para>
      </summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbLiteral.Catalog_Separator">
      <summary>
        <para>The character that separates the catalog name from the rest of the identifier in a text command. <see cref="F:System.Data.OleDb.OleDbLiteral.Catalog_Separator" />
 maps to DBLITERAL_CATALOG_SEPARATOR.</para>
      </summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbLiteral.Char_Literal">
      <summary>
        <para>A character literal in a text command. <see cref="F:System.Data.OleDb.OleDbLiteral.Char_Literal" />
maps to DBLITERAL_CHAR_LITERAL.</para>
      </summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbLiteral.Column_Alias">
      <summary>
        <para>A column alias in a text command. <see cref="F:System.Data.OleDb.OleDbLiteral.Column_Alias" />
maps to DBLITERAL_COLUMN_ALIAS.</para>
      </summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbLiteral.Column_Name">
      <summary>
        <para>A column name used in a text command or in a data-definition interface. <see cref="F:System.Data.OleDb.OleDbLiteral.Column_Name" />
maps to DBLITERAL_COLUMN_NAME.</para>
      </summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbLiteral.Correlation_Name">
      <summary>
        <para>A correlation name (table alias) in a text command. <see cref="F:System.Data.OleDb.OleDbLiteral.Correlation_Name" />
maps to DBLITERAL_CORRELATION_NAME.</para>
      </summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbLiteral.Cursor_Name">
      <summary>
        <para>A cursor name in a text command. <see cref="F:System.Data.OleDb.OleDbLiteral.Cursor_Name" />
maps to DBLITERAL_CURSOR_NAME.</para>
      </summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbLiteral.Escape_Percent_Prefix">
      <summary>
        <para>The character used in a LIKE clause to escape the character returned for the DBLITERAL_LIKE_PERCENT literal. For example, if a percent sign (%) is used to 
      match zero or more characters and this is a backslash (\), the characters "abc\%%" match all character values that start with "abc%". Some SQL dialects support a
      clause (the ESCAPE clause) that can be used to override this value. <see cref="F:System.Data.OleDb.OleDbLiteral.Escape_Percent_Prefix" />
      maps to DBLITERAL_ESCAPE_PERCENT_PREFIX.</para>
      </summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbLiteral.Escape_Underscore_Prefix">
      <summary>
        <para>The character used in a LIKE clause to escape the character returned for the DBLITERAL_LIKE_UNDERSCORE literal. For example, if an underscore (_) is 
      used to match exactly one character and this is a backslash (\), the characters "abc\_ _" match all character values that are five characters long and start
      with "abc_". Some SQL dialects support a clause (the ESCAPE clause) that can be used to override this value.
   <see cref="F:System.Data.OleDb.OleDbLiteral.Escape_Underscore_Prefix" />
   maps to DBLITERAL_ESCAPE_UNDERSCORE_PREFIX.</para>
      </summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbLiteral.Index_Name">
      <summary>
        <para>An index name used in a text command or in a data-definition interface.
   <see cref="F:System.Data.OleDb.OleDbLiteral.Index_Name" />
   maps to DBLITERAL_INDEX_NAME.</para>
      </summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbLiteral.Like_Percent">
      <summary>
        <para>The character used in a LIKE clause to match zero or more characters. For example, if this is a percent sign (%), the characters "abc%" match all character 
      values that start with "abc". <see cref="F:System.Data.OleDb.OleDbLiteral.Like_Percent" />
      maps to DBLITERAL_LIKE_PERCENT.</para>
      </summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbLiteral.Like_Underscore">
      <summary>
        <para>The character used in a LIKE clause to match exactly one character. For example, if this is an underscore (_), the characters "abc_" match all character 
      values that are four characters long and start with "abc". <see cref="F:System.Data.OleDb.OleDbLiteral.Like_Underscore" />
      maps to DBLITERAL_LIKE_UNDERSCORE.</para>
      </summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbLiteral.Procedure_Name">
      <summary>
        <para>A procedure name in a text command. <see cref="F:System.Data.OleDb.OleDbLiteral.Procedure_Name" />
maps to DBLITERAL_PROCEDURE_NAME.</para>
      </summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbLiteral.Quote_Prefix">
      <summary>
        <para>The character used in a text command as the opening quote for quoting identifiers that contain special characters. 
   <see cref="F:System.Data.OleDb.OleDbLiteral.Quote_Prefix" />
   maps to DBLITERAL_QUOTE_PREFIX.</para>
      </summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbLiteral.Schema_Name">
      <summary>
        <para>A schema name in a text command. 
   <see cref="F:System.Data.OleDb.OleDbLiteral.Schema_Name" />
   maps to DBLITERAL_SCHEMA_NAME.</para>
      </summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbLiteral.Table_Name">
      <summary>
        <para>A table name used in a text command or in a data-definition interface. 
   <see cref="F:System.Data.OleDb.OleDbLiteral.Table_Name" />
   maps to DBLITERAL_TABLE_NAME.</para>
      </summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbLiteral.Text_Command">
      <summary>
        <para>A text command, such as an SQL statement. <see cref="F:System.Data.OleDb.OleDbLiteral.Text_Command" />
maps to DBLITERAL_TEXT_COMMAND.</para>
      </summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbLiteral.User_Name">
      <summary>
        <para>A user name in a text command. <see cref="F:System.Data.OleDb.OleDbLiteral.User_Name" />
maps to DBLITERAL_USER_NAME.</para>
      </summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbLiteral.View_Name">
      <summary>
        <para>A view name in a text command. <see cref="F:System.Data.OleDb.OleDbLiteral.View_Name" />
maps to DBLITERAL_VIEW_NAME.</para>
      </summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbLiteral.Cube_Name">
      <summary>
        <para> The name of a cube in a schema (or the catalog if the 
      provider does not support schemas).</para>
      </summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbLiteral.Dimension_Name">
      <summary>
        <para>The name of the dimension. If a dimension is part of 
      more than one cube, there is one row for each cube/dimension combination.</para>
      </summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbLiteral.Hierarchy_Name">
      <summary>
        <para>The name of the hierarchy. If the dimension does not 
      contain a hierarchy or has only one hierarchy, the current column contains a null value.</para>
      </summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbLiteral.Level_Name">
      <summary>
        <para>Name of the cube to which the current level belongs.</para>
      </summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbLiteral.Member_Name">
      <summary>
        <para>The name of the member.</para>
      </summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbLiteral.Property_Name">
      <summary>
        <para>The name of the property.</para>
      </summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbLiteral.Schema_Separator">
      <summary>
        <para>The character that separates the schema name from the rest of the identifier in a text command. <see cref="F:System.Data.OleDb.OleDbLiteral.Schema_Separator" />
maps to DBLITERAL_SCHEMA_SEPARATOR.</para>
      </summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbLiteral.Quote_Suffix">
      <summary>
        <para>The character used in a text command as the closing quote for quoting identifiers that contain special characters. 1.x providers that use the same 
character as the prefix and suffix may not return this literal value and can set the lt member of the DBLITERAL structure to DBLITERAL_INVALID if requested. 
   <see cref="F:System.Data.OleDb.OleDbLiteral.Quote_Suffix" />
   maps to DBLITERAL_QUOTE_SUFFIX.</para>
      </summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbLiteral.Escape_Percent_Suffix">
      <summary>
        <para>The escape character, if any, used to suffix the character returned for the DBLITERAL_LIKE_PERCENT literal. For example, if a percent sign (%) is used 
      to match zero or more characters and percent signs are escaped by enclosing in open and close square brackets, DBLITERAL_ESCAPE_PERCENT_PREFIX
      is "[", DBLITERAL_ESCAPE_PERCENT_SUFFIX is "]", and the characters "abc[%]%" match all character values that start with "abc%". Providers that do not use
      a suffix character to escape the DBLITERAL_ESCAPE_PERCENT character do not return this literal value and can set the lt member of the DBLITERAL structure
      to DBLITERAL_INVALID if requested. <see cref="F:System.Data.OleDb.OleDbLiteral.Escape_Percent_Suffix" />
      maps to DBLITERAL_ESCAPE_PERCENT_SUFFIX.</para>
      </summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbLiteral.Escape_Underscore_Suffix">
      <summary>
        <para>The character used in a LIKE clause to escape the character returned for the DBLITERAL_LIKE_UNDERSCORE literal. For example, if an underscore (_) is 
      used to match exactly one character and this is a backslash (\), the characters "abc\_ _" match all character values that are five characters long and start
      with "abc_". Some SQL dialects support a clause (the ESCAPE clause) that can be used to override this value.
   <see cref="F:System.Data.OleDb.OleDbLiteral.Escape_Underscore_Suffix" />
   maps to DBLITERAL_ESCAPE_UNDERSCORE_SUFFIX.</para>
      </summary>
    </member>
    <member name="T:System.Data.OleDb.OleDbParameter">
      <summary>
        <para>Represents a parameter to an <see cref="T:System.Data.OleDb.OleDbCommand" /> and optionally, its mapping to
   a <see cref="T:System.Data.DataSet" /> column. This class
   cannot be inherited.</para>
      </summary>
    </member>
    <member name="M:System.Data.OleDb.OleDbParameter.#ctor">
      <summary>
        <para> Initializes a new instance of the <see cref="T:System.Data.OleDb.OleDbParameter" /> 
class.
</para>
      </summary>
    </member>
    <member name="M:System.Data.OleDb.OleDbParameter.#ctor(System.String,System.Object)">
      <summary>
        <para> Initializes a new instance of the <see cref="T:System.Data.OleDb.OleDbParameter" /> class with the parameter name and the value of the
   new <see cref="T:System.Data.OleDb.OleDbParameter" />
   .
   </para>
      </summary>
      <param name="name">The name of the parameter to map. </param>
      <param name="value">The value of the new <see cref="T:System.Data.OleDb.OleDbParameter" /> object. </param>
    </member>
    <member name="M:System.Data.OleDb.OleDbParameter.#ctor(System.String,System.Data.OleDb.OleDbType)">
      <summary>
        <para> Initializes a new instance of the <see cref="T:System.Data.OleDb.OleDbParameter" /> class with the parameter name and data
   type.
   </para>
      </summary>
      <param name="name">The name of the parameter to map. </param>
      <param name="dataType">One of the <see cref="T:System.Data.OleDb.OleDbType" /> values. </param>
    </member>
    <member name="M:System.Data.OleDb.OleDbParameter.#ctor(System.String,System.Data.OleDb.OleDbType,System.Int32)">
      <summary>
        <para> Initializes a new instance of the <see cref="T:System.Data.OleDb.OleDbParameter" /> class with the
   parameter name, data type,
   and width.
   </para>
      </summary>
      <param name="name">The name of the parameter to map. </param>
      <param name="dataType">One of the <see cref="T:System.Data.OleDb.OleDbType" /> values. </param>
      <param name="size">The width of the parameter. </param>
    </member>
    <member name="M:System.Data.OleDb.OleDbParameter.#ctor(System.String,System.Data.OleDb.OleDbType,System.Int32,System.String)">
      <summary>
        <para> Initializes a new instance of the <see cref="T:System.Data.OleDb.OleDbParameter" /> class with the parameter
   name, data type, width, and source column
   name.
   </para>
      </summary>
      <param name="name">The name of the parameter to map. </param>
      <param name="dataType">One of the <see cref="T:System.Data.OleDb.OleDbType" /> values. </param>
      <param name="size">The width of the parameter. </param>
      <param name="srcColumn">The name of the source column. </param>
    </member>
    <member name="M:System.Data.OleDb.OleDbParameter.#ctor(System.String,System.Data.OleDb.OleDbType,System.Int32,System.Data.ParameterDirection,System.Boolean,System.Byte,System.Byte,System.String,System.Data.DataRowVersion,System.Object)">
      <summary>
        <para> Initializes a new instance of the <see cref="T:System.Data.OleDb.OleDbParameter" /> class
   with the parameter name, data type, width, source column name, parameter direction, numeric precision,
   and other
   properties.
   </para>
      </summary>
      <param name="parameterName"> The name of the parameter. </param>
      <param name="dbType">One of the <see cref="T:System.Data.OleDb.OleDbType" /> values. </param>
      <param name="size">The width of the parameter. </param>
      <param name="direction">One of the <see cref="T:System.Data.ParameterDirection" /> values. </param>
      <param name="isNullable">
        <see langword="true" /> if the value of the field can be null; otherwise, <see langword="false" />. </param>
      <param name="precision">The total number of digits to the left and right of the decimal point to which <see cref="P:System.Data.OleDb.OleDbParameter.Value" /> is resolved. </param>
      <param name="scale">The total number of decimal places to which <see cref="P:System.Data.OleDb.OleDbParameter.Value" /> is resolved. </param>
      <param name="srcColumn">The name of the source column. </param>
      <param name="srcVersion">One of the <see cref="T:System.Data.DataRowVersion" /> values. </param>
      <param name="value">An <see cref="T:System.Object" /> that is the value of the <see cref="T:System.Data.OleDb.OleDbParameter" />. </param>
    </member>
    <member name="M:System.Data.OleDb.OleDbParameter.ToString">
      <summary>
        <para>Gets a string containing the <see cref="P:System.Data.OleDb.OleDbParameter.ParameterName" />.</para>
      </summary>
      <returns>
        <para>A string containing the <see cref="P:System.Data.OleDb.OleDbParameter.ParameterName" />.</para>
      </returns>
    </member>
    <member name="P:System.Data.OleDb.OleDbParameter.DbType">
      <summary>
        <para> Gets or sets the <see cref="T:System.Data.DbType" /> of the
   parameter.</para>
      </summary>
    </member>
    <member name="P:System.Data.OleDb.OleDbParameter.Direction">
      <summary>
        <para>Gets or sets a value indicating whether the parameter
      is input-only, output-only, bidirectional, or a stored procedure return value parameter.</para>
      </summary>
    </member>
    <member name="P:System.Data.OleDb.OleDbParameter.IsNullable">
      <summary>
        <para>Gets
      or sets a value indicating whether the parameter accepts null values.</para>
      </summary>
    </member>
    <member name="P:System.Data.OleDb.OleDbParameter.OleDbType">
      <summary>
        <para>Gets or sets the <see cref="T:System.Data.OleDb.OleDbType" /> of the parameter.</para>
      </summary>
    </member>
    <member name="P:System.Data.OleDb.OleDbParameter.ParameterName">
      <summary>
        <para>Gets or sets the name of the <see cref="T:System.Data.OleDb.OleDbParameter" />
.</para>
      </summary>
    </member>
    <member name="P:System.Data.OleDb.OleDbParameter.Precision">
      <summary>
        <para>Gets or sets the maximum number of digits used to
      represent the <see cref="P:System.Data.OleDb.OleDbParameter.Value" />
      property.</para>
      </summary>
    </member>
    <member name="P:System.Data.OleDb.OleDbParameter.Scale">
      <summary>
        <para>Gets or sets the number of decimal places to
      which <see cref="P:System.Data.OleDb.OleDbParameter.Value" />
      is resolved.</para>
      </summary>
    </member>
    <member name="P:System.Data.OleDb.OleDbParameter.Size">
      <summary>
        <para>Gets or sets the maximum
      size, in bytes, of the data within the column.</para>
      </summary>
    </member>
    <member name="P:System.Data.OleDb.OleDbParameter.SourceColumn">
      <summary>
        <para>Gets or sets the name of the source column mapped to
      the <see cref="T:System.Data.DataSet" /> and used for loading or returning the <see cref="P:System.Data.OleDb.OleDbParameter.Value" />
      .</para>
      </summary>
    </member>
    <member name="P:System.Data.OleDb.OleDbParameter.SourceVersion">
      <summary>
        <para>Gets or sets the <see cref="T:System.Data.DataRowVersion" /> to use when loading <see cref="P:System.Data.OleDb.OleDbParameter.Value" /> .</para>
      </summary>
    </member>
    <member name="P:System.Data.OleDb.OleDbParameter.Value">
      <summary>
        <para>Gets or sets the value of the parameter.</para>
      </summary>
    </member>
    <member name="T:System.Data.OleDb.OleDbParameterCollection">
      <summary>
        <para>Collects all parameters relevant to an <see cref="T:System.Data.OleDb.OleDbCommand" /> as well as their
   respective mappings to <see cref="T:System.Data.DataSet" />
   columns.</para>
      </summary>
    </member>
    <member name="M:System.Data.OleDb.OleDbParameterCollection.Add(System.Object)">
      <summary>
        <para> Adds an <see cref="T:System.Data.OleDb.OleDbParameter" /> object to the <see cref="T:System.Data.OleDb.OleDbCommand" /> .
   </para>
      </summary>
      <param name="value">The <see cref="T:System.Data.OleDb.OleDbParameter" /> object to add to the collection. </param>
      <returns>
        <para>The index of the new <see cref="T:System.Data.OleDb.OleDbParameter" /> object in the collection.</para>
      </returns>
    </member>
    <member name="M:System.Data.OleDb.OleDbParameterCollection.Add(System.Data.OleDb.OleDbParameter)">
      <summary>
        <para> Adds the specified <see cref="T:System.Data.OleDb.OleDbParameter" /> to the <see cref="T:System.Data.OleDb.OleDbCommand" />.
   </para>
      </summary>
      <param name="value"> The <see cref="T:System.Data.OleDb.OleDbParameter" /> to add to the collection. </param>
      <returns>
        <para>A reference to the new <see cref="T:System.Data.OleDb.OleDbParameter" /> object.</para>
      </returns>
    </member>
    <member name="M:System.Data.OleDb.OleDbParameterCollection.Add(System.String,System.Object)">
      <summary>
        <para>Adds an <see cref="T:System.Data.OleDb.OleDbParameter" /> to the <see cref="T:System.Data.OleDb.OleDbCommand" /> given the parameter name and value.</para>
      </summary>
      <param name="parameterName">The name of the parameter. </param>
      <param name="value">The <see cref="T:System.Object" /> value of the <see cref="T:System.Data.OleDb.OleDbParameter" /> to add to the collection. </param>
      <returns>
        <para>A reference to the new <see cref="T:System.Data.OleDb.OleDbParameter" /> object.</para>
      </returns>
    </member>
    <member name="M:System.Data.OleDb.OleDbParameterCollection.Add(System.String,System.Data.OleDb.OleDbType)">
      <summary>
        <para> Adds an <see cref="T:System.Data.OleDb.OleDbParameter" /> to the <see cref="T:System.Data.OleDb.OleDbCommand" /> given the parameter name and data
   type.
   </para>
      </summary>
      <param name="parameterName">The name of the parameter. </param>
      <param name="oleDbType">One of the <see cref="T:System.Data.OleDb.OleDbType" /> values. </param>
      <returns>
        <para> A reference to the new <see cref="T:System.Data.OleDb.OleDbParameter" /> object.
   </para>
      </returns>
    </member>
    <member name="M:System.Data.OleDb.OleDbParameterCollection.Add(System.String,System.Data.OleDb.OleDbType,System.Int32)">
      <summary>
        <para> Adds an <see cref="T:System.Data.OleDb.OleDbParameter" /> to the <see cref="T:System.Data.OleDb.OleDbCommand" /> given the the parameter name, data type, and column width.
   </para>
      </summary>
      <param name="parameterName">The name of the parameter. </param>
      <param name="oleDbType">One of the <see cref="T:System.Data.OleDb.OleDbType" /> values. </param>
      <param name="size">The width of the column. </param>
      <returns>
        <para> A reference to the new <see cref="T:System.Data.OleDb.OleDbParameter" /> object.
   </para>
      </returns>
    </member>
    <member name="M:System.Data.OleDb.OleDbParameterCollection.Add(System.String,System.Data.OleDb.OleDbType,System.Int32,System.String)">
      <summary>
        <para> Adds an <see cref="T:System.Data.OleDb.OleDbParameter" /> to the <see cref="T:System.Data.OleDb.OleDbCommand" /> given the parameter
   name, data type, column width, and source column name.
   </para>
      </summary>
      <param name="parameterName">The name of the parameter. </param>
      <param name="oleDbType">One of the <see cref="T:System.Data.OleDb.OleDbType" /> values. </param>
      <param name="size">The width of the column. </param>
      <param name="sourceColumn">The name of the source column. </param>
      <returns>
        <para> A reference to the new <see cref="T:System.Data.OleDb.OleDbParameter" /> object.
   </para>
      </returns>
    </member>
    <member name="M:System.Data.OleDb.OleDbParameterCollection.Contains(System.String)">
      <summary>
        <para>Gets a value indicating whether an <see cref="T:System.Data.OleDb.OleDbParameter" /> with the specified parameter name exists in the collection.</para>
      </summary>
      <param name="value">The name of the parameter.</param>
      <returns>
        <para>
          <see langword="true" /> if the collection contains the parameter; otherwise,
<see langword="false" />.</para>
      </returns>
    </member>
    <member name="M:System.Data.OleDb.OleDbParameterCollection.Contains(System.Object)">
      <summary>
        <para>Gets a value indicating whether an <see cref="T:System.Data.OleDb.OleDbParameter" /> object 
   exists in the collection.</para>
      </summary>
      <param name="value">The value of the <see cref="T:System.Data.OleDb.OleDbParameter" /> object to find.</param>
      <returns>
        <para>
          <see langword="true" /> if the
   collection contains the <see cref="T:System.Data.OleDb.OleDbParameter" /> ; otherwise,
<see langword="false" />.</para>
      </returns>
    </member>
    <member name="M:System.Data.OleDb.OleDbParameterCollection.Clear">
      <summary>
        <para> Removes all items from the collection.
      </para>
      </summary>
    </member>
    <member name="M:System.Data.OleDb.OleDbParameterCollection.CopyTo(System.Array,System.Int32)">
      <summary>
        <para> Copies <see cref="T:System.Data.OleDb.OleDbParameter" /> objects from the <see cref="T:System.Data.OleDb.OleDbParameterCollection" /> to the specified array.
   </para>
      </summary>
      <param name="array">The <see cref="T:System.Array" /> into which to copy the <see cref="T:System.Data.OleDb.OleDbParameter" /> objects. </param>
      <param name="index">The starting index of the array. </param>
    </member>
    <member name="M:System.Data.OleDb.OleDbParameterCollection.IndexOf(System.String)">
      <summary>
        <para>Gets the location of the <see cref="T:System.Data.OleDb.OleDbParameter" /> in the collection with the specified parameter name.</para>
      </summary>
      <param name="parameterName">The name of the parameter to find.</param>
      <returns>
        <para>The location of the <see cref="T:System.Data.OleDb.OleDbParameter" /> in the collection.</para>
      </returns>
    </member>
    <member name="M:System.Data.OleDb.OleDbParameterCollection.IndexOf(System.Object)">
      <summary>
        <para>Gets the location of the <see cref="T:System.Data.OleDb.OleDbParameter" /> object
   in the collection.</para>
      </summary>
      <param name="value">The <see cref="T:System.Data.OleDb.OleDbParameter" /> object to locate. </param>
      <returns>
        <para>The zero-based location of the <see cref="T:System.Data.OleDb.OleDbParameter" /> in the collection.</para>
      </returns>
    </member>
    <member name="M:System.Data.OleDb.OleDbParameterCollection.Insert(System.Int32,System.Object)">
      <summary>
        <para>Inserts an <see cref="T:System.Data.OleDb.OleDbParameter" />
in the collection at the specified index.</para>
      </summary>
      <param name="index">The zero-based index where the parameter is to be inserted within the collection.</param>
      <param name="value">The <see cref="T:System.Data.OleDb.OleDbParameter" /> to add to the collection. </param>
    </member>
    <member name="M:System.Data.OleDb.OleDbParameterCollection.RemoveAt(System.Int32)">
      <summary>
        <para> Removes the <see cref="T:System.Data.OleDb.OleDbParameter" />
at
the specified index from the collection.</para>
      </summary>
      <param name="index">The zero-based index of the parameter to remove. </param>
    </member>
    <member name="M:System.Data.OleDb.OleDbParameterCollection.RemoveAt(System.String)">
      <summary>
        <para> Removes the <see cref="T:System.Data.OleDb.OleDbParameter" />
with
the specified name from the collection.</para>
      </summary>
      <param name="parameterName">The name of the parameter to remove. </param>
    </member>
    <member name="M:System.Data.OleDb.OleDbParameterCollection.Remove(System.Object)">
      <summary>
        <para>Removes the specified <see cref="T:System.Data.OleDb.OleDbParameter" />
from the collection.</para>
      </summary>
      <param name="value">The <see cref="T:System.Data.OleDb.OleDbParameter" /> object to remove from the collection. </param>
    </member>
    <member name="P:System.Data.OleDb.OleDbParameterCollection.Count">
      <summary>
        <para>Gets the number of <see cref="T:System.Data.OleDb.OleDbParameter" />
objects in the collection.</para>
      </summary>
    </member>
    <member name="P:System.Data.OleDb.OleDbParameterCollection.Item(System.Int32)">
      <summary>
        <para>Gets or
      sets the <see cref="T:System.Data.OleDb.OleDbParameter" />
      at the specified index.</para>
      </summary>
      <param name="index">The zero-based index of the parameter to retrieve.</param>
    </member>
    <member name="P:System.Data.OleDb.OleDbParameterCollection.Item(System.String)">
      <summary>
        <para>Gets or
      sets the <see cref="T:System.Data.OleDb.OleDbParameter" />
      with the specified name.</para>
      </summary>
      <param name="parameterName">The name of the parameter to retrieve.</param>
    </member>
    <member name="T:System.Data.OleDb.OleDbPermission">
      <summary>
        <para>Provides 
      the capability for the OLE DB .NET Data Provider to ensure
      that a user has a security level adequate to access an OLE DB data source.
   
			</para>
      </summary>
    </member>
    <member name="M:System.Data.OleDb.OleDbPermission.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.OleDb.OleDbPermission" /> class.</para>
      </summary>
    </member>
    <member name="M:System.Data.OleDb.OleDbPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.OleDb.OleDbPermission" /> class.</para>
      </summary>
      <param name="state">One of the <see cref="T:System.Security.Permissions.PermissionState" /> values.</param>
    </member>
    <member name="M:System.Data.OleDb.OleDbPermission.#ctor(System.Security.Permissions.PermissionState,System.Boolean)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.OleDb.OleDbPermission" /> class.</para>
      </summary>
      <param name="state">One of the <see cref="T:System.Security.Permissions.PermissionState" /> values.</param>
      <param name=" allowBlankPassword">Indicates whether a blank password is allowed.</param>
    </member>
    <member name="M:System.Data.OleDb.OleDbPermission.Copy">
      <summary>
        <para>Returns the <see cref="T:System.Data.OleDb.OleDbPermission" /> as an <see cref="T:System.Security.IPermission" /> .</para>
      </summary>
      <returns>
        <para>A copy of the current permission object.</para>
      </returns>
    </member>
    <member name="M:System.Data.OleDb.OleDbPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>
        <para>Returns <see langword="true" /> if the <see cref="T:System.Data.OleDb.OleDbPermission" /> is a subset of the specified
   target <see cref="T:System.Security.IPermission" /> .</para>
      </summary>
      <param name="target">The target <see cref="T:System.Security.IPermission" /> from which to determine whether the current <see cref="T:System.Data.OleDb.OleDbPermission" /> is a subset.</param>
      <returns>
        <para>
          <see langword="True " />if the current permission object is a subset of the 
   specified permission object; otherwise <see langword="false" /> .</para>
      </returns>
    </member>
    <member name="M:System.Data.OleDb.OleDbPermission.Intersect(System.Security.IPermission)">
      <summary>
        <para>Returns an <see cref="T:System.Security.IPermission" /> that is the intersection of
   the current <see cref="T:System.Data.OleDb.OleDbPermission" /> and the
   specified target <see cref="T:System.Security.IPermission" /> .</para>
      </summary>
      <param name="target">The target <see cref="T:System.Security.IPermission" /> to intersect with the current <see cref="T:System.Data.OleDb.OleDbPermission" /> .</param>
      <returns>
        <para>A new permission object that represents the intersection of the current 
      permission object and the specified permission object. This new permission
      object is a null reference (<see langword="Nothing" /> in Visual Basic) if the
      intersection is empty.</para>
      </returns>
    </member>
    <member name="M:System.Data.OleDb.OleDbPermission.Union(System.Security.IPermission)">
      <summary>
        <para>Returns an <see cref="T:System.Security.IPermission" /> that is the union of the
   current <see cref="T:System.Data.OleDb.OleDbPermission" /> and the
   specified target <see cref="T:System.Security.IPermission" /> .</para>
      </summary>
      <param name="target">The target <see cref="T:System.Security.IPermission" /> to combine with the current <see cref="T:System.Data.OleDb.OleDbPermission" /> .</param>
      <returns>
        <para>A new permission object that represents the union of the current permission 
      object and the specified permission object.</para>
      </returns>
    </member>
    <member name="M:System.Data.OleDb.OleDbPermission.FromXml(System.Security.SecurityElement)">
      <summary>
        <para>Populates an <see cref="T:System.Data.OleDb.OleDbPermission" /> from the specified <see cref="T:System.Security.SecurityElement" />.</para>
      </summary>
      <param name="securityElement">The <see cref="T:System.Security.SecurityElement" /> used to populate the <see cref="T:System.Data.OleDb.OleDbPermission" />.</param>
    </member>
    <member name="M:System.Data.OleDb.OleDbPermission.ToXml">
      <summary>
        <para>Returns an XML representation of the <see cref="T:System.Data.OleDb.OleDbPermission" />
object as a <see cref="T:System.Security.SecurityElement" />.</para>
      </summary>
      <returns>
        <para>An XML encoding of the security object, including any state information.</para>
      </returns>
    </member>
    <member name="P:System.Data.OleDb.OleDbPermission.Provider">
      <summary>
        <para>Gets or sets a comma-delimited list of providers allowed by the security policy.</para>
      </summary>
    </member>
    <member name="T:System.Data.OleDb.OleDbPermissionAttribute">
      <summary>
        <para>Associates a security action with a custom security attribute.</para>
      </summary>
    </member>
    <member name="M:System.Data.OleDb.OleDbPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.OleDb.OleDbPermissionAttribute" /> class.</para>
      </summary>
      <param name="action">One of the the <see cref="T:System.Security.Permissions.SecurityAction" /> values representing an action that can be performed using declarative security.</param>
      <returns>
        <para>An <see cref="T:System.Data.OleDb.OleDbPermissionAttribute" /> object.</para>
      </returns>
    </member>
    <member name="M:System.Data.OleDb.OleDbPermissionAttribute.CreatePermission">
      <summary>
        <para> Returns an <see cref="T:System.Data.OleDb.OleDbPermission" /> object that is configured 
   according to the attribute properties.</para>
      </summary>
      <returns>
        <para>An <see cref="T:System.Data.OleDb.OleDbPermission" /> object.</para>
      </returns>
    </member>
    <member name="P:System.Data.OleDb.OleDbPermissionAttribute.Provider">
      <summary>
        <para>Gets or sets a comma-delimited string containing a list
      of supported providers.</para>
      </summary>
    </member>
    <member name="T:System.Data.OleDb.OleDbRowUpdatedEventArgs">
      <summary>
        <para> Provides data for the <see cref="E:System.Data.OleDb.OleDbDataAdapter.RowUpdated" /> event.
   </para>
      </summary>
    </member>
    <member name="M:System.Data.OleDb.OleDbRowUpdatedEventArgs.#ctor(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.OleDb.OleDbRowUpdatedEventArgs" /> class.</para>
      </summary>
      <param name="dataRow">The <see cref="T:System.Data.DataRow" /> sent through an <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</param>
      <param name=" command">The <see cref="T:System.Data.IDbCommand" /> executed when <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> is called.</param>
      <param name=" statementType">One of the <see cref="T:System.Data.StatementType" /> values that specifies the type of query executed.</param>
      <param name=" tableMapping">The <see cref="T:System.Data.Common.DataTableMapping" /> sent through an <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />. </param>
    </member>
    <member name="P:System.Data.OleDb.OleDbRowUpdatedEventArgs.Command">
      <summary>
        <para>Gets the <see cref="T:System.Data.OleDb.OleDbCommand" /> executed when <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> is called.</para>
      </summary>
    </member>
    <member name="T:System.Data.OleDb.OleDbRowUpdatedEventHandler">
      <summary>
        <para>Represents the method that will handle the <see cref="E:System.Data.OleDb.OleDbDataAdapter.RowUpdated" /> event of an <see cref="T:System.Data.OleDb.OleDbDataAdapter" />.</para>
      </summary>
      <param name="sender">The source of the event.</param>
      <param name=" e">The <see cref="T:System.Data.OleDb.OleDbRowUpdatedEventArgs" /> that contains the event data.</param>
    </member>
    <member name="T:System.Data.OleDb.OleDbRowUpdatingEventArgs">
      <summary>
        <para> Provides data for the <see cref="E:System.Data.OleDb.OleDbDataAdapter.RowUpdating" /> event.
   </para>
      </summary>
    </member>
    <member name="M:System.Data.OleDb.OleDbRowUpdatingEventArgs.#ctor(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.OleDb.OleDbRowUpdatingEventArgs" /> class.</para>
      </summary>
      <param name="dataRow">The <see cref="T:System.Data.DataRow" /> to <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> .</param>
      <param name="command">The <see cref="T:System.Data.IDbCommand" /> to execute during <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> .</param>
      <param name="statementType">One of the <see cref="T:System.Data.StatementType" /> values that specifies the type of query executed. </param>
      <param name="tableMapping">The <see cref="T:System.Data.Common.DataTableMapping" /> sent through an <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</param>
    </member>
    <member name="P:System.Data.OleDb.OleDbRowUpdatingEventArgs.Command">
      <summary>
        <para>Gets or sets the <see cref="T:System.Data.OleDb.OleDbCommand" /> to execute when performing
    the <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />
    .</para>
      </summary>
    </member>
    <member name="T:System.Data.OleDb.OleDbRowUpdatingEventHandler">
      <summary>
        <para>Represents the method that will handle the <see cref="E:System.Data.OleDb.OleDbDataAdapter.RowUpdating" /> event of an <see cref="T:System.Data.OleDb.OleDbDataAdapter" />.</para>
      </summary>
      <param name="sender">The source of the event.</param>
      <param name=" e">The <see cref="T:System.Data.OleDb.OleDbRowUpdatingEventArgs" /> that contains the event data.</param>
    </member>
    <member name="T:System.Data.OleDb.OleDbSchemaGuid">
      <summary>
        <para>Returns the type of schema table specified by the <see cref="M:System.Data.OleDb.OleDbConnection.GetOleDbSchemaTable(System.Guid,System.Object[])" />
method.</para>
      </summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbSchemaGuid.Tables_Info">
      <summary>
        <para>Returns the tables (including views) that are accessible to a given user.</para>
      </summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbSchemaGuid.Trustee">
      <summary>
        <para>Identifies the trustees defined in the data source.</para>
      </summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbSchemaGuid.Assertions">
      <summary>
        <para>Returns the assertions defined in the catalog that are
      owned by a given user. </para>
      </summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbSchemaGuid.Catalogs">
      <summary>
        <para>Returns the physical attributes associated with catalogs accessible from the data source. Returns the assertions defined in the catalog that are
      owned by a given user. </para>
      </summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbSchemaGuid.Character_Sets">
      <summary>
        <para>Returns the character sets defined in the catalog that are accessible to a given user. </para>
      </summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbSchemaGuid.Collations">
      <summary>
        <para>Returns the character collations defined in the catalog that are accessible to a given user. </para>
      </summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbSchemaGuid.Columns">
      <summary>
        <para>Returns the columns of tables (including views) defined in the catalog that are accessible to a given user. </para>
      </summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbSchemaGuid.Check_Constraints">
      <summary>
        <para>Returns the check constraints defined in the catalog that are owned by a given user. </para>
      </summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbSchemaGuid.Constraint_Column_Usage">
      <summary>
        <para>Returns the columns used by referential constraints, unique constraints, check constraints, and assertions, defined in the catalog and owned by a given user. </para>
      </summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbSchemaGuid.Constraint_Table_Usage">
      <summary>
        <para>Returns the tables that are used by referential constraints, unique constraints, check constraints, and assertions defined in the catalog and owned by a given user. </para>
      </summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbSchemaGuid.Key_Column_Usage">
      <summary>
        <para>Returns the columns defined in the catalog that are constrained as keys by a given user. </para>
      </summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbSchemaGuid.Referential_Constraints">
      <summary>
        <para>Returns 
      the referential constraints defined in the catalog that are owned by a given
      user. </para>
      </summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbSchemaGuid.Table_Constraints">
      <summary>
        <para>Returns the table constraints defined in the catalog that are owned by a given user. </para>
      </summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbSchemaGuid.Column_Domain_Usage">
      <summary>
        <para>Returns the columns defined in the catalog that are dependent on a domain defined in the catalog and owned by a given user. </para>
      </summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbSchemaGuid.Indexes">
      <summary>
        <para>Returns the indexes defined in the catalog that are owned by a given user. </para>
      </summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbSchemaGuid.Column_Privileges">
      <summary>
        <para>Returns the privileges on columns of tables defined in the catalog that are available to, or granted by, a given user.</para>
      </summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbSchemaGuid.Table_Privileges">
      <summary>
        <para>Returns the privileges on tables defined in the catalog
      that are available to, or granted by, a given user.</para>
      </summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbSchemaGuid.Usage_Privileges">
      <summary>
        <para>Returns the USAGE privileges on objects defined in the catalog that are available to, or granted by, a given user. </para>
      </summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbSchemaGuid.Procedures">
      <summary>
        <para>Returns the procedures defined in the catalog that are owned by a given user. </para>
      </summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbSchemaGuid.Schemata">
      <summary>
        <para>Returns the schema objects that are owned by a given user. </para>
      </summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbSchemaGuid.Sql_Languages">
      <summary>
        <para>Returns the conformance levels, options, and dialects supported by the SQL-implementation processing data defined in the catalog. </para>
      </summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbSchemaGuid.Statistics">
      <summary>
        <para>Returns the statistics defined in the catalog that are owned by a given user. </para>
      </summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbSchemaGuid.Tables">
      <summary>
        <para>Returns the tables (including views) defined in the catalog that are accessible to a given user. </para>
      </summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbSchemaGuid.Translations">
      <summary>
        <para>Returns the character translations defined in the catalog that are accessible to a given user.</para>
      </summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbSchemaGuid.Provider_Types">
      <summary>
        <para>Returns the base data types supported by the .NET data provider. </para>
      </summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbSchemaGuid.Views">
      <summary>
        <para>Returns the views defined in the catalog that are accessible to a given user. </para>
      </summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbSchemaGuid.View_Column_Usage">
      <summary>
        <para>Returns the columns on which viewed tables, defined in the catalog and owned by a given user, are dependent. </para>
      </summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbSchemaGuid.View_Table_Usage">
      <summary>
        <para>Returns the tables on which viewed tables, defined in the catalog and owned by a given user, are dependent. </para>
      </summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbSchemaGuid.Procedure_Parameters">
      <summary>
        <para>Returns information about the parameters and return codes of procedures. </para>
      </summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbSchemaGuid.Foreign_Keys">
      <summary>
        <para>Returns the foreign key columns defined in the catalog by a given user. </para>
      </summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbSchemaGuid.Primary_Keys">
      <summary>
        <para>Returns the primary key columns defined in the catalog by a given user. </para>
      </summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbSchemaGuid.Procedure_Columns">
      <summary>
        <para>Returns information about the columns of rowsets returned by procedures. </para>
      </summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbSchemaGuid.Table_Statistics">
      <summary>
        <para>Describes the available set of statistics on tables in the provider.</para>
      </summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbSchemaGuid.Check_Constraints_By_Table">
      <summary>
        <para>Returns the check constraints defined in the catalog that are owned by a given user. </para>
      </summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbSchemaGuid.DbInfoLiterals">
      <summary>
        <para>Returns a list of provider-specific literals used in text commands.</para>
      </summary>
    </member>
    <member name="T:System.Data.OleDb.OleDbTransaction">
      <summary>
        <para> Represents an SQL transaction to be made at a data source. This class cannot be inherited.</para>
      </summary>
    </member>
    <member name="M:System.Data.OleDb.OleDbTransaction.Begin(System.Data.IsolationLevel)">
      <summary>
        <para>Initiates a nested database
      transaction and specifies the
      isolation level to use for the new transaction.
      </para>
      </summary>
      <param name="isolevel">The isolation level to use for the transaction.</param>
      <returns>
        <para>A nested database transaction.</para>
      </returns>
    </member>
    <member name="M:System.Data.OleDb.OleDbTransaction.Begin">
      <summary>
        <para>Initiates a nested database transaction.
      </para>
      </summary>
      <returns>
        <para>A nested database transaction.</para>
      </returns>
    </member>
    <member name="M:System.Data.OleDb.OleDbTransaction.Commit">
      <summary>
        <para> Commits the database transaction.
      </para>
      </summary>
    </member>
    <member name="M:System.Data.OleDb.OleDbTransaction.Finalize">
      <summary>
        <para>Frees resources before the <see cref="T:System.Data.OleDb.OleDbTransaction" /> is reclaimed by the Garbage Collector.</para>
      </summary>
    </member>
    <member name="M:System.Data.OleDb.OleDbTransaction.Rollback">
      <summary>
        <para> Rolls back a transaction from a pending state.
      </para>
      </summary>
    </member>
    <member name="P:System.Data.OleDb.OleDbTransaction.Connection">
      <summary>
        <para>Gets the <see cref="T:System.Data.OleDb.OleDbConnection" /> object associated with the transaction, or
<see langword="null" /> if the transaction is no longer valid. </para>
      </summary>
    </member>
    <member name="P:System.Data.OleDb.OleDbTransaction.IsolationLevel">
      <summary>
        <para>Specifies the <see cref="T:System.Data.IsolationLevel" />
for this transaction.</para>
      </summary>
    </member>
    <member name="T:System.Data.OleDb.OleDbType">
      <summary>
        <para>Specifies the data type of a field, a property, or an <see cref="T:System.Data.OleDb.OleDbParameter" />

.</para>
      </summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbType.BigInt">
      <summary>
        <para>
       A 64-bit signed integer (DBTYPE_I8). This maps to <see cref="T:System.Int64" />
       .
    </para>
      </summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbType.Binary">
      <summary>
        <para>
       A stream of binary data (DBTYPE_BYTES). This maps to
       an <see cref="T:System.Array" />
       of type <see cref="T:System.Byte" />
       .
    </para>
      </summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbType.Boolean">
      <summary>
        <para>       A Boolean value (DBTYPE_BOOL). This maps to <see cref="T:System.Boolean" />
.
</para>
      </summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbType.BSTR">
      <summary>
        <para>
       A null-terminated character string of Unicode characters
       (DBTYPE_BSTR). This maps to <see cref="T:System.String" />
       .
    </para>
      </summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbType.Char">
      <summary>
        <para>
       A character string (DBTYPE_STR). This maps to <see cref="T:System.String" />
       .
    </para>
      </summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbType.Currency">
      <summary>
        <para> A currency value ranging from -2<superscript term="63" /> (or -922,337,203,685,477.5808)
   to 2<superscript term="63" /> -1 (or +922,337,203,685,477.5807) with an accuracy to
   a ten-thousandth of a currency unit (DBTYPE_CY). This maps to <see cref="T:System.Decimal" />
   .
   </para>
      </summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbType.Date">
      <summary>
        <para>
       Date data, stored as a double (DBTYPE_DATE). The
       whole portion is the number of days since December 30, 1899, while the
       fractional portion is a fraction of a day. This maps to <see cref="T:System.DateTime" />
       .
    </para>
      </summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbType.DBDate">
      <summary>
        <para>
       Date data in the format yyyymmdd (DBTYPE_DBDATE). This
       maps to <see cref="T:System.DateTime" />
       .
    </para>
      </summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbType.DBTime">
      <summary>
        <para>
       Time data in the format hhmmss (DBTYPE_DBTIME). This maps
       to <see cref="T:System.TimeSpan" />
       .
    </para>
      </summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbType.DBTimeStamp">
      <summary>
        <para>
       Data and time data in the format yyyymmddhhmmss
       (DBTYPE_DBTIMESTAMP). This maps to <see cref="T:System.DateTime" />
       .
    </para>
      </summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbType.Decimal">
      <summary>
        <para>
       A fixed precision and scale numeric value between -10<superscript term="38" /> -1 and
       10<superscript term="38" /> -1
       (DBTYPE_DECIMAL). This maps to <see cref="T:System.Decimal" />
       .
    </para>
      </summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbType.Double">
      <summary>
        <para>
       A floating point number within the range of -1.79E +308
       through 1.79E +308 (DBTYPE_R8). This maps to <see cref="T:System.Double" />
       .
    </para>
      </summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbType.Empty">
      <summary>
        <para>
       No value (DBTYPE_EMPTY). This maps to <see cref="T:System.Empty" />
       .
    </para>
      </summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbType.Error">
      <summary>
        <para>
       A 32-bit error code (DBTYPE_ERROR). This maps to <see cref="T:System.Exception" />
       .
    </para>
      </summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbType.Filetime">
      <summary>
        <para>
       A 64-bit unsigned integer representing the number of
       100-nanosecond intervals since January 1, 1601 (DBTYPE_FILETIME). This maps to
    <see cref="T:System.DateTime" />
    .
 </para>
      </summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbType.Guid">
      <summary>
        <para>
       A globally unique identifier (or GUID) (DBTYPE_GUID).
       This maps to <see cref="T:System.Guid" />
       .
    </para>
      </summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbType.IDispatch">
      <summary>
        <para>
       A pointer to an IDispatch interface
       (DBTYPE_IDISPATCH). This maps to <see cref="T:System.Object" />
       .
    </para>
        <note type="note">
       This data type is not currently supported by
       ADO.NET. Usage may cause unpredictable
       results.
    </note>
      </summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbType.Integer">
      <summary>
        <para>
       A 32-bit signed integer (DBTYPE_I4). This maps to <see cref="T:System.Int32" />
       .
    </para>
      </summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbType.IUnknown">
      <summary>
        <para>
       A pointer to an IUnknown interface (DBTYPE_UNKNOWN). This
       maps to <see cref="T:System.Object" />
       .
    </para>
        <note type="note">
       This data type is not currently
       supported by ADO.NET. Usage may cause unpredictable results.
    </note>
      </summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbType.LongVarBinary">
      <summary>
        <para>
       A long binary value (<see cref="T:System.Data.OleDb.OleDbParameter" /> only). This maps to an <see cref="T:System.Array" /> of type <see cref="T:System.Byte" /> .
    </para>
      </summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbType.LongVarChar">
      <summary>
        <para>
       A long string value (<see cref="T:System.Data.OleDb.OleDbParameter" /> only). This maps to <see cref="T:System.String" /> .
    </para>
      </summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbType.LongVarWChar">
      <summary>
        <para>
       A long null-terminated Unicode string value (<see cref="T:System.Data.OleDb.OleDbParameter" /> only). This maps to
    <see cref="T:System.String" />
    .
 </para>
      </summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbType.Numeric">
      <summary>
        <para>
       An exact numeric value with a fixed precision and scale
       (DBTYPE_NUMERIC). This maps to <see cref="T:System.Decimal" />
       .
    </para>
      </summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbType.PropVariant">
      <summary>
        <para>
       An automation PROPVARIANT (DBTYPE_PROP_VARIANT). This
       maps to <see cref="T:System.Object" />
       .
    </para>
      </summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbType.Single">
      <summary>
        <para>
       A floating point number within the range of -3.40E +38
       through 3.40E +38 (DBTYPE_R4). This maps to <see cref="T:System.Single" />
       .
    </para>
      </summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbType.SmallInt">
      <summary>
        <para>
       A 16-bit signed integer (DBTYPE_I2). This maps to
    <see cref="T:System.Int16" />
    .
 </para>
      </summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbType.TinyInt">
      <summary>
        <para>       A 8-bit signed integer (DBTYPE_I1). This maps to <see cref="T:System.SByte" />
.
</para>
      </summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbType.UnsignedBigInt">
      <summary>
        <para>
       A 64-bit unsigned integer (DBTYPE_UI8). This maps to
    <see cref="T:System.UInt64" />
    .
 </para>
      </summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbType.UnsignedInt">
      <summary>
        <para>
       A 32-bit unsigned integer (DBTYPE_UI4). This maps to
    <see cref="T:System.UInt32" />
    .
 </para>
      </summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbType.UnsignedSmallInt">
      <summary>
        <para>
       A 16-bit unsigned integer (DBTYPE_UI2). This maps to
    <see cref="T:System.UInt16" />
    .
 </para>
      </summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbType.UnsignedTinyInt">
      <summary>
        <para> A 8-bit unsigned integer (DBTYPE_UI1). This maps to
   <see cref="T:System.Byte" />
   .
   </para>
      </summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbType.VarBinary">
      <summary>
        <para>
       A variable-length stream of binary data (<see cref="T:System.Data.OleDb.OleDbParameter" /> only). This maps to
       an <see cref="T:System.Array" />
       of type <see cref="T:System.Byte" /> .
    </para>
      </summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbType.VarChar">
      <summary>
        <para>
       A variable-length stream of non-Unicode characters (<see cref="T:System.Data.OleDb.OleDbParameter" /> only). This maps to
    <see cref="T:System.String" />
    .
 </para>
      </summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbType.Variant">
      <summary>
        <para>
       A special data type that can contain numeric, string,
       binary, or date data, as well as the special values Empty and Null
       (DBTYPE_VARIANT). This type is assumed if no other is specified. This maps to
    <see cref="T:System.Object" />
    .
 </para>
      </summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbType.VarNumeric">
      <summary>
        <para>
       A variable-length numeric value (<see cref="T:System.Data.OleDb.OleDbParameter" /> only). This maps to <see cref="T:System.Decimal" /> .
    </para>
      </summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbType.VarWChar">
      <summary>
        <para>
       A variable-length, null-terminated stream of Unicode characters (<see cref="T:System.Data.OleDb.OleDbParameter" /> only). This maps to
    <see cref="T:System.String" />
    .
 </para>
      </summary>
    </member>
    <member name="F:System.Data.OleDb.OleDbType.WChar">
      <summary>
        <para>
       A null-terminated stream of Unicode characters
       (DBTYPE_WSTR). This maps to <see cref="T:System.String" />
       .
    </para>
      </summary>
    </member>
    <member name="M:System.Data.SqlClient.ConStringUtil.ParseConnectionString(System.String)">
      <summary>  This function parses the connection string and sets the appropriate hashtable values.
 </summary>
    </member>
    <member name="T:System.Data.SqlClient.SqlClientPermission">
      <summary>
        <para>Provides
      the capability for the SQL Server .NET Data Provider to ensure
      that a user has a security level adequate to access a data source.
   
			</para>
      </summary>
    </member>
    <member name="M:System.Data.SqlClient.SqlClientPermission.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.SqlClient.SqlClientPermission" /> class.</para>
      </summary>
    </member>
    <member name="M:System.Data.SqlClient.SqlClientPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.SqlClient.SqlClientPermission" /> class.</para>
      </summary>
      <param name="state">One of the <see cref="T:System.Security.Permissions.PermissionState" /> values.</param>
    </member>
    <member name="M:System.Data.SqlClient.SqlClientPermission.#ctor(System.Security.Permissions.PermissionState,System.Boolean)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.SqlClient.SqlClientPermission" /> class.</para>
      </summary>
      <param name="state">One of the <see cref="T:System.Security.Permissions.PermissionState" /> values.</param>
      <param name=" allowBlankPassword">Indicates whether a blank password is allowed.</param>
    </member>
    <member name="T:System.Data.SqlClient.SqlClientPermissionAttribute">
      <summary>
        <para>Associates a security action with a custom security attribute.</para>
      </summary>
    </member>
    <member name="M:System.Data.SqlClient.SqlClientPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.SqlClient.SqlClientPermissionAttribute" /> class.</para>
      </summary>
      <param name="action">One of the the <see cref="T:System.Security.Permissions.SecurityAction" /> values representing an action that can be performed using declarative security.</param>
      <returns>
        <para>A <see cref="T:System.Data.SqlClient.SqlClientPermissionAttribute" /> object.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlClient.SqlClientPermissionAttribute.CreatePermission">
      <summary>
        <para> Returns a <see cref="T:System.Data.SqlClient.SqlClientPermission" /> object that is configured 
   according to the attribute properties.</para>
      </summary>
      <returns>
        <para>A <see cref="T:System.Data.SqlClient.SqlClientPermission" /> object.</para>
      </returns>
    </member>
    <member name="T:System.Data.SqlClient.SqlCommand">
      <summary>
        <para> Represents a Transact-SQL statement or stored procedure to execute against a SQL Server database. This class cannot be inherited.</para>
      </summary>
    </member>
    <member name="M:System.Data.SqlClient.SqlCommand.#ctor">
      <summary>
        <para> Initializes a new instance of the <see cref="T:System.Data.SqlClient.SqlCommand" /> class.
   </para>
      </summary>
    </member>
    <member name="M:System.Data.SqlClient.SqlCommand.#ctor(System.String)">
      <summary>
        <para> Initializes a new instance of the <see cref="T:System.Data.SqlClient.SqlCommand" /> class with the text of the query.
   </para>
      </summary>
      <param name="cmdText">The text of the query. </param>
    </member>
    <member name="M:System.Data.SqlClient.SqlCommand.#ctor(System.String,System.Data.SqlClient.SqlConnection)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.SqlClient.SqlCommand" /> class with the text of the query and a <see cref="T:System.Data.SqlClient.SqlConnection" /> .</para>
      </summary>
      <param name="cmdText">The text of the query.</param>
      <param name="connection">A <see cref="T:System.Data.SqlClient.SqlConnection" /> that represents the connection to an instance of SQL Server.</param>
    </member>
    <member name="M:System.Data.SqlClient.SqlCommand.#ctor(System.String,System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlTransaction)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.SqlClient.SqlCommand" /> class with the text of the query, a <see cref="T:System.Data.SqlClient.SqlConnection" />, 
   and the <see cref="T:System.Data.SqlClient.Transaction" />.</para>
      </summary>
      <param name="cmdText">The text of the query.</param>
      <param name="connection">A <see cref="T:System.Data.SqlClient.SqlConnection" /> that represents the connection to an instance of SQL Server.</param>
      <param name="transaction"> The <see cref="T:System.Data.SqlClient.SqlTransaction" /> in which the <see cref="T:System.Data.SqlClient.SqlCommand" /> executes.</param>
    </member>
    <member name="M:System.Data.SqlClient.SqlCommand.ResetCommandTimeout">
      <summary>
        <para>Resets the <see cref="P:System.Data.SqlClient.SqlCommand.CommandTimeout" /> property to its default value.</para>
      </summary>
    </member>
    <member name="M:System.Data.SqlClient.SqlCommand.Prepare">
      <summary>
        <para> Creates a prepared version of the command on an instance of SQL
      Server.</para>
      </summary>
    </member>
    <member name="M:System.Data.SqlClient.SqlCommand.Cancel">
      <summary>
        <para>Attempts to cancel the execution of a <see cref="T:System.Data.SqlClient.SqlCommand" />.</para>
      </summary>
    </member>
    <member name="M:System.Data.SqlClient.SqlCommand.CreateParameter">
      <summary>
        <para>Creates
      a new instance of a <see cref="T:System.Data.SqlClient.SqlParameter" /> object. </para>
      </summary>
      <returns>
        <para>A <see cref="T:System.Data.SqlClient.SqlParameter" /> object.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlClient.SqlCommand.ExecuteScalar">
      <summary>
        <para>Executes the query, and returns the first column of the
      first row in the resultset returned by the query. Extra columns or rows are
      ignored.</para>
      </summary>
      <returns>
        <para>The first column of the first row in the resultset.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlClient.SqlCommand.ExecuteNonQuery">
      <summary>
        <para> Executes a Transact-SQL statement against the <see cref="P:System.Data.SqlClient.SqlCommand.Connection" />
and returns the number of rows affected.</para>
      </summary>
      <returns>
        <para>The number of rows affected.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlClient.SqlCommand.ExecuteXmlReader">
      <summary>
        <para>Sends the <see cref="P:System.Data.SqlClient.SqlCommand.CommandText" /> to the <see cref="P:System.Data.SqlClient.SqlCommand.Connection" /> and builds an <see cref="T:System.Xml.XmlReader" /> object.</para>
      </summary>
      <returns>
        <para>An <see cref="T:System.Xml.XmlReader" /> object.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlClient.SqlCommand.ExecuteReader">
      <summary>
        <para>Sends the <see cref="P:System.Data.SqlClient.SqlCommand.CommandText" /> to the <see cref="P:System.Data.SqlClient.SqlCommand.Connection" /> and builds a <see cref="T:System.Data.SqlClient.SqlDataReader" />.</para>
      </summary>
      <returns>
        <para>A <see cref="T:System.Data.SqlClient.SqlDataReader" /> object.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlClient.SqlCommand.ExecuteReader(System.Data.CommandBehavior)">
      <summary>
        <para>Sends the <see cref="P:System.Data.SqlClient.SqlCommand.CommandText" /> to the <see cref="P:System.Data.SqlClient.SqlCommand.Connection" />, and builds a <see cref="T:System.Data.SqlClient.SqlDataReader" /> using one of the <see cref="T:System.Data.CommandBehavior" />values.</para>
      </summary>
      <param name="behavior">One of the <see cref="T:System.Data.CommandBehavior" /> values.</param>
      <returns>
        <para>A <see cref="T:System.Data.SqlClient.SqlDataReader" /> object.</para>
      </returns>
    </member>
    <member name="P:System.Data.SqlClient.SqlCommand.Connection">
      <summary>
        <para>Gets or sets the <see cref="T:System.Data.SqlClient.SqlConnection" /> used by this instance of the
<see cref="T:System.Data.SqlClient.SqlCommand" /> .</para>
      </summary>
    </member>
    <member name="P:System.Data.SqlClient.SqlCommand.Transaction">
      <summary>
        <para>Gets or sets the transaction
      in which the <see cref="T:System.Data.SqlClient.SqlCommand" />
      executes.
      </para>
      </summary>
    </member>
    <member name="P:System.Data.SqlClient.SqlCommand.CommandText">
      <summary>
        <para>Gets or sets the Transact-SQL statement or stored procedure to execute at the data source.</para>
      </summary>
    </member>
    <member name="P:System.Data.SqlClient.SqlCommand.CommandType">
      <summary>
        <para>Gets or sets a value indicating how the <see cref="P:System.Data.SqlClient.SqlCommand.CommandText" /> property is to be interpreted.</para>
      </summary>
    </member>
    <member name="P:System.Data.SqlClient.SqlCommand.CommandTimeout">
      <summary>
        <para>Gets or sets the wait time before terminating
      the attempt to execute a command and generating an error.</para>
      </summary>
    </member>
    <member name="P:System.Data.SqlClient.SqlCommand.DesignTimeVisible">
      <summary>
        <para> Gets or sets a value indicating whether the command object should be visible in
      a Windows Forms Designer control.</para>
      </summary>
    </member>
    <member name="P:System.Data.SqlClient.SqlCommand.Parameters">
      <summary>
        <para> Gets the <see cref="T:System.Data.SqlClient.SqlParameterCollection" />
.</para>
      </summary>
    </member>
    <member name="P:System.Data.SqlClient.SqlCommand.UpdatedRowSource">
      <summary>
        <para> Gets or sets how command results are applied to the <see cref="T:System.Data.DataRow" /> when used
   by the <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> method of the <see cref="T:System.Data.Common.DbDataAdapter" />.</para>
      </summary>
    </member>
    <member name="T:System.Data.SqlClient.SqlCommandBuilder">
      <summary>
        <para>Provides a means of automatically generating
      single-table commands used to reconcile changes made to a <see cref="T:System.Data.DataSet" /> with the associated SQL Server database. This
      class cannot be inherited.</para>
      </summary>
    </member>
    <member name="M:System.Data.SqlClient.SqlCommandBuilder.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.SqlClient.SqlCommandBuilder" /> 
class.</para>
      </summary>
    </member>
    <member name="M:System.Data.SqlClient.SqlCommandBuilder.#ctor(System.Data.SqlClient.SqlDataAdapter)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.SqlClient.SqlCommandBuilder" /> class with the associated <see cref="T:System.Data.SqlClient.SqlDataAdapter" />
object.</para>
      </summary>
      <param name="adapter">The name of the <see cref="T:System.Data.SqlClient.SqlDataAdapter" />.</param>
    </member>
    <member name="M:System.Data.SqlClient.SqlCommandBuilder.Dispose(System.Boolean)">
      <summary>
        <para>Releases the unmanaged resources used by the <see cref="T:System.Data.SqlClient.SqlCommandBuilder" /> and optionally releases the managed 
   resources.</para>
      </summary>
      <param name="disposing">
        <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources. </param>
    </member>
    <member name="M:System.Data.SqlClient.SqlCommandBuilder.DeriveParameters(System.Data.SqlClient.SqlCommand)">
      <summary>
        <para>Populates the specified <see cref="T:System.Data.SqlClient.SqlCommand" />
object's <see cref="P:System.Data.SqlClient.SqlCommand.Parameters" /> collection with
parameter information for a stored procedure specified in the <see cref="T:System.Data.SqlClient.SqlCommand" />
.</para>
      </summary>
      <param name="command">The <see cref="T:System.Data.SqlClient.SqlCommand" /> referencing the stored procedure for which the parameter information is to be derived. The derived parameters will be populated into the <see cref="P:System.Data.SqlClient.SqlCommand.Parameters" /> of this command.</param>
    </member>
    <member name="M:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand">
      <summary>
        <para> Gets
      the automatically generated Transact-SQL statement required to perform inserts on the database when an application
      calls <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> on the <see cref="T:System.Data.SqlClient.SqlDataAdapter" />
      .</para>
      </summary>
      <returns>
        <para>The text of the Transact-SQL statement to be executed.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand">
      <summary>
        <para> Gets the automatically generated
      Transact-SQL statement required to perform updates on the database when an application calls
   <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> on
      the <see cref="T:System.Data.SqlClient.SqlDataAdapter" />
      .</para>
      </summary>
      <returns>
        <para>The text of the Transact-SQL statement to be executed.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand">
      <summary>
        <para>Gets the automatically generated Transact-SQL statement
      required to perform deletions on the database when an application calls <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> on the <see cref="T:System.Data.SqlClient.SqlDataAdapter" />
      .</para>
      </summary>
      <returns>
        <para>The text of the Transact-SQL statement to be executed.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlClient.SqlCommandBuilder.RefreshSchema">
      <summary>
        <para>Refreshes the database schema information used to generate INSERT, UPDATE, or DELETE statements.</para>
      </summary>
    </member>
    <member name="P:System.Data.SqlClient.SqlCommandBuilder.DataAdapter">
      <summary>
        <para> Gets or sets a <see cref="T:System.Data.SqlClient.SqlDataAdapter" /> object for which Transact-SQL statements are
   automatically generated.</para>
      </summary>
    </member>
    <member name="P:System.Data.SqlClient.SqlCommandBuilder.QuotePrefix">
      <summary>
        <para>Gets or sets the beginning character or characters to use when specifying SQL Server object names,
      (for example, tables or columns), that contain characters such as spaces.</para>
      </summary>
    </member>
    <member name="P:System.Data.SqlClient.SqlCommandBuilder.QuoteSuffix">
      <summary>
        <para>Gets or sets the ending character or characters to use when specifying SQL Server object
      names, (for example, tables or columns), that contain characters such as spaces.</para>
      </summary>
    </member>
    <member name="T:System.Data.SqlClient.SqlConnection">
      <summary>
        <para> Represents an open connection to a SQL Server database. This class cannot be inherited.</para>
      </summary>
    </member>
    <member name="M:System.Data.SqlClient.SqlConnection.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.SqlClient.SqlConnection" /> class.</para>
      </summary>
    </member>
    <member name="M:System.Data.SqlClient.SqlConnection.#ctor(System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.SqlClient.SqlConnection" /> class when given a string containing the connection string.</para>
      </summary>
      <param name="connectionString">The connection used to open the SQL Server database.</param>
    </member>
    <member name="M:System.Data.SqlClient.SqlConnection.Open">
      <summary>
        <para>Opens a database connection with the property
      settings specified by the <see cref="P:System.Data.SqlClient.SqlConnection.ConnectionString" /> .</para>
      </summary>
    </member>
    <member name="M:System.Data.SqlClient.SqlConnection.Close">
      <summary>
        <para>Closes the connection to the database. This is the
      preferred method of closing any open connection.</para>
      </summary>
    </member>
    <member name="M:System.Data.SqlClient.SqlConnection.BeginTransaction">
      <summary>
        <para> Begins a database transaction.</para>
      </summary>
      <returns>
        <para> An object representing the new transaction.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlClient.SqlConnection.BeginTransaction(System.Data.IsolationLevel)">
      <summary>
        <para>Begins a database transaction with the specified isolation level.</para>
      </summary>
      <param name="iso">The isolation level under which the transaction should run.</param>
      <returns>
        <para>An object representing the new transaction.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlClient.SqlConnection.BeginTransaction(System.String)">
      <summary>
        <para>Begins a database transaction with the specified transaction name.</para>
      </summary>
      <param name="transactionName">The name of the transaction.</param>
      <returns>
        <para>An object representing the new transaction.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlClient.SqlConnection.BeginTransaction(System.Data.IsolationLevel,System.String)">
      <summary>
        <para>Begins a database transaction with the specified isolation level and
      transaction name.</para>
      </summary>
      <param name="iso">The isolation level under which the transaction should run.</param>
      <param name="transactionName">The name of the transaction.</param>
      <returns>
        <para>An object representing the new transaction.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlClient.SqlConnection.ChangeDatabase(System.String)">
      <summary>
        <para>Changes the current database for an open
   <see cref="T:System.Data.SqlClient.SqlConnection" />.</para>
      </summary>
      <param name="database">The name of the database to use in place of the current database.</param>
    </member>
    <member name="M:System.Data.SqlClient.SqlConnection.CreateCommand">
      <summary>
        <para>Creates and returns a <see cref="T:System.Data.SqlClient.SqlCommand" /> object associated with
   the <see cref="T:System.Data.SqlClient.SqlConnection" />.</para>
      </summary>
      <returns>
        <para>A <see cref="T:System.Data.SqlClient.SqlCommand" /> object. </para>
      </returns>
    </member>
    <member name="M:System.Data.SqlClient.SqlConnection.Dispose(System.Boolean)">
      <summary>
        <para>Releases the unmanaged resources used by the <see cref="T:System.Data.SqlClient.SqlConnection" /> and optionally releases the managed 
   resources.</para>
      </summary>
      <param name="disposing">
        <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources. </param>
    </member>
    <member name="P:System.Data.SqlClient.SqlConnection.ConnectionString">
      <summary>
        <para> Gets or sets the string used to open a SQL Server database.</para>
      </summary>
    </member>
    <member name="P:System.Data.SqlClient.SqlConnection.ConnectionTimeout">
      <summary>
        <para> Gets the time to wait while trying to establish a connection before
      terminating the attempt and generating an error.</para>
      </summary>
    </member>
    <member name="P:System.Data.SqlClient.SqlConnection.Database">
      <summary>
        <para> Gets the name of the current database or the database to be used once
      a connection is open.</para>
      </summary>
    </member>
    <member name="P:System.Data.SqlClient.SqlConnection.DataSource">
      <summary>
        <para> Gets the name of the instance of SQL Server to which to connect.</para>
      </summary>
    </member>
    <member name="P:System.Data.SqlClient.SqlConnection.PacketSize">
      <summary>
        <para>Gets the size
      (in bytes) of network packets used to communicate with an instance of SQL
      Server .</para>
      </summary>
    </member>
    <member name="P:System.Data.SqlClient.SqlConnection.WorkstationId">
      <summary>
        <para>Gets a string
      that identifies the database client.
      </para>
      </summary>
    </member>
    <member name="E:System.Data.SqlClient.SqlConnection.InfoMessage">
      <summary>
        <para> Occurs when SQL Server returns a warning or informational message.
      </para>
      </summary>
    </member>
    <member name="P:System.Data.SqlClient.SqlConnection.ServerVersion">
      <summary>
        <para> Gets a string containing the version of the instance of SQL Server to which the client is connected.
      </para>
      </summary>
    </member>
    <member name="P:System.Data.SqlClient.SqlConnection.State">
      <summary>
        <para> Gets the current state of the
      connection.</para>
      </summary>
    </member>
    <member name="E:System.Data.SqlClient.SqlConnection.StateChange">
      <summary>
        <para>Occurs when the state of the connection changes.</para>
      </summary>
    </member>
    <member name="T:System.Data.SqlClient.SqlDataAdapter">
      <summary>
        <para>Represents a set of data commands and a database
      connection that are used to fill the <see cref="T:System.Data.DataSet" /> and update a SQL Server database.
      This class cannot be inherited.</para>
      </summary>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataAdapter.#ctor">
      <summary>
        <para>Initializes a new
      instance of the <see cref="T:System.Data.SqlClient.SqlDataAdapter" />
      class.</para>
      </summary>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataAdapter.#ctor(System.Data.SqlClient.SqlCommand)">
      <summary>
        <para>Initializes a new instance
      of the <see cref="T:System.Data.SqlClient.SqlDataAdapter" /> class with the specified
   <see cref="T:System.Data.SqlClient.SqlCommand" /> 
   as the <see cref="P:System.Data.SqlClient.SqlDataAdapter.SelectCommand" /> property.</para>
      </summary>
      <param name="selectCommand">A <see cref="T:System.Data.SqlClient.SqlCommand" /> that is a Transact-SQL SELECT statement or stored procedure. This <see cref="T:System.Data.SqlClient.SqlCommand" /> is set as the <see cref="P:System.Data.SqlClient.SqlDataAdapter.SelectCommand" /> property of the <see cref="T:System.Data.SqlClient.SqlDataAdapter" />. </param>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataAdapter.#ctor(System.String,System.String)">
      <summary>
        <para>Initializes a new instance
      of the <see cref="T:System.Data.SqlClient.SqlDataAdapter" /> class with a <see cref="P:System.Data.SqlClient.SqlDataAdapter.SelectCommand" />
      and a connection
      string.</para>
      </summary>
      <param name="selectCommandText">A <see cref="T:System.String" /> that is a Transact-SQL SELECT statement or stored procedure to be used as the <see cref="P:System.Data.SqlClient.SqlCommand.CommandText" /> of the <see cref="P:System.Data.SqlClient.SqlDataAdapter.SelectCommand" /> property of the <see cref="T:System.Data.SqlClient.SqlDataAdapter" /> .</param>
      <param name="selectConnectionString">The connection string.</param>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataAdapter.#ctor(System.String,System.Data.SqlClient.SqlConnection)">
      <summary>
        <para>Inintializes a new instance
      of the <see cref="T:System.Data.SqlClient.SqlDataAdapter" /> class with a <see cref="P:System.Data.SqlClient.SqlDataAdapter.SelectCommand" />
      and a <see cref="T:System.Data.SqlClient.SqlConnection" />
      object.</para>
      </summary>
      <param name="selectCommandText">A <see cref="T:System.String" /> that is a Transact-SQL SELECT statement or stored procedure to be used as the <see cref="P:System.Data.SqlClient.SqlCommand.CommandText" /> of the <see cref="P:System.Data.SqlClient.SqlDataAdapter.SelectCommand" /> property of the <see cref="T:System.Data.SqlClient.SqlDataAdapter" /> .</param>
      <param name="selectConnection">A <see cref="T:System.Data.SqlClient.SqlConnection" /> that represents the connection.</param>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataAdapter.OnRowUpdated(System.Data.Common.RowUpdatedEventArgs)">
      <summary>
        <para>Raises the <see cref="E:System.Data.SqlClient.SqlDataAdapter.RowUpdated" /> event.</para>
      </summary>
      <param name="value">A <see cref="T:System.Data.SqlClient.SqlRowUpdatedEventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataAdapter.OnRowUpdating(System.Data.Common.RowUpdatingEventArgs)">
      <summary>
        <para>Raises the <see cref="E:System.Data.SqlClient.SqlDataAdapter.RowUpdating" /> event.</para>
      </summary>
      <param name="value">A <see cref="T:System.Data.SqlClient.SqlRowUpdatingEventArgs" /> that contains the event data.</param>
    </member>
    <member name="P:System.Data.SqlClient.SqlDataAdapter.DeleteCommand">
      <summary>
        <para>Gets or sets a Transact-SQL statement or stored procedure to delete records from the data set.</para>
      </summary>
    </member>
    <member name="P:System.Data.SqlClient.SqlDataAdapter.InsertCommand">
      <summary>
        <para>Gets or sets a Transact-SQL statement or stored procedure to insert new records into the data source.</para>
      </summary>
    </member>
    <member name="P:System.Data.SqlClient.SqlDataAdapter.SelectCommand">
      <summary>
        <para>Gets or sets a Transact-SQL statement
      or stored procedure used to select records in the data source.</para>
      </summary>
    </member>
    <member name="P:System.Data.SqlClient.SqlDataAdapter.UpdateCommand">
      <summary>
        <para>Gets or sets a Transact-SQL
      statement or stored procedure used to update records in the data source.</para>
      </summary>
    </member>
    <member name="E:System.Data.SqlClient.SqlDataAdapter.RowUpdated">
      <summary>
        <para>Occurs during <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> after a command is executed
    against the data source. The attempt to update is made, so the event fires.</para>
      </summary>
    </member>
    <member name="E:System.Data.SqlClient.SqlDataAdapter.RowUpdating">
      <summary>
        <para>Occurs during <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> before a command is
    executed against the data source. The attempt to update is made, so the event fires.</para>
      </summary>
    </member>
    <member name="T:System.Data.SqlClient.SqlDataReader">
      <summary>
        <para> Provides a means of reading
      a forward-only stream of rows from a SQL Server database. This class cannot be
      inherited.</para>
      </summary>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetValues(System.Object[])">
      <summary>
        <para>Gets all attribute columns in the collection for the current
      row.</para>
      </summary>
      <param name="values">An array of <see cref="T:System.Object" /> into which to copy the attribute columns.</param>
      <returns>
        <para>The number of instances of <see cref="T:System.Object" /> in the array.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetName(System.Int32)">
      <summary>
        <para>Gets the name of the specified column.</para>
      </summary>
      <param name="i">The zero-based column ordinal.</param>
      <returns>
        <para>The name of the specified column.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetValue(System.Int32)">
      <summary>
        <para>Gets the value of the specified column in its native format.</para>
      </summary>
      <param name="i">The zero-based column ordinal. </param>
      <returns>
        <para>This method returns <see cref="T:System.DBNull" /> for null database columns.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetDataTypeName(System.Int32)">
      <summary>
        <para>Gets the name of the source data type.</para>
      </summary>
      <param name="i">The zero-based column ordinal. </param>
      <returns>
        <para>The name of the back-end data type.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetFieldType(System.Int32)">
      <summary>
        <para>Gets the <see cref="T:System.Type" />
that is the data type of the object.</para>
      </summary>
      <param name="i">The zero-based column ordinal. </param>
      <returns>
        <para>The <see cref="T:System.Type" />
that is the data type of the object.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetOrdinal(System.String)">
      <summary>
        <para>Gets the column ordinal, given the name of the column.</para>
      </summary>
      <param name="name">The name of the column.</param>
      <returns>
        <para>The zero-based column ordinal.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetBoolean(System.Int32)">
      <summary>
        <para>Gets the value of the specified column as a Boolean.</para>
      </summary>
      <param name="i">The zero-based column ordinal. </param>
      <returns>
        <para>The value of the column.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetByte(System.Int32)">
      <summary>
        <para>Gets the value of the specified column as a byte.</para>
      </summary>
      <param name="i">The zero-based column ordinal. </param>
      <returns>
        <para>The value of the specified column as a byte.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)">
      <summary>
        <para> Reads a stream of bytes from the specified column
      offset into
      the buffer an array starting at the given buffer offset.</para>
      </summary>
      <param name="i">The zero-based column ordinal. </param>
      <param name=" buffer">The buffer into which to read the stream of bytes. </param>
      <param name=" length">The maximum length to copy into the buffer.</param>
      <param name=" bufferIndex">The index for <paramref name="buffer" /> to begin the read operation. </param>
      <param name=" dataIndex">The index within the field from which to begin the read operation. </param>
      <returns>
        <para>The actual number of bytes read.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetChar(System.Int32)">
      <summary>
        <para>Gets the value of the specified column as a single character.</para>
      </summary>
      <param name="i">The zero-based column ordinal. </param>
      <returns>
        <para>The value of the specified column.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)">
      <summary>
        <para>Reads a stream of characters from the specified column offset
      into the
      buffer as an array starting at the given buffer offset.</para>
      </summary>
      <param name="i">The zero-based column ordinal. </param>
      <param name=" buffer">The buffer into which to copy data. </param>
      <param name=" length">The maximum number of characters to read. </param>
      <param name=" bufferIndex">The index for <paramref name="buffer" /> to begin the read operation. </param>
      <param name=" dataIndex">The index within the row from which to begin the read operation. </param>
      <returns>
        <para>The actual number of characters read.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetGuid(System.Int32)">
      <summary>
        <para> Gets the value of
      the specified column as a globally-unique identifier (GUID).
      </para>
      </summary>
      <param name="i">The zero-based column ordinal. </param>
      <returns>
        <para> The value of the specified column.
      </para>
      </returns>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetInt16(System.Int32)">
      <summary>
        <para>Gets the
      value of the specified column as a 16-bit signed integer.</para>
      </summary>
      <param name="i">The zero-based column ordinal. </param>
      <returns>
        <para>The value of the specified column.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetInt32(System.Int32)">
      <summary>
        <para>Gets the
      value of the specified column as a 32-bit signed integer.</para>
      </summary>
      <param name="i">The zero-based column ordinal. </param>
      <returns>
        <para>The value of the specified column.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetInt64(System.Int32)">
      <summary>
        <para>Gets the
      value of the specified column as a 64-bit signed integer.</para>
      </summary>
      <param name="i">The zero-based column ordinal. </param>
      <returns>
        <para>The value of the specified column.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetFloat(System.Int32)">
      <summary>
        <para>Gets the value of the specified column as a single-precision floating point number.</para>
      </summary>
      <param name="i">The zero-based column ordinal. </param>
      <returns>
        <para>The value of the specified column.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetDouble(System.Int32)">
      <summary>
        <para>Gets the value of the specified column as a double-precision floating point number.</para>
      </summary>
      <param name="i">The zero-based column ordinal. </param>
      <returns>
        <para>The value of the specified column.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetString(System.Int32)">
      <summary>
        <para>Gets the value of the specified column as a string.</para>
      </summary>
      <param name="i">The zero-based column ordinal. </param>
      <returns>
        <para>The value of the specified column.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetDecimal(System.Int32)">
      <summary>
        <para>Gets the value of the specified column as
      a <see cref="T:System.Decimal" />
      object.</para>
      </summary>
      <param name="i">The zero-based column ordinal. </param>
      <returns>
        <para>The value of the specified column.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetDateTime(System.Int32)">
      <summary>
        <para>Gets the value of the specified column as
      a <see cref="T:System.DateTime" />
      object.</para>
      </summary>
      <param name="i">The zero-based column ordinal. </param>
      <returns>
        <para>The value of the specified column.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetData(System.Int32)">
      <summary>
        <para> Not currently supported.
      </para>
      </summary>
      <param name="i">The zero-based column ordinal. </param>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.IsDBNull(System.Int32)">
      <summary>
        <para> Gets a value indicating whether the column contains non-existant or missing values.
      </para>
      </summary>
      <param name="i">The zero-based column ordinal. </param>
      <returns>
        <para>
          <see langword="true" /> if the specified
   column value is equivalent to <see cref="T:System.DBNull" /> ;
   otherwise, <see langword="false" />.
   </para>
      </returns>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetSqlBoolean(System.Int32)">
      <summary>
        <para>Gets the value of the specified column as a <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</para>
      </summary>
      <param name="i">The zero-based column ordinal. </param>
      <returns>
        <para>The value of the column.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetSqlBinary(System.Int32)">
      <summary>
        <para>Gets the value of the specified column as a <see cref="T:System.Data.SqlTypes.SqlBinary" /> .</para>
      </summary>
      <param name="i">The zero-based column ordinal. </param>
      <returns>
        <para>A <see cref="T:System.Data.SqlTypes.SqlBinary" />.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetSqlByte(System.Int32)">
      <summary>
        <para>Gets the value of the specified column as a <see cref="T:System.Data.SqlTypes.SqlByte" /> .</para>
      </summary>
      <param name="i">The zero-based column ordinal. </param>
      <returns>
        <para>A <see cref="T:System.Data.SqlTypes.SqlByte" />.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetSqlInt16(System.Int32)">
      <summary>
        <para>Gets the value of the specified column as a <see cref="T:System.Data.SqlTypes.SqlInt16" /> .</para>
      </summary>
      <param name="i">The zero-based column ordinal. </param>
      <returns>
        <para>A <see cref="T:System.Data.SqlTypes.SqlInt16" />.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetSqlInt32(System.Int32)">
      <summary>
        <para>Gets the value of the specified column as a <see cref="T:System.Data.SqlTypes.SqlInt32" /> .</para>
      </summary>
      <param name="i">The zero-based column ordinal. </param>
      <returns>
        <para>A <see cref="T:System.Data.SqlTypes.SqlInt32" />.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetSqlInt64(System.Int32)">
      <summary>
        <para>Gets the value of the specified column as a <see cref="T:System.Data.SqlTypes.SqlInt64" /> .</para>
      </summary>
      <param name="i">The zero-based column ordinal. </param>
      <returns>
        <para>A <see cref="T:System.Data.SqlTypes.SqlInt64" />.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetSqlSingle(System.Int32)">
      <summary>
        <para>Gets the value of the specified column as a <see cref="T:System.Data.SqlTypes.SqlSingle" /> .</para>
      </summary>
      <param name="i">The zero-based column ordinal. </param>
      <returns>
        <para>A <see cref="T:System.Data.SqlTypes.SqlSingle" />.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetSqlDouble(System.Int32)">
      <summary>
        <para>Gets the value of the specified column as a <see cref="T:System.Data.SqlTypes.SqlDouble" /> .</para>
      </summary>
      <param name="i">The zero-based column ordinal. </param>
      <returns>
        <para>A <see cref="T:System.Data.SqlTypes.SqlDouble" />.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetSqlString(System.Int32)">
      <summary>
        <para>Gets the value of the specified column as a <see cref="T:System.Data.SqlTypes.SqlString" /> .</para>
      </summary>
      <param name="i">The zero-based column ordinal. </param>
      <returns>
        <para>A <see cref="T:System.Data.SqlTypes.SqlString" />.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetSqlMoney(System.Int32)">
      <summary>
        <para>Gets the value of the specified column as a <see cref="T:System.Data.SqlTypes.SqlMoney" /> .</para>
      </summary>
      <param name="i">The zero-based column ordinal. </param>
      <returns>
        <para>A <see cref="T:System.Data.SqlTypes.SqlMoney" />.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetSqlDecimal(System.Int32)">
      <summary>
        <para>Gets the value of the specified column as a <see cref="T:System.Data.SqlTypes.SqlDecimal" /> .</para>
      </summary>
      <param name="i">The zero-based column ordinal. </param>
      <returns>
        <para>A <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetSqlDateTime(System.Int32)">
      <summary>
        <para>Gets the value of the specified column as a <see cref="T:System.Data.SqlTypes.SqlDateTime" /> .</para>
      </summary>
      <param name="i">The zero-based column ordinal. </param>
      <returns>
        <para>A <see cref="T:System.Data.SqlTypes.SqlDateTime" />.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetSqlGuid(System.Int32)">
      <summary>
        <para>Gets the value of the specified column as a <see cref="T:System.Data.SqlTypes.SqlGuid" /> .</para>
      </summary>
      <param name="i">The zero-based column ordinal. </param>
      <returns>
        <para>A <see cref="T:System.Data.SqlTypes.SqlGuid" />.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetSqlValue(System.Int32)">
      <summary>
        <para>Gets an <see cref="T:System.Object" /> that is a representation of the underlying <see cref="T:System.Data.SqlDbType" /><see langword="Variant" /> .</para>
      </summary>
      <param name="i">The zero-based column ordinal. </param>
      <returns>
        <para>An <see cref="T:System.Object" /> that is a
   representation of the underlying <see cref="T:System.Data.SqlDbType" /><see langword="Variant" />.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetSqlValues(System.Object[])">
      <summary>
        <para> Gets all the attribute columns in the current
      row.</para>
      </summary>
      <param name="values">An array of <see cref="T:System.Object" /> to copy the attribute columns into.</param>
      <returns>
        <para>The number of instances of <see cref="T:System.Object" /> in the array.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.Read">
      <summary>
        <para>Advances the <see cref="T:System.Data.SqlClient.SqlDataReader" />
to the next record.</para>
      </summary>
      <returns>
        <para>
          <see langword="true" /> if there are more rows; otherwise,
<see langword="false" />.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.NextResult">
      <summary>
        <para>Advances the data reader to the next result, when reading the results of
      batch Transact-SQL statements.</para>
      </summary>
      <returns>
        <para>
          <see langword="true" /> if there are more result sets; otherwise,
<see langword="false" />.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.Close">
      <summary>
        <para>Closes the <see cref="T:System.Data.SqlClient.SqlDataReader" /> object.</para>
      </summary>
    </member>
    <member name="M:System.Data.SqlClient.SqlDataReader.GetSchemaTable">
      <summary>
        <para>Returns a <see cref="T:System.Data.DataTable" /> that describes the column metadata
   of the <see cref="T:System.Data.SqlClient.SqlDataReader" /> . </para>
      </summary>
      <returns>
        <para>A <see cref="T:System.Data.DataTable" /> that describes the column metadata.</para>
      </returns>
    </member>
    <member name="P:System.Data.SqlClient.SqlDataReader.Depth">
      <summary>
        <para> Gets a value indicating the depth of nesting for the current row.</para>
      </summary>
    </member>
    <member name="P:System.Data.SqlClient.SqlDataReader.FieldCount">
      <summary>
        <para> Gets the number of columns in the current row.</para>
      </summary>
    </member>
    <member name="P:System.Data.SqlClient.SqlDataReader.Item(System.Int32)">
      <summary>
        <para> 
      Gets the value of the specified column in its native format given
      the column ordinal.</para>
      </summary>
      <param name="i">The zero-based column ordinal. </param>
    </member>
    <member name="P:System.Data.SqlClient.SqlDataReader.Item(System.String)">
      <summary>
        <para> Gets the value of the specified column in its native format given
      the column name.</para>
      </summary>
      <param name="name">The column name.</param>
    </member>
    <member name="P:System.Data.SqlClient.SqlDataReader.IsClosed">
      <summary>
        <para> Gets a value indicating whether the data reader
      is closed.</para>
      </summary>
    </member>
    <member name="P:System.Data.SqlClient.SqlDataReader.RecordsAffected">
      <summary>
        <para> Gets the number of rows changed, inserted, or deleted by execution of the Transact-SQL statement.</para>
      </summary>
    </member>
    <member name="T:System.Data.SqlClient.SqlError">
      <summary>
        <para> Collects information relevant to a warning or error returned by SQL Server. This class cannot be inherited.
      </para>
      </summary>
    </member>
    <member name="M:System.Data.SqlClient.SqlError.ToString">
      <summary>
        <para>Gets the complete text of the error message.</para>
      </summary>
      <returns>
        <para>The complete text of the error.</para>
      </returns>
    </member>
    <member name="P:System.Data.SqlClient.SqlError.Source">
      <summary>
        <para>Gets the name of the provider that generated the error.</para>
      </summary>
    </member>
    <member name="P:System.Data.SqlClient.SqlError.Number">
      <summary>
        <para> Gets a number
      that identifies the type of error.</para>
      </summary>
    </member>
    <member name="P:System.Data.SqlClient.SqlError.State">
      <summary>
        <para>Gets a numeric error code from SQL Server that represents 
      an error, warning or "no data found" message. For more information on how to
      decode these values, see SQL Server Books Online.</para>
      </summary>
    </member>
    <member name="P:System.Data.SqlClient.SqlError.Class">
      <summary>
        <para> Gets the
      severity level of the error returned from SQL Server.</para>
      </summary>
    </member>
    <member name="P:System.Data.SqlClient.SqlError.Server">
      <summary>
        <para>Gets the name of the instance
      of SQL Server that generated the error.</para>
      </summary>
    </member>
    <member name="P:System.Data.SqlClient.SqlError.Message">
      <summary>
        <para>Gets the text describing the error.</para>
      </summary>
    </member>
    <member name="P:System.Data.SqlClient.SqlError.Procedure">
      <summary>
        <para>Gets the name of
      the
      stored
      procedure or remote procedure call (RPC) that generated the error.</para>
      </summary>
    </member>
    <member name="P:System.Data.SqlClient.SqlError.LineNumber">
      <summary>
        <para> Bets the line number
      within
      the Transact-SQL command batch or stored procedure that contains the error.</para>
      </summary>
    </member>
    <member name="T:System.Data.SqlClient.SqlErrorCollection">
      <summary>
        <para> Collects all errors generated by the SQL .NET Data 
      Provider. This class cannot be inherited.
      </para>
      </summary>
    </member>
    <member name="M:System.Data.SqlClient.SqlErrorCollection.CopyTo(System.Array,System.Int32)">
      <summary>
        <para> Copies the elements of the <see cref="T:System.Data.SqlClient.SqlErrorCollection" /> collection into an <see cref="T:System.Array" />, starting at the given index within the <see cref="T:System.Array" />
.</para>
      </summary>
      <param name="array">The <see cref="T:System.Array" /> to copy elements into. </param>
      <param name=" index">The index from which to start copying into the <paramref name="array" /> parameter. </param>
    </member>
    <member name="P:System.Data.SqlClient.SqlErrorCollection.Count">
      <summary>
        <para>Gets the number of errors in the collection.</para>
      </summary>
    </member>
    <member name="P:System.Data.SqlClient.SqlErrorCollection.System#Collections#ICollection#SyncRoot">
      <summary>
        <para>Gets an <see cref="T:System.Object" /> that can be used to synchronize access to
   the <see cref="T:System.Data.SqlClient.SqlErrorCollection" /> .</para>
      </summary>
    </member>
    <member name="P:System.Data.SqlClient.SqlErrorCollection.System#Collections#ICollection#IsSynchronized">
      <summary>
        <para> Gets a value indicating whether the collection is
      sychonized with the data source.</para>
      </summary>
    </member>
    <member name="P:System.Data.SqlClient.SqlErrorCollection.Item(System.Int32)">
      <summary>
        <para>Gets the error at the specified index.</para>
      </summary>
      <param name="index">The zero-based index of the error to retrieve.</param>
    </member>
    <member name="T:System.Data.SqlClient.SqlException">
      <summary>
        <para> The exception that is thrown when SQL Server returns a warning or error. This class cannot be inherited.</para>
      </summary>
    </member>
    <member name="P:System.Data.SqlClient.SqlException.Errors">
      <summary>
        <para> Gets a collection of one or more <see cref="T:System.Data.SqlClient.SqlError" />
objects that give detailed information about exceptions generated by the SQL
Server .NET Data Provider.</para>
      </summary>
    </member>
    <member name="P:System.Data.SqlClient.SqlException.Class">
      <summary>
        <para>Gets the severity level of the error returned from the SQL Server .NET Data
      Provider.</para>
      </summary>
    </member>
    <member name="P:System.Data.SqlClient.SqlException.LineNumber">
      <summary>
        <para>Gets the line number within
      the Transact-SQL command batch or stored procedure that generated the error.</para>
      </summary>
    </member>
    <member name="P:System.Data.SqlClient.SqlException.Message">
      <summary>
        <para>Gets the text describing the error.</para>
      </summary>
    </member>
    <member name="P:System.Data.SqlClient.SqlException.Number">
      <summary>
        <para>Gets a number that identifies the type of error.</para>
      </summary>
    </member>
    <member name="P:System.Data.SqlClient.SqlException.Procedure">
      <summary>
        <para>Gets the name of the stored procedure or remote procedure call (RPC) that generated the error.</para>
      </summary>
    </member>
    <member name="P:System.Data.SqlClient.SqlException.Server">
      <summary>
        <para>Gets the name of the computer running an instance of SQL Server that generated the error.</para>
      </summary>
    </member>
    <member name="P:System.Data.SqlClient.SqlException.State">
      <summary>
        <para>Gets a numeric error code from SQL Server that 
      represents an error, warning or "no data found" message. For more information on
      how to decode these values, see SQL Server Books
      Online.</para>
      </summary>
    </member>
    <member name="P:System.Data.SqlClient.SqlException.Source">
      <summary>
        <para>Gets the name of the provider that generated the error.</para>
      </summary>
    </member>
    <member name="T:System.Data.SqlClient.SqlInfoMessageEventArgs">
      <summary>
        <para> Provides data for the <see cref="E:System.Data.SqlClient.SqlConnection.InfoMessage" /> event. This class cannot be
   inherited.</para>
      </summary>
    </member>
    <member name="M:System.Data.SqlClient.SqlInfoMessageEventArgs.ToString">
      <summary>
        <para>Retrieves a string representation of the <see cref="E:System.Data.SqlClient.SqlConnection.InfoMessage" /> event.</para>
      </summary>
      <returns>
        <para>A string representing the <see cref="E:System.Data.SqlClient.SqlConnection.InfoMessage" /> event.</para>
      </returns>
    </member>
    <member name="P:System.Data.SqlClient.SqlInfoMessageEventArgs.Errors">
      <summary>
        <para>Gets the collection of warnings sent from the server.</para>
      </summary>
    </member>
    <member name="P:System.Data.SqlClient.SqlInfoMessageEventArgs.Message">
      <summary>
        <para>Gets the full text of the error sent from the data source.</para>
      </summary>
    </member>
    <member name="P:System.Data.SqlClient.SqlInfoMessageEventArgs.Source">
      <summary>
        <para>Gets the name of the object that generated the error.</para>
      </summary>
    </member>
    <member name="T:System.Data.SqlClient.SqlInfoMessageEventHandler">
      <summary>
        <para>Represents the method that will handle the <see cref="E:System.Data.SqlClient.SqlConnection.InfoMessage" /> event of a <see cref="T:System.Data.SqlClient.SqlConnection" />.</para>
      </summary>
      <param name="sender">The source of the event.</param>
      <param name=" e">A <see cref="T:System.Data.SqlClient.SqlInfoMessageEventArgs" /> object that contains the event data.</param>
    </member>
    <member name="T:System.Data.SqlClient.SqlParameter">
      <summary>
        <para>Represents a parameter to a <see cref="T:System.Data.SqlClient.SqlCommand" />, and optionally, its mapping
   to <see cref="T:System.Data.DataSet" /> columns. This class cannot be inherited.</para>
      </summary>
    </member>
    <member name="M:System.Data.SqlClient.SqlParameter.#ctor">
      <summary>
        <para> Initializes a new instance of the <see cref="T:System.Data.SqlClient.SqlParameter" /> class.
   </para>
      </summary>
    </member>
    <member name="M:System.Data.SqlClient.SqlParameter.#ctor(System.String,System.Object)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.SqlClient.SqlParameter" /> class with the parameter name and a value of the
   new <see cref="T:System.Data.SqlClient.SqlParameter" />
   . </para>
      </summary>
      <param name="parameterName">The name of the parameter to map. </param>
      <param name="value">An <see cref="T:System.Object" /> that is the value of the <see cref="T:System.Data.SqlClient.SqlParameter" />. </param>
    </member>
    <member name="M:System.Data.SqlClient.SqlParameter.#ctor(System.String,System.Data.SqlDbType)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.SqlClient.SqlParameter" /> class with the parameter name and
   the data
   type.</para>
      </summary>
      <param name="parameterName">The name of the parameter to map.</param>
      <param name="dbType">One of the <see cref="T:System.Data.SqlDbType" /> values.</param>
    </member>
    <member name="M:System.Data.SqlClient.SqlParameter.#ctor(System.String,System.Data.SqlDbType,System.Int32)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.SqlClient.SqlParameter" /> class with the parameter name, the <see cref="T:System.Data.SqlDbType" /> , and
   the size.</para>
      </summary>
      <param name="parameterName">The name of the parameter to map.</param>
      <param name=" dbType">One of the <see cref="T:System.Data.SqlDbType" /> values.</param>
      <param name="size">The width of the parameter.</param>
    </member>
    <member name="M:System.Data.SqlClient.SqlParameter.#ctor(System.String,System.Data.SqlDbType,System.Int32,System.String)">
      <summary>
        <para> Initializes a new instance of the <see cref="T:System.Data.SqlClient.SqlParameter" /> class with the parameter name, the <see cref="T:System.Data.SqlDbType" />
, the size, the source column name, and a <see cref="T:System.Data.DataRowVersion" />
to
use.</para>
      </summary>
      <param name="parameterName">The name of the parameter to map. </param>
      <param name=" dbType">One of the <see cref="T:System.Data.SqlDbType" /> values. </param>
      <param name="size">The width of the parameter. </param>
      <param name="sourceColumn">The name of the source column. </param>
    </member>
    <member name="M:System.Data.SqlClient.SqlParameter.#ctor(System.String,System.Data.SqlDbType,System.Int32,System.Data.ParameterDirection,System.Boolean,System.Byte,System.Byte,System.String,System.Data.DataRowVersion,System.Object)">
      <summary>
        <para> Initializes a new instance of the <see cref="T:System.Data.SqlClient.SqlParameter" /> class with the parameter name, the type of the
   parameter, the size of the parameter, a <see cref="T:System.Data.ParameterDirection" />, the precision of the
   parameter, the scale of the parameter, the source column,
   a <see cref="T:System.Data.DataRowVersion" /> to use, and the value of the
   parameter.
   </para>
      </summary>
      <param name="parameterName">The name of the parameter to map. </param>
      <param name="dbType">One of the <see cref="T:System.Data.SqlDbType" /> values. </param>
      <param name="size">The width of the parameter. </param>
      <param name="direction">One of the <see cref="T:System.Data.ParameterDirection" /> values. </param>
      <param name="isNullable">
        <see langword="true" /> if the value of the field can be null, otherwise <see langword="false" />. </param>
      <param name="precision">The total number of digits to the left and right of the decimal point to which <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> is resolved. </param>
      <param name="scale">The total number of decimal places to which <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> is resolved. </param>
      <param name="sourceColumn">The name of the source column. </param>
      <param name="sourceVersion">One of the <see cref="T:System.Data.DataRowVersion" /> values. </param>
      <param name="value">An <see cref="T:System.Object" /> that is the value of the <see cref="T:System.Data.SqlClient.SqlParameter" />. </param>
    </member>
    <member name="M:System.Data.SqlClient.SqlParameter.ToString">
      <summary>
        <para>Gets a string containing the <see cref="P:System.Data.SqlClient.SqlParameter.ParameterName" />.</para>
      </summary>
      <returns>
        <para>A string containing the <see cref="P:System.Data.SqlClient.SqlParameter.ParameterName" /> .</para>
      </returns>
    </member>
    <member name="P:System.Data.SqlClient.SqlParameter.DbType">
      <summary>
        <para> Gets or sets the <see cref="T:System.Data.DbType" /> of the
   parameter.</para>
      </summary>
    </member>
    <member name="P:System.Data.SqlClient.SqlParameter.SqlDbType">
      <summary>
        <para> Gets or sets the <see cref="T:System.Data.SqlDbType" />
of the parameter.</para>
      </summary>
    </member>
    <member name="P:System.Data.SqlClient.SqlParameter.Direction">
      <summary>
        <para> Gets or sets a value indicating whether
      the parameter
      is input-only, output-only, bidirectional, or a stored procedure return value parameter.</para>
      </summary>
    </member>
    <member name="P:System.Data.SqlClient.SqlParameter.IsNullable">
      <summary>
        <para>Gets
      or sets a value indicating whether the parameter accepts null values.</para>
      </summary>
    </member>
    <member name="P:System.Data.SqlClient.SqlParameter.Offset">
      <summary>
        <para>Gets or sets the offset to the <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> property.</para>
      </summary>
    </member>
    <member name="P:System.Data.SqlClient.SqlParameter.ParameterName">
      <summary>
        <para>Gets or sets the name of the <see cref="T:System.Data.SqlClient.SqlParameter" />
.</para>
      </summary>
    </member>
    <member name="P:System.Data.SqlClient.SqlParameter.Precision">
      <summary>
        <para>Gets or sets the maximum number of digits used to
      represent the <see cref="P:System.Data.SqlClient.SqlParameter.Value" />
      property.</para>
      </summary>
    </member>
    <member name="P:System.Data.SqlClient.SqlParameter.Scale">
      <summary>
        <para>Gets or sets the number of decimal places to
      which <see cref="P:System.Data.SqlClient.SqlParameter.Value" />
      is resolved.</para>
      </summary>
    </member>
    <member name="P:System.Data.SqlClient.SqlParameter.Size">
      <summary>
        <para>Gets or sets the maximum
      size, in bytes, of the data within the column.</para>
      </summary>
    </member>
    <member name="P:System.Data.SqlClient.SqlParameter.SourceColumn">
      <summary>
        <para>Gets or sets the name of the source column that is mapped to
      the <see cref="T:System.Data.DataSet" /> and used for loading or returning the <see cref="P:System.Data.SqlClient.SqlParameter.Value" />
      .</para>
      </summary>
    </member>
    <member name="P:System.Data.SqlClient.SqlParameter.SourceVersion">
      <summary>
        <para>Gets or sets the <see cref="T:System.Data.DataRowVersion" /> to use when loading <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> .</para>
      </summary>
    </member>
    <member name="P:System.Data.SqlClient.SqlParameter.Value">
      <summary>
        <para>Gets or sets the value of the parameter.</para>
      </summary>
    </member>
    <member name="T:System.Data.SqlClient.SqlParameterCollection">
      <summary>
        <para>Collects all parameters relevant to a <see cref="T:System.Data.SqlClient.SqlCommand" /> as well as their
   respective mappings to <see cref="T:System.Data.DataSet" /> columns. This class cannot be
   inherited.</para>
      </summary>
    </member>
    <member name="M:System.Data.SqlClient.SqlParameterCollection.Add(System.Object)">
      <summary>
        <para>Adds the specified <see cref="T:System.Data.SqlClient.SqlParameter" /> object to the <see cref="T:System.Data.SqlClient.SqlParameterCollection" /> .</para>
      </summary>
      <param name="value">The <see cref="T:System.Data.SqlClient.SqlParameter" /> to add to the collection. </param>
      <returns>
        <para>The index in the collection of the new <see cref="T:System.Data.SqlClient.SqlParameter" /> object.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlClient.SqlParameterCollection.Add(System.Data.SqlClient.SqlParameter)">
      <summary>
        <para>Adds the specified <see cref="T:System.Data.SqlClient.SqlParameter" /> object to the <see cref="T:System.Data.SqlClient.SqlCommand" /> .</para>
      </summary>
      <param name="value"> The <see cref="T:System.Data.SqlClient.SqlParameter" /> to be added.</param>
      <returns>
        <para>A reference to the new <see cref="T:System.Data.SqlClient.SqlParameter" /> object.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlClient.SqlParameterCollection.Add(System.String,System.Object)">
      <summary>
        <para>Adds a <see cref="T:System.Data.SqlClient.SqlParameter" /> to the <see cref="T:System.Data.SqlClient.SqlParameterCollection" /> with the 
   specified parameter name and
   value.</para>
      </summary>
      <param name="parameterName">The name of the parameter.</param>
      <param name="value">The <see cref="P:System.Data.SqlClient.SqlParameter.Value" /> of the <see cref="T:System.Data.SqlClient.SqlParameter" /> to add to the collection. </param>
      <returns>
        <para>A reference to the new <see cref="T:System.Data.SqlClient.SqlParameter" /> object.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlClient.SqlParameterCollection.Add(System.String,System.Data.SqlDbType)">
      <summary>
        <para>Adds a <see cref="T:System.Data.SqlClient.SqlParameter" /> to the <see cref="T:System.Data.SqlClient.SqlParameterCollection" /> with the
   parameter name and the data type.</para>
      </summary>
      <param name="parameterName">The name of the parameter.</param>
      <param name="sqlDbType">One of the <see cref="T:System.Data.SqlDbType" /> values.</param>
      <returns>
        <para>A reference to the new <see cref="T:System.Data.SqlClient.SqlParameter" /> object.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlClient.SqlParameterCollection.Add(System.String,System.Data.SqlDbType,System.Int32)">
      <summary>
        <para>Adds a <see cref="T:System.Data.SqlClient.SqlParameter" /> to the <see cref="T:System.Data.SqlClient.SqlParameterCollection" /> with the the
   parameter name, the data type, and the parameter size (column width).</para>
      </summary>
      <param name="parameterName">The name of the parameter.</param>
      <param name="sqlDbType">One of the <see cref="T:System.Data.SqlDbType" /> values.</param>
      <param name="size">The size of the parameter (width of the column). </param>
      <returns>
        <para>A reference to the new <see cref="T:System.Data.SqlClient.SqlParameter" /> object.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlClient.SqlParameterCollection.Add(System.String,System.Data.SqlDbType,System.Int32,System.String)">
      <summary>
        <para>Adds a <see cref="T:System.Data.SqlClient.SqlParameter" /> to the <see cref="T:System.Data.SqlClient.SqlParameterCollection" /> with the
   parameter name, the data type, the parameter size (column width), and the source column name.</para>
      </summary>
      <param name="parameterName">The name of the parameter.</param>
      <param name="sqlDbType">One of the <see cref="T:System.Data.SqlDbType" /> values.</param>
      <param name="size">The size of the parameter (width of the column). </param>
      <param name="sourceColumn">The name of the source column. </param>
      <returns>
        <para>A reference to the new <see cref="T:System.Data.SqlClient.SqlParameter" /> object.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlClient.SqlParameterCollection.Contains(System.String)">
      <summary>
        <para> Indicates whether a <see cref="T:System.Data.SqlClient.SqlParameter" /> 
with the specified parameter name exists in the collection.
</para>
      </summary>
      <param name="value">The name of the parameter to retrieve. </param>
      <returns>
        <para>
          <see langword="true" /> if the collection contains the parameter; otherwise,
<see langword="false" />.
   </para>
      </returns>
    </member>
    <member name="M:System.Data.SqlClient.SqlParameterCollection.Contains(System.Object)">
      <summary>
        <para>Indicates whether a <see cref="T:System.Data.SqlClient.SqlParameter" /> exists in the collection.</para>
      </summary>
      <param name="value">A <see cref="T:System.Data.SqlClient.SqlParameter" /> object.</param>
      <returns>
        <para>
          <see langword="true" /> if the 
   collection contains the <see cref="T:System.Data.SqlClient.SqlParameter" /> object; otherwise,
<see langword="false" />.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlClient.SqlParameterCollection.Clear">
      <summary>
        <para> Removes all items from the collection.
      </para>
      </summary>
    </member>
    <member name="M:System.Data.SqlClient.SqlParameterCollection.CopyTo(System.Array,System.Int32)">
      <summary>
        <para> Copies <see cref="T:System.Data.SqlClient.SqlParameter" /> objects from
   the <see cref="T:System.Data.SqlClient.SqlParameterCollection" /> to the specified array.
   </para>
      </summary>
      <param name="array">An <see cref="T:System.Array" /> to which to copy the <see cref="T:System.Data.SqlClient.SqlParameter" /> objects in the collection. </param>
      <param name="index">The starting index of the array. </param>
    </member>
    <member name="M:System.Data.SqlClient.SqlParameterCollection.IndexOf(System.String)">
      <summary>
        <para>Gets the location of the <see cref="T:System.Data.SqlClient.SqlParameter" />
in the collection with a specific parameter
name.</para>
      </summary>
      <param name="parameterName">The name of the parameter to retrieve.</param>
      <returns>
        <para>The zero-based location of the <see cref="T:System.Data.SqlClient.SqlParameter" /> in the collection.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlClient.SqlParameterCollection.IndexOf(System.Object)">
      <summary>
        <para>Gets the location of a <see cref="T:System.Data.SqlClient.SqlParameter" />
in the collection.</para>
      </summary>
      <param name="value">The <see cref="T:System.Data.SqlClient.SqlParameter" /> object to locate.</param>
      <returns>
        <para>The zero-based location of the <see cref="T:System.Data.SqlClient.SqlParameter" /> in the collection.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlClient.SqlParameterCollection.Insert(System.Int32,System.Object)">
      <summary>
        <para>Inserts a <see cref="T:System.Data.SqlClient.SqlParameter" />
in the collection at the specified index.</para>
      </summary>
      <param name="index">The zero-based index within the collection to insert the <paramref name="value" />parameter. </param>
      <param name="value">The <see cref="T:System.Data.SqlClient.SqlParameter" /> to add to the collection. </param>
    </member>
    <member name="M:System.Data.SqlClient.SqlParameterCollection.RemoveAt(System.Int32)">
      <summary>
        <para> Removes the specified <see cref="T:System.Data.SqlClient.SqlParameter" />
from the collection using a specific index.</para>
      </summary>
      <param name="index">The zero-based index of the parameter. </param>
    </member>
    <member name="M:System.Data.SqlClient.SqlParameterCollection.RemoveAt(System.String)">
      <summary>
        <para> Removes the specified <see cref="T:System.Data.SqlClient.SqlParameter" />
from the collection using the parameter name.</para>
      </summary>
      <param name="parameterName">The name of the parameter to retrieve. </param>
    </member>
    <member name="M:System.Data.SqlClient.SqlParameterCollection.Remove(System.Object)">
      <summary>
        <para>Removes the specified <see cref="T:System.Data.SqlClient.SqlParameter" />
from the collection.</para>
      </summary>
      <param name="value">A <see cref="T:System.Data.SqlClient.SqlParameter" /> object to remove from the collection.</param>
    </member>
    <member name="P:System.Data.SqlClient.SqlParameterCollection.Count">
      <summary>
        <para>Gets the number of <see cref="T:System.Data.SqlClient.SqlParameter" /> objects in the collection.</para>
      </summary>
    </member>
    <member name="P:System.Data.SqlClient.SqlParameterCollection.Item(System.Int32)">
      <summary>
        <para>Gets the <see cref="T:System.Data.SqlClient.SqlParameter" />
at the specified index.</para>
      </summary>
      <param name="index">The zero-based index of the parameter to retrieve.</param>
    </member>
    <member name="P:System.Data.SqlClient.SqlParameterCollection.Item(System.String)">
      <summary>
        <para>Gets the <see cref="T:System.Data.SqlClient.SqlParameter" />
with the specified name.</para>
      </summary>
      <param name="parameterName">The name of the parameter to retrieve.</param>
    </member>
    <member name="T:System.Data.SqlClient.SqlRowUpdatedEventArgs">
      <summary>
        <para>Provides data for the <see cref="E:System.Data.SqlClient.SqlDataAdapter.RowUpdated" /> event. This class cannot 
   be inherited.</para>
      </summary>
    </member>
    <member name="M:System.Data.SqlClient.SqlRowUpdatedEventArgs.#ctor(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.SqlClient.SqlRowUpdatedEventArgs" /> class.</para>
      </summary>
      <param name="row">The <see cref="T:System.Data.DataRow" /> sent through an <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</param>
      <param name="command">The <see cref="T:System.Data.IDbCommand" /> executed when <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> is called.</param>
      <param name="statementType">One of the <see cref="T:System.Data.StatementType" /> values that specifies the type of query executed. </param>
      <param name="tableMapping">The <see cref="T:System.Data.Common.DataTableMapping" /> sent through an <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</param>
    </member>
    <member name="P:System.Data.SqlClient.SqlRowUpdatedEventArgs.Command">
      <summary>
        <para>Gets or sets the <see cref="T:System.Data.SqlClient.SqlCommand" />
 executed when <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> is called.</para>
      </summary>
    </member>
    <member name="T:System.Data.SqlClient.SqlRowUpdatedEventHandler">
      <summary>
        <para>Represents the method that will handle the <see cref="E:System.Data.SqlClient.SqlDataAdapter.RowUpdated" />
event of a
<see cref="T:System.Data.SqlClient.SqlDataAdapter" />.</para>
      </summary>
      <param name="sender">The source of the event.</param>
      <param name=" e">The <see cref="T:System.Data.SqlClient.SqlRowUpdatedEventArgs" /> that contains the event data.</param>
    </member>
    <member name="T:System.Data.SqlClient.SqlRowUpdatingEventArgs">
      <summary>
        <para>Provides data for the <see cref="E:System.Data.SqlClient.SqlDataAdapter.RowUpdating" /> event. This class cannot 
   be inherited.</para>
      </summary>
    </member>
    <member name="M:System.Data.SqlClient.SqlRowUpdatingEventArgs.#ctor(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.SqlClient.SqlRowUpdatingEventArgs" /> class.</para>
      </summary>
      <param name="row">The <see cref="T:System.Data.DataRow" /> to <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</param>
      <param name="command">The <see cref="T:System.Data.IDbCommand" /> to execute during <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</param>
      <param name="statementType">One of the <see cref="T:System.Data.StatementType" /> values that specifies the type of query executed. </param>
      <param name="tableMapping">The <see cref="T:System.Data.Common.DataTableMapping" /> sent through an <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</param>
    </member>
    <member name="P:System.Data.SqlClient.SqlRowUpdatingEventArgs.Command">
      <summary>
        <para>Gets or sets the <see cref="T:System.Data.SqlClient.SqlCommand" />
 to execute when performing the <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</para>
      </summary>
    </member>
    <member name="T:System.Data.SqlClient.SqlRowUpdatingEventHandler">
      <summary>
        <para>Represents the method that will handle the <see cref="E:System.Data.SqlClient.SqlDataAdapter.RowUpdating" />
event of a
<see cref="T:System.Data.SqlClient.SqlDataAdapter" />.</para>
      </summary>
      <param name="sender">The source of the event.</param>
      <param name=" e">The <see cref="T:System.Data.SqlClient.SqlRowUpdatingEventArgs" /> that contains the event data.</param>
    </member>
    <member name="T:System.Data.SqlClient.SqlTransaction">
      <summary>
        <para> Represents a Transact-SQL transaction to be made in a SQL Server database. This class cannot be inherited.</para>
      </summary>
    </member>
    <member name="M:System.Data.SqlClient.SqlTransaction.Dispose">
      <summary>
        <para>Releases the unmanaged resources used by the <see cref="T:System.Data.SqlClient.SqlTransaction" /> and optionally releases the managed
   resources.</para>
      </summary>
    </member>
    <member name="M:System.Data.SqlClient.SqlTransaction.Commit">
      <summary>
        <para> Commits the database transaction.
      </para>
      </summary>
    </member>
    <member name="M:System.Data.SqlClient.SqlTransaction.Rollback">
      <summary>
        <para> Rolls back a transaction from a pending state.
      </para>
      </summary>
    </member>
    <member name="M:System.Data.SqlClient.SqlTransaction.Rollback(System.String)">
      <summary>
        <para> Rolls back a transaction from a pending state, and specifies the transaction or savepoint name.
      </para>
      </summary>
      <param name="transactionName">The name of the transaction to rollback, or the savepoint to which to rollback. </param>
    </member>
    <member name="M:System.Data.SqlClient.SqlTransaction.Save(System.String)">
      <summary>
        <para> Creates a savepoint in the transaction that can be used to roll back a portion of
      the transaction, and specifies the savepoint name.
      </para>
      </summary>
      <param name="savePointName">The name of the savepoint. </param>
    </member>
    <member name="P:System.Data.SqlClient.SqlTransaction.Connection">
      <summary>
        <para>Gets the <see cref="T:System.Data.SqlClient.SqlConnection" /> object associated with the transaction,
   or <see langword="null" /> if the transaction is no longer valid. </para>
      </summary>
    </member>
    <member name="P:System.Data.SqlClient.SqlTransaction.IsolationLevel">
      <summary>
        <para>Specifies the <see cref="T:System.Data.IsolationLevel" />
for this transaction.</para>
      </summary>
    </member>
    <member name="M:System.Data.SqlClient.TdsParser.#ctor">
      <summary> TdsParser constructor
            </summary>
    </member>
    <member name="M:System.Data.SqlClient.TdsParser.Connect(System.String,System.String,System.Data.SqlClient.SqlInternalConnection,System.Int32)">
      <summary> TdsParser connection procedure to establish netlib connection.
            </summary>
      <param name="host">
                    Hostname of server.
            </param>
      <param name="protocol">
      </param>
      <param name="connHandler">
      </param>
    </member>
    <member name="M:System.Data.SqlClient.TdsParser.ReadByte">
      <summary> Takes no arguments and returns a byte from the buffer.  If the buffer is empty, it is filled
                   before the byte is returned.
            </summary>
    </member>
    <member name="M:System.Data.SqlClient.TdsParser.ReadByteArray(System.Byte[],System.Int32,System.Int32)">
      <summary> Takes a byte array, an offset, and a len and fills the array from the offset to len number of
                   bytes from the in buffer.
            </summary>
      <param name="buff">
                   Byte array to be filled with bytes from the buffer.
            </param>
      <param name="offset">
                   Location in the array where writing will begin.
            </param>
      <param name="len">
                   Number of bytes to be written to the byte array that is passed in.
            </param>
    </member>
    <member name="M:System.Data.SqlClient.TdsParser.ReadShort">
      <summary> Returns a short from the in buffer.
            </summary>
    </member>
    <member name="M:System.Data.SqlClient.TdsParser.ReadUnsignedShort">
      <summary> Returns an unsigned short from the in buffer.
            </summary>
    </member>
    <member name="M:System.Data.SqlClient.TdsParser.ReadInt">
      <summary> Returns an int from the in buffer.
            </summary>
    </member>
    <member name="M:System.Data.SqlClient.TdsParser.ReadFloat">
      <summary> Returns a float from the in buffer.
            </summary>
    </member>
    <member name="M:System.Data.SqlClient.TdsParser.ReadLong">
      <summary> Returns a long from the in buffer.
            </summary>
    </member>
    <member name="M:System.Data.SqlClient.TdsParser.ReadDouble">
      <summary> Returns a double from the in buffer.
            </summary>
    </member>
    <member name="M:System.Data.SqlClient.TdsParser.SkipBytes(System.Int64)">
      <summary> Reads bytes from the buffer but doesn't return them, in effect simply deleting them.
            </summary>
      <param name="num">
                   Number of bytes to be skipped.
            </param>
    </member>
    <member name="M:System.Data.SqlClient.TdsParser.InitSSPISession">
      <summary> Private helper function that initializes the SSPI session and package.
            </summary>
    </member>
    <member name="T:System.Data.SqlTypes.SqlBinary">
      <summary>
        <para> Represents a variable-length
      stream of binary data to be stored in or retrieved from a
      database.
      </para>
      </summary>
    </member>
    <member name="T:System.Data.SqlTypes.INullable">
      <summary>
        <para>All of the <see cref="N:System.Data.SqlTypes" /> objects and structures implement the 
   INullable interface, reflecting the fact that, unlike the corresponding system
   types, <see langword="SqlTypes" />
   can legally contain the value null.</para>
      </summary>
    </member>
    <member name="P:System.Data.SqlTypes.INullable.IsNull">
      <summary>
        <para>Indicates whether a structure is null.</para>
      </summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.#ctor(System.Byte[])">
      <summary>
        <para> Initializes a new instance of 
      the <see langword="SqlBinary" /> structure, setting the <see cref="P:System.Data.SqlTypes.SqlBinary.Value" /> property to the contents of the supplied byte array.
      </para>
      </summary>
      <param name="value">The byte array to be stored or retrieved. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.op_Implicit(System.Byte[])~System.Data.SqlTypes.SqlBinary">
      <summary>
        <para> Converts an array of bytes to a <see cref="T:System.Data.SqlTypes.SqlBinary" /> structure.
   </para>
      </summary>
      <param name="x">The array of bytes to be converted. </param>
      <returns>
        <para> A <see langword="SqlBinary" /> 
structure that represents the converted array of bytes.
</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.op_Explicit(System.Data.SqlTypes.SqlBinary)~System.Byte[]">
      <summary>
        <para> Gets the contents of the <see cref="P:System.Data.SqlTypes.SqlBinary.Value" /> property of the <see cref="T:System.Data.SqlTypes.SqlBinary" /> 
parameter as an array of bytes.
</para>
      </summary>
      <param name="x">A <see cref="T:System.Data.SqlTypes.SqlBinary" />. </param>
      <returns>
        <para> An array of bytes.
      </para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.ToString">
      <summary>
        <para> Converts this <see cref="T:System.Data.SqlTypes.SqlBinary" /> object to a string.
   </para>
      </summary>
      <returns>
        <para> A string containing the <see cref="P:System.Data.SqlTypes.SqlBinary.Value" /> of the 
<see langword="SqlBinary" /> . If the <see langword="Value" /> is null the
   string will contain
   "null".
   </para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.op_Addition(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary>
        <para> Concatenates the two <see cref="T:System.Data.SqlTypes.SqlBinary" /> parameters to create a 
   new <see langword="SqlBinary" /> structure.
   </para>
      </summary>
      <param name="x">A <see langword="SqlBinary" /> object. </param>
      <param name="y">A <see langword="SqlBinary" /> object. </param>
      <returns>
        <para>The concatenated values of the <paramref name="x" /> and <paramref name="y" /> parameters.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.op_Explicit(System.Data.SqlTypes.SqlGuid)~System.Data.SqlTypes.SqlBinary">
      <summary>
        <para> Converts a <see cref="T:System.Data.SqlTypes.SqlGuid" /> structure to a <see cref="T:System.Data.SqlTypes.SqlBinary" /> structure.</para>
      </summary>
      <param name="x">The <see langword="SqlGuid" /> structure to be converted. </param>
      <returns>
        <para> A <see langword="SqlBinary" /> structure.
   </para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.op_Equality(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary>
        <para> Compares two <see cref="T:System.Data.SqlTypes.SqlBinary" /> structures to determine if they are
   equal.
   </para>
      </summary>
      <param name="x">A <see langword="SqlBinary" /> object. </param>
      <param name="y">A <see langword="SqlBinary" /> object. </param>
      <returns>
        <para> A <see cref="T:System.Data.SqlTypes.SqlBoolean" />
that is <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the two instances are equal
or <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> if the two instances are not
equal. If either instance of <see langword="SqlBinary" />
is null, the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of
the <see langword="SqlBoolean" /> will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> .</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.op_Inequality(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary>
        <para> Compares two <see cref="T:System.Data.SqlTypes.SqlBinary" /> structures to determine if they
   are equal.</para>
      </summary>
      <param name="x">A <see langword="SqlBinary" /> object. </param>
      <param name="y">A <see langword="SqlBinary" /> object. </param>
      <returns>
        <para> A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the two
   instances are not equal or <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> if the two instances are equal.
   If either instance of <see langword="SqlBinary" /> is null, the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of
   the <see langword="SqlBoolean" /> will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> .
   </para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.op_LessThan(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary>
        <para> Compares two <see cref="T:System.Data.SqlTypes.SqlBinary" /> structures to determine if the first is less
   than the second.
   </para>
      </summary>
      <param name="x">A <see langword="SqlBinary" /> object. </param>
      <param name="y">A <see langword="SqlBinary" /> object. </param>
      <returns>
        <para> A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />
if the first
instance is less than the second instance, otherwise <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> . If either instance
of <see langword="SqlBinary" /> is null, the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of
the <see langword="SqlBoolean" /> will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> .</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.op_GreaterThan(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary>
        <para> Compares two <see cref="T:System.Data.SqlTypes.SqlBinary" /> structures to determine if the first
   is greater than the second.
   </para>
      </summary>
      <param name="x">A <see langword="SqlBinary" /> object. </param>
      <param name="y">A <see langword="SqlBinary" /> object. </param>
      <returns>
        <para> A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />
if the first instance is greater than the second instance, otherwise <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. If either instance
of <see langword="SqlBinary" /> is null, the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of
the <see langword="SqlBoolean" /> will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> .</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.op_LessThanOrEqual(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary>
        <para> Compares two <see cref="T:System.Data.SqlTypes.SqlBinary" /> structures to determine if the first is less
   than or equal to the second.
   </para>
      </summary>
      <param name="x">A <see langword="SqlBinary" /> object. </param>
      <param name="y">A <see langword="SqlBinary" /> object. </param>
      <returns>
        <para> A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />
if the first instance is less than
or equal to the second instance, otherwise <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. If
either instance of <see langword="SqlBinary" /> is null, the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of
the <see langword="SqlBoolean" /> will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> .</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary>
        <para> Compares two <see cref="T:System.Data.SqlTypes.SqlBinary" /> structues to determine if the first
   is greater than or equal to the second.
   </para>
      </summary>
      <param name="x">A <see langword="SqlBinary" /> object. </param>
      <param name="y">A <see langword="SqlBinary" /> object. </param>
      <returns>
        <para> A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />
if the first instance is greaater than
or equal to the second instance, otherwise <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. If
either instance of <see langword="SqlBinary" /> is null, the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of
the <see langword="SqlBoolean" /> will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> .</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.Concat(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary>
        <para> Concatenates two <see cref="T:System.Data.SqlTypes.SqlBinary" />
structures to create a new <see langword="SqlBinary" /> structure.</para>
      </summary>
      <param name="x">A <see langword="SqlBinary" /> structure.</param>
      <param name=" y">A <see langword="SqlBinary" /> structure.</param>
      <returns>
        <para>The concatenated values of the <paramref name="x" /> and <paramref name="y" /> parameters.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.Equals(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary>
        <para>Compares two <see cref="T:System.Data.SqlTypes.SqlBinary" /> structures to determine 
   if they are equal.</para>
      </summary>
      <param name="x">A <see langword="SqlBinary" /> structure.</param>
      <param name=" y">A <see langword="SqlBinary" /> structure.</param>
      <returns>
        <para>A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the two 
   instances are equal or <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> if the two instances are not
   equal. If either instance of <see langword="SqlBinary" /> is null, the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of the
<see langword="SqlBoolean" /> will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> .</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.NotEquals(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary>
        <para>Compares two <see cref="T:System.Data.SqlTypes.SqlBinary" /> structures to determine if they are 
   equal.</para>
      </summary>
      <param name="x">A <see langword="SqlBinary" /> structure.</param>
      <param name=" y">A <see langword="SqlBinary" /> structure.</param>
      <returns>
        <para>A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the two 
   instances are not equal or <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> if the two instances are equal.
   If either instance of <see langword="SqlBinary" /> is null, the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of the
<see langword="SqlBoolean" /> will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> .</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.LessThan(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary>
        <para>Compares two <see cref="T:System.Data.SqlTypes.SqlBinary" /> structures to determine 
   if the first is less than the second.</para>
      </summary>
      <param name="x">A <see langword="SqlBinary" /> structure.</param>
      <param name=" y">A <see langword="SqlBinary" /> structure.</param>
      <returns>
        <para>A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the first 
   instance is less than the second instance, otherwise <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> . If either instance of
<see langword="SqlBinary" /> is null, the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of the 
<see langword="SqlBoolean" /> will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> .</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.GreaterThan(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary>
        <para>Compares two <see cref="T:System.Data.SqlTypes.SqlBinary" /> structures to determine 
   if the first is greater than the second.</para>
      </summary>
      <param name="x">A <see langword="SqlBinary" /> structure.</param>
      <param name=" y">A <see langword="SqlBinary" /> structure.</param>
      <returns>
   A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the first instance is
   greater than the second instance, otherwise <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. If either
   instance of <see langword="SqlBinary" /> is null, the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of the
<see langword="SqlBoolean" /> will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> .
</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.LessThanOrEqual(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary>
        <para>Compares two <see cref="T:System.Data.SqlTypes.SqlBinary" />
structures to determine if the first is less than or equal to the second.</para>
      </summary>
      <param name="x">A <see langword="SqlBinary" /> structure.</param>
      <param name=" y">A <see langword="SqlBinary" /> structure.</param>
      <returns>
        <para>A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the first 
   instance is less than or equal to the second instance, otherwise <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. If either instance of
<see langword="SqlBinary" /> is null, the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of the 
<see langword="SqlBoolean" /> will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> .</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.GreaterThanOrEqual(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
      <summary>
        <para>Compares two <see cref="T:System.Data.SqlTypes.SqlBinary" />
structues to determine if the first is greater than or equal to the second.</para>
      </summary>
      <param name="x">A <see langword="SqlBinary" /> structure.</param>
      <param name=" y">A <see langword="SqlBinary" /> structure.</param>
      <returns>
        <para>A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the first instance is
   greaater than or equal to the second instance, otherwise <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. If either instance of
<see langword="SqlBinary" /> is null, the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of the 
<see langword="SqlBoolean" /> will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> .</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.ToSqlGuid">
      <summary>
        <para>Converts this instance of <see cref="T:System.Data.SqlTypes.SqlBinary" />
to <see cref="T:System.Data.SqlTypes.SqlGuid" /> .</para>
      </summary>
      <returns>
        <para>A <see langword="SqlGuid" /> structure.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.CompareTo(System.Object)">
      <summary>
        <para>Compares this <see cref="T:System.Data.SqlTypes.SqlBinary" /> object to the supplied object and
   returns an indication of their relative values.</para>
      </summary>
      <param name="value">The object to be compared to this <see langword="SqlBinary" /> structure.</param>
      <returns>
        <para>A signed number indicating the relative values of
      this <see langword="SqlBinary" />
      structure and the object.</para>
        <list type="table">
          <listheader>
            <term>Return Value</term>
            <description>Condition</description>
          </listheader>
          <item>
            <term> Less than zero</term>
            <description>The value of this <see langword="SqlBinary" />object is less than the
         object.</description>
          </item>
          <item>
            <term> Zero</term>
            <description>This <see langword="SqlBinary" /> object is the same as object.</description>
          </item>
          <item>
            <term> Greater than zero</term>
            <description>
              <para>This <see langword="SqlBinary" /> object is greater than object.</para>
              <para>-or-</para>
              <para>The object is a null
      reference.</para>
            </description>
          </item>
        </list>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.Equals(System.Object)">
      <summary>
        <para>Compares the supplied object parameter to
      the <see cref="P:System.Data.SqlTypes.SqlBinary.Value" /> property of the <see cref="T:System.Data.SqlTypes.SqlBinary" /> object.</para>
      </summary>
      <param name="value">The object to be compared.</param>
      <returns>
        <para>
          <see langword="true " />if object is
   an instance of <see cref="T:System.Data.SqlTypes.SqlBinary" /> and the two are
   equal; otherwise <see langword="false" />.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBinary.GetHashCode">
      <summary>
        <para>Returns the hash code for this <see cref="T:System.Data.SqlTypes.SqlBinary" /> structure.</para>
      </summary>
      <returns>
        <para>A 32-bit signed integer hash code.</para>
      </returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlBinary.Null">
      <summary>
        <para> Represents a null value that can be assigned to
      the <see cref="P:System.Data.SqlTypes.SqlBinary.Value" />
      property of a <see cref="T:System.Data.SqlTypes.SqlBinary" /> structure.
      </para>
      </summary>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBinary.IsNull">
      <summary>
        <para>Gets a value indicating whether whether the <see cref="P:System.Data.SqlTypes.SqlBinary.Value" /> property of the <see cref="T:System.Data.SqlTypes.SqlBinary" /> structure is 
   null. This property is read-only.</para>
      </summary>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBinary.Value">
      <summary>
        <para> Gets the value of the <see cref="T:System.Data.SqlTypes.SqlBinary" /> structure. This property is read-only.</para>
      </summary>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBinary.Item(System.Int32)">
      <summary>
        <para>Gets the single byte from the
   <see langword="Value" /> property located at the position indicated by the integer
      parameter, <paramref name="index" />. If <paramref name="index" /> indicates a position beyond the end of the byte
      array, a <see cref="T:System.Data.SqlTypes.SqlNullValueException" /> will
      be raised. This property is read-only.</para>
      </summary>
      <param name="index">The position of the byte to be retrieved.</param>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBinary.Length">
      <summary>
        <para>Gets the length in bytes of the <see cref="P:System.Data.SqlTypes.SqlBinary.Value" /> property. This property is 
   read-only.</para>
      </summary>
    </member>
    <member name="T:System.Data.SqlTypes.SqlBoolean">
      <summary>
        <para> Represents an integer value that is either 1 or 0 to be stored in or retrieved from a database.
      </para>
      </summary>
      <summary>
        <para> Represents a boolean stored in or retrieved from a database.
      </para>
      </summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.#ctor(System.Boolean)">
      <summary>
        <para> Initializes a new instance of the <see cref="T:System.Data.SqlTypes.SqlBoolean" /> structure using the supplied boolean 
   value.
   </para>
      </summary>
      <param name="value">The value for the new <see langword="SqlBoolean" /> structure; either <see langword="true" /> or <see langword="false" />. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.#ctor(System.Int32)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.SqlTypes.SqlBoolean" /> structure using the specified 
<see langword="integer" />
value.</para>
      </summary>
      <param name="value">The integer whose value is to be used for the new <see langword="SqlBoolean" /> structure.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Implicit(System.Boolean)~System.Data.SqlTypes.SqlBoolean">
      <summary>
        <para>Converts the supplied byte value to a <see cref="T:System.Data.SqlTypes.SqlBoolean" /> .</para>
      </summary>
      <param name="x">A byte value to be converted to <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</param>
      <returns>
        <para>A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> value containing 0 or 1.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlBoolean)~System.Boolean">
      <summary>
        <para> Converts a <see cref="T:System.Data.SqlTypes.SqlBoolean" />
to a Boolean.</para>
      </summary>
      <param name="x">A <see langword="SqlBoolean" /> to convert. </param>
      <returns>
        <para> A Boolean set to the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of the
<see langword="SqlBoolean" />.
   </para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_LogicalNot(System.Data.SqlTypes.SqlBoolean)">
      <summary>
        <para> Performs a NOT operation on a <see cref="T:System.Data.SqlTypes.SqlBoolean" />
.</para>
      </summary>
      <param name="x">The <see langword="SqlBoolean" /> on which the NOT operation will be performed. </param>
      <returns>
        <para> A <see langword="SqlBoolean" /> with the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /><see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if argument was
true, <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> if argument was
null, and <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />
otherwise.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_True(System.Data.SqlTypes.SqlBoolean)">
      <summary>
        <para>The true operator can be used to test
      the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of the <see cref="T:System.Data.SqlTypes.SqlBoolean" />
      to determine whether it is true.</para>
      </summary>
      <param name="x">The <see langword="SqlBoolean" /> structure to be tested.</param>
      <returns>
        <para>Returns <see langword="true" /> if 
   the supplied parameter is <see langword="SqlBoolean" />
   is true, <see langword="false" /> otherwise.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_False(System.Data.SqlTypes.SqlBoolean)">
      <summary>
        <para>The false operator can be used to test
      the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of the <see cref="T:System.Data.SqlTypes.SqlBoolean" /> to determine whether it is false.</para>
      </summary>
      <param name="x">The <see cref="T:System.Data.SqlTypes.SqlBoolean" /> structure to be tested.</param>
      <returns>
        <para>Returns <see langword="true" /> if 
   the supplied parameter is <see langword="SqlBoolean" />
   is false, <see langword="false" /> otherwise.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_BitwiseAnd(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary>
        <para>Computes the bitwise AND of two specified <see cref="T:System.Data.SqlTypes.SqlBoolean" /> structures.</para>
      </summary>
      <param name="x">A <see langword="SqlBoolean" /> structure.</param>
      <param name=" y">A <see langword="SqlBoolean" /> structure.</param>
      <returns>
        <para>The results of the logical AND operation.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_BitwiseOr(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary>
        <para>Computes the bitwise OR of its operands.</para>
      </summary>
      <param name="x">A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> structure.</param>
      <param name=" y">A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> structure.</param>
      <returns>
        <para>The results of the logical OR operation.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.ToString">
      <summary>
        <para>Converts this <see cref="T:System.Data.SqlTypes.SqlBoolean" /> structure to a string.</para>
      </summary>
      <returns>
        <para>A string containing the value of the <see cref="T:System.Data.SqlTypes.SqlBoolean" /> . If the value is null the string will contain
   "null".</para>
      </returns>
      <summary>
        <para> Converts the current <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> to a
   string.
   </para>
      </summary>
      <returns>
        <para> A string containing
      "true" if <see langword="true" /> = ;"null" if null; otherwise "false".
      </para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.Parse(System.String)">
      <summary>
        <para>Converts the specified <see cref="T:System.String" /> representation of a logical value to 
   its <see cref="T:System.Data.SqlTypes.SqlBoolean" /> equivalent.</para>
      </summary>
      <param name="s">The <see cref="T:System.String" /> to be converted.</param>
      <returns>
        <para>A <see langword="SqlBoolean" /> structure containing the 
   parsed value.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_OnesComplement(System.Data.SqlTypes.SqlBoolean)">
      <summary>
        <para>Performs a one's complement operation on the supplied
   <see cref="T:System.Data.SqlTypes.SqlBoolean" /> 
   structures.</para>
      </summary>
      <param name="x">A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> structure.</param>
      <returns>
        <para>The one's complement of the supplied <see cref="T:System.Data.SqlTypes.SqlBoolean" /> .</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_ExclusiveOr(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary>
        <para>Performs a bitwise exclusive-OR operation on the
      supplied parameters.</para>
      </summary>
      <param name="x">A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> structure.</param>
      <param name=" y">A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> structure.</param>
      <returns>
        <para>The results of the logical XOR operation.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlByte)~System.Data.SqlTypes.SqlBoolean">
      <summary>
        <para>Converts the <see cref="T:System.Data.SqlTypes.SqlByte" /> parameter to
   a <see cref="T:System.Data.SqlTypes.SqlBoolean" /> structure.</para>
      </summary>
      <param name="x">A <see cref="T:System.Data.SqlTypes.SqlByte" /> to be converted to a <see cref="T:System.Data.SqlTypes.SqlBoolean" /> structure.</param>
      <returns>
        <para>A new <see cref="T:System.Data.SqlTypes.SqlBoolean" />
structure whose value equals the <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> of
the <see cref="T:System.Data.SqlTypes.SqlByte" />
parameter.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlInt16)~System.Data.SqlTypes.SqlBoolean">
      <summary>
        <para>Converts the <see cref="T:System.Data.SqlTypes.SqlInt16" /> parameter to a <see cref="T:System.Data.SqlTypes.SqlBoolean" /> structure.</para>
      </summary>
      <param name="x">A <see langword="SqlInt16" /> to be converted to a <see langword="SqlBoolean" /> structure.</param>
      <returns>
        <para>A new <see langword="SqlBoolean" /> structure whose value equals
   the <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> property of
   the <see langword="SqlInt16" />
   parameter.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlInt32)~System.Data.SqlTypes.SqlBoolean">
      <summary>
        <para>Converts the <see cref="T:System.Data.SqlTypes.SqlInt32" /> parameter to a <see cref="T:System.Data.SqlTypes.SqlBoolean" /> structure.</para>
      </summary>
      <param name="x">A <see langword="SqlInt32" /> to be converted to a <see langword="SqlBoolean" /> structure.</param>
      <returns>
        <para>A new <see langword="SqlBoolean" /> structure whose value equals the <see cref="P:System.Data.SqlTypes.SqlInt32.Value" />
property of the <see langword="SqlInt32" />
parameter.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlInt64)~System.Data.SqlTypes.SqlBoolean">
      <summary>
        <para>Converts the <see cref="T:System.Data.SqlTypes.SqlInt64" /> parameter to a <see cref="T:System.Data.SqlTypes.SqlBoolean" /> structure.</para>
      </summary>
      <param name="x">A <see langword="SqlInt64" /> to be converted to a <see langword="SqlBoolean" /> structure.</param>
      <returns>
        <para>A new <see langword="SqlBoolean" /> structure whose value equals the <see cref="P:System.Data.SqlTypes.SqlInt64.Value" />
property of the <see langword="SqlInt64" />
parameter.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlDouble)~System.Data.SqlTypes.SqlBoolean">
      <summary>
        <para>Converts the <see cref="T:System.Data.SqlTypes.SqlDouble" /> parameter to a <see cref="T:System.Data.SqlTypes.SqlBoolean" /> structure.</para>
      </summary>
      <param name="x">A <see langword="SqlDouble" /> to be converted to a <see langword="SqlBoolean" /> structure.</param>
      <returns>
        <para>A new <see langword="SqlBoolean" /> structure whose value equals the <see cref="P:System.Data.SqlTypes.SqlDouble.Value" />
property of the <see langword="SqlDouble" /> parameter.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlSingle)~System.Data.SqlTypes.SqlBoolean">
      <summary>
        <para>Converts the <see cref="T:System.Data.SqlTypes.SqlSingle" /> parameter to a <see cref="T:System.Data.SqlTypes.SqlBoolean" /> structure.</para>
      </summary>
      <param name="x">A <see langword="SqlSingle" /> to be converted to a <see langword="SqlBoolean" /> structure.</param>
      <returns>
        <para>A new <see langword="SqlBoolean" /> structure whose value equals the <see cref="P:System.Data.SqlTypes.SqlSingle.Value" />
property of the <see langword="SqlSingle" />
parameter.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlMoney)~System.Data.SqlTypes.SqlBoolean">
      <summary>
        <para>Converts the <see cref="T:System.Data.SqlTypes.SqlMoney" /> parameter to a <see cref="T:System.Data.SqlTypes.SqlBoolean" /> structure.</para>
      </summary>
      <param name="x">A <see cref="T:System.Data.SqlTypes.SqlMoney" /> to be converted to a <see cref="T:System.Data.SqlTypes.SqlBoolean" /> structure.</param>
      <returns>
        <para>A new <see cref="T:System.Data.SqlTypes.SqlByte" /> structure whose value equals the <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> property of the <see cref="T:System.Data.SqlTypes.SqlMoney" />
parameter.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlDecimal)~System.Data.SqlTypes.SqlBoolean">
      <summary>
        <para>Converts the <see cref="T:System.Data.SqlTypes.SqlDecimal" /> parameter to a <see cref="T:System.Data.SqlTypes.SqlBoolean" /> structure.</para>
      </summary>
      <param name="x">A <see cref="T:System.Data.SqlTypes.SqlDecimal" /> to be converted to a <see cref="T:System.Data.SqlTypes.SqlBoolean" /> structure.</param>
      <returns>
        <para>A new <see cref="T:System.Data.SqlTypes.SqlByte" /> structure whose value equals the <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> property of the <see cref="T:System.Data.SqlTypes.SqlDecimal" />
parameter.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlBoolean">
      <summary>
        <para>Converts the <see cref="T:System.Data.SqlTypes.SqlString" /> parameter to a <see cref="T:System.Data.SqlTypes.SqlBoolean" /> structure.</para>
      </summary>
      <param name="x">A <see cref="T:System.Data.SqlTypes.SqlString" /> to be converted to a <see cref="T:System.Data.SqlTypes.SqlBoolean" /> structure.</param>
      <returns>
        <para>A new <see cref="T:System.Data.SqlTypes.SqlByte" /> structure whose value equals the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> property of the <see cref="T:System.Data.SqlTypes.SqlBoolean" />
parameter.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Equality(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary>
        <para>Compares two instances of <see cref="T:System.Data.SqlTypes.SqlBoolean" /> for equality.</para>
      </summary>
      <param name="x">
        <para>A <see cref="T:System.Data.SqlTypes.SqlBoolean" />. </para>
      </param>
      <param name="y">A <see cref="T:System.Data.SqlTypes.SqlBoolean" />. </param>
      <returns>
   A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the two instances are equal
   or <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> if the two instances are not
   equal. If either instance of <see cref="T:System.Data.SqlTypes.SqlBoolean" /> is null, the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of the <see cref="T:System.Data.SqlTypes.SqlBoolean" />
   will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> .
</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.op_Inequality(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary>
        <para>Compares two instances of <see cref="T:System.Data.SqlTypes.SqlBoolean" /> for equality.</para>
      </summary>
      <param name="x">A <see cref="T:System.Data.SqlTypes.SqlBoolean" />. </param>
      <param name=" y">A <see cref="T:System.Data.SqlTypes.SqlBoolean" />. </param>
      <returns>
   A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the two instances are not
   equal or <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> if the two instances are equal.
   If either instance of <see cref="T:System.Data.SqlTypes.SqlBoolean" /> is null, the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of the <see cref="T:System.Data.SqlTypes.SqlBoolean" />
   will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> .
</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.OnesComplement(System.Data.SqlTypes.SqlBoolean)">
      <summary>
        <para>Performs a one's complement operation on the supplied 
   <see cref="T:System.Data.SqlTypes.SqlBoolean" /> structures.</para>
      </summary>
      <param name="x">A <see langword="SqlBoolean" /> structure.</param>
      <returns>
        <para>The one's complement of the supplied <see cref="T:System.Data.SqlTypes.SqlBoolean" /> .</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.And(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary>
        <para>Computes the bitwise AND of two specified <see cref="T:System.Data.SqlTypes.SqlBoolean" /> structures.</para>
      </summary>
      <param name="x">A <see langword="SqlBoolean" /> structure.</param>
      <param name=" y">A <see langword="SqlBoolean" /> structure.</param>
      <returns>
        <para>The result of the logical AND operation.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.Or(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary>
        <para>Performs a bitwise OR operation on the two specified 
   <see cref="T:System.Data.SqlTypes.SqlBoolean" /> structures.</para>
      </summary>
      <param name="x">A <see langword="SqlBoolean" /> structure.</param>
      <param name=" y">A <see langword="SqlBoolean" /> structure.</param>
      <returns>
        <para>A new <see langword="SqlBoolean" /> structure whose Value is the result of the 
   bitwise OR operation.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.Xor(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary>
        <para>Performs a bitwise exclusive-OR operation on the
      supplied parameters.</para>
      </summary>
      <param name="x">A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> structure.</param>
      <param name=" y">A <see langword="SqlBoolean" /> structure.</param>
      <returns>
        <para>The results of the logical XOR operation.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.Equals(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary>
        <para> Compares two <see cref="T:System.Data.SqlTypes.SqlBoolean" /> structures to determine if they are equal.</para>
      </summary>
      <param name="x">A <see langword="SqlBoolean" /> structure.</param>
      <param name=" y">A <see langword="SqlBoolean" /> structure.</param>
      <returns>
        <para>A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the two 
   instances are equal or <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> if the two instances are not
   equal. If either instance of <see cref="T:System.Data.SqlTypes.SqlBoolean" /> is null, the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of the <see cref="T:System.Data.SqlTypes.SqlBoolean" />
   will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> .</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.NotEquals(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
      <summary>
        <para>Compares two instances of <see cref="T:System.Data.SqlTypes.SqlBoolean" /> for equality.</para>
      </summary>
      <param name="x">A <see langword="SqlBoolean" /> structure.</param>
      <param name=" y">A <see langword="SqlBoolean" /> structure.</param>
      <returns>
   A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the two instances are not
   equal or <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> if the two instances are equal.
   If either instance of <see cref="T:System.Data.SqlTypes.SqlBoolean" /> is null, the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of the <see cref="T:System.Data.SqlTypes.SqlBoolean" />
   will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> .
</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.ToSqlByte">
      <summary>
        <para>Converts this <see cref="T:System.Data.SqlTypes.SqlBoolean" /> structure to <see cref="T:System.Data.SqlTypes.SqlByte" /> .</para>
      </summary>
      <returns>
        <para>A <see langword="SqlByte" /> structure whose
<see langword="Value" /> equals the <see langword="Value" /> of this 
<see langword="SqlBoolean" /> structure. If the 
<see langword="SqlBoolean" /> structure's Value 
   is <see langword="true" />, then the <see langword="SqlByte" /> structure's
<see langword="Value" /> will be 1, otherwise the <see langword="SqlByte" /> 
structure's <see langword="Value" /> will be 0.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.ToSqlDouble">
      <summary>
        <para>Converts this <see cref="T:System.Data.SqlTypes.SqlBoolean" /> structure to <see cref="T:System.Data.SqlTypes.SqlDouble" /> .</para>
      </summary>
      <returns>
        <para>A new <see langword="SqlDouble" />
structure whose <see langword="Value" />
equals 1 if the <see langword="SqlBoolean" /> structure's Value was
<see langword="true" />; otherwise the <see langword="Value" /> of the 
new <see langword="SqlDouble" /> structure is 0.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.ToSqlInt16">
      <summary>
        <para>Converts this <see cref="T:System.Data.SqlTypes.SqlBoolean" /> structure to <see cref="T:System.Data.SqlTypes.SqlInt16" /> .</para>
      </summary>
      <returns>
        <para>A new <see langword="SqlInt16" /> structure whose
<see langword="Value" /> equals 1 if the 
<see langword="SqlBoolean" /> structure's <see langword="Value " /> was <see langword="true" />, 
   otherwise the <see langword="Value" /> of the new <see langword="SqlInt16" />
   structure is 0.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.ToSqlInt32">
      <summary>
        <para>Converts this <see cref="T:System.Data.SqlTypes.SqlBoolean" /> structure to <see cref="T:System.Data.SqlTypes.SqlInt32" /> .</para>
      </summary>
      <returns>
        <para>A new <see langword="SqlInt32" /> structure whose <see langword="Value" /> equals 
   1 if the <see langword="SqlBoolean" /> structure's Value was
<see langword="true" />, otherwise the <see langword="Value" /> of the new 
<see langword="SqlInt32" /> structure is 0.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.ToSqlInt64">
      <summary>
        <para>Converts this <see cref="T:System.Data.SqlTypes.SqlBoolean" /> structure to <see cref="T:System.Data.SqlTypes.SqlInt64" /> .</para>
      </summary>
      <returns>
        <para>A new <see langword="SqlInt64" /> structure whose 
<see langword="Value" /> equals 1 if the <see langword="SqlBoolean" /> structure's 
   Value was <see langword="true" />, otherwise the <see langword="Value" /> of the new
<see langword="SqlInt64" /> structure is 0.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.ToSqlMoney">
      <summary>
        <para>Converts this <see cref="T:System.Data.SqlTypes.SqlBoolean" /> structure to <see cref="T:System.Data.SqlTypes.SqlMoney" /> .</para>
      </summary>
      <returns>
        <para>
          <see langword="true" /> if this structure has a value 
   of 1; <see langword="false" /> if 0; otherwise <see cref="F:System.Data.SqlTypes.SqlMoney.Null" />.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.ToSqlDecimal">
      <summary>
        <para>Converts this <see cref="T:System.Data.SqlTypes.SqlBoolean" /> structure to <see cref="T:System.Data.SqlTypes.SqlDecimal" /> .</para>
      </summary>
      <returns>
        <para>A new <see langword="SqlDecimal" /> structure whose <see langword="Value" /> 
equals 1 if the <see langword="SqlBoolean" /> structure's Value was
<see langword="true" />, otherwise the <see langword="Value" /> of the new 
<see langword="SqlDecimal" /> structure is 0.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.ToSqlSingle">
      <summary>
        <para>Converts this <see cref="T:System.Data.SqlTypes.SqlBoolean" /> structure to <see cref="T:System.Data.SqlTypes.SqlSingle" /> .</para>
      </summary>
      <returns>
        <para>
          <see langword="true" />
if the <see langword="SqlBoolean" /> structure's <see langword="Value" /> is 1;
otherwise <see langword="false" /> .</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.ToSqlString">
      <summary>
        <para>Converts this <see cref="T:System.Data.SqlTypes.SqlBoolean" /> structure to <see cref="T:System.Data.SqlTypes.SqlString" /> .</para>
      </summary>
      <returns>
        <para>A new <see langword="SqlString" /> structure whose 
<see langword="Value" /> equals 1 if the <see langword="SqlBoolean" /> structure's 
   Value was <see langword="true" />, otherwise the <see langword="Value" /> of the new
<see langword="SqlDouble" /> structure is 0.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.CompareTo(System.Object)">
      <summary>
        <para>Compares this <see cref="T:System.Data.SqlTypes.SqlBoolean" /> structure to a specified object and returns
   an indication of their relative values.</para>
      </summary>
      <param name="value">An object to compare, or a null reference (<see langword="Nothing" />in Visual Basic).</param>
      <returns>
        <para>A signed number indicating the relative values of the instance and value.</para>
        <list type="table">
          <listheader>
            <term>Value</term>
            <description>Description</description>
          </listheader>
          <item>
            <term> A negative integer</term>
            <description>This instance is less than
         <paramref name="value" />.</description>
          </item>
          <item>
            <term> Zero</term>
            <description>This instance is equal to <paramref name="value" />.</description>
          </item>
          <item>
            <term> A positive integer</term>
            <description>
              <para>This instance is greater than <paramref name="value" />.</para>
              <para>-or-</para>
              <para>
                <paramref name="value" /> is a null reference
      (<see langword="Nothing" />).</para>
            </description>
          </item>
        </list>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.Equals(System.Object)">
      <summary>
        <para>Compares the supplied object parameter to the <see cref="T:System.Data.SqlTypes.SqlBoolean" /> .</para>
      </summary>
      <param name="value">The object to be compared.</param>
      <returns>
        <see langword="true " />if object is an instance of <see cref="T:System.Data.SqlTypes.SqlBoolean" /> and the two are equal;
   otherwise <see langword="false" />.
</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlBoolean.GetHashCode">
      <summary>
        <para>Returns the hash code for this instance.</para>
      </summary>
      <returns>
        <para>A 32-bit signed integer hash code.</para>
      </returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlBoolean.True">
      <summary>
        <para> Represents a true value that can be assigned to the
   <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> property of an instance of
      the <see cref="T:System.Data.SqlTypes.SqlBoolean" /> structure.
      </para>
      </summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlBoolean.False">
      <summary>
        <para> Represents a false value that can be assigned to the
   <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> property of an instance of
      the <see cref="T:System.Data.SqlTypes.SqlBoolean" /> structure.
      </para>
      </summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlBoolean.Null">
      <summary>
        <para> Represents a null value that can be assigned to the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> property of an instance of
   the <see cref="T:System.Data.SqlTypes.SqlBoolean" /> structure.
   </para>
      </summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlBoolean.Zero">
      <summary>
        <para>Represents a zero value that can be assigned to the 
   <see cref="P:System.Data.SqlTypes.SqlBoolean.ByteValue" /> property of an instance of the 
   <see cref="T:System.Data.SqlTypes.SqlBoolean" /> structure.</para>
      </summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlBoolean.One">
      <summary>
        <para>Represents a one value that can be assigned to the 
   <see cref="P:System.Data.SqlTypes.SqlBoolean.ByteValue" /> property of an instance of the 
   <see cref="T:System.Data.SqlTypes.SqlBoolean" /> structure.</para>
      </summary>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBoolean.IsNull">
      <summary>
        <para>Indicates whether or not the value of the <see cref="T:System.Data.SqlTypes.SqlBoolean" /> structure is null.</para>
      </summary>
      <summary>
        <para>Indicates whether the current <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> is <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</para>
      </summary>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBoolean.Value">
      <summary>
        <para> Gets the <see cref="T:System.Data.SqlTypes.SqlBoolean" /> structure's value. This property is
   read-only.</para>
      </summary>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBoolean.IsTrue">
      <summary>
        <para>Indicates whether the current <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> is <see cref="F:System.Data.SqlTypes.SqlBoolean.True" />.</para>
      </summary>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBoolean.IsFalse">
      <summary>
        <para>Indicates whether the current <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> is <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />.</para>
      </summary>
    </member>
    <member name="P:System.Data.SqlTypes.SqlBoolean.ByteValue">
      <summary>
        <para> Gets the value of the <see cref="T:System.Data.SqlTypes.SqlBoolean" />
structure as a byte.</para>
      </summary>
    </member>
    <member name="T:System.Data.SqlTypes.SqlByte">
      <summary>
        <para> Represents an 8-bit unsigned integer, in the range of 0 through 255, to be stored in
      or retrieved from a database.
      </para>
      </summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.#ctor(System.Byte)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.SqlTypes.SqlByte" /> structure using 
   the specified byte value.</para>
      </summary>
      <param name="value">A byte value to be stored in the <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> property of the new <see langword="SqlByte" /> structure.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Implicit(System.Byte)~System.Data.SqlTypes.SqlByte">
      <summary>
        <para>Converts the supplied byte value to a <see cref="T:System.Data.SqlTypes.SqlByte" /> .</para>
      </summary>
      <param name="x">A byte value to be converted to <see langword="SqlByte" />.</param>
      <returns>
        <para>A <see langword="SqlByte" /> structure whose <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> property is equal to the supplied parameter.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlByte)~System.Byte">
      <summary>
        <para>Converts the supplied <see cref="T:System.Data.SqlTypes.SqlByte" />
structure to a byte.</para>
      </summary>
      <param name="x">The <see langword="SqlByte" /> structure to be converted to a byte.</param>
      <returns>
        <para>A byte whose value equals the <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> property of 
   the <see langword="SqlByte" /> parameter.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.ToString">
      <summary>
        <para>Converts this <see cref="T:System.Data.SqlTypes.SqlByte" /> structure to a <see cref="T:System.String" /> .</para>
      </summary>
      <returns>
        <para>A string containing the <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> of
   the <see langword="SqlByte" /> . If the <see langword="Value" /> is null,
   the <see langword="String" /> will be a null string.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.Parse(System.String)">
      <summary>
        <para>Converts the <see cref="T:System.String" /> representation of a number to its 8-bit unsigned 
   integer equivalent.</para>
      </summary>
      <param name="s">The <see langword="String" /> to be parsed.</param>
      <returns>
        <para>A <see langword="SqlByte" /> structure containing the 
   8-bit number represented by the <see langword="String" /> parameter.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_OnesComplement(System.Data.SqlTypes.SqlByte)">
      <summary>
        <para>The ones complement operator performs a bitwise one's complement operation
      on its <see cref="T:System.Data.SqlTypes.SqlByte" /> operand.</para>
      </summary>
      <param name="x">A <see langword="SqlByte" /> structure.</param>
      <returns>
        <para>A <see langword="SqlByte" /> structure whose <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> property contains the ones
   complement of the <see langword="SqlByte" /> parameter.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Addition(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>
        <para> Computes the sum of the two specified <see cref="T:System.Data.SqlTypes.SqlByte" /> structures.</para>
      </summary>
      <param name="x">A <see langword="SqlByte" /> structure.</param>
      <param name=" y">A <see langword="SqlByte" /> structure.</param>
      <returns>
        <para>A <see langword="SqlByte" />
whose <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> property
contains the sum of the two operands.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Subtraction(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>
        <para> Subtracts the
      second <see cref="T:System.Data.SqlTypes.SqlByte" /> operand from the first.</para>
      </summary>
      <param name="x">A <see langword="SqlByte" /> structure.</param>
      <param name=" y">A <see langword="SqlByte" /> structure.</param>
      <returns>
        <para>The results of subtracting the
      second <see langword="SqlByte" /> operand from the
      first.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Multiply(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>
        <para> Computes the product of the two <see cref="T:System.Data.SqlTypes.SqlByte" /> operands.</para>
      </summary>
      <param name="x">A <see langword="SqlByte" /> structure.</param>
      <param name=" y">A <see langword="SqlByte" /> structure.</param>
      <returns>
        <para>A new <see langword="SqlByte" /> structure whose <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> property contains the product of
   the multiplication.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Division(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>
        <para> Divides its first <see cref="T:System.Data.SqlTypes.SqlByte" /> operand by its second.</para>
      </summary>
      <param name="x">A <see langword="SqlByte" /> structure.</param>
      <param name=" y">A <see langword="SqlByte" /> structure.</param>
      <returns>
        <para>A new <see langword="SqlByte" /> structure whose <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> property contains the results of the
   division.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Modulus(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>
        <para> Computes the remainder after
      dividing its first <see cref="T:System.Data.SqlTypes.SqlByte" /> operand by its second.</para>
      </summary>
      <param name="x">A <see langword="SqlByte" /> structure.</param>
      <param name=" y">A <see langword="SqlByte" /> structure.</param>
      <returns>
        <para>A <see langword="SqlByte" /> structure whose <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> contains the remainder.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_BitwiseAnd(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>
        <para>Computes the bitwise AND of its <see cref="T:System.Data.SqlTypes.SqlByte" /> operands.</para>
      </summary>
      <param name="x">A <see langword="SqlByte" /> structure.</param>
      <param name=" y">A <see langword="SqlByte" /> structure.</param>
      <returns>
        <para>The results of the bitwise AND operation.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_BitwiseOr(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>
        <para>Computes the bitwise OR of its two <see cref="T:System.Data.SqlTypes.SqlByte" /> operands.</para>
      </summary>
      <param name="x">A <see langword="SqlByte" /> structure.</param>
      <param name=" y">A <see langword="SqlByte" /> structure.</param>
      <returns>
        <para>The results of the bitwise OR operation.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_ExclusiveOr(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>
        <para>Performs a bitwise exclusive-OR operation on the
      supplied parameters.</para>
      </summary>
      <param name="x">A <see langword="SqlByte" /> structure.</param>
      <param name=" y">A <see langword="SqlByte" /> structure.</param>
      <returns>
        <para>The results of the bitwise XOR operation.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlBoolean)~System.Data.SqlTypes.SqlByte">
      <summary>
        <para>Converts the <see cref="T:System.Data.SqlTypes.SqlBoolean" /> parameter to a <see cref="T:System.Data.SqlTypes.SqlByte" /> .</para>
      </summary>
      <param name="x">The <see langword="SqlBoolean" /> parameter to be converted to a <see langword="SqlByte" />.</param>
      <returns>
        <para>A <see langword="SqlByte" /> whose <see cref="P:System.Data.SqlTypes.SqlByte.Value" />
property equals the <see cref="P:System.Data.SqlTypes.SqlBoolean.ByteValue" /> of the supplied <see langword="SqlBoolean" />
parameter.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlMoney)~System.Data.SqlTypes.SqlByte">
      <summary>
        <para>Converts the <see cref="T:System.Data.SqlTypes.SqlMoney" /> parameter to a <see cref="T:System.Data.SqlTypes.SqlByte" /> .</para>
      </summary>
      <param name="x">A <see langword="SqlMoney" /> structure.</param>
      <returns>
        <para>A <see langword="SqlByte" /> structure whose <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> property is equal to the <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> of
   the <see langword="SqlMoney" /> parameter.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlInt16)~System.Data.SqlTypes.SqlByte">
      <summary>
        <para>Converts the <see cref="T:System.Data.SqlTypes.SqlInt16" /> parameter to a <see cref="T:System.Data.SqlTypes.SqlByte" /> .</para>
      </summary>
      <param name="x">A <see langword="SqlInt16" /> structure.</param>
      <returns>
        <para>A <see langword="SqlByte" /> structure whose <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> property is equal to the <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> of
   the <see langword="SqlInt16" />
   parameter.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlInt32)~System.Data.SqlTypes.SqlByte">
      <summary>
        <para>Converts the supplied <see cref="T:System.Data.SqlTypes.SqlInt32" />
to <see cref="T:System.Data.SqlTypes.SqlByte" /> .</para>
      </summary>
      <param name="x">A <see langword="SqlInt32" /> structure.</param>
      <returns>
        <para>A <see langword="SqlByte" /> structure whose <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> property is equal to the <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> of
   the <see langword="SqlInt32" />
   parameter.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlInt64)~System.Data.SqlTypes.SqlByte">
      <summary>
        <para>Converts the supplied <see cref="T:System.Data.SqlTypes.SqlInt64" />
to <see cref="T:System.Data.SqlTypes.SqlByte" /> .</para>
      </summary>
      <param name="x">A <see langword="SqlInt64" /> structure.</param>
      <returns>
        <para>A <see langword="SqlByte" /> structure whose <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> property is equal to the <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> of
   the <see langword="SqlInt64" />
   parameter.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlSingle)~System.Data.SqlTypes.SqlByte">
      <summary>
        <para>Converts the supplied <see cref="T:System.Data.SqlTypes.SqlSingle" />
structure to <see cref="T:System.Data.SqlTypes.SqlByte" /> .</para>
      </summary>
      <param name="x">A <see langword="SqlSingle" /> structure.</param>
      <returns>
        <para>A <see langword="SqlByte" /> structure whose <see cref="P:System.Data.SqlTypes.SqlByte.Value" />
property is equal to the <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> of
the <see langword="SqlSingle" />
parameter.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlDouble)~System.Data.SqlTypes.SqlByte">
      <summary>
        <para>Converts the supplied <see cref="T:System.Data.SqlTypes.SqlDouble" />
to <see cref="T:System.Data.SqlTypes.SqlByte" /> .</para>
      </summary>
      <param name="x">A <see langword="SqlDouble" /> structure.</param>
      <returns>
        <para>A <see langword="SqlByte" /> structure whose <see cref="P:System.Data.SqlTypes.SqlByte.Value" />
property is equal to the <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> of
the <see langword="Double" /> parameter.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlDecimal)~System.Data.SqlTypes.SqlByte">
      <summary>
        <para>Converts the supplied <see cref="T:System.Data.SqlTypes.SqlDecimal" />
to <see cref="T:System.Data.SqlTypes.SqlByte" /> .</para>
      </summary>
      <param name="x">A <see langword="SqlDecimal" /> structure.</param>
      <returns>
        <para>A <see langword="SqlByte" /> structure whose <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> property is equal to the <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> of
   the <see langword="Decimal" />
   parameter.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlByte">
      <summary>
        <para>Converts the supplied <see cref="T:System.Data.SqlTypes.SqlString" />
to <see cref="T:System.Data.SqlTypes.SqlByte" /> .</para>
      </summary>
      <param name="x">An instance of the <see langword="SqlString" /> class.</param>
      <returns>
        <para>A <see langword="SqlByte" /> structure whose <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> property is equal to the numeric
   value represented by the <see langword="SqlString" /> .</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Equality(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>
        <para>Performs a logical comparison of two <see cref="T:System.Data.SqlTypes.SqlByte" />
structures to determine if they are equal.</para>
      </summary>
      <param name="x">A <see langword="SqlByte" /> structure.</param>
      <param name=" y">A <see langword="SqlByte" /> structure.</param>
      <returns>
        <para>A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the two
   instances are equal or <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> if the two instances are not
   equal. If either instance of <see langword="SqlByte" /> is null, the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of
   the <see langword="SqlBoolean" />
   will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> .</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_Inequality(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>
        <para>Compares two instances of <see cref="T:System.Data.SqlTypes.SqlByte" /> for equality.</para>
      </summary>
      <param name="x">A <see langword="SqlByte" /> structure.</param>
      <param name=" y">A <see langword="SqlByte" /> structure.</param>
      <returns>
        <para>A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the two
   instances are not equal or <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> if the two instances are equal.
   If either instance of <see langword="SqlByte" /> is null, the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of
   the <see langword="SqlBoolean" />
   will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />. </para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_LessThan(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>
        <para>Compares two instances of <see cref="T:System.Data.SqlTypes.SqlByte" /> to determine if the first is less than the second.</para>
      </summary>
      <param name="x">A <see langword="SqlByte" /> structure.</param>
      <param name=" y">A <see langword="SqlByte" /> structure.</param>
      <returns>
        <para>A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is
<see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if 
   the first instance is less than the second instance, otherwise <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> . If either instance
   of <see langword="SqlByte" /> is null, the
<see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of 
   the <see langword="SqlBoolean" /> will be
<see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_GreaterThan(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>
        <para>Compares two instances of <see cref="T:System.Data.SqlTypes.SqlByte" /> to
   determine if the first is greater than the second.</para>
      </summary>
      <param name="x">A <see langword="SqlByte" /> structure.</param>
      <param name=" y">A <see langword="SqlByte" /> structure.</param>
      <returns>
        <para>A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the first
   instance is greater than the second instance, otherwise <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. If either instance
   of <see langword="SqlByte" /> is
   null, the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of
   the <see langword="SqlBoolean" />
   will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_LessThanOrEqual(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>
        <para>Compares two instances of <see cref="T:System.Data.SqlTypes.SqlByte" /> to
   determine if the first is less than or equal to the second.</para>
      </summary>
      <param name="x">A <see langword="SqlByte" /> structure.</param>
      <param name=" y">A <see langword="SqlByte" /> structure.</param>
      <returns>
        <para>A<see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is<see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if
   the first instance is less than or equal to the second instance, otherwise <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. If
   either instance of <see langword="SqlByte" /> is null, the<see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of
   the <see langword="SqlBoolean" /> will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />. </para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>
        <para>Compares two instances of <see cref="T:System.Data.SqlTypes.SqlByte" /> to
   determine if the first is greater than or equal to the second.</para>
      </summary>
      <param name="x">A <see cref="T:System.Data.SqlTypes.SqlByte" /> structure.</param>
      <param name=" y">A <see cref="T:System.Data.SqlTypes.SqlByte" /> structure.</param>
      <returns>
        <para>A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the first
   instance is greaater than or equal to the second instance, otherwise <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. If
   either instance of <see langword="SqlByte" /> is
   null, the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of
   the <see langword="SqlBoolean" />
   will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> .</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.OnesComplement(System.Data.SqlTypes.SqlByte)">
      <summary>
        <para>The ones complement operator performs a
      bitwise one's complement operation on its <see cref="T:System.Data.SqlTypes.SqlByte" /> operand.</para>
      </summary>
      <param name="x">A <see langword="SqlByte" /> structure.</param>
      <returns>
        <para>A <see langword="SqlByte" /> structure whose <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> property contains 
   the ones complement of the <see langword="SqlByte" /> parameter.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.Add(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>
        <para>Computes the sum of the two specified <see cref="T:System.Data.SqlTypes.SqlByte" /> structures.</para>
      </summary>
      <param name="x">A <see langword="SqlByte" /> structure.</param>
      <param name=" y">A <see langword="SqlByte" /> structure.</param>
      <returns>
        <para>A <see langword="SqlByte" /> structure whose <see langword="Value" /> property 
   contains the results of the addition.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.Subtract(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>
        <para>Subtracts the second <see cref="T:System.Data.SqlTypes.SqlByte" /> operand from the first.</para>
      </summary>
      <param name="x">A <see langword="SqlByte" /> structure.</param>
      <param name=" y">A <see langword="SqlByte" /> structure.</param>
      <returns>
        <para>The results of subtracting the second <see langword="SqlByte" /> operand from 
   the first.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.Multiply(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>
        <para>Computes the product of the two <see cref="T:System.Data.SqlTypes.SqlByte" /> operands.</para>
      </summary>
      <param name="x">A <see langword="SqlByte" /> structure.</param>
      <param name=" y">A <see langword="SqlByte" /> structure.</param>
      <returns>
        <para>A new <see langword="SqlByte" /> structure whose <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> property contains the product of 
   the multiplication.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.Divide(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>
        <para>Divides its first <see cref="T:System.Data.SqlTypes.SqlByte" /> operand by its second.</para>
      </summary>
      <param name="x">A SqlByte structure.</param>
      <param name=" y">A SqlByte structure.</param>
      <returns>
   A new <see langword="SqlByte" />
   structure whose <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> property contains the results of
   the division.
</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.Mod(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>
        <para>Computes the remainder after dividing its first <see cref="T:System.Data.SqlTypes.SqlByte" /> 
operand by its second.</para>
      </summary>
      <param name="x">A <see langword="SqlByte" /> structure.</param>
      <param name=" y">A <see langword="SqlByte" /> structure.</param>
      <returns>
   A <see langword="SqlByte" /> structure
   whose <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> contains the remainder.
</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.BitwiseAnd(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>
        <para>Computes the bitwise AND of its <see cref="T:System.Data.SqlTypes.SqlByte" /> operands.</para>
      </summary>
      <param name="x">A <see langword="SqlByte" /> structure.</param>
      <param name=" y">A <see langword="SqlByte" /> structure.</param>
      <returns>
        <para>The results of the bitwise AND operation.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.BitwiseOr(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>
        <para>Computes the bitwise OR of its two <see cref="T:System.Data.SqlTypes.SqlByte" /> operands.</para>
      </summary>
      <param name="x">A <see langword="SqlByte" /> structure.</param>
      <param name=" y">A <see langword="SqlByte" /> structure.</param>
      <returns>
        <para>The results of the bitwise OR operation.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.Xor(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>
        <para>Performs a bitwise exclusive-OR operation on the
      supplied parameters.</para>
      </summary>
      <param name="x">A <see cref="T:System.Data.SqlTypes.SqlByte" /> structure.</param>
      <param name=" y">A <see langword="SqlByte" /> structure.</param>
      <returns>
        <para>The results of the XOR operation.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.Equals(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>
        <para>Performs a logical comparison of two <see cref="T:System.Data.SqlTypes.SqlByte" /> structures to determine 
   if they are equal.</para>
      </summary>
      <param name="x">A <see langword="SqlByte" /> structure.</param>
      <param name=" y">A <see langword="SqlByte" /> structure.</param>
      <returns>
   A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the two instances are equal
   or <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> if
   the two instances are not equal. If either instance
   of <see langword="SqlByte" /> is null, the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of
   the <see langword="SqlBoolean" /> will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> .
</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.NotEquals(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>
        <para>Compares two instances of <see cref="T:System.Data.SqlTypes.SqlByte" /> for equality.</para>
      </summary>
      <param name="x">A <see langword="SqlByte" /> structure.</param>
      <param name=" y">A <see langword="SqlByte" /> structure.</param>
      <returns>
   A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the two instances are not
   equal or <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> if
   the two instances are equal. If either instance of <see langword="SqlByte" />
   is null, the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of
   the <see langword="SqlBoolean" /> will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.
</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.LessThan(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>
        <para>Compares two instances of <see cref="T:System.Data.SqlTypes.SqlByte" /> to determine if the first 
   is less than the second.</para>
      </summary>
      <param name="x">A <see langword="SqlByte" /> structure.</param>
      <param name=" y">A <see langword="SqlByte" /> structure.</param>
      <returns>
   A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the first instance is less
   than the second instance, otherwise <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> . If either
   instance of <see langword="SqlByte" /> is null, the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of
   the <see langword="SqlBoolean" /> will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.
</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.GreaterThan(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>
        <para>Compares two instances of <see cref="T:System.Data.SqlTypes.SqlByte" /> to determine if the first 
   is greater than the second.</para>
      </summary>
      <param name="x">A <see langword="SqlByte" /> structure.</param>
      <param name=" y">A <see langword="SqlByte" /> structure.</param>
      <returns>
        <para>A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the first 
   instance is greater than the second instance, otherwise <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. If either instance
   of <see langword="SqlByte" /> is
   null, the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of
   the <see langword="SqlBoolean" />
   will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.LessThanOrEqual(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>
        <para>Compares two instances of <see cref="T:System.Data.SqlTypes.SqlByte" /> to
   determine if the first is less than or equal to the second.</para>
      </summary>
      <param name="x">A <see langword="SqlByte" /> structure.</param>
      <param name=" y">A <see langword="SqlByte" /> structure.</param>
      <returns>
   A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is<see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the first instance is less
   than or equal to the second instance, otherwise <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. If either
   instance of <see langword="SqlByte" /> is null, the<see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of the
<see langword="SqlBoolean" /> will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.
</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.GreaterThanOrEqual(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
      <summary>
        <para>Compares two <see langword="SqlByte" /> structures to 
   determine if the first is greater than or equal to the second.</para>
      </summary>
      <param name="x">A <see langword="SqlByte" /> structure.</param>
      <param name=" y">A <see langword="SqlByte" /> structure.</param>
      <returns>
        <para>A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the first 
   instance is greaater than or equal to the second instance, otherwise <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. If either instance of
<see langword="SqlByte" /> is null, the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of the 
<see langword="SqlBoolean" /> will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> .</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.ToSqlBoolean">
      <summary>
        <para>Converts this <see cref="T:System.Data.SqlTypes.SqlByte" /> structure to <see cref="T:System.Data.SqlTypes.SqlBoolean" /> .</para>
      </summary>
      <returns>
        <para>
          <see langword="true" /> if the <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> is non-zero; 
<see langword="false" /> 
if zero; otherwise Null.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.ToSqlDouble">
      <summary>
        <para>Converts this <see cref="T:System.Data.SqlTypes.SqlByte" /> structure to <see cref="T:System.Data.SqlTypes.SqlDouble" />.</para>
      </summary>
      <returns>
        <para>A <see langword="SqlDouble" /> structure with the 
   same value as this <see langword="SqlByte" /> .</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.ToSqlInt16">
      <summary>
        <para>Converts this SqlByte structure to <see cref="T:System.Data.SqlTypes.SqlInt16" /> .</para>
      </summary>
      <returns>
        <para>A <see langword="SqlInt16" /> structure with the same 
   value as this <see langword="SqlByte" /> .</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.ToSqlInt32">
      <summary>
        <para>Converts this <see cref="T:System.Data.SqlTypes.SqlByte" /> to <see cref="T:System.Data.SqlTypes.SqlInt32" /> .</para>
      </summary>
      <returns>
   A <see langword="SqlInt32" />
   structure with the same value as this <see langword="SqlByte" />.
</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.ToSqlInt64">
      <summary>
        <para>Converts this <see cref="T:System.Data.SqlTypes.SqlByte" /> structure to <see cref="T:System.Data.SqlTypes.SqlInt64" /> .</para>
      </summary>
      <returns>
        <para>A <see langword="SqlInt64" /> structure 
   who <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> equals the <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> of this
<see langword="SqlByte" /> .</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.ToSqlMoney">
      <summary>
        <para>Converts this <see cref="T:System.Data.SqlTypes.SqlByte" /> structure to <see cref="T:System.Data.SqlTypes.SqlMoney" /> .</para>
      </summary>
      <returns>
        <para>A <see langword="SqlMoney" /> structure whose <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> equals the <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> of 
   this <see langword="SqlByte" /> structure.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.ToSqlDecimal">
      <summary>
        <para>Converts this <see cref="T:System.Data.SqlTypes.SqlByte" /> structure to <see cref="T:System.Data.SqlTypes.SqlDecimal" /> .</para>
      </summary>
      <returns>
        <para>A <see langword="SqlDecimal" /> structure 
   whose <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> equals the <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> of
   this <see langword="SqlByte" /> structure.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.ToSqlSingle">
      <summary>
        <para>Converts this <see cref="T:System.Data.SqlTypes.SqlByte" /> structure to <see cref="T:System.Data.SqlTypes.SqlSingle" /> .</para>
      </summary>
      <returns>
        <para>A <see langword="SqlSingle" /> structure that has the 
   same <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> as
   this <see langword="SqlByte" /> structure.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.ToSqlString">
      <summary>
        <para>Converts this instance of <see cref="T:System.Data.SqlTypes.SqlByte" /> to 
<see cref="T:System.Data.SqlTypes.SqlString" /> .</para>
      </summary>
      <returns>
        <para>A <see langword="SqlString" /> containing the string 
   representation of the <see langword="SqlByte" /> structure's <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> .</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.CompareTo(System.Object)">
      <summary>
        <para>Compares this instance to the supplied object and 
      returns an indication of their relative values.</para>
      </summary>
      <param name="value">The object to be compared.</param>
      <returns>
        <para>A signed number indicating the relative values of the instance and the 
      object.</para>
        <list type="table">
          <listheader>
            <term>Return Value</term>
            <description>Condition</description>
          </listheader>
          <item>
            <term> Less than zero</term>
            <description>This instance is less than 
            object.</description>
          </item>
          <item>
            <term> Zero</term>
            <description>This instance is the same as 
            object.</description>
          </item>
          <item>
            <term> Greater than zero</term>
            <description>
              <para>This instance is greater than object</para>
              <para>-or-</para>
              <para>object is a null reference 
               (<see langword="Nothing" />)</para>
            </description>
          </item>
        </list>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.Equals(System.Object)">
      <summary>
        <para>Compares the supplied object parameter to the <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> property of the <see cref="T:System.Data.SqlTypes.SqlByte" /> object.</para>
      </summary>
      <param name="value">The object to be compared.</param>
      <returns>
        <para>
          <see langword="true " />if object is 
   an instance of <see langword="SqlByte" />
   and the two are equal; otherwise <see langword="false" />.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlByte.GetHashCode">
      <summary>
        <para>Returns the hash code for this instance.</para>
      </summary>
      <returns>
        <para>A 32-bit signed integer hash code.</para>
      </returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlByte.Null">
      <summary>
        <para>Represents a null value that can be assigned to the
   <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> property of an instance of the
   <see cref="T:System.Data.SqlTypes.SqlByte" /> structure.</para>
      </summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlByte.Zero">
      <summary>
        <para>Represents a zero value that can be assigned to the <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> property of an instance of the 
<see cref="T:System.Data.SqlTypes.SqlByte" /> structure.</para>
      </summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlByte.MinValue">
      <summary>
        <para>A constant representing the smallest possible value of a
      <see cref="T:System.Data.SqlTypes.SqlByte" /> .</para>
      </summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlByte.MaxValue">
      <summary>
        <para>A constant representing the largest possible value of a
      <see cref="T:System.Data.SqlTypes.SqlByte" /> .</para>
      </summary>
    </member>
    <member name="P:System.Data.SqlTypes.SqlByte.IsNull">
      <summary>
        <para>Indicates whether or not <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> is null.</para>
      </summary>
    </member>
    <member name="P:System.Data.SqlTypes.SqlByte.Value">
      <summary>
        <para> Gets the value of the <see cref="T:System.Data.SqlTypes.SqlByte" /> structure. This property is read-only</para>
      </summary>
    </member>
    <member name="T:System.Data.SqlTypes.SqlDateTime">
      <summary>
        <para>
       Represents the date and time data ranging in value
       from January 1, 1753 to December 31, 9999 to an accuracy of 3.33 milliseconds
       to be stored in or retrieved from a database.
    </para>
      </summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDateTime.SQLTicksPerSecond">
      <summary>
        <para>A constant whose value is the number of ticks equivalent 
      to one second.</para>
      </summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDateTime.SQLTicksPerMinute">
      <summary>
        <para>A constant whose value is the number of ticks equivalent to one minute.</para>
      </summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDateTime.SQLTicksPerHour">
      <summary>
        <para>A constant whose value is the number of ticks equivalent 
      to one hour.</para>
      </summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.#ctor(System.DateTime)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.SqlTypes.SqlDateTime" /> structure using the specified <see cref="T:System.DateTime" /> value.</para>
      </summary>
      <param name="value">A <see langword="DateTime" /> structure.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.#ctor(System.Int32,System.Int32,System.Int32)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.SqlTypes.SqlDateTime" /> structure using the supplied parameters to
   initialize the year, month, day.</para>
      </summary>
      <param name="year">An integer representing the year of the of the new <see langword="SqlDateTime" /> structure.</param>
      <param name=" month">An integer value representing the month of the new <see langword="SqlDateTime" /> structure.</param>
      <param name=" day">An integer value representing the day number of the new <see langword="SqlDateTime" /> structure.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.SqlTypes.SqlDateTime" /> structure using the supplied parameters to initialize the year, month, day,
   hour, minute, and second of the new structure.</para>
      </summary>
      <param name="year">An integer value representing the year of the new <see langword="SqlDateTime" /> structure.</param>
      <param name=" month">An integer value representing the month of the new <see langword="SqlDateTime" /> structure.</param>
      <param name=" day">An integer value representing the day of the month of the new <see langword="SqlDateTime" /> structure.</param>
      <param name=" hour">An integer value representing the hour of the new <see langword="SqlDateTime" /> structure.</param>
      <param name=" minute">An integer value representing the minute of the new <see langword="SqlDateTime" /> structure.</param>
      <param name=" second">An integer value representing the second of the new <see langword="SqlDateTime" /> structure.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Double)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.SqlTypes.SqlDateTime" /> structure using the supplied parameters to
   initialize the year, month, day, hour, minute, second, and millisecond of the new structure.</para>
      </summary>
      <param name="year">An integer value representing the year of the new <see langword="SqlDateTime" /> structure.</param>
      <param name=" month">An integer value representing the month of the new <see langword="SqlDateTime" /> structure.</param>
      <param name=" day">An integer value representing the day of the month of the new <see langword="SqlDateTime" /> structure.</param>
      <param name=" hour">An integer value representing the hour of the new <see langword="SqlDateTime" /> structure.</param>
      <param name=" minute">An integer value representing the minute of the new <see langword="SqlDateTime" /> structure.</param>
      <param name=" second">An integer value representing the second of the new <see langword="SqlDateTime" /> structure.</param>
      <param name=" millisecond">An double value representing the millisecond of the new <see langword="SqlDateTime" /> structure.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.SqlTypes.SqlDateTime" /> structure using the supplied parameters to
   initialize the year, month, day, hour, minute, second, and billisecond of the new structure.</para>
      </summary>
      <param name="year">An integer value representing the year of the new <see langword="SqlDateTime" /> structure.</param>
      <param name=" month">An integer value representing the month of the new <see langword="SqlDateTime" /> structure.</param>
      <param name=" day">An integer value representing the day of the new <see langword="SqlDateTime" /> structure.</param>
      <param name=" hour">An integer value representing the hour of the new <see langword="SqlDateTime" /> structure.</param>
      <param name=" minute">An integer value representing the minute of the new <see langword="SqlDateTime" /> structure.</param>
      <param name=" second">An integer value representing the second of the new <see langword="SqlDateTime" /> structure.</param>
      <param name=" bilisecond">An integer value representing the bilisecond (billionth of a second) of the new <see langword="SqlDateTime" /> structure.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.#ctor(System.Int32,System.Int32)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.SqlTypes.SqlDateTime" /> structure using the supplied parameters.</para>
      </summary>
      <param name="dayTicks">An integer value that represents the date as ticks.</param>
      <param name=" timeTicks">An integer value that represents the time as ticks.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.op_Implicit(System.DateTime)~System.Data.SqlTypes.SqlDateTime">
      <summary>
        <para>Converts a <see cref="T:System.DateTime" /> structure to a <see cref="T:System.Data.SqlTypes.SqlDateTime" /> structure.</para>
      </summary>
      <param name="value">A <see langword="DateTime" /> structure.</param>
      <returns>
        <para>A <see langword="SqlDateTime" /> structure
   whose <see cref="P:System.Data.SqlTypes.SqlDateTime.Value" /> is equal to the combined <see cref="P:System.DateTime.Date" /> and <see cref="P:System.DateTime.TimeOfDay" /> properties of the
   supplied <see langword="DateTime" /> structure.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.op_Explicit(System.Data.SqlTypes.SqlDateTime)~System.DateTime">
      <summary>
        <para>Converts a <see cref="T:System.Data.SqlTypes.SqlDateTime" /> structure to
   a <see cref="T:System.DateTime" /> structure.</para>
      </summary>
      <param name="x">A <see langword="SqlDateTime" /> structure.</param>
      <returns>
        <para>A <see langword="DateTime" /> object whose <see cref="P:System.DateTime.Date" /> and <see cref="P:System.DateTime.TimeOfDay" /> properties
   contain the same date and time values as
   the <see cref="P:System.Data.SqlTypes.SqlDateTime.Value" />
   property of the supplied <see langword="SqlDateTime" /> structure.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.ToString">
      <summary>
        <para> Converts this <see cref="T:System.Data.SqlTypes.SqlDateTime" /> structure to a <see cref="T:System.String" /> .</para>
      </summary>
      <returns>
        <para>A <see langword="String" /> representing the <see cref="P:System.Data.SqlTypes.SqlDateTime.Value" /> property of 
   this <see langword="SqlDateTime" /> structure.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.Parse(System.String)">
      <summary>
        <para>Converts the specified <see cref="T:System.String" /> representation of
   a date and time to its <see cref="T:System.Data.SqlTypes.SqlDateTime" />
   equivalent.</para>
      </summary>
      <param name="s">The <see langword="String" /> to be parsed.</param>
      <returns>
        <para>A <see langword="SqlDateTime" /> structure equal to the date and time 
   represented by the specified <see langword="String" />.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.op_Addition(System.Data.SqlTypes.SqlDateTime,System.TimeSpan)">
      <summary>
        <para>Adds the amount of time indicated by the 
      supplied <see cref="T:System.TimeSpan" />
      parameter, <paramref name="t" />, to the supplied <see cref="T:System.Data.SqlTypes.SqlDateTime" /> structure.</para>
      </summary>
      <param name="x">A <see langword="SqlDateTime" /> structure.</param>
      <param name=" t">A <see langword="TimeSpan" /> structure.</param>
      <returns>
        <para>A new <see langword="SqlDateTime" />. If either arguement is <see cref="F:System.Data.SqlTypes.SqlDateTime.Null" />, the new <see cref="P:System.Data.SqlTypes.SqlDateTime.Value" /> will be <see cref="F:System.Data.SqlTypes.SqlDateTime.Null" />. </para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.op_Subtraction(System.Data.SqlTypes.SqlDateTime,System.TimeSpan)">
      <summary>
        <para>Subtracts the supplied <see cref="T:System.TimeSpan" /> structure,
<paramref name="t" />, from the from the supplied <see cref="T:System.Data.SqlTypes.SqlDateTime" /> 
structure.</para>
      </summary>
      <param name="x">A <see langword="SqlDateTime" /> structure.</param>
      <param name=" t">A <see langword="TimeSpan" /> structure.</param>
      <returns>
        <para>A <see langword="SqlDateTime" /> structure representing the results of the 
   subtraction.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlDateTime">
      <summary>
        <para>Converts the supplied <see cref="T:System.Data.SqlTypes.SqlString" />
to a <see cref="T:System.Data.SqlTypes.SqlDateTime" /> structure.</para>
      </summary>
      <param name="x">A <see langword="SqlString" /> to be converted.</param>
      <returns>
        <para>A <see langword="SqlDateTime" /> structure
   whose <see cref="P:System.Data.SqlTypes.SqlDateTime.Value" /> is
   equal to the date and time represented by the <see langword="SqlString" />
   parameter. If the <see langword="SqlString" /> is null,
   the <see langword="Value" /> of the newly
   created <see langword="SqlDateTime" /> structure will be null.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.op_Equality(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)">
      <summary>
        <para>Performs a logical comparison of two <see cref="T:System.Data.SqlTypes.SqlDateTime" /> structures to determine if they are equal.</para>
      </summary>
      <param name="x">A <see langword="SqlDateTime" /> structure.</param>
      <param name=" y">A <see langword="SqlDateTime" /> structure.</param>
      <returns>
        <para>
          <see langword="true " />if the two
   values are equal, otherwise <see langword="false" /> .</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.op_Inequality(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)">
      <summary>
        <para>Performs a logical comparison of two instances
      of <see cref="T:System.Data.SqlTypes.SqlDateTime" /> to determine if they are equal.</para>
      </summary>
      <param name="x">A <see langword="SqlDateTime" /> structure.</param>
      <param name=" y">A <see langword="SqlDateTime" /> structure.</param>
      <returns>
        <para>A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the two
   instances are not equal or <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> if the two instances are equal.
   If either instance of <see langword="SqlDateTime" /> is null, the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of
   the <see langword="SqlBoolean" />
   will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />. </para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.op_LessThan(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)">
      <summary>
        <para>Compares two instances of <see cref="T:System.Data.SqlTypes.SqlDateTime" /> to determine if the first is less than the second.</para>
      </summary>
      <param name="x">A <see langword="SqlDateTime" /> structure.</param>
      <param name=" y">A <see langword="SqlDateTime" /> structure.</param>
      <returns>
        <para>A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the first
   instance is less than the second instance, otherwise <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> . If either instance
   of <see langword="SqlDateTime" /> is null, the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of
   the <see langword="SqlBoolean" />
   will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.op_GreaterThan(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)">
      <summary>
        <para>Compares two instances of <see cref="T:System.Data.SqlTypes.SqlDateTime" /> to determine if the first is greater than the second.</para>
      </summary>
      <param name="x">A <see langword="SqlDateTime" /> structure.</param>
      <param name=" y">A <see langword="SqlDateTime" /> structure.</param>
      <returns>
        <para>A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the first
   instance is greater than the second instance, otherwise <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. If either instance
   of <see langword="SqlByte" /> is
   null, the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of the <see cref="T:System.Data.SqlTypes.SqlBoolean" />
   will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.op_LessThanOrEqual(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)">
      <summary>
        <para>Compares two instances of <see cref="T:System.Data.SqlTypes.SqlDateTime" /> to determine if the first is less than or
   equal to the second.</para>
      </summary>
      <param name="x">A <see langword="SqlDateTime" /> structure.</param>
      <param name=" y">A <see langword="SqlDateTime" /> structure.</param>
      <returns>
        <para>A<see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is<see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the first
   instance is less than or equal to the second instance, otherwise<see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. If
   either instance of <see langword="SqlDateTime" /> is null, the<see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of
   the <see langword="SqlBoolean" />
   will be<see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />. </para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)">
      <summary>
        <para>Compares two instances of <see cref="T:System.Data.SqlTypes.SqlDateTime" /> to determine if the first is greater than
   or equal to the second.</para>
      </summary>
      <param name="x">A <see langword="SqlDateTime" /> structure.</param>
      <param name=" y">A <see langword="SqlDateTime" /> structure.</param>
      <returns>
        <para>A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the first
   instance is greaater than or equal to the second instance, otherwise <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. If
   either instance of <see langword="SqlDateTime" /> is null, the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of
   the <see langword="SqlBoolean" />
   will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> .</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.Equals(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)">
      <summary>
        <para>Performs a logical comparison of two <see cref="T:System.Data.SqlTypes.SqlDateTime" /> structures to determine if they are equal.</para>
      </summary>
      <param name="x">A <see cref="T:System.Data.SqlTypes.SqlDateTime" /> structure.</param>
      <param name=" y">A <see cref="T:System.Data.SqlTypes.SqlDateTime" /> structure.</param>
      <returns>
        <para>
          <see langword="true " />if the two
   values are equal, otherwise <see langword="false" /> .</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.NotEquals(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)">
      <summary>
        <para>Performs a logical comparison of two instances
      of <see cref="T:System.Data.SqlTypes.SqlDateTime" /> to determine if they are equal.</para>
      </summary>
      <param name="x">A <see langword="SqlDateTime" /> structure.</param>
      <param name=" y">A <see langword="SqlDateTime" /> structure.</param>
      <returns>
        <para>A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the two
   instances are not equal or <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> if the two instances are equal.
   If either instance of <see langword="SqlDateTime" /> is null, the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of
   the <see langword="SqlBoolean" />
   will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />. </para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.LessThan(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)">
      <summary>
        <para>Compares two instances of <see cref="T:System.Data.SqlTypes.SqlDateTime" /> to determine if the first is less than the second.</para>
      </summary>
      <param name="x">A <see langword="SqlDateTime" /> structure.</param>
      <param name=" y">A <see langword="SqlDateTime" /> structure.</param>
      <returns>
        <para>A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the first
   instance is less than the second instance, otherwise <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> . If either instance
   of <see langword="SqlDateTime" /> is null, the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of
   the <see langword="SqlBoolean" />
   will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.GreaterThan(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)">
      <summary>
        <para>Compares two instances of <see cref="T:System.Data.SqlTypes.SqlDateTime" /> to determine if the first is greater than the second.</para>
      </summary>
      <param name="x">A <see langword="SqlDateTime" /> structure.</param>
      <param name=" y">A <see langword="SqlDateTime" /> structure.</param>
      <returns>
        <para>A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the first
   instance is greater than the second instance, otherwise <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. If either instance
   of <see langword="SqlByte" /> is
   null, the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of the <see cref="T:System.Data.SqlTypes.SqlBoolean" />
   will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.LessThanOrEqual(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)">
      <summary>
        <para>Compares two instances of <see cref="T:System.Data.SqlTypes.SqlDateTime" /> to determine if the first is less than or
   equal to the second.</para>
      </summary>
      <param name="x">A <see langword="SqlDateTime" /> structure.</param>
      <param name=" y">A <see langword="SqlDateTime" /> structure.</param>
      <returns>
        <para>A<see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is<see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the first
   instance is less than or equal to the second instance, otherwise<see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. If
   either instance of <see langword="SqlDateTime" /> is null, the<see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of
   the <see langword="SqlBoolean" />
   will be<see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />. </para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.GreaterThanOrEqual(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDateTime)">
      <summary>
        <para>Compares two instances of <see cref="T:System.Data.SqlTypes.SqlDateTime" /> to determine if the first is greater than
   or equal to the second.</para>
      </summary>
      <param name="x">A <see langword="SqlDateTime" /> structure.</param>
      <param name=" y">A <see langword="SqlDateTime" /> structure.</param>
      <returns>
        <para>A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the first
   instance is greaater than or equal to the second instance, otherwise <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. If
   either instance of <see langword="SqlDateTime" /> is null, the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of
   the <see langword="SqlBoolean" />
   will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> .</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.ToSqlString">
      <summary>
        <para>Converts this <see cref="T:System.Data.SqlTypes.SqlDateTime" /> structure to <see cref="T:System.Data.SqlTypes.SqlString" /> .</para>
      </summary>
      <returns>
        <para>A <see langword="SqlString" /> structure whose value is a string representing 
   the date and time contained in this <see langword="SqlDateTime" /> structure.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.CompareTo(System.Object)">
      <summary>
        <para>Compares this <see cref="T:System.Data.SqlTypes.SqlDateTime" /> structure to the supplied object and
   returns an indication of their relative values.</para>
      </summary>
      <param name="value">The object to be compared.</param>
      <returns>
        <para>A signed number indicating the relative values of the instance and the
      object.</para>
        <list type="table">
          <listheader>
            <term>Return Value</term>
            <description>Condition</description>
          </listheader>
          <item>
            <term> Less than zero</term>
            <description>This instance is less than
            object.</description>
          </item>
          <item>
            <term> Zero</term>
            <description>This instance is the same as
            object.</description>
          </item>
          <item>
            <term> Greater than zero</term>
            <description>
              <para>This instance is greater than object</para>
              <para>-or-</para>
              <para>object is a null reference
               (<see langword="Nothing" />)</para>
            </description>
          </item>
        </list>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.Equals(System.Object)">
      <summary>
        <para>Compares the supplied object parameter to the <see cref="P:System.Data.SqlTypes.SqlDateTime.Value" /> property of the <see cref="T:System.Data.SqlTypes.SqlDateTime" /> object.</para>
      </summary>
      <param name="value">The object to be compared.</param>
      <returns>
        <para>
          <see langword="true " />if object is 
   an instance of <see langword="SqlDateTime" /> and the two are equal; otherwise
<see langword="false" />.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDateTime.GetHashCode">
      <summary>
        <para>Gets the hash code for this instance.</para>
      </summary>
      <returns>
        <para>A 32-bit signed integer hash code.</para>
      </returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDateTime.MinValue">
      <summary>
        <para>Represents the minimum valid date value for 
      a <see cref="T:System.Data.SqlTypes.SqlDateTime" /> structure.</para>
      </summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDateTime.MaxValue">
      <summary>
        <para>Represents the maximum valid date value for 
      a <see cref="T:System.Data.SqlTypes.SqlDateTime" /> structure.</para>
      </summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDateTime.Null">
      <summary>
        <para>Represents a null value that can be assigned to the 
   <see cref="P:System.Data.SqlTypes.SqlDateTime.Value" /> property of an instance of the 
   <see cref="T:System.Data.SqlTypes.SqlDateTime" /> structure.</para>
      </summary>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDateTime.IsNull">
      <summary>
        <para>Gets a value indicating whether the Value property of 
      the SqlDateTime structure is null.</para>
      </summary>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDateTime.Value">
      <summary>
        <para> Gets the value of the <see cref="T:System.Data.SqlTypes.SqlDateTime" /> structure. This property is read-only.</para>
      </summary>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDateTime.DayTicks">
      <summary>
        <para>Gets the number of ticks representing the date of
      this <see cref="T:System.Data.SqlTypes.SqlDateTime" /> structure.</para>
      </summary>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDateTime.TimeTicks">
      <summary>
        <para>Gets the number of ticks representing the time of
      this <see cref="T:System.Data.SqlTypes.SqlDateTime" /> structure.</para>
      </summary>
    </member>
    <member name="T:System.Data.SqlTypes.SqlDouble">
      <summary>
        <para>
       Represents a floating-point number within the range of
       -1.79E
       +308 through 1.79E +308 to be stored in or retrieved from
       a database.
    </para>
      </summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.#ctor(System.Double)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.SqlTypes.SqlDouble" /> structure using the supplied double
   parameter to set the new SqlDouble structure's <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> property.</para>
      </summary>
      <param name="value">A double whose value will be used for the new <see langword="SqlDouble" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Implicit(System.Double)~System.Data.SqlTypes.SqlDouble">
      <summary>
        <para>Converts the supplied double value to a <see cref="T:System.Data.SqlTypes.SqlDouble" /> .</para>
      </summary>
      <param name="x">The double value to convert.</param>
      <returns>
        <para>A <see langword="SqlDouble" /> with the same value as the specified double 
   parameter.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Explicit(System.Data.SqlTypes.SqlDouble)~System.Double">
      <summary>
        <para>Converts the supplied <see cref="T:System.Data.SqlTypes.SqlDouble" />
structure to double.</para>
      </summary>
      <param name="x">A <see langword="SqlDouble" /> structure.</param>
      <returns>
        <para>A double equivalent to the specified <see langword="SqlDouble" /> structure's 
   value.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.ToString">
      <summary>
        <para>Converts this <see cref="T:System.Data.SqlTypes.SqlDouble" /> structure to a string.</para>
      </summary>
      <returns>
        <para>A string representing the <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> of 
   this <see langword="SqlDouble" /> .</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.Parse(System.String)">
      <summary>
        <para>Converts the <see cref="T:System.String" /> representation of a number to 
   its double-precision floating point number equivalent.</para>
      </summary>
      <param name="s">The <see langword="String" /> to be parsed.</param>
      <returns>
        <para>A <see langword="SqlDouble" /> containing the value 
   represented by the <see langword="String" /> .</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_UnaryNegation(System.Data.SqlTypes.SqlDouble)">
      <summary>
        <para>Returns the negated value of the specified <see cref="T:System.Data.SqlTypes.SqlDouble" /> structure.</para>
      </summary>
      <param name="x">A <see langword="SqlDouble" /> structure.</param>
      <returns>
        <para>A <see langword="SqlDouble" /> structure containing the negated value.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Addition(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary>
        <para>The addition operator computes the sum of the two <see cref="T:System.Data.SqlTypes.SqlDouble" /> operands.</para>
      </summary>
      <param name="x">A <see langword="SqlDouble" /> structure.</param>
      <param name=" y">A <see langword="SqlDouble" /> structure.</param>
      <returns>
        <para>The sum of the two <see langword="SqlDouble" /> operands.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Subtraction(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary>
        <para>The subtraction operator the second <see cref="T:System.Data.SqlTypes.SqlDouble" />
operand from the first.</para>
      </summary>
      <param name="x">A <see langword="SqlDouble" /> structure.</param>
      <param name=" y">A <see langword="SqlDouble" /> structure.</param>
      <returns>
        <para>The results of the subtraction operation.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Multiply(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary>
        <para>The multiplication operator computes the product of the
      two <see cref="T:System.Data.SqlTypes.SqlDouble" /> operands.</para>
      </summary>
      <param name="x">A <see langword="SqlDouble" /> structure.</param>
      <param name=" y">A <see langword="SqlDouble" /> structure.</param>
      <returns>
        <para>The product of the two <see langword="SqlDouble" /> operands.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Division(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary>
        <para>The division operator divides the first <see cref="T:System.Data.SqlTypes.SqlDouble" />
operand by the second.</para>
      </summary>
      <param name="x">A <see langword="SqlDouble" /> structure.</param>
      <param name=" y">A <see langword="SqlDouble" /> structure.</param>
      <returns>
        <para>A <see langword="SqlDouble" /> structure containing the results of the division operation.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Explicit(System.Data.SqlTypes.SqlBoolean)~System.Data.SqlTypes.SqlDouble">
      <summary>
        <para>Converts the supplied <see cref="T:System.Data.SqlTypes.SqlBoolean" /> parameter to <see cref="T:System.Data.SqlTypes.SqlDouble" /> .</para>
      </summary>
      <param name="x">The <see cref="T:System.Data.SqlTypes.SqlBoolean" /> to be converted.</param>
      <returns>
        <para>A new <see cref="T:System.Data.SqlTypes.SqlDouble" /> structure
   whose <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> is either 0 or 1, depending on
   the <see cref="P:System.Data.SqlTypes.SqlBoolean.ByteValue" /> property of the <see cref="T:System.Data.SqlTypes.SqlBoolean" /> parameter. If the
<see langword="SqlBoolean" /> 
is <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />, then the
<see langword="SqlDouble" /> structure
will be <see cref="F:System.Data.SqlTypes.SqlDouble.Null" /> .</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Implicit(System.Data.SqlTypes.SqlByte)~System.Data.SqlTypes.SqlDouble">
      <summary>
        <para>Converts the supplied <see cref="T:System.Data.SqlTypes.SqlByte" />
parameter to <see cref="T:System.Data.SqlTypes.SqlDouble" /> .</para>
      </summary>
      <param name="x">A <see cref="T:System.Data.SqlTypes.SqlDouble" /> structure.</param>
      <returns>
        <para>A <see cref="T:System.Data.SqlTypes.SqlDouble" /> structure whose <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> is equal to the <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> of the <see cref="T:System.Data.SqlTypes.SqlByte" /> parameter. If 
   the <see langword="SqlByte" /> is <see cref="F:System.Data.SqlTypes.SqlByte.Null" />, then the
<see langword="SqlDouble" /> 
structure will be <see cref="F:System.Data.SqlTypes.SqlDouble.Null" />
.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Implicit(System.Data.SqlTypes.SqlInt16)~System.Data.SqlTypes.SqlDouble">
      <summary>
        <para>Converts the supplied <see cref="T:System.Data.SqlTypes.SqlInt16" />
parameter to <see cref="T:System.Data.SqlTypes.SqlDouble" /> .</para>
      </summary>
      <param name="x">A <see cref="T:System.Data.SqlTypes.SqlInt16" /> structure.</param>
      <returns>
        <para>A new <see cref="T:System.Data.SqlTypes.SqlDouble" /> structure
   whose <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> is equal to the <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> of the <see cref="T:System.Data.SqlTypes.SqlInt16" /> parameter. If
   the <see langword="SqlInt16" /> is <see cref="F:System.Data.SqlTypes.SqlInt16.Null" />, then the
<see langword="SqlDouble" /> structure will be <see cref="F:System.Data.SqlTypes.SqlDouble.Null" /> .</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Implicit(System.Data.SqlTypes.SqlInt32)~System.Data.SqlTypes.SqlDouble">
      <summary>
        <para>Converts the supplied <see cref="T:System.Data.SqlTypes.SqlInt32" />
parameter to <see cref="T:System.Data.SqlTypes.SqlDouble" /> .</para>
      </summary>
      <param name="x">A <see cref="T:System.Data.SqlTypes.SqlInt32" /> structure.</param>
      <returns>
        <para>A new <see cref="T:System.Data.SqlTypes.SqlDouble" /> whose <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> is equal to
   the <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> of the <see cref="T:System.Data.SqlTypes.SqlInt32" /> parameter. If
   the <see langword="SqlInt32" /> is <see cref="F:System.Data.SqlTypes.SqlInt32.Null" />, then the
<see langword="SqlDouble" /> structure will be <see cref="F:System.Data.SqlTypes.SqlDouble.Null" /> .</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Implicit(System.Data.SqlTypes.SqlInt64)~System.Data.SqlTypes.SqlDouble">
      <summary>
        <para>Converts the supplied <see cref="T:System.Data.SqlTypes.SqlInt64" />
parameter to <see cref="T:System.Data.SqlTypes.SqlDouble" /> .</para>
      </summary>
      <param name="x">A <see cref="T:System.Data.SqlTypes.SqlInt64" /> structure.</param>
      <returns>
        <para>A new <see cref="T:System.Data.SqlTypes.SqlDouble" /> whose <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> is equal to the <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> of the <see cref="T:System.Data.SqlTypes.SqlInt64" /> parameter. If 
   the <see langword="SqlInt64" /> is <see cref="F:System.Data.SqlTypes.SqlInt64.Null" />, then the
<see langword="SqlDouble" /> structure will be <see cref="F:System.Data.SqlTypes.SqlDouble.Null" /> .</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Implicit(System.Data.SqlTypes.SqlSingle)~System.Data.SqlTypes.SqlDouble">
      <summary>
        <para>Converts the supplied <see cref="T:System.Data.SqlTypes.SqlSingle" />
parameter to <see cref="T:System.Data.SqlTypes.SqlDouble" /> .</para>
      </summary>
      <param name="x">A <see cref="T:System.Data.SqlTypes.SqlSingle" /> structure.</param>
      <returns>
        <para>A new <see cref="T:System.Data.SqlTypes.SqlDouble" /> structure
   whose <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> is equal to the <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> of the <see cref="T:System.Data.SqlTypes.SqlSingle" /> parameter. If the
<see langword="SqlSingle" /> is <see cref="F:System.Data.SqlTypes.SqlSingle.Null" />, then the 
<see langword="SqlDouble" /> structure will be <see cref="F:System.Data.SqlTypes.SqlDouble.Null" /> .</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Implicit(System.Data.SqlTypes.SqlMoney)~System.Data.SqlTypes.SqlDouble">
      <summary>
        <para>Converts the supplied <see cref="T:System.Data.SqlTypes.SqlMoney" />
parameter to <see cref="T:System.Data.SqlTypes.SqlDouble" /> .</para>
      </summary>
      <param name="x">A <see cref="T:System.Data.SqlTypes.SqlMoney" /> structure.</param>
      <returns>
        <para>A new <see cref="T:System.Data.SqlTypes.SqlDouble" /> whose <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> is equal to the <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> of the <see cref="T:System.Data.SqlTypes.SqlMoney" /> parameter. If the 
<see langword="SqlMoney" /> is <see cref="F:System.Data.SqlTypes.SqlMoney.Null" />, then the 
<see langword="SqlDouble" /> structure will be <see cref="F:System.Data.SqlTypes.SqlDouble.Null" /> .</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Implicit(System.Data.SqlTypes.SqlDecimal)~System.Data.SqlTypes.SqlDouble">
      <summary>
        <para>Converts the supplied <see cref="T:System.Data.SqlTypes.SqlDecimal" />
parameter to <see cref="T:System.Data.SqlTypes.SqlDouble" /> .</para>
      </summary>
      <param name="x">A <see cref="T:System.Data.SqlTypes.SqlDecimal" /> structure.</param>
      <returns>
        <para>A new <see cref="T:System.Data.SqlTypes.SqlDouble" /> structure
   whose <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> is equal to the <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> of the <see cref="T:System.Data.SqlTypes.SqlDecimal" /> parameter. If the
<see langword="SqlDecimal" /> is <see cref="F:System.Data.SqlTypes.SqlDecimal.Null" />, then the 
<see langword="SqlDouble" /> structure will be <see cref="F:System.Data.SqlTypes.SqlDouble.Null" /> .</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlDouble">
      <summary>
        <para>Converts the supplied <see cref="T:System.Data.SqlTypes.SqlString" />
parameter to <see cref="T:System.Data.SqlTypes.SqlDouble" /> .</para>
      </summary>
      <param name="x">A <see langword="SqlString" /> object.</param>
      <returns>
        <para>A new <see langword="SqlDouble" /> whose <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> is equal to the value of the 
   number represented by the <see langword="SqlString" />. If the <see langword="SqlString" /> is
<see cref="F:System.Data.SqlTypes.SqlString.Null" />, then the 
<see langword="SqlDouble" /> structure will be <see cref="F:System.Data.SqlTypes.SqlDouble.Null" /> .</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Equality(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary>
        <para>Performs a logical comparison on two instances
      of <see cref="T:System.Data.SqlTypes.SqlDouble" /> to determine if they are equal.</para>
      </summary>
      <param name="x">A <see langword="SqlDouble" /> structure.</param>
      <param name="y">A <see langword="SqlDouble" /> structure.</param>
      <returns>
        <para>
          <see langword="true " />if the two values are equal, otherwise
<see langword="false" /> .</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_Inequality(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary>
        <para>Compares two instances of <see cref="T:System.Data.SqlTypes.SqlDouble" />
to determine if they are equal.</para>
      </summary>
      <param name="x">A <see langword="SqlDouble" /> structure.</param>
      <param name=" y">A <see langword="SqlDouble" /> structure.</param>
      <returns>
        <para>A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the two
   instances are not equal or <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> if the two instances are equal.
   If either instance of <see langword="SqlDouble" /> is null, the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of
   the <see langword="SqlBoolean" />
   will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> .</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_LessThan(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary>
        <para>Compares two instances of <see cref="T:System.Data.SqlTypes.SqlDouble" />
to determine if the first is less than the second.</para>
      </summary>
      <param name="x">A <see langword="SqlDouble" /> structure.</param>
      <param name=" y">A <see langword="SqlDouble" /> structure.</param>
      <returns>
        <para>A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the first
   instance is less than the second instance, otherwise <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> . If either instance
   of <see langword="SqlDouble" />
   is null, the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of
   the <see langword="SqlBoolean" />
   will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> .</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_GreaterThan(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary>
        <para>Compares two instances of <see cref="T:System.Data.SqlTypes.SqlDouble" />
to determine if the first is greater than the second.</para>
      </summary>
      <param name="x">A <see langword="SqlDouble" /> structure.</param>
      <param name=" y">A <see langword="SqlDouble" /> structure.</param>
      <returns>
        <para>A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the first
   instance is greater than the second instance, otherwise <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. If either instance
   of <see langword="SqlDouble" />
   is null, the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of
   the <see langword="SqlBoolean" />
   will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_LessThanOrEqual(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary>
        <para>Compares two instances of <see cref="T:System.Data.SqlTypes.SqlDouble" />
to determine if the first is less than or equal to the second.</para>
      </summary>
      <param name="x">A <see langword="SqlDouble" /> structure.</param>
      <param name=" y">A <see langword="SqlDouble" /> structure.</param>
      <returns>
        <para>A<see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is<see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the first
   instance is less than or equal to the second instance, otherwise<see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. If
   either instance of <see langword="SqlDouble" />
   is null, the<see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of
   the <see langword="SqlBoolean" />
   will be<see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> .</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary>
        <para>Compares two instances of <see cref="T:System.Data.SqlTypes.SqlDouble" /> 
to determine if the first is greater than or equal to the second.</para>
      </summary>
      <param name="x">A <see cref="T:System.Data.SqlTypes.SqlDouble" /> structure.</param>
      <param name=" y">A <see cref="T:System.Data.SqlTypes.SqlDouble" /> structure.</param>
      <returns>
        <para>A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the first 
   instance is greaater than or equal to the second instance, otherwise <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. If either instance of <see cref="T:System.Data.SqlTypes.SqlDouble" />
   is null, the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of the <see cref="T:System.Data.SqlTypes.SqlBoolean" />
   will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> .</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.Add(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary>
        <para>The addition operator computes the sum of the two <see cref="T:System.Data.SqlTypes.SqlDouble" /> operands.</para>
      </summary>
      <param name="x">A <see langword="SqlDouble" /> structure.</param>
      <param name=" y">A <see langword="SqlDouble" /> structure.</param>
      <returns>
        <para>The sum of the two <see langword="SqlDouble" /> operands.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.Subtract(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary>
        <para>The subtraction operator the second <see cref="T:System.Data.SqlTypes.SqlDouble" />
operand from the first.</para>
      </summary>
      <param name="x">A <see langword="SqlDouble" /> structure.</param>
      <param name=" y">A <see langword="SqlDouble" /> structure.</param>
      <returns>
        <para>The results of the subtraction operation.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.Multiply(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary>
        <para>The multiplication operator computes the product of the
      two <see cref="T:System.Data.SqlTypes.SqlDouble" /> operands.</para>
      </summary>
      <param name="x">A <see langword="SqlDouble" /> structure.</param>
      <param name=" y">A <see langword="SqlDouble" /> structure.</param>
      <returns>
        <para>The product of the two <see langword="SqlDouble" /> operands.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.Divide(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary>
        <para>The division operator divides the first <see cref="T:System.Data.SqlTypes.SqlDouble" />
operand by the second.</para>
      </summary>
      <param name="x">A <see langword="SqlDouble" /> structure.</param>
      <param name=" y">A <see langword="SqlDouble" /> structure.</param>
      <returns>
        <para>A <see langword="SqlDouble" /> structure containing the results of the division operation.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.Equals(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary>
        <para>Performs a logical comparison on two instances
      of <see cref="T:System.Data.SqlTypes.SqlDouble" /> to determine if they are equal.</para>
      </summary>
      <param name="x">A <see langword="SqlDouble" /> structure.</param>
      <param name="y">A <see langword="SqlDouble" /> structure.</param>
      <returns>
        <para>
          <see langword="true " />if the two values are equal, otherwise
<see langword="false" /> .</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.NotEquals(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary>
        <para>Compares two instances of <see cref="T:System.Data.SqlTypes.SqlDouble" />
to determine if they are equal.</para>
      </summary>
      <param name="x">A <see langword="SqlDouble" /> structure.</param>
      <param name=" y">A <see langword="SqlDouble" /> structure.</param>
      <returns>
        <para>A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the two
   instances are not equal or <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> if the two instances are equal.
   If either instance of <see langword="SqlDouble" /> is null, the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of
   the <see langword="SqlBoolean" />
   will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> .</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.LessThan(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary>
        <para>Compares two instances of <see cref="T:System.Data.SqlTypes.SqlDouble" />
to determine if the first is less than the second.</para>
      </summary>
      <param name="x">A <see langword="SqlDouble" /> structure.</param>
      <param name=" y">A <see langword="SqlDouble" /> structure.</param>
      <returns>
        <para>A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the first
   instance is less than the second instance, otherwise <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> . If either instance
   of <see langword="SqlDouble" />
   is null, the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of
   the <see langword="SqlBoolean" />
   will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> .</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.GreaterThan(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary>
        <para>Compares two instances of <see cref="T:System.Data.SqlTypes.SqlDouble" />
to determine if the first is greater than the second.</para>
      </summary>
      <param name="x">A <see langword="SqlDouble" /> structure.</param>
      <param name=" y">A <see langword="SqlDouble" /> structure.</param>
      <returns>
        <para>A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the first
   instance is greater than the second instance, otherwise <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. If either instance
   of <see langword="SqlDouble" />
   is null, the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of
   the <see langword="SqlBoolean" />
   will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.LessThanOrEqual(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary>
        <para>Compares two instances of <see cref="T:System.Data.SqlTypes.SqlDouble" />
to determine if the first is less than or equal to the second.</para>
      </summary>
      <param name="x">A <see langword="SqlDouble" /> structure.</param>
      <param name=" y">A <see langword="SqlDouble" /> structure.</param>
      <returns>
        <para>A<see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is<see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the first
   instance is less than or equal to the second instance, otherwise<see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. If
   either instance of <see langword="SqlDouble" />
   is null, the<see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of
   the <see langword="SqlBoolean" />
   will be<see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> .</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.GreaterThanOrEqual(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
      <summary>
        <para>Compares two instances of <see cref="T:System.Data.SqlTypes.SqlDouble" />
to determine if the first is greater than or equal to the second.</para>
      </summary>
      <param name="x">A <see cref="T:System.Data.SqlTypes.SqlDouble" /> structure.</param>
      <param name=" y">A <see cref="T:System.Data.SqlTypes.SqlDouble" /> structure.</param>
      <returns>
        <para>A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the first
   instance is greaater than or equal to the second instance, otherwise <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. If either instance of <see cref="T:System.Data.SqlTypes.SqlDouble" />
   is null, the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of the <see cref="T:System.Data.SqlTypes.SqlBoolean" />
   will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> .</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.ToSqlBoolean">
      <summary>
        <para>Converts this <see cref="T:System.Data.SqlTypes.SqlDouble" /> structure to <see cref="T:System.Data.SqlTypes.SqlBoolean" /> .</para>
      </summary>
      <returns>
        <para>A <see langword="SqlBoolean" /> structure 
   whose <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> will be <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if
   the <see langword="SqlDouble" /> structure's <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> is non-zero, <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> if the
<see langword="SqlDouble" /> is zero and <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> if 
   the <see langword="SqlDouble" /> structure is <see cref="F:System.Data.SqlTypes.SqlDouble.Null" /> .</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.ToSqlByte">
      <summary>
        <para>Converts this <see cref="T:System.Data.SqlTypes.SqlDouble" /> structure to <see cref="T:System.Data.SqlTypes.SqlByte" /> .</para>
      </summary>
      <returns>
        <para>A <see langword="SqlByte" /> structure whose <see langword="Value" /> equals the <see langword="Value" /> of this <see langword="SqlDouble" /> structure. If the 
<see langword="SqlDouble" /> structure's Value is <see langword="true" />, then the <see langword="SqlByte" /> structure's <see langword="Value" /> will be 1, otherwise the <see langword="SqlByte" /> structure's <see langword="Value" /> will be 0.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.ToSqlInt16">
      <summary>
        <para>Converts this <see cref="T:System.Data.SqlTypes.SqlDouble" /> structure to <see cref="T:System.Data.SqlTypes.SqlInt16" /> .</para>
      </summary>
      <returns>
        <para>A new <see langword="SqlInt16" /> structure whose <see langword="Value" /> equals 
   1 if the <see langword="SqlDouble" /> structure's <see langword="Value" /> was
<see langword="true" />, otherwise the <see langword="Value" /> of the new 
<see langword="SqlInt16" /> structure is 0.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.ToSqlInt32">
      <summary>
        <para>Converts this <see cref="T:System.Data.SqlTypes.SqlDouble" /> structure to <see cref="T:System.Data.SqlTypes.SqlInt32" /> .</para>
      </summary>
      <returns>
        <para>A new <see langword="SqlInt32" /> structure whose <see langword="Value" /> equals 
   1 if the <see langword="SqlDouble" /> structure's <see langword="Value" /> was
<see langword="true" />, otherwise the <see langword="Value" /> of the new 
<see langword="SqlInt32" /> structure is 0.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.ToSqlInt64">
      <summary>
        <para>Converts this <see cref="T:System.Data.SqlTypes.SqlDouble" /> structure to <see cref="T:System.Data.SqlTypes.SqlInt64" /> .</para>
      </summary>
      <returns>
        <para>A new <see langword="SqlInt64" /> structure whose <see langword="Value" /> equals 
   1 if the <see langword="SqlDouble" /> structure's <see langword="Value" /> was
<see langword="true" />, otherwise the <see langword="Value" /> of the new 
<see langword="SqlInt64" /> structure is 0.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.ToSqlMoney">
      <summary>
        <para>Converts this <see cref="T:System.Data.SqlTypes.SqlDouble" /> structure to <see cref="T:System.Data.SqlTypes.SqlMoney" /> .</para>
      </summary>
      <returns>
        <para>
          <see langword="true" /> if this structure has a value of 1; 
<see langword="false" /> if 0; otherwise <see cref="F:System.Data.SqlTypes.SqlMoney.Null" />.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.ToSqlDecimal">
      <summary>
        <para>Converts this <see cref="T:System.Data.SqlTypes.SqlDouble" /> structure to <see cref="T:System.Data.SqlTypes.SqlDecimal" /> .</para>
      </summary>
      <returns>
        <para>A new <see langword="SqlDecimal" /> structure whose <see langword="Value" /> equals 1 if the <see langword="SqlDouble" /> structure's Value was <see langword="true" />; otherwise the <see langword="Value" /> of the new <see langword="SqlDecimal" /> structure is 0.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.ToSqlSingle">
      <summary>
        <para>Converts this <see cref="T:System.Data.SqlTypes.SqlDouble" /> structure to <see cref="T:System.Data.SqlTypes.SqlSingle" /> .</para>
      </summary>
      <returns>
        <para>
          <see langword="true" /> if the <see langword="SqlDouble" />
structure's <see langword="Value" /> is 1; otherwise <see langword="false" />.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.ToSqlString">
      <summary>
        <para>Converts this <see cref="T:System.Data.SqlTypes.SqlDouble" /> structure to <see cref="T:System.Data.SqlTypes.SqlString" /> .</para>
      </summary>
      <returns>
        <para>A <see langword="SqlString" /> structure whose value is a string representing 
   the date and time contained in this <see langword="SqlDouble" /> structure.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.CompareTo(System.Object)">
      <summary>
        <para>Compares this instance to the supplied object and returns an indication of
      their relative values.</para>
      </summary>
      <param name="value">The object to compare.</param>
      <returns>
        <para>A signed number indicating the relative values of the instance and the 
      object.</para>
        <list type="table">
          <listheader>
            <term>Return Value</term>
            <description>Condition</description>
          </listheader>
          <item>
            <term>Less than zero</term>
            <description>This instance is less than 
            object.</description>
          </item>
          <item>
            <term>Zero</term>
            <description>This instance is the same as 
            object.</description>
          </item>
          <item>
            <term>Greater than zero</term>
            <description>
              <para>This instance is greater than object</para>
              <para>-or-</para>
              <para>object is a null reference 
               (<see langword="Nothing" />)</para>
            </description>
          </item>
        </list>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.Equals(System.Object)">
      <summary>
        <para>Compares the supplied object parameter to the <see cref="P:System.Data.SqlTypes.SqlDateTime.Value" /> property of 
   the <see cref="T:System.Data.SqlTypes.SqlDouble" /> object.</para>
      </summary>
      <param name="value">The object to be compared.</param>
      <returns>
        <para>
          <see langword="true " />if object is an instance of <see cref="T:System.Data.SqlTypes.SqlByte" /> 
and the two are equal; otherwise <see langword="false" />.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDouble.GetHashCode">
      <summary>
        <para>Returns the hash code for this <see cref="T:System.Data.SqlTypes.SqlDouble" /> structre.</para>
      </summary>
      <returns>
        <para>A 32-bit signed integer hash code.</para>
      </returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDouble.Null">
      <summary>
        <para>Represents a null value that can be assigned to the <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> property of an instance of the
<see cref="T:System.Data.SqlTypes.SqlDouble" /> structure.</para>
      </summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDouble.Zero">
      <summary>
        <para>Represents a zero value that can be assigned to the
   <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> property of an instance of the
   <see cref="T:System.Data.SqlTypes.SqlDouble" /> structure.</para>
      </summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDouble.MinValue">
      <summary>
        <para>A constant representing the minimum possible value of 
   <see cref="T:System.Data.SqlTypes.SqlDouble" /> .</para>
      </summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDouble.MaxValue">
      <summary>
        <para>A constant representing the maximum value for 
      a <see cref="T:System.Data.SqlTypes.SqlDouble" /> structure.</para>
      </summary>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDouble.IsNull">
      <summary>
        <para>Indicates whether or not <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> is null.</para>
      </summary>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDouble.Value">
      <summary>
        <para> Gets the value of the <see cref="T:System.Data.SqlTypes.SqlDouble" /> structure. This property is read-only.</para>
      </summary>
    </member>
    <member name="T:System.Data.SqlTypes.SqlGuid">
      <summary>
        <para>
       Represents a globally unique identifier to be stored in
       or retrieved from a database.
    </para>
      </summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.#ctor(System.Byte[])">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.SqlTypes.SqlGuid" /> 
structure using the supplied byte array parameter.</para>
      </summary>
      <param name="value">A byte array.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.#ctor(System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.SqlTypes.SqlGuid" /> structure using the specified <see cref="T:System.String" /> parameter.</para>
      </summary>
      <param name="s">A <see langword="String" /> object.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.#ctor(System.Guid)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.SqlTypes.SqlGuid" /> structure using the specified <see cref="T:System.Guid" /> parameter.</para>
      </summary>
      <param name="g">A <see langword="Guid" /></param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.#ctor(System.Int32,System.Int16,System.Int16,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.SqlTypes.SqlGuid" /> 
structure using the specified values.</para>
      </summary>
      <param name="a">The first four bytes of the <see langword="SqlGuid" />.</param>
      <param name=" b">The next two bytes of the <see langword="SqlGuid" />.</param>
      <param name=" c">The next two bytes of the <see langword="SqlGuid" />.</param>
      <param name=" d">The next byte of the <see langword="SqlGuid" />.</param>
      <param name=" e">The next byte of the <see langword="SqlGuid" />.</param>
      <param name=" f">The next byte of the <see langword="SqlGuid" />.</param>
      <param name=" g">The next byte of the <see langword="SqlGuid" />.</param>
      <param name=" h">The next byte of the <see langword="SqlGuid" />.</param>
      <param name=" i">The next byte of the <see langword="SqlGuid" />.</param>
      <param name=" j">The next byte of the <see langword="SqlGuid" />.</param>
      <param name=" k">The next byte of the <see langword="SqlGuid" />.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.op_Implicit(System.Guid)~System.Data.SqlTypes.SqlGuid">
      <summary>
        <para>Converts the supplied <see cref="T:System.Guid" /> parameter to <see cref="T:System.Data.SqlTypes.SqlGuid" /> .</para>
      </summary>
      <param name="x">A <see cref="T:System.Guid" />.</param>
      <returns>
        <para>A new <see langword="SqlGuid" /> whose <see cref="P:System.Data.SqlTypes.SqlGuid.Value" /> is equal to 
   the <see langword="Guid" /> parameter.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.op_Explicit(System.Data.SqlTypes.SqlGuid)~System.Guid">
      <summary>
        <para>Converts the supplied <see cref="T:System.Data.SqlTypes.SqlGuid" /> parameter to <see cref="T:System.Guid" /> .</para>
      </summary>
      <param name="x">A <see langword="SqlGuid" /> structure.</param>
      <returns>
        <para>A new <see langword="Guid" /> equal to the <see cref="P:System.Data.SqlTypes.SqlGuid.Value" /> of 
   the <see langword="SqlGuid" /> .</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.ToByteArray">
      <summary>
        <para>Converts this <see cref="T:System.Data.SqlTypes.SqlGuid" /> structure to a byte array.</para>
      </summary>
      <returns>
        <para>An array of bytes representing the <see cref="P:System.Data.SqlTypes.SqlGuid.Value" /> of this <see langword="SqlGuid" /> 
structure.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.ToString">
      <summary>
        <para>Converts this <see langword="SqlGuid" /> structure to
   a <see langword="String" /> .</para>
      </summary>
      <returns>
        <para>A string containing "true" if <see langword="true" /> 
=;"null" if null; otherwise "false".</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.Parse(System.String)">
      <summary>
        <para>Converts the specified <see cref="T:System.String" /> structure to
<see cref="T:System.Data.SqlTypes.SqlGuid" /> .</para>
      </summary>
      <param name="s">The <see langword="String" /> to be parsed.</param>
      <returns>
        <para>A <see cref="T:System.Data.SqlTypes.SqlGuid" /> equivalent to the value contained in the 
   specified <see cref="T:System.String" /><paramref name="." /></para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlGuid">
      <summary>
        <para>Converts the specified <see cref="T:System.Data.SqlTypes.SqlString" /> structure to
<see cref="T:System.Data.SqlTypes.SqlGuid" /> .</para>
      </summary>
      <param name="x">A <see langword="SqlString" /> object.</param>
      <returns>
        <para>A <see langword="SqlGuid" /> whose <see cref="P:System.Data.SqlTypes.SqlGuid.Value" /> equals the value represented by
   the <see langword="String" /> parameter.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.op_Explicit(System.Data.SqlTypes.SqlBinary)~System.Data.SqlTypes.SqlGuid">
      <summary>
        <para>Converts the <see cref="T:System.Data.SqlTypes.SqlBinary" /> parameter to <see cref="T:System.Data.SqlTypes.SqlGuid" /> .</para>
      </summary>
      <param name="x">A <see langword="SqlBinary" /> object.</param>
      <returns>
        <para>A new <see langword="SqlGuid" /> whose <see cref="P:System.Data.SqlTypes.SqlGuid.Value" /> is equal to the <see cref="P:System.Data.SqlTypes.SqlBinary.Value" /> of 
   the <see langword="SqlBinary" /> parameter.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.op_Equality(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)">
      <summary>
        <para>Performs a logical comparison of two <see cref="T:System.Data.SqlTypes.SqlGuid" />
structures to determine if they are equal.</para>
      </summary>
      <param name="x">A <see langword="SqlGuid" /> structure.</param>
      <param name=" y">A <see langword="SqlGuid" /> structure.</param>
      <returns>
        <para>A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the two
   instances are equal or <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> if the two instances are not
   equal. If either instance of <see langword="SqlGuid" /> is null, the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of
   the <see langword="SqlBoolean" />
   will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> .</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.op_Inequality(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)">
      <summary>
        <para>Performs a logical comparison on two <see cref="T:System.Data.SqlTypes.SqlGuid" /> structures to determine
   if they are equal.</para>
      </summary>
      <param name="x">A <see langword="SqlGuid" /> structure.</param>
      <param name=" y">A <see langword="SqlGuid" /> structure.</param>
      <returns>
        <para>A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the two
   instances are not equal or <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> if the two instances are equal.
   If either instance of <see langword="SqlGuid" /> is null, the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of
   the <see langword="SqlBoolean" />
   will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />. </para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.op_LessThan(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)">
      <summary>
        <para>Compares two instances of <see cref="T:System.Data.SqlTypes.SqlGuid" /> to
   determine if the first is less than the second.</para>
      </summary>
      <param name="x">A <see langword="SqlGuid" /> structure.</param>
      <param name=" y">A <see langword="SqlGuid" /> structure.</param>
      <returns>
        <para>A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the first
   instance is less than the second instance, otherwise <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> . If either instance
   of <see langword="SqlGuid" /> is
   null, the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of
   the <see langword="SqlBoolean" />
   will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.op_GreaterThan(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)">
      <summary>
        <para>Compares two instances of <see cref="T:System.Data.SqlTypes.SqlGuid" /> to
   determine if the first is greater than the second.</para>
      </summary>
      <param name="x">A <see langword="SqlGuid" /> structure.</param>
      <param name=" y">A <see langword="SqlGuid" /> structure.</param>
      <returns>
        <para>A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the first
   instance is greater than the second instance, otherwise <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. If either instance
   of <see langword="SqlGuid" /> is
   null, the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of
   the <see langword="SqlBoolean" />
   will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.op_LessThanOrEqual(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)">
      <summary>
        <para>Compares two instances of <see cref="T:System.Data.SqlTypes.SqlGuid" /> to
   determine if the first is less than or equal to the second.</para>
      </summary>
      <param name="x">A <see langword="SqlGuid" /> structure.</param>
      <param name=" y">A <see langword="SqlGuid" /> structure.</param>
      <returns>
        <para>A<see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is<see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the first
   instance is less than or equal to the second instance, otherwise<see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. If
   either instance of <see langword="SqlGuid" /> is
   null, the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of the
<see langword="SqlBoolean" />
will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />. </para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)">
      <summary>
        <para>Compares two instances of <see cref="T:System.Data.SqlTypes.SqlGuid" /> to
   determine if the first is greater than or equal to the second.</para>
      </summary>
      <param name="x">A <see langword="SqlGuid" /> structure.</param>
      <param name=" y">A <see langword="SqlGuid" /> structure.</param>
      <returns>
        <para>A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the first
   instance is greaater than or equal to the second instance, otherwise <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. If
   either instance of <see langword="SqlGuid" /> is
   null, the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of
   the <see langword="SqlBoolean" />
   will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> .</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.Equals(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)">
      <summary>
        <para>Performs a logical comparison of two <see cref="T:System.Data.SqlTypes.SqlGuid" />
structures to determine if they are equal.</para>
      </summary>
      <param name="x">A <see langword="SqlGuid" /> structure.</param>
      <param name=" y">A <see langword="SqlGuid" /> structure.</param>
      <returns>
        <para>A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the two
   instances are equal or <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> if the two instances are not
   equal. If either instance of <see langword="SqlGuid" /> is null, the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of
   the <see langword="SqlBoolean" />
   will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> .</para>
      </returns>
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.NotEquals(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)">
      <summary>
        <para>Performs a logical comparison on two <see cref="T:System.Data.SqlTypes.SqlGuid" /> structures to determine
   if they are equal.</para>
      </summary>
      <param name="x">A <see langword="SqlGuid" /> structure.</param>
      <param name=" y">A <see langword="SqlGuid" /> structure.</param>
      <returns>
        <para>A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the two
   instances are not equal or <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> if the two instances are equal.
   If either instance of <see langword="SqlGuid" /> is null, the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of
   the <see langword="SqlBoolean" />
   will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />. </para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.LessThan(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)">
      <summary>
        <para>Compares two instances of <see cref="T:System.Data.SqlTypes.SqlGuid" /> to
   determine if the first is less than the second.</para>
      </summary>
      <param name="x">A <see langword="SqlGuid" /> structure.</param>
      <param name=" y">A <see langword="SqlGuid" /> structure.</param>
      <returns>
        <para>A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the first
   instance is less than the second instance, otherwise <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> . If either instance
   of <see langword="SqlGuid" /> is
   null, the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of
   the <see langword="SqlBoolean" />
   will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.GreaterThan(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)">
      <summary>
        <para>Compares two instances of <see cref="T:System.Data.SqlTypes.SqlGuid" /> to
   determine if the first is greater than the second.</para>
      </summary>
      <param name="x">A <see langword="SqlGuid" /> structure.</param>
      <param name=" y">A <see langword="SqlGuid" /> structure.</param>
      <returns>
        <para>A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the first
   instance is greater than the second instance, otherwise <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. If either instance
   of <see langword="SqlGuid" /> is
   null, the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of
   the <see langword="SqlBoolean" />
   will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.LessThanOrEqual(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)">
      <summary>
        <para>Compares two instances of <see cref="T:System.Data.SqlTypes.SqlGuid" /> to
   determine if the first is less than or equal to the second.</para>
      </summary>
      <param name="x">A <see langword="SqlGuid" /> structure.</param>
      <param name=" y">A <see langword="SqlGuid" /> structure.</param>
      <returns>
        <para>A<see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is<see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the first
   instance is less than or equal to the second instance, otherwise<see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. If
   either instance of <see langword="SqlGuid" /> is
   null, the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of the
<see langword="SqlBoolean" />
will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />. </para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.GreaterThanOrEqual(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)">
      <summary>
        <para>Compares two instances of <see cref="T:System.Data.SqlTypes.SqlGuid" /> to
   determine if the first is greater than or equal to the second.</para>
      </summary>
      <param name="x">A <see langword="SqlGuid" /> structure.</param>
      <param name=" y">A <see langword="SqlGuid" /> structure.</param>
      <returns>
        <para>A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the first
   instance is greaater than or equal to the second instance, otherwise <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. If
   either instance of <see langword="SqlGuid" /> is
   null, the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of
   the <see langword="SqlBoolean" />
   will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> .</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.ToSqlString">
      <summary>
        <para>Converts this <see cref="T:System.Data.SqlTypes.SqlGuid" /> structure to <see cref="T:System.Data.SqlTypes.SqlString" /> .</para>
      </summary>
      <returns>
        <para>A <see langword="SqlString" /> structure containing the 
   string representation of the <see langword="SqlGuid" /> structure.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.ToSqlBinary">
      <summary>
        <para>Converts this <see cref="T:System.Data.SqlTypes.SqlGuid" /> structure to <see cref="T:System.Data.SqlTypes.SqlBinary" /> .</para>
      </summary>
      <returns>
        <para>A <see langword="SqlBinary" /> structure containing the bytes in 
   the <see langword="SqlGuid" /> structure.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.CompareTo(System.Object)">
      <summary>
        <para>Compares this <see cref="T:System.Data.SqlTypes.SqlGuid" /> structure to the supplied object and
   returns an indication of their relative values.</para>
      </summary>
      <param name="value">The object to be compared.</param>
      <returns>
        <para>A signed number indicating the relative values of the instance and the
      object.</para>
        <list type="table">
          <listheader>
            <term>Return Value</term>
            <description>Condition</description>
          </listheader>
          <item>
            <term> Less than zero</term>
            <description>This instance is less than
            object.</description>
          </item>
          <item>
            <term> Zero</term>
            <description>This instance is the same as
            object.</description>
          </item>
          <item>
            <term> Greater than zero</term>
            <description>
              <para>This instance is greater than object</para>
              <para>-or-</para>
              <para>object is a null reference
               (<see langword="Nothing" />)</para>
            </description>
          </item>
        </list>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.Equals(System.Object)">
      <summary>
        <para>Compares the supplied object parameter to the <see cref="P:System.Data.SqlTypes.SqlGuid.Value" /> property of the <see cref="T:System.Data.SqlTypes.SqlGuid" /> object.</para>
      </summary>
      <param name="value">The object to be compared.</param>
      <returns>
        <para>
          <see langword="true " />if object is 
   an instance of <see langword="SqlGuid" /> and the two are equal; otherwise
<see langword="false" />.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlGuid.GetHashCode">
      <summary>
        <para>Returns the hash code of this <see cref="T:System.Data.SqlTypes.SqlGuid" /> structure.</para>
      </summary>
      <returns>
        <para>A 32-bit signed integer hash code.</para>
      </returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlGuid.Null">
      <summary>
        <para>Represents a null value that can be assigned to the
   <see cref="P:System.Data.SqlTypes.SqlGuid.Value" /> property of an instance of the
   <see cref="T:System.Data.SqlTypes.SqlGuid" /> structure.</para>
      </summary>
    </member>
    <member name="P:System.Data.SqlTypes.SqlGuid.IsNull">
      <summary>
        <para>Indicates whether or not <see cref="P:System.Data.SqlTypes.SqlGuid.Value" /> is null.</para>
      </summary>
    </member>
    <member name="P:System.Data.SqlTypes.SqlGuid.Value">
      <summary>
        <para> Gets the value of the <see cref="T:System.Data.SqlTypes.SqlGuid" /> structure. This property is read-only.</para>
      </summary>
    </member>
    <member name="T:System.Data.SqlTypes.SqlInt16">
      <summary>
        <para>
       Represents a 16-bit signed integer to be stored in
       or retrieved from a database.
    </para>
      </summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.#ctor(System.Int16)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.SqlTypes.SqlInt16" /> 
structure using the supplied short integer parameter.</para>
      </summary>
      <param name="value">A short integer.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Implicit(System.Int16)~System.Data.SqlTypes.SqlInt16">
      <summary>
        <para>Converts the supplied short integer to <see cref="T:System.Data.SqlTypes.SqlInt16" /> .</para>
      </summary>
      <param name="x">A short integer value.</param>
      <returns>
        <para>A <see langword="SqlInt16" /> structure with the same value as th 
   specified short integer.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Explicit(System.Data.SqlTypes.SqlInt16)~System.Int16">
      <summary>
        <para>Converts the supplied <see cref="T:System.Data.SqlTypes.SqlInt16" />
structure to a short integer.</para>
      </summary>
      <param name="x">A <see langword="SqlInt16" /> structure.</param>
      <returns>
        <para>A short integer whose value is the Value of 
      the <see langword="SqlInt16" /> parameter.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.ToString">
      <summary>
        <para>Converts a <see cref="T:System.Data.SqlTypes.SqlInt16" /> structure to <see cref="T:System.String" /> .</para>
      </summary>
      <returns>
        <para>A <see langword="String" /> object representing the <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> of 
   this instance of <see langword="SqlInt16" /> .</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.Parse(System.String)">
      <summary>
        <para>Converts the <see cref="T:System.String" /> representation of a number to its 16-bit signed
   integer equivalent.</para>
      </summary>
      <param name="s">The <see langword="String" /> to be parsed.</param>
      <returns>
        <para>A 16-bit signed integer equivalent to the value contained in the specified 
   <see cref="T:System.String" /><paramref name="." /></para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_UnaryNegation(System.Data.SqlTypes.SqlInt16)">
      <summary>
        <para>The unary minus operator negates the <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> of the <see cref="T:System.Data.SqlTypes.SqlInt16" /> operand.</para>
      </summary>
      <param name="x">A <see cref="T:System.Data.SqlTypes.SqlInt16" /> structure.</param>
      <returns>
        <para>A <see langword="SqlInt16" /> structure containing the negated value.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_OnesComplement(System.Data.SqlTypes.SqlInt16)">
      <summary>
        <para>The ~ operator performs a bitwise one's complement operation on its <see cref="T:System.Data.SqlTypes.SqlByte" />
operand.</para>
      </summary>
      <param name="x">A <see langword="SqlInt16" /> structure.</param>
      <returns>
        <para>A <see langword="SqlInt16" /> structure whose <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> property 
   contains the complement of the specified <see langword="SqlInt16" />
   structure.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Addition(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>
        <para>Computes the sum of the two <see cref="T:System.Data.SqlTypes.SqlInt16" /> operands.</para>
      </summary>
      <param name="x">A <see langword="SqlInt16" /> structure.</param>
      <param name=" y">A <see langword="SqlInt16" /> structure.</param>
      <returns>
        <para>A <see langword="SqlInt16" /> structure whose <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> property contains the sum of the 
   two <see langword="SqlInt16" /> operands.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Subtraction(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>
        <para>Subtracts the second <see cref="T:System.Data.SqlTypes.SqlInt16" /> parameter from the first.</para>
      </summary>
      <param name="x">A <see langword="SqlInt16" /> structure.</param>
      <param name=" y">A <see langword="SqlInt16" /> structure.</param>
      <returns>
        <para>A <see langword="SqlInt16" /> structure whose <see cref="P:System.Data.SqlTypes.SqlInt16.Value" />
property contains the results of the subtraction.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Multiply(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>
        <para>Computes the product of the
      two <see cref="T:System.Data.SqlTypes.SqlInt16" /> parameters.</para>
      </summary>
      <param name="x">A <see langword="SqlInt16" /> structure.</param>
      <param name=" y">A <see langword="SqlInt16" /> structure.</param>
      <returns>
        <para>A <see langword="SqlInt16" /> structure whose <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> contains the product of the two
   parameters.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Division(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>
        <para> Divides the first <see cref="T:System.Data.SqlTypes.SqlInt16" />
operand by the second.</para>
      </summary>
      <param name="x">A <see langword="SqlInt16" /> structure.</param>
      <param name=" y">A <see langword="SqlInt16" /> structure.</param>
      <returns>
        <para>A <see langword="SqlInt16" /> whose <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> property
   contains the results of the division.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Modulus(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>
        <para> Computes the remainder after dividing its first <see cref="T:System.Data.SqlTypes.SqlInt16" />
operand by its second.</para>
      </summary>
      <param name="x">A <see langword="SqlInt16" /> structure.</param>
      <param name=" y">A <see langword="SqlInt16" /> structure.</param>
      <returns>
        <para>A <see langword="SqlInt16" /> structure whose <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> contains the remainder.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_BitwiseAnd(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>
        <para>Computes the bitwise AND of its <see cref="T:System.Data.SqlTypes.SqlInt16" /> operands.</para>
      </summary>
      <param name="x">A <see langword="SqlInt16" /> structure.</param>
      <param name=" y">A <see langword="SqlInt16" /> structure.</param>
      <returns>
   A <see langword="SqlInt16" /> structure
   whose <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> property contains the results of
   the bitwise AND.
</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_BitwiseOr(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>
        <para>Computes the bitwise OR of its two <see cref="T:System.Data.SqlTypes.SqlInt16" />
operands.</para>
      </summary>
      <param name="x">A <see langword="SqlInt16" /> structure.</param>
      <param name=" y">A <see langword="SqlInt16" /> structure.</param>
      <returns>
   A <see langword="SqlInt16" /> structure
   whose <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> property contains the results of
   the bitwise OR.
</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_ExclusiveOr(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>
        <para>Performs a bitwise exclusive-OR operation on the supplied parameters.</para>
      </summary>
      <param name="x">A <see langword="SqlInt16" /> structure.</param>
      <param name=" y">A <see langword="SqlInt16" /> structure.</param>
      <returns>
   A <see langword="SqlInt16" /> structure
   whose <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> property contains the results of
   the bitwise XOR.
</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Explicit(System.Data.SqlTypes.SqlBoolean)~System.Data.SqlTypes.SqlInt16">
      <summary>
        <para>Converts the supplied <see cref="T:System.Data.SqlTypes.SqlBoolean" /> structure to <see cref="T:System.Data.SqlTypes.SqlInt16" /> .</para>
      </summary>
      <param name="x">A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> structure.</param>
      <returns>
        <para>A new <see cref="T:System.Data.SqlTypes.SqlInt16" /> structure
   whose <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> property is equal to
   the <see cref="P:System.Data.SqlTypes.SqlBoolean.ByteValue" /> property of the <see cref="T:System.Data.SqlTypes.SqlBoolean" /> parameter.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Implicit(System.Data.SqlTypes.SqlByte)~System.Data.SqlTypes.SqlInt16">
      <summary>
        <para>Converts the supplied <see cref="T:System.Data.SqlTypes.SqlByte" /> structure to
<see cref="T:System.Data.SqlTypes.SqlInt16" /> .</para>
      </summary>
      <param name="x">A <see cref="T:System.Data.SqlTypes.SqlByte" /> structure.</param>
      <returns>
        <para>A new <see cref="T:System.Data.SqlTypes.SqlInt16" /> structure
   whose <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> property is equal to
   the <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> property of the <see cref="T:System.Data.SqlTypes.SqlByte" /> parameter.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Explicit(System.Data.SqlTypes.SqlInt32)~System.Data.SqlTypes.SqlInt16">
      <summary>
        <para>Converts the supplied <see cref="T:System.Data.SqlTypes.SqlInt32" />
structure to <see cref="T:System.Data.SqlTypes.SqlInt16" /> .</para>
      </summary>
      <param name="x">A <see cref="T:System.Data.SqlTypes.SqlInt32" /> structure.</param>
      <returns>
        <para>A new <see cref="T:System.Data.SqlTypes.SqlInt16" /> structure
   whose <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> property is equal to
   the <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> of the supplied <see cref="T:System.Data.SqlTypes.SqlInt32" /> parameter.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Explicit(System.Data.SqlTypes.SqlInt64)~System.Data.SqlTypes.SqlInt16">
      <summary>
        <para>Converts the supplied <see cref="T:System.Data.SqlTypes.SqlInt64" />
structure to <see cref="T:System.Data.SqlTypes.SqlInt16" /> .</para>
      </summary>
      <param name="x">A <see cref="T:System.Data.SqlTypes.SqlInt64" /> structure.</param>
      <returns>
        <para>A new <see cref="T:System.Data.SqlTypes.SqlInt16" /> structure
   whose <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> property is equal to
   the <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> of the <see cref="T:System.Data.SqlTypes.SqlInt64" /> parameter.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Explicit(System.Data.SqlTypes.SqlSingle)~System.Data.SqlTypes.SqlInt16">
      <summary>
        <para>Converts the supplied <see cref="T:System.Data.SqlTypes.SqlSingle" />
structure to <see cref="T:System.Data.SqlTypes.SqlInt16" /> .</para>
      </summary>
      <param name="x">A <see cref="T:System.Data.SqlTypes.SqlSingle" /> structure.</param>
      <returns>
        <para>A new <see cref="T:System.Data.SqlTypes.SqlInt16" /> structure
   whose <see cref="P:System.Data.SqlTypes.SqlInt16.Value" />
   property is equal to the integer portin of the <see cref="T:System.Data.SqlTypes.SqlSingle" /> parameter.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Explicit(System.Data.SqlTypes.SqlDouble)~System.Data.SqlTypes.SqlInt16">
      <summary>
        <para>Converts the supplied <see cref="T:System.Data.SqlTypes.SqlDouble" />
structure to <see cref="T:System.Data.SqlTypes.SqlInt16" /> .</para>
      </summary>
      <param name="x">A <see cref="T:System.Data.SqlTypes.SqlDouble" /> structure.</param>
      <returns>
        <para>A new <see cref="T:System.Data.SqlTypes.SqlInt16" /> structure
   whose <see cref="P:System.Data.SqlTypes.SqlInt16.Value" />
   property is equal to the integer portion of the <see cref="T:System.Data.SqlTypes.SqlDouble" /> parameter.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Explicit(System.Data.SqlTypes.SqlMoney)~System.Data.SqlTypes.SqlInt16">
      <summary>
        <para>Converts the supplied <see cref="T:System.Data.SqlTypes.SqlMoney" />
structure to <see cref="T:System.Data.SqlTypes.SqlInt16" /> .</para>
      </summary>
      <param name="x">A <see cref="T:System.Data.SqlTypes.SqlMoney" /> structure.</param>
      <returns>
        <para>A new <see cref="T:System.Data.SqlTypes.SqlInt16" /> structure
   whose <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> property is equal to
   the <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> property of the <see cref="T:System.Data.SqlTypes.SqlMoney" /> parameter.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Explicit(System.Data.SqlTypes.SqlDecimal)~System.Data.SqlTypes.SqlInt16">
      <summary>
        <para>Converts the supplied <see cref="T:System.Data.SqlTypes.SqlDecimal" />
structure to <see cref="T:System.Data.SqlTypes.SqlInt16" /> .</para>
      </summary>
      <param name="x">A <see cref="T:System.Data.SqlTypes.SqlDecimal" /> structure.</param>
      <returns>
        <para>A new <see cref="T:System.Data.SqlTypes.SqlInt16" /> structure
   whose <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> property is equal to
   the <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> property of the <see cref="T:System.Data.SqlTypes.SqlDecimal" /> parameter.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlInt16">
      <summary>
        <para>Converts the supplied <see cref="T:System.Data.SqlTypes.SqlString" />
object to <see cref="T:System.Data.SqlTypes.SqlInt16" /> .</para>
      </summary>
      <param name="x">A <see cref="T:System.Data.SqlTypes.SqlString" /> object.</param>
      <returns>
        <para>A new <see cref="T:System.Data.SqlTypes.SqlInt16" /> structure
   whose <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> property is equal to the value
   represented by the <see cref="T:System.Data.SqlTypes.SqlString" /> object parameter.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Equality(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>
        <para>Performs a logical comparison of two <see cref="T:System.Data.SqlTypes.SqlInt16" />
structures to determine if they are equal.</para>
      </summary>
      <param name="x">A <see langword="SqlInt16" /> structure.</param>
      <param name=" y">A <see langword="SqlInt16" /> structure.</param>
      <returns>
        <para>A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the two
   instances are equal or <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> if the two instances are not
   equal. If either instance of <see langword="SqlInt16" /> is null, the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of
   the <see langword="SqlBoolean" />
   will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> .</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_Inequality(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>
        <para>Performs a logical comparison of two <see cref="T:System.Data.SqlTypes.SqlInt16" />
structures to determine if they are equal.</para>
      </summary>
      <param name="x">A <see langword="SqlInt16" /> structure.</param>
      <param name=" y">A <see langword="SqlInt16" /> structure.</param>
      <returns>
        <para>A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the two instances are not
   equal or <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> if the two instances are equal.
   If either instance of <see langword="SqlInt16" /> is null, the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of
   the <see langword="SqlBoolean" />
   will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_LessThan(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>
        <para>Compares two instances of <see cref="T:System.Data.SqlTypes.SqlInt16" />
to determine if the first is less than the second.</para>
      </summary>
      <param name="x">A <see langword="SqlInt16" /> structure.</param>
      <param name=" y">A <see langword="SqlInt16" /> structure.</param>
      <returns>
        <para>A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the first instance is less
   than the second instance, otherwise <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> . If either instance
   of <see langword="SqlInt16" /> is null, the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of
   the <see langword="SqlBoolean" />
   will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_GreaterThan(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>
        <para>Compares two instances of <see cref="T:System.Data.SqlTypes.SqlInt16" />
to determine if the first is greater than the second.</para>
      </summary>
      <param name="x">A <see langword="SqlInt16" /> structure.</param>
      <param name=" y">A <see langword="SqlInt16" /> structure.</param>
      <returns>
        <para>A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the first instance is
   greater than the second instance, otherwise <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. If either instance
   of <see langword="SqlInt16" /> is null, the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of
   the <see langword="SqlBoolean" />
   will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_LessThanOrEqual(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>
        <para>Compares two <see cref="T:System.Data.SqlTypes.SqlInt16" /> structures to determine
   if the first is less than or equal to the second.</para>
      </summary>
      <param name="x">A <see langword="SqlInt16" /> structure.</param>
      <param name=" y">A <see langword="SqlInt16" /> structure.</param>
      <returns>
        <para>A<see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is<see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the first instance is less
   than or equal to the second instance, otherwise<see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. If
   either instance of <see langword="SqlInt16" /> is null, the<see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of
   the <see langword="SqlBoolean" />
   will be<see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>
        <para>Compares two <see cref="T:System.Data.SqlTypes.SqlInt16" /> structures to determine
   if the first is greater than or equal to the second.</para>
      </summary>
      <param name="x">A <see langword="SqlInt16" /> structure.</param>
      <param name=" y">A <see langword="SqlInt16" /> structure.</param>
      <returns>
        <para>A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the first instance is
   greaater than or equal to the second instance, otherwise <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. If
   either instance of <see langword="SqlInt16" />
   is null, the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of
   the <see langword="SqlBoolean" />
   will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> .</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.OnesComplement(System.Data.SqlTypes.SqlInt16)">
      <summary>
        <para>The ~ operator performs a bitwise one's complement operation on its <see cref="T:System.Data.SqlTypes.SqlByte" />
operand.</para>
      </summary>
      <param name="x">A <see langword="SqlInt16" /> structure.</param>
      <returns>
        <para>A <see langword="SqlInt16" /> structure whose <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> property 
   contains the complement of the specified <see langword="SqlInt16" />
   structure.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.Add(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>
        <para>Computes the sum of the two <see cref="T:System.Data.SqlTypes.SqlInt16" /> operands.</para>
      </summary>
      <param name="x">A <see langword="SqlInt16" /> structure.</param>
      <param name=" y">A <see langword="SqlInt16" /> structure.</param>
      <returns>
        <para>A <see langword="SqlInt16" /> structure whose <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> property contains the sum of the 
   two <see langword="SqlInt16" /> operands.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.Subtract(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>
        <para>Subtracts the second <see cref="T:System.Data.SqlTypes.SqlInt16" /> parameter from the first.</para>
      </summary>
      <param name="x">A <see langword="SqlInt16" /> structure.</param>
      <param name=" y">A <see langword="SqlInt16" /> structure.</param>
      <returns>
        <para>A <see langword="SqlInt16" /> structure whose <see cref="P:System.Data.SqlTypes.SqlInt16.Value" />
property contains the results of the subtraction.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.Multiply(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>
        <para>Computes the product of the
      two <see cref="T:System.Data.SqlTypes.SqlInt16" /> parameters.</para>
      </summary>
      <param name="x">A <see langword="SqlInt16" /> structure.</param>
      <param name=" y">A <see langword="SqlInt16" /> structure.</param>
      <returns>
        <para>A <see langword="SqlInt16" /> structure whose <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> contains the product of the two
   parameters.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.Divide(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>
        <para> Divides the first <see cref="T:System.Data.SqlTypes.SqlInt16" />
operand by the second.</para>
      </summary>
      <param name="x">A <see langword="SqlInt16" /> structure.</param>
      <param name=" y">A <see langword="SqlInt16" /> structure.</param>
      <returns>
        <para>A <see langword="SqlInt16" /> whose <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> property
   contains the results of the division.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.Mod(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>
        <para> Computes the remainder after dividing its first <see cref="T:System.Data.SqlTypes.SqlInt16" />
operand by its second.</para>
      </summary>
      <param name="x">A <see langword="SqlInt16" /> structure.</param>
      <param name=" y">A <see langword="SqlInt16" /> structure.</param>
      <returns>
        <para>A <see langword="SqlInt16" /> structure whose <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> contains the remainder.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.BitwiseAnd(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>
        <para>Computes the bitwise AND of its <see cref="T:System.Data.SqlTypes.SqlInt16" /> operands.</para>
      </summary>
      <param name="x">A <see langword="SqlInt16" /> structure.</param>
      <param name=" y">A <see langword="SqlInt16" /> structure.</param>
      <returns>
        <para>A <see langword="SqlInt16" /> 
structure whose <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> property
contains the results of the bitwise AND.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.BitwiseOr(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>
        <para>Computes the bitwise OR of its two <see cref="T:System.Data.SqlTypes.SqlInt16" />
operands.</para>
      </summary>
      <param name="x">A <see langword="SqlInt16" /> structure.</param>
      <param name=" y">A <see langword="SqlInt16" /> structure.</param>
      <returns>
        <para>A <see langword="SqlInt16" /> 
structure whose
<see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> property contains the results of 
the bitwise OR.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.Xor(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>
        <para>Performs a bitwise exclusive-OR operation on the supplied parameters.</para>
      </summary>
      <param name="x">A <see langword="SqlInt16" /> structure.</param>
      <param name=" y">A <see langword="SqlInt16" /> structure.</param>
      <returns>
        <para>A <see langword="SqlInt16" /> structure containing the results of the XOR 
   operation.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.Equals(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>
        <para>Performs a logical comparison of two <see cref="T:System.Data.SqlTypes.SqlInt16" />
structures to determine if they are equal.</para>
      </summary>
      <param name="x">A <see langword="SqlInt16" /> structure.</param>
      <param name=" y">A <see langword="SqlInt16" /> structure.</param>
      <returns>
        <para>A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the two
   instances are equal or <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> if the two instances are not
   equal. If either instance of <see langword="SqlInt16" /> is null, the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of
   the <see langword="SqlBoolean" />
   will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> .</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.NotEquals(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>
        <para>Performs a logical comparison of two <see cref="T:System.Data.SqlTypes.SqlInt16" />
structures to determine if they are equal.</para>
      </summary>
      <param name="x">A <see langword="SqlInt16" /> structure.</param>
      <param name=" y">A <see langword="SqlInt16" /> structure.</param>
      <returns>
        <para>A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the two instances are not
   equal or <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> if the two instances are equal.
   If either instance of <see langword="SqlInt16" /> is null, the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of
   the <see langword="SqlBoolean" />
   will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.LessThan(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>
        <para>Compares two instances of <see cref="T:System.Data.SqlTypes.SqlInt16" />
to determine if the first is less than the second.</para>
      </summary>
      <param name="x">A <see langword="SqlInt16" /> structure.</param>
      <param name=" y">A <see langword="SqlInt16" /> structure.</param>
      <returns>
        <para>A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the first instance is less
   than the second instance, otherwise <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> . If either instance
   of <see langword="SqlInt16" /> is null, the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of
   the <see langword="SqlBoolean" />
   will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.GreaterThan(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>
        <para>Compares two instances of <see cref="T:System.Data.SqlTypes.SqlInt16" />
to determine if the first is greater than the second.</para>
      </summary>
      <param name="x">A <see langword="SqlInt16" /> structure.</param>
      <param name=" y">A <see langword="SqlInt16" /> structure.</param>
      <returns>
        <para>A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the first instance is
   greater than the second instance, otherwise <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. If either instance
   of <see langword="SqlInt16" /> is null, the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of
   the <see langword="SqlBoolean" />
   will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.LessThanOrEqual(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>
        <para>Compares two <see cref="T:System.Data.SqlTypes.SqlInt16" /> structures to determine
   if the first is less than or equal to the second.</para>
      </summary>
      <param name="x">A <see langword="SqlInt16" /> structure.</param>
      <param name=" y">A <see langword="SqlInt16" /> structure.</param>
      <returns>
        <para>A<see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is<see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the first instance is less
   than or equal to the second instance, otherwise<see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. If
   either instance of <see langword="SqlInt16" /> is null, the<see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of
   the <see langword="SqlBoolean" />
   will be<see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.GreaterThanOrEqual(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
      <summary>
        <para>Compares two <see cref="T:System.Data.SqlTypes.SqlInt16" /> structures to determine
   if the first is greater than or equal to the second.</para>
      </summary>
      <param name="x">A <see langword="SqlInt16" /> structure.</param>
      <param name=" y">A <see langword="SqlInt16" /> structure.</param>
      <returns>
        <para>A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the first instance is
   greaater than or equal to the second instance, otherwise <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. If
   either instance of <see langword="SqlInt16" />
   is null, the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of
   the <see langword="SqlBoolean" />
   will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> .</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.ToSqlBoolean">
      <summary>
        <para>Converts this <see cref="T:System.Data.SqlTypes.SqlInt16" /> structure to <see cref="T:System.Data.SqlTypes.SqlBoolean" /> .</para>
      </summary>
      <returns>
        <para>
          <see langword="true" /> if the <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> is non-zero;
<see langword="false" /> if zero; otherwise Null.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.ToSqlByte">
      <summary>
        <para>Converts this <see cref="T:System.Data.SqlTypes.SqlInt16" /> structure to <see cref="T:System.Data.SqlTypes.SqlByte" />.</para>
      </summary>
      <returns>
        <para>A <see langword="SqlByte" /> structure whose <see langword="Value" /> equals the <see langword="Value" /> of this <see langword="SqlInt16" /> structure. If the 
<see langword="SqlInt16" /> structure's Value is <see langword="true" />, then the <see langword="SqlByte" /> structure's <see langword="Value" /> will be 1, otherwise the <see langword="SqlByte" /> structure's <see langword="Value" /> will be 0.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.ToSqlDouble">
      <summary>
        <para>Converts this <see cref="T:System.Data.SqlTypes.SqlInt16" /> structure to <see cref="T:System.Data.SqlTypes.SqlDouble" />.</para>
      </summary>
      <returns>
        <para>A new <see langword="SqlDouble" /> structure whose <see langword="Value" /> equals 1 if the <see langword="SqlInt16" /> structure's Value was <see langword="true" />; otherwise the <see langword="Value" /> of the new <see langword="SqlDouble" /> structure is 0.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.ToSqlInt32">
      <summary>
        <para>Converts this <see cref="T:System.Data.SqlTypes.SqlInt16" /> structure to <see cref="T:System.Data.SqlTypes.SqlInt32" />.</para>
      </summary>
      <returns>
        <para>A new <see langword="SqlInt32" /> structure whose <see langword="Value" /> equals 
   1 if the <see langword="SqlInt16" /> structure's Value was <see langword="true" />,
   otherwise the <see langword="Value" /> of the new <see langword="SqlInt32" />
   structure is 0.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.ToSqlInt64">
      <summary>
        <para>Converts this <see cref="T:System.Data.SqlTypes.SqlInt16" /> structure to <see cref="T:System.Data.SqlTypes.SqlInt64" />.</para>
      </summary>
      <returns>
        <para>A new <see langword="SqlInt64" /> structure whose <see langword="Value" /> equals 
   1 if the <see langword="SqlInt16" /> structure's Value was <see langword="true" />,
   otherwise the <see langword="Value" /> of the new <see langword="SqlInt64" />
   structure is 0.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.ToSqlMoney">
      <summary>
        <para>Converts this <see cref="T:System.Data.SqlTypes.SqlInt16" /> structure to <see cref="T:System.Data.SqlTypes.SqlMoney" />.</para>
      </summary>
      <returns>
        <para>
          <see langword="true" /> if this structure has a value of 1; 
<see langword="false" /> if 0; otherwise <see cref="F:System.Data.SqlTypes.SqlMoney.Null" />.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.ToSqlDecimal">
      <summary>
        <para>Converts this <see cref="T:System.Data.SqlTypes.SqlInt16" /> structure to <see cref="T:System.Data.SqlTypes.SqlDecimal" />.</para>
      </summary>
      <returns>
        <para>A new <see langword="SqlDecimal" /> structure whose <see langword="Value" /> equals 1 if the <see langword="SqlInt16" /> structure's Value was <see langword="true" />; otherwise the <see langword="Value" /> of the new <see langword="SqlDecimal" /> structure is 0.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.ToSqlSingle">
      <summary>
        <para>Converts this <see cref="T:System.Data.SqlTypes.SqlInt16" /> structure to <see cref="T:System.Data.SqlTypes.SqlSingle" />.</para>
      </summary>
      <returns>
        <para>
          <see langword="true" /> if the <see langword="SqlInt16" /> 
structure's <see langword="Value" /> is 1; otherwise <see langword="false" />.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.ToSqlString">
      <summary>
        <para>Converts this <see cref="T:System.Data.SqlTypes.SqlInt16" /> structure to <see cref="T:System.Data.SqlTypes.SqlString" />.</para>
      </summary>
      <returns>
        <para>A <see langword="SqlString" /> structure whose value is a string representing 
   the date and time contained in this <see langword="SqlInt16" /> structure.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.CompareTo(System.Object)">
      <summary>
        <para>Compares this instance to the supplied object and 
      returns an indication of their relative values.</para>
      </summary>
      <param name="value">The object to be compared.</param>
      <returns>
        <para>A signed number indicating the relative values of the instance and the
      object.</para>
        <list type="table">
          <listheader>
            <term>Return Value</term>
            <description>Condition</description>
          </listheader>
          <item>
            <term> Less than zero</term>
            <description>This instance is less than
            object.</description>
          </item>
          <item>
            <term> Zero</term>
            <description>This instance is the same as
            object.</description>
          </item>
          <item>
            <term> Greater than zero</term>
            <description>
              <para>This instance is greater than object</para>
              <para>-or-</para>
              <para>object is a null reference
               (<see langword="Nothing" />)</para>
            </description>
          </item>
        </list>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.Equals(System.Object)">
      <summary>
        <para> Compares the specified object to the <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> property of the <see cref="T:System.Data.SqlTypes.SqlInt16" /> object.</para>
      </summary>
      <param name="value">The object to be compared.</param>
      <returns>
        <para>
          <see langword="true " />if object is 
   an instance of <see langword="SqlInt16" />
   and the two are equal; otherwise <see langword="false" />.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt16.GetHashCode">
      <summary>
        <para>Returns the hash code for this instance.</para>
      </summary>
      <returns>
        <para>A 32-bit signed integer hash code.</para>
      </returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlInt16.Null">
      <summary>
        <para>Represents a null value that can be assigned to the 
   <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> property of an instance of the 
   <see cref="T:System.Data.SqlTypes.SqlInt16" /> structure.</para>
      </summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlInt16.Zero">
      <summary>
        <para>Represents a zero value that can be assigned to the <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> property of an instance of the 
<see cref="T:System.Data.SqlTypes.SqlInt16" /> structure.</para>
      </summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlInt16.MinValue">
      <summary>
        <para>A constant representing the smallest possible value of a 
   <see cref="T:System.Data.SqlTypes.SqlInt16" /> .</para>
      </summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlInt16.MaxValue">
      <summary>
        <para>A constant representing the largest possible value of a 
   <see cref="T:System.Data.SqlTypes.SqlInt16" /> .</para>
      </summary>
    </member>
    <member name="P:System.Data.SqlTypes.SqlInt16.IsNull">
      <summary>
        <para>Indicates whether or not <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> is null.</para>
      </summary>
    </member>
    <member name="P:System.Data.SqlTypes.SqlInt16.Value">
      <summary>
        <para> Gets the value of this instance of <see cref="T:System.Data.SqlTypes.SqlInt16" /> structure. This property is read-only.</para>
      </summary>
    </member>
    <member name="T:System.Data.SqlTypes.SqlInt32">
      <summary>
        <para>
       Represents a 32-bit signed integer to be stored in
       or retrieved from a database.
    </para>
      </summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.#ctor(System.Int32)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.SqlTypes.SqlInt32" />
structure using the supplied integer value.</para>
      </summary>
      <param name="value">The integer to be converted.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Implicit(System.Int32)~System.Data.SqlTypes.SqlInt32">
      <summary>
        <para>Converts the supplied integer to <see cref="T:System.Data.SqlTypes.SqlInt32" /> .</para>
      </summary>
      <param name="x">An integer value.</param>
      <returns>
        <para>A new <see langword="SqlInt32" /> structure whose Value
   property is equal to the integer parameter.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Explicit(System.Data.SqlTypes.SqlInt32)~System.Int32">
      <summary>
        <para>Converts the supplied <see cref="T:System.Data.SqlTypes.SqlInt32" />
structure to an integer.</para>
      </summary>
      <param name="x">A <see langword="SqlInt32" /> structure.</param>
      <returns>
        <para>The converted integer value.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.ToString">
      <summary>
        <para>Converts a <see cref="T:System.Data.SqlTypes.SqlInt32" /> structure to a <see cref="T:System.String" /> .</para>
      </summary>
      <returns>
        <para>A <see langword="String" /> object representing the <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> of this instance of 
<see langword="SqlInt32" /> .</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.Parse(System.String)">
      <summary>
        <para>Converts the <see cref="T:System.String" /> representation of a number to
   its 32-bit signed integer equivalent.</para>
      </summary>
      <param name="s">The <see langword="String" /> to be parsed.</param>
      <returns>
        <para>A 32-bit signed integer equivalent to the value contained in the specified 
   <see cref="T:System.String" /><paramref name="." /></para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_UnaryNegation(System.Data.SqlTypes.SqlInt32)">
      <summary>
        <para> Negates the <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> of the <see cref="T:System.Data.SqlTypes.SqlInt32" /> operand.</para>
      </summary>
      <param name="x">A <see cref="T:System.Data.SqlTypes.SqlInt32" /> structure.</param>
      <returns>
        <para>A <see langword="SqlInt32" /> structure containing the negated value.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_OnesComplement(System.Data.SqlTypes.SqlInt32)">
      <summary>
        <para> Performs a bitwise one's complement
      operation on the specified <see cref="T:System.Data.SqlTypes.SqlInt32" />
      structure.</para>
      </summary>
      <param name="x">A <see langword="SqlInt32" /> structure.</param>
      <returns>
        <para>A <see langword="SqlInt32" /> structure containing the results of the ones 
   complement operation.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Addition(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>
        <para> Computes the sum of the two
      specified <see cref="T:System.Data.SqlTypes.SqlInt32" />
      structures.</para>
      </summary>
      <param name="x">A <see langword="SqlInt32" /> structure.</param>
      <param name=" y">A <see langword="SqlInt32" /> structure.</param>
      <returns>
        <para>A <see langword="SqlInt32" /> structure whose <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> property contains the sum of
   the specified <see langword="SqlInt32" /> structures.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Subtraction(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>
        <para> Subtracts the second <see cref="T:System.Data.SqlTypes.SqlInt32" />
parameter from the first.</para>
      </summary>
      <param name="x">A <see langword="SqlInt32" /> structure.</param>
      <param name=" y">A <see langword="SqlInt32" /> structure.</param>
      <returns>
        <para>A <see langword="SqlInt32" /> structure whose <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> property contains the results of
   the subtraction.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Multiply(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>
        <para> Computes the product of the two <see cref="T:System.Data.SqlTypes.SqlInt32" /> parameters.</para>
      </summary>
      <param name="x">A <see langword="SqlInt32" /> structure.</param>
      <param name=" y">A <see langword="SqlInt32" /> structure.</param>
      <returns>
        <para>A <see langword="SqlInt32" /> structure whose <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> contains the product of the two
   parameters.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Division(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>
        <para> Divides the first <see cref="T:System.Data.SqlTypes.SqlInt32" />
parameter from the second.</para>
      </summary>
      <param name="x">A <see langword="SqlInt32" /> structure.</param>
      <param name=" y">A <see langword="SqlInt32" /> structure.</param>
      <returns>
        <para>A <see langword="SqlInt32" /> whose <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> property contains the results of
   the division.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Modulus(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>
        <para> Computes the remainder after
      dividing the first <see cref="T:System.Data.SqlTypes.SqlInt32" />
      parameter by the second.</para>
      </summary>
      <param name="x">A <see langword="SqlInt32" /> structure.</param>
      <param name=" y">A <see langword="SqlInt32" /> structure.</param>
      <returns>
        <para>A <see langword="SqlInt32" /> structure whose <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> contains the remainder.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_BitwiseAnd(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>
        <para>Computes the bitwise AND of its <see cref="T:System.Data.SqlTypes.SqlInt32" /> operands.</para>
      </summary>
      <param name="x">A <see langword="SqlInt32" /> structure.</param>
      <param name=" y">A <see langword="SqlInt32" /> structure.</param>
      <returns>
        <para>A <see langword="SqlInt32" /> structure containing the results of the bitwise 
   AND operation.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_BitwiseOr(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>
        <para>Computes the bitwise OR of the specified <see cref="T:System.Data.SqlTypes.SqlInt32" />
structures.</para>
      </summary>
      <param name="x">A <see langword="SqlInt32" /> structure.</param>
      <param name=" y">A <see langword="SqlInt32" /> structure.</param>
      <returns>
        <para>A <see langword="SqlInt32" /> structure containing the results of the 
   bitwise OR operation.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_ExclusiveOr(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>
        <para>Performs a bitwise exclusive-OR operation on
      the specified <see cref="T:System.Data.SqlTypes.SqlInt32" /> structures.</para>
      </summary>
      <param name="x">A <see langword="SqlInt32" /> structure.</param>
      <param name=" y">A <see langword="SqlInt32" /> structure.</param>
      <returns>
        <para>A <see langword="SqlInt32" /> structure containing the results of the 
   bitwise XOR operation.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Explicit(System.Data.SqlTypes.SqlBoolean)~System.Data.SqlTypes.SqlInt32">
      <summary>
        <para>Converts the supplied <see cref="T:System.Data.SqlTypes.SqlBoolean" /> to <see cref="T:System.Data.SqlTypes.SqlInt32" /> .</para>
      </summary>
      <param name="x">A <see langword="SqlBoolean" /> structure.</param>
      <returns>
        <para>A new <see langword="SqlInt32" /> structure
   whose <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> property is equal to
   the <see cref="P:System.Data.SqlTypes.SqlBoolean.ByteValue" /> property of
   the <see langword="SqlBoolean" /> parameter.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Implicit(System.Data.SqlTypes.SqlByte)~System.Data.SqlTypes.SqlInt32">
      <summary>
        <para>Converts the supplied <see cref="T:System.Data.SqlTypes.SqlByte" /> property to <see cref="T:System.Data.SqlTypes.SqlInt32" /> .</para>
      </summary>
      <param name="x">A <see langword="SqlByte" /> structure.</param>
      <returns>
        <para>A new <see langword="SqlInt32" /> structure
   whose <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> property equals the <see cref="P:System.Data.SqlTypes.SqlByte.Value" />
   property of the <see langword="SqlByte" /> parameter.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Implicit(System.Data.SqlTypes.SqlInt16)~System.Data.SqlTypes.SqlInt32">
      <summary>
        <para>Converts the supplied <see cref="T:System.Data.SqlTypes.SqlInt16" />
to <see cref="T:System.Data.SqlTypes.SqlInt32" /> .</para>
      </summary>
      <param name="x">A <see langword="SqlInt16" /> structure.</param>
      <returns>
        <para>A new <see langword="SqlInt32" /> structure whose <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> property equals the <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> 
property of the <see langword="SqlInt16" />
parameter.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Explicit(System.Data.SqlTypes.SqlInt64)~System.Data.SqlTypes.SqlInt32">
      <summary>
        <para>Converts the supplied <see cref="T:System.Data.SqlTypes.SqlInt64" />
to <see cref="T:System.Data.SqlTypes.SqlInt32" /> .</para>
      </summary>
      <param name="x">A <see cref="T:System.Data.SqlTypes.SqlInt64" /> structure.</param>
      <returns>
        <para>A new <see langword="SqlInt32" /> structure whose <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> property equals the <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> 
property of the <see langword="SqlInt64" />
parameter.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Explicit(System.Data.SqlTypes.SqlSingle)~System.Data.SqlTypes.SqlInt32">
      <summary>
        <para>Converts the supplied <see cref="T:System.Data.SqlTypes.SqlSingle" />
to <see cref="T:System.Data.SqlTypes.SqlInt32" /> .</para>
      </summary>
      <param name="x">A <see langword="SqlSingle" /> structure.</param>
      <returns>
        <para>A new <see langword="SqlInt32" /> structure whose <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> 
property equals the integer portion of the <see langword="SqlSingle" />
parameter.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Explicit(System.Data.SqlTypes.SqlDouble)~System.Data.SqlTypes.SqlInt32">
      <summary>
        <para>Converts the supplied <see cref="T:System.Data.SqlTypes.SqlDouble" />
to <see cref="T:System.Data.SqlTypes.SqlInt32" /> .</para>
      </summary>
      <param name="x">A <see langword="SqlDouble" /> structure.</param>
      <returns>
        <para>A new <see langword="SqlInt32" /> structure whose <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> 
property equals the integer portion of the <see langword="SqlDouble" />
parameter.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Explicit(System.Data.SqlTypes.SqlMoney)~System.Data.SqlTypes.SqlInt32">
      <summary>
        <para>Converts the supplied <see cref="T:System.Data.SqlTypes.SqlMoney" />
structure to <see cref="T:System.Data.SqlTypes.SqlInt32" /> .</para>
      </summary>
      <param name="x">A <see langword="SqlMoney" /> structure.</param>
      <returns>
        <para>A new <see langword="SqlInt32" /> structure whose <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> property equals the <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> 
property of the <see langword="SqlMoney" />
parameter.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Explicit(System.Data.SqlTypes.SqlDecimal)~System.Data.SqlTypes.SqlInt32">
      <summary>
        <para>Converts the supplied <see cref="T:System.Data.SqlTypes.SqlDecimal" />
structure to <see cref="T:System.Data.SqlTypes.SqlInt32" /> .</para>
      </summary>
      <param name="x">A <see langword="SqlDecimal" /> structure.</param>
      <returns>
        <para>A new <see langword="SqlInt32" /> structure whose <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> property equals the <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> 
property of the <see langword="SqlDecimal" />
parameter.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlInt32">
      <summary>
        <para>Converts the supplied <see cref="T:System.Data.SqlTypes.SqlString" />
object to <see cref="T:System.Data.SqlTypes.SqlInt32" /> .</para>
      </summary>
      <param name="x">A <see langword="SqlString" /> object.</param>
      <returns>
        <para>A new <see langword="SqlInt32" /> structure whose <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> 
property equals the value represented by the <see langword="SqlString" /> parameter.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Equality(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>
        <para>Performs a logical comparison of the two <see cref="T:System.Data.SqlTypes.SqlInt32" />
parameters to determine if they are equal.</para>
      </summary>
      <param name="x">A <see langword="SqlInt32" /> structure.</param>
      <param name=" y">A <see langword="SqlInt32" /> structure.</param>
      <returns>
        <para>A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the two
   instances are equal or <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> if the two instances are not
   equal. If either instance of <see langword="SqlInt32" /> is null, the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of
   the <see langword="SqlBoolean" />
   will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> .</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_Inequality(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>
        <para>Performa a logical comparison of the two <see cref="T:System.Data.SqlTypes.SqlInt32" />
parameters to determine if they are equal.</para>
      </summary>
      <param name="x">A <see langword="SqlInt32" /> structure.</param>
      <param name=" y">A <see langword="SqlInt32" /> structure.</param>
      <returns>
        <para>A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the two instances are not
   equal or <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> if the two instances are equal.
   If either instance of <see langword="SqlInt32" /> is null, the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of
   the <see langword="SqlBoolean" />
   will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_LessThan(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>
        <para>Compares the two <see cref="T:System.Data.SqlTypes.SqlInt32" /> parameters to determine
   if the first is less than the second.</para>
      </summary>
      <param name="x">A <see langword="SqlInt32" /> structure.</param>
      <param name=" y">A <see langword="SqlInt32" /> structure.</param>
      <returns>
        <para>A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the first instance is less
   than the second instance, otherwise <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> . If either instance
   of <see langword="SqlInt32" /> is null, the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of
   the <see langword="SqlBoolean" />
   will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_GreaterThan(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>
        <para>Compares the two <see cref="T:System.Data.SqlTypes.SqlInt32" /> parameters to determine if the first is
   greater than the second.</para>
      </summary>
      <param name="x">A <see langword="SqlInt32" /> structure.</param>
      <param name=" y">A <see langword="SqlInt32" /> structure.</param>
      <returns>
        <para>A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the first instance is
   greater than the second instance, otherwise <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. If either instance
   of <see langword="SqlInt32" /> is null, the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of
   the <see langword="SqlBoolean" />
   will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_LessThanOrEqual(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>
        <para>Compares the two <see cref="T:System.Data.SqlTypes.SqlInt32" /> parameters to determine
   if the first is less than or equal to the second.</para>
      </summary>
      <param name="x">A <see langword="SqlInt32" /> structure.</param>
      <param name=" y">A <see langword="SqlInt32" /> structure.</param>
      <returns>
        <para>A<see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is<see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the first
   instance is less than or equal to the second instance, otherwise<see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. If
   either instance of <see langword="SqlInt32" />
   is null, the<see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of
   the <see langword="SqlBoolean" />
   will be<see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>
        <para>Compares the two <see cref="T:System.Data.SqlTypes.SqlInt32" /> parameters to determine
   if the first is greater than or equal to the second.</para>
      </summary>
      <param name="x">A <see langword="SqlInt32" /> structure.</param>
      <param name=" y">A <see langword="SqlInt32" /> structure.</param>
      <returns>
        <para>A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the first instance is
   greaater than or equal to the second instance, otherwise <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. If
   either instance of <see langword="SqlInt32" />
   is null, the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of
   the <see langword="SqlBoolean" />
   will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> .</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.OnesComplement(System.Data.SqlTypes.SqlInt32)">
      <summary>
        <para> Performs a bitwise one's complement
      operation on the specified <see cref="T:System.Data.SqlTypes.SqlInt32" />
      structure.</para>
      </summary>
      <param name="x">A <see langword="SqlInt32" /> structure.</param>
      <returns>
        <para>A <see langword="SqlInt32" /> structure containing the results of the ones 
   complement operation.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.Add(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>
        <para> Computes the sum of the two
      specified <see cref="T:System.Data.SqlTypes.SqlInt32" />
      structures.</para>
      </summary>
      <param name="x">A <see langword="SqlInt32" /> structure.</param>
      <param name=" y">A <see langword="SqlInt32" /> structure.</param>
      <returns>
        <para>A <see langword="SqlInt32" /> structure whose <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> property contains the sum of 
   the specified <see langword="SqlInt32" /> structures.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.Subtract(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>
        <para> Subtracts the second <see cref="T:System.Data.SqlTypes.SqlInt32" />
parameter from the first.</para>
      </summary>
      <param name="x">A <see langword="SqlInt32" /> structure.</param>
      <param name=" y">A <see langword="SqlInt32" /> structure.</param>
      <returns>
        <para>A <see langword="SqlInt32" /> structure whose <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> property contains the results of
   the subtraction.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.Multiply(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>
        <para> Computes the product of the two <see cref="T:System.Data.SqlTypes.SqlInt32" /> parameters.</para>
      </summary>
      <param name="x">A <see langword="SqlInt32" /> structure.</param>
      <param name=" y">A <see langword="SqlInt32" /> structure.</param>
      <returns>
        <para>A <see langword="SqlInt32" /> structure whose <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> contains the product of the two
   parameters.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.Divide(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>
        <para> Divides the first <see cref="T:System.Data.SqlTypes.SqlInt32" />
parameter from the second.</para>
      </summary>
      <param name="x">A <see langword="SqlInt32" /> structure.</param>
      <param name=" y">A <see langword="SqlInt32" /> structure.</param>
      <returns>
        <para>A <see langword="SqlInt32" /> whose <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> property contains the results of
   the division.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.Mod(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>
        <para> Computes the remainder after
      dividing the first <see cref="T:System.Data.SqlTypes.SqlInt32" />
      parameter by the second.</para>
      </summary>
      <param name="x">A <see langword="SqlInt32" /> structure.</param>
      <param name=" y">A <see langword="SqlInt32" /> structure.</param>
      <returns>
        <para>A <see langword="SqlInt32" /> structure whose <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> contains the remainder.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.BitwiseAnd(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>
        <para>Computes the bitwise AND of its <see cref="T:System.Data.SqlTypes.SqlInt32" /> operands.</para>
      </summary>
      <param name="x">A <see langword="SqlInt32" /> structure.</param>
      <param name=" y">A <see langword="SqlInt32" /> structure.</param>
      <returns>
        <para>A <see langword="SqlInt32" /> structure containing the results of the bitwise 
   AND operation.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.BitwiseOr(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>
        <para>Computes the bitwise OR of the specified <see cref="T:System.Data.SqlTypes.SqlInt32" />
structures.</para>
      </summary>
      <param name="x">A <see langword="SqlInt32" /> structure.</param>
      <param name=" y">A <see langword="SqlInt32" /> structure.</param>
      <returns>
        <para>A <see langword="SqlInt32" /> structure containing the results of the bitwise 
   OR operation.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.Xor(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>
        <para>Performs a bitwise exclusive-OR operation on
      the specified <see cref="T:System.Data.SqlTypes.SqlInt32" /> structures.</para>
      </summary>
      <param name="x">A <see langword="SqlInt32" /> structure.</param>
      <param name=" y">A <see langword="SqlInt32" /> structure.</param>
      <returns>
        <para>A <see langword="SqlInt32" /> structure containing the results of the bitwise 
   XOR operation.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.Equals(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>
        <para>Performs a logical comparison of the two <see cref="T:System.Data.SqlTypes.SqlInt32" />
parameters to determine if they are equal.</para>
      </summary>
      <param name="x">A <see langword="SqlInt32" /> structure.</param>
      <param name=" y">A <see langword="SqlInt32" /> structure.</param>
      <returns>
        <para>A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the two
   instances are equal or <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> if the two instances are not
   equal. If either instance of <see langword="SqlInt32" /> is null, the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of
   the <see langword="SqlBoolean" />
   will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> .</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.NotEquals(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>
        <para>Performa a logical comparison of the two <see cref="T:System.Data.SqlTypes.SqlInt32" />
parameters to determine if they are equal.</para>
      </summary>
      <param name="x">A <see langword="SqlInt32" /> structure.</param>
      <param name=" y">A <see langword="SqlInt32" /> structure.</param>
      <returns>
        <para>A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the two instances are not
   equal or <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> if the two instances are equal.
   If either instance of <see langword="SqlInt32" /> is null, the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of
   the <see langword="SqlBoolean" />
   will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.LessThan(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>
        <para>Compares the two <see cref="T:System.Data.SqlTypes.SqlInt32" /> parameters to determine
   if the first is less than the second.</para>
      </summary>
      <param name="x">A <see langword="SqlInt32" /> structure.</param>
      <param name=" y">A <see langword="SqlInt32" /> structure.</param>
      <returns>
        <para>A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the first instance is less
   than the second instance, otherwise <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> . If either instance
   of <see langword="SqlInt32" /> is null, the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of
   the <see langword="SqlBoolean" />
   will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.GreaterThan(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>
        <para>Compares the two <see cref="T:System.Data.SqlTypes.SqlInt32" /> parameters to determine if the first is
   greater than the second.</para>
      </summary>
      <param name="x">A <see langword="SqlInt32" /> structure.</param>
      <param name=" y">A <see langword="SqlInt32" /> structure.</param>
      <returns>
        <para>A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the first instance is
   greater than the second instance, otherwise <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. If either instance
   of <see langword="SqlInt32" /> is null, the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of
   the <see langword="SqlBoolean" />
   will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.LessThanOrEqual(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>
        <para>Compares the two <see cref="T:System.Data.SqlTypes.SqlInt32" /> parameters to determine
   if the first is less than or equal to the second.</para>
      </summary>
      <param name="x">A <see langword="SqlInt32" /> structure.</param>
      <param name=" y">A <see langword="SqlInt32" /> structure.</param>
      <returns>
        <para>A<see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is<see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the first
   instance is less than or equal to the second instance, otherwise<see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. If
   either instance of <see langword="SqlInt32" />
   is null, the<see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of
   the <see langword="SqlBoolean" />
   will be<see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.GreaterThanOrEqual(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
      <summary>
        <para>Compares the two <see cref="T:System.Data.SqlTypes.SqlInt32" /> parameters to determine
   if the first is greater than or equal to the second.</para>
      </summary>
      <param name="x">A <see langword="SqlInt32" /> structure.</param>
      <param name=" y">A <see langword="SqlInt32" /> structure.</param>
      <returns>
        <para>A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the first instance is
   greaater than or equal to the second instance, otherwise <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. If
   either instance of <see langword="SqlInt32" />
   is null, the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of
   the <see langword="SqlBoolean" />
   will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> .</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.ToSqlBoolean">
      <summary>
        <para>Converts this <see cref="T:System.Data.SqlTypes.SqlInt32" /> structure to <see cref="T:System.Data.SqlTypes.SqlBoolean" /> .</para>
      </summary>
      <returns>
        <para>
          <see langword="true" /> if the <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> is non-zero;
<see langword="false" /> if zero; otherwise Null.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.ToSqlByte">
      <summary>
        <para>Converts this <see cref="T:System.Data.SqlTypes.SqlInt32" /> structure to <see cref="T:System.Data.SqlTypes.SqlByte" /> .</para>
      </summary>
      <returns>
        <para>A <see langword="SqlByte" /> structure whose <see langword="Value" /> equals the <see langword="Value" /> of this <see langword="SqlInt32" /> structure. If the 
<see langword="SqlInt32" /> structure's Value is <see langword="true" />, then the <see langword="SqlByte" /> structure's <see langword="Value" /> will be 1, otherwise the <see langword="SqlByte" /> structure's <see langword="Value" /> will be 0.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.ToSqlDouble">
      <summary>
        <para>Converts this <see cref="T:System.Data.SqlTypes.SqlInt32" /> structure to <see cref="T:System.Data.SqlTypes.SqlDouble" /> .</para>
      </summary>
      <returns>
        <para>A new <see langword="SqlDouble" /> structure whose <see langword="Value" /> equals 1 if the <see langword="SqlInt32" /> structure's Value was <see langword="true" />; otherwise the <see langword="Value" /> of the new <see langword="SqlDouble" /> structure is 0.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.ToSqlInt16">
      <summary>
        <para>Converts this <see cref="T:System.Data.SqlTypes.SqlInt32" /> structure to <see cref="T:System.Data.SqlTypes.SqlInt16" /> .</para>
      </summary>
      <returns>
        <para>A new <see langword="SqlInt16" /> structure whose <see langword="Value" /> equals 
   1 if the <see langword="SqlInt32" /> structure's <see langword="Value " />was
<see langword="true" />, otherwise the <see langword="Value" /> of the new 
<see langword="SqlInt16" /> structure is 0.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.ToSqlInt64">
      <summary>
        <para>Converts this <see cref="T:System.Data.SqlTypes.SqlInt32" /> structure to <see cref="T:System.Data.SqlTypes.SqlInt64" /> .</para>
      </summary>
      <returns>
        <para>A new <see langword="SqlInt64" /> structure whose <see langword="Value" /> equals 
   1 if the <see langword="SqlInt32" /> structure's <see langword="Value " />was
<see langword="true" />, otherwise the <see langword="Value" /> of the new 
<see langword="SqlInt64" /> structure is 0.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.ToSqlMoney">
      <summary>
        <para>Converts this <see cref="T:System.Data.SqlTypes.SqlInt32" /> structure to <see cref="T:System.Data.SqlTypes.SqlMoney" /> .</para>
      </summary>
      <returns>
        <para>
          <see langword="true" /> if this structure has a value of 1; 
<see langword="false" /> if 0; otherwise <see cref="F:System.Data.SqlTypes.SqlMoney.Null" />.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.ToSqlDecimal">
      <summary>
        <para>Converts this <see cref="T:System.Data.SqlTypes.SqlInt32" /> structure to <see cref="T:System.Data.SqlTypes.SqlDecimal" /> .</para>
      </summary>
      <returns>
        <para>A new <see langword="SqlDecimal" /> structure whose <see langword="Value" /> equals 1 if the <see langword="SqlInt32" /> structure's Value was <see langword="true" />; otherwise the <see langword="Value" /> of the new <see langword="SqlDecimal" /> structure is 0.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.ToSqlSingle">
      <summary>
        <para>Converts this <see cref="T:System.Data.SqlTypes.SqlInt32" /> structure to <see cref="T:System.Data.SqlTypes.SqlSingle" /> .</para>
      </summary>
      <returns>
        <para>
          <see langword="true" /> if the <see langword="SqlInt32" /> 
structure's <see langword="Value" /> is 1; otherwise <see langword="false" />.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.ToSqlString">
      <summary>
        <para>Converts this <see cref="T:System.Data.SqlTypes.SqlInt32" /> structure to <see cref="T:System.Data.SqlTypes.SqlString" /> .</para>
      </summary>
      <returns>
        <para>A <see langword="SqlString" /> structure whose value is a string representing 
   the date and time contained in this <see langword="SqlInt32" /> structure.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.CompareTo(System.Object)">
      <summary>
        <para>Compares this instance to the supplied object and 
      returns an indication of their relative values.</para>
      </summary>
      <param name="value">The object to be compared.</param>
      <returns>
        <para>A signed number indicating the relative values of the instance and the
      object.</para>
        <list type="table">
          <listheader>
            <term>Return Value</term>
            <description>Condition</description>
          </listheader>
          <item>
            <term> Less than zero</term>
            <description>This instance is less than
            object.</description>
          </item>
          <item>
            <term> Zero</term>
            <description>This instance is the same as
            object.</description>
          </item>
          <item>
            <term> Greater than zero</term>
            <description>
              <para>This instance is greater than object</para>
              <para>-or-</para>
              <para>object is a null reference
            (<see langword="Nothing" />)</para>
            </description>
          </item>
        </list>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.Equals(System.Object)">
      <summary>
        <para>Compares the supplied object parameter to the <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> property of the 
<see cref="T:System.Data.SqlTypes.SqlInt32" /> object.</para>
      </summary>
      <param name="value">The object to be compared.</param>
      <returns>
        <see langword="true " />if object is an 
   instance of <see cref="T:System.Data.SqlTypes.SqlInt32" /> and the two
   are equal; otherwise <see langword="false" />.
</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt32.GetHashCode">
      <summary>
        <para>Returns the hash code for this instance.</para>
      </summary>
      <returns>
        <para>A 32-bit signed integer hash code.</para>
      </returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlInt32.Null">
      <summary>
        <para>Represents a null value that can be assigned to the 
   <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> property of an instance of the 
   <see cref="T:System.Data.SqlTypes.SqlInt32" /> structure.</para>
      </summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlInt32.Zero">
      <summary>
        <para>Represents a zero value that can be assigned to the 
   <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> property of an instance of the 
   <see cref="T:System.Data.SqlTypes.SqlInt32" /> structure.</para>
      </summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlInt32.MinValue">
      <summary>
        <para>A constant representing the smallest possible value of a 
   <see cref="T:System.Data.SqlTypes.SqlInt32" /> .</para>
      </summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlInt32.MaxValue">
      <summary>
        <para>A constant representing the largest possible value of a <see cref="T:System.Data.SqlTypes.SqlInt32" /> 
.</para>
      </summary>
    </member>
    <member name="P:System.Data.SqlTypes.SqlInt32.IsNull">
      <summary>
        <para>Indicates whether or not <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> is null.</para>
      </summary>
    </member>
    <member name="P:System.Data.SqlTypes.SqlInt32.Value">
      <summary>
        <para> Gets the value of this <see cref="T:System.Data.SqlTypes.SqlInt32" /> structure. This property is read-only.</para>
      </summary>
    </member>
    <member name="T:System.Data.SqlTypes.SqlInt64">
      <summary>
        <para>
       Represents a 64-bit signed integer to be stored in
       or retrieved from a database.
    </para>
      </summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.#ctor(System.Int64)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.SqlTypes.SqlInt64" /> 
structure using the supplied long integer.</para>
      </summary>
      <param name="value">A long integer.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Implicit(System.Int64)~System.Data.SqlTypes.SqlInt64">
      <summary>
        <para>Converts the long parameter to <see cref="T:System.Data.SqlTypes.SqlInt64" /> .</para>
      </summary>
      <param name="x">A long integer value.</param>
      <returns>
        <para>A new <see cref="T:System.Data.SqlTypes.SqlInt64" /> structure whose <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> equals the value of 
   the long parameter.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Explicit(System.Data.SqlTypes.SqlInt64)~System.Int64">
      <summary>
        <para>Converts the <see cref="T:System.Data.SqlTypes.SqlInt64" /> parameter to long.</para>
      </summary>
      <param name="x">A <see cref="T:System.Data.SqlTypes.SqlInt64" /> structure.</param>
      <returns>
        <para>A new long value equal to the <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> of the <see cref="T:System.Data.SqlTypes.SqlInt64" />.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.ToString">
      <summary>
        <para>Converts this instance of <see cref="T:System.Data.SqlTypes.SqlInt64" />
to <see cref="T:System.String" /> .</para>
      </summary>
      <returns>
        <para>A <see langword="String" /> object representing the <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> of this instance of 
<see langword="SqlInt64" /> .</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.Parse(System.String)">
      <summary>
        <para>Converts the <see cref="T:System.String" /> representation of a number to
   its 64-bit signed integer equivalent.</para>
      </summary>
      <param name="s">The <see langword="String" /> to be parsed.</param>
      <returns>
        <para>A 64-bit signed integer equivalent to the value contained in the specified 
   <see cref="T:System.String" /><paramref name="." /></para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_UnaryNegation(System.Data.SqlTypes.SqlInt64)">
      <summary>
   The unary minus operator negates the <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> of the <see cref="T:System.Data.SqlTypes.SqlInt64" />
   operand.
</summary>
      <param name="x">A <see cref="T:System.Data.SqlTypes.SqlInt64" /> structure.</param>
      <returns>
        <para>A <see cref="T:System.Data.SqlTypes.SqlInt64" /> structure whose <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> is equal to the 
   negated <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> of the <see cref="T:System.Data.SqlTypes.SqlInt64" /> parameter.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_OnesComplement(System.Data.SqlTypes.SqlInt64)">
      <summary>
        <para> Performs a bitwise one's complement
      operation on its <see cref="T:System.Data.SqlTypes.SqlInt64" /> operand.</para>
      </summary>
      <param name="x">A <see langword="SqlInt64" /> structure.</param>
      <returns>
        <para>A new <see langword="SqlInt64" /> structure
   whose <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> is
   equal to the ones compliment of the <see langword="SqlInt64" /> parameter.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Addition(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>
        <para> Computes the sum of the
      two <see cref="T:System.Data.SqlTypes.SqlInt64" /> parameters.</para>
      </summary>
      <param name="x">A <see langword="SqlInt64" /> structure.</param>
      <param name=" y">A <see langword="SqlInt64" /> structure.</param>
      <returns>
        <para>A new <see langword="SqlInt64" /> structure
   whose <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> is
   equal to the sum of the two <see langword="SqlInt64" /> parameters.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Subtraction(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>
        <para> Subtracts the second <see cref="T:System.Data.SqlTypes.SqlInt64" />
parameter from the first.</para>
      </summary>
      <param name="x">A <see langword="SqlInt64" /> structure.</param>
      <param name=" y">A <see langword="SqlInt64" /> structure.</param>
      <returns>
        <para>A new <see langword="SqlInt64" /> structure whose <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> property equals the results of
   the subtraction operation.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Multiply(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>
        <para> Computes the product of the
      two <see cref="T:System.Data.SqlTypes.SqlInt64" /> parameters.</para>
      </summary>
      <param name="x">A <see langword="SqlInt64" /> structure.</param>
      <param name=" y">A <see langword="SqlInt64" /> structure.</param>
      <returns>
        <para>A new <see langword="SqlInt64" /> structure whose <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> is
   equal to the product of the two <see langword="SqlInt64" /> parameters.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Division(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>
        <para> Divides the first <see cref="T:System.Data.SqlTypes.SqlInt64" />
parameter by the second.</para>
      </summary>
      <param name="x">A <see langword="SqlInt64" /> structure.</param>
      <param name=" y">A <see langword="SqlInt64" /> structure.</param>
      <returns>
        <para>A new <see langword="SqlInt64" /> structure
   whose <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> property contains the results of
   the division operation.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Modulus(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>
        <para> Computes the remainder after
      dividing the first <see cref="T:System.Data.SqlTypes.SqlInt64" /> parameter by the second.</para>
      </summary>
      <param name="x">A <see langword="SqlInt64" /> structure.</param>
      <param name=" y">A <see langword="SqlInt64" /> structure.</param>
      <returns>
        <para>A new <see langword="SqlInt64" /> structure
   whose <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> property contains the remainder.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_BitwiseAnd(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>
        <para>Computes the bitwise AND of its <see cref="T:System.Data.SqlTypes.SqlInt64" /> operands.</para>
      </summary>
      <param name="x">A <see langword="SqlInt64" /> structure.</param>
      <param name=" y">A <see cref="T:System.Data.SqlTypes.SqlInt64" /> structure.</param>
      <returns>
   A <see langword="SqlInt64" /> structure
   containing the results of the bitwise AND operation.
</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_BitwiseOr(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>
        <para>Computes the bitwise OR of its two <see cref="T:System.Data.SqlTypes.SqlInt64" /> operands.</para>
      </summary>
      <param name="x">A <see cref="T:System.Data.SqlTypes.SqlInt64" /> structure.</param>
      <param name=" y">A <see cref="T:System.Data.SqlTypes.SqlInt64" /> structure.</param>
      <returns>
   A <see langword="SqlInt64" /> structure
   containing the results of the bitwise OR operation.
</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_ExclusiveOr(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>
        <para>Performs a bitwise exclusive-OR operation on the
      supplied parameters.</para>
      </summary>
      <param name="x">A <see cref="T:System.Data.SqlTypes.SqlInt64" /> structure.</param>
      <param name=" y">A <see cref="T:System.Data.SqlTypes.SqlInt64" /> structure.</param>
      <returns>
   A <see langword="SqlInt64" /> structure
   containing the results of the bitwise XOR operation.
</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Explicit(System.Data.SqlTypes.SqlBoolean)~System.Data.SqlTypes.SqlInt64">
      <summary>
        <para>Converts the supplied <see cref="T:System.Data.SqlTypes.SqlBoolean" /> parameter to <see cref="T:System.Data.SqlTypes.SqlInt64" /> .</para>
      </summary>
      <param name="x">The <see cref="T:System.Data.SqlTypes.SqlBoolean" /> structure to be converted.</param>
      <returns>
        <para>A new <see cref="T:System.Data.SqlTypes.SqlInt64" /> structure
   whose <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> property is equal to
   the <see cref="P:System.Data.SqlTypes.SqlBoolean.ByteValue" /> of the <see cref="T:System.Data.SqlTypes.SqlBoolean" /> parameter.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Implicit(System.Data.SqlTypes.SqlByte)~System.Data.SqlTypes.SqlInt64">
      <summary>
        <para>Converts the supplied <see cref="T:System.Data.SqlTypes.SqlByte" />
parameter to <see cref="T:System.Data.SqlTypes.SqlInt64" /> .</para>
      </summary>
      <param name="x">The <see cref="T:System.Data.SqlTypes.SqlByte" /> structure to be converted.</param>
      <returns>
        <para>A new <see cref="T:System.Data.SqlTypes.SqlInt64" /> structure
   whose <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> property equals the <see cref="P:System.Data.SqlTypes.SqlByte.Value" />
   property of the <see cref="T:System.Data.SqlTypes.SqlByte" /> parameter.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Implicit(System.Data.SqlTypes.SqlInt16)~System.Data.SqlTypes.SqlInt64">
      <summary>
        <para>Converts the supplied <see cref="T:System.Data.SqlTypes.SqlInt16" /> 
parameter to <see cref="T:System.Data.SqlTypes.SqlInt64" /> .</para>
      </summary>
      <param name="x">The <see cref="T:System.Data.SqlTypes.SqlInt16" /> structure to be converted.</param>
      <returns>
        <para>A new <see cref="T:System.Data.SqlTypes.SqlInt64" /> structure whose <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> property equals the <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> property of the <see cref="T:System.Data.SqlTypes.SqlInt16" /> 
parameter.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Implicit(System.Data.SqlTypes.SqlInt32)~System.Data.SqlTypes.SqlInt64">
      <summary>
        <para>Converts the supplied <see cref="T:System.Data.SqlTypes.SqlInt32" /> 
parameter to <see cref="T:System.Data.SqlTypes.SqlInt64" /> .</para>
      </summary>
      <param name="x">The <see cref="T:System.Data.SqlTypes.SqlInt32" /> structure to be converted.</param>
      <returns>
        <para>A new <see cref="T:System.Data.SqlTypes.SqlInt64" /> structure 
   whose <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> property equals the <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> property of the <see cref="T:System.Data.SqlTypes.SqlInt32" /> parameter.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Explicit(System.Data.SqlTypes.SqlSingle)~System.Data.SqlTypes.SqlInt64">
      <summary>
        <para>Converts the supplied <see cref="T:System.Data.SqlTypes.SqlSingle" /> 
parameter to SqlInt64.</para>
      </summary>
      <param name="x">The <see cref="T:System.Data.SqlTypes.SqlSingle" /> structure to be converted.</param>
      <returns>
        <para>A new <see cref="T:System.Data.SqlTypes.SqlInt64" /> structure 
   whose <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> property contains the integer
   portion of the <see cref="T:System.Data.SqlTypes.SqlSingle" /> parameter.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Explicit(System.Data.SqlTypes.SqlDouble)~System.Data.SqlTypes.SqlInt64">
      <summary>
        <para>Converts the supplied <see cref="T:System.Data.SqlTypes.SqlDouble" /> 
structure to <see cref="T:System.Data.SqlTypes.SqlInt64" /> .</para>
      </summary>
      <param name="x">The <see cref="T:System.Data.SqlTypes.SqlDouble" /> structure to be converted.</param>
      <returns>
        <para>A new <see cref="T:System.Data.SqlTypes.SqlInt64" /> structure 
   whose <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> property equals the integer
   portion of the <see cref="T:System.Data.SqlTypes.SqlDouble" /> parameter.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Explicit(System.Data.SqlTypes.SqlMoney)~System.Data.SqlTypes.SqlInt64">
      <summary>
        <para>Converts the supplied <see cref="T:System.Data.SqlTypes.SqlMoney" />
parameter to <see cref="T:System.Data.SqlTypes.SqlInt64" /> .</para>
      </summary>
      <param name="x">The <see cref="T:System.Data.SqlTypes.SqlMoney" /> structure to be converted.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Explicit(System.Data.SqlTypes.SqlDecimal)~System.Data.SqlTypes.SqlInt64">
      <summary>
        <para>Converts the supplied <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 
parameter to <see cref="T:System.Data.SqlTypes.SqlInt64" /> .</para>
      </summary>
      <param name="x">The <see cref="T:System.Data.SqlTypes.SqlDecimal" /> structure to be converted.</param>
      <returns>
        <para>A new <see cref="T:System.Data.SqlTypes.SqlInt64" /> structure 
   whose <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> is equal to the integer portion
   of the <see cref="T:System.Data.SqlTypes.SqlDecimal" /> parameter.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlInt64">
      <summary>
        <para>Converts the supplied <see cref="T:System.Data.SqlTypes.SqlString" /> 
parameter to <see cref="T:System.Data.SqlTypes.SqlInt64" /> .</para>
      </summary>
      <param name="x">The <see cref="T:System.Data.SqlTypes.SqlString" /> object to be converted.</param>
      <returns>
        <para>A new <see cref="T:System.Data.SqlTypes.SqlInt64" /> whose <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> is equal to the value represented 
   by the <see cref="T:System.Data.SqlTypes.SqlString" /> parameter.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Equality(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>
        <para>Performs a logical comparison of the two <see cref="T:System.Data.SqlTypes.SqlInt64" /> 
parameters to determine if they are equal.</para>
      </summary>
      <param name="x">A <see cref="T:System.Data.SqlTypes.SqlInt64" /> structure.</param>
      <param name=" y">A <see cref="T:System.Data.SqlTypes.SqlInt64" /> structure.</param>
      <returns>
        <para>A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the two 
   instances are equal or <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> if the two instances are not
   equal. If either instance of <see cref="T:System.Data.SqlTypes.SqlInt64" /> is null, the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of the <see cref="T:System.Data.SqlTypes.SqlBoolean" />
   will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> .</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_Inequality(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>
        <para>Performs a logical comparison on the two SqlInt64 
      parameters to determine if they are equal.</para>
      </summary>
      <param name="x">A <see cref="T:System.Data.SqlTypes.SqlInt64" /> structure.</param>
      <param name=" y">A <see cref="T:System.Data.SqlTypes.SqlInt64" /> structure.</param>
      <returns>
   A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the two instances are not
   equal or <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> if the two instances are equal.
   If either instance of <see cref="T:System.Data.SqlTypes.SqlInt64" /> is null, the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of the <see cref="T:System.Data.SqlTypes.SqlBoolean" />
   will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.
</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_LessThan(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>
        <para>Performs a logical comparison on the two <see cref="T:System.Data.SqlTypes.SqlInt64" /> 
parameters to determine if the first is less than the second.</para>
      </summary>
      <param name="x">A <see cref="T:System.Data.SqlTypes.SqlInt64" /> structure.</param>
      <param name=" y">A <see cref="T:System.Data.SqlTypes.SqlInt64" /> structure.</param>
      <returns>
   A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the first instance is less
   than the second instance, otherwise <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> . If either
   instance of <see cref="T:System.Data.SqlTypes.SqlInt64" /> is null, the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of the <see cref="T:System.Data.SqlTypes.SqlBoolean" />
   will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.
</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_GreaterThan(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>
        <para>Performs a logical comparison of the two <see cref="T:System.Data.SqlTypes.SqlInt64" /> 
parameters to determine if the first is greater than the second.</para>
      </summary>
      <param name="x">A <see cref="T:System.Data.SqlTypes.SqlInt64" /> structure.</param>
      <param name=" y">A <see cref="T:System.Data.SqlTypes.SqlInt64" /> structure.</param>
      <returns>
   A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the first instance is
   greater than the second instance, otherwise <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. If either
   instance of <see cref="T:System.Data.SqlTypes.SqlInt64" /> is null, the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of the <see cref="T:System.Data.SqlTypes.SqlBoolean" />
   will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.
</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_LessThanOrEqual(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>
        <para>Performs a logical comparison on the two <see cref="T:System.Data.SqlTypes.SqlInt64" /> 
parameters to determine if the first is less than or equal to the second.</para>
      </summary>
      <param name="x">A <see cref="T:System.Data.SqlTypes.SqlInt64" /> structure.</param>
      <param name=" y">A <see cref="T:System.Data.SqlTypes.SqlInt64" /> structure.</param>
      <returns>
   A<see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is<see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the first instance is less
   than or equal to the second instance, otherwise<see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. If either
   instance of <see cref="T:System.Data.SqlTypes.SqlInt64" /> is null, the<see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of the<see cref="T:System.Data.SqlTypes.SqlBoolean" />
   will be<see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.
</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>
        <para>Performs a logical comparison of the two <see cref="T:System.Data.SqlTypes.SqlInt64" /> 
parameters to determine if the first is greater than or equal to the second.</para>
      </summary>
      <param name="x">A <see cref="T:System.Data.SqlTypes.SqlInt64" /> structure.</param>
      <param name=" y">A <see cref="T:System.Data.SqlTypes.SqlInt64" /> structure.</param>
      <returns>
   A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the first instance is
   greaater than or equal to the second instance, otherwise <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. If either instance of <see cref="T:System.Data.SqlTypes.SqlInt64" />
   is null, the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of the <see cref="T:System.Data.SqlTypes.SqlBoolean" />
   will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> .
</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.OnesComplement(System.Data.SqlTypes.SqlInt64)">
      <summary>
        <para> Performs a bitwise one's complement
      operation on its <see cref="T:System.Data.SqlTypes.SqlInt64" /> operand.</para>
      </summary>
      <param name="x">A <see langword="SqlInt64" /> structure.</param>
      <returns>
        <para>A new <see langword="SqlInt64" /> structure
   whose <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> is
   equal to the ones complement of the <see langword="SqlInt64" /> parameter.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.Add(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>
        <para> Computes the sum of the
      two <see cref="T:System.Data.SqlTypes.SqlInt64" /> parameters.</para>
      </summary>
      <param name="x">A <see langword="SqlInt64" /> structure.</param>
      <param name=" y">A <see langword="SqlInt64" /> structure.</param>
      <returns>
        <para>A new <see langword="SqlInt64" /> structure
   whose <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> is
   equal to the sum of the two <see langword="SqlInt64" /> parameters.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.Subtract(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>
        <para> Subtracts the second <see cref="T:System.Data.SqlTypes.SqlInt64" />
parameter from the first.</para>
      </summary>
      <param name="x">A <see langword="SqlInt64" /> structure.</param>
      <param name=" y">A <see langword="SqlInt64" /> structure.</param>
      <returns>
        <para>A new <see langword="SqlInt64" /> structure whose <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> property equals the results of
   the subtraction operation.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.Multiply(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>
        <para> Computes the product of the
      two <see cref="T:System.Data.SqlTypes.SqlInt64" /> parameters.</para>
      </summary>
      <param name="x">A <see langword="SqlInt64" /> structure.</param>
      <param name=" y">A <see langword="SqlInt64" /> structure.</param>
      <returns>
        <para>A new <see langword="SqlInt64" /> structure whose <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> is
   equal to the product of the two <see langword="SqlInt64" /> parameters.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.Divide(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>
        <para> Divides the first <see cref="T:System.Data.SqlTypes.SqlInt64" />
parameter by the second.</para>
      </summary>
      <param name="x">A <see langword="SqlInt64" /> structure.</param>
      <param name=" y">A <see langword="SqlInt64" /> structure.</param>
      <returns>
        <para>A new <see langword="SqlInt64" /> structure
   whose <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> property contains the results of
   the division operation.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.Mod(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>
        <para> Computes the remainder after
      dividing the first <see cref="T:System.Data.SqlTypes.SqlInt64" /> parameter by the second.</para>
      </summary>
      <param name="x">A <see langword="SqlInt64" /> structure.</param>
      <param name=" y">A <see langword="SqlInt64" /> structure.</param>
      <returns>
        <para>A new <see langword="SqlInt64" /> structure
   whose <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> property contains the remainder.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.BitwiseAnd(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>
        <para>Computes the bitwise AND of its <see cref="T:System.Data.SqlTypes.SqlInt64" /> operands.</para>
      </summary>
      <param name="x">A <see langword="SqlInt64" /> structure.</param>
      <param name=" y">A <see cref="T:System.Data.SqlTypes.SqlInt64" /> structure.</param>
      <returns>
        <para>A <see langword="SqlInt64" /> structure containing the results of the bitwise 
   AND operation.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.BitwiseOr(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>
        <para>Computes the bitwise OR of its two <see cref="T:System.Data.SqlTypes.SqlInt64" /> operands.</para>
      </summary>
      <param name="x">A <see cref="T:System.Data.SqlTypes.SqlInt64" /> structure.</param>
      <param name=" y">A <see cref="T:System.Data.SqlTypes.SqlInt64" /> structure.</param>
      <returns>
   A <see langword="SqlInt64" /> structure
   containing the results of the bitwise OR operation.
</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.Xor(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>
        <para>Performs a bitwise exclusive-OR operation on the
      supplied parameters.</para>
      </summary>
      <param name="x">A <see cref="T:System.Data.SqlTypes.SqlInt64" /> structure.</param>
      <param name=" y">A <see cref="T:System.Data.SqlTypes.SqlInt64" /> structure.</param>
      <returns>
   A <see langword="SqlInt64" /> structure
   containing the results of the bitwise XOR operation.
</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.Equals(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>
        <para>Performs a logical comparison of the two <see cref="T:System.Data.SqlTypes.SqlInt64" />
parameters to determine if they are equal.</para>
      </summary>
      <param name="x">A <see cref="T:System.Data.SqlTypes.SqlInt64" /> structure.</param>
      <param name=" y">A <see cref="T:System.Data.SqlTypes.SqlInt64" /> structure.</param>
      <returns>
        <para>A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the two
   instances are equal or <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> if the two instances are not
   equal. If either instance of <see cref="T:System.Data.SqlTypes.SqlInt64" /> is null, the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of the <see cref="T:System.Data.SqlTypes.SqlBoolean" />
   will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> .</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.NotEquals(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>
        <para>Performs a logical comparison on the two SqlInt64
      parameters to determine if they are equal.</para>
      </summary>
      <param name="x">A <see cref="T:System.Data.SqlTypes.SqlInt64" /> structure.</param>
      <param name=" y">A <see cref="T:System.Data.SqlTypes.SqlInt64" /> structure.</param>
      <returns>
   A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the two instances are not
   equal or <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> if the two instances are equal.
   If either instance of <see cref="T:System.Data.SqlTypes.SqlInt64" /> is null, the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of the <see cref="T:System.Data.SqlTypes.SqlBoolean" />
   will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.
</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.LessThan(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>
        <para>Performs a logical comparison on the two <see cref="T:System.Data.SqlTypes.SqlInt64" />
parameters to determine if the first is less than the second.</para>
      </summary>
      <param name="x">A <see cref="T:System.Data.SqlTypes.SqlInt64" /> structure.</param>
      <param name=" y">A <see cref="T:System.Data.SqlTypes.SqlInt64" /> structure.</param>
      <returns>
   A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the first instance is less
   than the second instance, otherwise <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> . If either
   instance of <see cref="T:System.Data.SqlTypes.SqlInt64" /> is null, the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of the <see cref="T:System.Data.SqlTypes.SqlBoolean" />
   will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.
</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.GreaterThan(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>
        <para>Performs a logical comparison of the two <see cref="T:System.Data.SqlTypes.SqlInt64" />
parameters to determine if the first is greater than the second.</para>
      </summary>
      <param name="x">A <see cref="T:System.Data.SqlTypes.SqlInt64" /> structure.</param>
      <param name=" y">A <see cref="T:System.Data.SqlTypes.SqlInt64" /> structure.</param>
      <returns>
   A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the first instance is
   greater than the second instance, otherwise <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. If either
   instance of <see cref="T:System.Data.SqlTypes.SqlInt64" /> is null, the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of the <see cref="T:System.Data.SqlTypes.SqlBoolean" />
   will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.
</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.LessThanOrEqual(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>
        <para>Performs a logical comparison on the two <see cref="T:System.Data.SqlTypes.SqlInt64" />
parameters to determine if the first is less than or equal to the second.</para>
      </summary>
      <param name="x">A <see cref="T:System.Data.SqlTypes.SqlInt64" /> structure.</param>
      <param name=" y">A <see cref="T:System.Data.SqlTypes.SqlInt64" /> structure.</param>
      <returns>
   A<see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is<see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the first instance is less
   than or equal to the second instance, otherwise<see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. If either
   instance of <see cref="T:System.Data.SqlTypes.SqlInt64" /> is null, the<see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of the<see cref="T:System.Data.SqlTypes.SqlBoolean" />
   will be<see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.
</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.GreaterThanOrEqual(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
      <summary>
        <para>Performs a logical comparison of the two <see cref="T:System.Data.SqlTypes.SqlInt64" />
parameters to determine if the first is greater than or equal to the second.</para>
      </summary>
      <param name="x">A <see cref="T:System.Data.SqlTypes.SqlInt64" /> structure.</param>
      <param name=" y">A <see cref="T:System.Data.SqlTypes.SqlInt64" /> structure.</param>
      <returns>
   A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the first instance is
   greaater than or equal to the second instance, otherwise <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. If either instance of <see cref="T:System.Data.SqlTypes.SqlInt64" />
   is null, the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of the <see cref="T:System.Data.SqlTypes.SqlBoolean" />
   will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> .
</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.ToSqlBoolean">
      <summary>
        <para>Converts this <see cref="T:System.Data.SqlTypes.SqlInt64" /> structure to <see cref="T:System.Data.SqlTypes.SqlBoolean" /> .</para>
      </summary>
      <returns>
        <para>
          <see langword="true" /> if the <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> is non-zero;
<see langword="false" /> if zero; otherwise Null.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.ToSqlByte">
      <summary>
        <para>Converts this <see cref="T:System.Data.SqlTypes.SqlInt64" /> structure to <see cref="T:System.Data.SqlTypes.SqlByte" /> .</para>
      </summary>
      <returns>
        <para>A <see langword="SqlByte" /> structure whose <see langword="Value" /> equals the <see langword="Value" /> of this <see langword="SqlInt64" /> structure. If the 
<see langword="SqlInt64" /> structure's Value is <see langword="true" />, then the <see langword="SqlByte" /> structure's <see langword="Value" /> will be 1, otherwise the <see langword="SqlByte" /> structure's <see langword="Value" /> will be 0.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.ToSqlDouble">
      <summary>
        <para>Converts this <see cref="T:System.Data.SqlTypes.SqlInt64" /> structure to <see cref="T:System.Data.SqlTypes.SqlDouble" /> .</para>
      </summary>
      <returns>
        <para>A new <see langword="SqlDouble" /> structure whose <see langword="Value" /> equals 1 if the <see langword="SqlInt64" /> structure's Value was <see langword="true" />; otherwise the <see langword="Value" /> of the new <see langword="SqlDouble" /> structure is 0.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.ToSqlInt16">
      <summary>
        <para>Converts this <see cref="T:System.Data.SqlTypes.SqlInt64" /> structure to <see cref="T:System.Data.SqlTypes.SqlInt16" /> .</para>
      </summary>
      <returns>
        <para>A new <see langword="SqlInt16" /> structure whose <see langword="Value" /> equals 
   1 if the <see langword="SqlInt64" /> structure's <see langword="Value " />was
<see langword="true" />, otherwise the <see langword="Value" /> of the new 
<see langword="SqlInt16" /> structure is 0.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.ToSqlInt32">
      <summary>
        <para>Converts this <see cref="T:System.Data.SqlTypes.SqlInt64" /> structure to <see cref="T:System.Data.SqlTypes.SqlInt32" /> .</para>
      </summary>
      <returns>
        <para>A new <see langword="SqlInt64" /> structure whose <see langword="Value" /> equals 
   1 if the <see langword="SqlInt64" /> structure's <see langword="Value " />was
<see langword="true" />, otherwise the <see langword="Value" /> of the new 
<see langword="SqlInt64" /> structure is 0.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.ToSqlMoney">
      <summary>
        <para>Converts this <see cref="T:System.Data.SqlTypes.SqlInt64" /> structure to <see cref="T:System.Data.SqlTypes.SqlMoney" /> .</para>
      </summary>
      <returns>
        <para>
          <see langword="true" /> if this structure has a value of 1; 
<see langword="false" /> if 0; otherwise <see cref="F:System.Data.SqlTypes.SqlMoney.Null" />.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.ToSqlDecimal">
      <summary>
        <para>Converts this <see cref="T:System.Data.SqlTypes.SqlInt64" /> structure to <see cref="T:System.Data.SqlTypes.SqlDecimal" /> .</para>
      </summary>
      <returns>
        <para>A new <see langword="SqlDecimal" /> structure whose 
<see langword="Value" /> equals 1 if the <see langword="SqlInt64" /> structure's Value was <see langword="true" />; otherwise the <see langword="Value" /> of the new <see langword="SqlDouble" /> structure is 0.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.ToSqlSingle">
      <summary>
        <para>Converts this <see cref="T:System.Data.SqlTypes.SqlInt64" /> structure to <see cref="T:System.Data.SqlTypes.SqlSingle" /> .</para>
      </summary>
      <returns>
        <para>
          <see langword="true" /> if the <see langword="SqlInt64" /> 
structure's <see langword="Value" /> is 1; otherwise <see langword="false" />.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.ToSqlString">
      <summary>
        <para>Converts this <see cref="T:System.Data.SqlTypes.SqlInt64" /> structure to <see cref="T:System.Data.SqlTypes.SqlString" /> .</para>
      </summary>
      <returns>
        <para>A <see langword="SqlString" /> structure whose value is a string representing 
   the date and time contained in this <see langword="SqlInt64" /> structure.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.CompareTo(System.Object)">
      <summary>
        <para>Compares this instance to the supplied object and 
      returns an indication of their relative values.</para>
      </summary>
      <param name="value">The object to be compared.</param>
      <returns>
        <para>A signed number indicating the relative values of the instance and the
      object.</para>
        <list type="table">
          <listheader>
            <term>Return Value</term>
            <description>Condition</description>
          </listheader>
          <item>
            <term> Less than zero</term>
            <description>This instance is less than
            object.</description>
          </item>
          <item>
            <term> Zero</term>
            <description>This instance is the same as
            object.</description>
          </item>
          <item>
            <term> Greater than zero</term>
            <description>
              <para>This instance is greater than object</para>
              <para>-or-</para>
              <para>object is a null reference
               (<see langword="Nothing" />)</para>
            </description>
          </item>
        </list>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.Equals(System.Object)">
      <summary>
        <para>Compares the supplied object parameter to the <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> property of the
<see cref="T:System.Data.SqlTypes.SqlInt64" /> object.</para>
      </summary>
      <param name="value">The object to be compared.</param>
      <returns>
        <para>
          <see langword="true " />if object is an
   instance of <see cref="T:System.Data.SqlTypes.SqlInt64" /> and the two
   are equal; otherwise <see langword="false" />.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlInt64.GetHashCode">
      <summary>
        <para>Returns the hash code for this instance.</para>
      </summary>
      <returns>
        <para>A 32-bit signed integer hash code.</para>
      </returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlInt64.Null">
      <summary>
        <para>Represents a null value that can be assigned to the 
   <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> property of an instance of the 
   <see cref="T:System.Data.SqlTypes.SqlInt64" /> structure.</para>
      </summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlInt64.Zero">
      <summary>
        <para>Represents a zero value that can be assigned to the 
   <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> property of an instance of the 
   <see cref="T:System.Data.SqlTypes.SqlInt64" /> structure.</para>
      </summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlInt64.MinValue">
      <summary>
        <para>A constant representing the smallest possible value for 
      a <see cref="T:System.Data.SqlTypes.SqlInt64" /> structure.</para>
      </summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlInt64.MaxValue">
      <summary>
        <para>A constant representing the largest possible value for 
      a <see cref="T:System.Data.SqlTypes.SqlInt64" /> structure.</para>
      </summary>
    </member>
    <member name="P:System.Data.SqlTypes.SqlInt64.IsNull">
      <summary>
        <para>Indicates whether or not <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> is null.</para>
      </summary>
    </member>
    <member name="P:System.Data.SqlTypes.SqlInt64.Value">
      <summary>
        <para> Gets the value of this <see cref="T:System.Data.SqlTypes.SqlInt64" /> structure. This property is read-only.</para>
      </summary>
    </member>
    <member name="T:System.Data.SqlTypes.SqlMoney">
      <summary>
        <para>
       Represents a currency value ranging from
       -2<superscript term="63" /> (or -922,337,203,685,477.5808) to 2<superscript term="63" /> -1 (or
       +922,337,203,685,477.5807) with an accuracy to
       a ten-thousandth of currency unit to be stored in or retrieved from a
       database.
    </para>
      </summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.#ctor(System.Int32)">
      <summary>
        <para> Initializes a new instance of the <see cref="T:System.Data.SqlTypes.SqlMoney" /> class with the specified integer value.
   </para>
      </summary>
      <param name="value">The monetary value to initialize. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.#ctor(System.Int64)">
      <summary>
        <para> Initializes a new instance of the <see cref="T:System.Data.SqlTypes.SqlMoney" /> class with the specified long integer value.
   </para>
      </summary>
      <param name="value">The monetary value to initialize. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.#ctor(System.Decimal)">
      <summary>
        <para> Initializes a new instance of the <see cref="T:System.Data.SqlTypes.SqlMoney" /> class with the specified <see cref="T:System.Decimal" /> value.
   </para>
      </summary>
      <param name="value">The monetary value to initialize. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.#ctor(System.Double)">
      <summary>
        <para> Initializes a new instance of the <see cref="T:System.Data.SqlTypes.SqlMoney" /> class with specified double value.
   </para>
      </summary>
      <param name="value">The monetary value to initialize. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToDecimal">
      <summary>
        <para> Converts the Value of this instance of <see cref="T:System.Data.SqlTypes.SqlMoney" /> as 
   a <see cref="T:System.Decimal" /> structure.</para>
      </summary>
      <returns>
        <para>A <see cref="T:System.Decimal" /> structure whose value equals the <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> property of this <see cref="T:System.Data.SqlTypes.SqlMoney" /> 
structure.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToInt64">
      <summary>
        <para>Converts the Value of this <see cref="T:System.Data.SqlTypes.SqlMoney" /> structure to a long integer.</para>
      </summary>
      <returns>
        <para>A 64-bit integer whose value equals the integer portion of this <see cref="T:System.Data.SqlTypes.SqlMoney" />
structure.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToInt32">
      <summary>
        <para>Converts this <see cref="T:System.Data.SqlTypes.SqlMoney" /> structure to integer.</para>
      </summary>
      <returns>
        <para>A 32-bit integer whose value equals the integer portion of this <see cref="T:System.Data.SqlTypes.SqlMoney" /> 
structure.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToDouble">
      <summary>
        <para>Converts this <see cref="T:System.Data.SqlTypes.SqlMoney" /> structure to a double.</para>
      </summary>
      <returns>
        <para>A double with a value equal to this <see cref="T:System.Data.SqlTypes.SqlMoney" /> structure.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Implicit(System.Decimal)~System.Data.SqlTypes.SqlMoney">
      <summary>
        <para>Converts the <see cref="T:System.Decimal" /> parameter to <see cref="T:System.Data.SqlTypes.SqlMoney" /> .</para>
      </summary>
      <param name="x">The <see langword="Decimal" /> value to be converted.</param>
      <returns>
        <para>A new <see cref="T:System.Data.SqlTypes.SqlMoney" /> structure
   whose <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> equals the value of
   the <see cref="T:System.Decimal" /> parameter.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Explicit(System.Data.SqlTypes.SqlMoney)~System.Decimal">
      <summary>
        <para>Converts the specified <see cref="T:System.Data.SqlTypes.SqlMoney" /> structure to <see cref="T:System.Decimal" /> .</para>
      </summary>
      <param name="x">A <see langword="SqlMoney" /> structure.</param>
      <returns>
        <para>A new <see langword="Decimal" /> structure whose value equals
   the <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> of
   the <see langword="SqlMoney" /> parameter.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToString">
      <summary>
        <para>Converts this instance of <see cref="T:System.Data.SqlTypes.SqlMoney" /> to string.</para>
      </summary>
      <returns>
        <para>A string whose value is the string representation of
      the <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> property of this <see cref="T:System.Data.SqlTypes.SqlMoney" /> structure.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.Parse(System.String)">
      <summary>
        <para>Converts the <see cref="T:System.String" /> representation of a number to
   its <see cref="T:System.Data.SqlTypes.SqlMoney" />
   equivalent.</para>
      </summary>
      <param name="s">The <see langword="String" /> to be parsed.</param>
      <returns>
        <para>A <see cref="T:System.Data.SqlTypes.SqlMoney" /> equivalent to the value 
   contained in the specified <see cref="T:System.String" /><paramref name="." /></para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_UnaryNegation(System.Data.SqlTypes.SqlMoney)">
      <summary>
        <para>The unary minus operator negates the <see cref="T:System.Data.SqlTypes.SqlMoney" /> 
parameter.</para>
      </summary>
      <param name="x">The <see cref="T:System.Data.SqlTypes.SqlMoney" /> structure to be negated.</param>
      <returns>
        <para>A <see cref="T:System.Data.SqlTypes.SqlMoney" /> structure whose <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> contains the results of the negation.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Addition(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary>
        <para>Calculates the sum of the two <see cref="T:System.Data.SqlTypes.SqlMoney" /> parameters.</para>
      </summary>
      <param name="x">A <see cref="T:System.Data.SqlTypes.SqlMoney" /> structure.</param>
      <param name=" y">A <see cref="T:System.Data.SqlTypes.SqlMoney" /> structure.</param>
      <returns>
        <para>A new <see cref="T:System.Data.SqlTypes.SqlMoney" /> stucture whose <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> contains the sum of the
   two <see cref="T:System.Data.SqlTypes.SqlMoney" /> parameters.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Subtraction(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary>
        <para>The subtraction operator subtracts the
      second <see cref="T:System.Data.SqlTypes.SqlMoney" /> parameter from the first.</para>
      </summary>
      <param name="x">A <see cref="T:System.Data.SqlTypes.SqlMoney" /> structure.</param>
      <param name="y">A <see cref="T:System.Data.SqlTypes.SqlMoney" /> structure.</param>
      <returns>
        <para>A new <see cref="T:System.Data.SqlTypes.SqlMoney" /> structure containing the
   resuls of the subtraction.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Multiply(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary>
        <para>The multiplicaion operator calculates the product of the
      two <see cref="T:System.Data.SqlTypes.SqlMoney" /> parameters.</para>
      </summary>
      <param name="x">A <see cref="T:System.Data.SqlTypes.SqlMoney" /> structure.</param>
      <param name=" y">A <see cref="T:System.Data.SqlTypes.SqlMoney" /> structure.</param>
      <returns>
        <para>A new <see cref="T:System.Data.SqlTypes.SqlMoney" /> structure
   whose <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> contains the product of the
   multiplication.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Division(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary>
        <para>The division operator divides the first <see cref="T:System.Data.SqlTypes.SqlMoney" />
parameter by the second.</para>
      </summary>
      <param name="x">A <see cref="T:System.Data.SqlTypes.SqlMoney" /> structure.</param>
      <param name=" y">A <see cref="T:System.Data.SqlTypes.SqlMoney" /> structure.</param>
      <returns>
        <para>A new <see cref="T:System.Data.SqlTypes.SqlMoney" /> structure
   whose <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> contains the results of the division.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Explicit(System.Data.SqlTypes.SqlBoolean)~System.Data.SqlTypes.SqlMoney">
      <summary>
        <para>This implicit operator converts the supplied <see cref="T:System.Data.SqlTypes.SqlBoolean" /> parameter to <see cref="T:System.Data.SqlTypes.SqlMoney" /> .</para>
      </summary>
      <param name="x">The <see cref="T:System.Data.SqlTypes.SqlBoolean" /> structure to be converted.</param>
      <returns>
        <para>A new <see cref="T:System.Data.SqlTypes.SqlMoney" /> structure
   whose <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> property equals the <see cref="P:System.Data.SqlTypes.SqlBoolean.ByteValue" /> property of the <see cref="T:System.Data.SqlTypes.SqlBoolean" /> parameter.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Implicit(System.Data.SqlTypes.SqlByte)~System.Data.SqlTypes.SqlMoney">
      <summary>
        <para>This implicit operator converts the supplied <see cref="T:System.Data.SqlTypes.SqlByte" /> parameter to <see cref="T:System.Data.SqlTypes.SqlMoney" /> .</para>
      </summary>
      <param name="x">The <see cref="T:System.Data.SqlTypes.SqlByte" /> structure to be converted.</param>
      <returns>
        <para>A new <see cref="T:System.Data.SqlTypes.SqlMoney" /> structure whose <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> property is equal to
   the <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> of the <see cref="T:System.Data.SqlTypes.SqlByte" />
   parameter.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Implicit(System.Data.SqlTypes.SqlInt16)~System.Data.SqlTypes.SqlMoney">
      <summary>
        <para>This implicit operator converts the supplied <see cref="T:System.Data.SqlTypes.SqlInt16" />
parameter to <see cref="T:System.Data.SqlTypes.SqlMoney" /> .</para>
      </summary>
      <param name="x">The <see cref="T:System.Data.SqlTypes.SqlInt16" /> structure to be converted.</param>
      <returns>
        <para>A new <see cref="T:System.Data.SqlTypes.SqlMoney" /> structure whose <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> property equals the <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> of the <see cref="T:System.Data.SqlTypes.SqlInt16" />
parameter.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Implicit(System.Data.SqlTypes.SqlInt32)~System.Data.SqlTypes.SqlMoney">
      <summary>
        <para>This implicit operator converts the supplied <see cref="T:System.Data.SqlTypes.SqlInt32" />
parameter to <see cref="T:System.Data.SqlTypes.SqlMoney" /> .</para>
      </summary>
      <param name="x">The <see cref="T:System.Data.SqlTypes.SqlInt32" /> structure to be converted.</param>
      <returns>
        <para>A new <see cref="T:System.Data.SqlTypes.SqlMoney" /> structure whose <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> property equals the <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> of the <see cref="T:System.Data.SqlTypes.SqlInt32" />
parameter.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Implicit(System.Data.SqlTypes.SqlInt64)~System.Data.SqlTypes.SqlMoney">
      <summary>
        <para>This implicit operator converts the supplied <see cref="T:System.Data.SqlTypes.SqlInt64" />
parameter to <see cref="T:System.Data.SqlTypes.SqlMoney" /> .</para>
      </summary>
      <param name="x">The <see cref="T:System.Data.SqlTypes.SqlInt64" /> structure to be converted.</param>
      <returns>
        <para>A new <see cref="T:System.Data.SqlTypes.SqlMoney" />
structure whose <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> property equals the <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> of the <see cref="T:System.Data.SqlTypes.SqlInt64" />
parameter.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Explicit(System.Data.SqlTypes.SqlSingle)~System.Data.SqlTypes.SqlMoney">
      <summary>
        <para> This operator converts the supplied <see cref="T:System.Data.SqlTypes.SqlSingle" />
parameter to <see cref="T:System.Data.SqlTypes.SqlMoney" /> .</para>
      </summary>
      <param name="x">The <see cref="T:System.Data.SqlTypes.SqlSingle" /> structure to be converted.</param>
      <returns>
        <para>A new <see cref="T:System.Data.SqlTypes.SqlMoney" />
structure whose <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> property equals the <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> of the <see cref="T:System.Data.SqlTypes.SqlSingle" />
parameter.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Explicit(System.Data.SqlTypes.SqlDouble)~System.Data.SqlTypes.SqlMoney">
      <summary>
        <para> This operator converts the supplied <see cref="T:System.Data.SqlTypes.SqlDouble" />
parameter to <see cref="T:System.Data.SqlTypes.SqlMoney" /> .</para>
      </summary>
      <param name="x">The <see cref="T:System.Data.SqlTypes.SqlDouble" /> structure to be converted.</param>
      <returns>
        <para>A new <see cref="T:System.Data.SqlTypes.SqlMoney" />
structure whose <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> property equals the <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> of the <see cref="T:System.Data.SqlTypes.SqlDouble" />
parameter.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Explicit(System.Data.SqlTypes.SqlDecimal)~System.Data.SqlTypes.SqlMoney">
      <summary>
        <para> This operator converts the supplied <see cref="T:System.Data.SqlTypes.SqlDecimal" />
parameter to <see cref="T:System.Data.SqlTypes.SqlMoney" /> .</para>
      </summary>
      <param name="x">The <see cref="T:System.Data.SqlTypes.SqlDecimal" /> structure to be converted.</param>
      <returns>
        <para>A new <see cref="T:System.Data.SqlTypes.SqlMoney" />
structure whose <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> property equals the <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> of the <see cref="T:System.Data.SqlTypes.SqlDecimal" />
parameter.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlMoney">
      <summary>
        <para> This operator converts the <see cref="T:System.Data.SqlTypes.SqlString" /> parameter to <see cref="T:System.Data.SqlTypes.SqlMoney" /> .</para>
      </summary>
      <param name="x">The <see cref="T:System.Data.SqlTypes.SqlString" /> object to be converted.</param>
      <returns>
        <para>A new <see cref="T:System.Data.SqlTypes.SqlMoney" />
structure whose <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> property equals the value
represented by the <see cref="T:System.Data.SqlTypes.SqlString" /> parameter.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Equality(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary>
        <para>Performs a logical comparison of the two <see cref="T:System.Data.SqlTypes.SqlMoney" />
parameters to determine if they are equal.</para>
      </summary>
      <param name="x">A <see cref="T:System.Data.SqlTypes.SqlMoney" /> structure.</param>
      <param name=" y">A <see cref="T:System.Data.SqlTypes.SqlMoney" /> structure.</param>
      <returns>
        <para>A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the two instances are equal
   or <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> if the two instances are not
   equal. If either instance of <see cref="T:System.Data.SqlTypes.SqlMoney" /> is null, the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of the <see cref="T:System.Data.SqlTypes.SqlBoolean" />
   will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> .</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_Inequality(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary>
        <para>Performs a logical comparison of the two <see cref="T:System.Data.SqlTypes.SqlMoney" /> 
parameters to determine if they are equal.</para>
      </summary>
      <param name="x">A <see cref="T:System.Data.SqlTypes.SqlMoney" /> structure.</param>
      <param name=" y">A <see cref="T:System.Data.SqlTypes.SqlMoney" /> structure.</param>
      <returns>
        <para>A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the two 
   instances are not equal or <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> if the two instances are equal.
   If either instance of <see cref="T:System.Data.SqlTypes.SqlMoney" /> is null, the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of the <see cref="T:System.Data.SqlTypes.SqlBoolean" />
   will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_LessThan(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary>
        <para>Performs a logical comparison of the two <see cref="T:System.Data.SqlTypes.SqlMoney" /> 
parameters to determine if the first is less than the second.</para>
      </summary>
      <param name="x">A <see cref="T:System.Data.SqlTypes.SqlMoney" /> structure.</param>
      <param name=" y">A <see cref="T:System.Data.SqlTypes.SqlMoney" /> structure.</param>
      <returns>
   A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the first instance is less
   than the second instance, otherwise <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> . If either
   instance of <see cref="T:System.Data.SqlTypes.SqlMoney" /> is null, the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of the <see cref="T:System.Data.SqlTypes.SqlBoolean" />
   will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.
</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_GreaterThan(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary>
        <para>Performs a logical comparison of the two <see cref="T:System.Data.SqlTypes.SqlMoney" /> 
parameters to determine if the first is greater than the second.</para>
      </summary>
      <param name="x">A <see cref="T:System.Data.SqlTypes.SqlMoney" /> structure.</param>
      <param name=" y">A <see cref="T:System.Data.SqlTypes.SqlMoney" /> structure.</param>
      <returns>
        <para>A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the first 
   instance is greater than the second instance, otherwise <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. If either instance of <see cref="T:System.Data.SqlTypes.SqlMoney" />
   is null, the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of the <see cref="T:System.Data.SqlTypes.SqlBoolean" />
   will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_LessThanOrEqual(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary>
        <para>Performs a logical comparison of the two <see cref="T:System.Data.SqlTypes.SqlMoney" /> 
parameters to determine if the first is less than or equal to the second.</para>
      </summary>
      <param name="x">A <see cref="T:System.Data.SqlTypes.SqlMoney" /> structure.</param>
      <param name=" y">A <see cref="T:System.Data.SqlTypes.SqlMoney" /> structure.</param>
      <returns>
        <para>A<see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is<see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the first 
   instance is less than or equal to the second instance, otherwise<see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. If either instance of <see cref="T:System.Data.SqlTypes.SqlMoney" />
   is null, the<see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of the<see cref="T:System.Data.SqlTypes.SqlBoolean" />
   will be<see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary>
        <para>Performs a logical comparison of the two <see cref="T:System.Data.SqlTypes.SqlMoney" /> 
parameters to determine if the first is greater than or equal to the second.</para>
      </summary>
      <param name="x">A <see cref="T:System.Data.SqlTypes.SqlMoney" /> structure.</param>
      <param name=" y">A <see cref="T:System.Data.SqlTypes.SqlMoney" /> structure.</param>
      <returns>
        <para>A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the first 
   instance is greaater than or equal to the second instance, otherwise <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. If either instance of <see cref="T:System.Data.SqlTypes.SqlMoney" />
   is null, the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of the <see cref="T:System.Data.SqlTypes.SqlBoolean" />
   will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> .</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.Add(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary>
        <para>Calculates the sum of the two <see cref="T:System.Data.SqlTypes.SqlMoney" /> parameters.</para>
      </summary>
      <param name="x">A <see cref="T:System.Data.SqlTypes.SqlMoney" /> structure.</param>
      <param name=" y">A <see cref="T:System.Data.SqlTypes.SqlMoney" /> structure.</param>
      <returns>
        <para>A new <see cref="T:System.Data.SqlTypes.SqlMoney" /> stucture whose <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> contains the sum of the
   two <see cref="T:System.Data.SqlTypes.SqlMoney" /> parameters.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.Subtract(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary>
        <para>The subtraction operator subtracts the
      second <see cref="T:System.Data.SqlTypes.SqlMoney" /> parameter from the first.</para>
      </summary>
      <param name="x">A <see cref="T:System.Data.SqlTypes.SqlMoney" /> structure.</param>
      <param name="y">A <see cref="T:System.Data.SqlTypes.SqlMoney" /> structure.</param>
      <returns>
        <para>A new <see cref="T:System.Data.SqlTypes.SqlMoney" /> structure containing the
   resuls of the subtraction.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.Multiply(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary>
        <para>The multiplicaion operator calculates the product of the
      two <see cref="T:System.Data.SqlTypes.SqlMoney" /> parameters.</para>
      </summary>
      <param name="x">A <see cref="T:System.Data.SqlTypes.SqlMoney" /> structure.</param>
      <param name=" y">A <see cref="T:System.Data.SqlTypes.SqlMoney" /> structure.</param>
      <returns>
        <para>A new <see cref="T:System.Data.SqlTypes.SqlMoney" /> structure
   whose <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> contains the product of the
   multiplication.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.Divide(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary>
        <para>The division operator divides the first <see cref="T:System.Data.SqlTypes.SqlMoney" />
parameter by the second.</para>
      </summary>
      <param name="x">A <see cref="T:System.Data.SqlTypes.SqlMoney" /> structure.</param>
      <param name=" y">A <see cref="T:System.Data.SqlTypes.SqlMoney" /> structure.</param>
      <returns>
        <para>A new <see cref="T:System.Data.SqlTypes.SqlMoney" /> structure
   whose <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> contains the results of the division.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.Equals(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary>
        <para>Performs a logical comparison of the two <see cref="T:System.Data.SqlTypes.SqlMoney" />
parameters to determine if they are equal.</para>
      </summary>
      <param name="x">A <see cref="T:System.Data.SqlTypes.SqlMoney" /> structure.</param>
      <param name=" y">A <see cref="T:System.Data.SqlTypes.SqlMoney" /> structure.</param>
      <returns>
        <para>A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the two instances are equal
   or <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> if the two instances are not
   equal. If either instance of <see cref="T:System.Data.SqlTypes.SqlMoney" /> is null, the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of the <see cref="T:System.Data.SqlTypes.SqlBoolean" />
   will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> .</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.NotEquals(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary>
        <para>Performs a logical comparison of the two <see cref="T:System.Data.SqlTypes.SqlMoney" />
parameters to determine if they are equal.</para>
      </summary>
      <param name="x">A <see cref="T:System.Data.SqlTypes.SqlMoney" /> structure.</param>
      <param name=" y">A <see cref="T:System.Data.SqlTypes.SqlMoney" /> structure.</param>
      <returns>
        <para>A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the two
   instances are not equal or <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> if the two instances are equal.
   If either instance of <see cref="T:System.Data.SqlTypes.SqlMoney" /> is null, the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of the <see cref="T:System.Data.SqlTypes.SqlBoolean" />
   will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.LessThan(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary>
        <para>Performs a logical comparison of the two <see cref="T:System.Data.SqlTypes.SqlMoney" />
parameters to determine if the first is less than the second.</para>
      </summary>
      <param name="x">A <see cref="T:System.Data.SqlTypes.SqlMoney" /> structure.</param>
      <param name=" y">A <see cref="T:System.Data.SqlTypes.SqlMoney" /> structure.</param>
      <returns>
   A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the first instance is less
   than the second instance, otherwise <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> . If either
   instance of <see cref="T:System.Data.SqlTypes.SqlMoney" /> is null, the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of the <see cref="T:System.Data.SqlTypes.SqlBoolean" />
   will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.
</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.GreaterThan(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary>
        <para>Performs a logical comparison of the two <see cref="T:System.Data.SqlTypes.SqlMoney" />
parameters to determine if the first is greater than the second.</para>
      </summary>
      <param name="x">A <see cref="T:System.Data.SqlTypes.SqlMoney" /> structure.</param>
      <param name=" y">A <see cref="T:System.Data.SqlTypes.SqlMoney" /> structure.</param>
      <returns>
        <para>A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the first
   instance is greater than the second instance, otherwise <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. If either instance of <see cref="T:System.Data.SqlTypes.SqlMoney" />
   is null, the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of the <see cref="T:System.Data.SqlTypes.SqlBoolean" />
   will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.LessThanOrEqual(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary>
        <para>Performs a logical comparison of the two <see cref="T:System.Data.SqlTypes.SqlMoney" />
parameters to determine if the first is less than or equal to the second.</para>
      </summary>
      <param name="x">A <see cref="T:System.Data.SqlTypes.SqlMoney" /> structure.</param>
      <param name=" y">A <see cref="T:System.Data.SqlTypes.SqlMoney" /> structure.</param>
      <returns>
        <para>A<see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is<see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the first
   instance is less than or equal to the second instance, otherwise<see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. If either instance of <see cref="T:System.Data.SqlTypes.SqlMoney" />
   is null, the<see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of the<see cref="T:System.Data.SqlTypes.SqlBoolean" />
   will be<see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.GreaterThanOrEqual(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
      <summary>
        <para>Performs a logical comparison of the two <see cref="T:System.Data.SqlTypes.SqlMoney" />
parameters to determine if the first is greater than or equal to the second.</para>
      </summary>
      <param name="x">A <see cref="T:System.Data.SqlTypes.SqlMoney" /> structure.</param>
      <param name=" y">A <see cref="T:System.Data.SqlTypes.SqlMoney" /> structure.</param>
      <returns>
        <para>A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the first
   instance is greaater than or equal to the second instance, otherwise <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. If either instance of <see cref="T:System.Data.SqlTypes.SqlMoney" />
   is null, the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of the <see cref="T:System.Data.SqlTypes.SqlBoolean" />
   will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> .</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToSqlBoolean">
      <summary>
        <para>Converts this <see cref="T:System.Data.SqlTypes.SqlMoney" /> structure to <see cref="T:System.Data.SqlTypes.SqlBoolean" /> .</para>
      </summary>
      <returns>
        <para>A <see langword="SqlBoolean" /> structure. If the 
   value of the <see langword="SqlMoney" /> structure is zero, then
   the <see langword="SqlBoolean" /> structure's value will be <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />, otherwise <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> .</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToSqlByte">
      <summary>
        <para>Converts this <see cref="T:System.Data.SqlTypes.SqlMoney" /> structure to <see cref="T:System.Data.SqlTypes.SqlByte" /> .</para>
      </summary>
      <returns>
        <para>A <see langword="SqlByte" /> structure whose <see langword="Value" /> equals the <see langword="Value" /> of this <see langword="SqlMoney" /> structure. If the 
<see langword="SqlMoney" /> structure's Value is <see langword="true" />, then the <see langword="SqlByte" /> structure's <see langword="Value" /> will be 1, otherwise the <see langword="SqlByte" /> structure's <see langword="Value" /> will be 0.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToSqlDouble">
      <summary>
        <para>Converts this <see cref="T:System.Data.SqlTypes.SqlMoney" /> structure to <see cref="T:System.Data.SqlTypes.SqlDouble" /> .</para>
      </summary>
      <returns>
        <para>A new <see langword="SqlDouble" /> structure whose <see langword="Value" /> equals 1 if the <see langword="SqlMoney" /> structure's Value was <see langword="true" />; otherwise the <see langword="Value" /> of the new <see langword="SqlDouble" /> structure is 0.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToSqlInt16">
      <summary>
        <para>Converts this <see cref="T:System.Data.SqlTypes.SqlMoney" /> structure to <see cref="T:System.Data.SqlTypes.SqlInt16" /> .</para>
      </summary>
      <returns>
        <para>A new <see langword="SqlInt16" /> structure whose <see langword="Value" /> equals 
   1 if the <see langword="SqlMoney" /> structure's <see langword="Value " />was
<see langword="true" />, otherwise the <see langword="Value" /> of the new 
<see langword="SqlInt16" /> structure is 0.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToSqlInt32">
      <summary>
        <para>Converts this <see cref="T:System.Data.SqlTypes.SqlMoney" /> structure to <see cref="T:System.Data.SqlTypes.SqlInt32" /> .</para>
      </summary>
      <returns>
        <para>A new <see langword="SqlInt32" /> structure whose <see langword="Value" /> equals 
   1 if the <see langword="SqlMoney" /> structure's <see langword="Value " />was
<see langword="true" />, otherwise the <see langword="Value" /> of the new 
<see langword="SqlInt32" /> structure is 0.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToSqlInt64">
      <summary>
        <para>Converts this <see cref="T:System.Data.SqlTypes.SqlMoney" /> structure to <see cref="T:System.Data.SqlTypes.SqlInt64" /> .</para>
      </summary>
      <returns>
        <para>A new <see langword="SqlInt64" /> structure whose <see langword="Value" /> equals 
   1 if the <see langword="SqlMoney" /> structure's <see langword="Value " />was
<see langword="true" />, otherwise the <see langword="Value" /> of the new 
<see langword="SqlInt64" /> structure is 0.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToSqlDecimal">
      <summary>
        <para>Converts this <see cref="T:System.Data.SqlTypes.SqlMoney" /> structure to <see cref="T:System.Data.SqlTypes.SqlDecimal" /> .</para>
      </summary>
      <returns>
        <para>A new <see langword="SqlDecimal" /> structure whose 
<see langword="Value" /> equals 1 if the <see langword="SqlMoney" /> structure's Value was <see langword="true" />; otherwise the <see langword="Value" /> of the new <see langword="SqlDecimal" /> structure is 0.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToSqlSingle">
      <summary>
        <para>Converts this <see cref="T:System.Data.SqlTypes.SqlMoney" /> structure to <see cref="T:System.Data.SqlTypes.SqlSingle" /> .</para>
      </summary>
      <returns>
        <para>
          <see langword="true" /> if the <see langword="SqlMoney" /> 
structure's <see langword="Value" /> is 1; otherwise <see langword="false" />.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.ToSqlString">
      <summary>
        <para>Converts this <see cref="T:System.Data.SqlTypes.SqlMoney" /> structure to <see cref="T:System.Data.SqlTypes.SqlString" /> .</para>
      </summary>
      <returns>
        <para>A <see langword="SqlString" /> structure whose value is a string representing 
   the date and time contained in this <see langword="SqlMoney" /> structure.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.CompareTo(System.Object)">
      <summary>
        <para>Compares this instance to the supplied object and returns 
      an indication of their relative values.</para>
      </summary>
      <param name="value">The object to be compared.</param>
      <returns>
        <para>A signed number indicating the relative values of the instance and the
      object.</para>
        <list type="table">
          <listheader>
            <term>Return Value</term>
            <description>Condition</description>
          </listheader>
          <item>
            <term> Less than zero</term>
            <description>This instance is less than
            object.</description>
          </item>
          <item>
            <term> Zero</term>
            <description>This instance is the same as
            object.</description>
          </item>
          <item>
            <term> Greater than zero</term>
            <description>
              <para>This instance is greater than object</para>
              <para>-or-</para>
              <para>object is a null reference
               (<see langword="Nothing" />)</para>
            </description>
          </item>
        </list>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.Equals(System.Object)">
      <summary>
        <para>Compares the supplied object parameter to the <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> property of the <see cref="T:System.Data.SqlTypes.SqlMoney" /> object.</para>
      </summary>
      <param name="value">The object to be compared.</param>
      <returns>
        <para>Equals will return <see langword="true " />if the object is an instance of <see cref="T:System.Data.SqlTypes.SqlMoney" /> and the two
   are equal; otherwise <see langword="false" />.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlMoney.GetHashCode">
      <summary>
        <para>Gets the hash code for this instance.</para>
      </summary>
      <returns>
        <para>A 32-bit signed integer hash code.</para>
      </returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlMoney.Null">
      <summary>
        <para>
       Represents a null value that can be assigned to
       the <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> property of an instance of
       the <see cref="T:System.Data.SqlTypes.SqlMoney" />class.
    </para>
      </summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlMoney.Zero">
      <summary>
        <para>
       Represents the zero value that can be assigned to the <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> property of an instance of
       the <see cref="T:System.Data.SqlTypes.SqlMoney" /> class.
    </para>
      </summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlMoney.MinValue">
      <summary>
        <para> Represents the minimum value that can be assigned
      to <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> property of an instance of
      the <see cref="T:System.Data.SqlTypes.SqlMoney" />
      class.
      </para>
      </summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlMoney.MaxValue">
      <summary>
        <para> Represents the maximum value that can be assigned to
      the <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> property of an instance of
      the <see cref="T:System.Data.SqlTypes.SqlMoney" />
      class.
      </para>
      </summary>
    </member>
    <member name="P:System.Data.SqlTypes.SqlMoney.IsNull">
      <summary>
        <para>Returns a value indicating whether the <see cref="P:System.Data.SqlTypes.SqlMoney.Value" />
property contains null.</para>
      </summary>
    </member>
    <member name="P:System.Data.SqlTypes.SqlMoney.Value">
      <summary>
        <para> Gets the monetary value of an instance of the <see cref="T:System.Data.SqlTypes.SqlMoney" /> structure. 
   This property is read-only.</para>
      </summary>
    </member>
    <member name="T:System.Data.SqlTypes.SqlDecimal">
      <summary>
        <para>
       Represents a fixed precision and scale numeric value between -10<superscript term="38" />
       -1 and 10<superscript term="38" /> -1 to be stored in or retrieved from a database.
    </para>
      </summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDecimal.MaxPrecision">
      <summary>
        <para>A constant representing the largest possible value for the <see cref="P:System.Data.SqlTypes.SqlDecimal.Precision" /> property.</para>
      </summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDecimal.MaxScale">
      <summary>
        <para>A constant representing the maximum value for 
      the <see cref="P:System.Data.SqlTypes.SqlDecimal.Scale" /> property.</para>
      </summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.#ctor(System.Decimal)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.SqlTypes.SqlDecimal" /> structure using the supplied <see cref="T:System.Decimal" />
value.</para>
      </summary>
      <param name="value">The <see cref="T:System.Decimal" /> value to be stored as a <see cref="T:System.Data.SqlTypes.SqlDecimal" /> structure.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.#ctor(System.Int32)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.SqlTypes.SqlDecimal" /> structure using the supplied integer
   value.</para>
      </summary>
      <param name="value">The supplied integer value which will the used as the value of the new <see cref="T:System.Data.SqlTypes.SqlDecimal" /> structure.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.#ctor(System.Int64)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.SqlTypes.SqlDecimal" /> structure using the supplied long integer
   value.</para>
      </summary>
      <param name="value">The supplied long integer value which will the used as the value of the new <see cref="T:System.Data.SqlTypes.SqlDecimal" /> structure.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.#ctor(System.Byte,System.Byte,System.Boolean,System.Int32[])">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.SqlTypes.SqlDecimal" /> structure using the supplied parameters.</para>
      </summary>
      <param name="bPrecision">The maximum number of digits that can be used to represent the <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> property of the new <see cref="T:System.Data.SqlTypes.SqlDecimal" /> structure.</param>
      <param name=" bScale">The number of decimal places to which the <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> property will be resolved for the new <see cref="T:System.Data.SqlTypes.SqlDecimal" /> structure.</param>
      <param name=" fPositive">A boolean value indicating whether the new <see langword="SqlDecimal" /> structure represents a positive or negative number.</param>
      <param name=" bits">The 128-bit unsigned integer that that provides the value of the new <see langword="SqlDecimal" /> .</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.#ctor(System.Byte,System.Byte,System.Boolean,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.SqlTypes.SqlDecimal" />
structure using the supplied parameters.</para>
      </summary>
      <param name="bPrecision">The maximum number of digits that can be used to represent the <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> property of the new <see cref="T:System.Data.SqlTypes.SqlDecimal" /> structure.</param>
      <param name=" bScale">The number of decimal places to which the <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> property will be resolved for the new <see cref="T:System.Data.SqlTypes.SqlDecimal" /> structure.</param>
      <param name=" fPositive">A boolean value indicating whether the new <see langword="SqlDecimal" /> structure represents a positive or negative number.</param>
      <param name=" data1">An 32-bit unsigned integer which will be combined with data2, data3, and data4 to make up the 128-bit unsigned integer that represents the new <see langword="SqlDecimal" /> structures value.</param>
      <param name=" data2">An 32-bit unsigned integer which will be combined with data1, data3, and data4 to make up the 128-bit unsigned integer that represents the new <see langword="SqlDecimal" /> structures value.</param>
      <param name=" data3">An 32-bit unsigned integer which will be combined with data1, data2, and data4 to make up the 128-bit unsigned integer that represents the new <see langword="SqlDecimal" /> structures value.</param>
      <param name=" data4">An 32-bit unsigned integer which will be combined with data1, data2, and data3 to make up the 128-bit unsigned integer that represents the new <see langword="SqlDecimal" /> structures value.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.#ctor(System.Double)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.SqlTypes.SqlDecimal" />
structure using the supplied double parameter.</para>
      </summary>
      <param name="dVal">A double, representing the value for the new <see cref="T:System.Data.SqlTypes.SqlDecimal" /> structure.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.ToString">
      <summary>
        <para>Converts this <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 
structure to <see cref="T:System.String" /> .</para>
      </summary>
      <returns>
        <para>A new <see cref="T:System.String" /> object containing the string 
   representation of the <see cref="T:System.Data.SqlTypes.SqlDecimal" /> structure's <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> property.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Parse(System.String)">
      <summary>
        <para>Converts the <see cref="T:System.String" /> representation of a number to
   its <see cref="T:System.Data.SqlTypes.SqlDecimal" />
   equivalent.</para>
      </summary>
      <param name="s">The <see langword="String" /> to be parsed.</param>
      <returns>
        <para>A <see cref="T:System.Data.SqlTypes.SqlDecimal" /> equivalent to the value 
   contained in the specified <see cref="T:System.String" /><paramref name="." /></para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.ToDouble">
      <summary>
        <para>Returns the a double equal to the contents of 
      the <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> property of this instance.</para>
      </summary>
      <returns>
        <para>The decimal representation of the <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> property.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Implicit(System.Decimal)~System.Data.SqlTypes.SqlDecimal">
      <summary>
        <para>Converts the <see cref="T:System.Decimal" /> value to <see cref="T:System.Data.SqlTypes.SqlDecimal" /> .</para>
      </summary>
      <param name="x">The <see langword="Decimal" /> value to be converted.</param>
      <returns>
        <para>A new <see langword="SqlDecimal" /> structure
   whose <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" />
   property equals the value of the <see langword="Decimal" /> parameter. </para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Explicit(System.Data.SqlTypes.SqlDecimal)~System.Decimal">
      <summary>
        <para>Converts the <see cref="T:System.Data.SqlTypes.SqlDecimal" /> parameter to <see cref="T:System.Decimal" />.</para>
      </summary>
      <param name="x">The <see langword="SqlDecimal" /> structure to be converted.</param>
      <returns>
        <para>A new <see langword="Decimal" /> structure whose value equals
   the <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> of
   the <see langword="SqlDecimal" /> parameter.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_UnaryNegation(System.Data.SqlTypes.SqlDecimal)">
      <summary>
        <para>The unary minus operator negates the <see cref="T:System.Data.SqlTypes.SqlDecimal" /> parameter.</para>
      </summary>
      <param name="x">The <see cref="T:System.Data.SqlTypes.SqlDecimal" /> structure to be negated.</param>
      <returns>
        <para>A new <see cref="T:System.Data.SqlTypes.SqlDecimal" /> structure whose value
   contains the results of the negation.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Addition(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary>
        <para> Calcuates the sum of the
      two <see cref="T:System.Data.SqlTypes.SqlDecimal" /> operators.</para>
      </summary>
      <param name="x">A <see cref="T:System.Data.SqlTypes.SqlDecimal" /> structure.</param>
      <param name=" y">A <see cref="T:System.Data.SqlTypes.SqlDecimal" /> structure.</param>
      <returns>
        <para>A new <see cref="T:System.Data.SqlTypes.SqlDecimal" /> structure whose <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> property contains the sum.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Subtraction(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary>
        <para> Calcuates the
      results of subtracting the second <see cref="T:System.Data.SqlTypes.SqlDecimal" /> operand from the first.</para>
      </summary>
      <param name="x">A <see langword="SqlDecimal" /> structure.</param>
      <param name=" y">A <see langword="SqlDecimal" /> structure.</param>
      <returns>
        <para>A new <see langword="SqlDecimal" /> structure whose Value property contains
   the results of the subtraction.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Multiply(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary>
        <para>The multiplication operator computes the product of the
      two <see cref="T:System.Data.SqlTypes.SqlDecimal" /> parameters.</para>
      </summary>
      <param name="x">A <see cref="T:System.Data.SqlTypes.SqlDecimal" /> structure.</param>
      <param name=" y">A <see cref="T:System.Data.SqlTypes.SqlDecimal" /> structure.</param>
      <returns>
        <para>A new <see cref="T:System.Data.SqlTypes.SqlDecimal" /> structure whose <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> property contains the product
   of the multiplication.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Division(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary>
        <para>The division operator calculates the results of dividing
      the first <see cref="T:System.Data.SqlTypes.SqlDecimal" /> operand by the second.</para>
      </summary>
      <param name="x">A <see cref="T:System.Data.SqlTypes.SqlDecimal" /> structure.</param>
      <param name=" y">A <see cref="T:System.Data.SqlTypes.SqlDecimal" /> structure.</param>
      <returns>
        <para>A new <see cref="T:System.Data.SqlTypes.SqlDecimal" /> structure
   whose <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> property contains the results
   of the division.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Explicit(System.Data.SqlTypes.SqlBoolean)~System.Data.SqlTypes.SqlDecimal">
      <summary>
        <para>Converts the supplied <see cref="T:System.Data.SqlTypes.SqlBoolean" /> structure to <see cref="T:System.Data.SqlTypes.SqlDecimal" /> .</para>
      </summary>
      <param name="x">The <see cref="T:System.Data.SqlTypes.SqlBoolean" /> structure to be converted.</param>
      <returns>
        <para>A new <see cref="T:System.Data.SqlTypes.SqlDecimal" /> structure
   whose <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> is equal to the <see cref="P:System.Data.SqlTypes.SqlBoolean.ByteValue" /> of the <see cref="T:System.Data.SqlTypes.SqlBoolean" /> parameter.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Implicit(System.Data.SqlTypes.SqlByte)~System.Data.SqlTypes.SqlDecimal">
      <summary>
        <para>Converts the supplied <see cref="T:System.Data.SqlTypes.SqlByte" />
structure to <see cref="T:System.Data.SqlTypes.SqlDecimal" /> .</para>
      </summary>
      <param name="x">The <see cref="T:System.Data.SqlTypes.SqlByte" /> structure to be converted.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Implicit(System.Data.SqlTypes.SqlInt16)~System.Data.SqlTypes.SqlDecimal">
      <summary>
        <para>Converts the supplied <see cref="T:System.Data.SqlTypes.SqlInt16" />
structure to <see cref="T:System.Data.SqlTypes.SqlDecimal" /></para>
      </summary>
      <param name="x">The <see cref="T:System.Data.SqlTypes.SqlInt16" /> structure to be converted.</param>
      <returns>
        <para>A new <see cref="T:System.Data.SqlTypes.SqlDecimal" /> structure
   whose <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> property equals
   the <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> property of the <see cref="T:System.Data.SqlTypes.SqlInt16" /> parameter.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Implicit(System.Data.SqlTypes.SqlInt32)~System.Data.SqlTypes.SqlDecimal">
      <summary>
        <para>Converts the supplied <see cref="T:System.Data.SqlTypes.SqlInt32" />
structure to <see cref="T:System.Data.SqlTypes.SqlDecimal" /> .</para>
      </summary>
      <param name="x">The <see cref="T:System.Data.SqlTypes.SqlInt32" /> structure to be converted.</param>
      <returns>
        <para>A new <see cref="T:System.Data.SqlTypes.SqlDecimal" /> structure
   whose <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> property is equal to the <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" />
   property of the <see cref="T:System.Data.SqlTypes.SqlInt32" /> parameter.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Implicit(System.Data.SqlTypes.SqlInt64)~System.Data.SqlTypes.SqlDecimal">
      <summary>
        <para>Converts the supplied <see cref="T:System.Data.SqlTypes.SqlInt64" /> structure to SqlDecimal.</para>
      </summary>
      <param name="x">The <see cref="T:System.Data.SqlTypes.SqlInt64" /> structure to be converted.</param>
      <returns>
        <para>A new <see cref="T:System.Data.SqlTypes.SqlDecimal" /> structure
   whose <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> equals the <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> of the <see cref="T:System.Data.SqlTypes.SqlInt64" /> parameter.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Implicit(System.Data.SqlTypes.SqlMoney)~System.Data.SqlTypes.SqlDecimal">
      <summary>
        <para>Converts the <see cref="T:System.Data.SqlTypes.SqlMoney" /> operand to <see cref="T:System.Data.SqlTypes.SqlDecimal" /> .</para>
      </summary>
      <param name="x">The <see cref="T:System.Data.SqlTypes.SqlMoney" /> structure to be converted.</param>
      <returns>
        <para>A new <see cref="T:System.Data.SqlTypes.SqlDecimal" /> structure
   whose <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> equals the <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> of the <see cref="T:System.Data.SqlTypes.SqlMoney" /> parameter.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Explicit(System.Data.SqlTypes.SqlSingle)~System.Data.SqlTypes.SqlDecimal">
      <summary>
        <para>Converts the supplied <see cref="T:System.Data.SqlTypes.SqlSingle" />
structure to <see cref="T:System.Data.SqlTypes.SqlDecimal" /> .</para>
      </summary>
      <param name="x">The <see cref="T:System.Data.SqlTypes.SqlSingle" /> structure to be converted.</param>
      <returns>
        <para>A new <see cref="T:System.Data.SqlTypes.SqlDecimal" /> structure
   whose <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> property equals
   the <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> of the <see cref="T:System.Data.SqlTypes.SqlSingle" /> parameter.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Explicit(System.Data.SqlTypes.SqlDouble)~System.Data.SqlTypes.SqlDecimal">
      <summary>
        <para>Converts the supplied <see cref="T:System.Data.SqlTypes.SqlDouble" />
structure to <see cref="T:System.Data.SqlTypes.SqlDecimal" /> .</para>
      </summary>
      <param name="x">The <see cref="T:System.Data.SqlTypes.SqlDouble" /> structure to be converted.</param>
      <returns>
        <para>A new <see cref="T:System.Data.SqlTypes.SqlDecimal" /> structure
   whose <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> equals the <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> of the <see cref="T:System.Data.SqlTypes.SqlDouble" /> parameter.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlDecimal">
      <summary>
        <para>Converts the supplied <see cref="T:System.Data.SqlTypes.SqlString" />
parameter to <see cref="T:System.Data.SqlTypes.SqlDecimal" /> .</para>
      </summary>
      <param name="x">The <see cref="T:System.Data.SqlTypes.SqlString" /> object to be converted.</param>
      <returns>
        <para>A new <see cref="T:System.Data.SqlTypes.SqlDecimal" /> structure
   whose <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> equals the value represented by
   the <see cref="T:System.Data.SqlTypes.SqlString" />
   parameter.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.AdjustScale(System.Data.SqlTypes.SqlDecimal,System.Int32,System.Boolean)">
      <summary>
        <para>The scale of the <see cref="T:System.Data.SqlTypes.SqlDecimal" /> operand will be adjusted
   to the number of digits indicated by the digits parameter. Depending on the
   value of the fRound parameter, the value will either be rounded to the
   appropriate number of digits or truncated.</para>
      </summary>
      <param name="n">The <see langword="SqlDecimal" /> structure to be adjusted.</param>
      <param name=" digits">The number of digits in the adjusted structure.</param>
      <param name=" fRound">If this parameter is <see langword="true" />, the new Value will be rounded, if <see langword="false" />, the value will be truncated.</param>
      <returns>
        <para>A new <see cref="T:System.Data.SqlTypes.SqlDecimal" /> structure whose <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> property contains the adjusted number.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.ConvertToPrecScale(System.Data.SqlTypes.SqlDecimal,System.Int32,System.Int32)">
      <summary>
        <para>Adjusts the value of the <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 
operand to the indicated precision and scale.</para>
      </summary>
      <param name="n">The SqlDecimal structure whose value is to be adjusted.</param>
      <param name=" precision">The precision for the new SqlDecimal structure.</param>
      <param name=" scale">The scale for the new SqlDecimal structure.</param>
      <returns>
        <para>A new <see cref="T:System.Data.SqlTypes.SqlDecimal" /> structure whose Value has 
   been adjusted to the precision and scale indicated in the parameters.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Equality(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary>
        <para>Performs a logical comparison of the two <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 
operands to determine if they are equal.</para>
      </summary>
      <param name="x">A <see cref="T:System.Data.SqlTypes.SqlDecimal" /> structure.</param>
      <param name=" y">A <see cref="T:System.Data.SqlTypes.SqlDecimal" /> structure.</param>
      <returns>
   A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the two instances are equal
   or <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> if the two instances are not
   equal. If either instance of <see cref="T:System.Data.SqlTypes.SqlDecimal" /> is null, the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of the <see cref="T:System.Data.SqlTypes.SqlBoolean" />
   will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> .
</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_Inequality(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary>
        <para>Performs a logical comparison of the two <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 
parameters to determine if they are equal.</para>
      </summary>
      <param name="x">A <see cref="T:System.Data.SqlTypes.SqlDecimal" /> structure.</param>
      <param name=" y">A <see cref="T:System.Data.SqlTypes.SqlDecimal" /> structure.</param>
      <returns>
   A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the two instances are not
   equal or <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> if the two instances are equal.
   If either instance of <see cref="T:System.Data.SqlTypes.SqlDecimal" /> is null, the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of the <see cref="T:System.Data.SqlTypes.SqlBoolean" />
   will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.
</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_LessThan(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary>
        <para>Performs a logical comparison of two <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 
structures to determine if the first is less than the second.</para>
      </summary>
      <param name="x">A <see cref="T:System.Data.SqlTypes.SqlDecimal" /> structure.</param>
      <param name=" y">A <see cref="T:System.Data.SqlTypes.SqlDecimal" /> structure.</param>
      <returns>
        <para>A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the first 
   instance is less than the second instance, otherwise <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> . If either instance of <see cref="T:System.Data.SqlTypes.SqlDecimal" />
   is null, the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of the <see cref="T:System.Data.SqlTypes.SqlBoolean" />
   will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_GreaterThan(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary>
        <para>Performs a logical comparison of two <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 
structures to determine if the first is greater than the second.</para>
      </summary>
      <param name="x">A <see cref="T:System.Data.SqlTypes.SqlDecimal" /> structure.</param>
      <param name=" y">A <see cref="T:System.Data.SqlTypes.SqlDecimal" /> structure.</param>
      <returns>
        <para>A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the first 
   instance is less than the second instance, otherwise <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> . If either instance of <see cref="T:System.Data.SqlTypes.SqlDecimal" />
   is null, the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of the <see cref="T:System.Data.SqlTypes.SqlBoolean" />
   will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_LessThanOrEqual(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary>
        <para>Performs a logical comparison of the two <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 
parameters to determine if the first is less than or equal to the second.</para>
      </summary>
      <param name="x">A <see cref="T:System.Data.SqlTypes.SqlDecimal" /> structure.</param>
      <param name=" y">A <see cref="T:System.Data.SqlTypes.SqlDecimal" /> structure.</param>
      <returns>
        <para>A<see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is<see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the first 
   instance is less than or equal to the second instance, otherwise<see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. If either instance of <see cref="T:System.Data.SqlTypes.SqlDecimal" />
   is null, the<see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of the<see cref="T:System.Data.SqlTypes.SqlBoolean" />
   will be<see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary>
        <para>Performs a logical comparison of the two <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 
parameters to determine if the first is greater than or equal to the second.</para>
      </summary>
      <param name="x">A <see cref="T:System.Data.SqlTypes.SqlDecimal" /> structure.</param>
      <param name=" y">A <see cref="T:System.Data.SqlTypes.SqlDecimal" /> structure.</param>
      <returns>
        <para>A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the first 
   instance is greaater than or equal to the second instance, otherwise <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. If either instance of <see cref="T:System.Data.SqlTypes.SqlDecimal" />
   is null, the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of the <see cref="T:System.Data.SqlTypes.SqlBoolean" />
   will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> .</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Add(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary>
        <para> Calcuates the sum of the
      two <see cref="T:System.Data.SqlTypes.SqlDecimal" /> operators.</para>
      </summary>
      <param name="x">A <see cref="T:System.Data.SqlTypes.SqlDecimal" /> structure.</param>
      <param name=" y">A <see cref="T:System.Data.SqlTypes.SqlDecimal" /> structure.</param>
      <returns>
        <para>A new <see cref="T:System.Data.SqlTypes.SqlDecimal" /> structure whose <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> property contains the sum.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Subtract(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary>
        <para> Calcuates the
      results of subtracting the second <see cref="T:System.Data.SqlTypes.SqlDecimal" /> operand from the first.</para>
      </summary>
      <param name="x">A <see langword="SqlDecimal" /> structure.</param>
      <param name=" y">A <see langword="SqlDecimal" /> structure.</param>
      <returns>
        <para>A new <see langword="SqlDecimal" /> structure whose Value property contains
   the results of the subtraction.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Multiply(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary>
        <para>The multiplication operator computes the product of the
      two <see cref="T:System.Data.SqlTypes.SqlDecimal" /> parameters.</para>
      </summary>
      <param name="x">A <see cref="T:System.Data.SqlTypes.SqlDecimal" /> structure.</param>
      <param name=" y">A <see cref="T:System.Data.SqlTypes.SqlDecimal" /> structure.</param>
      <returns>
        <para>A new <see cref="T:System.Data.SqlTypes.SqlDecimal" /> structure whose <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> property contains the product
   of the multiplication.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Divide(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary>
        <para>The division operator calculates the results of dividing
      the first <see cref="T:System.Data.SqlTypes.SqlDecimal" /> operand by the second.</para>
      </summary>
      <param name="x">A <see cref="T:System.Data.SqlTypes.SqlDecimal" /> structure.</param>
      <param name=" y">A <see cref="T:System.Data.SqlTypes.SqlDecimal" /> structure.</param>
      <returns>
        <para>A new <see cref="T:System.Data.SqlTypes.SqlDecimal" /> structure
   whose <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> property contains the results
   of the division.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Equals(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary>
        <para>Performs a logical comparison of the two <see cref="T:System.Data.SqlTypes.SqlDecimal" />
operands to determine if they are equal.</para>
      </summary>
      <param name="x">A <see cref="T:System.Data.SqlTypes.SqlDecimal" /> structure.</param>
      <param name=" y">A <see cref="T:System.Data.SqlTypes.SqlDecimal" /> structure.</param>
      <returns>
   A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the two instances are equal
   or <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> if the two instances are not
   equal. If either instance of <see cref="T:System.Data.SqlTypes.SqlDecimal" /> is null, the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of the <see cref="T:System.Data.SqlTypes.SqlBoolean" />
   will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> .
</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.NotEquals(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary>
        <para>Performs a logical comparison of the two <see cref="T:System.Data.SqlTypes.SqlDecimal" />
parameters to determine if they are equal.</para>
      </summary>
      <param name="x">A <see cref="T:System.Data.SqlTypes.SqlDecimal" /> structure.</param>
      <param name=" y">A <see cref="T:System.Data.SqlTypes.SqlDecimal" /> structure.</param>
      <returns>
   A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the two instances are not
   equal or <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> if the two instances are equal.
   If either instance of <see cref="T:System.Data.SqlTypes.SqlDecimal" /> is null, the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of the <see cref="T:System.Data.SqlTypes.SqlBoolean" />
   will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.
</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.LessThan(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary>
        <para>Performs a logical comparison of two <see cref="T:System.Data.SqlTypes.SqlDecimal" />
structures to determine if the first is less than the second.</para>
      </summary>
      <param name="x">A <see cref="T:System.Data.SqlTypes.SqlDecimal" /> structure.</param>
      <param name=" y">A <see cref="T:System.Data.SqlTypes.SqlDecimal" /> structure.</param>
      <returns>
        <para>A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the first
   instance is less than the second instance, otherwise <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> . If either instance of <see cref="T:System.Data.SqlTypes.SqlDecimal" />
   is null, the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of the <see cref="T:System.Data.SqlTypes.SqlBoolean" />
   will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.GreaterThan(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary>
        <para>Performs a logical comparison of two <see cref="T:System.Data.SqlTypes.SqlDecimal" />
structures to determine if the first is greater than the second.</para>
      </summary>
      <param name="x">A <see cref="T:System.Data.SqlTypes.SqlDecimal" /> structure.</param>
      <param name=" y">A <see cref="T:System.Data.SqlTypes.SqlDecimal" /> structure.</param>
      <returns>
        <para>A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the first
   instance is less than the second instance, otherwise <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> . If either instance of <see cref="T:System.Data.SqlTypes.SqlDecimal" />
   is null, the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of the <see cref="T:System.Data.SqlTypes.SqlBoolean" />
   will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.LessThanOrEqual(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary>
        <para>Performs a logical comparison of the two <see cref="T:System.Data.SqlTypes.SqlDecimal" />
parameters to determine if the first is less than or equal to the second.</para>
      </summary>
      <param name="x">A <see cref="T:System.Data.SqlTypes.SqlDecimal" /> structure.</param>
      <param name=" y">A <see cref="T:System.Data.SqlTypes.SqlDecimal" /> structure.</param>
      <returns>
        <para>A<see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is<see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the first
   instance is less than or equal to the second instance, otherwise<see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. If either instance of <see cref="T:System.Data.SqlTypes.SqlDecimal" />
   is null, the<see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of the<see cref="T:System.Data.SqlTypes.SqlBoolean" />
   will be<see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.GreaterThanOrEqual(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
      <summary>
        <para>Performs a logical comparison of the two <see cref="T:System.Data.SqlTypes.SqlDecimal" />
parameters to determine if the first is greater than or equal to the second.</para>
      </summary>
      <param name="x">A <see cref="T:System.Data.SqlTypes.SqlDecimal" /> structure.</param>
      <param name=" y">A <see cref="T:System.Data.SqlTypes.SqlDecimal" /> structure.</param>
      <returns>
        <para>A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the first
   instance is greaater than or equal to the second instance, otherwise <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. If either instance of <see cref="T:System.Data.SqlTypes.SqlDecimal" />
   is null, the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of the <see cref="T:System.Data.SqlTypes.SqlBoolean" />
   will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> .</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.ToSqlBoolean">
      <summary>
        <para>Converts this <see cref="T:System.Data.SqlTypes.SqlDecimal" /> structure to <see cref="T:System.Data.SqlTypes.SqlBoolean" /> .</para>
      </summary>
      <returns>
        <para>
          <see langword="true" /> if the <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> is non-zero; 
<see langword="false" /> if zero; otherwise Null.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.ToSqlByte">
      <summary>
        <para>Converts this <see cref="T:System.Data.SqlTypes.SqlDecimal" /> structure to <see cref="T:System.Data.SqlTypes.SqlByte" /> .</para>
      </summary>
      <returns>
        <para>A <see langword="SqlByte" /> structure whose <see langword="Value" /> equals the <see langword="Value" /> of this <see langword="SqlDecimal" /> structure. If the 
<see langword="SqlDecimal" /> structure's Value is <see langword="true" />, then the <see langword="SqlByte" /> structure's <see langword="Value" /> will be 1, otherwise the <see langword="SqlByte" /> structure's <see langword="Value" /> will be 0.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.ToSqlDouble">
      <summary>
        <para>Converts this <see cref="T:System.Data.SqlTypes.SqlDecimal" /> structure to <see cref="T:System.Data.SqlTypes.SqlDouble" /> .</para>
      </summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.ToSqlInt16">
      <summary>
        <para>Converts this <see cref="T:System.Data.SqlTypes.SqlDecimal" /> structure to <see cref="T:System.Data.SqlTypes.SqlInt16" /> .</para>
      </summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.ToSqlInt32">
      <summary>
        <para>Converts this <see cref="T:System.Data.SqlTypes.SqlDecimal" /> structure to <see cref="T:System.Data.SqlTypes.SqlInt32" /> .</para>
      </summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.ToSqlInt64">
      <summary>
        <para>Converts this <see cref="T:System.Data.SqlTypes.SqlDecimal" /> structure to <see cref="T:System.Data.SqlTypes.SqlInt64" /> .</para>
      </summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.ToSqlMoney">
      <summary>
        <para>Converts this <see cref="T:System.Data.SqlTypes.SqlDecimal" /> structure to <see cref="T:System.Data.SqlTypes.SqlMoney" /> .</para>
      </summary>
      <returns>
        <para>
          <see langword="true" /> if this structure has a value of 1; 
<see langword="false" /> if 0; otherwise <see cref="F:System.Data.SqlTypes.SqlMoney.Null" />.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.ToSqlSingle">
      <summary>
        <para>Converts this <see cref="T:System.Data.SqlTypes.SqlDecimal" /> structure to <see cref="T:System.Data.SqlTypes.SqlSingle" /> .</para>
      </summary>
      <returns>
        <para>
          <see langword="true" /> if the <see langword="SqlSingle" />
structure's <see langword="Value" /> is 1; otherwise <see langword="false" />.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.ToSqlString">
      <summary>
        <para>Converts this <see cref="T:System.Data.SqlTypes.SqlDecimal" /> structure to <see cref="T:System.Data.SqlTypes.SqlString" /> .</para>
      </summary>
      <returns>
        <para>A <see langword="SqlString" /> structure whose value is a string representing 
   the date and time contained in this <see langword="SqlDecimal" /> structure.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Abs(System.Data.SqlTypes.SqlDecimal)">
      <summary>
        <para>The Abs member function gets the absolute value of 
      the <see cref="T:System.Data.SqlTypes.SqlDecimal" /> parameter.</para>
      </summary>
      <param name="n">A SqlDecimal structure.</param>
      <returns>
        <para>A <see cref="T:System.Data.SqlTypes.SqlDecimal" /> structure whose <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> property contains the unsigned 
   number representing the absolute value of the <see cref="T:System.Data.SqlTypes.SqlDecimal" /> parameter.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Ceiling(System.Data.SqlTypes.SqlDecimal)">
      <summary>
        <para>Returns the smallest whole number greater than or equal
      to the specified <see cref="T:System.Data.SqlTypes.SqlDecimal" /> structure.</para>
      </summary>
      <param name="n">The <see langword="SqlDecimal" /> structure for which the ceiling value is to be calculated.</param>
      <returns>
        <para>A SqlDecimal representing the smallest whole number greater than or equal to 
      the specified <see langword="SqlDecimal" /> structure.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Floor(System.Data.SqlTypes.SqlDecimal)">
      <summary>
        <para>Rounds a specified <see cref="T:System.Data.SqlTypes.SqlDecimal" /> number to the next
   lower whole number.</para>
      </summary>
      <param name="n">The <see langword="SqlDecimal" /> structure for which the floor value is to be calculated.</param>
      <returns>
        <para>A <see langword="SqlDecimal" /> structure containing the whole number 
   portion of this <see langword="SqlDecimal" /> structure.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Sign(System.Data.SqlTypes.SqlDecimal)">
      <summary>
        <para>Gets a value indicating the sign of a <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 
structure's <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> property.</para>
      </summary>
      <param name="n">The <see cref="T:System.Data.SqlTypes.SqlDecimal" /> structure whose sign is to be evaluated.</param>
      <returns>
        <para>A number indicating the sign of the <see cref="T:System.Data.SqlTypes.SqlDecimal" /> structure.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Round(System.Data.SqlTypes.SqlDecimal,System.Int32)">
      <summary>
        <para>Gets the number nearest the specified <see cref="T:System.Data.SqlTypes.SqlDecimal" /> structure's value with the specified precision.</para>
      </summary>
      <param name="n">The <see langword="SqlDecimal" /> structure to be rounded.</param>
      <param name=" position">The number of significant fractional digits (precision) in the return value.</param>
      <returns>
        <para>A <see langword="SqlDecimal" /> structure containing the results of the 
   rounding operation.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Truncate(System.Data.SqlTypes.SqlDecimal,System.Int32)">
      <summary>
        <para> Truncates the specified SqlDecimal structure's value to 
      the desired position.</para>
      </summary>
      <param name="n">The <see langword="SqlDecimal" /> structure to be truncated.</param>
      <param name=" position">The decimal position to which the number will be truncated.</param>
      <returns>
        <para>Supply a negative value for the <paramref name="position" /> parameter in order to 
   truncate the value to the corresponding positon to the left of the decimal
   point.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Power(System.Data.SqlTypes.SqlDecimal,System.Double)">
      <summary>
        <para>Raises the value of the specified <see cref="T:System.Data.SqlTypes.SqlDecimal" />
structure to the specified exponential power.</para>
      </summary>
      <param name="n">The <see langword="SqlDecimal" /> structure to be raised to a power.</param>
      <param name=" exp">A double value indicating the power to which the number should be raised.</param>
      <returns>
        <para>A <see langword="SqlDecimal" /> structure containing the results.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.CompareTo(System.Object)">
      <summary>
        <para>Compares this instance to the supplied object and 
      returns an indication of their relative values.</para>
      </summary>
      <param name="value">The object to be compared.</param>
      <returns>
        <para>A signed number indicating the relative values of the instance and the
      object.</para>
        <list type="table">
          <listheader>
            <term>Return Value</term>
            <description>Condition</description>
          </listheader>
          <item>
            <term> Less than zero</term>
            <description>This instance is less than
            object.</description>
          </item>
          <item>
            <term> Zero</term>
            <description>This instance is the same as
            object.</description>
          </item>
          <item>
            <term> Greater than zero</term>
            <description>
              <para>This instance is greater than object</para>
              <para>-or-</para>
              <para>object is a null reference
               (<see langword="Nothing" />)</para>
            </description>
          </item>
        </list>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.Equals(System.Object)">
      <summary>
        <para>Compares the supplied object parameter to the <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> property of the <see cref="T:System.Data.SqlTypes.SqlMoney" /> object.</para>
      </summary>
      <param name="value">The object to be compared.</param>
      <returns>
        <see langword="true " />if object is an 
   instance of <see langword="SqlDecimal" /> and the two are equal; otherwise
<see langword="false" />.
</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlDecimal.GetHashCode">
      <summary>
        <para>Returns the hash code for this instance.</para>
      </summary>
      <returns>
        <para>A 32-bit signed integer hash code.</para>
      </returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDecimal.Null">
      <summary>
        <para>Represents a null value that can be assigned to the 
   <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> property of an instance of the 
   <see cref="T:System.Data.SqlTypes.SqlMoney" /> class.</para>
      </summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDecimal.MinValue">
      <summary>
        <para>A constant representing the minimum value for 
      a <see cref="T:System.Data.SqlTypes.SqlDecimal" /> structure.</para>
      </summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlDecimal.MaxValue">
      <summary>
        <para>A constant representing the maximum value of 
      a <see cref="T:System.Data.SqlTypes.SqlDecimal" /> structure.</para>
      </summary>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDecimal.IsNull">
      <summary>
        <para>Indicates whether or not the <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> of this <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 
structure is null.</para>
      </summary>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDecimal.Value">
      <summary>
        <para> Gets the value of the <see cref="T:System.Data.SqlTypes.SqlDecimal" /> structure. This property is read-only.</para>
      </summary>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDecimal.IsPositive">
      <summary>
        <para>Indicates whether or not the <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> of this <see cref="T:System.Data.SqlTypes.SqlDecimal" />
structure is greater than zero.</para>
      </summary>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDecimal.Precision">
      <summary>
        <para>Gets or sets the maximum number of digits used to
      represent the <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> property.</para>
      </summary>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDecimal.Scale">
      <summary>
        <para>Gets or sets the number of decimal places to
      which <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> is resolved.</para>
      </summary>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDecimal.Data">
      <summary>
        <para>Gets the binary representation of this <see cref="T:System.Data.SqlTypes.SqlDecimal" /> 
structure as an array of integers.</para>
      </summary>
    </member>
    <member name="P:System.Data.SqlTypes.SqlDecimal.BinData">
      <summary>
        <para>Get the binary representation of the value of 
      this <see cref="T:System.Data.SqlTypes.SqlDecimal" /> structure as
      an array of bytes.</para>
      </summary>
    </member>
    <member name="T:System.Data.SqlTypes.SqlSingle">
      <summary>
        <para>
       Represents a floating point number within the range of -3.40E +38 through
       3.40E +38 to be stored in or retrieved from a database.
    </para>
      </summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.#ctor(System.Single)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.SqlTypes.SqlSingle" /> structure.</para>
      </summary>
      <param name="value">A floating point number which will be used as the <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> of the new <see cref="T:System.Data.SqlTypes.SqlSingle" /> structure.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.#ctor(System.Double)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.SqlTypes.SqlSingle" /> 
structure using the supplied double parameter.</para>
      </summary>
      <param name="value">A double value which will be used as the <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> of the new <see cref="T:System.Data.SqlTypes.SqlSingle" /> structure.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Implicit(System.Single)~System.Data.SqlTypes.SqlSingle">
      <summary>
        <para>Converts the specified floating point value to <see cref="T:System.Data.SqlTypes.SqlSingle" /> .</para>
      </summary>
      <param name="x">The float value to be converted to <see langword="SqlSingle" />.</param>
      <returns>
        <para>A <see langword="SqlSingle" /> structure containing the value of the specified 
   float.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Explicit(System.Data.SqlTypes.SqlSingle)~System.Single">
      <summary>
        <para>Converts the specified <see cref="T:System.Data.SqlTypes.SqlSingle" />
structure to float.</para>
      </summary>
      <param name="x">The <see langword="SqlSingle" /> value to be converted to float.</param>
      <returns>
        <para>A float containing the value of the 
   <see langword="SqlSingle" /> 
   structure.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.ToString">
      <summary>
        <para>Converts this <see cref="T:System.Data.SqlTypes.SqlSingle" /> structure to <see cref="T:System.String" /> .</para>
      </summary>
      <returns>
        <para>A <see langword="String" /> object representing the <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> of this instance of 
<see langword="SqlSingle" /> .</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.Parse(System.String)">
      <summary>
        <para>Converts the specified <see cref="T:System.String" /> to a <see cref="T:System.Data.SqlTypes.SqlSingle" /> structure.</para>
      </summary>
      <param name="s">The <see langword="String" /> to be parsed.</param>
      <returns>
        <para>A <see cref="T:System.Data.SqlTypes.SqlSingle" /> equivalent to the value contained in the 
   specified <see cref="T:System.String" /><paramref name="." /></para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_UnaryNegation(System.Data.SqlTypes.SqlSingle)">
      <summary>
        <para>Negates the <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> of the
   specified <see cref="T:System.Data.SqlTypes.SqlSingle" /> structure.</para>
      </summary>
      <param name="x">A <see cref="T:System.Data.SqlTypes.SqlSingle" /> structure.</param>
      <returns>
        <para>A <see langword="SqlSingle" /> structure containing the negated value.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Addition(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary>
        <para>Computes the sum of the two specified <see cref="T:System.Data.SqlTypes.SqlSingle" /> structures.</para>
      </summary>
      <param name="x">A <see langword="SqlSingle" /> structure.</param>
      <param name="y">A <see langword="SqlSingle" /> structure.</param>
      <returns>
        <para>A <see langword="SqlSingle" /> structure containing the sum of the two 
   specified <see langword="SqlSingle" /> structures.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Subtraction(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary>
        <para>Subtracts the second <see cref="T:System.Data.SqlTypes.SqlSingle" />
structure from the first.</para>
      </summary>
      <param name="x">A <see langword="SqlSingle" /> structure.</param>
      <param name="y">A <see langword="SqlSingle" /> structure.</param>
      <returns>
        <para>A <see langword="SqlSingle" /> structure containing the results of the 
   subtraction.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Multiply(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary>
        <para>Computes the product of the two specified <see cref="T:System.Data.SqlTypes.SqlSingle" /> structures.</para>
      </summary>
      <param name="x">A <see langword="SqlSingle" /> structure.</param>
      <param name="y">A <see langword="SqlSingle" /> structure.</param>
      <returns>
        <para>A <see langword="SqlSingle" /> structure containing the product of the 
   multiplication.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Division(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary>
        <para>Divides the first <see cref="T:System.Data.SqlTypes.SqlSingle" /> structure by the second.</para>
      </summary>
      <param name="x">A <see langword="SqlSingle" /> structure.</param>
      <param name="y">A <see langword="SqlSingle" /> structure.</param>
      <returns>
        <para>A <see langword="SqlSingle" /> structure containing the results of the 
   division.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Explicit(System.Data.SqlTypes.SqlBoolean)~System.Data.SqlTypes.SqlSingle">
      <summary>
        <para>This implicit operator converts the
      supplied <see cref="T:System.Data.SqlTypes.SqlBoolean" /> to <see cref="T:System.Data.SqlTypes.SqlSingle" />.</para>
      </summary>
      <param name="x">The <see cref="T:System.Data.SqlTypes.SqlBoolean" /> structure to be converted.</param>
      <returns>
        <para>A new <see cref="T:System.Data.SqlTypes.SqlSingle" /> structure whose <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> is equal to the <see cref="P:System.Data.SqlTypes.SqlBoolean.ByteValue" /> of the <see cref="T:System.Data.SqlTypes.SqlBoolean" />
parameter.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Implicit(System.Data.SqlTypes.SqlByte)~System.Data.SqlTypes.SqlSingle">
      <summary>
        <para>This implicit operator converts the <see cref="T:System.Data.SqlTypes.SqlByte" />
parameter to <see cref="T:System.Data.SqlTypes.SqlSingle" /> .</para>
      </summary>
      <param name="x">The <see cref="T:System.Data.SqlTypes.SqlByte" /> to be converted.</param>
      <returns>
        <para>A new <see cref="T:System.Data.SqlTypes.SqlSingle" /> structure
   whose <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> property equals the <see cref="P:System.Data.SqlTypes.SqlByte.Value" /> of the <see cref="T:System.Data.SqlTypes.SqlByte" /> parameter.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Implicit(System.Data.SqlTypes.SqlInt16)~System.Data.SqlTypes.SqlSingle">
      <summary>
        <para>Converts the supplied <see cref="T:System.Data.SqlTypes.SqlInt16" /> parameter to <see cref="T:System.Data.SqlTypes.SqlSingle" />.</para>
      </summary>
      <param name="x">The <see cref="T:System.Data.SqlTypes.SqlInt16" /> structure to be converted.</param>
      <returns>
        <para>A new <see cref="T:System.Data.SqlTypes.SqlSingle" /> structure whose <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> is equal to the <see cref="P:System.Data.SqlTypes.SqlInt16.Value" /> of the <see cref="T:System.Data.SqlTypes.SqlInt16" />
parameter.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Implicit(System.Data.SqlTypes.SqlInt32)~System.Data.SqlTypes.SqlSingle">
      <summary>
        <para>Converts the supplied <see cref="T:System.Data.SqlTypes.SqlInt32" />
structure to <see cref="T:System.Data.SqlTypes.SqlSingle" /> .</para>
      </summary>
      <param name="x">The <see cref="T:System.Data.SqlTypes.SqlInt32" /> structure to be converted.</param>
      <returns>
        <para>A new <see cref="T:System.Data.SqlTypes.SqlSingle" /> structure whose <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> is equal to the <see cref="P:System.Data.SqlTypes.SqlInt32.Value" /> of the <see cref="T:System.Data.SqlTypes.SqlInt32" /> parameter.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Implicit(System.Data.SqlTypes.SqlInt64)~System.Data.SqlTypes.SqlSingle">
      <summary>
        <para>Converts the supplied <see cref="T:System.Data.SqlTypes.SqlInt64" />
parameter to <see cref="T:System.Data.SqlTypes.SqlSingle" /> .</para>
      </summary>
      <param name="x">The <see cref="T:System.Data.SqlTypes.SqlInt64" /> structure to be converted.</param>
      <returns>
        <para>A new <see cref="T:System.Data.SqlTypes.SqlSingle" /> structure whose <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> is equal to the <see cref="P:System.Data.SqlTypes.SqlInt64.Value" /> of the <see cref="T:System.Data.SqlTypes.SqlInt64" /> parameter.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Implicit(System.Data.SqlTypes.SqlMoney)~System.Data.SqlTypes.SqlSingle">
      <summary>
        <para>Converts the supplied <see cref="T:System.Data.SqlTypes.SqlMoney" />
structure to <see cref="T:System.Data.SqlTypes.SqlSingle" /> .</para>
      </summary>
      <param name="x">The <see cref="T:System.Data.SqlTypes.SqlMoney" /> structure to be converted.</param>
      <returns>
        <para>A new <see cref="T:System.Data.SqlTypes.SqlSingle" /> structure whose <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> is equal to the <see cref="P:System.Data.SqlTypes.SqlMoney.Value" /> of the <see cref="T:System.Data.SqlTypes.SqlMoney" /> parameter.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Implicit(System.Data.SqlTypes.SqlDecimal)~System.Data.SqlTypes.SqlSingle">
      <summary>
        <para>Converts the supplied <see cref="T:System.Data.SqlTypes.SqlDecimal" />
parameter to <see cref="T:System.Data.SqlTypes.SqlSingle" /> .</para>
      </summary>
      <param name="x">The <see cref="T:System.Data.SqlTypes.SqlDecimal" /> structure to be converted.</param>
      <returns>
        <para>A new <see cref="T:System.Data.SqlTypes.SqlSingle" /> structure whose <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> is equal to the <see cref="P:System.Data.SqlTypes.SqlDecimal.Value" /> of the <see cref="T:System.Data.SqlTypes.SqlDecimal" /> parameter.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Explicit(System.Data.SqlTypes.SqlDouble)~System.Data.SqlTypes.SqlSingle">
      <summary>
        <para>Converts the supplied <see cref="T:System.Data.SqlTypes.SqlDouble" />
parameter to <see cref="T:System.Data.SqlTypes.SqlSingle" /> .</para>
      </summary>
      <param name="x">The <see cref="T:System.Data.SqlTypes.SqlDouble" /> parameter to be converted.</param>
      <returns>
        <para>A new <see cref="T:System.Data.SqlTypes.SqlSingle" /> structure whose <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> is equal to the <see cref="P:System.Data.SqlTypes.SqlDouble.Value" /> of the <see cref="T:System.Data.SqlTypes.SqlDouble" /> parameter.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlSingle">
      <summary>
        <para>Converts the supplied <see cref="T:System.Data.SqlTypes.SqlString" />
parameter to <see cref="T:System.Data.SqlTypes.SqlSingle" /> .</para>
      </summary>
      <param name="x">The SqlString object to be converted.</param>
      <returns>
        <para>A new <see cref="T:System.Data.SqlTypes.SqlSingle" /> structure whose <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> is equal to the
   value represented by the <see cref="T:System.Data.SqlTypes.SqlString" /> parameter.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Equality(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary>
        <para>Performs a logical comparison of the two SqlSingle 
      parameters to determine if they are equal.</para>
      </summary>
      <param name="x">A <see cref="T:System.Data.SqlTypes.SqlSingle" /> structure.</param>
      <param name="y">A <see cref="T:System.Data.SqlTypes.SqlSingle" /> structure.</param>
      <returns>
        <para>A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the two 
   instances are equal or <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> if the two instances are not
   equal. If either instance of <see cref="T:System.Data.SqlTypes.SqlSingle" /> is null, the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of the <see cref="T:System.Data.SqlTypes.SqlBoolean" />
   will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> .</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_Inequality(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary>
        <para>Performs a logical comparison of the two <see cref="T:System.Data.SqlTypes.SqlSingle" /> 
parameters to determine if they are equal.</para>
      </summary>
      <param name="x">A <see cref="T:System.Data.SqlTypes.SqlSingle" /> structure.</param>
      <param name="y">A <see cref="T:System.Data.SqlTypes.SqlSingle" /> structure.</param>
      <returns>
        <para>A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the two 
   instances are not equal or <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> if the two instances are equal.
   If either instance of <see cref="T:System.Data.SqlTypes.SqlSingle" /> is null, the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of the <see cref="T:System.Data.SqlTypes.SqlBoolean" />
   will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_LessThan(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary>
        <para>Performs a logical comparison of the two <see cref="T:System.Data.SqlTypes.SqlSingle" /> 
parameters to determine if the first is less than the second.</para>
      </summary>
      <param name="x">A <see cref="T:System.Data.SqlTypes.SqlSingle" /> structure.</param>
      <param name="y">A <see cref="T:System.Data.SqlTypes.SqlSingle" /> structure.</param>
      <returns>
   A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the first instance is less
   than the second instance, otherwise <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> . If either
   instance of <see cref="T:System.Data.SqlTypes.SqlSingle" /> is null, the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of the <see cref="T:System.Data.SqlTypes.SqlBoolean" />
   will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.
</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_GreaterThan(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary>
        <para>Performs a logical comparison of the two <see cref="T:System.Data.SqlTypes.SqlSingle" /> 
operands to determine if the first is greater than the second.</para>
      </summary>
      <param name="x">A <see cref="T:System.Data.SqlTypes.SqlSingle" /> structure.</param>
      <param name="y">A <see cref="T:System.Data.SqlTypes.SqlSingle" /> structure.</param>
      <returns>
   A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the first instance is
   greater than the second instance, otherwise <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. If either
   instance of <see cref="T:System.Data.SqlTypes.SqlSingle" /> is null, the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of the <see cref="T:System.Data.SqlTypes.SqlBoolean" />
   will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.
</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_LessThanOrEqual(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary>
        <para>Performs a logical comparison of the two <see cref="T:System.Data.SqlTypes.SqlSingle" /> 
parameters to determine if thye first is less than or equal to the second.</para>
      </summary>
      <param name="x">A <see cref="T:System.Data.SqlTypes.SqlSingle" /> structure.</param>
      <param name="y">A <see cref="T:System.Data.SqlTypes.SqlSingle" /> structure.</param>
      <returns>
        <para>A<see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is<see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the first 
   instance is less than or equal to the second instance, otherwise<see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. If either instance of <see cref="T:System.Data.SqlTypes.SqlSingle" />
   is null, the<see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of the<see cref="T:System.Data.SqlTypes.SqlBoolean" />
   will be<see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary>
        <para>Performs a logical comparison of two <see cref="T:System.Data.SqlTypes.SqlSingle" /> 
structures to determine if the first is greater than or equl to the second.</para>
      </summary>
      <param name="x">A <see cref="T:System.Data.SqlTypes.SqlSingle" /> structure.</param>
      <param name="y">A <see cref="T:System.Data.SqlTypes.SqlSingle" /> structure.</param>
      <returns>
        <para>A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the first 
   instance is greaater than or equal to the second instance, otherwise <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. If either instance of <see cref="T:System.Data.SqlTypes.SqlSingle" />
   is null, the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of the <see cref="T:System.Data.SqlTypes.SqlBoolean" />
   will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> .</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.Add(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary>
        <para>Computes the sum of the two specified <see cref="T:System.Data.SqlTypes.SqlSingle" /> structures.</para>
      </summary>
      <param name="x">A <see langword="SqlSingle" /> structure.</param>
      <param name="y">A <see langword="SqlSingle" /> structure.</param>
      <returns>
        <para>A <see langword="SqlSingle" /> structure containing the sum of the two 
   specified <see langword="SqlSingle" /> structures.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.Subtract(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary>
        <para>Subtracts the second <see cref="T:System.Data.SqlTypes.SqlSingle" />
structure from the first.</para>
      </summary>
      <param name="x">A <see langword="SqlSingle" /> structure.</param>
      <param name="y">A <see langword="SqlSingle" /> structure.</param>
      <returns>
        <para>A <see langword="SqlSingle" /> structure containing the results of the 
   subtraction.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.Multiply(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary>
        <para>Computes the product of the two specified <see cref="T:System.Data.SqlTypes.SqlSingle" /> structures.</para>
      </summary>
      <param name="x">A <see langword="SqlSingle" /> structure.</param>
      <param name="y">A <see langword="SqlSingle" /> structure.</param>
      <returns>
        <para>A <see langword="SqlSingle" /> structure containing the product of the 
   multiplication.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.Divide(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary>
        <para>Divides the first <see cref="T:System.Data.SqlTypes.SqlSingle" /> structure by the second.</para>
      </summary>
      <param name="x">A <see langword="SqlSingle" /> structure.</param>
      <param name="y">A <see langword="SqlSingle" /> structure.</param>
      <returns>
        <para> A <see langword="SqlInt64" /> 
structure containing the results of the division.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.Equals(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary>
        <para>Performs a logical comparison of the two SqlSingle
      parameters to determine if they are equal.</para>
      </summary>
      <param name="x">A <see cref="T:System.Data.SqlTypes.SqlSingle" /> structure.</param>
      <param name="y">A <see cref="T:System.Data.SqlTypes.SqlSingle" /> structure.</param>
      <returns>
        <para>A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the two
   instances are equal or <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> if the two instances are not
   equal. If either instance of <see cref="T:System.Data.SqlTypes.SqlSingle" /> is null, the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of the <see cref="T:System.Data.SqlTypes.SqlBoolean" />
   will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> .</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.NotEquals(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary>
        <para>Performs a logical comparison of the two <see cref="T:System.Data.SqlTypes.SqlSingle" />
parameters to determine if they are equal.</para>
      </summary>
      <param name="x">A <see cref="T:System.Data.SqlTypes.SqlSingle" /> structure.</param>
      <param name="y">A <see cref="T:System.Data.SqlTypes.SqlSingle" /> structure.</param>
      <returns>
        <para>A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the two
   instances are not equal or <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> if the two instances are equal.
   If either instance of <see cref="T:System.Data.SqlTypes.SqlSingle" /> is null, the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of the <see cref="T:System.Data.SqlTypes.SqlBoolean" />
   will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.LessThan(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary>
        <para>Performs a logical comparison of the two <see cref="T:System.Data.SqlTypes.SqlSingle" />
parameters to determine if the first is less than the second.</para>
      </summary>
      <param name="x">A <see cref="T:System.Data.SqlTypes.SqlSingle" /> structure.</param>
      <param name="y">A <see cref="T:System.Data.SqlTypes.SqlSingle" /> structure.</param>
      <returns>
   A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the first instance is less
   than the second instance, otherwise <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> . If either
   instance of <see cref="T:System.Data.SqlTypes.SqlSingle" /> is null, the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of the <see cref="T:System.Data.SqlTypes.SqlBoolean" />
   will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.
</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.GreaterThan(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary>
        <para>Performs a logical comparison of the two <see cref="T:System.Data.SqlTypes.SqlSingle" />
operands to determine if the first is greater than the second.</para>
      </summary>
      <param name="x">A <see cref="T:System.Data.SqlTypes.SqlSingle" /> structure.</param>
      <param name="y">A <see cref="T:System.Data.SqlTypes.SqlSingle" /> structure.</param>
      <returns>
   A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the first instance is
   greater than the second instance, otherwise <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. If either
   instance of <see cref="T:System.Data.SqlTypes.SqlSingle" /> is null, the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of the <see cref="T:System.Data.SqlTypes.SqlBoolean" />
   will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.
</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.LessThanOrEqual(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary>
        <para>Performs a logical comparison of the two <see cref="T:System.Data.SqlTypes.SqlSingle" />
parameters to determine if thye first is less than or equal to the second.</para>
      </summary>
      <param name="x">A <see cref="T:System.Data.SqlTypes.SqlSingle" /> structure.</param>
      <param name="y">A <see cref="T:System.Data.SqlTypes.SqlSingle" /> structure.</param>
      <returns>
        <para>A<see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is<see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the first
   instance is less than or equal to the second instance, otherwise<see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. If either instance of <see cref="T:System.Data.SqlTypes.SqlSingle" />
   is null, the<see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of the<see cref="T:System.Data.SqlTypes.SqlBoolean" />
   will be<see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.GreaterThanOrEqual(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
      <summary>
        <para>Performs a logical comparison of two <see cref="T:System.Data.SqlTypes.SqlSingle" />
structures to determine if the first is greater than or equl to the second.</para>
      </summary>
      <param name="x">A <see cref="T:System.Data.SqlTypes.SqlSingle" /> structure.</param>
      <param name="y">A <see cref="T:System.Data.SqlTypes.SqlSingle" /> structure.</param>
      <returns>
        <para>A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the first
   instance is greaater than or equal to the second instance, otherwise <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. If either instance of <see cref="T:System.Data.SqlTypes.SqlSingle" />
   is null, the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of the <see cref="T:System.Data.SqlTypes.SqlBoolean" />
   will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> .</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.ToSqlBoolean">
      <summary>
        <para>Converts this <see cref="T:System.Data.SqlTypes.SqlSingle" /> structure to <see cref="T:System.Data.SqlTypes.SqlBoolean" />.</para>
      </summary>
      <returns>
        <para>
          <see langword="true" /> if the <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> is non-zero; 
<see langword="false" /> if zero; otherwise Null.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.ToSqlByte">
      <summary>
        <para>Converts this <see cref="T:System.Data.SqlTypes.SqlSingle" /> structure to <see cref="T:System.Data.SqlTypes.SqlByte" /> .</para>
      </summary>
      <returns>
        <para>A <see langword="SqlByte" /> structure whose <see langword="Value" /> equals the <see langword="Value" /> of this <see langword="SqlSingle" /> structure. If the 
<see langword="SqlSingle" /> structure's Value is <see langword="true" />, then the <see langword="SqlByte" /> structure's <see langword="Value" /> will be 1, otherwise the <see langword="SqlByte" /> structure's <see langword="Value" /> will be 0.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.ToSqlDouble">
      <summary>
        <para>Converts this <see cref="T:System.Data.SqlTypes.SqlSingle" /> structure to <see cref="T:System.Data.SqlTypes.SqlDouble" /> .</para>
      </summary>
      <returns>
        <para>A new <see langword="SqlDouble" /> structure whose <see langword="Value" /> equals 1 if the <see langword="SqlSingle" /> structure's Value was <see langword="true" />; otherwise the <see langword="Value" /> of the new <see langword="SqlDouble" /> structure is 0.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.ToSqlInt16">
      <summary>
        <para>Converts this <see cref="T:System.Data.SqlTypes.SqlSingle" /> structure to <see cref="T:System.Data.SqlTypes.SqlInt16" /> .</para>
      </summary>
      <returns>
        <para>A new <see langword="SqlInt16" /> structure whose <see langword="Value" /> equals 
   1 if the <see langword="SqlSingle" /> structure's <see langword="Value " />was
<see langword="true" />, otherwise the <see langword="Value" /> of the new 
<see langword="SqlInt16" /> structure is 0.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.ToSqlInt32">
      <summary>
        <para>Converts this <see cref="T:System.Data.SqlTypes.SqlSingle" /> structure to <see cref="T:System.Data.SqlTypes.SqlInt32" /> .</para>
      </summary>
      <returns>
        <para>A new <see langword="SqlInt32" /> structure whose <see langword="Value" /> equals 
   1 if the <see langword="SqlSingle" /> structure's <see langword="Value " />was
<see langword="true" />, otherwise the <see langword="Value" /> of the new 
<see langword="SqlInt32" /> structure is 0.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.ToSqlInt64">
      <summary>
        <para>Converts this <see cref="T:System.Data.SqlTypes.SqlSingle" /> structure to <see cref="T:System.Data.SqlTypes.SqlInt64" /> .</para>
      </summary>
      <returns>
        <para>A new <see langword="SqlInt64" /> structure whose <see langword="Value" /> equals 
   1 if the <see langword="SqlSingle" /> structure's <see langword="Value " />was
<see langword="true" />, otherwise the <see langword="Value" /> of the new 
<see langword="SqlInt64" /> structure is 0.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.ToSqlMoney">
      <summary>
        <para>Converts this <see cref="T:System.Data.SqlTypes.SqlSingle" /> structure to <see cref="T:System.Data.SqlTypes.SqlMoney" /> .</para>
      </summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.ToSqlDecimal">
      <summary>
        <para>Converts this <see cref="T:System.Data.SqlTypes.SqlSingle" /> structure to <see cref="T:System.Data.SqlTypes.SqlDecimal" /> .</para>
      </summary>
      <returns>
        <para>A new <see langword="SqlDecimal" /> structure whose 
<see langword="Value" /> equals 1 if the <see langword="SqlSingle" /> structure's Value was <see langword="true" />; otherwise the <see langword="Value" /> of the new <see langword="SqlDecimal" /> structure is 0.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.ToSqlString">
      <summary>
        <para>Converts this <see cref="T:System.Data.SqlTypes.SqlSingle" /> structure to <see cref="T:System.Data.SqlTypes.SqlString" /> .</para>
      </summary>
      <returns>
        <para>A <see langword="SqlString" /> structure whose value is a string representing 
   the date and time contained in this <see langword="SqlSingle" /> structure.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.CompareTo(System.Object)">
      <summary>
        <para>Compares this instance to the supplied object and returns 
      an indication of their relative values.</para>
      </summary>
      <param name="value">The object to be compared.</param>
      <returns>
        <para>A signed number indicating the relative values of the instance and the
      object.</para>
        <list type="table">
          <listheader>
            <term>Return Value</term>
            <description>Condition</description>
          </listheader>
          <item>
            <term> Less than zero</term>
            <description>This instance is less than
            object.</description>
          </item>
          <item>
            <term> Zero</term>
            <description>This instance is the same as
            object.</description>
          </item>
          <item>
            <term> Greater than zero</term>
            <description>
              <para>This instance is greater than object</para>
              <para>-or-</para>
              <para>object is a null reference
            (<see langword="Nothing" />)</para>
            </description>
          </item>
        </list>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.Equals(System.Object)">
      <summary>
        <para>Compares the supplied object parameter to the <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> property of the <see cref="T:System.Data.SqlTypes.SqlSingle" /> object.</para>
      </summary>
      <param name="value">The object to be compared.</param>
      <returns>
        <para>Equals will return <see langword="true " />if the object is an instance of <see cref="T:System.Data.SqlTypes.SqlSingle" /> and the two are equal; otherwise <see langword="false" />.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlSingle.GetHashCode">
      <summary>
        <para>Gets the hash code for this instance.</para>
      </summary>
      <returns>
        <para>A 32-bit signed integer hash code.</para>
      </returns>
    </member>
    <member name="F:System.Data.SqlTypes.SqlSingle.Null">
      <summary>
        <para>Represents a null value that can be assigned to 
      the <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> property of a <see cref="T:System.Data.SqlTypes.SqlSingle" />
      structure.</para>
      </summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlSingle.Zero">
      <summary>
        <para>Represents the zero value that can be assigned to the
   <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> property of an instance of the
   <see cref="T:System.Data.SqlTypes.SqlSingle" /> class.</para>
      </summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlSingle.MinValue">
      <summary>
        <para>Represents the minimum value that can be assigned to 
   <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> property of an instance of the 
   <see cref="T:System.Data.SqlTypes.SqlSingle" /> class.</para>
      </summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlSingle.MaxValue">
      <summary>
        <para>Represents the maximum value that can be assigned to the <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> property of an instance of the 
<see cref="T:System.Data.SqlTypes.SqlSingle" /> class. </para>
      </summary>
    </member>
    <member name="P:System.Data.SqlTypes.SqlSingle.IsNull">
      <summary>
        <para>Returns a value indicating whether the <see cref="P:System.Data.SqlTypes.SqlSingle.Value" /> property is assigned to null.</para>
      </summary>
    </member>
    <member name="P:System.Data.SqlTypes.SqlSingle.Value">
      <summary>
        <para> Gets the value of this <see cref="T:System.Data.SqlTypes.SqlSingle" /> structure. This property is read-only.</para>
      </summary>
    </member>
    <member name="T:System.Data.SqlTypes.SqlCompareOptions">
      <summary>
        <para>Specifies the compare option values for a <see cref="T:System.Data.SqlTypes.SqlString" /> structure.</para>
      </summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlCompareOptions.None">
      <summary>
        <para> Specifies the default option settings for 
   <see langword="SqlString" /> comparisons.</para>
      </summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlCompareOptions.IgnoreCase">
      <summary>
        <para>Specifies that <see cref="T:System.Data.SqlTypes.SqlString" /> comparisons must ignore case.</para>
      </summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlCompareOptions.IgnoreNonSpace">
      <summary>
        <para>Specifies that <see cref="T:System.Data.SqlTypes.SqlString" /> comparisons must ignore
   nonspace combining characters, such as diacritics. The Unicode Standard defines
   combining characters as characters that are combined with base characters to
   produce a new character. Non-space combining characters do not take up character
   space by themselves when rendered. For more information on non-space combining
   characters, see the Unicode Standard at http://www.unicode.org
   
   .</para>
      </summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlCompareOptions.IgnoreKanaType">
      <summary>
        <para>Specifies that <see cref="T:System.Data.SqlTypes.SqlString" /> comparisons must ignore the
   Kana type. Kana type refers to Japanese hiragana and katakana characters, which
   represent phonetic sounds in the Japanese language. Hiragana is used for native
   Japanese expressions and words, while katakana is used for words borrowed from
   other languages, such as "computer" or "internet". A phonetic sound can be
   expressed in both hiragana and katakana. If this value is selected, the hiragana
   character for one sound is considered equal to the katakana character for the same sound.</para>
      </summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlCompareOptions.IgnoreWidth">
      <summary>
        <para>Specifies that <see cref="T:System.Data.SqlTypes.SqlString" /> comparisons must ignore the
   character width. For example, Japanese katakana characters can be written as
   full-width or half-width and, if this value is selected, the katakana characters
   written as full-width are considered equal to the same characters written in half-width.</para>
      </summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlCompareOptions.BinarySort">
      <summary>
        <para>Specifies that sorts should be based on a characters 
      numeric value rather than its alphabetic value.</para>
      </summary>
    </member>
    <member name="T:System.Data.SqlTypes.SqlString">
      <summary>
        <para>
       Represents a variable-length stream of characters to be stored in or retrieved from the database.
    </para>
      </summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlString.Null">
      <summary>
        <para> Represents a null value that can be assigned to the <see cref="P:System.Data.SqlTypes.SqlString.Value" /> property of an instance of
   the <see cref="T:System.Data.SqlTypes.SqlString" /> structure.
   </para>
      </summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlString.IgnoreCase">
      <summary>
        <para> Specifies that 
   <see langword="SqlString" /> comparisons should ignore case.</para>
      </summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlString.IgnoreWidth">
      <summary>
        <para>Specifies that the string comparison must ignore the character width. For 
      example, Japanese katakana characters can be written as full-width or half-width
      and, if this value is selected, the katakana characters written as full-width
      are considered equal to the same characters written in half-width.</para>
      </summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlString.IgnoreNonSpace">
      <summary>
        <para>Specifies that the string comparison must ignore nonspace combining 
      characters, such as diacritics. The Unicode Standard defines combining
      characters as characters that are combined with base characters to produce a new
      character. Non-space combining characters do not take up character space by
      themselves when rendered. For more information on non-space combining
      characters, see the Unicode Standard at http://www.unicode.org.</para>
      </summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlString.IgnoreKanaType">
      <summary>
        <para>Specifies that the string comparison must ignore the Kana type. Kana type 
      refers to Japanese hiragana and katakana characters, which represent phonetic
      sounds in the Japanese language. Hiragana is used for native Japanese
      expressions and words, while katakana is used for words borrowed from other
      languages, such as "computer" or "internet". A phonetic sound can be expressed
      in both hiragana and katakana. If this value is selected, the hiragana character
      for one sound is considered equal to the katakana character for the same
      sound.</para>
      </summary>
    </member>
    <member name="F:System.Data.SqlTypes.SqlString.BinarySort">
      <summary>
        <para>Specifies that sorts should be based on a characters numeric value rather 
      than its alphabetic value.</para>
      </summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.#ctor(System.Int32,System.Data.SqlTypes.SqlCompareOptions,System.Byte[],System.Int32,System.Int32,System.Boolean)">
      <summary>
        <para> Initializes a new instance of the <see cref="T:System.Data.SqlTypes.SqlString" /> class.
   </para>
      </summary>
      <param name="lcid">Specifies the geographical locale and language for the new <see langword="SqlString" /> structure. </param>
      <param name="compareOptions">Specifies the compare options for the new <see langword="SqlString" /> structure.</param>
      <param name="data">The data array to store. </param>
      <param name="index">The starting index within the array. </param>
      <param name="count">The number of characters from index to copy. </param>
      <param name="fUnicode">
        <see langword="true" /> if Unicode encoded, otherwise <see langword="false" />. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.#ctor(System.Int32,System.Data.SqlTypes.SqlCompareOptions,System.Byte[],System.Boolean)">
      <summary>
        <para> Initializes a new instance of the <see cref="T:System.Data.SqlTypes.SqlString" /> class.
   </para>
      </summary>
      <param name="lcid">Specifies the geographical locale and language for the new <see langword="SqlString" /> structure. </param>
      <param name="compareOptions">Specifies the compare options for the new <see langword="SqlString" /> structure.</param>
      <param name="data">The data array to store. </param>
      <param name="fUnicode">
        <see langword="true" /> if Unicode encoded, otherwise <see langword="false" />. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.#ctor(System.Int32,System.Data.SqlTypes.SqlCompareOptions,System.Byte[],System.Int32,System.Int32)">
      <summary>
        <para> Initializes a new instance of the <see cref="T:System.Data.SqlTypes.SqlString" /> class.
   </para>
      </summary>
      <param name="lcid">Specifies the geographical locale and language for the new <see langword="SqlString" /> structure. </param>
      <param name="compareOptions">Specifies the compare options for the new <see langword="SqlString" /> structure.</param>
      <param name="data">The data array to store. </param>
      <param name="index">The starting index within the array. </param>
      <param name="count">The number of characters from index to copy. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.#ctor(System.Int32,System.Data.SqlTypes.SqlCompareOptions,System.Byte[])">
      <summary>
        <para> Initializes a new instance of the <see cref="T:System.Data.SqlTypes.SqlString" /> structure using the specified
   locale id, compare options, and data.
   </para>
      </summary>
      <param name="lcid">Specifies the geographical locale and language for the new <see langword="SqlString" /> structure. </param>
      <param name="compareOptions">Specifies the compare options for the new <see langword="SqlString" /> structure.</param>
      <param name="data">The data array to store. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.#ctor(System.String,System.Int32,System.Data.SqlTypes.SqlCompareOptions)">
      <summary>
        <para> Initializes a new instance of the <see cref="T:System.Data.SqlTypes.SqlString" /> structure using the specified string, 
   locale id, and compare option values.
   </para>
      </summary>
      <param name="data">The string to store. </param>
      <param name="lcid">Specifies the geographical locale and language for the new <see langword="SqlString" /> structure. </param>
      <param name="compareOptions">Specifies the compare options for the new <see langword="SqlString" /> structure.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.#ctor(System.String,System.Int32)">
      <summary>
        <para> Initializes a new instance of the <see cref="T:System.Data.SqlTypes.SqlString" /> structure using the specified string and 
   locale id values.
   </para>
      </summary>
      <param name="data">The string to store. </param>
      <param name="lcid">Specifies the geographical locale and language for the new <see langword="SqlString" /> structure. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.#ctor(System.String)">
      <summary>
        <para> Initializes a new instance of the <see cref="T:System.Data.SqlTypes.SqlString" /> 
structure using the specified string.
</para>
      </summary>
      <param name="data">The string to store. </param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Implicit(System.String)~System.Data.SqlTypes.SqlString">
      <summary>
        <para>Converts the <see cref="T:System.String" /> parameter to a <see cref="T:System.Data.SqlTypes.SqlString" /> .</para>
      </summary>
      <param name="x">The <see cref="T:System.String" />to be converted.</param>
      <returns>
        <para>A <see langword="SqlString" /> containing the value of the specified 
<see langword="String" />.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlString)~System.String">
      <summary>
        <para>Converts a <see cref="T:System.Data.SqlTypes.SqlString" /> to a <see cref="T:System.String" /></para>
      </summary>
      <param name="x">The <see langword="SqlString" /> to be converted.</param>
      <returns>
        <para>A <see langword="String" />, whose contents are the same as
   the <see cref="P:System.Data.SqlTypes.SqlString.Value" />
   property of the <see langword="SqlString" /> parameter.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.ToString">
      <summary>
        <para> Converts a <see langword="SqlString" /> object to 
   a <see langword="String" /> .
   </para>
      </summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.GetUnicodeBytes">
      <summary>
        <para> Gets an array of bytes, containing the contents of
      the <see cref="T:System.Data.SqlTypes.SqlString" /> in
      Unicode format.</para>
      </summary>
      <returns>
        <para>An byte array, containing the contents of
      the <see cref="T:System.Data.SqlTypes.SqlString" /> in Unicode format.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.GetNonUnicodeBytes">
      <summary>
        <para> Gets an array of bytes, containing the contents of
      the <see cref="T:System.Data.SqlTypes.SqlString" />in ANSI format.</para>
      </summary>
      <returns>
        <para>An byte array, containing the contents of the <see cref="T:System.Data.SqlTypes.SqlString" />
in ANSI format.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Addition(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary>
        <para>Concatenates the two specified <see cref="T:System.Data.SqlTypes.SqlString" /> structures.</para>
      </summary>
      <param name="x">A <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <param name=" y">A <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <returns>
        <para>A <see cref="T:System.Data.SqlTypes.SqlString" /> containing the newly concatenated value
   representing the contents of the two <see cref="T:System.Data.SqlTypes.SqlString" /> parameters.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlBoolean)~System.Data.SqlTypes.SqlString">
      <summary>
        <para>Converts the specified <see cref="T:System.Data.SqlTypes.SqlBoolean" /> structure to <see cref="T:System.Data.SqlTypes.SqlString" /> .</para>
      </summary>
      <param name="x">The <see cref="T:System.Data.SqlTypes.SqlBoolean" /> structure to be converted.</param>
      <returns>
        <para>A new <see cref="T:System.Data.SqlTypes.SqlString" /> containing the string
   representation of the <see cref="T:System.Data.SqlTypes.SqlBoolean" /> parameter.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlByte)~System.Data.SqlTypes.SqlString">
      <summary>
        <para>Converts the specified <see cref="T:System.Data.SqlTypes.SqlByte" />
structure to <see cref="T:System.Data.SqlTypes.SqlString" />.</para>
      </summary>
      <param name="x">The <see cref="T:System.Data.SqlTypes.SqlByte" /> structure to be converted.</param>
      <returns>
        <para>A new <see cref="T:System.Data.SqlTypes.SqlString" /> object containing the
   string representation of the <see cref="T:System.Data.SqlTypes.SqlByte" /> parameter.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlInt16)~System.Data.SqlTypes.SqlString">
      <summary>
        <para>Converts the specified <see cref="T:System.Data.SqlTypes.SqlInt16" />
parameter to <see cref="T:System.Data.SqlTypes.SqlString" /> .</para>
      </summary>
      <param name="x">The <see cref="T:System.Data.SqlTypes.SqlInt16" /> structure to be converted.</param>
      <returns>
        <para>A new <see cref="T:System.Data.SqlTypes.SqlString" /> object containing the
   string representation of the <see cref="T:System.Data.SqlTypes.SqlInt16" /> parameter.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlInt32)~System.Data.SqlTypes.SqlString">
      <summary>
        <para>Converts the specified <see cref="T:System.Data.SqlTypes.SqlInt32" />
parameter to <see cref="T:System.Data.SqlTypes.SqlString" /> .</para>
      </summary>
      <param name="x">The SqlInt32 structure to be converted.</param>
      <returns>
        <para>A new <see cref="T:System.Data.SqlTypes.SqlString" /> object containing the
   string representation of the <see cref="T:System.Data.SqlTypes.SqlInt32" /> parameter.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlInt64)~System.Data.SqlTypes.SqlString">
      <summary>
        <para>Converts the specified <see cref="T:System.Data.SqlTypes.SqlInt64" />
parameter to <see cref="T:System.Data.SqlTypes.SqlString" /> .</para>
      </summary>
      <param name="x">The <see cref="T:System.Data.SqlTypes.SqlInt64" /> structure to be converted.</param>
      <returns>
        <para>A new <see cref="T:System.Data.SqlTypes.SqlString" /> object containing the
   string representation of the <see cref="T:System.Data.SqlTypes.SqlInt64" /> parameter.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlSingle)~System.Data.SqlTypes.SqlString">
      <summary>
        <para>Converts the specified <see cref="T:System.Data.SqlTypes.SqlSingle" />
parameter to <see cref="T:System.Data.SqlTypes.SqlString" /> .</para>
      </summary>
      <param name="x">The <see cref="T:System.Data.SqlTypes.SqlSingle" /> structure to be converted.</param>
      <returns>
        <para>A new <see cref="T:System.Data.SqlTypes.SqlString" /> containing the string
   representation of the <see cref="T:System.Data.SqlTypes.SqlSingle" /> parameter.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlDouble)~System.Data.SqlTypes.SqlString">
      <summary>
        <para>Converts the specified <see cref="T:System.Data.SqlTypes.SqlDouble" />
parameter to <see cref="T:System.Data.SqlTypes.SqlString" /> .</para>
      </summary>
      <param name="x">The <see cref="T:System.Data.SqlTypes.SqlDouble" /> structure to be converted.</param>
      <returns>
        <para>A new <see cref="T:System.Data.SqlTypes.SqlString" /> containing the string
   representation of the <see cref="T:System.Data.SqlTypes.SqlDouble" /> parameter.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlDecimal)~System.Data.SqlTypes.SqlString">
      <summary>
        <para>Converts the specified <see cref="T:System.Data.SqlTypes.SqlDecimal" />
parameter to <see cref="T:System.Data.SqlTypes.SqlString" /> .</para>
      </summary>
      <returns>
        <para>A new <see cref="T:System.Data.SqlTypes.SqlString" /> containing the string
   representation of the <see cref="T:System.Data.SqlTypes.SqlDecimal" /> parameter.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlMoney)~System.Data.SqlTypes.SqlString">
      <summary>
        <para>Converts the specified <see cref="T:System.Data.SqlTypes.SqlMoney" />
parameter to <see cref="T:System.Data.SqlTypes.SqlString" /> .</para>
      </summary>
      <param name="x">The <see cref="T:System.Data.SqlTypes.SqlMoney" /> structure to be converted.</param>
      <returns>
        <para>A new <see cref="T:System.Data.SqlTypes.SqlString" /> containing the string
   representation of the <see cref="T:System.Data.SqlTypes.SqlMoney" /> parameter.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlDateTime)~System.Data.SqlTypes.SqlString">
      <summary>
        <para>Converts the specified <see cref="T:System.Data.SqlTypes.SqlDateTime" /> parameter to <see cref="T:System.Data.SqlTypes.SqlString" /> .</para>
      </summary>
      <param name="x">The <see cref="T:System.Data.SqlTypes.SqlDateTime" /> structure to be converted.</param>
      <returns>
        <para>A new <see cref="T:System.Data.SqlTypes.SqlString" /> containing the string
   representation of the <see cref="T:System.Data.SqlTypes.SqlDateTime" /> parameter.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlGuid)~System.Data.SqlTypes.SqlString">
      <summary>
        <para>Converts the specified <see cref="T:System.Data.SqlTypes.SqlGuid" />
parameter to <see cref="T:System.Data.SqlTypes.SqlString" /> .</para>
      </summary>
      <param name="x">The <see cref="T:System.Data.SqlTypes.SqlGuid" /> structure to be converted.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.Clone">
      <summary>
        <para>Creates a copy of this <see cref="T:System.Data.SqlTypes.SqlString" /> object.</para>
      </summary>
      <returns>
        <para>A new <see cref="T:System.Data.SqlTypes.SqlString" /> object in which all 
   property values are the same as the original.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Equality(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary>
        <para>Performs a logical comparison of the two <see cref="T:System.Data.SqlTypes.SqlString" /> 
operands to determine if they are equal.</para>
      </summary>
      <param name="x">A <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <param name=" y">A <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <returns>
   A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the two instances are equal
   or <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> if the two instances are not
   equal. If either instance of <see cref="T:System.Data.SqlTypes.SqlString" /> is null, the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of the <see cref="T:System.Data.SqlTypes.SqlBoolean" />
   will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> .
</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_Inequality(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary>
        <para>Performs a logical comparison of the two <see cref="T:System.Data.SqlTypes.SqlString" /> 
operands to determine if they are equal.</para>
      </summary>
      <param name="x">A <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <param name=" y">A <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <returns>
   A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the two instances are not
   equal or <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> if the two instances are equal.
   If either instance of <see cref="T:System.Data.SqlTypes.SqlString" /> is null, the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of the <see cref="T:System.Data.SqlTypes.SqlBoolean" />
   will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.
</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_LessThan(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary>
        <para>Performs a logical comparison of the two <see cref="T:System.Data.SqlTypes.SqlString" /> 
operands to determine if the first is less than the second.</para>
      </summary>
      <param name="x">A <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <param name=" y">A <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <returns>
        <para>A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the first 
   instance is less than the second instance, otherwise <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> . If either instance of <see cref="T:System.Data.SqlTypes.SqlString" />
   is null, the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of the <see cref="T:System.Data.SqlTypes.SqlBoolean" />
   will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_GreaterThan(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary>
        <para>Performs a logical comparison of the two <see cref="T:System.Data.SqlTypes.SqlString" /> 
operands to determine if the first is greater than the second.</para>
      </summary>
      <param name="x">A <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <param name=" y">A <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <returns>
        <para>A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the first 
   instance is greater than the second instance, otherwise <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. If either instance of <see cref="T:System.Data.SqlTypes.SqlString" />
   is null, the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of the <see cref="T:System.Data.SqlTypes.SqlBoolean" />
   will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_LessThanOrEqual(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary>
        <para>Performs a logical comparison of the two <see cref="T:System.Data.SqlTypes.SqlString" /> 
operands to determine if the first is less than or equal to the second.</para>
      </summary>
      <param name="x">A <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <param name=" y">A <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <returns>
   A<see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is<see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the first instance is less
   than or equal to the second instance, otherwise<see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. If either
   instance of <see cref="T:System.Data.SqlTypes.SqlString" /> is null, the<see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of the<see cref="T:System.Data.SqlTypes.SqlBoolean" />
   will be<see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.
</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary>
        <para>Performs a logical comparison of the two <see cref="T:System.Data.SqlTypes.SqlString" /> 
operands to determine if the first is greater than or equal to the second.</para>
      </summary>
      <param name="x">A <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <param name=" y">A <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <returns>
   A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the first instance is
   greaater than or equal to the second instance, otherwise <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. If either instance of <see cref="T:System.Data.SqlTypes.SqlString" />
   is null, the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of the <see cref="T:System.Data.SqlTypes.SqlBoolean" />
   will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> .
</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.Concat(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary>
        <para>Concatenates the two specified <see cref="T:System.Data.SqlTypes.SqlString" /> structures.</para>
      </summary>
      <param name="x">A <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <param name=" y">A <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <returns>
        <para>A <see cref="T:System.Data.SqlTypes.SqlString" /> containing the newly concatenated value
   representing the contents of the two <see cref="T:System.Data.SqlTypes.SqlString" /> parameters.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.Equals(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary>
        <para>Performs a logical comparison of the two <see cref="T:System.Data.SqlTypes.SqlString" />
operands to determine if they are equal.</para>
      </summary>
      <param name="x">A <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <param name=" y">A <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <returns>
   A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the two instances are equal
   or <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> if the two instances are not
   equal. If either instance of <see cref="T:System.Data.SqlTypes.SqlString" /> is null, the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of the <see cref="T:System.Data.SqlTypes.SqlBoolean" />
   will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> .
</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.NotEquals(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary>
        <para>Performs a logical comparison of the two <see cref="T:System.Data.SqlTypes.SqlString" />
operands to determine if they are equal.</para>
      </summary>
      <param name="x">A <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <param name=" y">A <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <returns>
   A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the two instances are not
   equal or <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> if the two instances are equal.
   If either instance of <see cref="T:System.Data.SqlTypes.SqlString" /> is null, the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of the <see cref="T:System.Data.SqlTypes.SqlBoolean" />
   will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.
</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.LessThan(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary>
        <para>Performs a logical comparison of the two <see cref="T:System.Data.SqlTypes.SqlString" />
operands to determine if the first is less than the second.</para>
      </summary>
      <param name="x">A <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <param name=" y">A <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <returns>
        <para>A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the first
   instance is less than the second instance, otherwise <see cref="F:System.Data.SqlTypes.SqlBoolean.False" /> . If either instance of <see cref="T:System.Data.SqlTypes.SqlString" />
   is null, the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of the <see cref="T:System.Data.SqlTypes.SqlBoolean" />
   will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.GreaterThan(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary>
        <para>Performs a logical comparison of the two <see cref="T:System.Data.SqlTypes.SqlString" />
operands to determine if the first is greater than the second.</para>
      </summary>
      <param name="x">A <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <param name=" y">A <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <returns>
        <para>A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the first
   instance is greater than the second instance, otherwise <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. If either instance of <see cref="T:System.Data.SqlTypes.SqlString" />
   is null, the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of the <see cref="T:System.Data.SqlTypes.SqlBoolean" />
   will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.LessThanOrEqual(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary>
        <para>Performs a logical comparison of the two <see cref="T:System.Data.SqlTypes.SqlString" />
operands to determine if the first is less than or equal to the second.</para>
      </summary>
      <param name="x">A <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <param name=" y">A <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <returns>
   A<see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is<see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the first instance is less
   than or equal to the second instance, otherwise<see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. If either
   instance of <see cref="T:System.Data.SqlTypes.SqlString" /> is null, the<see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of the<see cref="T:System.Data.SqlTypes.SqlBoolean" />
   will be<see cref="F:System.Data.SqlTypes.SqlBoolean.Null" />.
</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.GreaterThanOrEqual(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
      <summary>
        <para>Performs a logical comparison of the two <see cref="T:System.Data.SqlTypes.SqlString" />
operands to determine if the first is greater than or equal to the second.</para>
      </summary>
      <param name="x">A <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <param name=" y">A <see cref="T:System.Data.SqlTypes.SqlString" />.</param>
      <returns>
   A <see cref="T:System.Data.SqlTypes.SqlBoolean" /> that is <see cref="F:System.Data.SqlTypes.SqlBoolean.True" /> if the first instance is
   greaater than or equal to the second instance, otherwise <see cref="F:System.Data.SqlTypes.SqlBoolean.False" />. If either instance of <see cref="T:System.Data.SqlTypes.SqlString" />
   is null, the <see cref="P:System.Data.SqlTypes.SqlBoolean.Value" /> of the <see cref="T:System.Data.SqlTypes.SqlBoolean" />
   will be <see cref="F:System.Data.SqlTypes.SqlBoolean.Null" /> .
</returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.ToSqlBoolean">
      <summary>
        <para>Converts this <see cref="T:System.Data.SqlTypes.SqlString" /> structure to <see cref="T:System.Data.SqlTypes.SqlBoolean" /> .</para>
      </summary>
      <returns>
        <para>
          <see langword="true" /> if the <see cref="P:System.Data.SqlTypes.SqlString.Value" /> is non-zero; 
<see langword="false" /> if zero; otherwise Null.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.ToSqlByte">
      <summary>
        <para>Converts this <see cref="T:System.Data.SqlTypes.SqlString" /> structure to <see cref="T:System.Data.SqlTypes.SqlByte" /> .</para>
      </summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.ToSqlDateTime">
      <summary>
        <para>Converts this <see cref="T:System.Data.SqlTypes.SqlString" /> structure to <see cref="T:System.Data.SqlTypes.SqlDateTime" /> .</para>
      </summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.ToSqlDouble">
      <summary>
        <para>Converts this <see cref="T:System.Data.SqlTypes.SqlString" /> structure to <see cref="T:System.Data.SqlTypes.SqlDouble" /> .</para>
      </summary>
      <returns>
        <para>A new <see langword="SqlDouble" /> structure whose <see langword="Value" /> equals 1 if the <see langword="SqlString" /> structure's Value was <see langword="true" />; otherwise the <see langword="Value" /> of the new <see langword="SqlDouble" /> structure is 0.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.ToSqlInt16">
      <summary>
        <para>Converts this <see cref="T:System.Data.SqlTypes.SqlString" /> structure to <see cref="T:System.Data.SqlTypes.SqlInt16" /> .</para>
      </summary>
      <returns>
        <para>A new <see langword="SqlInt16" /> structure whose <see langword="Value" /> equals 
   1 if the <see langword="SqlString" /> structure's <see langword="Value " />was
<see langword="true" />, otherwise the <see langword="Value" /> of the new 
<see langword="SqlInt16" /> structure is 0.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.ToSqlInt32">
      <summary>
        <para>Converts this <see cref="T:System.Data.SqlTypes.SqlString" /> structure to <see cref="T:System.Data.SqlTypes.SqlInt32" /> .</para>
      </summary>
      <returns>
        <para>A new <see langword="SqlInt32" /> structure whose <see langword="Value" /> equals 
   1 if the <see langword="SqlString" /> structure's <see langword="Value " />was
<see langword="true" />, otherwise the <see langword="Value" /> of the new 
<see langword="SqlInt32" /> structure is 0.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.ToSqlInt64">
      <summary>
        <para>Converts this <see cref="T:System.Data.SqlTypes.SqlString" /> structure to <see cref="T:System.Data.SqlTypes.SqlInt64" /> .</para>
      </summary>
      <returns>
        <para>A new <see langword="SqlInt64" /> structure whose <see langword="Value" /> equals 
   1 if the <see langword="SqlString" /> structure's <see langword="Value " />was
<see langword="true" />, otherwise the <see langword="Value" /> of the new 
<see langword="SqlInt64" /> structure is 0.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.ToSqlMoney">
      <summary>
        <para>Converts this <see cref="T:System.Data.SqlTypes.SqlString" /> structure to <see cref="T:System.Data.SqlTypes.SqlMoney" /> .</para>
      </summary>
      <returns>
        <para>
          <see langword="true" /> if this structure has a value of 1; 
<see langword="false" /> if 0; otherwise <see cref="F:System.Data.SqlTypes.SqlMoney.Null" />.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.ToSqlDecimal">
      <summary>
        <para>Converts this <see cref="T:System.Data.SqlTypes.SqlString" /> structure to <see cref="T:System.Data.SqlTypes.SqlDecimal" /> .</para>
      </summary>
      <returns>
        <para>A new <see langword="SqlDecimal" /> structure whose 
<see langword="Value" /> equals 1 if the <see langword="SqlString" /> structure's Value was <see langword="true" />; otherwise the <see langword="Value" /> of the new <see langword="SqlDecimal" /> structure is 0.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.ToSqlSingle">
      <summary>
        <para>Converts this <see cref="T:System.Data.SqlTypes.SqlString" /> structure to <see cref="T:System.Data.SqlTypes.SqlSingle" /> .</para>
      </summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.ToSqlGuid">
      <summary>
        <para>Converts this <see cref="T:System.Data.SqlTypes.SqlString" /> structure to <see cref="T:System.Data.SqlTypes.SqlGuid" /> .</para>
      </summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.CompareOptionsFromSqlCompareOptions(System.Data.SqlTypes.SqlCompareOptions)">
      <summary>
        <para>Gets the <see cref="T:System.Globalization.CompareOptions" /> enumeration equilvalent of the 
   specified <see cref="T:System.Data.SqlTypes.SqlCompareOptions" /> value.</para>
      </summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.CompareTo(System.Object)">
      <summary>
        <para>Compares this instance of <see cref="T:System.Data.SqlTypes.SqlString" /> 
to the supplied object and returns an indication of their relative values.</para>
      </summary>
      <param name="value">The object to be compared.</param>
      <returns>
        <para>A signed number indicating the relative values of the instance and the
      object.</para>
        <list type="table">
          <listheader>
            <term>Return Value</term>
            <description>Condition</description>
          </listheader>
          <item>
            <term> Less than zero</term>
            <description>This instance is less than
            object.</description>
          </item>
          <item>
            <term> Zero</term>
            <description>This instance is the same as
            object.</description>
          </item>
          <item>
            <term> Greater than zero</term>
            <description>
              <para>This instance is greater than object</para>
              <para>-or-</para>
              <para>object is a null reference
               (<see langword="Nothing" />)</para>
            </description>
          </item>
        </list>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.Equals(System.Object)">
      <summary>
        <para>Compares the supplied object parameter to the <see cref="P:System.Data.SqlTypes.SqlString.Value" /> property of the <see cref="T:System.Data.SqlTypes.SqlString" /> object.</para>
      </summary>
      <param name="value">The object to be compared.</param>
      <returns>
        <para>Equals will return <see langword="true " />if the object is an instance of <see cref="T:System.Data.SqlTypes.SqlString" /> and the two are equal; otherwise <see langword="false" />.</para>
      </returns>
    </member>
    <member name="M:System.Data.SqlTypes.SqlString.GetHashCode">
      <summary>
        <para>Gets the hash code for this instance.</para>
      </summary>
      <returns>
        <para>A 32-bit signed integer hash code.</para>
      </returns>
    </member>
    <member name="P:System.Data.SqlTypes.SqlString.IsNull">
      <summary>
        <para>Indicates whether the <see cref="P:System.Data.SqlTypes.SqlString.Value" /> of the <see cref="T:System.Data.SqlTypes.SqlString" /> is <see cref="F:System.Data.SqlTypes.SqlString.Null" />.</para>
      </summary>
    </member>
    <member name="P:System.Data.SqlTypes.SqlString.Value">
      <summary>
        <para> Gets the string that is stored in this
   <see cref="T:System.Data.SqlTypes.SqlString" /> structure. This property is 
      read-only.</para>
      </summary>
    </member>
    <member name="P:System.Data.SqlTypes.SqlString.LCID">
      <summary>
        <para>Specifies the geographical locale and language for the 
   <see langword="SqlString" /> structure.</para>
      </summary>
    </member>
    <member name="P:System.Data.SqlTypes.SqlString.CultureInfo">
      <summary>
        <para>Gets the <see cref="T:System.Globalization.CultureInfo" /> structure that represents 
   information about the culture of this <see cref="T:System.Data.SqlTypes.SqlString" /> object.</para>
      </summary>
    </member>
    <member name="P:System.Data.SqlTypes.SqlString.CompareInfo">
      <summary>
        <para>Gets the <see cref="T:System.Globalization.CompareInfo" /> object that defines how string
   comparisons should be performed for this <see cref="T:System.Data.SqlTypes.SqlString" /> structure.</para>
      </summary>
    </member>
    <member name="P:System.Data.SqlTypes.SqlString.SqlCompareOptions">
      <summary>
        <para>A combination of one or more of the <see cref="T:System.Data.SqlTypes.SqlCompareOptions" /> enumeration values that represent the way 
   in which this <see cref="T:System.Data.SqlTypes.SqlString" /> should be compared to other
<see langword="SqlString" /> structures.</para>
      </summary>
    </member>
    <member name="T:System.Data.SqlTypes.SqlTypeException">
      <summary>
        <para>The base exception class for the <see cref="N:System.Data.SqlTypes" /> .</para>
      </summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlTypeException.#ctor(System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.SqlTypes.SqlTypeException" /> class with a specified error message.</para>
      </summary>
      <param name="message">The error message that explains the reason for the exception.</param>
    </member>
    <member name="M:System.Data.SqlTypes.SqlTypeException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.SqlTypes.SqlTypeException" /> class using the specified serialization 
   information and streaming context.</para>
      </summary>
      <param name="si">A SerializationInfo structure.</param>
      <param name=" sc">A StreamingContext structure.</param>
    </member>
    <member name="T:System.Data.SqlTypes.SqlNullValueException">
      <summary>
        <para>The exception that is thrown when the 
   <see langword="Value" /> property of a <see langword="SqlTypes" /> structure is set to null.</para>
      </summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlNullValueException.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.SqlTypes.SqlNullValueException" /> class with 
   default properties.</para>
      </summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlNullValueException.#ctor(System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.SqlTypes.SqlNullValueException" /> class with a 
   specified error message.</para>
      </summary>
      <param name="message">The error message that explains the reason for the exception.</param>
    </member>
    <member name="T:System.Data.SqlTypes.SqlTruncateException">
      <summary>
        <para>The exception that is thrown when setting a value into 
      a <see langword="SqlType" /> structure would truncate that value.</para>
      </summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlTruncateException.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.SqlTypes.SqlTruncateException" /> class 
   with default properties.</para>
      </summary>
    </member>
    <member name="M:System.Data.SqlTypes.SqlTruncateException.#ctor(System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.SqlTypes.SqlTruncateException" /> class with a 
   specified error message.</para>
      </summary>
      <param name="message">The error message that explains the reason for the exception.</param>
    </member>
    <member name="T:System.Xml.XmlDataDocument">
      <summary>
        <para>Allows structured data to be stored, retrieved, and
      manipulated through a relational <see cref="T:System.Data.DataSet" />.</para>
      </summary>
    </member>
    <member name="M:System.Xml.XmlDataDocument.CreateElement(System.String,System.String,System.String)">
      <summary>
        <para> Creates an element with the specified <see cref="P:System.Xml.XmlNode.Prefix" />,
<see cref="P:System.Xml.XmlDocument.LocalName" />, and <see cref="P:System.Xml.XmlNode.NamespaceURI" /> 
.</para>
      </summary>
      <param name="prefix">The prefix of the new element; if String.Empty or <see langword="null" /> there is no prefix. </param>
      <param name=" localName">The local name of the new element. </param>
      <param name=" namespaceURI">The namespace URI of the new element; if String.Empty or <see langword="null" /> there is no namespaceURI. </param>
      <returns>
        <para> A new <see cref="T:System.Xml.XmlElement" /> .
   </para>
      </returns>
    </member>
    <member name="M:System.Xml.XmlDataDocument.CreateEntityReference(System.String)">
      <summary>
        <para>Creates an <see cref="T:System.Xml.XmlEntityReference" /> with the specified name. </para>
        <para>
          <see langword="XmlEntityReference" /> nodes cannot be
created for <see langword="XmlDataDocument" /> objects. Calling
this method throws an exception.</para>
      </summary>
      <param name="name">Name of the entity reference.</param>
    </member>
    <member name="M:System.Xml.XmlDataDocument.GetRowFromElement(System.Xml.XmlElement)">
      <summary>
        <para>Retrieves the <see cref="T:System.Data.DataRow" /> associated
   with the specified <see cref="T:System.Xml.XmlElement" />.</para>
      </summary>
      <param name="e">The <see langword="XmlElement" /> whose associated <see langword="DataRow" /> you wish to retrieve.</param>
      <returns>
        <para>The <see langword="DataRow" /> 
containing a representation of the <see langword="XmlElement" />;
<see langword="null" /> if there is no <see langword="DataRow" /> 
associated with the <see langword="XmlElement" /> .</para>
      </returns>
    </member>
    <member name="M:System.Xml.XmlDataDocument.GetElementFromRow(System.Data.DataRow)">
      <summary>
        <para>Retrieves the <see cref="T:System.Xml.XmlElement" />
associated with the specified <see cref="T:System.Data.DataRow" />
.</para>
      </summary>
      <param name="r">The <see langword="DataRow" /> whose associated <see langword="XmlElement" /> you wish to retrieve.</param>
      <returns>
        <para>The <see langword="XmlElement" /> containing a
   representation of the specified <see langword="DataRow" />
   .</para>
      </returns>
    </member>
    <member name="M:System.Xml.XmlDataDocument.CloneNode(System.Boolean)">
      <summary>
        <para>Creates a duplicate of the current node.</para>
      </summary>
      <param name="deep">
        <see langword="true" /> to recursively clone the subtree under the specified node; <see langword="false" /> to clone only the node itself.</param>
      <returns>
        <para>The cloned node.</para>
      </returns>
    </member>
    <member name="M:System.Xml.XmlDataDocument.Load(System.String)">
      <summary>
        <para>Loads the <see langword="XmlDataDocument" /> using the specified URL.</para>
      </summary>
      <param name="filename">URL for the file containing the XML document to load.</param>
    </member>
    <member name="M:System.Xml.XmlDataDocument.Load(System.IO.Stream)">
      <summary>
        <para>Loads the <see langword="XmlDataDocument" /> from the specified stream.</para>
      </summary>
      <param name="inStream">The stream containing the XML document to load.</param>
    </member>
    <member name="M:System.Xml.XmlDataDocument.Load(System.IO.TextReader)">
      <summary>
        <para>Loads the <see langword="XmlDataDocument" /> from the
   specified <see cref="T:System.IO.TextReader" />.</para>
      </summary>
      <param name="txtReader">The <see langword="TextReader" /> used to feed the XML data into the document.</param>
    </member>
    <member name="M:System.Xml.XmlDataDocument.Load(System.Xml.XmlReader)">
      <summary>
        <para>Loads the <see langword="XmlDataDocument" /> from the specified <see cref="T:System.Xml.XmlReader" /> .</para>
      </summary>
      <param name="reader">
        <see langword="XmlReader" /> containing the XML document to load.</param>
    </member>
    <member name="M:System.Xml.XmlDataDocument.#ctor">
      <summary>
        <para> Initializes a new instance of the
   <see langword="XmlDataDocument" /> class.
      </para>
      </summary>
    </member>
    <member name="M:System.Xml.XmlDataDocument.#ctor(System.Data.DataSet)">
      <summary>
        <para>Initializes a new instance of the
   <see langword="XmlDataDocument" /> class
      with the specified <see cref="T:System.Data.DataSet" />
      .</para>
      </summary>
      <param name="dataset">The <see langword="DataSet" /> to load into <see langword="XmlDataDocument" /> .</param>
    </member>
    <member name="M:System.Xml.XmlDataDocument.CreateNavigator(System.Xml.XmlNode)">
      <summary>
        <para>Creates a new <see cref="T:System.Xml.XPath.XPathNavigator" /> object for navigating this document. The 
<see langword="XPathNavigator" /> 
is positioned on the node specified in the <paramref name="node" /> parameter.</para>
      </summary>
      <param name="node">The <see cref="T:System.Xml.XmlNode" /> you want the navigator initially positioned on.</param>
      <returns>
        <para>An <see langword="XPathNavigator" /> .</para>
      </returns>
    </member>
    <member name="M:System.Xml.XmlDataDocument.GetElementById(System.String)">
      <summary>
        <para>Gets the <see cref="T:System.Xml.XmlElement" /> with the specified ID.</para>
        <para>This method is not supported by the <see langword="XmlDataDocument" />
class. Calling this method throws an exception.</para>
      </summary>
      <param name="elemId">The attribute ID to match.</param>
    </member>
    <member name="P:System.Xml.XmlDataDocument.DataSet">
      <summary>
        <para>Gets a <see cref="T:System.Data.DataSet" /> that provides a relational representation of the
   data in the <see langword="XmlDataDocument" />
   .</para>
      </summary>
    </member>
    <member name="T:System.Data.TypedDataSetGenerator">
      <summary>
        <para>Used to create a strongly-typed <see cref="T:System.Data.DataSet" /> 
.</para>
      </summary>
    </member>
    <member name="M:System.Data.TypedDataSetGenerator.Generate(System.Data.DataSet,System.CodeDom.CodeNamespace,System.CodeDom.Compiler.ICodeGenerator)">
      <summary>
        <para>Generates a strongly-typed <see cref="T:System.Data.DataSet" /> .</para>
      </summary>
      <param name="dataSet">The source <see cref="T:System.Data.DataSet" /> that specifies the metadata for the typed <see cref="T:System.Data.DataSet" /> .</param>
      <param name="codeNamespace">The CodeNamespace that provides the target Namespace for the typed <see cref="T:System.Data.DataSet" /> .</param>
      <param name="codeGen">The CodeGenerator used to create the typed <see cref="T:System.Data.DataSet" /> .</param>
    </member>
    <member name="M:System.Data.TypedDataSetGenerator.GenerateIdName(System.String,System.CodeDom.Compiler.ICodeGenerator)">
      <summary>
        <para> Transforms a string in a valid typed <see cref="T:System.Data.DataSet" /> name.</para>
      </summary>
      <param name="name">The source name to transform into a valid typed <see cref="T:System.Data.DataSet" /> name.</param>
      <param name="codeGen">The CodeGenerator used to perform the conversion.</param>
      <returns>
        <para>A string that is the converted name.</para>
      </returns>
    </member>
    <member name="T:System.Data.StrongTypingException">
      <summary>
        <para> The exception that is thrown by a strongly-typed <see cref="T:System.Data.DataSet" /> when the user accesses DBNull value.</para>
      </summary>
    </member>
    <member name="M:System.Data.StrongTypingException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.StrongTypingException" /> class using the specified serialization information
   and streaming context.</para>
      </summary>
      <param name="info">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object.</param>
      <param name=" context">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> structure.</param>
    </member>
    <member name="M:System.Data.StrongTypingException.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.StrongTypingException" /> class.</para>
      </summary>
    </member>
    <member name="M:System.Data.StrongTypingException.#ctor(System.String,System.Exception)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.StrongTypingException" /> class with the 
   specified string and inner exception.</para>
      </summary>
      <param name="s">The string to display when the exception is thrown.</param>
      <param name="innerException">A reference to an inner exception.</param>
    </member>
    <member name="T:System.Data.TypedDataSetGeneratorException">
      <summary>
        <para>The exception that is thrown when a name conflict occurs 
      while generating a strongly-typed <see cref="T:System.Data.DataSet" /> .</para>
      </summary>
    </member>
    <member name="M:System.Data.TypedDataSetGeneratorException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.TypedDataSetGeneratorException" /> class using the specified serialization information
   and streaming context.</para>
      </summary>
      <param name="info">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object.</param>
      <param name=" context">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> structure.</param>
    </member>
    <member name="M:System.Data.TypedDataSetGeneratorException.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.TypedDataSetGeneratorException" /> class.</para>
      </summary>
    </member>
    <member name="M:System.Data.TypedDataSetGeneratorException.#ctor(System.Collections.ArrayList)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Data.TypedDataSetGeneratorException" /> class.</para>
      </summary>
      <param name="list">An <see cref="T:System.Collections.ArrayList" /> object containing a dynamic list of exceptions.</param>
    </member>
    <member name="M:System.Data.TypedDataSetGeneratorException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
        <para>Implements the <see langword="ISerializable" /> interface and returns the data needed to serialize the <see cref="T:System.Data.TypedDataSetGeneratorException" /> object.</para>
      </summary>
      <param name="info">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object.</param>
      <param name=" context">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> structure.</param>
    </member>
    <member name="P:System.Data.TypedDataSetGeneratorException.ErrorList">
      <summary>
        <para>Gets a dynamic list of generated errors.</para>
      </summary>
    </member>
  </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\tools\x86\managed\urt\v1.0.3705\system.runtime.remoting.channels.smtp.xml ===
<?xml version="1.0"?>
<doc>
  <assembly>
    <name>System.Runtime.Remoting.Channels.Smtp</name>
  </assembly>
  <members>
    <member name="T:System.Runtime.Remoting.Channels.CommonTransportKeys">
      <summary>
        <para>The transport keys associated with common values used by the channels.</para>
      </summary>
    </member>
    <member name="F:System.Runtime.Remoting.Channels.CommonTransportKeys.IPAddress">
      <summary>
        <para>The transport key associated with the IP address from which an incoming request arrived.</para>
      </summary>
    </member>
    <member name="F:System.Runtime.Remoting.Channels.CommonTransportKeys.ConnectionId">
      <summary>
        <para>The transport key associated with a unique ID given to each incoming socket connection.</para>
      </summary>
    </member>
    <member name="F:System.Runtime.Remoting.Channels.CommonTransportKeys.RequestUri">
      <summary>
        <para>The transport key associated with the URI that made the request.</para>
      </summary>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.SocketHandler.ReadToByte(System.Byte,System.Runtime.Remoting.Channels.ValidateByteDelegate)">
    </member>
    <member name="T:System.Runtime.Remoting.Channels.Smtp.Field">
      <summary>
        <para>Field!!!</para>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.Smtp.Field.AppendChunk(System.Object)">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.Smtp.Field.GetChunk(System.Int64)">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.Smtp.Field.DataFormat_One">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="P:System.Runtime.Remoting.Channels.Smtp.Field.Properties">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="P:System.Runtime.Remoting.Channels.Smtp.Field.ActualSize">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="P:System.Runtime.Remoting.Channels.Smtp.Field.Attributes_One">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="P:System.Runtime.Remoting.Channels.Smtp.Field.DefinedSize_One">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="P:System.Runtime.Remoting.Channels.Smtp.Field.Name">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="P:System.Runtime.Remoting.Channels.Smtp.Field.Type_One">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="P:System.Runtime.Remoting.Channels.Smtp.Field.Value">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="P:System.Runtime.Remoting.Channels.Smtp.Field.Precision_One">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="P:System.Runtime.Remoting.Channels.Smtp.Field.NumericScale_One">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="P:System.Runtime.Remoting.Channels.Smtp.Field.OriginalValue">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="P:System.Runtime.Remoting.Channels.Smtp.Field.UnderlyingValue">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="P:System.Runtime.Remoting.Channels.Smtp.Field.DataFormat_Two">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="P:System.Runtime.Remoting.Channels.Smtp.Field.Precision_Two">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="P:System.Runtime.Remoting.Channels.Smtp.Field.NumericScale_Two">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="P:System.Runtime.Remoting.Channels.Smtp.Field.Type_Two">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="P:System.Runtime.Remoting.Channels.Smtp.Field.DefinedSize_Two">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="P:System.Runtime.Remoting.Channels.Smtp.Field.Attributes_Two">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="P:System.Runtime.Remoting.Channels.Smtp.Field.Status">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="T:System.Runtime.Remoting.Channels.Smtp.Fields">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.Smtp.Fields.GetEnumerator">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.Smtp.Fields.Refresh">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.Smtp.Fields.Append_One">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.Smtp.Fields.Delete">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.Smtp.Fields.Append">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.Smtp.Fields.Update">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.Smtp.Fields.Resync">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.Smtp.Fields.CancelUpdate">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="P:System.Runtime.Remoting.Channels.Smtp.Fields.Count">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="P:System.Runtime.Remoting.Channels.Smtp.Fields.Item(System.Object)">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="T:System.Runtime.Remoting.Channels.Smtp.CdoEventStatus">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="F:System.Runtime.Remoting.Channels.Smtp.CdoEventStatus.CdoRunNextSink">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="F:System.Runtime.Remoting.Channels.Smtp.CdoEventStatus.CdoSkipRemainingSinks">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="T:System.Runtime.Remoting.Channels.Smtp.CdoDSNOptions">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="F:System.Runtime.Remoting.Channels.Smtp.CdoDSNOptions.CdoDSNDefault">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="F:System.Runtime.Remoting.Channels.Smtp.CdoDSNOptions.CdoDSNNever">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="F:System.Runtime.Remoting.Channels.Smtp.CdoDSNOptions.CdoDSNFailure">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="F:System.Runtime.Remoting.Channels.Smtp.CdoDSNOptions.CdoDSNSuccess">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="F:System.Runtime.Remoting.Channels.Smtp.CdoDSNOptions.CdoDSNDelay">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="F:System.Runtime.Remoting.Channels.Smtp.CdoDSNOptions.CdoDSNSuccessFailOrDelay">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="T:System.Runtime.Remoting.Channels.Smtp.ISmtpOnArrival">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.Smtp.ISmtpOnArrival.OnArrival(System.Runtime.Remoting.Channels.Smtp.ISmtpMessage,System.Runtime.Remoting.Channels.Smtp.CdoEventStatus@)">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="T:System.Runtime.Remoting.Channels.Smtp.ISmtpMessage">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.Smtp.ISmtpMessage.let_Configuration(System.Object)">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.Smtp.ISmtpMessage.AddRelatedBodyPart">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.Smtp.ISmtpMessage.AddAttachment">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.Smtp.ISmtpMessage.CreateMHTMLBody">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.Smtp.ISmtpMessage.Forward">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.Smtp.ISmtpMessage.Post">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.Smtp.ISmtpMessage.PostReply">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.Smtp.ISmtpMessage.Reply">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.Smtp.ISmtpMessage.ReplyAll">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.Smtp.ISmtpMessage.Send">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.Smtp.ISmtpMessage.GetStream">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.Smtp.ISmtpMessage.GetInterface">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="P:System.Runtime.Remoting.Channels.Smtp.ISmtpMessage.BCC">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="P:System.Runtime.Remoting.Channels.Smtp.ISmtpMessage.CC">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="P:System.Runtime.Remoting.Channels.Smtp.ISmtpMessage.FollowUpTo">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="P:System.Runtime.Remoting.Channels.Smtp.ISmtpMessage.From">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="P:System.Runtime.Remoting.Channels.Smtp.ISmtpMessage.Keywords">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="P:System.Runtime.Remoting.Channels.Smtp.ISmtpMessage.MimeFormatted">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="P:System.Runtime.Remoting.Channels.Smtp.ISmtpMessage.Newsgroups">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="P:System.Runtime.Remoting.Channels.Smtp.ISmtpMessage.Organization">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="P:System.Runtime.Remoting.Channels.Smtp.ISmtpMessage.ReceivedTime">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="P:System.Runtime.Remoting.Channels.Smtp.ISmtpMessage.ReplyTo">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="P:System.Runtime.Remoting.Channels.Smtp.ISmtpMessage.DSNOptions">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="P:System.Runtime.Remoting.Channels.Smtp.ISmtpMessage.SentOn">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="P:System.Runtime.Remoting.Channels.Smtp.ISmtpMessage.Subject">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="P:System.Runtime.Remoting.Channels.Smtp.ISmtpMessage.To">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="P:System.Runtime.Remoting.Channels.Smtp.ISmtpMessage.TextBody">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="P:System.Runtime.Remoting.Channels.Smtp.ISmtpMessage.HTMLBody">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="P:System.Runtime.Remoting.Channels.Smtp.ISmtpMessage.Attachments">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="P:System.Runtime.Remoting.Channels.Smtp.ISmtpMessage.Sender">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="P:System.Runtime.Remoting.Channels.Smtp.ISmtpMessage.Configuration">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="P:System.Runtime.Remoting.Channels.Smtp.ISmtpMessage.AutoGenerateTextBody">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="P:System.Runtime.Remoting.Channels.Smtp.ISmtpMessage.EnvelopeFields">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="P:System.Runtime.Remoting.Channels.Smtp.ISmtpMessage.TextBodyPart">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="P:System.Runtime.Remoting.Channels.Smtp.ISmtpMessage.HTMLBodyPart">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="P:System.Runtime.Remoting.Channels.Smtp.ISmtpMessage.BodyPart">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="P:System.Runtime.Remoting.Channels.Smtp.ISmtpMessage.DataSource">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="P:System.Runtime.Remoting.Channels.Smtp.ISmtpMessage.Fields">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="P:System.Runtime.Remoting.Channels.Smtp.ISmtpMessage.MDNRequested">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="T:System.Runtime.Remoting.Channels.Smtp.SmtpChannelBase">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="F:System.Runtime.Remoting.Channels.Smtp.SmtpChannelBase.DefaultChannelName">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="F:System.Runtime.Remoting.Channels.Smtp.SmtpChannelBase.DefaultMimeType">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="F:System.Runtime.Remoting.Channels.Smtp.SmtpChannelBase.m_mimeType">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.Smtp.SmtpChannelBase.Parse(System.String,System.String@)">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="P:System.Runtime.Remoting.Channels.Smtp.SmtpChannelBase.ChannelPriority">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="P:System.Runtime.Remoting.Channels.Smtp.SmtpChannelBase.ChannelName">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="P:System.Runtime.Remoting.Channels.Smtp.SmtpChannelBase.MimeType">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="T:System.Runtime.Remoting.Channels.Smtp.SmtpChannel">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.Smtp.SmtpChannel.#ctor">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.Smtp.SmtpChannel.#ctor(System.String)">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.Smtp.SmtpChannel.#ctor(System.String[])">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.Smtp.SmtpChannel.CreateMessageSink(System.String,System.Object,System.String@)">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.Smtp.SmtpChannel.GetChannelUri">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.Smtp.SmtpChannel.GetUrlsForUri(System.String)">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.Smtp.SmtpChannel.StartListening(System.Object)">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.Smtp.SmtpChannel.StopListening(System.Object)">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.Smtp.SmtpChannel.Contains(System.Object)">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.Smtp.SmtpChannel.Add(System.Object,System.Object)">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.Smtp.SmtpChannel.Clear">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.Smtp.SmtpChannel.GetEnumerator">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.Smtp.SmtpChannel.Remove(System.Object)">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.Smtp.SmtpChannel.CopyTo(System.Array,System.Int32)">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.Smtp.SmtpChannel.OnArrival(System.Runtime.Remoting.Channels.Smtp.ISmtpMessage,System.Runtime.Remoting.Channels.Smtp.CdoEventStatus@)">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="P:System.Runtime.Remoting.Channels.Smtp.SmtpChannel.ChannelData">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="P:System.Runtime.Remoting.Channels.Smtp.SmtpChannel.Item(System.Object)">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="P:System.Runtime.Remoting.Channels.Smtp.SmtpChannel.Keys">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="P:System.Runtime.Remoting.Channels.Smtp.SmtpChannel.Values">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="P:System.Runtime.Remoting.Channels.Smtp.SmtpChannel.Count">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="P:System.Runtime.Remoting.Channels.Smtp.SmtpChannel.SyncRoot">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="P:System.Runtime.Remoting.Channels.Smtp.SmtpChannel.IsReadOnly">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="P:System.Runtime.Remoting.Channels.Smtp.SmtpChannel.IsFixedSize">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="P:System.Runtime.Remoting.Channels.Smtp.SmtpChannel.IsSynchronized">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="T:System.Runtime.Remoting.Channels.Smtp.SmtpMail">
      <summary>
        <para>SmtpMail!!!</para>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.Smtp.SmtpMail.Send(System.String,System.String,System.String,System.String)">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.Smtp.SmtpMail.Send(System.Runtime.Remoting.Channels.Smtp.MailMessage)">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="T:System.Runtime.Remoting.Channels.Smtp.MailFormat">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="F:System.Runtime.Remoting.Channels.Smtp.MailFormat.Text">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="F:System.Runtime.Remoting.Channels.Smtp.MailFormat.Html">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="T:System.Runtime.Remoting.Channels.Smtp.MailPriority">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="F:System.Runtime.Remoting.Channels.Smtp.MailPriority.Normal">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="F:System.Runtime.Remoting.Channels.Smtp.MailPriority.Low">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="F:System.Runtime.Remoting.Channels.Smtp.MailPriority.High">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="T:System.Runtime.Remoting.Channels.Smtp.MailEncoding">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="F:System.Runtime.Remoting.Channels.Smtp.MailEncoding.UUEncode">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="F:System.Runtime.Remoting.Channels.Smtp.MailEncoding.Base64">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="T:System.Runtime.Remoting.Channels.Smtp.MailAttachment">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.Smtp.MailAttachment.#ctor(System.String)">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.Smtp.MailAttachment.#ctor(System.String,System.Runtime.Remoting.Channels.Smtp.MailEncoding)">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="P:System.Runtime.Remoting.Channels.Smtp.MailAttachment.Filename">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="P:System.Runtime.Remoting.Channels.Smtp.MailAttachment.Encoding">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="T:System.Runtime.Remoting.Channels.Smtp.MailMessage">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="F:System.Runtime.Remoting.Channels.Smtp.MailMessage.From">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="F:System.Runtime.Remoting.Channels.Smtp.MailMessage.To">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="F:System.Runtime.Remoting.Channels.Smtp.MailMessage.Cc">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="F:System.Runtime.Remoting.Channels.Smtp.MailMessage.Bcc">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="F:System.Runtime.Remoting.Channels.Smtp.MailMessage.Subject">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="F:System.Runtime.Remoting.Channels.Smtp.MailMessage.Priority">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="F:System.Runtime.Remoting.Channels.Smtp.MailMessage.UrlContentBase">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="F:System.Runtime.Remoting.Channels.Smtp.MailMessage.UrlContentLocation">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="F:System.Runtime.Remoting.Channels.Smtp.MailMessage.Body">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="F:System.Runtime.Remoting.Channels.Smtp.MailMessage.BodyFormat">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="P:System.Runtime.Remoting.Channels.Smtp.MailMessage.Headers">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="P:System.Runtime.Remoting.Channels.Smtp.MailMessage.Attachments">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="T:System.Runtime.Remoting.Channels.Smtp.SmtpMessageSink">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.Smtp.SmtpMessageSink.#ctor(System.Runtime.Remoting.Channels.Smtp.SmtpChannel,System.String,System.String)">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.Smtp.SmtpMessageSink.SyncProcessMessage(System.Runtime.Remoting.Messaging.IMessage)">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.Smtp.SmtpMessageSink.AsyncProcessMessage(System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Messaging.IMessageSink)">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.Smtp.SmtpMessageSink.Finalize">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.Smtp.SmtpMessageSink.Contains(System.Object)">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.Smtp.SmtpMessageSink.Add(System.Object,System.Object)">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.Smtp.SmtpMessageSink.Clear">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.Smtp.SmtpMessageSink.GetEnumerator">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.Smtp.SmtpMessageSink.Remove(System.Object)">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.Smtp.SmtpMessageSink.CopyTo(System.Array,System.Int32)">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="P:System.Runtime.Remoting.Channels.Smtp.SmtpMessageSink.NextSink">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="P:System.Runtime.Remoting.Channels.Smtp.SmtpMessageSink.Item(System.Object)">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="P:System.Runtime.Remoting.Channels.Smtp.SmtpMessageSink.Keys">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="P:System.Runtime.Remoting.Channels.Smtp.SmtpMessageSink.Values">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="P:System.Runtime.Remoting.Channels.Smtp.SmtpMessageSink.Count">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="P:System.Runtime.Remoting.Channels.Smtp.SmtpMessageSink.SyncRoot">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="P:System.Runtime.Remoting.Channels.Smtp.SmtpMessageSink.IsReadOnly">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="P:System.Runtime.Remoting.Channels.Smtp.SmtpMessageSink.IsFixedSize">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="P:System.Runtime.Remoting.Channels.Smtp.SmtpMessageSink.IsSynchronized">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="T:System.Runtime.Remoting.Channels.Smtp.SmtpRegisterSink">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.Smtp.SmtpRegisterSink.CreateRegistryEntryForMailbox(System.String,System.String)">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.Smtp.SmtpRegisterSink.CreateRegistryEntryForMailbox(System.String)">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.Smtp.SmtpRegisterSink.DeleteRegistryEntryForMailbox(System.String)">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.Smtp.SmtpRegisterSink.RegisterSinkWithSmtp(System.String)">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
  </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\tools\x86\managed\urt\v1.0.3705\system.serviceprocess.xml ===
<?xml version="1.0"?>
<doc>
  <assembly>
    <name>System.ServiceProcess</name>
  </assembly>
  <members>
    <member name="M:System.ServiceProcess.ResDescriptionAttribute.#ctor(System.String)">
      <summary>
                Constructs a new sys description.
            </summary>
      <param name="description">
                description text.
            </param>
    </member>
    <member name="P:System.ServiceProcess.ResDescriptionAttribute.Description">
      <summary>
                Retrieves the description text.
            </summary>
      <returns>
                description
            </returns>
    </member>
    <member name="T:System.ServiceProcess.PowerBroadcastStatus">
      <summary>
        <para>Indicates the system's power status.</para>
      </summary>
    </member>
    <member name="F:System.ServiceProcess.PowerBroadcastStatus.BatteryLow">
      <summary>
        <para> Battery power is low.</para>
      </summary>
    </member>
    <member name="F:System.ServiceProcess.PowerBroadcastStatus.OemEvent">
      <summary>
        <para>An Advanced Power Management (APM) BIOS signaled an APM OEM event.</para>
      </summary>
    </member>
    <member name="F:System.ServiceProcess.PowerBroadcastStatus.PowerStatusChange">
      <summary>
        <para>A change in the power status of the computer is 
      detected, such as a switch from battery power to A/C. The system also broadcasts
      this event when remaining battery power slips below the threshold specified by
      the user or if the battery power changes by a specified percentage.</para>
      </summary>
    </member>
    <member name="F:System.ServiceProcess.PowerBroadcastStatus.QuerySuspend">
      <summary>
        <para>The system has requested permission to suspend the
      computer. An application that grants permission should carry out preparations
      for the suspension before returning.</para>
      </summary>
    </member>
    <member name="F:System.ServiceProcess.PowerBroadcastStatus.QuerySuspendFailed">
      <summary>
        <para> The system was denied permission to suspend
      the computer. This status is broadcast if any application or driver denied a
      previous <see langword="QuerySuspend" /> status.</para>
        <para>
        </para>
      </summary>
    </member>
    <member name="F:System.ServiceProcess.PowerBroadcastStatus.ResumeAutomatic">
      <summary>
        <para>The computer has woken up automatically to 
      handle an event.</para>
        <note type="note">
      If the system detects any user
      activity after broadcasting <see langword="ResumeAutomatic" />, it will broadcast a
   <see langword="ResumeSuspend" /> event to let applications know they can resume full 
      interaction with the user.
   </note>
      </summary>
    </member>
    <member name="F:System.ServiceProcess.PowerBroadcastStatus.ResumeCritical">
      <summary>
        <para> The system has resumed operation after
      a critical suspension caused by a failing battery.</para>
        <note type="note">
      Because a critical suspension occurs
      without prior notification, resources and data previously available may not be
      present when the application receives this event. The application should attempt
      to restore its state to the best of its ability.
      
   </note>
      </summary>
    </member>
    <member name="F:System.ServiceProcess.PowerBroadcastStatus.ResumeSuspend">
      <summary>
        <para> The system has resumed operation after being suspended.</para>
      </summary>
    </member>
    <member name="F:System.ServiceProcess.PowerBroadcastStatus.Suspend">
      <summary>
        <para>The computer is about to enter a suspended state. This 
      event is typically broadcast when all applications and installable drivers have
      returned <see langword="true" />
      to a previous <see langword="QuerySuspend" /> state.</para>
      </summary>
    </member>
    <member name="T:System.ServiceProcess.ServiceAccount">
      <summary>
        <para>Specifies a service's security context, which defines
      its logon type.</para>
      </summary>
    </member>
    <member name="F:System.ServiceProcess.ServiceAccount.LocalService">
      <summary>
        <para>An account that provides extensive local privileges, and presents 
 the computer's credentials to any remote server.</para>
      </summary>
    </member>
    <member name="F:System.ServiceProcess.ServiceAccount.NetworkService">
      <summary>
        <para>An account that acts as a non-privileged user on the
 local computer, and
 presents the computer's credentials to any remote server.</para>
      </summary>
    </member>
    <member name="F:System.ServiceProcess.ServiceAccount.LocalSystem">
      <summary>
        <para>An account that acts as a non-privileged user on the
 local computer, and
 presents anonymous credentials to any remote server.</para>
        <para>
        </para>
      </summary>
    </member>
    <member name="F:System.ServiceProcess.ServiceAccount.User">
      <summary>
        <para>An account defined by a specific user on the network.
      Specifying <see langword="User" /> for the <see cref="P:System.ServiceProcess.ServiceProcessInstaller.Account" qualify="true" /> member causes the
      system to prompt for a valid user name and password when the service is
      installed, unless you set values for both the <see cref="P:System.ServiceProcess.ServiceProcessInstaller.Username" /> and <see cref="P:System.ServiceProcess.ServiceProcessInstaller.Password" /> properties of your <see cref="T:System.ServiceProcess.ServiceProcessInstaller" />
      instance.</para>
      </summary>
    </member>
    <member name="T:System.ServiceProcess.ServiceBase">
      <summary>
        <para>Provides a base class for a service that will exist as part of a service application. <see cref="T:System.ServiceProcess.ServiceBase" />
must
be derived when creating a new service class.</para>
      </summary>
    </member>
    <member name="F:System.ServiceProcess.ServiceBase.MaxNameLength">
      <summary>
        <para> Indicates the maximum size for a service name.
      </para>
      </summary>
    </member>
    <member name="M:System.ServiceProcess.ServiceBase.#ctor">
      <summary>
        <para>Creates a new instance of the <see cref="T:System.ServiceProcess.ServiceBase" /> class.</para>
      </summary>
    </member>
    <member name="M:System.ServiceProcess.ServiceBase.OnContinue">
      <summary>
        <para> When implemented in a derived class, <see cref="M:System.ServiceProcess.ServiceBase.OnContinue" />
runs when a Continue command is sent to the service
by the
Service Control Manager (SCM). Specifies actions to take when a
service resumes normal functioning after being paused.</para>
      </summary>
    </member>
    <member name="M:System.ServiceProcess.ServiceBase.OnPause">
      <summary>
        <para> When implemented in a
      derived class, executes when a Pause command is sent
      to
      the service by the Service Control Manager (SCM). Specifies
      actions to take when a service pauses.</para>
      </summary>
    </member>
    <member name="M:System.ServiceProcess.ServiceBase.OnPowerEvent(System.ServiceProcess.PowerBroadcastStatus)">
      <summary>
        <para> When implemented in a derived class, executes when the
      computer's power status has changed. This applies to laptop computers when they go into suspended mode, which is not the same
      as a system shutdown.</para>
      </summary>
      <param name="powerStatus">A <see cref="T:System.ServiceProcess.PowerBroadcastStatus" /> that indicates a notification from the system about its power status.</param>
      <returns>
        <para>When implemented in a derived class, the needs of 
      your application determine what value to return. For example, if a
   <see langword="QuerySuspend" /> broadcast status is passed, you could cause your 
      application to reject the query by returning <see langword="false" />
      .</para>
      </returns>
    </member>
    <member name="M:System.ServiceProcess.ServiceBase.OnShutdown">
      <summary>
        <para>When implemented in a derived class,
      executes when the system is shutting down.
      Specifies what should
      happen immediately prior
      to the system shutting down.</para>
      </summary>
    </member>
    <member name="M:System.ServiceProcess.ServiceBase.OnStart(System.String[])">
      <summary>
        <para> When implemented in a derived class, executes when a 
      Start command is sent to the service
      by the Service Control Manager (SCM) or when the
      operating system starts (for a service
      that starts automatically). Specifies actions to take when the service starts.</para>
        <para>
        </para>
      </summary>
      <param name="args">Data passed by the start command.</param>
    </member>
    <member name="M:System.ServiceProcess.ServiceBase.OnStop">
      <summary>
        <para> When implemented in a
      derived class, executes when a Stop command is sent to the
      service by the Service Control Manager (SCM). Specifies actions to take when a
      service stops
      running.</para>
      </summary>
    </member>
    <member name="M:System.ServiceProcess.ServiceBase.OnCustomCommand(System.Int32)">
      <summary>
        <para>When implemented in a derived class, <see cref="M:System.ServiceProcess.ServiceBase.OnCustomCommand(System.Int32)" /> executes when the Service
   Control Manager (SCM) passes a custom
   command to the service. Specifies actions to take when
   a command with the specified parameter value occurs.</para>
      </summary>
      <param name="command">The command message sent to the service.</param>
    </member>
    <member name="M:System.ServiceProcess.ServiceBase.Run(System.ServiceProcess.ServiceBase[])">
      <summary>
        <para>Provides the main entry point for an executable that
      contains multiple associated services. Loads the specified services into memory so they can be
      started.</para>
      </summary>
      <param name="services">An array of ServiceBase instances, which indicate services to start. </param>
    </member>
    <member name="M:System.ServiceProcess.ServiceBase.Run(System.ServiceProcess.ServiceBase)">
      <summary>
        <para>Provides the main
      entry point for an executable that contains a single
      service. Loads the service into memory so it can be
      started.</para>
      </summary>
      <param name="service">A <see cref="T:System.ServiceProcess.ServiceBase" /> which indicates a service to start.</param>
    </member>
    <member name="P:System.ServiceProcess.ServiceBase.AutoLog">
      <summary>
        <para> Indicates whether to report Start, Stop, Pause,
      and Continue commands
      in
      the
      event
      log.</para>
      </summary>
    </member>
    <member name="P:System.ServiceProcess.ServiceBase.CanHandlePowerEvent">
      <summary>
        <para> Gets or sets
      a value indicating whether the service can handle notifications of
      computer power status changes.
      </para>
      </summary>
    </member>
    <member name="P:System.ServiceProcess.ServiceBase.CanPauseAndContinue">
      <summary>
        <para> Gets or sets a value indicating whether the service can be paused
      and resumed.</para>
      </summary>
    </member>
    <member name="P:System.ServiceProcess.ServiceBase.CanShutdown">
      <summary>
        <para> Gets or sets a value indicating whether the service should be notified when
      the system is shutting down.</para>
      </summary>
    </member>
    <member name="P:System.ServiceProcess.ServiceBase.CanStop">
      <summary>
        <para> Gets or sets a value indicating whether the service can be
      stopped once it has started.</para>
      </summary>
    </member>
    <member name="P:System.ServiceProcess.ServiceBase.EventLog">
      <summary>
        <para> Gets an event log you can use to write notification of service
      command calls, such as Start and Stop, to the Application event log.</para>
      </summary>
    </member>
    <member name="P:System.ServiceProcess.ServiceBase.ServiceName">
      <summary>
        <para> Gets or sets the short name used to identify the service to the system.</para>
      </summary>
    </member>
    <member name="T:System.ServiceProcess.ServiceController">
      <summary>
        <para> Represents a Windows service and allows you to connect to a running or stopped
      service, manipulate it, or get information about it.</para>
      </summary>
    </member>
    <member name="M:System.ServiceProcess.ServiceController.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.ServiceProcess.ServiceController" /> class that is not associated with a specific service.</para>
      </summary>
    </member>
    <member name="M:System.ServiceProcess.ServiceController.#ctor(System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.ServiceProcess.ServiceController" /> class that is associated with an existing service on the
   local computer.</para>
      </summary>
      <param name="name">The short name that identifies the service to the system. </param>
    </member>
    <member name="M:System.ServiceProcess.ServiceController.#ctor(System.String,System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.ServiceProcess.ServiceController" /> class that is associated with an existing service
   on the specified computer.</para>
      </summary>
      <param name="name">The short name that identifies the service to the system. </param>
      <param name="machineName">The computer on which the service resides. </param>
    </member>
    <member name="M:System.ServiceProcess.ServiceController.Close">
      <summary>
        <para>Disconnects this <see cref="T:System.ServiceProcess.ServiceController" /> instance from 
   the service and frees all the resources that the instance allocated.</para>
      </summary>
    </member>
    <member name="M:System.ServiceProcess.ServiceController.GetDevices">
      <summary>
        <para>Retrieves the device driver services on the local computer.</para>
      </summary>
      <returns>
        <para>An array of type <see cref="T:System.ServiceProcess.ServiceController" /> in which each element is associated
   with a device driver service on the local computer.</para>
      </returns>
    </member>
    <member name="M:System.ServiceProcess.ServiceController.GetDevices(System.String)">
      <summary>
        <para>Retrieves the device driver services on the specified computer.</para>
      </summary>
      <param name="machineName">
        <para>The computer from which to retrieve the device driver services. </para>
      </param>
      <returns>
        <para>An array of type <see cref="T:System.ServiceProcess.ServiceController" /> in which each element is associated
   with a device driver service on the specified computer.</para>
      </returns>
    </member>
    <member name="M:System.ServiceProcess.ServiceController.GetServices">
      <summary>
        <para>Retrieves all the services on the local computer, except for the device driver services.</para>
      </summary>
      <returns>
        <para>An array of type <see cref="T:System.ServiceProcess.ServiceController" /> in which each element
   is associated with a service on the local computer.</para>
      </returns>
    </member>
    <member name="M:System.ServiceProcess.ServiceController.GetServices(System.String)">
      <summary>
        <para>Retrieves all the services on the specified computer, except for the device driver services.</para>
      </summary>
      <param name="machineName">
        <para> The computer from which to retrieve the services. </para>
      </param>
      <returns>
        <para>An array of type <see cref="T:System.ServiceProcess.ServiceController" /> in which each element
   is associated with a service on the specified computer.</para>
      </returns>
    </member>
    <member name="M:System.ServiceProcess.ServiceController.Pause">
      <summary>
        <para>Suspends a service's operation.</para>
      </summary>
    </member>
    <member name="M:System.ServiceProcess.ServiceController.Continue">
      <summary>
        <para>Continues a service after it has been paused.</para>
      </summary>
    </member>
    <member name="M:System.ServiceProcess.ServiceController.ExecuteCommand(System.Int32)">
      <summary>
        <para>Executes a custom command on the service.</para>
      </summary>
      <param name="command">An application-defined command flag that indicates which custom command to execute. </param>
    </member>
    <member name="M:System.ServiceProcess.ServiceController.Refresh">
      <summary>
        <para>Refreshes all the property values, setting them to the current values.</para>
      </summary>
    </member>
    <member name="M:System.ServiceProcess.ServiceController.Start">
      <summary>
        <para>Starts the service, passing no arguments.</para>
      </summary>
    </member>
    <member name="M:System.ServiceProcess.ServiceController.Start(System.String[])">
      <summary>
        <para> Starts a service, passing the specified arguments.</para>
      </summary>
      <param name="args"> An array of arguments to pass to the service when it starts.</param>
    </member>
    <member name="M:System.ServiceProcess.ServiceController.Stop">
      <summary>
        <para> Stops this service and any services that are dependent on
      this service.</para>
      </summary>
    </member>
    <member name="M:System.ServiceProcess.ServiceController.WaitForStatus(System.ServiceProcess.ServiceControllerStatus)">
      <summary>
        <para> Infinitely waits for the service to reach the specified status.</para>
      </summary>
      <param name="desiredStatus">The status to wait for.</param>
    </member>
    <member name="M:System.ServiceProcess.ServiceController.WaitForStatus(System.ServiceProcess.ServiceControllerStatus,System.TimeSpan)">
      <summary>
        <para>Waits for the service to reach the specified status or for the specified time-out
      to expire.</para>
      </summary>
      <param name="desiredStatus">The status to wait for.</param>
      <param name=" timeout">The amount of time to wait for the service to reach the specified status.</param>
    </member>
    <member name="P:System.ServiceProcess.ServiceController.CanPauseAndContinue">
      <summary>
        <para> Gets a value indicating whether the service can be paused and resumed.</para>
      </summary>
    </member>
    <member name="P:System.ServiceProcess.ServiceController.CanShutdown">
      <summary>
        <para> Gets a value indicating whether the service should be notified when the system is shutting down.</para>
      </summary>
    </member>
    <member name="P:System.ServiceProcess.ServiceController.CanStop">
      <summary>
        <para> Gets a value indicating whether the service can be stopped after it has started.</para>
      </summary>
    </member>
    <member name="P:System.ServiceProcess.ServiceController.DisplayName">
      <summary>
        <para> Gets or sets a friendly name for the service. </para>
      </summary>
    </member>
    <member name="P:System.ServiceProcess.ServiceController.DependentServices">
      <summary>
        <para>Gets the set of services that depends on the service
      associated with this <see cref="T:System.ServiceProcess.ServiceController" />
      instance.</para>
      </summary>
    </member>
    <member name="P:System.ServiceProcess.ServiceController.MachineName">
      <summary>
        <para>Gets or sets the name of the computer on which this service resides.</para>
      </summary>
    </member>
    <member name="P:System.ServiceProcess.ServiceController.ServiceName">
      <summary>
        <para> Gets or sets the name that identifies the service that this instance
      references.</para>
      </summary>
    </member>
    <member name="P:System.ServiceProcess.ServiceController.ServicesDependedOn">
      <summary>
        <para>The set of services that this service depends on.</para>
      </summary>
    </member>
    <member name="P:System.ServiceProcess.ServiceController.Status">
      <summary>
        <para> Gets the status of the service that
      is referenced by this instance.</para>
      </summary>
    </member>
    <member name="P:System.ServiceProcess.ServiceController.ServiceType">
      <summary>
        <para>Gets the type of service that this object references.</para>
      </summary>
    </member>
    <member name="T:System.ServiceProcess.ServiceControllerPermission">
      <summary>
        <para>Allows control of code access security permissions for service
 controllers.</para>
      </summary>
    </member>
    <member name="M:System.ServiceProcess.ServiceControllerPermission.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.ServiceProcess.ServiceControllerPermission" /> class.</para>
      </summary>
    </member>
    <member name="M:System.ServiceProcess.ServiceControllerPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.ServiceProcess.ServiceControllerPermission" /> class with 
   the specified access to resources.</para>
      </summary>
      <param name="state">One of the <see cref="T:System.Security.Permissions.PermissionState" /> values.</param>
    </member>
    <member name="M:System.ServiceProcess.ServiceControllerPermission.#ctor(System.ServiceProcess.ServiceControllerPermissionAccess,System.String,System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.ServiceProcess.ServiceControllerPermission" /> 
class with the specified permission access levels, the name of the computer on
which the service resides, and the short name that identifies the
service to the system.</para>
      </summary>
      <param name="permissionAccess">One of the <see cref="T:System.ServiceProcess.ServiceControllerPermissionAccess" /> values.</param>
      <param name=" machineName"> The name of the computer on which the service resides.</param>
      <param name=" serviceName"> The short name that identifies the service to the system.</param>
    </member>
    <member name="M:System.ServiceProcess.ServiceControllerPermission.#ctor(System.ServiceProcess.ServiceControllerPermissionEntry[])">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.ServiceProcess.ServiceControllerPermission" /> class with 
   the specified permission entries.</para>
      </summary>
      <param name="permissionAccessEntries">An array of <see cref="T:System.ServiceProcess.ServiceControllerPermissionEntry" /> objects. The <see cref="P:System.ServiceProcess.ServiceControllerPermission.PermissionEntries" /> property is set to this value.</param>
    </member>
    <member name="P:System.ServiceProcess.ServiceControllerPermission.PermissionEntries">
      <summary>
        <para>Gets the collection of permission entries for this permissions request.</para>
      </summary>
    </member>
    <member name="T:System.ServiceProcess.ServiceControllerPermissionAccess">
      <summary>
        <para>Defines access levels used by <see cref="T:System.ServiceProcess.ServiceController" /> permission classes.</para>
      </summary>
    </member>
    <member name="F:System.ServiceProcess.ServiceControllerPermissionAccess.None">
      <summary>
        <para>The <see cref="T:System.ServiceProcess.ServiceController" /> has no permissions.</para>
      </summary>
    </member>
    <member name="F:System.ServiceProcess.ServiceControllerPermissionAccess.Browse">
      <summary>
        <para>The <see cref="T:System.ServiceProcess.ServiceController" /> can connect
 to, but not control, existing services.</para>
      </summary>
    </member>
    <member name="F:System.ServiceProcess.ServiceControllerPermissionAccess.Control">
      <summary>
        <para>The <see cref="T:System.ServiceProcess.ServiceController" /> can
 connect to and control existing services.</para>
      </summary>
    </member>
    <member name="T:System.ServiceProcess.ServiceControllerPermissionAttribute">
      <summary>
        <para>Allows declarative service controller permission checks.</para>
      </summary>
    </member>
    <member name="M:System.ServiceProcess.ServiceControllerPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.ServiceProcess.ServiceControllerPermissionAttribute" /> class.</para>
      </summary>
      <param name="action">One of the <see cref="T:System.Security.Permissions.SecurityAction" /> values.</param>
    </member>
    <member name="M:System.ServiceProcess.ServiceControllerPermissionAttribute.CreatePermission">
      <summary>
        <para>Creates the permission based on the requested access
 levels that are set through the <see cref="P:System.ServiceProcess.ServiceControllerPermissionAttribute.PermissionAccess" /> property on the attribute.</para>
      </summary>
      <returns>
        <para>An <see cref="T:System.Security.IPermission" /> that represents the created permission.</para>
      </returns>
    </member>
    <member name="P:System.ServiceProcess.ServiceControllerPermissionAttribute.MachineName">
      <summary>
        <para> Gets or sets the name of the computer on which the service resides.</para>
      </summary>
    </member>
    <member name="P:System.ServiceProcess.ServiceControllerPermissionAttribute.PermissionAccess">
      <summary>
        <para>Gets or sets the access levels used in the permissions request.</para>
      </summary>
    </member>
    <member name="P:System.ServiceProcess.ServiceControllerPermissionAttribute.ServiceName">
      <summary>
        <para>Gets or sets the short name that identifies the service to the system.</para>
      </summary>
    </member>
    <member name="T:System.ServiceProcess.ServiceControllerPermissionEntry">
      <summary>
        <para>Defines the smallest unit of a code access security permission that is set for a
   <see cref="T:System.ServiceProcess.ServiceController" />.</para>
      </summary>
    </member>
    <member name="M:System.ServiceProcess.ServiceControllerPermissionEntry.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.ServiceProcess.ServiceControllerPermissionEntry" /> class.</para>
      </summary>
    </member>
    <member name="M:System.ServiceProcess.ServiceControllerPermissionEntry.#ctor(System.ServiceProcess.ServiceControllerPermissionAccess,System.String,System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.ServiceProcess.ServiceControllerPermissionEntry" /> class with 
   the specified
   permission access levels, the name of the computer, and a short name
   that identifies the service.</para>
      </summary>
      <param name="permissionAccess">One of the <see cref="T:System.ServiceProcess.ServiceControllerPermissionAccess" /> values.</param>
      <param name=" machineName">The name of the computer on which the service resides.</param>
      <param name=" serviceName">The short name that identifies the service to the system.</param>
    </member>
    <member name="P:System.ServiceProcess.ServiceControllerPermissionEntry.MachineName">
      <summary>
        <para>Gets the name of the computer on which the service resides.</para>
      </summary>
    </member>
    <member name="P:System.ServiceProcess.ServiceControllerPermissionEntry.PermissionAccess">
      <summary>
        <para>Gets the access levels used in the permissions request.</para>
      </summary>
    </member>
    <member name="P:System.ServiceProcess.ServiceControllerPermissionEntry.ServiceName">
      <summary>
        <para>Gets the short name that identifies the service to the system.</para>
      </summary>
    </member>
    <member name="T:System.ServiceProcess.ServiceControllerPermissionEntryCollection">
      <summary>
        <para>Contains a strongly-typed collection of <see cref="T:System.ServiceProcess.ServiceControllerPermissionEntry" /> objects.</para>
      </summary>
    </member>
    <member name="M:System.ServiceProcess.ServiceControllerPermissionEntryCollection.Add(System.ServiceProcess.ServiceControllerPermissionEntry)">
      <summary>
        <para>Adds a specified <see cref="T:System.ServiceProcess.ServiceControllerPermissionEntry" /> to this collection.</para>
      </summary>
      <param name="value">The <see cref="T:System.ServiceProcess.ServiceControllerPermissionEntry" /> object to add.</param>
      <returns>
        <para>The zero-based index of the added <see cref="T:System.ServiceProcess.ServiceControllerPermissionEntry" /> object.</para>
      </returns>
    </member>
    <member name="M:System.ServiceProcess.ServiceControllerPermissionEntryCollection.AddRange(System.ServiceProcess.ServiceControllerPermissionEntry[])">
      <summary>
        <para>Appends a set of specified permission entries to this collection.</para>
      </summary>
      <param name="value">An array of type <see cref="T:System.ServiceProcess.ServiceControllerPermissionEntry" /> objects that contains the permission entries to add.</param>
    </member>
    <member name="M:System.ServiceProcess.ServiceControllerPermissionEntryCollection.AddRange(System.ServiceProcess.ServiceControllerPermissionEntryCollection)">
      <summary>
        <para> Appends a set of specified permission entries to this collection.</para>
      </summary>
      <param name="value">A <see cref="T:System.ServiceProcess.ServiceControllerPermissionEntryCollection" /> that contains the permission entries to add.</param>
    </member>
    <member name="M:System.ServiceProcess.ServiceControllerPermissionEntryCollection.Contains(System.ServiceProcess.ServiceControllerPermissionEntry)">
      <summary>
        <para>Determines whether this collection contains a specified 
 <see cref="T:System.ServiceProcess.ServiceControllerPermissionEntry" /> object.</para>
      </summary>
      <param name="value">The <see cref="T:System.ServiceProcess.ServiceControllerPermissionEntry" /> object to find.</param>
      <returns>
        <para>
          <see langword="true" /> if the 
 specified <see cref="T:System.ServiceProcess.ServiceControllerPermissionEntry" /> object belongs to this collection;
 otherwise, <see langword="false" />.</para>
      </returns>
    </member>
    <member name="M:System.ServiceProcess.ServiceControllerPermissionEntryCollection.CopyTo(System.ServiceProcess.ServiceControllerPermissionEntry[],System.Int32)">
      <summary>
        <para>Copies the permission entries from this collection to an
      array, starting at a particular index of the array.</para>
      </summary>
      <param name="array">An array of type <see cref="T:System.ServiceProcess.ServiceControllerPermissionEntry" /> that receives the copied permission entries.</param>
      <param name=" index">The zero-based index at which to begin copying the permission entries.</param>
    </member>
    <member name="M:System.ServiceProcess.ServiceControllerPermissionEntryCollection.IndexOf(System.ServiceProcess.ServiceControllerPermissionEntry)">
      <summary>
        <para>Determines the index of a specified permission entry in this collection.</para>
      </summary>
      <param name="value">The permission entry to search for.</param>
      <returns>
        <para>The zero-based index of the specified permission 
      entry, or -1 if the permission entry was not found in the collection.</para>
      </returns>
    </member>
    <member name="M:System.ServiceProcess.ServiceControllerPermissionEntryCollection.Insert(System.Int32,System.ServiceProcess.ServiceControllerPermissionEntry)">
      <summary>
        <para>Inserts a permission entry into this collection at a specified index.</para>
      </summary>
      <param name="index">The zero-based index of the collection at which to insert the permission entry.</param>
      <param name=" value">The permission entry to insert into this collection.</param>
    </member>
    <member name="M:System.ServiceProcess.ServiceControllerPermissionEntryCollection.Remove(System.ServiceProcess.ServiceControllerPermissionEntry)">
      <summary>
        <para>Removes a specified permission entry from this collection.</para>
      </summary>
      <param name="value">The permission entry to remove.</param>
    </member>
    <member name="P:System.ServiceProcess.ServiceControllerPermissionEntryCollection.Item(System.Int32)">
      <summary>
        <para>Gets or sets the object at a specified index.</para>
      </summary>
      <param name="index">The zero-based index into the collection.</param>
    </member>
    <member name="T:System.ServiceProcess.ServiceControllerStatus">
      <summary>
        <para>Indicates the current state of the service.</para>
      </summary>
    </member>
    <member name="F:System.ServiceProcess.ServiceControllerStatus.ContinuePending">
      <summary>
        <para>The service continue is pending.</para>
      </summary>
    </member>
    <member name="F:System.ServiceProcess.ServiceControllerStatus.Paused">
      <summary>
        <para>The service is paused.</para>
      </summary>
    </member>
    <member name="F:System.ServiceProcess.ServiceControllerStatus.PausePending">
      <summary>
        <para>The service pause is pending.</para>
      </summary>
    </member>
    <member name="F:System.ServiceProcess.ServiceControllerStatus.Running">
      <summary>
        <para>The service is running.</para>
      </summary>
    </member>
    <member name="F:System.ServiceProcess.ServiceControllerStatus.StartPending">
      <summary>
        <para>The service is starting.</para>
      </summary>
    </member>
    <member name="F:System.ServiceProcess.ServiceControllerStatus.Stopped">
      <summary>
        <para>The service is stopping.</para>
      </summary>
    </member>
    <member name="F:System.ServiceProcess.ServiceControllerStatus.StopPending">
      <summary>
        <para>The service is not running.</para>
      </summary>
    </member>
    <member name="T:System.ServiceProcess.ServiceInstaller">
      <summary>
        <para>Installs a class that extends <see cref="T:System.ServiceProcess.ServiceBase" /> to implement a service. This class is called
   by the install utility when installing a service application.</para>
      </summary>
    </member>
    <member name="M:System.ServiceProcess.ServiceInstaller.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.ServiceProcess.ServiceInstaller" /> class.</para>
      </summary>
    </member>
    <member name="M:System.ServiceProcess.ServiceInstaller.CopyFromComponent(System.ComponentModel.IComponent)">
      <summary>
        <para> Copies properties from an instance of <see cref="T:System.ServiceProcess.ServiceBase" />
to this installer.</para>
      </summary>
      <param name="component">The <see cref="T:System.ComponentModel.IComponent" /> from which to copy.</param>
    </member>
    <member name="M:System.ServiceProcess.ServiceInstaller.Install(System.Collections.IDictionary)">
      <summary>
        <para>Installs the service by writing service application
      information to the registry. This method is meant to be used by installation
      tools, which process the appropriate methods automatically.</para>
      </summary>
      <param name="stateSaver">An <see cref="T:System.Collections.IDictionary" /> that contains the context information associated with the installation.</param>
    </member>
    <member name="M:System.ServiceProcess.ServiceInstaller.IsEquivalentInstaller(System.Configuration.Install.ComponentInstaller)">
      <summary>
        <para>Indicates whether two installers would install 
      the same service. </para>
      </summary>
      <param name="otherInstaller">A <see cref="T:System.Configuration.Install.ComponentInstaller" /> to which you are comparing the current installer.</param>
      <returns>
        <para>
          <see langword="true" /> if calling <see cref="M:System.ServiceProcess.ServiceInstaller.Install(System.Collections.IDictionary)" /> on both of these installers would result 
   in installing the same service; otherwise, <see langword="false" />.</para>
      </returns>
    </member>
    <member name="M:System.ServiceProcess.ServiceInstaller.Rollback(System.Collections.IDictionary)">
      <summary>
        <para> Rolls back service application information written to the registry
      by the installation procedure. This method is meant to be used by installation
      tools, which process the appropriate methods automatically.</para>
      </summary>
      <param name="savedState">An <see cref="T:System.Collections.IDictionary" /> that contains the context information associated with the installation.</param>
    </member>
    <member name="M:System.ServiceProcess.ServiceInstaller.Uninstall(System.Collections.IDictionary)">
      <summary>
        <para>Uninstalls the service by removing information about it from the registry.</para>
      </summary>
      <param name="savedState">An <see cref="T:System.Collections.IDictionary" /> that contains the context information associated with the installation.</param>
    </member>
    <member name="P:System.ServiceProcess.ServiceInstaller.DisplayName">
      <summary>
        <para>Indicates the friendly name that identifies the service to
      the user. </para>
      </summary>
    </member>
    <member name="P:System.ServiceProcess.ServiceInstaller.ServicesDependedOn">
      <summary>
        <para> Indicates the services that must be running for this service to run.</para>
      </summary>
    </member>
    <member name="P:System.ServiceProcess.ServiceInstaller.ServiceName">
      <summary>
        <para>Indicates the name used by the system to identify
      this service. This property must be identical to the <see cref="P:System.ServiceProcess.ServiceBase.ServiceName" qualify="true" /> of the service you want to install.</para>
      </summary>
    </member>
    <member name="P:System.ServiceProcess.ServiceInstaller.StartType">
      <summary>
        <para>Indicates how and when this service is started.</para>
      </summary>
    </member>
    <member name="T:System.ServiceProcess.ServiceProcessDescriptionAttribute">
      <summary>
        <para> Specifies a description for a property
      or event.</para>
      </summary>
    </member>
    <member name="M:System.ServiceProcess.ServiceProcessDescriptionAttribute.#ctor(System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.ServiceProcess.ServiceProcessDescriptionAttribute" /> class, using the specified description.</para>
      </summary>
      <param name="description">The application-defined description text. </param>
    </member>
    <member name="P:System.ServiceProcess.ServiceProcessDescriptionAttribute.Description">
      <summary>
        <para>Gets description text associated with the service process.</para>
      </summary>
    </member>
    <member name="T:System.ServiceProcess.ServiceProcessInstaller">
      <summary>
        <para>Installs an executable containing classes
      that extend <see cref="T:System.ServiceProcess.ServiceBase" /> . This class is called by installation utilities, such as InstallUtil.exe, when installing a service application.</para>
      </summary>
    </member>
    <member name="M:System.ServiceProcess.ServiceProcessInstaller.CopyFromComponent(System.ComponentModel.IComponent)">
      <summary>
        <para>Implements the base class <see cref="M:System.Configuration.Install.ComponentInstaller.CopyFromComponent(System.ComponentModel.IComponent)" qualify="true" /> method with no <see cref="T:System.ServiceProcess.ServiceProcessInstaller" /> class-specific behavior.</para>
      </summary>
      <param name="comp">The <see cref="T:System.ComponentModel.IComponent" /> that represents the service process.</param>
    </member>
    <member name="M:System.ServiceProcess.ServiceProcessInstaller.Install(System.Collections.IDictionary)">
      <summary>
        <para>Writes service application information to the registry.
      This method is meant to be used by installation tools, which call the appropriate methods automatically.</para>
      </summary>
      <param name="stateSaver">An <see cref="T:System.Collections.IDictionary" /> that contains the context information associated with the installation.</param>
    </member>
    <member name="M:System.ServiceProcess.ServiceProcessInstaller.Rollback(System.Collections.IDictionary)">
      <summary>
        <para> Rolls back service application information
      written to the registry by the installation procedure. This method is meant to be used by installation tools, which process
      the appropriate methods automatically.</para>
      </summary>
      <param name="savedState">An <see cref="T:System.Collections.IDictionary" /> that contains the context information associated with the installation.</param>
    </member>
    <member name="P:System.ServiceProcess.ServiceProcessInstaller.HelpText">
      <summary>
        <para>Gets help text displayed for service installation options.</para>
      </summary>
    </member>
    <member name="P:System.ServiceProcess.ServiceProcessInstaller.Password">
      <summary>
        <para> Gets or sets the password associated with the user account under
      which the service application runs.</para>
      </summary>
    </member>
    <member name="P:System.ServiceProcess.ServiceProcessInstaller.Account">
      <summary>
        <para>Gets or sets the type of account under which to run 
      this service application.</para>
      </summary>
    </member>
    <member name="P:System.ServiceProcess.ServiceProcessInstaller.Username">
      <summary>
        <para> Gets or sets the user account under which
      the service application will run.</para>
      </summary>
    </member>
    <member name="T:System.ServiceProcess.ServiceStartMode">
      <summary>
        <para> Indicates the start mode of the service.</para>
      </summary>
    </member>
    <member name="F:System.ServiceProcess.ServiceStartMode.Manual">
      <summary>
        <para> Indicates that the service is started only manually, by a user (using the Service
      Control Manager) or by an application.</para>
      </summary>
    </member>
    <member name="F:System.ServiceProcess.ServiceStartMode.Automatic">
      <summary>
        <para>Indicates that the service is to be started (or was started) by the operating
      system, at system start-up. If an automatically started service depends on a
      manually started service, the manually started service is also started
      automatically at system startup.</para>
        <para>
        </para>
      </summary>
    </member>
    <member name="F:System.ServiceProcess.ServiceStartMode.Disabled">
      <summary>
        <para> Indicates that the service
      is disabled, so that it cannot be started by a user or application.</para>
      </summary>
    </member>
    <member name="T:System.ServiceProcess.ServiceType">
      <summary>
        <para>Represents the type of the service.</para>
      </summary>
    </member>
    <member name="F:System.ServiceProcess.ServiceType.Adapter">
      <summary>
        <para>A service for a hardware device that requires its own driver.</para>
        <para>
        </para>
      </summary>
    </member>
    <member name="F:System.ServiceProcess.ServiceType.FileSystemDriver">
      <summary>
        <para>A file system driver, which is also a Kernel device driver.</para>
      </summary>
    </member>
    <member name="F:System.ServiceProcess.ServiceType.InteractiveProcess">
      <summary>
        <para> A service
      that can communicate with the desktop.</para>
      </summary>
    </member>
    <member name="F:System.ServiceProcess.ServiceType.KernelDriver">
      <summary>
        <para>A Kernel device driver such as a hard disk or other 
      low-level hardware device driver.</para>
      </summary>
    </member>
    <member name="F:System.ServiceProcess.ServiceType.RecognizerDriver">
      <summary>
        <para>A file system driver used during startup to determine the file systems
      present on the system.</para>
        <para>
        </para>
      </summary>
    </member>
    <member name="F:System.ServiceProcess.ServiceType.Win32OwnProcess">
      <summary>
        <para>A Win32 program that can be started by the Service 
      Controller and that obeys the service control protocol. This type of Win32
      service runs in a process by itself.</para>
      </summary>
    </member>
    <member name="F:System.ServiceProcess.ServiceType.Win32ShareProcess">
      <summary>
        <para>A Win32 service that can share a process with other Win32 services.</para>
      </summary>
    </member>
    <member name="T:System.ServiceProcess.TimeoutException">
      <summary>
        <para>The exception that is thrown when a specified timeout has expired.</para>
      </summary>
    </member>
    <member name="M:System.ServiceProcess.TimeoutException.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.ServiceProcess.TimeoutException" /> class with no message text.</para>
      </summary>
    </member>
    <member name="M:System.ServiceProcess.TimeoutException.#ctor(System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.ServiceProcess.TimeoutException" /> class with the specified message text.</para>
      </summary>
      <param name="message">Text that describes the type or source of the exception.</param>
    </member>
    <member name="T:System.ServiceProcess.Design.ServiceInstallerDialogResult">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="F:System.ServiceProcess.Design.ServiceInstallerDialogResult.OK">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="F:System.ServiceProcess.Design.ServiceInstallerDialogResult.UseSystem">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="F:System.ServiceProcess.Design.ServiceInstallerDialogResult.Canceled">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="T:System.ServiceProcess.Design.ServiceInstallerDialog">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.ServiceProcess.Design.ServiceInstallerDialog.#ctor">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="M:System.ServiceProcess.Design.ServiceInstallerDialog.Main">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="P:System.ServiceProcess.Design.ServiceInstallerDialog.Password">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="P:System.ServiceProcess.Design.ServiceInstallerDialog.Result">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
    <member name="P:System.ServiceProcess.Design.ServiceInstallerDialog.Username">
      <summary>
        <para>[To be supplied.]</para>
      </summary>
    </member>
  </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\tools\x86\managed\urt\v1.0.3705\system.runtime.serialization.formatters.soap.xml ===
<?xml version="1.0"?>
<doc>
  <assembly>
    <name>System.Runtime.Serialization.Formatters.Soap</name>
  </assembly>
  <members>
    <member name="T:System.Runtime.Serialization.Formatters.Soap.SoapFormatter">
      <summary>
        <para> Serializes and deserializes an object, or an entire graph of
      connected objects, in SOAP format.</para>
      </summary>
    </member>
    <member name="M:System.Runtime.Serialization.Formatters.Soap.SoapFormatter.#ctor">
      <summary>
        <para> Initializes a new instance of the <see cref="T:System.Runtime.Serialization.Formatters.Soap.SoapFormatter" /> class with default property values.
   </para>
      </summary>
    </member>
    <member name="M:System.Runtime.Serialization.Formatters.Soap.SoapFormatter.#ctor(System.Runtime.Serialization.ISurrogateSelector,System.Runtime.Serialization.StreamingContext)">
      <summary>
        <para> Initializes a new instance of the <see cref="T:System.Runtime.Serialization.Formatters.Soap.SoapFormatter" /> class with the
   specified <see cref="T:System.Runtime.Serialization.ISurrogateSelector" /> and <see cref="T:System.Runtime.Serialization.StreamingContext" />.
   </para>
      </summary>
      <param name="selector">The <see cref="T:System.Runtime.Serialization.ISurrogateSelector" /> to use with the new instance of <see cref="T:System.Runtime.Serialization.Formatters.Soap.SoapFormatter" />. Can be <see langword="null" />.</param>
      <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that holds the source and destination of the serialization. If the <paramref name="context" /> parameter is <see langword="null" />, then the <see cref="P:System.Runtime.Serialization.Formatters.Soap.SoapFormatter.Context" /> defaults to <see cref="F:System.Runtime.Serialization.StreamingContextStates.CrossMachine" />.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Formatters.Soap.SoapFormatter.Deserialize(System.IO.Stream)">
      <summary>
        <para> Deserializes the data on the provided stream and reconstitutes the graph of objects.
      </para>
      </summary>
      <param name="serializationStream">The stream containing the data to deserialize. </param>
      <returns>
        <para> The top object of the deserialized graph (root).
      </para>
      </returns>
    </member>
    <member name="M:System.Runtime.Serialization.Formatters.Soap.SoapFormatter.Deserialize(System.IO.Stream,System.Runtime.Remoting.Messaging.HeaderHandler)">
      <summary>
        <para> Deserializes the stream into an object graph, with any
      headers in that stream being handled by the given <see cref="T:System.Runtime.Remoting.Messaging.HeaderHandler" />
      .
      </para>
      </summary>
      <param name="serializationStream">The stream containing the data to deserialize. </param>
      <param name="handler">Delegate to handle any headers found on the stream. Can be <see langword="null" />.</param>
      <returns>
        <para> The top object of the deserialized graph (root).
      </para>
      </returns>
    </member>
    <member name="M:System.Runtime.Serialization.Formatters.Soap.SoapFormatter.Serialize(System.IO.Stream,System.Object)">
      <summary>
        <para> Serializes an object, or graph of objects with the
      specified root to the given <see cref="T:System.IO.Stream" />.
      </para>
      </summary>
      <param name="serializationStream">The stream onto which the formatter puts the data to serialize. </param>
      <param name="graph">The object, or root of the object graph, to serialize. All child objects of this root object are automatically serialized. </param>
    </member>
    <member name="M:System.Runtime.Serialization.Formatters.Soap.SoapFormatter.Serialize(System.IO.Stream,System.Object,System.Runtime.Remoting.Messaging.Header[])">
      <summary>
        <para>Serializes an object, or graph of objects with the specified root to the
      given <see cref="T:System.IO.Stream" /> in the SOAP RPC
      (Remote Procedure Call) format.</para>
      </summary>
      <param name="serializationStream">The stream onto which the formatter puts the data to serialize. </param>
      <param name="graph">The object, or root of the object graph, to serialize. All child objects of this root object are automatically serialized.</param>
      <param name="headers">Remoting headers to include in the serialization. Can be <see langword="null" />.</param>
    </member>
    <member name="P:System.Runtime.Serialization.Formatters.Soap.SoapFormatter.TopObject">
      <summary>
        <para> Gets or sets the <see cref="T:System.Runtime.Serialization.Formatters.ISoapMessage" />
into which the SOAP top object is deserialized.</para>
      </summary>
    </member>
    <member name="P:System.Runtime.Serialization.Formatters.Soap.SoapFormatter.TypeFormat">
      <summary>
        <para>Gets or sets the format in which type descriptions are
 laid out in the serialized stream.</para>
      </summary>
    </member>
    <member name="P:System.Runtime.Serialization.Formatters.Soap.SoapFormatter.AssemblyFormat">
      <summary>
        <para> Gets or sets the format in which assembly names are serialized.
 </para>
      </summary>
    </member>
    <member name="P:System.Runtime.Serialization.Formatters.Soap.SoapFormatter.SurrogateSelector">
      <summary>
        <para>Gets or sets the <see cref="T:System.Runtime.Serialization.SurrogateSelector" /> that controls type substitution
 during serialization and deserialization.</para>
      </summary>
    </member>
    <member name="P:System.Runtime.Serialization.Formatters.Soap.SoapFormatter.Binder">
      <summary>
        <para>Gets or sets the <see cref="T:System.Runtime.Serialization.SerializationBinder" /> that 
   controls the binding of a serialized object to a type.</para>
      </summary>
    </member>
    <member name="P:System.Runtime.Serialization.Formatters.Soap.SoapFormatter.Context">
      <summary>
        <para>Gets or sets the <see cref="T:System.Runtime.Serialization.StreamingContext" />
used with this <see cref="T:System.Runtime.Serialization.Formatters.Soap.SoapFormatter" /> .</para>
      </summary>
    </member>
  </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\tools\x86\managed\urt\v1.0.3705\system.runtime.remoting.xml ===
<?xml version="1.0"?>
<doc>
  <assembly>
    <name>System.Runtime.Remoting</name>
  </assembly>
  <members>
    <member name="T:System.Runtime.Remoting.Channels.CommonTransportKeys">
      <summary>
        <para>The transport keys associated with common values used by the channels.</para>
      </summary>
    </member>
    <member name="F:System.Runtime.Remoting.Channels.CommonTransportKeys.IPAddress">
      <summary>
        <para>The transport key associated with the IP address from which an incoming request arrived.</para>
      </summary>
    </member>
    <member name="F:System.Runtime.Remoting.Channels.CommonTransportKeys.ConnectionId">
      <summary>
        <para>The transport key associated with a unique ID given to each incoming socket connection.</para>
      </summary>
    </member>
    <member name="F:System.Runtime.Remoting.Channels.CommonTransportKeys.RequestUri">
      <summary>
        <para>The transport key associated with the URI that made the request.</para>
      </summary>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.SocketHandler.ReadToByte(System.Byte,System.Runtime.Remoting.Channels.ValidateByteDelegate)">
    </member>
    <member name="T:System.Runtime.Remoting.Channels.Http.HttpChannel">
      <summary>
        <para>Provides an implementation for a sender-receiver channel
      that uses the HTTP protocol to transmit messages.</para>
      </summary>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.Http.HttpChannel.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Runtime.Remoting.Channels.Http.HttpChannel" /> class, activating the
   client and server channels with default values.</para>
      </summary>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.Http.HttpChannel.#ctor(System.Int32)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Runtime.Remoting.Channels.Http.HttpChannel" /> class, activating the
   underlying <see cref="T:System.Runtime.Remoting.Channels.Http.HttpServerChannel" /> on the specified port.</para>
      </summary>
      <param name="port">The port on which to activate the underlying <see cref="T:System.Runtime.Remoting.Channels.Http.HttpServerChannel" />.</param>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.Http.HttpChannel.#ctor(System.Collections.IDictionary,System.Runtime.Remoting.Channels.IClientChannelSinkProvider,System.Runtime.Remoting.Channels.IServerChannelSinkProvider)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Runtime.Remoting.Channels.Http.HttpChannel" /> class with the given
   channel properties and specified <see cref="T:System.Runtime.Remoting.Channels.IClientChannelSinkProvider" /> and <see cref="T:System.Runtime.Remoting.Channels.IServerChannelSinkProvider" />.</para>
      </summary>
      <param name="properties">The channel properties with which the new instance of <see cref="T:System.Runtime.Remoting.Channels.Http.HttpChannel" /> should be initialized.</param>
      <param name="clientSinkProvider">The <see cref="T:System.Runtime.Remoting.Channels.IClientChannelSinkProvider" /> that creates the client channel sinks for the underlying <see cref="T:System.Runtime.Remoting.Channels.Http.HttpClientChannel" /> through which remoting messages flow through.</param>
      <param name="serverSinkProvider">The <see cref="T:System.Runtime.Remoting.Channels.IServerChannelSinkProvider" /> that creates server channel sinks for the underlying <see cref="T:System.Runtime.Remoting.Channels.Http.HttpServerChannel" /> through which remoting messages flow through.</param>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.Http.HttpChannel.Parse(System.String,System.String@)">
      <summary>
        <para> Extracts the channel URI
      and the remote well known object URI from the specified URL.</para>
      </summary>
      <param name="url">The URL from which to extract the URI of the remote well known object.</param>
      <param name=" objectURI">When this method returns, contains a <see cref="T:System.String" /> that holds the URI of the remote well known object. This parameter is passed uninitialized.</param>
      <returns>
        <para>The URI of the current channel.</para>
      </returns>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.Http.HttpChannel.CreateMessageSink(System.String,System.Object,System.String@)">
      <summary>
        <para>Returns a channel message sink that delivers messages to the specified URL
      or channel data object. </para>
      </summary>
      <param name="url">The URL to which the new sink should deliver messages. Can be <see langword="null" />.</param>
      <param name="remoteChannelData">The channel data object of the remote host to which the new sink should deliver messages. Can be <see langword="null" />.</param>
      <param name="objectURI">When this method returns, contains a URI of the new channel message sink that delivers messages to the specified URL or channel data object. This parameter is passed uninitialized.</param>
      <returns>
        <para>A channel message sink that delivers messages to
      the specified URL or channel data object.</para>
      </returns>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.Http.HttpChannel.GetUrlsForUri(System.String)">
      <summary>
        <para> Returns an array of all the
      URLs for an object with the specified URI,
      hosted on the current <see cref="T:System.Runtime.Remoting.Channels.Http.HttpChannel" />.
      </para>
      </summary>
      <param name="objectURI">The URI of the object for which URL's are required. </param>
      <returns>
        <para>An array of the URLs for an object with the specified
      URI, hosted on the current <see cref="T:System.Runtime.Remoting.Channels.Http.HttpChannel" /> .</para>
      </returns>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.Http.HttpChannel.StartListening(System.Object)">
      <summary>
        <para> Instructs the current channel to start listening for requests.</para>
      </summary>
      <param name="data">Should always be <see langword="null" /> for <see cref="T:System.Runtime.Remoting.Channels.Http.HttpChannel" /> .</param>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.Http.HttpChannel.StopListening(System.Object)">
      <summary>
        <para> Instructs the
      current channel to stop listening for requests.</para>
      </summary>
      <param name="data">Should always be <see langword="null" /> for <see cref="T:System.Runtime.Remoting.Channels.Http.HttpChannel" /> .</param>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.Http.HttpChannel.AddHookChannelUri(System.String)">
      <summary>
        <para>Adds a URI on which the channel hook should listen.</para>
      </summary>
      <param name="channelUri">The channel URI on which the channel hook is listening.</param>
    </member>
    <member name="P:System.Runtime.Remoting.Channels.Http.HttpChannel.ChannelPriority">
      <summary>
        <para>Returns the priority of the current channel.</para>
      </summary>
    </member>
    <member name="P:System.Runtime.Remoting.Channels.Http.HttpChannel.ChannelName">
      <summary>
        <para>Gets the name of the current channel.</para>
      </summary>
    </member>
    <member name="P:System.Runtime.Remoting.Channels.Http.HttpChannel.ChannelData">
      <summary>
        <para> Gets the channel-specific data.</para>
      </summary>
    </member>
    <member name="P:System.Runtime.Remoting.Channels.Http.HttpChannel.ChannelScheme">
      <summary>
        <para>Gets the type of listener to hook into (for example "http").</para>
      </summary>
    </member>
    <member name="P:System.Runtime.Remoting.Channels.Http.HttpChannel.WantsToListen">
      <summary>
        <para>Gets a Boolean value indicating whether the current
      instance wants to be hooked into the
      outside listener service. </para>
      </summary>
    </member>
    <member name="P:System.Runtime.Remoting.Channels.Http.HttpChannel.ChannelSinkChain">
      <summary>
        <para>Gets the channel sink chain that the current channel is using.
      </para>
      </summary>
    </member>
    <member name="P:System.Runtime.Remoting.Channels.Http.HttpChannel.Properties">
      <summary>
        <para>Gets an <see cref="T:System.Collections.IDictionary" /> of the channel
   properties associated with the current channel.</para>
      </summary>
    </member>
    <member name="P:System.Runtime.Remoting.Channels.Http.HttpChannel.Item(System.Object)">
      <summary>
        <para>Gets or sets a channel property associated with the specified key.</para>
      </summary>
      <param name="key">The key with which the requested property is associated.</param>
    </member>
    <member name="P:System.Runtime.Remoting.Channels.Http.HttpChannel.Keys">
      <summary>
        <para> Gets an <see cref="T:System.Collections.ICollection" /> of keys with which
 the channel properties are associated.</para>
      </summary>
    </member>
    <member name="T:System.Runtime.Remoting.Channels.Http.HttpClientChannel">
      <summary>
        <para>Provides an implementation for a client channel that
      uses the HTTP protocol to transmit messages.</para>
      </summary>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.Http.HttpClientChannel.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Runtime.Remoting.Channels.Http.HttpClientChannel" /> class 
   with default values.</para>
      </summary>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.Http.HttpClientChannel.#ctor(System.String,System.Runtime.Remoting.Channels.IClientChannelSinkProvider)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Runtime.Remoting.Channels.Http.HttpClientChannel" /> class
 with the specified channel name and <see cref="T:System.Runtime.Remoting.Channels.IClientChannelSinkProvider" />.</para>
      </summary>
      <param name="name">The name of the new instance of the <see cref="T:System.Runtime.Remoting.Channels.Http.HttpClientChannel" /> .</param>
      <param name=" sinkProvider">The <see cref="T:System.Runtime.Remoting.Channels.IClientChannelSinkProvider" /> to use with the new instance of the <see cref="T:System.Runtime.Remoting.Channels.Http.HttpClientChannel" />.</param>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.Http.HttpClientChannel.#ctor(System.Collections.IDictionary,System.Runtime.Remoting.Channels.IClientChannelSinkProvider)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Runtime.Remoting.Channels.Http.HttpClientChannel" /> class with the specified
   channel properties and <see cref="T:System.Runtime.Remoting.Channels.IClientChannelSinkProvider" />.</para>
      </summary>
      <param name="properties">An <see cref="T:System.Collections.IDictionary" /> of the channel properties that hold the configuration information for the current channel.</param>
      <param name=" sinkProvider">The <see cref="T:System.Runtime.Remoting.Channels.IClientChannelSinkProvider" /> to use with the new instance of the <see cref="T:System.Runtime.Remoting.Channels.Http.HttpClientChannel" />.</param>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.Http.HttpClientChannel.Parse(System.String,System.String@)">
      <summary>
        <para> Extracts the channel
      URI and the remote well-known object URI from the specified URL.</para>
      </summary>
      <param name="url"> The URL from which to extract the URI of the remote well-known object.</param>
      <param name=" objectURI">When this method returns, contains a <see cref="T:System.String" /> that holds the URI of the remote well-known object. This parameter is passed uninitialized.</param>
      <returns>
        <para>The URI of the current channel, or <see langword="null " />if the specified URL is not an HTTP URL.</para>
      </returns>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.Http.HttpClientChannel.CreateMessageSink(System.String,System.Object,System.String@)">
      <summary>
        <para>Returns a channel message sink that delivers messages to the specified URL
      or channel data object. </para>
      </summary>
      <param name="url">The URL to which the new sink will deliver messages. Can be <see langword="null" /> .</param>
      <param name="remoteChannelData">The channel data object of the remote host to which the new sink will deliver messages. Can be <see langword="null" /> .</param>
      <param name="objectURI">When this method returns, contains a URI of the new channel message sink that delivers messages to the specified URL or channel data object. This parameter is passed uninitialized.</param>
      <returns>
        <para>A channel message sink that delivers messages to
      the specified URL or channel data object.</para>
      </returns>
    </member>
    <member name="P:System.Runtime.Remoting.Channels.Http.HttpClientChannel.ChannelPriority">
      <summary>
        <para>Returns the priority of the current channel.</para>
      </summary>
    </member>
    <member name="P:System.Runtime.Remoting.Channels.Http.HttpClientChannel.ChannelName">
      <summary>
        <para>Gets the name of the current channel.</para>
      </summary>
    </member>
    <member name="P:System.Runtime.Remoting.Channels.Http.HttpClientChannel.Item(System.Object)">
      <summary>
        <para>Gets or sets a channel property associated with the specified key.</para>
      </summary>
      <param name="key"> The key the requested property is associated with.</param>
    </member>
    <member name="P:System.Runtime.Remoting.Channels.Http.HttpClientChannel.Keys">
      <summary>
        <para> Gets an <see cref="T:System.Collections.ICollection" /> of keys that the
   channel properties are associated with.</para>
      </summary>
    </member>
    <member name="T:System.Runtime.Remoting.Channels.Http.HttpServerChannel">
      <summary>
        <para>Provides an implementation for a server channel that uses the HTTP protocol
      to transmit messages.</para>
      </summary>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.Http.HttpServerChannel.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Runtime.Remoting.Channels.Http.HttpServerChannel" /> class with default values.</para>
      </summary>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.Http.HttpServerChannel.#ctor(System.Int32)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Runtime.Remoting.Channels.Http.HttpServerChannel" /> class at the specified port.</para>
      </summary>
      <param name="port">The port at which to activate the new instance of <see cref="T:System.Runtime.Remoting.Channels.Http.HttpServerChannel" />.</param>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.Http.HttpServerChannel.#ctor(System.String,System.Int32)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Runtime.Remoting.Channels.Http.HttpServerChannel" /> class with the given name
 at the specified port.</para>
      </summary>
      <param name="name">The name of the new instance of the <see cref="T:System.Runtime.Remoting.Channels.Http.HttpServerChannel" />.</param>
      <param name=" port">The port at which to activate the new instance of the <see cref="T:System.Runtime.Remoting.Channels.Http.HttpServerChannel" />.</param>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.Http.HttpServerChannel.#ctor(System.String,System.Int32,System.Runtime.Remoting.Channels.IServerChannelSinkProvider)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Runtime.Remoting.Channels.Http.HttpServerChannel" /> class at the specified
   port with the given name and <see cref="T:System.Runtime.Remoting.Channels.IServerChannelSinkProvider" /> .</para>
      </summary>
      <param name="name">The name of the new instance of the <see cref="T:System.Runtime.Remoting.Channels.Http.HttpServerChannel" />.</param>
      <param name="port">The port at which to activate the new instance of the <see cref="T:System.Runtime.Remoting.Channels.Http.HttpServerChannel" />.</param>
      <param name=" sinkProvider">The <see cref="T:System.Runtime.Remoting.Channels.IServerChannelSinkProvider" /> to use with the new instance of <see cref="T:System.Runtime.Remoting.Channels.Http.HttpServerChannel" />.</param>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.Http.HttpServerChannel.#ctor(System.Collections.IDictionary,System.Runtime.Remoting.Channels.IServerChannelSinkProvider)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Runtime.Remoting.Channels.Http.HttpServerChannel" /> class with the specified
   channel properties and the provided <see cref="T:System.Runtime.Remoting.Channels.IServerChannelSinkProvider" /> .</para>
      </summary>
      <param name="properties">An <see cref="T:System.Collections.IDictionary" /> of the channel properties that hold the configuration information for the current channel.</param>
      <param name=" sinkProvider">The <see cref="T:System.Runtime.Remoting.Channels.IServerChannelSinkProvider" /> to use with the new instance of the <see cref="T:System.Runtime.Remoting.Channels.Http.HttpServerChannel" /> .</param>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.Http.HttpServerChannel.Parse(System.String,System.String@)">
      <summary>
        <para> Extracts the channel
      URI and the remote well-known object URI from the specified URL.</para>
      </summary>
      <param name="url">The URL from which to extract the URIs.</param>
      <param name=" objectURI">When this method returns, contains a <see cref="T:System.String" /> that holds the URI of the remote well-known object. This parameter is passed uninitialized.</param>
      <returns>
        <para>The channel URI.</para>
      </returns>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.Http.HttpServerChannel.GetChannelUri">
      <summary>
        <para>Returns the URI of the current channel.</para>
      </summary>
      <returns>
        <para>The URI of the current channel.</para>
      </returns>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.Http.HttpServerChannel.GetUrlsForUri(System.String)">
      <summary>
        <para> Returns an array
      of all the URLs for an object with the specified URI,
      hosted on the current <see cref="T:System.Runtime.Remoting.Channels.Http.HttpChannel" />.
      </para>
      </summary>
      <param name="objectUri">The URI of the object for which URLs are required. </param>
      <returns>
        <para> An array of the URLs for an object
      with the specified URI, hosted on the current <see cref="T:System.Runtime.Remoting.Channels.Http.HttpChannel" /> .</para>
      </returns>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.Http.HttpServerChannel.StartListening(System.Object)">
      <summary>
        <para> Instructs the current channel to start listening for requests.</para>
      </summary>
      <param name="data">Should always be <see langword="null" /> for <see cref="T:System.Runtime.Remoting.Channels.Http.HttpChannel" /> .</param>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.Http.HttpServerChannel.StopListening(System.Object)">
      <summary>
        <para> Instructs the
      current channel to stop listening for requests.</para>
      </summary>
      <param name="data">Should always be <see langword="null" /> for <see cref="T:System.Runtime.Remoting.Channels.Http.HttpChannel" /> .</param>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.Http.HttpServerChannel.AddHookChannelUri(System.String)">
      <summary>
        <para>Adds a URI on which the channel hook must listen.</para>
      </summary>
      <param name="channelUri">A URI on which the channel hook must listen.</param>
    </member>
    <member name="P:System.Runtime.Remoting.Channels.Http.HttpServerChannel.ChannelPriority">
      <summary>
        <para>Gets the priority of the channel.</para>
      </summary>
    </member>
    <member name="P:System.Runtime.Remoting.Channels.Http.HttpServerChannel.ChannelName">
      <summary>
        <para>Gets the name of the current channel.</para>
      </summary>
    </member>
    <member name="P:System.Runtime.Remoting.Channels.Http.HttpServerChannel.ChannelData">
      <summary>
        <para>
      Gets the channel specific data.</para>
      </summary>
    </member>
    <member name="P:System.Runtime.Remoting.Channels.Http.HttpServerChannel.ChannelScheme">
      <summary>
 Gets the type of listener to hook into (for example "http").
</summary>
    </member>
    <member name="P:System.Runtime.Remoting.Channels.Http.HttpServerChannel.WantsToListen">
      <summary>
        <para>Gets a Boolean value indicating whether <see cref="T:System.Runtime.Remoting.Channels.IChannelReceiverHook" /> wants to be hooked into the
   outside listener service. </para>
      </summary>
    </member>
    <member name="P:System.Runtime.Remoting.Channels.Http.HttpServerChannel.ChannelSinkChain">
      <summary>
        <para>Gets the channel sink chain that the current channel is using.
      </para>
      </summary>
    </member>
    <member name="P:System.Runtime.Remoting.Channels.Http.HttpServerChannel.Item(System.Object)">
      <summary>
        <para>Gets or sets a channel property associated with the specified key.</para>
      </summary>
      <param name="key"> The key the requested property is associated with.</param>
    </member>
    <member name="P:System.Runtime.Remoting.Channels.Http.HttpServerChannel.Keys">
      <summary>
        <para> Gets an <see cref="T:System.Collections.ICollection" /> of keys the
   channel properties are associated with.</para>
      </summary>
    </member>
    <member name="T:System.Runtime.Remoting.Channels.Http.HttpRemotingHandler">
    </member>
    <member name="M:System.Runtime.Remoting.Channels.Http.HttpRemotingHandler.#ctor">
    </member>
    <member name="M:System.Runtime.Remoting.Channels.Http.HttpRemotingHandler.ProcessRequest(System.Web.HttpContext)">
    </member>
    <member name="P:System.Runtime.Remoting.Channels.Http.HttpRemotingHandler.IsReusable">
    </member>
    <member name="T:System.Runtime.Remoting.Channels.Http.HttpRemotingHandlerFactory">
    </member>
    <member name="M:System.Runtime.Remoting.Channels.Http.HttpRemotingHandlerFactory.GetHandler(System.Web.HttpContext,System.String,System.String,System.String)">
    </member>
    <member name="M:System.Runtime.Remoting.Channels.Http.HttpRemotingHandlerFactory.ReleaseHandler(System.Web.IHttpHandler)">
    </member>
    <member name="T:System.Runtime.Remoting.Channels.Tcp.TcpChannel">
      <summary>
        <para>Provides an implementation for a sender-receiver channel
      that uses the TCP protocol to transmit messages.</para>
      </summary>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.Tcp.TcpChannel.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Runtime.Remoting.Channels.Tcp.TcpChannel" /> class, activating only a
   client channel, and not a server channel.</para>
      </summary>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.Tcp.TcpChannel.#ctor(System.Int32)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Runtime.Remoting.Channels.Tcp.TcpChannel" /> class, activating a server
   channel at the specified port.</para>
      </summary>
      <param name="port">The port number at which to activate the TCP server channel.</param>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.Tcp.TcpChannel.#ctor(System.Collections.IDictionary,System.Runtime.Remoting.Channels.IClientChannelSinkProvider,System.Runtime.Remoting.Channels.IServerChannelSinkProvider)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Runtime.Remoting.Channels.Tcp.TcpChannel" /> class with the provided
   channel properties, a <see cref="T:System.Runtime.Remoting.Channels.IClientChannelSinkProvider" /> and
   a <see cref="T:System.Runtime.Remoting.Channels.IServerChannelSinkProvider" />.</para>
      </summary>
      <param name="properties">An <see cref="T:System.Collections.IDictionary" /> of the channel properties which hold the configuration information for the current channel.</param>
      <param name=" clientSinkProvider">The <see cref="T:System.Runtime.Remoting.Channels.IClientChannelSinkProvider" /> that creates the client channel sinks for the underlying <see cref="T:System.Runtime.Remoting.Channels.Tcp.TcpClientChannel" /> through which remoting messages flow through.</param>
      <param name=" serverSinkProvider">The <see cref="T:System.Runtime.Remoting.Channels.IServerChannelSinkProvider" /> that creates server channel sinks for the underlying <see cref="T:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel" /> through which remoting messages flow through.</param>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.Tcp.TcpChannel.Parse(System.String,System.String@)">
      <summary>
        <para> Extracts the channel URI
      and the remote well known object URI from the specified URL.</para>
      </summary>
      <param name="url">The URL from which to extract the URI of the remote well known object.</param>
      <param name=" objectURI">When this method returns, contains a <see cref="T:System.String" /> that holds the URI of the remote well known object. This parameter is passed uninitialized.</param>
      <returns>
        <para>The URI of the current channel.</para>
      </returns>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.Tcp.TcpChannel.CreateMessageSink(System.String,System.Object,System.String@)">
      <summary>
        <para>Returns a channel message sink that delivers messages to the specified URL
      or channel data object. </para>
      </summary>
      <param name="url">The URL to which the new sink should deliver messages. Can be <see langword="null" />.</param>
      <param name="remoteChannelData">The channel data object of the remote host to which the new sink should deliver messages. Can be <see langword="null" />.</param>
      <param name="objectURI">When this method returns, contains a URI of the new channel message sink that delivers messages to the specified URL or channel data object. This parameter is passed uninitialized.</param>
      <returns>
        <para>A channel message sink, that delivers messages to
      the specified URL or channel data object.</para>
      </returns>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.Tcp.TcpChannel.GetUrlsForUri(System.String)">
      <summary>
        <para> Returns an array
      of all the URLs for an object with the specified URI,
      hosted on the current <see cref="T:System.Runtime.Remoting.Channels.Tcp.TcpChannel" />.
      </para>
      </summary>
      <param name="objectURI">The URI of the object for which URLs are required. </param>
      <returns>
        <para> An array of the URLs for an object
      with the specified URI, hosted on the current <see cref="T:System.Runtime.Remoting.Channels.Tcp.TcpChannel" />.
      </para>
      </returns>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.Tcp.TcpChannel.StartListening(System.Object)">
      <summary>
        <para> Instructs the current channel to start listening for requests.</para>
      </summary>
      <param name="data">Optional initialization information.</param>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.Tcp.TcpChannel.StopListening(System.Object)">
      <summary>
        <para> Instructs the
 current channel to stop listening for requests.</para>
      </summary>
      <param name="data">Optional state information for the channel.</param>
    </member>
    <member name="P:System.Runtime.Remoting.Channels.Tcp.TcpChannel.ChannelPriority">
      <summary>
        <para>Returns the priority of the current channel.</para>
      </summary>
    </member>
    <member name="P:System.Runtime.Remoting.Channels.Tcp.TcpChannel.ChannelName">
      <summary>
        <para>Gets the name of the current channel.</para>
      </summary>
    </member>
    <member name="P:System.Runtime.Remoting.Channels.Tcp.TcpChannel.ChannelData">
      <summary>
        <para> Gets the channel-specific data.</para>
      </summary>
    </member>
    <member name="T:System.Runtime.Remoting.Channels.Tcp.TcpClientChannel">
      <summary>
        <para>Provides an implementation for a client channel that
      uses the TCP protocol to transmit messages.</para>
      </summary>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.Tcp.TcpClientChannel.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Runtime.Remoting.Channels.Tcp.TcpClientChannel" /> class with default values.</para>
      </summary>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.Tcp.TcpClientChannel.#ctor(System.String,System.Runtime.Remoting.Channels.IClientChannelSinkProvider)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Runtime.Remoting.Channels.Tcp.TcpClientChannel" /> class with the provided
   name and <see cref="T:System.Runtime.Remoting.Channels.IClientChannelSinkProvider" /> .</para>
      </summary>
      <param name="name">The name of the new instance of the <see cref="T:System.Runtime.Remoting.Channels.Tcp.TcpClientChannel" /> .</param>
      <param name=" sinkProvider">The <see cref="T:System.Runtime.Remoting.Channels.IClientChannelSinkProvider" /> to use with the new instance of the <see cref="T:System.Runtime.Remoting.Channels.Tcp.TcpClientChannel" />.</param>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.Tcp.TcpClientChannel.#ctor(System.Collections.IDictionary,System.Runtime.Remoting.Channels.IClientChannelSinkProvider)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Runtime.Remoting.Channels.Tcp.TcpClientChannel" /> class with the specified
   channel properties and <see cref="T:System.Runtime.Remoting.Channels.IClientChannelSinkProvider" /> .</para>
      </summary>
      <param name="properties">An <see cref="T:System.Collections.IDictionary" /> of the channel properties that hold the configuration information for the current channel.</param>
      <param name=" sinkProvider">The <see cref="T:System.Runtime.Remoting.Channels.IClientChannelSinkProvider" /> to use with the new instance of the <see cref="T:System.Runtime.Remoting.Channels.Tcp.TcpClientChannel" />.</param>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.Tcp.TcpClientChannel.Parse(System.String,System.String@)">
      <summary>
        <para> Extracts the channel
      URI and the remote well-known object URI from the specified URL.</para>
      </summary>
      <param name="url">The URL from which to extract the URIs.</param>
      <param name=" objectURI">When this method returns, contains a <see cref="T:System.String" /> that holds the URI of the remote well-known object. This parameter is passed uninitialized.</param>
      <returns>
        <para>The channel URI.</para>
      </returns>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.Tcp.TcpClientChannel.CreateMessageSink(System.String,System.Object,System.String@)">
      <summary>
        <para>Returns a channel message sink that delivers messages to the specified URL
      or channel data object. </para>
      </summary>
      <param name="url">The URL to which the new sink will deliver messages. Can be <see langword="null" /> .</param>
      <param name="remoteChannelData">The channel data object of the remote host to which the new sink will deliver messages. Can be <see langword="null" />.</param>
      <param name="objectURI">When this method returns, contains a URI of the new channel message sink that delivers messages to the specified URL or channel data object. This parameter is passed uninitialized.</param>
      <returns>
        <para>A channel message sink, that delivers messages to
      the specified URL or channel data object.</para>
      </returns>
    </member>
    <member name="P:System.Runtime.Remoting.Channels.Tcp.TcpClientChannel.ChannelPriority">
      <summary>
        <para>Returns the priority of the current channel.</para>
      </summary>
    </member>
    <member name="P:System.Runtime.Remoting.Channels.Tcp.TcpClientChannel.ChannelName">
      <summary>
        <para>Gets the name of the current channel.</para>
      </summary>
    </member>
    <member name="T:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel">
      <summary>
        <para>Provides an implementation for a server channel that
      uses the TCP protocol to transmit messages.</para>
      </summary>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.#ctor(System.Int32)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel" /> class at the specified port.</para>
      </summary>
      <param name="port">The port at which to activate the new instance of <see cref="T:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel" />.</param>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.#ctor(System.String,System.Int32)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel" /> class
   with the given name at the specified port.</para>
      </summary>
      <param name="name">The name of the new instance of <see cref="T:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel" />.</param>
      <param name=" port">The port at which to activate the new instance of <see cref="T:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel" />.</param>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.#ctor(System.String,System.Int32,System.Runtime.Remoting.Channels.IServerChannelSinkProvider)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel" /> class at the specified
   port with the given name and <see cref="T:System.Runtime.Remoting.Channels.IServerChannelSinkProvider" /> .</para>
      </summary>
      <param name="name">The name of the new instance of the <see cref="T:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel" />.</param>
      <param name=" port">The port at which to activate the new instance of the <see cref="T:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel" />.</param>
      <param name=" sinkProvider">The <see cref="T:System.Runtime.Remoting.Channels.IServerChannelSinkProvider" /> to use with the new instance of the <see cref="T:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel" /> .</param>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.#ctor(System.Collections.IDictionary,System.Runtime.Remoting.Channels.IServerChannelSinkProvider)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel" /> class with the specified
   channel properties and the provided <see cref="T:System.Runtime.Remoting.Channels.IServerChannelSinkProvider" /> .</para>
      </summary>
      <param name="properties">An <see cref="T:System.Collections.IDictionary" /> of the channel properties that hold the configuration information for the current channel.</param>
      <param name=" sinkProvider">The <see cref="T:System.Runtime.Remoting.Channels.IServerChannelSinkProvider" /> to use with the new instance of the <see cref="T:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel" /> .</param>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.Parse(System.String,System.String@)">
      <summary>
        <para> Extracts the channel
      URI and the remote well-known object URI from the specified URL.</para>
      </summary>
      <param name="url"> The URL from which to extract the URI of the remote well-known object.</param>
      <param name=" objectURI">When this method returns, contains a <see cref="T:System.String" /> that holds the URI of the remote well-known object. This parameter is passed uninitialized.</param>
      <returns>
        <para>The URI of the current channel.</para>
      </returns>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.GetChannelUri">
      <summary>
        <para>Returns the URI of the current channel.</para>
      </summary>
      <returns>
        <para>The URI of the current channel.</para>
      </returns>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.GetUrlsForUri(System.String)">
      <summary>
        <para> Returns an array of all the
      URLs for an object with the specified URI,
      hosted on the current <see cref="T:System.Runtime.Remoting.Channels.Tcp.TcpChannel" />.
      </para>
      </summary>
      <param name="objectUri">The URI of the object for which URLs are required. </param>
      <returns>
        <para>An array of the URLs for an object with the specified
      URI, hosted on the current <see cref="T:System.Runtime.Remoting.Channels.Tcp.TcpChannel" />.
      </para>
      </returns>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.StartListening(System.Object)">
      <summary>
        <para>
      Instructs the current channel to start listening for requests.</para>
      </summary>
      <param name="data">Optional ininitialization information.</param>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.StopListening(System.Object)">
      <summary>
        <para> Instructs the
 current channel to stop listening for requests.</para>
      </summary>
      <param name="data">Optional state information for the channel.</param>
    </member>
    <member name="P:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.ChannelPriority">
      <summary>
        <para>Returns the priority of the current channel.</para>
      </summary>
    </member>
    <member name="P:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.ChannelName">
      <summary>
        <para>Gets the name of the current channel.</para>
      </summary>
    </member>
    <member name="P:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.ChannelData">
      <summary>
        <para>
      Gets the channel specific data.</para>
      </summary>
    </member>
    <member name="T:System.Runtime.Remoting.Channels.BinaryClientFormatterSinkProvider">
      <summary>
        <para> Provides the implementation for the binary client
      formatter sink provider.</para>
      </summary>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.BinaryClientFormatterSinkProvider.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Runtime.Remoting.Channels.BinaryClientFormatterSinkProvider" /> class with default values.</para>
      </summary>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.BinaryClientFormatterSinkProvider.#ctor(System.Collections.IDictionary,System.Collections.ICollection)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Runtime.Remoting.Channels.BinaryClientFormatterSinkProvider" /> class with the given
 properties and provider data.</para>
      </summary>
      <param name="properties">An <see cref="T:System.Collections.IDictionary" /> of configuration properties to use with the new instance of <see cref="T:System.Runtime.Remoting.Channels.BinaryClientFormatterSinkProvider" />.</param>
      <param name=" providerData">An <see cref="T:System.Collections.ICollection" /> of <see cref="T:System.Runtime.Remoting.Channels.SinkProviderData" /> objects containing provider data to use with the new instance of <see cref="T:System.Runtime.Remoting.Channels.BinaryClientFormatterSinkProvider" />.</param>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.BinaryClientFormatterSinkProvider.CreateSink(System.Runtime.Remoting.Channels.IChannelSender,System.String,System.Object)">
      <summary>
        <para> Creates
      a sink chain.
      </para>
      </summary>
      <param name="channel">Channel for which this sink chain is being constructed. </param>
      <param name="url">URL of object to connect to or the channel URI for the target object. </param>
      <param name="remoteChannelData">
        <para>A channel data object describing a channel on the remote server. </para>
      </param>
      <returns>
        <para> The first sink of the newly formed channel sink chain,
      or <see langword="null" /> indicating that this provider will not or cannot provide a connection for this endpoint.
      </para>
      </returns>
    </member>
    <member name="P:System.Runtime.Remoting.Channels.BinaryClientFormatterSinkProvider.Next">
      <summary>
        <para>Gets or sets the next <see cref="T:System.Runtime.Remoting.Channels.IClientChannelSinkProvider" /> in 
   the sink provider chain.</para>
      </summary>
    </member>
    <member name="T:System.Runtime.Remoting.Channels.BinaryClientFormatterSink">
      <summary>
        <para> Provides the implementation for a client formatter
      sink that uses the <see cref="T:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter" /> .</para>
      </summary>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.BinaryClientFormatterSink.#ctor(System.Runtime.Remoting.Channels.IClientChannelSink)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Runtime.Remoting.Channels.BinaryClientFormatterSink" /> class.</para>
      </summary>
      <param name="nextSink">The next <see cref="T:System.Runtime.Remoting.Channels.IClientChannelSink" /> in the sink chain.</param>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.BinaryClientFormatterSink.SyncProcessMessage(System.Runtime.Remoting.Messaging.IMessage)">
      <summary>
        <para>Synchronously processes the provided message.</para>
      </summary>
      <param name="msg">The message to process.</param>
      <returns>
        <para>The response to the processed message.</para>
      </returns>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.BinaryClientFormatterSink.AsyncProcessMessage(System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Messaging.IMessageSink)">
      <summary>
        <para>Asynchronously processes the provided message.</para>
      </summary>
      <param name="msg">The message to process.</param>
      <param name=" replySink">The sink that will receive the reply to the provided message.</param>
      <returns>
        <para>An <see cref="T:System.Runtime.Remoting.Messaging.IMessageCtrl" /> that provides a way to
   control the asynchronous message after it has been dispatched.</para>
      </returns>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.BinaryClientFormatterSink.ProcessMessage(System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders,System.IO.Stream,System.Runtime.Remoting.Channels.ITransportHeaders@,System.IO.Stream@)">
      <summary>
        <para> Requests message processing from the current sink.</para>
      </summary>
      <param name="msg">The message to process.</param>
      <param name="requestHeaders">The headers to add to the outgoing message heading to the server.</param>
      <param name="requestStream">The stream headed toward the transport sink.</param>
      <param name="responseHeaders">When this method returns, contains an <see cref="T:System.Runtime.Remoting.Channels.ITransportHeaders" /> interface that holds the headers that the server returned. This parameter is passed uninitialized.</param>
      <param name="responseStream">When this method returns, contains a <see cref="T:System.IO.Stream" /> coming back from the transport sink. This parameter is passed uninitialized.</param>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.BinaryClientFormatterSink.AsyncProcessRequest(System.Runtime.Remoting.Channels.IClientChannelSinkStack,System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders,System.IO.Stream)">
      <summary>
        <para>Requests asynchronous processing of a method call on the current sink.</para>
      </summary>
      <param name="sinkStack">A stack of channel sinks that called the current sink.</param>
      <param name=" msg">The message to process.</param>
      <param name=" headers">The headers to add to the outgoing message heading to the server.</param>
      <param name=" stream">The stream headed toward the transport sink.</param>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.BinaryClientFormatterSink.AsyncProcessResponse(System.Runtime.Remoting.Channels.IClientResponseChannelSinkStack,System.Object,System.Runtime.Remoting.Channels.ITransportHeaders,System.IO.Stream)">
      <summary>
        <para>Requests asynchronous processing of a response to a method call on the
      current sink.</para>
      </summary>
      <param name="sinkStack">A stack of sinks that called the current sink.</param>
      <param name=" state">Information associated with the current sink, generated on the request side, and needed on the response side.</param>
      <param name=" headers">The headers retrieved from the server response stream.</param>
      <param name=" stream">The stream coming back from the transport sink.</param>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.BinaryClientFormatterSink.GetRequestStream(System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders)">
      <summary>
        <para>Returns the <see cref="T:System.IO.Stream" /> onto which
   the provided message is to be serialized.</para>
      </summary>
      <param name="msg">The <see cref="T:System.Runtime.Remoting.Messaging.IMethodCallMessage" /> containing details about the method call.</param>
      <param name="headers">The headers to add to the outgoing message heading to the server.</param>
      <returns>
        <para>The <see cref="T:System.IO.Stream" /> onto which the provided
   message is to be serialized.</para>
      </returns>
    </member>
    <member name="P:System.Runtime.Remoting.Channels.BinaryClientFormatterSink.NextSink">
      <summary>
        <para>Gets the next <see cref="T:System.Runtime.Remoting.Messaging.IMessageSink" /> in the sink chain.</para>
      </summary>
    </member>
    <member name="P:System.Runtime.Remoting.Channels.BinaryClientFormatterSink.NextChannelSink">
      <summary>
        <para>Gets the next <see cref="T:System.Runtime.Remoting.Channels.IClientChannelSink" /> in the sink chain.</para>
      </summary>
    </member>
    <member name="P:System.Runtime.Remoting.Channels.BinaryClientFormatterSink.Properties">
      <summary>
        <para>Gets an <see cref="T:System.Collections.IDictionary" /> of properties for the
   current channel sink.</para>
      </summary>
    </member>
    <member name="T:System.Runtime.Remoting.Channels.BinaryServerFormatterSinkProvider">
      <summary>
        <para> Provides the implementation for the server formatter channel
      sink provider that uses the <see cref="T:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter" />.</para>
      </summary>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.BinaryServerFormatterSinkProvider.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Runtime.Remoting.Channels.BinaryServerFormatterSinkProvider" /> class with default values.</para>
      </summary>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.BinaryServerFormatterSinkProvider.#ctor(System.Collections.IDictionary,System.Collections.ICollection)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Runtime.Remoting.Channels.BinaryServerFormatterSinkProvider" /> class with the provided
 properties and provider data.</para>
      </summary>
      <param name="properties">An <see cref="T:System.Collections.IDictionary" /> of configuration properties to use with the new instance of <see cref="T:System.Runtime.Remoting.Channels.BinaryServerFormatterSinkProvider" />.</param>
      <param name="providerData">An <see cref="T:System.Collections.ICollection" /> of <see cref="T:System.Runtime.Remoting.Channels.SinkProviderData" /> to use with the new instance of <see cref="T:System.Runtime.Remoting.Channels.BinaryServerFormatterSinkProvider" />.</param>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.BinaryServerFormatterSinkProvider.GetChannelData(System.Runtime.Remoting.Channels.IChannelDataStore)">
      <summary>
        <para> Returns the channel data for the channel that the
      current sink is associated with.</para>
      </summary>
      <param name="channelData">An <see cref="T:System.Runtime.Remoting.Channels.IChannelDataStore" /> object in which the channel data is to be returned.</param>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.BinaryServerFormatterSinkProvider.CreateSink(System.Runtime.Remoting.Channels.IChannelReceiver)">
      <summary>
        <para>Creates a sink chain.
 </para>
      </summary>
      <param name="channel">The channel for which to create the channel sink chain.</param>
      <returns>
        <para> The first sink of the
 newly formed channel sink chain. </para>
      </returns>
    </member>
    <member name="P:System.Runtime.Remoting.Channels.BinaryServerFormatterSinkProvider.Next">
      <summary>
        <para>Gets or sets the next <see cref="T:System.Runtime.Remoting.Channels.IServerChannelSinkProvider" /> in the sink provider chain.</para>
      </summary>
    </member>
    <member name="T:System.Runtime.Remoting.Channels.BinaryServerFormatterSink">
      <summary>
        <para> Provides the implementation for a server formatter
      sink that uses the <see cref="T:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter" /> .</para>
      </summary>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.BinaryServerFormatterSink.#ctor(System.Runtime.Remoting.Channels.BinaryServerFormatterSink.Protocol,System.Runtime.Remoting.Channels.IServerChannelSink,System.Runtime.Remoting.Channels.IChannelReceiver)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Runtime.Remoting.Channels.BinaryServerFormatterSink" /> class.</para>
      </summary>
      <param name="protocol">The <see cref="T:System.Runtime.Remoting.Channels.BinaryServerFormatterSink.Protocol" /> that will be used with the current instance of <see cref="T:System.Runtime.Remoting.Channels.BinaryServerFormatterSink" /> .</param>
      <param name=" nextSink">The next sink in the channel sink chain.</param>
      <param name=" receiver">Indicates the channel that will receive the messages serialized by the new instance of <see cref="T:System.Runtime.Remoting.Channels.BinaryServerFormatterSink" />.</param>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.BinaryServerFormatterSink.ProcessMessage(System.Runtime.Remoting.Channels.IServerChannelSinkStack,System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders,System.IO.Stream,System.Runtime.Remoting.Messaging.IMessage@,System.Runtime.Remoting.Channels.ITransportHeaders@,System.IO.Stream@)">
      <summary>
        <para> Requests message processing from the current sink.</para>
      </summary>
      <param name="sinkStack">A stack of channel sinks that called the current sink.</param>
      <param name="requestMsg">The message that contains the request.</param>
      <param name="requestHeaders">Headers retrieved from the incoming message from the client.</param>
      <param name="requestStream">The stream that needs to be processed and passed on to the deserialization sink.</param>
      <param name="responseMsg">When this method returns, contains an <see cref="T:System.Runtime.Remoting.Messaging.IMessage" /> that holds the response message. This parameter is passed uninitialized.</param>
      <param name="responseHeaders">When this method returns, contains an <see cref="T:System.Runtime.Remoting.Channels.ITransportHeaders" /> that holds the headers to add to return message heading to the client. This parameter is passed uninitialized. </param>
      <param name="responseStream">When this method returns, contains a <see cref="T:System.IO.Stream" /> that is heading to the transport sink. This parameter is passed uninitialized. </param>
      <returns>
        <para>A <see cref="T:System.Runtime.Remoting.Channels.ServerProcessing" /> status value that
   provides information about how the message was processed.</para>
      </returns>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.BinaryServerFormatterSink.AsyncProcessResponse(System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack,System.Object,System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders,System.IO.Stream)">
      <summary>
        <para> Requests processing of the response from a method call
      sent asynchronously.</para>
      </summary>
      <param name="sinkStack">A stack of sinks leading back to the server transport sink.</param>
      <param name="state">Information associated with the current sink, generated on the request side, and needed on the response side.</param>
      <param name="msg">The response message.</param>
      <param name="headers">The headers to add to the return message heading to the client.</param>
      <param name="stream">The stream heading back to the transport sink.</param>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.BinaryServerFormatterSink.GetResponseStream(System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack,System.Object,System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders)">
      <summary>
        <para>Returns the <see cref="T:System.IO.Stream" /> onto which the provided
 response message is to be serialized.</para>
      </summary>
      <param name="sinkStack">A stack of sinks leading back to the server transport sink.</param>
      <param name=" state">Information associated with the current sink, generated on the request side, and needed on the response side.</param>
      <param name=" msg"> The response message to serialize. </param>
      <param name=" headers">The headers to put in the response stream to the client.</param>
      <returns>
        <para>The <see cref="T:System.IO.Stream" /> onto which the provided
 response message is to be serialized.</para>
      </returns>
    </member>
    <member name="P:System.Runtime.Remoting.Channels.BinaryServerFormatterSink.NextChannelSink">
      <summary>
        <para>Gets the next <see cref="T:System.Runtime.Remoting.Channels.IServerChannelSink" /> in the sink chain.</para>
      </summary>
    </member>
    <member name="P:System.Runtime.Remoting.Channels.BinaryServerFormatterSink.Properties">
      <summary>
        <para>Gets an <see cref="T:System.Collections.IDictionary" /> of properties for the
   current channel sink.</para>
      </summary>
    </member>
    <member name="F:System.Runtime.Remoting.Channels.BinaryServerFormatterSink.Protocol.Http">
      <summary>
        <para> Indicates that the current formatter sink is using the HTTP
 protocol, and therefore requires special processing.</para>
      </summary>
    </member>
    <member name="F:System.Runtime.Remoting.Channels.BinaryServerFormatterSink.Protocol.Other">
      <summary>
        <para>Indicates that a protocol other than HTTP is used with
 the current formatter sink.</para>
      </summary>
    </member>
    <member name="T:System.Runtime.Remoting.Channels.SoapClientFormatterSinkProvider">
      <summary>
        <para> Provides the implementation for a client
      formatter sink provider.</para>
      </summary>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.SoapClientFormatterSinkProvider.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Runtime.Remoting.Channels.SoapClientFormatterSinkProvider" /> class with default values.</para>
      </summary>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.SoapClientFormatterSinkProvider.#ctor(System.Collections.IDictionary,System.Collections.ICollection)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Runtime.Remoting.Channels.SoapClientFormatterSinkProvider" /> class with the given
 properties and provider data.</para>
      </summary>
      <param name="properties">An <see cref="T:System.Collections.IDictionary" /> of configuration properties to use with the new instance of <see cref="T:System.Runtime.Remoting.Channels.SoapClientFormatterSinkProvider" />.</param>
      <param name=" providerData">An <see cref="T:System.Collections.ICollection" /> of provider data to use with the new instance of <see cref="T:System.Runtime.Remoting.Channels.SoapClientFormatterSinkProvider" />.</param>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.SoapClientFormatterSinkProvider.CreateSink(System.Runtime.Remoting.Channels.IChannelSender,System.String,System.Object)">
      <summary>
        <para> Creates
      a sink chain.
      </para>
      </summary>
      <param name="channel">Channel for which this sink chain is being constructed. </param>
      <param name="url">URL of object to connect to or the channel URI for the target object. </param>
      <param name="remoteChannelData">
        <para>A channel data object describing a channel on the remote server. </para>
      </param>
      <returns>
        <para> The first sink of the newly formed channel sink chain,
      or <see langword="null" /> indicating that this provider will not or cannot provide a connection for this endpoint.
      </para>
      </returns>
    </member>
    <member name="P:System.Runtime.Remoting.Channels.SoapClientFormatterSinkProvider.Next">
      <summary>
        <para>Gets or sets the next <see cref="T:System.Runtime.Remoting.Channels.IClientChannelSinkProvider" /> in
   the sink provider chain.</para>
      </summary>
    </member>
    <member name="T:System.Runtime.Remoting.Channels.SoapClientFormatterSink">
      <summary>
        <para> Provides the implementation for a client formatter
      sink that uses the <see cref="T:System.Runtime.Serialization.Formatters.Soap.SoapFormatter" /> .</para>
      </summary>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.SoapClientFormatterSink.#ctor(System.Runtime.Remoting.Channels.IClientChannelSink)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Runtime.Remoting.Channels.SoapClientFormatterSink" /> class.</para>
      </summary>
      <param name="nextSink">The next sink in the channel sink chain.</param>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.SoapClientFormatterSink.SyncProcessMessage(System.Runtime.Remoting.Messaging.IMessage)">
      <summary>
        <para>Synchronously processes the provided message.</para>
      </summary>
      <param name="msg">The message to process.</param>
      <returns>
        <para>The response to the processed message.</para>
      </returns>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.SoapClientFormatterSink.AsyncProcessMessage(System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Messaging.IMessageSink)">
      <summary>
        <para>Asynchronously processes the provided message.</para>
      </summary>
      <param name="msg">The message to process.</param>
      <param name=" replySink">The sink that will receive the reply to the provided message.</param>
      <returns>
        <para>An <see cref="T:System.Runtime.Remoting.Messaging.IMessageCtrl" /> that provides a way to
   control the asynchronous message after it has been dispatched.</para>
      </returns>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.SoapClientFormatterSink.ProcessMessage(System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders,System.IO.Stream,System.Runtime.Remoting.Channels.ITransportHeaders@,System.IO.Stream@)">
      <summary>
        <para> Requests message processing from the current sink.</para>
      </summary>
      <param name="msg">The message to process.</param>
      <param name="requestHeaders">The headers to add to the outgoing message heading to the server.</param>
      <param name="requestStream">The stream headed toward the transport sink.</param>
      <param name="responseHeaders">When this method returns, contains an <see cref="T:System.Runtime.Remoting.Channels.ITransportHeaders" /> interface that holds the headers that the server returned. This parameter is passed uninitialized.</param>
      <param name="responseStream">When this method returns, contains a <see cref="T:System.IO.Stream" /> coming back from the transport sink. This parameter is passed uninitialized.</param>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.SoapClientFormatterSink.AsyncProcessRequest(System.Runtime.Remoting.Channels.IClientChannelSinkStack,System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders,System.IO.Stream)">
      <summary>
        <para>Requests asynchronous processing of a method call on the current sink.</para>
      </summary>
      <param name="sinkStack">A stack of channel sinks that called the current sink.</param>
      <param name=" msg">The message to process.</param>
      <param name=" headers">The headers to add to the outgoing message heading to the server.</param>
      <param name=" stream">The stream headed to the transport sink.</param>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.SoapClientFormatterSink.AsyncProcessResponse(System.Runtime.Remoting.Channels.IClientResponseChannelSinkStack,System.Object,System.Runtime.Remoting.Channels.ITransportHeaders,System.IO.Stream)">
      <summary>
        <para>Requests asynchronous processing of a response to a method call on the
      current sink.</para>
      </summary>
      <param name="sinkStack">A stack of sinks that called the current sink.</param>
      <param name=" state">The state associated with the current sink.</param>
      <param name=" headers">The headers retrieved from the server response stream.</param>
      <param name=" stream">The stream coming back from the transport sink.</param>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.SoapClientFormatterSink.GetRequestStream(System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders)">
      <summary>
        <para>Returns the <see cref="T:System.IO.Stream" /> onto which
 the provided message is to be serialized.</para>
      </summary>
      <param name="msg">The <see cref="T:System.Runtime.Remoting.Messaging.IMethodCallMessage" /> containing details about the method call.</param>
      <param name="headers">The headers to add to the outgoing message heading to the server.</param>
      <returns>
        <para>The <see cref="T:System.IO.Stream" /> onto which the provided
 message is to be serialized.</para>
      </returns>
    </member>
    <member name="P:System.Runtime.Remoting.Channels.SoapClientFormatterSink.NextSink">
      <summary>
        <para>Gets the next <see cref="T:System.Runtime.Remoting.Messaging.IMessageSink" /> in the sink chain.</para>
      </summary>
    </member>
    <member name="P:System.Runtime.Remoting.Channels.SoapClientFormatterSink.NextChannelSink">
      <summary>
        <para>Gets the next <see cref="T:System.Runtime.Remoting.Channels.IClientChannelSink" /> in the sink chain.</para>
      </summary>
    </member>
    <member name="P:System.Runtime.Remoting.Channels.SoapClientFormatterSink.Properties">
      <summary>
        <para>Gets an <see cref="T:System.Collections.IDictionary" /> of properties for the
 current channel sink.</para>
      </summary>
    </member>
    <member name="T:System.Runtime.Remoting.Channels.SoapServerFormatterSinkProvider">
      <summary>
        <para> Provides the implementation for a server formatter channel
      sink provider that uses the <see cref="T:System.Runtime.Serialization.Formatters.Soap.SoapFormatter" />.
      </para>
      </summary>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.SoapServerFormatterSinkProvider.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Runtime.Remoting.Channels.SoapServerFormatterSinkProvider" /> class with default values.</para>
      </summary>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.SoapServerFormatterSinkProvider.#ctor(System.Collections.IDictionary,System.Collections.ICollection)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Runtime.Remoting.Channels.SoapServerFormatterSinkProvider" /> class with the provided
 properties and provider data.</para>
      </summary>
      <param name="properties">An <see cref="T:System.Collections.IDictionary" /> of configuration properties to use with the new instance of <see cref="T:System.Runtime.Remoting.Channels.SoapClientFormatterSinkProvider" />.</param>
      <param name="providerData">An <see cref="T:System.Collections.ICollection" /> of provider data to use with the new instance of <see cref="T:System.Runtime.Remoting.Channels.SoapClientFormatterSinkProvider" />.</param>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.SoapServerFormatterSinkProvider.GetChannelData(System.Runtime.Remoting.Channels.IChannelDataStore)">
      <summary>
        <para> Returns the channel data for the channel that the
      current sink is associated with.</para>
      </summary>
      <param name="channelData">An <see cref="T:System.Runtime.Remoting.Channels.IChannelDataStore" /> object in which the channel data is to be returned.</param>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.SoapServerFormatterSinkProvider.CreateSink(System.Runtime.Remoting.Channels.IChannelReceiver)">
      <summary>
        <para>Creates a sink chain.
 </para>
      </summary>
      <param name="channel">The channel for which to create the channel sink chain.</param>
      <returns>
        <para> The first sink of the
 newly formed channel sink chain. </para>
      </returns>
    </member>
    <member name="P:System.Runtime.Remoting.Channels.SoapServerFormatterSinkProvider.Next">
      <summary>
        <para>Gets or sets the next <see cref="T:System.Runtime.Remoting.Channels.IServerChannelSinkProvider" /> in the sink provider chain.</para>
      </summary>
    </member>
    <member name="T:System.Runtime.Remoting.Channels.SoapServerFormatterSink">
      <summary>
        <para> Provides the implementation for a server formatter
      sink that uses the <see cref="T:System.Runtime.Serialization.Formatters.Soap.SoapFormatter" /> .</para>
      </summary>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.SoapServerFormatterSink.#ctor(System.Runtime.Remoting.Channels.SoapServerFormatterSink.Protocol,System.Runtime.Remoting.Channels.IServerChannelSink,System.Runtime.Remoting.Channels.IChannelReceiver)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Runtime.Remoting.Channels.SoapServerFormatterSink" /> class.</para>
      </summary>
      <param name="protocol">The <see cref="T:System.Runtime.Remoting.Channels.BinaryServerFormatterSink.Protocol" /> that will be used with the current instance of <see cref="T:System.Runtime.Remoting.Channels.BinaryServerFormatterSink" /> .</param>
      <param name=" nextSink">The next sink in the channel sink chain.</param>
      <param name=" receiver">Indicates the channel that will receive the messages serialized by the new instance of <see cref="T:System.Runtime.Remoting.Channels.BinaryServerFormatterSink" />.</param>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.SoapServerFormatterSink.ProcessMessage(System.Runtime.Remoting.Channels.IServerChannelSinkStack,System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders,System.IO.Stream,System.Runtime.Remoting.Messaging.IMessage@,System.Runtime.Remoting.Channels.ITransportHeaders@,System.IO.Stream@)">
      <summary>
        <para> Requests message processing from the current sink.</para>
      </summary>
      <param name="sinkStack">The stack of sinks that transports the message.</param>
      <param name="requestMsg">The message that contains the request.</param>
      <param name="requestHeaders">Headers retrieved from the incoming message from the client.</param>
      <param name="requestStream">The stream that needs to be processed and passed on to the deserialization sink.</param>
      <param name="responseMsg">When this method returns, contains an <see cref="T:System.Runtime.Remoting.Messaging.IMessage" /> that holds the response message. This parameter is passed uninitialized.</param>
      <param name="responseHeaders">When this method returns, contains an <see cref="T:System.Runtime.Remoting.Channels.ITransportHeaders" /> that holds the headers to add to the return message heading to the client. This parameter is passed uninitialized. </param>
      <param name="responseStream">When this method returns, contains a <see cref="T:System.IO.Stream" /> that is heading back to the transport sink. This parameter is passed uninitialized. </param>
      <returns>
        <para>A <see cref="T:System.Runtime.Remoting.Channels.ServerProcessing" /> status value that
   provides information about how the message was processed.</para>
      </returns>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.SoapServerFormatterSink.AsyncProcessResponse(System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack,System.Object,System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders,System.IO.Stream)">
      <summary>
        <para>Requests processing from the current sink of the response from a method call
 sent asynchronously.</para>
      </summary>
      <param name="sinkStack">A stack of sinks leading back to the server transport sink.</param>
      <param name="state">Information associated with the current sink, generated on the request side, and needed on the response side.</param>
      <param name="msg">The response message.</param>
      <param name="headers">The headers to add to the return message heading to the client.</param>
      <param name="stream">The stream heading back to the transport sink.</param>
    </member>
    <member name="M:System.Runtime.Remoting.Channels.SoapServerFormatterSink.GetResponseStream(System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack,System.Object,System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders)">
      <summary>
        <para>Returns the <see cref="T:System.IO.Stream" /> onto which the provided
 response message is to be serialized.</para>
      </summary>
      <param name="sinkStack">A stack of sinks leading back to the server transport sink.</param>
      <param name=" state">Information associated with the current sink, generated on the request side, and needed on the response side.</param>
      <param name=" msg">The response message that is to be serialized. </param>
      <param name=" headers">The headers to put in the response stream to the client.</param>
      <returns>
        <para>The <see cref="T:System.IO.Stream" /> onto which the provided
 response message is to be serialized.</para>
      </returns>
    </member>
    <member name="P:System.Runtime.Remoting.Channels.SoapServerFormatterSink.NextChannelSink">
      <summary>
        <para>Gets the next <see cref="T:System.Runtime.Remoting.Channels.IServerChannelSink" /> in the sink chain.</para>
      </summary>
    </member>
    <member name="P:System.Runtime.Remoting.Channels.SoapServerFormatterSink.Properties">
      <summary>
        <para>Gets an <see cref="T:System.Collections.IDictionary" /> of properties for the
 current channel sink.</para>
      </summary>
    </member>
    <member name="F:System.Runtime.Remoting.Channels.SoapServerFormatterSink.Protocol.Http">
      <summary>
        <para> Indicates that the current formatter sink is using the HTTP
 protocol, and therefore requires special processing.</para>
      </summary>
    </member>
    <member name="F:System.Runtime.Remoting.Channels.SoapServerFormatterSink.Protocol.Other">
      <summary>
        <para>Indicates that a protocol other than HTTP is used with
 the current formatter sink.</para>
      </summary>
    </member>
    <member name="T:System.Runtime.Remoting.MetadataServices.MetaData">
      <summary>
        <para>Provides methods that allow you to work with XML schema.</para>
      </summary>
    </member>
    <member name="M:System.Runtime.Remoting.MetadataServices.MetaData.ConvertTypesToSchemaToFile(System.Type[],System.Runtime.Remoting.MetadataServices.SdlType,System.String)">
      <summary>
        <para>Converts the specified object types to XML schema, and writes it to a file
      specified by name.</para>
      </summary>
      <param name="types">The object types to convert to XML schema.</param>
      <param name=" sdlType">The type of service description language to use for the XML schema.</param>
      <param name=" path">The path of the XML file.</param>
    </member>
    <member name="M:System.Runtime.Remoting.MetadataServices.MetaData.ConvertTypesToSchemaToStream(System.Type[],System.Runtime.Remoting.MetadataServices.SdlType,System.IO.Stream)">
      <summary>
        <para> Converts the specified object types to XML schema, and writes it to
      a specified stream.</para>
      </summary>
      <param name="types">The object types to convert to XML schema.</param>
      <param name=" sdlType">The type of service description language to use for the XML schema.</param>
      <param name=" outputStream">The <see cref="T:System.IO.Stream" /> the schema is written to.</param>
    </member>
    <member name="M:System.Runtime.Remoting.MetadataServices.MetaData.ConvertTypesToSchemaToFile(System.Runtime.Remoting.MetadataServices.ServiceType[],System.Runtime.Remoting.MetadataServices.SdlType,System.String)">
      <summary>
        <para>Converts the specified service types to XML schema, and writes it to a file
      specified by name.</para>
      </summary>
      <param name="types">The <see cref="T:System.Runtime.Remoting.MetadataServices.ServiceType" /> instances to convert to XML schema.</param>
      <param name=" sdlType">The type of service description language to use for the XML schema.</param>
      <param name=" path">The path of the XML file.</param>
    </member>
    <member name="M:System.Runtime.Remoting.MetadataServices.MetaData.ConvertTypesToSchemaToStream(System.Runtime.Remoting.MetadataServices.ServiceType[],System.Runtime.Remoting.MetadataServices.SdlType,System.IO.Stream)">
      <summary>
        <para> Converts the specified service types to XML schema, and writes it to
      a specified stream.</para>
      </summary>
      <param name="serviceTypes">The <see cref="T:System.Runtime.Remoting.MetadataServices.ServiceType" /> instances to convert to XML schema.</param>
      <param name=" sdlType">The type of service description language to use for the XML schema.</param>
      <param name=" outputStream">The <see cref="T:System.IO.Stream" /> the schema is written to.</param>
    </member>
    <member name="M:System.Runtime.Remoting.MetadataServices.MetaData.RetrieveSchemaFromUrlToStream(System.String,System.IO.Stream)">
      <summary>
        <para>Downloads the XML schema from a URL, and writes it to the specified stream.</para>
      </summary>
      <param name="url"> The URL where the XML schema is located.</param>
      <param name=" outputStream">The <see cref="T:System.IO.Stream" /> the schema is written to.</param>
    </member>
    <member name="M:System.Runtime.Remoting.MetadataServices.MetaData.RetrieveSchemaFromUrlToFile(System.String,System.String)">
      <summary>
        <para> Downloads the XML schema from a URL, and writes it to the specified file.</para>
      </summary>
      <param name="url">The URL where the XML schema is located.</param>
      <param name=" path">The path of the file the schema is written to.</param>
    </member>
    <member name="M:System.Runtime.Remoting.MetadataServices.MetaData.ConvertSchemaStreamToCodeSourceStream(System.Boolean,System.String,System.IO.Stream,System.Collections.ArrayList,System.String,System.String)">
      <summary>
        <para>Converts the specified schema definition into C# proxy source code for a
      remote object located at the specified URL and in the provided class
      namespace.</para>
      </summary>
      <param name="clientProxy">Indicates the type of proxy to generate. If <see langword="true" />, generates a simple proxy (also known as wrapped proxy) that automatically loads the channels, exposes all the methods of the remote object, and provides access to the channel properties. If <see langword="false" /> , generates a transparent proxy that exposes all the methods of the remote object.</param>
      <param name=" outputDirectory">The directory where the new C# source code files with the proxy are created.</param>
      <param name=" inputStream">The input stream containing the schema definition in Web Services Description Language (WSDL) format.</param>
      <param name=" outCodeStreamList">The list of file names for the code streams that are generated. Note that the <see cref="M:System.Runtime.Remoting.MetadataServices.MetaData.ConvertSchemaStreamToCodeSourceStream(System.Boolean,System.String,System.IO.Stream,System.Collections.ArrayList,System.String,System.String)" /> method can create multiple source code streams.</param>
      <param name=" proxyUrl">The URL where the target remote object represented by the new proxy will be located.</param>
      <param name=" proxyNamespace">The namespace of the newly created proxy. </param>
    </member>
    <member name="M:System.Runtime.Remoting.MetadataServices.MetaData.ConvertSchemaStreamToCodeSourceStream(System.Boolean,System.String,System.IO.Stream,System.Collections.ArrayList,System.String)">
      <summary>
        <para>Converts the specified schema definition into C# proxy
      source code for a remote object located at the specified URL.</para>
      </summary>
      <param name="clientProxy">Indicates the type of proxy to generate. If <see langword="true" />, generates a simple proxy (also known as wrapped proxy) that automatically loads the channels, exposes all the methods of the remote object, and provides access to the channel properties. If <see langword="false" /> , generates a transparent proxy that exposes all the methods of the remote object.</param>
      <param name=" outputDirectory"> The directory where the new C# source code files with the proxy are created.</param>
      <param name=" inputStream">The input stream containing the schema definition in Web Services Description Language (WSDL) format.</param>
      <param name="outCodeStreamList">The list of file names for the code streams that are generated. Note that the <see cref="M:System.Runtime.Remoting.MetadataServices.MetaData.ConvertSchemaStreamToCodeSourceStream(System.Boolean,System.String,System.IO.Stream,System.Collections.ArrayList,System.String,System.String)" /> method can create multiple source code streams.</param>
      <param name=" proxyUrl">The URL where the target remote object represented by the new proxy will be located.</param>
    </member>
    <member name="M:System.Runtime.Remoting.MetadataServices.MetaData.ConvertSchemaStreamToCodeSourceStream(System.Boolean,System.String,System.IO.Stream,System.Collections.ArrayList)">
      <summary>
        <para>Converts the specified schema definition into C# proxy source code. </para>
      </summary>
      <param name="clientProxy">Indicates the type of proxy to generate. If <see langword="true" />, generates a simple proxy (also known as wrapped proxy) that automatically loads the channels, exposes all the methods of the remote object, and provides access to the channel properties. If <see langword="false" /> , generates a transparent proxy that exposes all the methods of the remote object.</param>
      <param name=" outputDirectory"> The directory where the new C# source code files with the proxy are created.</param>
      <param name=" inputStream">The input stream containing the schema definition in Web Services Description Language (WSDL) format.</param>
      <param name=" outCodeStreamList">The list of file names for the code streams that are generated. Note that the <see cref="M:System.Runtime.Remoting.MetadataServices.MetaData.ConvertSchemaStreamToCodeSourceStream(System.Boolean,System.String,System.IO.Stream,System.Collections.ArrayList,System.String,System.String)" /> method can create multiple source code streams.</param>
    </member>
    <member name="M:System.Runtime.Remoting.MetadataServices.MetaData.ConvertCodeSourceStreamToAssemblyFile(System.Collections.ArrayList,System.String,System.String)">
      <summary>
        <para>Compiles specified code source streams into a run-time assembly file.</para>
      </summary>
      <param name="outCodeStreamList">An <see cref="T:System.Collections.ArrayList" /> of streams with the source code.</param>
      <param name=" assemblyPath">The location where the new run-time assembly is generated.</param>
      <param name=" strongNameFilename">The strong name to compile into the new run-time assembly. Can be <see cref="F:System.String.Empty" qualify="true" /> .</param>
    </member>
    <member name="M:System.Runtime.Remoting.MetadataServices.MetaData.ConvertCodeSourceFileToAssemblyFile(System.String,System.String,System.String)">
      <summary>
        <para> Compiles
      a specified code source file
      into a run-time assembly file.</para>
      </summary>
      <param name="codePath">The path to the file containing the source code.</param>
      <param name=" assemblyPath">The location where the new run-time assembly is generated.</param>
      <param name=" strongNameFilename">The strong name to compile into the new assembly. Can be <see cref="F:System.String.Empty" qualify="true" /> .</param>
    </member>
    <member name="M:System.Runtime.Remoting.MetadataServices.MetaData.SaveStreamToFile(System.IO.Stream,System.String)">
      <summary>
        <para>Saves the input stream to a file with the specified name.</para>
      </summary>
      <param name="inputStream">The stream to write to the specified file.</param>
      <param name=" path">The file the input stream is written to.</param>
    </member>
    <member name="T:System.Runtime.Remoting.MetadataServices.ServiceType">
      <summary>
        <para>Associates a well-known object type that is passed to the Web Services Description Language (WSDL) generator with a remote
      endpoint that can process messages sent to a method on the type.</para>
      </summary>
    </member>
    <member name="M:System.Runtime.Remoting.MetadataServices.ServiceType.#ctor(System.Type)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Runtime.Remoting.MetadataServices.ServiceType" />class with the object
<see cref="T:System.Type" /> that is passed to the Web 
   Services Description Language (WSDL) generator.</para>
      </summary>
      <param name="type">The object <see cref="T:System.Type" /> that is passed to the WSDL generator.</param>
    </member>
    <member name="M:System.Runtime.Remoting.MetadataServices.ServiceType.#ctor(System.Type,System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Runtime.Remoting.MetadataServices.ServiceType" /> class with the URL and
<see cref="T:System.Type" /> of an object that is passed 
   to the Web Services Description Language (WSDL) generator.</para>
      </summary>
      <param name="type">The object <see cref="T:System.Type" /> that is passed to the WSDL generator.</param>
      <param name=" url">The well-known endpoint that can process messages sent to a method on the object type specified in the <paramref name="type" /> parameter. </param>
    </member>
    <member name="P:System.Runtime.Remoting.MetadataServices.ServiceType.ObjectType">
      <summary>
        <para> Gets the object <see cref="T:System.Type" /> that is passed to the Web Services Description Language (WSDL)
   generator.</para>
      </summary>
    </member>
    <member name="P:System.Runtime.Remoting.MetadataServices.ServiceType.Url">
      <summary>
        <para>Gets the URL of an object <see cref="T:System.Type" /> that is passed to the Web Services Description Language (WSDL) generator.</para>
      </summary>
    </member>
    <member name="T:System.Runtime.Remoting.MetadataServices.SdlChannelSinkProvider">
      <summary>
        <para>Provides the implementation for the server channel
      sink provider that creates <see cref="T:System.Runtime.Remoting.MetadataServices.SdlChannelSink" />
      instances.</para>
      </summary>
    </member>
    <member name="M:System.Runtime.Remoting.MetadataServices.SdlChannelSinkProvider.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Runtime.Remoting.MetadataServices.SdlChannelSinkProvider" /> class with default values.</para>
      </summary>
    </member>
    <member name="M:System.Runtime.Remoting.MetadataServices.SdlChannelSinkProvider.#ctor(System.Collections.IDictionary,System.Collections.ICollection)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Runtime.Remoting.MetadataServices.SdlChannelSinkProvider" /> class with specified
   properties and provider data.</para>
      </summary>
      <param name="properties">An <see cref="T:System.Collections.IDictionary" /> of configuration properties to use with the new instance of <see cref="T:System.Runtime.Remoting.MetadataServices.SdlChannelSinkProvider" /> .</param>
      <param name=" providerData">An <see cref="T:System.Collections.ICollection" /> of <see cref="T:System.Runtime.Remoting.Channels.SinkProviderData" /> instances to use with the new instance of <see cref="T:System.Runtime.Remoting.Channels.BinaryServerFormatterSinkProvider" />.</param>
    </member>
    <member name="M:System.Runtime.Remoting.MetadataServices.SdlChannelSinkProvider.GetChannelData(System.Runtime.Remoting.Channels.IChannelDataStore)">
      <summary>
        <para> Returns the channel data for the channel that the
      current sink is associated with.</para>
      </summary>
      <param name="localChannelData">An <see cref="T:System.Runtime.Remoting.Channels.IChannelDataStore" /> object in which the channel data is to be returned.</param>
    </member>
    <member name="M:System.Runtime.Remoting.MetadataServices.SdlChannelSinkProvider.CreateSink(System.Runtime.Remoting.Channels.IChannelReceiver)">
      <summary>
        <para>Creates a sink chain.
      </para>
      </summary>
      <param name="channel">The channel for which to create the channel sink chain.</param>
      <returns>
        <para> The first sink of the
      newly formed channel sink chain. </para>
      </returns>
    </member>
    <member name="P:System.Runtime.Remoting.MetadataServices.SdlChannelSinkProvider.Next">
      <summary>
        <para>Gets or sets the next <see cref="T:System.Runtime.Remoting.Channels.IServerChannelSinkProvider" /> in the sink provider chain.</para>
      </summary>
    </member>
    <member name="T:System.Runtime.Remoting.MetadataServices.SdlChannelSink">
      <summary>
        <para>Provides the implementation for a server channel sink that generates Web Services Description
      Language (WSDL) dynamically on the server.</para>
      </summary>
    </member>
    <member name="M:System.Runtime.Remoting.MetadataServices.SdlChannelSink.#ctor(System.Runtime.Remoting.Channels.IChannelReceiver,System.Runtime.Remoting.Channels.IServerChannelSink)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Runtime.Remoting.MetadataServices.SdlChannelSink" /> class.</para>
      </summary>
      <param name="receiver">Indicates the channel that will receive the messages serialized by the new instance of <see cref="T:System.Runtime.Remoting.MetadataServices.SdlChannelSink" />.</param>
      <param name=" nextSink">The next sink in the sink chain.</param>
    </member>
    <member name="M:System.Runtime.Remoting.MetadataServices.SdlChannelSink.ProcessMessage(System.Runtime.Remoting.Channels.IServerChannelSinkStack,System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders,System.IO.Stream,System.Runtime.Remoting.Messaging.IMessage@,System.Runtime.Remoting.Channels.ITransportHeaders@,System.IO.Stream@)">
      <summary>
        <para> Requests message processing from the current sink.</para>
      </summary>
      <param name="sinkStack">A stack of channel sinks that called the current sink.</param>
      <param name="requestMsg">The message that contains the request.</param>
      <param name="requestHeaders">The headers retrieved from the incoming message from the client.</param>
      <param name="requestStream">The stream that needs to be processed and passed on to the deserialization sink.</param>
      <param name="responseMsg">When this method returns, contains an <see cref="T:System.Runtime.Remoting.Messaging.IMessage" /> that holds the response message. This parameter is passed uninitialized.</param>
      <param name="responseHeaders">When this method returns, contains an <see cref="T:System.Runtime.Remoting.Channels.ITransportHeaders" /> that holds the headers to add to return message heading to the client. This parameter is passed uninitialized. </param>
      <param name="responseStream">When this method returns, contains a <see cref="T:System.IO.Stream" /> that is heading to the transport sink. This parameter is passed uninitialized. </param>
      <returns>
        <para>A <see cref="T:System.Runtime.Remoting.Channels.ServerProcessing" /> status value that
   provides information about how the message was processed.</para>
      </returns>
    </member>
    <member name="M:System.Runtime.Remoting.MetadataServices.SdlChannelSink.AsyncProcessResponse(System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack,System.Object,System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders,System.IO.Stream)">
      <summary>
        <para>Requests processing from the current sink of the response from a method call
      sent asynchronously.</para>
      </summary>
      <param name="sinkStack">A stack of sinks leading back to the server transport sink.</param>
      <param name="state">Information associated with the current sink, generated on the request side, and needed on the response side.</param>
      <param name="msg">The response message.</param>
      <param name="headers">The headers to add to the return message heading to the client.</param>
      <param name="stream">The stream heading back to the transport sink.</param>
    </member>
    <member name="M:System.Runtime.Remoting.MetadataServices.SdlChannelSink.GetResponseStream(System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack,System.Object,System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders)">
      <summary>
        <para>Returns the <see cref="T:System.IO.Stream" /> onto which the provided
   response message is to be serialized.</para>
      </summary>
      <param name="sinkStack">A stack of sinks leading back to the server transport sink.</param>
      <param name=" state">Information associated with the current sink, generated on the request side, and needed on the response side.</param>
      <param name=" msg">The response message to serialize. </param>
      <param name=" headers">The headers to put in the response stream to the client.</param>
      <returns>
        <para>The <see cref="T:System.IO.Stream" /> onto which the provided
   response message is to be serialized.</para>
      </returns>
    </member>
    <member name="P:System.Runtime.Remoting.MetadataServices.SdlChannelSink.NextChannelSink">
      <summary>
        <para>Gets the next <see cref="T:System.Runtime.Remoting.Channels.IServerChannelSink" /> in the sink chain.</para>
      </summary>
    </member>
    <member name="P:System.Runtime.Remoting.MetadataServices.SdlChannelSink.Properties">
      <summary>
        <para>Gets an <see cref="T:System.Collections.IDictionary" /> of properties for the
   current channel sink.</para>
      </summary>
    </member>
    <member name="T:System.Runtime.Remoting.MetadataServices.SUDSParserException">
      <summary>
        <para>The exception thrown if an error occurs during parsing of Web Services Description
      Language (WSDL).</para>
      </summary>
    </member>
    <member name="T:System.Runtime.Remoting.MetadataServices.SUDSGeneratorException">
      <summary>
        <para>The exception thrown if an error occurs during generation of Web Services Description
      Language (WSDL).</para>
      </summary>
    </member>
    <member name="T:System.Runtime.Remoting.MetadataServices.SdlType">
      <summary>
        <para>Specifies the schema type used to describe services
      provided by an application.</para>
      </summary>
    </member>
    <member name="F:System.Runtime.Remoting.MetadataServices.SdlType.Sdl">
      <summary>
        <para> Indicates that basic Services Description Language (SDL) is used to describe services
      provided by an application. This value is obsolete.</para>
      </summary>
    </member>
    <member name="F:System.Runtime.Remoting.MetadataServices.SdlType.Wsdl">
      <summary>
        <para>Indicates that the Web Services Description Language
      (WSDL) is used to describe services provided by an application.</para>
      </summary>
    </member>
    <member name="T:System.Runtime.Remoting.Services.RemotingClientProxy">
      <summary>
        <para>The abstract base class for proxies to well-known
      objects generated by the <see topic="pgrfsoapsudsutilitysoapsudsexe " title="Soapsuds tool" />.</para>
      </summary>
    </member>
    <member name="P:System.Runtime.Remoting.Services.RemotingClientProxy.AllowAutoRedirect">
      <summary>
        <para> Gets or sets a value indicating whether the automatic handling of server redirects is enabled.</para>
      </summary>
    </member>
    <member name="P:System.Runtime.Remoting.Services.RemotingClientProxy.Cookies">
      <summary>
        <para> Gets the cookies received from the server that will be sent back on
      requests that match the cookie's path.</para>
      </summary>
    </member>
    <member name="P:System.Runtime.Remoting.Services.RemotingClientProxy.EnableCookies">
      <summary>
   Gets or sets a value indicating whether the handling of
   cookies received from the server is enabled.
</summary>
    </member>
    <member name="P:System.Runtime.Remoting.Services.RemotingClientProxy.PreAuthenticate">
      <summary>
        <para> Gets or sets a value indicating whether preauthentication of requests is enabled.</para>
      </summary>
    </member>
    <member name="P:System.Runtime.Remoting.Services.RemotingClientProxy.Path">
      <summary>
        <para>Gets or sets the base URL to the server to use for requests.</para>
      </summary>
    </member>
    <member name="P:System.Runtime.Remoting.Services.RemotingClientProxy.Timeout">
      <summary>
        <para> Gets or sets the time-out in milliseconds to use for
      synchronous calls.</para>
      </summary>
    </member>
    <member name="P:System.Runtime.Remoting.Services.RemotingClientProxy.Url">
      <summary>
        <para>Gets or sets the base URL to the server to use for requests.</para>
      </summary>
    </member>
    <member name="P:System.Runtime.Remoting.Services.RemotingClientProxy.UserAgent">
      <summary>
        <para>Gets or sets the user agent HTTP header for the request.</para>
      </summary>
    </member>
    <member name="P:System.Runtime.Remoting.Services.RemotingClientProxy.Username">
      <summary>
        <para>Gets or sets the user name to send for basic authentication and digest authentication.</para>
      </summary>
    </member>
    <member name="P:System.Runtime.Remoting.Services.RemotingClientProxy.Password">
      <summary>
        <para>Gets or sets the password to use for basic authentication and digest authentication.</para>
      </summary>
    </member>
    <member name="P:System.Runtime.Remoting.Services.RemotingClientProxy.Domain">
      <summary>
        <para>Gets or sets the domain name to be used for basic authentication and digest authentication.</para>
      </summary>
    </member>
    <member name="P:System.Runtime.Remoting.Services.RemotingClientProxy.ProxyName">
      <summary>
        <para>Gets or sets the name of the proxy server to use for requests.</para>
      </summary>
    </member>
    <member name="P:System.Runtime.Remoting.Services.RemotingClientProxy.ProxyPort">
      <summary>
        <para>Gets or sets the port number of the proxy server to use for requests.</para>
      </summary>
    </member>
    <member name="T:System.Runtime.Remoting.Services.RemotingService">
      <summary>
        <para>Provides the base implementation for the remoting XML Web
      services.</para>
      </summary>
    </member>
    <member name="P:System.Runtime.Remoting.Services.RemotingService.Application">
      <summary>
   Gets a reference to the application object for the
   current HTTP request.
</summary>
    </member>
    <member name="P:System.Runtime.Remoting.Services.RemotingService.Context">
      <summary>
        <para>Gets the current HTTP-specific context used by the HTTP
      server to process Web requests.</para>
      </summary>
    </member>
    <member name="P:System.Runtime.Remoting.Services.RemotingService.Session">
      <summary>
        <para> Gets the <see cref="T:System.Web.HttpSessionState" /> for the current request.</para>
      </summary>
    </member>
    <member name="P:System.Runtime.Remoting.Services.RemotingService.Server">
      <summary>
        <para> Gets the <see cref="T:System.Web.HttpServerUtility" /> for the current 
   request.</para>
      </summary>
    </member>
    <member name="P:System.Runtime.Remoting.Services.RemotingService.User">
      <summary>
        <para> Gets the security context of the user on whose
      behalf the code is running, including that user's identity and any roles they belong to.</para>
      </summary>
    </member>
  </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\tools\x86\managed\urt\v1.0.3705\system.security.xml ===
<?xml version="1.0"?>
<doc>
  <assembly>
    <name>System.Security</name>
  </assembly>
  <members>
    <member name="T:System.Security.Cryptography.Xml.DataObject">
      <summary>
        <para> Represents the object element of an XML signature that holds the data to be signed.
      </para>
      </summary>
    </member>
    <member name="M:System.Security.Cryptography.Xml.DataObject.#ctor">
      <summary>
        <para> Initializes a new instance of the <see cref="T:System.Security.Cryptography.Xml.DataObject" /> class with default properties.
   </para>
      </summary>
    </member>
    <member name="M:System.Security.Cryptography.Xml.DataObject.#ctor(System.String,System.String,System.String,System.Xml.XmlElement)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Security.Cryptography.Xml.DataObject" /> class with the specified
   ID, MIME type, encoding, and data.</para>
      </summary>
      <param name="id">The ID with which to initialize the new instance of <see cref="T:System.Security.Cryptography.Xml.DataObject" />.</param>
      <param name="mimeType">The MIME type with which to initialize the new instance of <see cref="T:System.Security.Cryptography.Xml.DataObject" />.</param>
      <param name="encoding">The encoding with which to initialize the new instance of <see cref="T:System.Security.Cryptography.Xml.DataObject" />.</param>
      <param name="data">The data with which to initialize the new instance of <see cref="T:System.Security.Cryptography.Xml.DataObject" />.</param>
    </member>
    <member name="M:System.Security.Cryptography.Xml.DataObject.GetXml">
      <summary>
        <para>Returns the XML representation of the <see cref="T:System.Security.Cryptography.Xml.DataObject" />.</para>
      </summary>
      <returns>
        <para>The XML representation of the <see cref="T:System.Security.Cryptography.Xml.DataObject" />.</para>
      </returns>
    </member>
    <member name="M:System.Security.Cryptography.Xml.DataObject.LoadXml(System.Xml.XmlElement)">
      <summary>
        <para>Loads a <see cref="T:System.Security.Cryptography.Xml.DataObject" /> state from an XML element.</para>
      </summary>
      <param name="value">The XML element from which to load the <see cref="T:System.Security.Cryptography.Xml.DataObject" /> state.</param>
    </member>
    <member name="P:System.Security.Cryptography.Xml.DataObject.Id">
      <summary>
        <para> Gets or sets the ID of the current <see cref="T:System.Security.Cryptography.Xml.DataObject" />.</para>
      </summary>
    </member>
    <member name="P:System.Security.Cryptography.Xml.DataObject.MimeType">
      <summary>
        <para> Gets or sets the MIME type of the current <see cref="T:System.Security.Cryptography.Xml.DataObject" />,
   which describes the data within the <see cref="T:System.Security.Cryptography.Xml.DataObject" />.</para>
      </summary>
    </member>
    <member name="P:System.Security.Cryptography.Xml.DataObject.Encoding">
      <summary>
        <para> 
      Gets or sets the encoding of the current <see cref="T:System.Security.Cryptography.Xml.DataObject" />.
      </para>
      </summary>
    </member>
    <member name="P:System.Security.Cryptography.Xml.DataObject.Data">
      <summary>
        <para> Gets or sets the data of the current <see cref="T:System.Security.Cryptography.Xml.DataObject" />.</para>
      </summary>
    </member>
    <member name="T:System.Security.Cryptography.Xml.KeyInfo">
      <summary>
        <para> Represents an XMLDSIG <see langword="&lt;KeyInfo&gt;" />
element. </para>
      </summary>
    </member>
    <member name="M:System.Security.Cryptography.Xml.KeyInfo.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Security.Cryptography.Xml.KeyInfo" /> class.</para>
      </summary>
    </member>
    <member name="M:System.Security.Cryptography.Xml.KeyInfo.GetXml">
      <summary>
        <para>Returns the XML representation of the <see cref="T:System.Security.Cryptography.Xml.KeyInfo" /> instance.</para>
      </summary>
      <returns>
        <para>The XML representation of the <see cref="T:System.Security.Cryptography.Xml.KeyInfo" /> instance.</para>
      </returns>
    </member>
    <member name="M:System.Security.Cryptography.Xml.KeyInfo.LoadXml(System.Xml.XmlElement)">
      <summary>
        <para>Loads a <see cref="T:System.Security.Cryptography.Xml.KeyInfo" /> state from an XML element.</para>
      </summary>
      <param name="value">The XML element from which to load the <see cref="T:System.Security.Cryptography.Xml.KeyInfo" /> state.</param>
    </member>
    <member name="M:System.Security.Cryptography.Xml.KeyInfo.AddClause(System.Security.Cryptography.Xml.KeyInfoClause)">
      <summary>
        <para>Adds a <see cref="T:System.Security.Cryptography.Xml.KeyInfoClause" /> representing 
   a particular type of <see cref="T:System.Security.Cryptography.Xml.KeyInfo" /> information to the <see cref="T:System.Security.Cryptography.Xml.KeyInfo" /> instance.</para>
      </summary>
      <param name="clause">The <see cref="T:System.Security.Cryptography.Xml.KeyInfoClause" /> to add to the <see cref="T:System.Security.Cryptography.Xml.KeyInfo" /> instance.</param>
    </member>
    <member name="M:System.Security.Cryptography.Xml.KeyInfo.GetEnumerator">
      <summary>
        <para> Returns an enumerator of the <see cref="T:System.Security.Cryptography.Xml.KeyInfoClause" />
objects in the <see cref="T:System.Security.Cryptography.Xml.KeyInfo" />
instance.</para>
      </summary>
      <returns>
        <para> An enumerator of the subelements of <see cref="T:System.Security.Cryptography.Xml.KeyInfo" /> that can be used to iterate through the collection.
   </para>
      </returns>
    </member>
    <member name="M:System.Security.Cryptography.Xml.KeyInfo.GetEnumerator(System.Type)">
      <summary>
        <para> Returns an enumerator of the <see cref="T:System.Security.Cryptography.Xml.KeyInfoClause" /> objects of the
   specified type in the <see cref="T:System.Security.Cryptography.Xml.KeyInfo" />
   instance.
   </para>
      </summary>
      <param name="requestedObjectType">The type of object to enumerate. </param>
      <returns>
        <para> An enumerator of the subelements of <see cref="T:System.Security.Cryptography.Xml.KeyInfo" /> that can be used to
   iterate through the collection.
   </para>
      </returns>
    </member>
    <member name="P:System.Security.Cryptography.Xml.KeyInfo.Id">
      <summary>
        <para>Gets or sets the <see cref="T:System.Security.Cryptography.Xml.KeyInfo" /> ID.</para>
      </summary>
    </member>
    <member name="P:System.Security.Cryptography.Xml.KeyInfo.Count">
      <summary>
        <para>Gets the number of <see cref="T:System.Security.Cryptography.Xml.KeyInfoClause" /> objects contained within the <see cref="T:System.Security.Cryptography.Xml.KeyInfo" /> instance.</para>
      </summary>
    </member>
    <member name="T:System.Security.Cryptography.Xml.KeyInfoClause">
      <summary>
        <para> Represents the abstract base class from which all
      implementations of <see cref="T:System.Security.Cryptography.Xml.KeyInfo" />
      subelements inherit.
      </para>
      </summary>
    </member>
    <member name="M:System.Security.Cryptography.Xml.KeyInfoClause.#ctor">
      <summary>
        <para>Initializes a new instance of <see cref="T:System.Security.Cryptography.Xml.KeyInfoClause" />.</para>
      </summary>
    </member>
    <member name="M:System.Security.Cryptography.Xml.KeyInfoClause.GetXml">
      <summary>
        <para>When overridden in a derived class, returns an XML representation of the <see cref="T:System.Security.Cryptography.Xml.KeyInfoClause" />.</para>
      </summary>
      <returns>
        <para>An XML representation of the <see cref="T:System.Security.Cryptography.Xml.KeyInfoClause" />.</para>
      </returns>
    </member>
    <member name="M:System.Security.Cryptography.Xml.KeyInfoClause.LoadXml(System.Xml.XmlElement)">
      <summary>
        <para>When overridden in a derived class, parses the
      input <see cref="T:System.Xml.XmlElement" /> and configures the internal state of
      the <see cref="T:System.Security.Cryptography.Xml.KeyInfoClause" /> to match.</para>
      </summary>
      <param name="element">The <see cref="T:System.Xml.XmlElement" /> specifying the state of the <see cref="T:System.Security.Cryptography.Xml.KeyInfoClause" />.</param>
    </member>
    <member name="T:System.Security.Cryptography.Xml.KeyInfoName">
      <summary>
        <para>Represents a <see langword="&lt;KeyName&gt;" /> subelement of an XMLDSIG <see langword="&lt;KeyInfo&gt;" /> element. </para>
      </summary>
    </member>
    <member name="M:System.Security.Cryptography.Xml.KeyInfoName.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Security.Cryptography.Xml.KeyInfoName" /> class.</para>
      </summary>
    </member>
    <member name="M:System.Security.Cryptography.Xml.KeyInfoName.GetXml">
      <summary>
        <para> Returns an XML representation of the <see cref="T:System.Security.Cryptography.Xml.KeyInfoName" />.</para>
      </summary>
      <returns>
        <para>An XML representation of the <see cref="T:System.Security.Cryptography.Xml.KeyInfoName" />.</para>
      </returns>
    </member>
    <member name="M:System.Security.Cryptography.Xml.KeyInfoName.LoadXml(System.Xml.XmlElement)">
      <summary>
        <para> Parses the input <see cref="T:System.Xml.XmlElement" /> and configures the internal state
   of the <see cref="T:System.Security.Cryptography.Xml.KeyInfoName" /> to match.</para>
      </summary>
      <param name="value">The <see cref="T:System.Xml.XmlElement" /> specifying the state of the <see cref="T:System.Security.Cryptography.Xml.KeyInfoName" />.</param>
    </member>
    <member name="P:System.Security.Cryptography.Xml.KeyInfoName.Value">
      <summary>
        <para>Gets or sets the string identifier contained within
      a <see langword="&lt;KeyName&gt;" />
   element.</para>
      </summary>
    </member>
    <member name="T:System.Security.Cryptography.Xml.DSAKeyValue">
      <summary>
        <para>Represents a subelement of <see cref="T:System.Security.Cryptography.Xml.KeyInfo" /> that contains a <see cref="T:System.Security.Cryptography.DSA" /> 
public key.</para>
      </summary>
    </member>
    <member name="M:System.Security.Cryptography.Xml.DSAKeyValue.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Security.Cryptography.Xml.DSAKeyValue" /> class with a new,
   randomly-generated <see cref="T:System.Security.Cryptography.DSA" /> public
   key.</para>
      </summary>
    </member>
    <member name="M:System.Security.Cryptography.Xml.DSAKeyValue.#ctor(System.Security.Cryptography.DSA)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Security.Cryptography.Xml.DSAKeyValue" /> class with the
   specified <see cref="T:System.Security.Cryptography.DSA" /> public
   key.</para>
      </summary>
      <param name="key">The instance of an implementation of <see cref="T:System.Security.Cryptography.DSA" /> that holds the public key.</param>
    </member>
    <member name="M:System.Security.Cryptography.Xml.DSAKeyValue.GetXml">
      <summary>
        <para>Returns the XML representation of the <see cref="T:System.Security.Cryptography.Xml.DSAKeyValue" /><see cref="T:System.Security.Cryptography.Xml.KeyInfo" /> subelement.</para>
      </summary>
      <returns>
        <para>The XML representation of the <see cref="T:System.Security.Cryptography.Xml.DSAKeyValue" /><see cref="T:System.Security.Cryptography.Xml.KeyInfo" /> subelement.</para>
      </returns>
    </member>
    <member name="M:System.Security.Cryptography.Xml.DSAKeyValue.LoadXml(System.Xml.XmlElement)">
      <summary>
        <para>Loads a <see cref="T:System.Security.Cryptography.Xml.DSAKeyValue" /> state from an XML element.</para>
      </summary>
      <param name="value">The XML element from which to load the <see cref="T:System.Security.Cryptography.Xml.DSAKeyValue" /> state.</param>
    </member>
    <member name="P:System.Security.Cryptography.Xml.DSAKeyValue.Key">
      <summary>
        <para>Gets or sets the instance of an implementation of <see cref="T:System.Security.Cryptography.DSA" /> that holds the public key.</para>
      </summary>
    </member>
    <member name="T:System.Security.Cryptography.Xml.RSAKeyValue">
      <summary>
        <para>Represents a key clause that is used to set an <see cref="T:System.Security.Cryptography.RSA" /> key as part of the definition of
<see cref="T:System.Security.Cryptography.Xml.KeyInfo" /> for a
   digital signature.</para>
      </summary>
    </member>
    <member name="M:System.Security.Cryptography.Xml.RSAKeyValue.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Security.Cryptography.Xml.RSAKeyValue" /> class with a new randomly
   generated <see cref="T:System.Security.Cryptography.RSA" /> public
   key.</para>
      </summary>
    </member>
    <member name="M:System.Security.Cryptography.Xml.RSAKeyValue.#ctor(System.Security.Cryptography.RSA)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Security.Cryptography.Xml.RSAKeyValue" /> class with the
   specified <see cref="T:System.Security.Cryptography.RSA" /> public
   key.</para>
      </summary>
      <param name="key">The instance of an implementation of <see cref="T:System.Security.Cryptography.RSA" /> that holds the public key.</param>
    </member>
    <member name="M:System.Security.Cryptography.Xml.RSAKeyValue.GetXml">
      <summary>
        <para>Returns the XML representation of the <see cref="T:System.Security.Cryptography.RSA" /> key clause.</para>
      </summary>
      <returns>
        <para>The XML representation of the <see cref="T:System.Security.Cryptography.RSA" /> key clause.</para>
      </returns>
    </member>
    <member name="M:System.Security.Cryptography.Xml.RSAKeyValue.LoadXml(System.Xml.XmlElement)">
      <summary>
        <para>Loads an <see cref="T:System.Security.Cryptography.RSA" /> key clause from an XML element.</para>
      </summary>
      <param name="value">The XML element from which to load the <see cref="T:System.Security.Cryptography.RSA" /> key clause.</param>
    </member>
    <member name="P:System.Security.Cryptography.Xml.RSAKeyValue.Key">
      <summary>
        <para>Gets or sets the instance of <see cref="T:System.Security.Cryptography.RSA" /> that holds the public key.</para>
      </summary>
    </member>
    <member name="T:System.Security.Cryptography.Xml.KeyInfoRetrievalMethod">
      <summary>
        <para> References <see cref="T:System.Security.Cryptography.Xml.KeyInfo" /> objects stored at a different location.</para>
      </summary>
    </member>
    <member name="M:System.Security.Cryptography.Xml.KeyInfoRetrievalMethod.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Security.Cryptography.Xml.KeyInfoRetrievalMethod" /> class.</para>
      </summary>
    </member>
    <member name="M:System.Security.Cryptography.Xml.KeyInfoRetrievalMethod.#ctor(System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Security.Cryptography.Xml.KeyInfoRetrievalMethod" /> 
class with the specified Uniform Resource Identifier (URI) pointing to the
referenced <see cref="T:System.Security.Cryptography.Xml.KeyInfo" />.</para>
      </summary>
      <param name="strUri"> The URI of the information to be referenced by the new instance of <see cref="T:System.Security.Cryptography.Xml.KeyInfoRetrievalMethod" />.</param>
    </member>
    <member name="M:System.Security.Cryptography.Xml.KeyInfoRetrievalMethod.GetXml">
      <summary>
        <para> Returns the XML representation of the <see cref="T:System.Security.Cryptography.Xml.KeyInfoRetrievalMethod" />.</para>
      </summary>
      <returns>
        <para>The XML representation of the <see cref="T:System.Security.Cryptography.Xml.KeyInfoRetrievalMethod" />.</para>
      </returns>
    </member>
    <member name="M:System.Security.Cryptography.Xml.KeyInfoRetrievalMethod.LoadXml(System.Xml.XmlElement)">
      <summary>
        <para> Parses the input <see cref="T:System.Xml.XmlElement" /> and configures the internal state
   of the <see cref="T:System.Security.Cryptography.Xml.KeyInfoRetrievalMethod" /> to match.</para>
      </summary>
      <param name="value">The XML element specifying the state of the <see cref="T:System.Security.Cryptography.Xml.KeyInfoRetrievalMethod" />.</param>
    </member>
    <member name="P:System.Security.Cryptography.Xml.KeyInfoRetrievalMethod.Uri">
      <summary>
        <para> Gets the 
      Uniform Resource Identifier (URI) of the <see cref="T:System.Security.Cryptography.Xml.KeyInfoRetrievalMethod" />.</para>
      </summary>
    </member>
    <member name="T:System.Security.Cryptography.Xml.KeyInfoX509Data">
      <summary>
        <para>Represents an <see langword="&lt;X509Data&gt;" /> subelement of an XMLDSIG <see langword="&lt;KeyInfo&gt;" />
element. </para>
      </summary>
    </member>
    <member name="M:System.Security.Cryptography.Xml.KeyInfoX509Data.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Security.Cryptography.Xml.KeyInfoX509Data" /> class.</para>
      </summary>
    </member>
    <member name="M:System.Security.Cryptography.Xml.KeyInfoX509Data.#ctor(System.Byte[])">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Security.Cryptography.Xml.KeyInfoX509Data" /> class from
   the specified ASN.1 DER encoding of an X.509v3 certificate.</para>
      </summary>
      <param name="rgbCert">The ASN.1 DER encoding of an <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate" /> from which to initialize the new instance of <see cref="T:System.Security.Cryptography.Xml.KeyInfoX509Data" />.</param>
    </member>
    <member name="M:System.Security.Cryptography.Xml.KeyInfoX509Data.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Security.Cryptography.Xml.KeyInfoX509Data" /> class
   from the specified X.509v3 certificate.</para>
      </summary>
      <param name="cert">The <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate" /> from which to initialize the new instance of <see cref="T:System.Security.Cryptography.Xml.KeyInfoX509Data" />.</param>
    </member>
    <member name="M:System.Security.Cryptography.Xml.KeyInfoX509Data.AddCertificate(System.Security.Cryptography.X509Certificates.X509Certificate)">
      <summary>
        <para> Adds the specified X.509v3 certificate to the <see cref="T:System.Security.Cryptography.Xml.KeyInfoX509Data" />. </para>
      </summary>
      <param name="certificate">The <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate" /> to add to the <see cref="T:System.Security.Cryptography.Xml.KeyInfoX509Data" />.</param>
    </member>
    <member name="M:System.Security.Cryptography.Xml.KeyInfoX509Data.AddSubjectKeyId(System.Byte[])">
      <summary>
        <para> Adds the specified subject key identifier
      (SKI) to the <see cref="T:System.Security.Cryptography.Xml.KeyInfoX509Data" />. </para>
      </summary>
      <param name="subjectKeyId">The SKI to add to the <see cref="T:System.Security.Cryptography.Xml.KeyInfoX509Data" />.</param>
    </member>
    <member name="M:System.Security.Cryptography.Xml.KeyInfoX509Data.AddSubjectName(System.String)">
      <summary>
        <para> Adds the subject name of the entity issued an X.509v3
      certificate to the <see cref="T:System.Security.Cryptography.Xml.KeyInfoX509Data" />. </para>
      </summary>
      <param name="subjectName">The name of the entity to whom an X.509 certificate was issued to add to the <see cref="T:System.Security.Cryptography.Xml.KeyInfoX509Data" />.</param>
    </member>
    <member name="M:System.Security.Cryptography.Xml.KeyInfoX509Data.AddIssuerSerial(System.String,System.String)">
      <summary>
        <para> Adds the specified issuer name and
      serial number pair to the <see cref="T:System.Security.Cryptography.Xml.KeyInfoX509Data" />. </para>
      </summary>
      <param name="issuerName">The issuer name portion of the pair to add to the <see cref="T:System.Security.Cryptography.Xml.KeyInfoX509Data" />.</param>
      <param name=" serialNumber">The serial number portion of the pair to add to the <see cref="T:System.Security.Cryptography.Xml.KeyInfoX509Data" />.</param>
    </member>
    <member name="M:System.Security.Cryptography.Xml.KeyInfoX509Data.GetXml">
      <summary>
        <para> Returns an XML representation of the <see cref="T:System.Security.Cryptography.Xml.KeyInfoX509Data" />.</para>
      </summary>
      <returns>
        <para>An XML representation of the <see cref="T:System.Security.Cryptography.Xml.KeyInfoX509Data" />.</para>
      </returns>
    </member>
    <member name="M:System.Security.Cryptography.Xml.KeyInfoX509Data.LoadXml(System.Xml.XmlElement)">
      <summary>
        <para> Parses the input <see cref="T:System.Xml.XmlElement" /> and configures the internal state
   of the <see cref="T:System.Security.Cryptography.Xml.KeyInfoX509Data" /> to match.</para>
      </summary>
      <param name="element">The <see cref="T:System.Xml.XmlElement" /> specifying the state of the <see cref="T:System.Security.Cryptography.Xml.KeyInfoX509Data" />.</param>
    </member>
    <member name="P:System.Security.Cryptography.Xml.KeyInfoX509Data.Certificates">
      <summary>
        <para> Gets a list of the X.509v3 certificates contained in the <see cref="T:System.Security.Cryptography.Xml.KeyInfoX509Data" />.</para>
      </summary>
    </member>
    <member name="P:System.Security.Cryptography.Xml.KeyInfoX509Data.SubjectKeyIds">
      <summary>
        <para> Gets a list of the subject key identifiers (SKIs) contained
      in the <see cref="T:System.Security.Cryptography.Xml.KeyInfoX509Data" />. </para>
      </summary>
    </member>
    <member name="P:System.Security.Cryptography.Xml.KeyInfoX509Data.SubjectNames">
      <summary>
        <para> Gets a list of the subject names of the entities contained in the
   <see cref="T:System.Security.Cryptography.Xml.KeyInfoX509Data" />. </para>
      </summary>
    </member>
    <member name="P:System.Security.Cryptography.Xml.KeyInfoX509Data.IssuerSerials">
      <summary>
        <para> Gets a list of issuer
      name and serial number pairs contained in the <see cref="T:System.Security.Cryptography.Xml.KeyInfoX509Data" />. </para>
      </summary>
    </member>
    <member name="P:System.Security.Cryptography.Xml.KeyInfoX509Data.CRL">
      <summary>
        <para>Gets or sets the Certificate Revocation List (CRL) 
      contained within the <see cref="T:System.Security.Cryptography.Xml.KeyInfoX509Data" />. </para>
      </summary>
    </member>
    <member name="T:System.Security.Cryptography.Xml.KeyInfoNode">
      <summary>
        <para>Handles <see cref="T:System.Security.Cryptography.Xml.KeyInfo" /> subelements that do not have
   specific implementations or handlers registered on the machine.</para>
      </summary>
    </member>
    <member name="M:System.Security.Cryptography.Xml.KeyInfoNode.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Security.Cryptography.Xml.KeyInfoNode" /> 
class.</para>
      </summary>
    </member>
    <member name="M:System.Security.Cryptography.Xml.KeyInfoNode.#ctor(System.Xml.XmlElement)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Security.Cryptography.Xml.KeyInfoNode" /> class with content taken from the specified 
<see cref="T:System.Xml.XmlElement" />.</para>
      </summary>
      <param name="node">An XML element from which to take the content used to create the new instance of <see cref="T:System.Security.Cryptography.Xml.KeyInfoNode" />.</param>
    </member>
    <member name="M:System.Security.Cryptography.Xml.KeyInfoNode.GetXml">
      <summary>
        <para> Returns an XML representation of the <see cref="T:System.Security.Cryptography.Xml.KeyInfoNode" />.</para>
      </summary>
      <returns>
        <para>An XML representation of the <see cref="T:System.Security.Cryptography.Xml.KeyInfoNode" />.</para>
      </returns>
    </member>
    <member name="M:System.Security.Cryptography.Xml.KeyInfoNode.LoadXml(System.Xml.XmlElement)">
      <summary>
        <para> Parses the input <see cref="T:System.Xml.XmlElement" /> and configures the internal state 
   of the <see cref="T:System.Security.Cryptography.Xml.KeyInfoNode" /> to match.</para>
      </summary>
      <param name="value">The <see cref="T:System.Xml.XmlElement" /> specifying the state of the <see cref="T:System.Security.Cryptography.Xml.KeyInfoNode" />.</param>
    </member>
    <member name="P:System.Security.Cryptography.Xml.KeyInfoNode.Value">
      <summary>
        <para> Gets or sets the XML content of the current <see cref="T:System.Security.Cryptography.Xml.KeyInfoNode" />.</para>
      </summary>
    </member>
    <member name="T:System.Security.Cryptography.Xml.Reference">
      <summary>
        <para> Represents the reference element of an XML
      signature.
      </para>
      </summary>
    </member>
    <member name="M:System.Security.Cryptography.Xml.Reference.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Security.Cryptography.Xml.Reference" /> class with default
   properties.</para>
      </summary>
    </member>
    <member name="M:System.Security.Cryptography.Xml.Reference.#ctor(System.IO.Stream)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Security.Cryptography.Xml.Reference" /> class with the specified 
<see cref="T:System.IO.Stream" />.</para>
      </summary>
      <param name="stream">The <see cref="T:System.IO.Stream" /> with which to initialize the new instance of <see cref="T:System.Security.Cryptography.Xml.Reference" />.</param>
    </member>
    <member name="M:System.Security.Cryptography.Xml.Reference.#ctor(System.String)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Security.Cryptography.Xml.Reference" /> 
class with the specified <see cref="T:System.Uri" />.</para>
      </summary>
      <param name="uri">The <see cref="T:System.Uri" /> with which to initialize the new instance of <see cref="T:System.Security.Cryptography.Xml.Reference" />.</param>
    </member>
    <member name="M:System.Security.Cryptography.Xml.Reference.GetXml">
      <summary>
        <para>Returns the XML representation of the <see cref="T:System.Security.Cryptography.Xml.Reference" />.</para>
      </summary>
      <returns>
        <para>The XML representation of the <see cref="T:System.Security.Cryptography.Xml.Reference" />.</para>
      </returns>
    </member>
    <member name="M:System.Security.Cryptography.Xml.Reference.LoadXml(System.Xml.XmlElement)">
      <summary>
        <para>Loads a <see cref="T:System.Security.Cryptography.Xml.Reference" /> state from an XML element.</para>
      </summary>
      <param name="value">The XML element from which to load the <see cref="T:System.Security.Cryptography.Xml.Reference" /> state.</param>
    </member>
    <member name="M:System.Security.Cryptography.Xml.Reference.AddTransform(System.Security.Cryptography.Xml.Transform)">
      <summary>
        <para>Adds a transform to the list of transforms to be performed on the
      data prior to passing it to the digest algorithm. </para>
      </summary>
      <param name="transform">The transform to be added to the list of transforms. </param>
    </member>
    <member name="P:System.Security.Cryptography.Xml.Reference.Id">
      <summary>
        <para>Gets or sets the ID of the current <see cref="T:System.Security.Cryptography.Xml.Reference" />.</para>
      </summary>
    </member>
    <member name="P:System.Security.Cryptography.Xml.Reference.Uri">
      <summary>
        <para> Gets or sets the <see cref="T:System.Uri" /> of the current
<see cref="T:System.Security.Cryptography.Xml.Reference" />.</para>
      </summary>
    </member>
    <member name="P:System.Security.Cryptography.Xml.Reference.Type">
      <summary>
        <para> 
      Gets or sets the type of the object being signed.
      </para>
      </summary>
    </member>
    <member name="P:System.Security.Cryptography.Xml.Reference.DigestMethod">
      <summary>
        <para> Gets or sets the digest method of the current <see cref="T:System.Security.Cryptography.Xml.Reference" />.</para>
      </summary>
    </member>
    <member name="P:System.Security.Cryptography.Xml.Reference.DigestValue">
      <summary>
        <para> Gets or sets the digest value of the current <see cref="T:System.Security.Cryptography.Xml.Reference" />.</para>
      </summary>
    </member>
    <member name="P:System.Security.Cryptography.Xml.Reference.TransformChain">
      <summary>
        <para>Gets the transform chain of the current <see cref="T:System.Security.Cryptography.Xml.Reference" />. </para>
      </summary>
    </member>
    <member name="T:System.Security.Cryptography.Xml.Signature">
      <summary>
        <para>Represents the signature element of an XML
      signature.</para>
      </summary>
    </member>
    <member name="M:System.Security.Cryptography.Xml.Signature.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Security.Cryptography.Xml.Signature" /> 
class.</para>
      </summary>
    </member>
    <member name="M:System.Security.Cryptography.Xml.Signature.GetXml">
      <summary>
        <para>Returns the XML representation of the <see cref="T:System.Security.Cryptography.Xml.Signature" />.</para>
      </summary>
      <returns>
        <para>The XML representation of the <see cref="T:System.Security.Cryptography.Xml.Signature" />.</para>
      </returns>
    </member>
    <member name="M:System.Security.Cryptography.Xml.Signature.LoadXml(System.Xml.XmlElement)">
      <summary>
        <para>Loads a <see cref="T:System.Security.Cryptography.Xml.Signature" /> state from an XML element.</para>
      </summary>
      <param name="value">The XML element from which to load the <see cref="T:System.Security.Cryptography.Xml.Signature" /> state.</param>
    </member>
    <member name="M:System.Security.Cryptography.Xml.Signature.AddObject(System.Security.Cryptography.Xml.DataObject)">
      <summary>
        <para>Adds a <see cref="T:System.Security.Cryptography.Xml.DataObject" /> to the list
   of objects to be signed.</para>
      </summary>
      <param name="dataObject">The <see cref="T:System.Security.Cryptography.Xml.DataObject" /> to be added to the list of objects to be signed.</param>
    </member>
    <member name="P:System.Security.Cryptography.Xml.Signature.Id">
      <summary>
        <para>Gets or sets the ID of the current <see cref="T:System.Security.Cryptography.Xml.Signature" />.</para>
      </summary>
    </member>
    <member name="P:System.Security.Cryptography.Xml.Signature.SignedInfo">
      <summary>
        <para> Gets or sets the <see cref="T:System.Security.Cryptography.Xml.SignedInfo" /> of the 
   current <see cref="T:System.Security.Cryptography.Xml.Signature" />.
   </para>
      </summary>
    </member>
    <member name="P:System.Security.Cryptography.Xml.Signature.SignatureValue">
      <summary>
        <para> Gets or sets the value of the current <see cref="T:System.Security.Cryptography.Xml.Signature" />.</para>
      </summary>
    </member>
    <member name="P:System.Security.Cryptography.Xml.Signature.KeyInfo">
      <summary>
        <para> Gets or sets the <see cref="T:System.Security.Cryptography.Xml.KeyInfo" /> of the 
   current <see cref="T:System.Security.Cryptography.Xml.Signature" />.
   </para>
      </summary>
    </member>
    <member name="P:System.Security.Cryptography.Xml.Signature.ObjectList">
      <summary>
        <para>Gets or sets a list of objects to be signed.</para>
      </summary>
    </member>
    <member name="T:System.Security.Cryptography.Xml.SignedInfo">
      <summary>
        <para>Contains information about the canonicalization
      algorithm and signature algorithm used for the XML
      signature.</para>
      </summary>
    </member>
    <member name="M:System.Security.Cryptography.Xml.SignedInfo.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Security.Cryptography.Xml.SignedInfo" /> 
class.</para>
      </summary>
    </member>
    <member name="M:System.Security.Cryptography.Xml.SignedInfo.GetEnumerator">
      <summary>
        <para> Returns an enumerator that
      iterates through the collection of references.
      </para>
      </summary>
      <returns>
        <para> An enumerator that
      iterates through the collection of references.
      </para>
      </returns>
    </member>
    <member name="M:System.Security.Cryptography.Xml.SignedInfo.CopyTo(System.Array,System.Int32)">
      <summary>
        <para>Copies the elements of this instance into
      an <see cref="T:System.Array" />,
      starting at a particular index into the array.</para>
      </summary>
      <param name="array">An <see cref="T:System.Array" /> that holds the collection's elements. </param>
      <param name=" index"> The beginning index in the array where the elements are copied. </param>
    </member>
    <member name="M:System.Security.Cryptography.Xml.SignedInfo.GetXml">
      <summary>
        <para>Returns the XML representation of the <see cref="T:System.Security.Cryptography.Xml.SignedInfo" /> instance.</para>
      </summary>
      <returns>
        <para>The XML representation of the <see cref="T:System.Security.Cryptography.Xml.SignedInfo" /> instance.</para>
      </returns>
    </member>
    <member name="M:System.Security.Cryptography.Xml.SignedInfo.LoadXml(System.Xml.XmlElement)">
      <summary>
        <para>Loads a <see cref="T:System.Security.Cryptography.Xml.SignedInfo" /> state from an XML element.</para>
      </summary>
      <param name="value">The XML element from which to load the <see cref="T:System.Security.Cryptography.Xml.SignedInfo" /> state.</param>
    </member>
    <member name="M:System.Security.Cryptography.Xml.SignedInfo.AddReference(System.Security.Cryptography.Xml.Reference)">
      <summary>
        <para>Adds a <see cref="T:System.Security.Cryptography.Xml.Reference" /> to the list
   of references to be digested and signed.</para>
      </summary>
      <param name="reference">The reference to be added to the list of references. </param>
    </member>
    <member name="P:System.Security.Cryptography.Xml.SignedInfo.Count">
      <summary>
        <para>Gets the number of references in the current <see cref="T:System.Security.Cryptography.Xml.SignedInfo" />.</para>
      </summary>
    </member>
    <member name="P:System.Security.Cryptography.Xml.SignedInfo.IsReadOnly">
      <summary>
        <para> Gets a value indicating whether the collection is
      read-only.</para>
      </summary>
    </member>
    <member name="P:System.Security.Cryptography.Xml.SignedInfo.IsSynchronized">
      <summary>
        <para> Gets a value indicating whether the collection is
      synchronized.</para>
      </summary>
    </member>
    <member name="P:System.Security.Cryptography.Xml.SignedInfo.SyncRoot">
      <summary>
        <para> Gets an object to
      use for synchronization.</para>
      </summary>
    </member>
    <member name="P:System.Security.Cryptography.Xml.SignedInfo.Id">
      <summary>
        <para>Gets or sets the ID of the current <see cref="T:System.Security.Cryptography.Xml.SignedInfo" />.</para>
      </summary>
    </member>
    <member name="P:System.Security.Cryptography.Xml.SignedInfo.CanonicalizationMethod">
      <summary>
        <para> Gets or sets the canonicalization algorithm that is used before
      signing for the current <see cref="T:System.Security.Cryptography.Xml.SignedInfo" />.
      </para>
      </summary>
    </member>
    <member name="P:System.Security.Cryptography.Xml.SignedInfo.SignatureMethod">
      <summary>
        <para> Gets or sets the name of the algorithm used for 
      signature generation and validation for the current <see cref="T:System.Security.Cryptography.Xml.SignedInfo" />.
      </para>
      </summary>
    </member>
    <member name="P:System.Security.Cryptography.Xml.SignedInfo.SignatureLength">
      <summary>
        <para>Gets or sets the length of the signature for the current 
 <see cref="T:System.Security.Cryptography.Xml.SignedInfo" />.</para>
      </summary>
    </member>
    <member name="P:System.Security.Cryptography.Xml.SignedInfo.References">
      <summary>
        <para>Gets a list of the <see cref="T:System.Security.Cryptography.Xml.Reference" /> elements of the current 
<see cref="T:System.Security.Cryptography.Xml.SignedInfo" />.</para>
      </summary>
    </member>
    <member name="T:System.Security.Cryptography.Xml.SignedXml">
      <summary>
        <para> Provides a wrapper on the core
      XML signature object to facilitate creating XML signatures.
      </para>
      </summary>
    </member>
    <member name="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigNamespaceUrl">
      <summary>
        <para>Specifies a URL that points to the standard namespace 
      for XML digital signatures. This field is constant.</para>
      </summary>
    </member>
    <member name="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigMinimalCanonicalizationUrl">
      <summary>
        <para>Specifies a URL that points to the standard minimal 
      canonicalization algorithm for XML digital signatures. This field is constant.</para>
      </summary>
    </member>
    <member name="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigCanonicalizationUrl">
      <summary>
        <para>Specifies a URL that points to the standard 
      canonicalization algorithm for XML digital signatures. This field is constant.</para>
      </summary>
    </member>
    <member name="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigCanonicalizationWithCommentsUrl">
      <summary>
        <para>Specifies a URL that points to the standard 
      canonicalization algorithm for XML digital signatures and includes comments.
      This field is constant.</para>
      </summary>
    </member>
    <member name="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA1Url">
      <summary>
        <para>Specifies a URL that points to the standard <see cref="T:System.Security.Cryptography.SHA1" /> digest method for XML digital 
   signatures. This field is constant.</para>
      </summary>
    </member>
    <member name="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl">
      <summary>
        <para>Specifies a URL that points to the standard <see cref="T:System.Security.Cryptography.DSA" /> algorithm for XML digital 
   signatures. This field is constant.</para>
      </summary>
    </member>
    <member name="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url">
      <summary>
        <para>Specifies a URL that points to the standard <see cref="T:System.Security.Cryptography.RSA" /> signature method for XML digital 
   signatures. This field is constant.</para>
      </summary>
    </member>
    <member name="F:System.Security.Cryptography.Xml.SignedXml.XmlDsigHMACSHA1Url">
      <summary>
        <para>Specifies a URL that points to the standard <see cref="T:System.Security.Cryptography.HMACSHA1" /> algorithm for XML digital 
   signatures. This field is constant.</para>
      </summary>
    </member>
    <member name="M:System.Security.Cryptography.Xml.SignedXml.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Security.Cryptography.Xml.SignedXml" />
class.</para>
      </summary>
    </member>
    <member name="M:System.Security.Cryptography.Xml.SignedXml.#ctor(System.Xml.XmlDocument)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Security.Cryptography.Xml.SignedXml" /> class from the specified XML document.</para>
      </summary>
      <param name="document">The <see cref="T:System.Xml.XmlDocument" /> with which to initialize the new instance of <see cref="T:System.Security.Cryptography.Xml.SignedXml" />.</param>
    </member>
    <member name="M:System.Security.Cryptography.Xml.SignedXml.#ctor(System.Xml.XmlElement)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Security.Cryptography.Xml.SignedXml" /> class from the specified 
<see cref="T:System.Xml.XmlElement" /> .</para>
      </summary>
      <param name="elem">The <see cref="T:System.Xml.XmlElement" /> from which to initialize the new instance.</param>
    </member>
    <member name="M:System.Security.Cryptography.Xml.SignedXml.GetXml">
      <summary>
        <para>Returns the XML representation of the <see cref="T:System.Security.Cryptography.Xml.SignedXml" />.</para>
      </summary>
      <returns>
        <para>The XML representation of the <see cref="T:System.Security.Cryptography.Xml.Signature" />.</para>
      </returns>
    </member>
    <member name="M:System.Security.Cryptography.Xml.SignedXml.LoadXml(System.Xml.XmlElement)">
      <summary>
        <para>Loads a <see cref="T:System.Security.Cryptography.Xml.SignedXml" /> state from an XML element.</para>
      </summary>
      <param name="value">The XML element from which to load the <see cref="T:System.Security.Cryptography.Xml.SignedXml" /> state.</param>
    </member>
    <member name="M:System.Security.Cryptography.Xml.SignedXml.AddReference(System.Security.Cryptography.Xml.Reference)">
      <summary>
        <para>Adds a <see cref="T:System.Security.Cryptography.Xml.Reference" /> to the list of references
   to be digested and signed.</para>
      </summary>
      <param name="reference">The <see cref="T:System.Security.Cryptography.Xml.Reference" /> to be added to the list of references to be digested and signed. </param>
    </member>
    <member name="M:System.Security.Cryptography.Xml.SignedXml.AddObject(System.Security.Cryptography.Xml.DataObject)">
      <summary>
        <para>Adds a <see cref="T:System.Security.Cryptography.Xml.DataObject" /> to the list of objects to be signed.</para>
      </summary>
      <param name="dataObject">The <see cref="T:System.Security.Cryptography.Xml.DataObject" /> to be added to the list of objects to be signed.</param>
    </member>
    <member name="M:System.Security.Cryptography.Xml.SignedXml.CheckSignature">
      <summary>
        <para> 
      Determines whether the <see cref="P:System.Security.Cryptography.Xml.SignedXml.Signature" /> verifies using the
      public key in the
      signature.</para>
      </summary>
      <returns>
        <para>
          <see langword="true" /> if the 
<see cref="P:System.Security.Cryptography.Xml.SignedXml.Signature" /> verifies; 
   otherwise, <see langword="false" />.</para>
      </returns>
    </member>
    <member name="M:System.Security.Cryptography.Xml.SignedXml.CheckSignatureReturningKey(System.Security.Cryptography.AsymmetricAlgorithm@)">
      <summary>
        <para>Determines whether the <see cref="P:System.Security.Cryptography.Xml.SignedXml.Signature" />
verifies using the public key in the signature. </para>
      </summary>
      <param name="signingKey"> When this method returns, contains the implementation of <see cref="T:System.Security.Cryptography.AsymmetricAlgorithm" /> that holds the public key in the signature. This parameter is passed uninitialized.</param>
      <returns>
        <para>
          <see langword="true" /> if the <see cref="P:System.Security.Cryptography.Xml.SignedXml.Signature" />
verifies using the public key in the signature; otherwise,
<see langword="false" />.</para>
      </returns>
    </member>
    <member name="M:System.Security.Cryptography.Xml.SignedXml.CheckSignature(System.Security.Cryptography.AsymmetricAlgorithm)">
      <summary>
        <para>Determines whether the <see cref="P:System.Security.Cryptography.Xml.SignedXml.Signature" /> verifies for the specified key.</para>
      </summary>
      <param name="key">The implementation of <see cref="T:System.Security.Cryptography.AsymmetricAlgorithm" /> that holds the key to be used to verify the <see cref="P:System.Security.Cryptography.Xml.SignedXml.Signature" />.</param>
      <returns>
        <para>
          <see langword="true" /> if the
<see cref="P:System.Security.Cryptography.Xml.SignedXml.Signature" /> verifies for the 
   specified key; otherwise, <see langword="false" />.</para>
      </returns>
    </member>
    <member name="M:System.Security.Cryptography.Xml.SignedXml.CheckSignature(System.Security.Cryptography.KeyedHashAlgorithm)">
      <summary>
        <para>Determines whether the <see cref="P:System.Security.Cryptography.Xml.SignedXml.Signature" />
verifies for the specified message authentication code (MAC) algorithm.</para>
      </summary>
      <param name="macAlg"> The implementation of <see cref="T:System.Security.Cryptography.KeyedHashAlgorithm" /> that holds the MAC to be used to verify the <see cref="P:System.Security.Cryptography.Xml.SignedXml.Signature" />.</param>
      <returns>
        <para>
          <see langword="true" /> if the <see cref="P:System.Security.Cryptography.Xml.SignedXml.Signature" />
verifies for the specified MAC; otherwise, <see langword="false" />.</para>
      </returns>
    </member>
    <member name="M:System.Security.Cryptography.Xml.SignedXml.ComputeSignature">
      <summary>
        <para>Computes the signature.</para>
      </summary>
    </member>
    <member name="M:System.Security.Cryptography.Xml.SignedXml.ComputeSignature(System.Security.Cryptography.KeyedHashAlgorithm)">
      <summary>
        <para>Computes the signature using the specified message
      authentication code (MAC) algorithm.</para>
      </summary>
      <param name="macAlg">The instance of an implementation of <see cref="T:System.Security.Cryptography.KeyedHashAlgorithm" /> that holds the MAC to be used to compute the <see cref="P:System.Security.Cryptography.Xml.SignedXml.Signature" />.</param>
    </member>
    <member name="M:System.Security.Cryptography.Xml.SignedXml.GetPublicKey">
      <summary>
        <para> 
      Returns the public key of
      the signature.</para>
      </summary>
      <returns>
        <para>An instance of an implementation of <see cref="T:System.Security.Cryptography.AsymmetricAlgorithm" /> containing the public key of the 
   signature, or <see langword="null" />
   if the key cannot be found.</para>
      </returns>
    </member>
    <member name="M:System.Security.Cryptography.Xml.SignedXml.GetIdElement(System.Xml.XmlDocument,System.String)">
      <summary>
        <para>Returns the <see cref="T:System.Xml.XmlElement" /> with the specified ID from the 
 specified <see cref="T:System.Xml.XmlDocument" />.</para>
      </summary>
      <param name="document">The <see cref="T:System.Xml.XmlDocument" /> from which to retrieve the <see cref="T:System.Xml.XmlElement" />.</param>
      <param name=" idValue">The ID of the <see cref="T:System.Xml.XmlElement" /> to retrieve from the <see cref="T:System.Xml.XmlDocument" />.</param>
      <returns>
        <para>The <see cref="T:System.Xml.XmlElement" /> with the specified ID from the specified <see cref="T:System.Xml.XmlDocument" />, or 
<see langword="null" /> if it could not be found.</para>
      </returns>
    </member>
    <member name="P:System.Security.Cryptography.Xml.SignedXml.SigningKey">
      <summary>
        <para>Gets or sets the asymmetric algorithm key used for 
      signing the <see cref="T:System.Security.Cryptography.Xml.SignedXml" />.</para>
      </summary>
    </member>
    <member name="P:System.Security.Cryptography.Xml.SignedXml.Signature">
      <summary>
        <para> Gets the <see cref="T:System.Security.Cryptography.Xml.Signature" /> of the 
   current <see cref="T:System.Security.Cryptography.Xml.SignedXml" />.
   </para>
      </summary>
    </member>
    <member name="P:System.Security.Cryptography.Xml.SignedXml.SignedInfo">
      <summary>
        <para> Gets the <see cref="T:System.Security.Cryptography.Xml.SignedInfo" /> of the 
   current <see cref="T:System.Security.Cryptography.Xml.SignedXml" />.
   </para>
      </summary>
    </member>
    <member name="P:System.Security.Cryptography.Xml.SignedXml.SignatureMethod">
      <summary>
        <para> Gets the signature method of the current <see cref="T:System.Security.Cryptography.Xml.SignedXml" />.</para>
      </summary>
    </member>
    <member name="P:System.Security.Cryptography.Xml.SignedXml.SignatureLength">
      <summary>
        <para> Gets the length of the signature for the current
 <see cref="T:System.Security.Cryptography.Xml.SignedXml" />.</para>
      </summary>
    </member>
    <member name="P:System.Security.Cryptography.Xml.SignedXml.SignatureValue">
      <summary>
        <para> Gets the signature value of the current <see cref="T:System.Security.Cryptography.Xml.SignedXml" />.</para>
      </summary>
    </member>
    <member name="P:System.Security.Cryptography.Xml.SignedXml.KeyInfo">
      <summary>
        <para>Gets or sets the <see cref="T:System.Security.Cryptography.Xml.KeyInfo" /> of the 
   current <see cref="T:System.Security.Cryptography.Xml.SignedXml" />.</para>
      </summary>
    </member>
    <member name="T:System.Security.Cryptography.Xml.TransformChain">
      <summary>
        <para>Defines an ordered list of <see cref="T:System.Security.Cryptography.Xml.Transform" /> objects that is applied to the unsigned content
   prior to digest calculation. </para>
      </summary>
    </member>
    <member name="M:System.Security.Cryptography.Xml.TransformChain.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Security.Cryptography.Xml.TransformChain" /> class.</para>
      </summary>
    </member>
    <member name="M:System.Security.Cryptography.Xml.TransformChain.Add(System.Security.Cryptography.Xml.Transform)">
      <summary>
        <para> Adds a transform to the list of
      transforms to be applied to the unsigned content prior to digest calculation.</para>
      </summary>
      <param name="transform">The transform to be added to the list of transforms.</param>
    </member>
    <member name="M:System.Security.Cryptography.Xml.TransformChain.GetEnumerator">
      <summary>
        <para>Returns an enumerator of the transforms in the <see cref="T:System.Security.Cryptography.Xml.TransformChain" />. </para>
      </summary>
      <returns>
        <para>An enumerator of the transforms in the <see cref="T:System.Security.Cryptography.Xml.TransformChain" />. </para>
      </returns>
    </member>
    <member name="P:System.Security.Cryptography.Xml.TransformChain.Count">
      <summary>
        <para>Gets the number of transforms in the <see cref="T:System.Security.Cryptography.Xml.TransformChain" />.</para>
      </summary>
    </member>
    <member name="P:System.Security.Cryptography.Xml.TransformChain.Item(System.Int32)">
      <summary>
        <para>Gets the transform at the specified index in the <see cref="T:System.Security.Cryptography.Xml.TransformChain" />.</para>
      </summary>
      <param name="index">The index into the <see cref="T:System.Security.Cryptography.Xml.TransformChain" /> that specifies which transform to return.</param>
    </member>
    <member name="T:System.Security.Cryptography.Xml.Transform">
      <summary>
        <para>Represents the abstract base class from which
      all <see langword="&lt;Transform&gt;" /> elements that can
   be used in an XML digital signature derive.</para>
      </summary>
    </member>
    <member name="M:System.Security.Cryptography.Xml.Transform.#ctor">
      <summary>
        <para>Initializes a new instance of <see cref="T:System.Security.Cryptography.Xml.Transform" />.</para>
      </summary>
    </member>
    <member name="M:System.Security.Cryptography.Xml.Transform.GetXml">
      <summary>
        <para>Returns the XML representation of the current <see cref="T:System.Security.Cryptography.Xml.Transform" />.</para>
      </summary>
      <returns>
        <para>The XML representation of the current <see cref="T:System.Security.Cryptography.Xml.Transform" />.</para>
      </returns>
    </member>
    <member name="M:System.Security.Cryptography.Xml.Transform.LoadInnerXml(System.Xml.XmlNodeList)">
      <summary>
        <para>When overridden in a derived class, parses the
      specified <see cref="T:System.Xml.XmlNodeList" /> as transform-specific content of a <see langword="&lt;Transform&gt;" /> element and
   configures the internal state of the current <see cref="T:System.Security.Cryptography.Xml.Transform" /> to match the <see langword="&lt;Transform&gt;" /> element.</para>
      </summary>
      <param name="nodeList">An <see cref="T:System.Xml.XmlNodeList" /> specifying transform-specific content for the current <see cref="T:System.Security.Cryptography.Xml.Transform" />.</param>
    </member>
    <member name="M:System.Security.Cryptography.Xml.Transform.GetInnerXml">
      <summary>
        <para>When overridden in a derived class, returns an XML
      representation of the parameters of the <see cref="T:System.Security.Cryptography.Xml.Transform" /> suitable to be included as
      subelements of an XMLDSIG <see langword="&lt;Transform&gt;" /> element.</para>
      </summary>
      <returns>
        <para>A list of the XML nodes representing the
      transform-specific content needed to describe the current <see cref="T:System.Security.Cryptography.Xml.Transform" /> in an XMLDSIG <see langword="&lt;Transform&gt;" /> element.</para>
      </returns>
    </member>
    <member name="M:System.Security.Cryptography.Xml.Transform.LoadInput(System.Object)">
      <summary>
        <para>When overridden in a derived class, loads the specified input
      into the current <see cref="T:System.Security.Cryptography.Xml.Transform" />.</para>
      </summary>
      <param name="obj">The input to load into the current <see cref="T:System.Security.Cryptography.Xml.Transform" />.</param>
    </member>
    <member name="M:System.Security.Cryptography.Xml.Transform.GetOutput">
      <summary>
        <para> When overridden in a derived class, returns the output of
      the current <see cref="T:System.Security.Cryptography.Xml.Transform" />.</para>
      </summary>
      <returns>
        <para> The output of
      the current <see cref="T:System.Security.Cryptography.Xml.Transform" />.</para>
      </returns>
    </member>
    <member name="M:System.Security.Cryptography.Xml.Transform.GetOutput(System.Type)">
      <summary>
        <para> When overridden in a derived class, returns the output of
      the current <see cref="T:System.Security.Cryptography.Xml.Transform" /> of the specified type.</para>
      </summary>
      <param name="type"> The type of the output to return. This must be one of the types in <see cref="P:System.Security.Cryptography.Xml.Transform.OutputTypes" />.</param>
      <returns>
        <para>The output of the current <see cref="T:System.Security.Cryptography.Xml.Transform" /> as an object of the specified
   type.</para>
      </returns>
    </member>
    <member name="P:System.Security.Cryptography.Xml.Transform.Algorithm">
      <summary>
        <para> Gets or sets the URL that identifies the algorithm
      performed by this transform.
      </para>
      </summary>
    </member>
    <member name="P:System.Security.Cryptography.Xml.Transform.InputTypes">
      <summary>
        <para>When overridden in a derived class, gets an array of 
      types that are valid inputs to the <see cref="M:System.Security.Cryptography.Xml.Transform.LoadInput(System.Object)" /> method of the current <see cref="T:System.Security.Cryptography.Xml.Transform" />.</para>
      </summary>
    </member>
    <member name="P:System.Security.Cryptography.Xml.Transform.OutputTypes">
      <summary>
        <para>When overridden in a derived class, gets an array of 
      types that are possible outputs from the <see cref="M:System.Security.Cryptography.Xml.Transform.GetOutput" /> methods of the current <see cref="T:System.Security.Cryptography.Xml.Transform" />.</para>
      </summary>
    </member>
    <member name="T:System.Security.Cryptography.Xml.XmlDsigC14NTransform">
      <summary>
        <para>Represents the C14N XML canonicalization transform for a digital signature as defined by
      the W3C, without comments.</para>
      </summary>
    </member>
    <member name="M:System.Security.Cryptography.Xml.XmlDsigC14NTransform.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Security.Cryptography.Xml.XmlDsigC14NTransform" /> class.</para>
      </summary>
    </member>
    <member name="M:System.Security.Cryptography.Xml.XmlDsigC14NTransform.#ctor(System.Boolean)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Security.Cryptography.Xml.XmlDsigC14NTransform" /> class with comments, if specified.</para>
      </summary>
      <param name="includeComments">
        <see langword="true" /> to include comments; otherwise, <see langword="false" />.</param>
    </member>
    <member name="M:System.Security.Cryptography.Xml.XmlDsigC14NTransform.LoadInnerXml(System.Xml.XmlNodeList)">
      <summary>
        <para> Parses the specified <see cref="T:System.Xml.XmlNodeList" /> as transform-specific content of a
      <see langword="&lt;Transform&gt;" /> element and
   configures the internal state of the current <see cref="T:System.Security.Cryptography.Xml.XmlDsigC14NTransform" /> to match the
      <see langword="&lt;Transform&gt;" />
   element.</para>
      </summary>
      <param name="nodeList">An <see cref="T:System.Xml.XmlNodeList" /> to load into the current <see cref="T:System.Security.Cryptography.Xml.XmlDsigC14NTransform" />.</param>
    </member>
    <member name="M:System.Security.Cryptography.Xml.XmlDsigC14NTransform.GetInnerXml">
      <summary>
        <para> Returns an XML representation of
      the transform-specific content to be
      included in an XMLDSIG <see langword="&lt;Transform&gt;" /> element.</para>
      </summary>
      <returns>
        <para>Always <see langword="null" />.</para>
      </returns>
    </member>
    <member name="M:System.Security.Cryptography.Xml.XmlDsigC14NTransform.LoadInput(System.Object)">
      <summary>
        <para> Loads the specified input
      into the current <see cref="T:System.Security.Cryptography.Xml.XmlDsigC14NTransform" />.</para>
      </summary>
      <param name="obj">The input to load into the current <see cref="T:System.Security.Cryptography.Xml.XmlDsigC14NTransform" />.</param>
    </member>
    <member name="M:System.Security.Cryptography.Xml.XmlDsigC14NTransform.GetOutput">
      <summary>
        <para> Returns the output of
      the current <see cref="T:System.Security.Cryptography.Xml.XmlDsigC14NTransform" />.</para>
      </summary>
      <returns>
        <para> The output of
      the current <see cref="T:System.Security.Cryptography.Xml.XmlDsigC14NTransform" />.</para>
      </returns>
    </member>
    <member name="M:System.Security.Cryptography.Xml.XmlDsigC14NTransform.GetOutput(System.Type)">
      <summary>
        <para> Returns the output of
      the current <see cref="T:System.Security.Cryptography.Xml.XmlDsigC14NTransform" />
      of type
   <see cref="T:System.IO.Stream" />.</para>
      </summary>
      <param name="type">The type of the output to return. <see cref="T:System.IO.Stream" /> is the only valid type for this parameter.</param>
      <returns>
        <para>The output of the current <see cref="T:System.Security.Cryptography.Xml.XmlDsigC14NTransform" /> of
   type
<see cref="T:System.IO.Stream" />.</para>
      </returns>
    </member>
    <member name="P:System.Security.Cryptography.Xml.XmlDsigC14NTransform.InputTypes">
      <summary>
        <para> Gets an array of types
      that are valid inputs to the <see cref="M:System.Security.Cryptography.Xml.XmlDsigC14NTransform.LoadInput(System.Object)" /> method
      of the current <see cref="T:System.Security.Cryptography.Xml.XmlDsigC14NTransform" />.</para>
      </summary>
    </member>
    <member name="P:System.Security.Cryptography.Xml.XmlDsigC14NTransform.OutputTypes">
      <summary>
        <para> Gets an array of
      types that are possible outputs from the <see cref="M:System.Security.Cryptography.Xml.XmlDsigC14NTransform.GetOutput" /> methods of the current <see cref="T:System.Security.Cryptography.Xml.XmlDsigC14NTransform" />.</para>
      </summary>
    </member>
    <member name="T:System.Security.Cryptography.Xml.XmlDsigC14NWithCommentsTransform">
      <summary>
        <para>Represents the C14N XML canonicalization transform for a digital signature as defined by
      the W3C, with comments.</para>
      </summary>
    </member>
    <member name="M:System.Security.Cryptography.Xml.XmlDsigC14NWithCommentsTransform.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Security.Cryptography.Xml.XmlDsigC14NWithCommentsTransform" /> class.</para>
      </summary>
    </member>
    <member name="T:System.Security.Cryptography.Xml.XmlDsigBase64Transform">
      <summary>
        <para> Represents the <see langword="Base64" /> 
decoding transformation as defined in
Section 6.6.2 of
the XMLDSIG specification. </para>
      </summary>
    </member>
    <member name="M:System.Security.Cryptography.Xml.XmlDsigBase64Transform.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Security.Cryptography.Xml.XmlDsigBase64Transform" /> class.</para>
      </summary>
    </member>
    <member name="M:System.Security.Cryptography.Xml.XmlDsigBase64Transform.LoadInnerXml(System.Xml.XmlNodeList)">
      <summary>
        <para> Parses the specified <see cref="T:System.Xml.XmlNodeList" /> as transform-specific content of a
      <see langword="&lt;Transform&gt;" /> element and
   configures the internal state of the current <see cref="T:System.Security.Cryptography.Xml.XmlDsigBase64Transform" /> to match the
      <see langword="&lt;Transform&gt;" />
   element.</para>
      </summary>
      <param name="nodeList">An <see cref="T:System.Xml.XmlNodeList" /> to load into the current <see cref="T:System.Security.Cryptography.Xml.XmlDsigBase64Transform" />.</param>
    </member>
    <member name="M:System.Security.Cryptography.Xml.XmlDsigBase64Transform.GetInnerXml">
      <summary>
        <para> Returns an XML representation of
      the transform-specific content to be
      included in an XMLDSIG <see langword="&lt;Transform&gt;" /> element.</para>
      </summary>
      <returns>
        <para>Always <see langword="null" />.</para>
      </returns>
    </member>
    <member name="M:System.Security.Cryptography.Xml.XmlDsigBase64Transform.LoadInput(System.Object)">
      <summary>
        <para> Loads the specified input
      into the current <see cref="T:System.Security.Cryptography.Xml.XmlDsigBase64Transform" />.</para>
      </summary>
      <param name="obj">The input to load into the current <see cref="T:System.Security.Cryptography.Xml.XmlDsigBase64Transform" />.</param>
    </member>
    <member name="M:System.Security.Cryptography.Xml.XmlDsigBase64Transform.GetOutput">
      <summary>
        <para> Returns the output of
      the current <see cref="T:System.Security.Cryptography.Xml.XmlDsigBase64Transform" />.</para>
      </summary>
      <returns>
        <para> The output of
      the current <see cref="T:System.Security.Cryptography.Xml.XmlDsigBase64Transform" />.</para>
      </returns>
    </member>
    <member name="M:System.Security.Cryptography.Xml.XmlDsigBase64Transform.GetOutput(System.Type)">
      <summary>
        <para> Returns the output of
      the current <see cref="T:System.Security.Cryptography.Xml.XmlDsigBase64Transform" />
      of type
      <see cref="T:System.IO.Stream" />.</para>
      </summary>
      <param name="type">The type of the output to return. <see cref="T:System.IO.Stream" /> is the only valid type for this parameter.</param>
      <returns>
        <para>The output of the current <see cref="T:System.Security.Cryptography.Xml.XmlDsigBase64Transform" /> of
type
<see cref="T:System.IO.Stream" />.</para>
      </returns>
    </member>
    <member name="P:System.Security.Cryptography.Xml.XmlDsigBase64Transform.InputTypes">
      <summary>
        <para> Gets an array of types
      that are valid inputs to the <see cref="M:System.Security.Cryptography.Xml.XmlDsigBase64Transform.LoadInput(System.Object)" /> method
      of the current <see cref="T:System.Security.Cryptography.Xml.XmlDsigBase64Transform" />.</para>
      </summary>
    </member>
    <member name="P:System.Security.Cryptography.Xml.XmlDsigBase64Transform.OutputTypes">
      <summary>
        <para> Gets an array of
      types that are possible outputs from the <see cref="M:System.Security.Cryptography.Xml.XmlDsigBase64Transform.GetOutput" /> methods of the current <see cref="T:System.Security.Cryptography.Xml.XmlDsigBase64Transform" />.</para>
      </summary>
    </member>
    <member name="T:System.Security.Cryptography.Xml.XmlDsigXPathTransform">
      <summary>
        <para>Represents the XPath transform for a digital signature as defined by the W3C. </para>
      </summary>
    </member>
    <member name="M:System.Security.Cryptography.Xml.XmlDsigXPathTransform.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Security.Cryptography.Xml.XmlDsigXPathTransform" /> class.</para>
      </summary>
    </member>
    <member name="M:System.Security.Cryptography.Xml.XmlDsigXPathTransform.LoadInnerXml(System.Xml.XmlNodeList)">
      <summary>
        <para> Parses the specified <see cref="T:System.Xml.XmlNodeList" /> as transform-specific content of a
      <see langword="&lt;Transform&gt;" /> element and
   configures the internal state of the current <see cref="T:System.Security.Cryptography.Xml.XmlDsigXPathTransform" /> to match the
      <see langword="&lt;Transform&gt;" />
   element.</para>
      </summary>
      <param name="nodeList">An <see cref="T:System.Xml.XmlNodeList" /> to load into the current <see cref="T:System.Security.Cryptography.Xml.XmlDsigXPathTransform" />.</param>
    </member>
    <member name="M:System.Security.Cryptography.Xml.XmlDsigXPathTransform.GetInnerXml">
      <summary>
        <para> Returns an XML representation of the transform-specific
      content to be included in an XMLDSIG <see langword="&lt;Transform&gt;" /> element.</para>
      </summary>
      <returns>
        <para>A list of the XML nodes representing the
      transform-specific content needed to describe the current <see cref="T:System.Security.Cryptography.Xml.XmlDsigXPathTransform" /> in an XMLDSIG <see langword="&lt;Transform&gt;" /> element.</para>
      </returns>
    </member>
    <member name="M:System.Security.Cryptography.Xml.XmlDsigXPathTransform.LoadInput(System.Object)">
      <summary>
        <para> Loads the specified input
      into the current <see cref="T:System.Security.Cryptography.Xml.XmlDsigXPathTransform" />.</para>
      </summary>
      <param name="obj">The input to load into the current <see cref="T:System.Security.Cryptography.Xml.XmlDsigXPathTransform" />.</param>
    </member>
    <member name="M:System.Security.Cryptography.Xml.XmlDsigXPathTransform.GetOutput">
      <summary>
        <para> Returns the output of
      the current <see cref="T:System.Security.Cryptography.Xml.XmlDsigXPathTransform" />.</para>
      </summary>
      <returns>
        <para> The output of
      the current <see cref="T:System.Security.Cryptography.Xml.XmlDsigXPathTransform" />.</para>
      </returns>
    </member>
    <member name="M:System.Security.Cryptography.Xml.XmlDsigXPathTransform.GetOutput(System.Type)">
      <summary>
        <para> Returns the output of
      the current <see cref="T:System.Security.Cryptography.Xml.XmlDsigXPathTransform" />
      of type
      <see cref="T:System.Xml.XmlNodeList" />.</para>
      </summary>
      <param name="type">The type of the output to return. <see cref="T:System.Xml.XmlNodeList" /> is the only valid type for this parameter.</param>
      <returns>
        <para>The output of the current <see cref="T:System.Security.Cryptography.Xml.XmlDsigXPathTransform" /> of
type
<see cref="T:System.Xml.XmlNodeList" />.</para>
      </returns>
    </member>
    <member name="P:System.Security.Cryptography.Xml.XmlDsigXPathTransform.InputTypes">
      <summary>
        <para> Gets an array of types
      that are valid inputs to the <see cref="M:System.Security.Cryptography.Xml.XmlDsigXPathTransform.LoadInput(System.Object)" /> method
      of the current <see cref="T:System.Security.Cryptography.Xml.XmlDsigXPathTransform" />.</para>
      </summary>
    </member>
    <member name="P:System.Security.Cryptography.Xml.XmlDsigXPathTransform.OutputTypes">
      <summary>
        <para> Gets an array of
      types that are possible outputs from the <see cref="M:System.Security.Cryptography.Xml.XmlDsigXPathTransform.GetOutput" /> methods of the current <see cref="T:System.Security.Cryptography.Xml.XmlDsigXPathTransform" />.</para>
      </summary>
    </member>
    <member name="T:System.Security.Cryptography.Xml.XmlDsigXsltTransform">
      <summary>
        <para> Represents the XSLT transform for a digital signature as defined
      by the W3C. </para>
      </summary>
    </member>
    <member name="M:System.Security.Cryptography.Xml.XmlDsigXsltTransform.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Security.Cryptography.Xml.XmlDsigXsltTransform" /> class.</para>
      </summary>
    </member>
    <member name="M:System.Security.Cryptography.Xml.XmlDsigXsltTransform.#ctor(System.Boolean)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Security.Cryptography.Xml.XmlDsigXsltTransform" /> class with comments, if specified.</para>
      </summary>
      <param name="includeComments">
        <see langword="true" /> to include comments; otherwise, <see langword="false" />.</param>
    </member>
    <member name="M:System.Security.Cryptography.Xml.XmlDsigXsltTransform.LoadInnerXml(System.Xml.XmlNodeList)">
      <summary>
        <para> Parses the specified <see cref="T:System.Xml.XmlNodeList" /> as transform-specific content of a
      <see langword="&lt;Transform&gt;" /> element and
   configures the internal state of the current <see cref="T:System.Security.Cryptography.Xml.XmlDsigXsltTransform" /> to match the
      <see langword="&lt;Transform&gt;" />
   element.</para>
      </summary>
      <param name="nodeList">An <see cref="T:System.Xml.XmlNodeList" /> to load into the current <see cref="T:System.Security.Cryptography.Xml.XmlDsigXsltTransform" />.</param>
    </member>
    <member name="M:System.Security.Cryptography.Xml.XmlDsigXsltTransform.GetInnerXml">
      <summary>
        <para> Returns an XML representation of
      the transform-specific content to be
      included in an XMLDSIG <see langword="&lt;Transform&gt;" /> element.</para>
      </summary>
      <returns>
        <para>A list of the XML nodes representing the
      transform-specific content needed to describe the current <see cref="T:System.Security.Cryptography.Xml.XmlDsigXsltTransform" /> in an XMLDSIG <see langword="&lt;Transform&gt;" /> element.</para>
      </returns>
    </member>
    <member name="M:System.Security.Cryptography.Xml.XmlDsigXsltTransform.LoadInput(System.Object)">
      <summary>
        <para> Loads the specified input
      into the current <see cref="T:System.Security.Cryptography.Xml.XmlDsigXsltTransform" />.</para>
      </summary>
      <param name="obj">The input to load into the current <see cref="T:System.Security.Cryptography.Xml.XmlDsigXsltTransform" />.</param>
    </member>
    <member name="M:System.Security.Cryptography.Xml.XmlDsigXsltTransform.GetOutput">
      <summary>
        <para> Returns the output of
      the current <see cref="T:System.Security.Cryptography.Xml.XmlDsigXsltTransform" />.</para>
      </summary>
      <returns>
        <para> The output of
      the current <see cref="T:System.Security.Cryptography.Xml.XmlDsigXsltTransform" />.</para>
      </returns>
    </member>
    <member name="M:System.Security.Cryptography.Xml.XmlDsigXsltTransform.GetOutput(System.Type)">
      <summary>
        <para> Returns the output of
      the current <see cref="T:System.Security.Cryptography.Xml.XmlDsigXsltTransform" />
      of type
      <see cref="T:System.IO.Stream" />.</para>
      </summary>
      <param name="type">The type of the output to return. <see cref="T:System.IO.Stream" /> is the only valid type for this parameter.</param>
      <returns>
        <para>The output of the current <see cref="T:System.Security.Cryptography.Xml.XmlDsigXsltTransform" /> of
type
<see cref="T:System.IO.Stream" />.</para>
      </returns>
    </member>
    <member name="P:System.Security.Cryptography.Xml.XmlDsigXsltTransform.InputTypes">
      <summary>
        <para> Gets an array of types
      that are valid inputs to the <see cref="M:System.Security.Cryptography.Xml.XmlDsigXsltTransform.LoadInput(System.Object)" /> method
      of the current <see cref="T:System.Security.Cryptography.Xml.XmlDsigXsltTransform" />.</para>
      </summary>
    </member>
    <member name="P:System.Security.Cryptography.Xml.XmlDsigXsltTransform.OutputTypes">
      <summary>
        <para> Gets an array of
      types that are possible outputs from the <see cref="M:System.Security.Cryptography.Xml.XmlDsigXsltTransform.GetOutput" /> methods of the current <see cref="T:System.Security.Cryptography.Xml.XmlDsigXsltTransform" />.</para>
      </summary>
    </member>
    <member name="T:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform">
      <summary>
        <para>Represents the enveloped signature transform for an XML digital signature as defined by the W3C.</para>
      </summary>
    </member>
    <member name="M:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform" /> class.</para>
      </summary>
    </member>
    <member name="M:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform.LoadInnerXml(System.Xml.XmlNodeList)">
      <summary>
        <para> Parses the specified <see cref="T:System.Xml.XmlNodeList" /> as transform-specific content of a
      <see langword="&lt;Transform&gt;" /> element and
   configures the internal state of the current <see cref="T:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform" /> to match the
      <see langword="&lt;Transform&gt;" />
   element.</para>
      </summary>
      <param name="nodeList">An <see cref="T:System.Xml.XmlNodeList" /> to load into the current <see cref="T:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform" />.</param>
    </member>
    <member name="M:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform.GetInnerXml">
      <summary>
        <para> Returns an XML representation of
      the transform-specific content to be
      included in an XMLDSIG <see langword="&lt;Transform&gt;" /> element.</para>
      </summary>
      <returns>
        <para>Always <see langword="null" />.</para>
      </returns>
    </member>
    <member name="M:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform.LoadInput(System.Object)">
      <summary>
        <para> Loads the specified input
      into the current <see cref="T:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform" />.</para>
      </summary>
      <param name="obj">The input to load into the current <see cref="T:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform" />.</param>
    </member>
    <member name="M:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform.GetOutput">
      <summary>
        <para> Returns the output of
      the current <see cref="T:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform" />.</para>
      </summary>
      <returns>
        <para> The output of
      the current <see cref="T:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform" />.</para>
      </returns>
    </member>
    <member name="M:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform.GetOutput(System.Type)">
      <summary>
        <para> Returns the output of
      the current <see cref="T:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform" />
      of type
   <see cref="T:System.Xml.XmlNodeList" />.</para>
      </summary>
      <param name="type">The type of the output to return. <see cref="T:System.Xml.XmlNodeList" /> is the only valid type for this parameter.</param>
      <returns>
        <para>The output of the current <see cref="T:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform" /> of
   type
<see cref="T:System.Xml.XmlNodeList" />.</para>
      </returns>
    </member>
    <member name="P:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform.InputTypes">
      <summary>
        <para> Gets an array of types
      that are valid inputs to the <see cref="M:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform.LoadInput(System.Object)" /> method
      of the current <see cref="T:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform" />.</para>
      </summary>
    </member>
    <member name="P:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform.OutputTypes">
      <summary>
        <para> Gets an array of
      types that are possible outputs from the <see cref="M:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform.GetOutput" /> methods of the current <see cref="T:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform" />.</para>
      </summary>
    </member>
  </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\tools\x86\managed\urt\v1.0.3705\system.drawing.xml ===
﻿<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Drawing</name>
  </assembly>
  <members>
    <member name="F:System.Drawing.ContentAlignment.TopCenter">
      <summary>
        <para>Content is vertically aligned at the top, and horizontally aligned at the center.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfSetBkColor">
      <summary>
        <para>See "Windows-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.SizeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>
        <para>Determines whether changing a value on this object should require a call to the <see langword="CreateInstance" /> method to create a new value.</para>
      </summary>
      <param name="context">
        A type descriptor through which additional context can be provided.
      </param>
      <returns>
        <para>This method returns <see langword="true" /> if the <see langword="CreateInstance" /> object should be called when a change is made to one or more properties of this object.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Rectangle.op_Inequality(System.Drawing.Rectangle,System.Drawing.Rectangle)">
      <summary>
        <para>Tests whether two <see cref="T:System.Drawing.Rectangle" /> structures differ in location or size.</para>
      </summary>
      <param name="left">
        The <see cref="T:System.Drawing.Rectangle" /> structure that is to the left of the inequality operator.
      </param>
      <param name="right">
        The <see cref="T:System.Drawing.Rectangle" /> structure that is to the right of the inequality operator.
      </param>
      <returns>
        <para>This operator returns <see langword="true" /> if any of the <see langword="X" />, <see langword="Y" />, <see langword="Width" />, or <see langword="Height" /> properties of the two <see cref="T:System.Drawing.Rectangle" /> structures are unequal; otherwise <see langword="false" />.</para>
      </returns>
    </member>
    <member name="T:System.Drawing.Imaging.MetafileType">
      <summary>
        <para>Specifies types of metafiles. The <see langword="MetafileHeader.Type" /> property returns a member of this enumeration.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.SetNoOp(System.Drawing.Imaging.ColorAdjustType)">
      <summary>
        <para>Sets the NoOp correction value for the GDI+ objects specified by the <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> enumeration (<see cref="T:System.Drawing.Bitmap" />, <see cref="T:System.Drawing.Brush" />, <see cref="T:System.Drawing.Pen" />, and so on). During rendering, no color adjustment is performed while NoOp is set.</para>
      </summary>
      <param name="type">
        Specifies the pertinent GDI+ objects (<see cref="T:System.Drawing.Bitmap" />, <see cref="T:System.Drawing.Brush" />, <see cref="T:System.Drawing.Pen" />, and so on) that will use the color-adjust information. If not supplied, the value defaults to <see langword="ColorAdjustDefault" />.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.Pens.RosyBrown">
      <summary>
        <para>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.ToolboxBitmapAttribute.GetImageFromResource(System.Type,System.String,System.Boolean)">
      <summary>
        <para>Returns an <see cref="T:System.Drawing.Image" /> object with the specified file name from the specified assembly.</para>
      </summary>
      <param name="t">
        A <see langword="Type" /> object that specifies the assembly in which to look for the resource.
      </param>
      <param name="imageName">
        The file name of the image for which to look.
      </param>
      <param name="large">
        Set to <see langword="true" /> if the image is in large format; otherwise, <see langword="false" />.
      </param>
      <returns>
        <para>The <see cref="T:System.Drawing.Image" /> object this method gets.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSetMiterLimit">
      <summary>
        <para>See "Enhanced-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.GermanLegalFanfold">
      <summary>
        <para>
       German legal fanfold
       (8.5 in. by 13 in.).
    </para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfSetTextColor">
      <summary>
        <para>See "Windows-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.B4Envelope">
      <summary>
        <para>
       B4 envelope (250 mm by 353 mm).
    </para>
      </summary>
    </member>
    <member name="M:System.Drawing.StringFormat.SetDigitSubstitution(System.Int32,System.Drawing.StringDigitSubstitute)">
      <summary>
        <para>Specifies the <see cref="T:System.Drawing.StringDigitSubstitute" /> enumeration member used to replace characters in text drawn with this <see cref="T:System.Drawing.StringFormat" /> object. Characters are replaced when the font used to draw text does not support those characters.</para>
      </summary>
      <param name="language">
        An integer value specifying the language of the text.
      </param>
      <param name="substitute">
        An element of the <see cref="T:System.Drawing.StringDigitSubstitute" /> enumeration that specifies how digits are displayed.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.TextureBrush.Image">
      <summary>
        <para>Gets the <see cref="T:System.Drawing.Image" /> object associated with this <see cref="T:System.Drawing.TextureBrush" /> object.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Icon.ToBitmap">
      <summary>
        <para>Converts this <see cref="T:System.Drawing.Icon" /> object to a GDI+ <see cref="T:System.Drawing.Bitmap" /> object.</para>
      </summary>
      <returns>
        <para>A <see cref="T:System.Drawing.Bitmap" /> object representing the converted <see cref="T:System.Drawing.Icon" /> object.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.Imaging.WmfPlaceableFileHeader.BboxTop">
      <summary>
        <para>Gets or sets the y-coordinate of the upper-left corner of the bounding rectangle of the metafile image on the output device.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Font.GdiVerticalFont">
      <summary>
        <para>Gets a Boolean value that indicates whether this <see cref="T:System.Drawing.Font" /> object is derived from a GDI vertical font. </para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfCreateColorSpace">
      <summary>
        <para>See "Enhanced-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.PenType.TextureFill">
      <summary>
        <para>Specifies a bitmap texture fill.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.A4Plus">
      <summary>
        <para>
       A4 plus paper
       (210 mm by 330 mm).
    </para>
      </summary>
    </member>
    <member name="P:System.Drawing.RectangleF.IsEmpty">
      <summary>
        <para>Tests whether all numeric properties of this <see cref="T:System.Drawing.RectangleF" /> have values of zero.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Brushes.GhostWhite">
      <summary>
        <para>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfPolyLineTo">
      <summary>
        <para>See "Enhanced-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.SystemColors.ControlLight">
      <summary>
        <para>Gets a <see cref="T:System.Drawing.Color" /> structure that is the light color of a 3-D element. The light color is applied to parts of a 3-D element that face the light source.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Pens.BlueViolet">
      <summary>
        <para>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSetLayout">
      <summary>
        <para>See "Enhanced-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.Note">
      <summary>
        <para>
       Note paper (8.5 in.
       by 11 in.).
    </para>
      </summary>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.GetMetafileHeader(System.IntPtr)">
      <summary>
        <para>Returns the <see cref="T:System.Drawing.Imaging.MetafileHeader" /> object associated with the specified <see cref="T:System.Drawing.Imaging.Metafile" /> object.</para>
      </summary>
      <param name="henhmetafile">
        The handle to the enhanced <see cref="T:System.Drawing.Imaging.Metafile" /> object for which a header is returned.
      </param>
      <returns>
        <para>The <see cref="T:System.Drawing.Imaging.MetafileHeader" /> object this method retrieves.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.Color.Aqua">
      <summary>
        <para>Gets a system-defined color.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Drawing2D.HatchBrush.BackgroundColor">
      <summary>
        <para>Gets the color of spaces between the hatch lines drawn by this <see cref="T:System.Drawing.Drawing2D.HatchBrush" /> object.</para>
      </summary>
    </member>
    <member name="T:System.Drawing.StringFormat">
      <summary>
        <para>Encapsulates text layout information (such as alignment and line spacing), display manipulations (such as ellipsis insertion and national digit substitution) and OpenType features. This class cannot be inherited.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Graphics.ReleaseHdcInternal(System.IntPtr)">
      <summary>
        <para>Internal method. Do not use.</para>
      </summary>
      <param name="hdc">
        Handle to a device context.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Printing.PaperSourceKind.ManualFeed">
      <summary>
        <para> Manually fed envelope.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.PointF[],System.Int32,System.Int32,System.Single)">
      <summary>
        <para>Adds a spline curve to the current figure.</para>
      </summary>
      <param name="points">
        An array of <see cref="T:System.Drawing.PointF" /> structures that represents the points that define the curve.
      </param>
      <param name="offset">
        The index of the element in the <paramref name="points" /> array that is used as the first point in the curve.
      </param>
      <param name="numberOfSegments">
        The number of segments used to draw the curve. A segment can be thought of as a line connecting two points.
      </param>
      <param name="tension">
        A value that specifies the amount that the curve bends between control points. Values greater than 1 produce unpredictable results.
      </param>
    </member>
    <member name="P:System.Drawing.Pens.DeepPink">
      <summary>
        <para>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Pens.Silver">
      <summary>
        <para>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.ColorBlend.#ctor(System.Int32)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.ColorBlend" /> class with the specified number of colors and positions.</para>
      </summary>
      <param name="count">
        The number of colors and positions in this <see cref="T:System.Drawing.Drawing2D.ColorBlend" />.
      </param>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.BeginContainerNoParams">
      <summary>
        <para>See <see cref="M:System.Drawing.Graphics.BeginContainer" /><see langword="_Methods" />. </para>
      </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.Pink">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Drawing2D.LinearGradientBrush.Blend">
      <summary>
        <para>Gets or sets a <see cref="T:System.Drawing.Drawing2D.Blend" /> object that specifies positions and factors that define a custom falloff for the gradient.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Printing.PrintController.#ctor">
      <summary>
        <para> Initializes a new instance of the <see cref="T:System.Drawing.Printing.PrintController" /> class.
   </para>
      </summary>
    </member>
    <member name="M:System.Drawing.SafeNativeMethods.HandleCollector.HandleType.Remove(System.IntPtr)">
    </member>
    <member name="F:System.Drawing.SafeNativeMethods.CommonHandles.Icon">
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.ClearOutputChannel(System.Drawing.Imaging.ColorAdjustType)">
      <summary>
        <para>Clears the output channel selection for the GDI+ objects specified by the <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> enumeration (<see cref="T:System.Drawing.Bitmap" />, <see cref="T:System.Drawing.Brush" />, <see cref="T:System.Drawing.Pen" />, and so on).</para>
      </summary>
      <param name="type">
        Specifies the pertinent GDI+ objects (<see cref="T:System.Drawing.Bitmap" />, <see cref="T:System.Drawing.Brush" />, <see cref="T:System.Drawing.Pen" />, and so on) that will have the output channel selection cleared. If not supplied, the value defaults to <see langword="ColorAdjustDefault" />.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Int32)">
      <summary>
        <para>Measures the specified string when drawn with the specified <see cref="T:System.Drawing.Font" /> object.</para>
      </summary>
      <param name="text">
        String to measure.
      </param>
      <param name="font">
        <see cref="T:System.Drawing.Font" /> object that defines the format of the string.
      </param>
      <param name="width">
        Maximum width of the string in pixels.
      </param>
      <returns>
        <para>This method returns a <see cref="T:System.Drawing.SizeF" /> structure that represents the size, in pixels, of the string specified in the <paramref name="text" /> parameter as drawn with the <paramref name="font" /> parameter.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.FillEllipse">
      <summary>
        <para>See <see cref="M:System.Drawing.Graphics.FillEllipse" /><see langword=" Methods" />. </para>
      </summary>
    </member>
    <member name="T:System.Drawing.GraphicsUnit">
      <summary>
        <para>Specifies the unit of measure for the given data.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Imaging.EncoderParameter.Encoder">
      <summary>
        <para>Gets or sets the <see cref="T:System.Drawing.Imaging.Encoder" /> object associated with this <see cref="T:System.Drawing.Imaging.EncoderParameter" /> object. The <see cref="T:System.Drawing.Imaging.Encoder" /> object encapsulates the globally unique identifier (GUID) that specifies the category (for example Quality, ColorDepth, or Compression) of the parameter stored in this <see cref="T:System.Drawing.Imaging.EncoderParameter" /> object.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Image.GetBounds(System.Drawing.GraphicsUnit@)">
      <summary>
        <para>Gets a bounding rectangle in the specified units for this <see cref="T:System.Drawing.Image" /> object.</para>
      </summary>
      <param name="pageUnit">
        A member of the <see cref="T:System.Drawing.GraphicsUnit" /> enumeration that specifies the units for the rectangle.
      </param>
      <returns>
        <para>A <see cref="T:System.Drawing.RectangleF" /> structure that represents a bounding rectangle for this <see cref="T:System.Drawing.Image" /> object.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.DefaultPageSettings">
      <summary>
        <para> Gets the default page settings for this printer.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.LineCap.Triangle">
      <summary>
        <para>Specifies a triangular line cap.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfExtTextOut">
      <summary>
        <para>See "Windows-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.SizeF.op_Subtraction(System.Drawing.SizeF,System.Drawing.SizeF)">
      <summary>
        <para>Subtracts the width and height of one <see cref="T:System.Drawing.SizeF" /> structure from the width and height of another <see cref="T:System.Drawing.SizeF" /> structure.</para>
      </summary>
      <param name="sz1">
        The <see cref="T:System.Drawing.SizeF" /> on the left side of the subtraction operator.
      </param>
      <param name="sz2">
        The <see cref="T:System.Drawing.SizeF" /> on the right side of the subtraction operator.
      </param>
      <returns>
        <para>A <see cref="T:System.Drawing.SizeF" /> that is the result of the subtraction operation.</para>
      </returns>
    </member>
    <member name="T:System.Drawing.Drawing2D.WrapMode">
      <summary>
        <para>Specifies how a texture or gradient is tiled when it is larger than the area being filled.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.CharacterRange.First">
      <summary>
        <para>Gets or sets the position in the string of the first character of this <see cref="T:System.Drawing.CharacterRange" />.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Font.Size">
      <summary>
        <para>Gets the em-size of this <see cref="T:System.Drawing.Font" /> object in design units.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.DrawString">
      <summary>
        <para>See <see cref="M:System.Drawing.Graphics.DrawString" /><see langword=" Methods" />. </para>
      </summary>
    </member>
    <member name="F:System.Drawing.RotateFlipType.RotateNoneFlipXY">
      <summary>
        <para>Specifies no rotation followed by a horizontal and vertical flip.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSetPixelV">
      <summary>
        <para>See "Enhanced-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Drawing2D.AdjustableArrowCap.Width">
      <summary>
        <para>Gets or sets the width of the arrow cap.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Graphics.PageUnit">
      <summary>
        <para>Gets or sets the unit of measure used for page coordinates in this <see cref="T:System.Drawing.Graphics" /> object.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
      <summary>
        <para>Sends the records of a selected rectangle from a <see cref="T:System.Drawing.Imaging.Metafile" /> object, one at a time, to a callback method for display in a specified rectangle.</para>
      </summary>
      <param name="metafile">
        <see cref="T:System.Drawing.Imaging.Metafile" /> object to enumerate.
      </param>
      <param name="destRect">
        <see cref="T:System.Drawing.Rectangle" /> structure that specifies the location and size of the drawn metafile.
      </param>
      <param name="srcRect">
        <see cref="T:System.Drawing.Rectangle" /> structure that specifies the portion of the metafile, relative to its upper-left corner, to draw.
      </param>
      <param name="srcUnit">
        Member of the <see cref="T:System.Drawing.GraphicsUnit" /> enumeration that specifies the unit of measure used to determine the portion of the metafile that the rectangle specified by the <paramref name="srcRect" /> parameter contains.
      </param>
      <param name="callback">
        <see langword="Graphics.EnumerateMetafileProc" /> delegate that specifies the method to which the metafile records are sent.
      </param>
      <param name="callbackData">
        Internal pointer that is required, but ignored. You can pass <see langword="IntPtr.Zero" /> for this parameter.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.JapaneseEnvelopeYouNumber4">
      <summary>
        <para>
       Japanese You #4 envelope. Requires Windows
       98, Windows NT 4.0, or later.
    </para>
      </summary>
    </member>
    <member name="M:System.Drawing.Color.op_Equality(System.Drawing.Color,System.Drawing.Color)">
      <summary>
        <para>Tests whether two specified <see cref="T:System.Drawing.Color" /> structures are equivalent.</para>
      </summary>
      <param name="left">
        The <see cref="T:System.Drawing.Color" /> structure that is to the left of the equality operator.
      </param>
      <param name="right">
        The <see cref="T:System.Drawing.Color" /> structure that is to the right of the equality operator.
      </param>
      <returns>
        <para>This operator returns <see langword="true" /> if the two <see cref="T:System.Drawing.Color" /> structures are equal; otherwise, <see langword="false" />.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.Pens.DarkSeaGreen">
      <summary>
        <para>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Image.Clone">
      <summary>
        <para>Creates an exact copy of this <see cref="T:System.Drawing.Image" /> object.</para>
      </summary>
      <returns>
        <para>The <see cref="T:System.Drawing.Image" /> this method creates, cast as an object.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Printing.PrintingPermissionLevel.AllPrinting">
      <summary>
        <para> Provides full access to all printers.
 </para>
      </summary>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.GetMetafileHeader(System.String)">
      <summary>
        <para>Returns the <see cref="T:System.Drawing.Imaging.MetafileHeader" /> object associated with the specified <see cref="T:System.Drawing.Imaging.Metafile" /> object.</para>
      </summary>
      <param name="fileName">
        A <see langword="String" /> object containing the name of the <see cref="T:System.Drawing.Imaging.Metafile" /> object for which a header is retrieved.
      </param>
      <returns>
        <para>The <see cref="T:System.Drawing.Imaging.MetafileHeader" /> object this method retrieves.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Printing.PrintingPermission.IsUnrestricted">
      <summary>
        <para> Gets a value
      indicating whether the permission is unrestricted.</para>
      </summary>
      <returns>
        <para>
          <see langword="true" /> if permission is unrestricted;
   otherwise, <see langword="false" />.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.PrcEnvelopeNumber2Rotated">
      <summary>
        <para>
       People's Republic of
       China #2 rotated envelope
       (176 mm by
       102 mm). Requires Windows 98, Windows NT 4.0, or
       later.
    </para>
      </summary>
    </member>
    <member name="M:System.Drawing.FontFamily.GetLineSpacing(System.Drawing.FontStyle)">
      <summary>
        <para>Returns the distance between two consecutive lines of text for this <see cref="T:System.Drawing.FontFamily" /> object that uses the specified <see cref="T:System.Drawing.FontStyle" /> enumeration .</para>
      </summary>
      <param name="style">
        The <see cref="T:System.Drawing.FontStyle" /> enumeration to apply.
      </param>
      <returns>
        <para>The distance between two consecutive lines of text.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.SizeF.op_Equality(System.Drawing.SizeF,System.Drawing.SizeF)">
      <summary>
        <para>Tests whether two <see cref="T:System.Drawing.SizeF" /> structures are equal.</para>
      </summary>
      <param name="sz1">
        The <see cref="T:System.Drawing.SizeF" /> structure on the left side of the equality operator.
      </param>
      <param name="sz2">
        The <see cref="T:System.Drawing.SizeF" /> structure on the right of the equality operator.
      </param>
      <returns>
        <para>This operator returns <see langword="true" /> if <paramref name="sz1" /> and <paramref name="sz2" /> have equal width and height; otherwise, <see langword="false" />.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.FontConverter.FontNameConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>
      Converts the given object to the converter's native type.
 </summary>
      <param name="context">
      A formatter context.  This object can be used to extract additional information
      about the environment this converter is being invoked from.  This may be null,
      so you should always check.  Also, properties on the context object may also
      return null.
 </param>
      <param name="culture">
      Culture to use to perform the conversion
 </param>
      <param name="value">
      The object to convert.
 </param>
      <returns>
      The converted object.  This will throw an excetpion if the converson
      could not be performed.
 </returns>
    </member>
    <member name="F:System.Drawing.SafeNativeMethods.CommonHandles.GDI">
    </member>
    <member name="M:System.Drawing.ImageAnimator.CanAnimate(System.Drawing.Image)">
      <summary>
        <para>Returns a Boolean value indicating whether the specified image contains time-based frames.</para>
      </summary>
      <param name="image">
        The <see cref="T:System.Drawing.Image" /> object to test.
      </param>
      <returns>
        <para>This method returns <see langword="true" /> if the specified image contains time-based frames; otherwise, <see langword="false" />.</para>
      </returns>
    </member>
    <member name="T:System.Drawing.Drawing2D.Matrix">
      <summary>
        <para>Encapsulates a 3-by-3 affine matrix that represents a geometric transform. This class cannot be inherited.</para>
      </summary>
    </member>
    <member name="T:System.Drawing.Text.GenericFontFamilies">
      <summary>
        <para>Specifies a generic <see cref="T:System.Drawing.FontFamily" /> object.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.IntPtr,System.Drawing.Imaging.EmfType)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Imaging.Metafile" /> class from the specified handle to a device context and an <see cref="T:System.Drawing.Imaging.EmfType" /> enumeration that specifies the format of the <see cref="T:System.Drawing.Imaging.Metafile" />.</para>
      </summary>
      <param name="referenceHdc">
        The handle to a device context.
      </param>
      <param name="emfType">
        An <see cref="T:System.Drawing.Imaging.EmfType" /> enumeration that specifies the format of the <see cref="T:System.Drawing.Imaging.Metafile" /> object.
      </param>
    </member>
    <member name="P:System.Drawing.Brushes.SeaGreen">
      <summary>
        <para>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Pens.LightSalmon">
      <summary>
        <para>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</para>
      </summary>
    </member>
    <member name="T:System.Drawing.Imaging.MetafileFrameUnit">
      <summary>
        <para>Specifies the unit of measurement for the rectangle used to size and position a metafile. This is specified during the creation of the <see cref="T:System.Drawing.Imaging.Metafile" /> object.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.LetterSmall">
      <summary>
        <para>
       Letter small paper (8.5 in. by 11 in.).
    </para>
      </summary>
    </member>
    <member name="M:System.Drawing.Rectangle.Ceiling(System.Drawing.RectangleF)">
      <summary>
        <para>Converts the specified <see cref="T:System.Drawing.RectangleF" /> structure to a <see cref="T:System.Drawing.Rectangle" /> structure by rounding the <see cref="T:System.Drawing.RectangleF" /> values to the next higher integer values.</para>
      </summary>
      <param name="value">
        The <see cref="T:System.Drawing.RectangleF" /> structure to be converted.
      </param>
      <returns>
        <para>Returns a <see cref="T:System.Drawing.Rectangle" />.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfSelectObject">
      <summary>
        <para>See "Windows-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Image.RotateFlip(System.Drawing.RotateFlipType)">
      <summary>
        <para>This method either rotates, flips, or rotates and flips the <see cref="T:System.Drawing.Image" /> object.</para>
      </summary>
      <param name="rotateFlipType">
        A <see langword="RotateFlipType" /> enumeration member that specifies the type of rotation and flip to apply to the image.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Drawing2D.DashCap.Round">
      <summary>
        <para>Specifies a circular cap that rounds off both ends of each dash. </para>
      </summary>
    </member>
    <member name="P:System.Drawing.Pens.SpringGreen">
      <summary>
        <para>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfRectangle">
      <summary>
        <para>See "Windows-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Brushes.Moccasin">
      <summary>
        <para>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Font.#ctor(System.Drawing.FontFamily,System.Single,System.Drawing.GraphicsUnit)">
      <summary>
        <para>Initializes a new <see cref="T:System.Drawing.Font" /> object that uses the specified attributes.</para>
      </summary>
      <param name="family">
        The <see cref="T:System.Drawing.FontFamily" /> object of the new <see cref="T:System.Drawing.Font" /> object.
      </param>
      <param name="emSize">
        The size of the new <see cref="T:System.Drawing.Font" /> object.
      </param>
      <param name="unit">
        The <see cref="T:System.Drawing.GraphicsUnit" /> enumeration that specifies the unit of measurement for the new <see cref="T:System.Drawing.Font" /> object.
      </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.Flatten(System.Drawing.Drawing2D.Matrix)">
      <summary>
        <para>Applies the specified transform and then converts each curve in this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object into a sequence of connected line segments.</para>
      </summary>
      <param name="matrix">
        A <see cref="T:System.Drawing.Drawing2D.Matrix" /> object by which to transform this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> before flattening.
      </param>
    </member>
    <member name="M:System.Drawing.Region.IsInfinite(System.Drawing.Graphics)">
      <summary>
        <para>Tests whether this <see cref="T:System.Drawing.Region" /> object has an infinite interior on the specified drawing surface.</para>
      </summary>
      <param name="g">
        A <see cref="T:System.Drawing.Graphics" /> object that represents a drawing surface.
      </param>
      <returns>
        <para>This method returns <see langword="true" /> if the interior of this <see cref="T:System.Drawing.Region" /> object is infinite when the transformation associated with <paramref name="g" /> is applied; otherwise, <see langword="false" />.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.Brushes.Pink">
      <summary>
        <para>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Imaging.ImageFormat.Gif">
      <summary>
        <para>Gets the Graphics Interchange Format (GIF) image format.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Pen.EndCap">
      <summary>
        <para>Gets or sets the cap style used at the end of lines drawn with this <see cref="T:System.Drawing.Pen" /> object.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Color.LightSlateGray">
      <summary>
        <para>Gets a system-defined color.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Int32,System.Int32,System.Drawing.Pen)">
      <summary>
        <para>Indicates whether the specified point is contained within (under) the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object when drawn with the specified <see cref="T:System.Drawing.Pen" /> object.</para>
      </summary>
      <param name="x">
        The x-coordinate of the point to test.
      </param>
      <param name="y">
        The y-coordinate of the point to test.
      </param>
      <param name="pen">
        The <see cref="T:System.Drawing.Pen" /> object to test.
      </param>
      <returns>
        <para>This method returns <see langword="true" /> if the specified point is contained within the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object when drawn with the specified <see cref="T:System.Drawing.Pen" /> object; otherwise, <see langword="false" />.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.FontConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>
        <para>Determines whether this converter can convert an object in the specified source type to the native type of the converter.</para>
      </summary>
      <param name="context">
        A formatter context. This object can be used to get additional information about the environment this converter is being called from. This may be <see langword="null" />, so you should always check. Also, properties on the context object may also return <see langword="null" />.
      </param>
      <param name="sourceType">
        The type you want to convert from.
      </param>
      <returns>
        <para>This method returns <see langword="true" /> if this object can perform the conversion.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Size.GetHashCode">
      <summary>
        <para>Returns a hash code for this <see cref="T:System.Drawing.Size" /> structure.</para>
      </summary>
      <returns>
        <para>An integer value that specifies a hash value for this <see cref="T:System.Drawing.Size" /> structure.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Graphics.FillRectangles(System.Drawing.Brush,System.Drawing.Rectangle[])">
      <summary>
        <para>Fills the interiors of a series of rectangles specified by <see cref="T:System.Drawing.Rectangle" /> structures.</para>
      </summary>
      <param name="brush">
        <see cref="T:System.Drawing.Brush" /> object that determines the characteristics of the fill.
      </param>
      <param name="rects">
        Array of <see cref="T:System.Drawing.Rectangle" /> structures that represent the rectangles to fill.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="T:System.Drawing.Imaging.EncoderParameterValueType">
      <summary>
        <para>GDI+ uses image encoders to convert the images stored in <see cref="T:System.Drawing.Bitmap" /> objects to various file formats. Image encoders are built into GDI+ for the BMP, JPEG, GIF, TIFF, and PNG formats. And encoder is invoked when you call the <see langword="Save" /> or <see langword="SaveAdd" /> method of a <see cref="T:System.Drawing.Bitmap" /> object.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Graphics.GetHdc">
      <summary>
        <para>Gets the handle to the device context associated with this <see cref="T:System.Drawing.Graphics" /> object.</para>
      </summary>
      <returns>
        <para>Handle to the device context associated with this <see cref="T:System.Drawing.Graphics" /> object.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.A3Rotated">
      <summary>
        <para>A3 rotated
       paper (420 mm by 297 mm).</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfSetPixel">
      <summary>
        <para>See "Windows-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="T:System.Drawing.Drawing2D.CompositingMode">
      <summary>
        <para>Specifies how the source colors are combined with the background colors.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.SmoothingMode.None">
      <summary>
        <para>Specifies no antialiasing.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Brushes.Wheat">
      <summary>
        <para>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeRational">
      <summary>
        <para>Specifies that each value in the array is a pair of 32-bit unsigned integers. Each pair represents a fraction, the first integer being the numerator and the second integer being the denominator.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.DrawClosedCurve">
      <summary>
        <para>See <see cref="M:System.Drawing.Graphics.DrawClosedCurve" /><see langword=" Methods" />. </para>
      </summary>
    </member>
    <member name="M:System.Drawing.RectangleF.#ctor(System.Single,System.Single,System.Single,System.Single)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.RectangleF" /> class with the specified location and size.</para>
      </summary>
      <param name="x">
        The x-coordinate of the upper-left corner of the rectangle.
      </param>
      <param name="y">
        The y-coordinate of the upper-left corner of the rectangle.
      </param>
      <param name="width">
        The width of the rectangle.
      </param>
      <param name="height">
        The height of the rectangle.
      </param>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.PaperSizes">
      <summary>
        <para> Gets the paper sizes that are supported by this printer.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.ClearNoOp">
      <summary>
        <para>Clears the NoOp setting for all GDI+ objects, such as <see cref="T:System.Drawing.Bitmap" />, <see cref="T:System.Drawing.Brush" />, <see cref="T:System.Drawing.Pen" />, and so on. </para>
      </summary>
    </member>
    <member name="P:System.Drawing.Imaging.ColorMatrix.Matrix14">
      <summary>
        <para>Gets or sets the element at the 1st row and 4th column of this <see cref="T:System.Drawing.Imaging.ColorMatrix" /> object.</para>
      </summary>
    </member>
    <member name="T:System.Drawing.Printing.Margins">
      <summary>
        <para>Specifies the margins of a printed page.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Imaging.FrameDimension.Guid">
      <summary>
        <para>Gets a globally unique identifier (GUID) that represents this <see cref="T:System.Drawing.Imaging.FrameDimension" /> object.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.SafeNativeMethods.CommonHandles.Kernel">
    </member>
    <member name="P:System.Drawing.Printing.PaperSize.PaperName">
      <summary>
        <para> Gets or sets the name of the type of paper.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.Peru">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Bitmap.MakeTransparent(System.Drawing.Color)">
      <summary>
        <para>Makes the specified color transparent for this <see cref="T:System.Drawing.Bitmap" /> object.</para>
      </summary>
      <param name="transparentColor">
        The <see cref="T:System.Drawing.Color" /> structure that represents the color to make transparent.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Font.#ctor(System.String,System.Single,System.Drawing.FontStyle,System.Drawing.GraphicsUnit,System.Byte)">
      <summary>
        <para>Initializes a new <see cref="T:System.Drawing.Font" /> object that uses the specified attributes.</para>
      </summary>
      <param name="familyName">
        A string representation of the <see cref="T:System.Drawing.FontFamily" /> object for the new <see cref="T:System.Drawing.Font" /> object.
      </param>
      <param name="emSize">
        The size of the new <see cref="T:System.Drawing.Font" /> object.
      </param>
      <param name="style">
        The <see cref="T:System.Drawing.FontStyle" /> enumeration to be applied to the new <see cref="T:System.Drawing.Font" /> object.
      </param>
      <param name="unit">
        The <see cref="T:System.Drawing.GraphicsUnit" /> enumeration that specifies the unit of measurement for the new <see cref="T:System.Drawing.Font" /> object.
      </param>
      <param name="gdiCharSet">
        A <see langword="Byte" /> that specifies a GDI character set to use for this font.
      </param>
    </member>
    <member name="P:System.Drawing.Pens.Snow">
      <summary>
        <para>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</para>
      </summary>
    </member>
    <member name="T:System.Drawing.Drawing2D.GraphicsPathIterator">
      <summary>
        <para>Provides the ability to iterate through subpaths in a <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object and test the types of shapes contained in each subpath. This class cannot be inherited.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.ImageFlags.ColorSpaceGray">
      <summary>
        <para>The pixel data is grayscale.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.PointConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>
        <para>Converts the specified object to the specified type. </para>
      </summary>
      <param name="context">
        A formatter context. This object can be used to get additional information about the environment this converter is being called from. This may be <see langword="null" />, so you should always check. Also, properties on the context object may also return <see langword="null" />.
      </param>
      <param name="culture">
        An object that contains culture specific information, such as the language, calendar, and cultural conventions associated with a specific culture. It is based on the RFC 1766 standard.
      </param>
      <param name="value">
        The object to convert.
      </param>
      <param name="destinationType">
        The type to convert the object to.
      </param>
      <returns>
        <para>The converted object.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.Pens.OldLace">
      <summary>
        <para>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.IO.Stream,System.IntPtr,System.Drawing.Rectangle,System.Drawing.Imaging.MetafileFrameUnit,System.Drawing.Imaging.EmfType)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Imaging.Metafile" /> class from the specified data stream, a Windows handle to a device context, a <see cref="T:System.Drawing.Rectangle" /> structure that represents the rectangle that bounds the new <see cref="T:System.Drawing.Imaging.Metafile" /> object, the supplied units of measure, and an <see cref="T:System.Drawing.Imaging.EmfType" /> enumeration that specifies the format of the <see cref="T:System.Drawing.Imaging.Metafile" /> object.</para>
      </summary>
      <param name="stream">
        A <see langword="Stream" /> object that contains the data for this <see cref="T:System.Drawing.Imaging.Metafile" /> object.
      </param>
      <param name="referenceHdc">
        A Windows handle to a device context.
      </param>
      <param name="frameRect">
        A <see cref="T:System.Drawing.Rectangle" /> structure that represents the rectangle that bounds the new <see cref="T:System.Drawing.Imaging.Metafile" /> object.
      </param>
      <param name="frameUnit">
        A <see cref="T:System.Drawing.Imaging.MetafileFrameUnit" /> enumeration that specifies the units of measure for <paramref name="frameRect" />.
      </param>
      <param name="type">
        An <see cref="T:System.Drawing.Imaging.EmfType" /> enumeration that specifies the format of the <see cref="T:System.Drawing.Imaging.Metafile" /> object.
      </param>
    </member>
    <member name="P:System.Drawing.Imaging.ColorPalette.Flags">
      <summary>
        <para>Gets a value that specifies how to interpret the color information in the array of colors.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Printing.PrintEventArgs.#ctor">
      <summary>
        <para>
       Initializes a new instance of the <see cref="T:System.Drawing.Printing.PrintEventArgs" /> class.
    </para>
      </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.PathGradientBrush.TranslateTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
      <summary>
        <para>Applies the specified translation to the local geometric transform in the specified order.</para>
      </summary>
      <param name="dx">
        The value of the translation in x.
      </param>
      <param name="dy">
        The value of the translation in y.
      </param>
      <param name="order">
        The order (prepend or append) in which to apply the translation.
      </param>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.TabloidExtra">
      <summary>
        <para>
       Tabloid extra paper
       (11.69 in. by 18 in.). This
       value is specific to the PostScript driver and is used only by Linotronic printers in order to conserve paper.
    </para>
      </summary>
    </member>
    <member name="M:System.Drawing.Graphics.FillRectangles(System.Drawing.Brush,System.Drawing.RectangleF[])">
      <summary>
        <para>Fills the interiors of a series of rectangles specified by <see cref="T:System.Drawing.RectangleF" /> structures.</para>
      </summary>
      <param name="brush">
        <see cref="T:System.Drawing.Brush" /> object that determines the characteristics of the fill.
      </param>
      <param name="rects">
        Array of <see cref="T:System.Drawing.RectangleF" /> structures that represent the rectangles to fill.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.Brushes.PowderBlue">
      <summary>
        <para>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.SetTextRenderingHint">
      <summary>
        <para>See <see langword="Graphics.TextRenderingHint" />.</para>
      </summary>
    </member>
    <member name="T:System.Drawing.SystemColors">
      <summary>
        <para>Each property of the <see cref="T:System.Drawing.SystemColors" /> class is a <see cref="T:System.Drawing.Color" /> structure that is the color of a Windows display element.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Pens.MediumSpringGreen">
      <summary>
        <para>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.PrcEnvelopeNumber3">
      <summary>
        <para>
       People's Republic of
       China #3 envelope (125 mm
       by 176
       mm). Requires Windows 98, Windows NT 4.0, or later.
    </para>
      </summary>
    </member>
    <member name="M:System.Drawing.Rectangle.Intersect(System.Drawing.Rectangle,System.Drawing.Rectangle)">
      <summary>
        <para>Returns a third <see cref="T:System.Drawing.Rectangle" /> structure that represents the intersection of two other <see cref="T:System.Drawing.Rectangle" /> structures. If there is no intersection, null is returned.</para>
      </summary>
      <param name="a">
        A rectangle to intersect.
      </param>
      <param name="b">
        A rectangle to intersect.
      </param>
      <returns>
        <para>A <see cref="T:System.Drawing.Rectangle" /> that represents the intersection of <paramref name="a" /> and <paramref name="b" />.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes)">
      <summary>
        <para>Draws the specified portion of the specified <see cref="T:System.Drawing.Image" /> object at the specified location and with the specified size.</para>
      </summary>
      <param name="image">
        <see cref="T:System.Drawing.Image" /> object to draw.
      </param>
      <param name="destPoints">
        Array of three <see cref="T:System.Drawing.Point" /> structures that define a parallelogram.
      </param>
      <param name="srcRect">
        <see cref="T:System.Drawing.RectangleF" /> structure that specifies the portion of the <paramref name="image" /> object to draw.
      </param>
      <param name="srcUnit">
        Member of the <see cref="T:System.Drawing.GraphicsUnit" /> enumeration that specifies the units of measure used by the <paramref name="srcRect" /> parameter.
      </param>
      <param name="imageAttr">
        <see cref="T:System.Drawing.Imaging.ImageAttributes" /> object that specifies recoloring and gamma information for the <paramref name="image" /> object.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Drawing2D.LinearGradientMode.Vertical">
      <summary>
        <para>Specifies a gradient from top to bottom.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Graphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.PointF[],System.Drawing.Drawing2D.FillMode,System.Single)">
      <summary>
        <para>Fills the interior a closed cardinal spline curve defined by an array of <see cref="T:System.Drawing.PointF" /> structures using the specified fill mode and tension.</para>
      </summary>
      <param name="brush">
        A <see cref="T:System.Drawing.Brush" /> object that determines the characteristics of the fill.
      </param>
      <param name="points">
        Array of <see cref="T:System.Drawing.PointF" /> structures that define the spline.
      </param>
      <param name="fillmode">
        Member of the <see cref="T:System.Drawing.Drawing2D.FillMode" /> enumeration that determines how the curve is filled.
      </param>
      <param name="tension">
        Value greater than or equal to 0.0F that specifies the tension of the curve.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Rectangle.Offset(System.Drawing.Point)">
      <summary>
        <para>Adjusts the location of this rectangle by the specified amount.</para>
      </summary>
      <param name="pos">
        Amount to offset the location.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.Divot">
      <summary>
        <para>Specifies a hatch that has the appearance of divots.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Drawing.Rectangle,System.Single,System.Single)">
      <summary>
        <para>Appends an elliptical arc to the current figure.</para>
      </summary>
      <param name="rect">
        A <see cref="T:System.Drawing.Rectangle" /> structure that represents the rectangular bounds of the ellipse from which the arc is taken.
      </param>
      <param name="startAngle">
        The starting angle of the arc, measured in degrees clockwise from the x-axis.
      </param>
      <param name="sweepAngle">
        The angle between <paramref name="startAngle" /> and the end of the arc.
      </param>
    </member>
    <member name="P:System.Drawing.Graphics.IsVisibleClipEmpty">
      <summary>
        <para>Gets a value indicating whether the visible clipping region of this <see cref="T:System.Drawing.Graphics" /> object is empty.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.PointF.Equals(System.Object)">
      <summary>
        <para>Specifies whether this <see cref="T:System.Drawing.PointF" /> contains the same coordinates as the specified <see langword="Object" />.</para>
      </summary>
      <param name="obj">
        The <see langword="Object" /> to test.
      </param>
      <returns>
        <para>This method returns <see langword="true" /> if <paramref name="obj" /> is a <see cref="T:System.Drawing.PointF" /> and has  the same coordinates as this <see cref="T:System.Drawing.Point" />.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderValue.TransformRotate270">
      <summary>
        <para>Specifies that the image is to be rotated clockwise 270 degrees about its center. Can be passed to the JPEG encoder as a parameter that belongs to the transformation category.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfPlusRecordBase">
      <summary>
        <para>See "Enhanced-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.QualityMode.Invalid">
      <summary>
        <para>Specifies an invalid mode.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Color.Turquoise">
      <summary>
        <para>Gets a system-defined color.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Imaging.BitmapData.Scan0">
      <summary>
        <para>Gets or sets the address of the first pixel data in the bitmap. This can also be thought of as the first scan line in the bitmap.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.SafeNativeMethods.HandleCollector.Add(System.IntPtr,System.Int32)">
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.BackwardDiagonal">
      <summary>
        <para>A pattern of lines on a diagonal from upper right to lower left.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Brushes.WhiteSmoke">
      <summary>
        <para>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Graphics.FillRegion(System.Drawing.Brush,System.Drawing.Region)">
      <summary>
        <para>Fills the interior of a <see cref="T:System.Drawing.Region" /> object.</para>
      </summary>
      <param name="brush">
        <see cref="T:System.Drawing.Brush" /> object that determines the characteristics of the fill.
      </param>
      <param name="region">
        <see cref="T:System.Drawing.Region" /> object that represents the area to fill.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.Printing.QueryPageSettingsEventArgs.PageSettings">
      <summary>
        <para> Gets or sets the page settings for the page to be printed.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.LinearGradientBrush.#ctor(System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,System.Drawing.Drawing2D.LinearGradientMode)">
      <summary>
        <para>Encapsulates a new instance of the <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> class with the specified points, colors, and orientation.</para>
      </summary>
      <param name="rect">
        A <see cref="T:System.Drawing.Rectangle" /> structure that specifies the endpoints of the linear gradient. The starting point is the upper-left corner of the rectangle, and the endpoint is the upper-right corner of the rectangle.
      </param>
      <param name="color1">
        A <see cref="T:System.Drawing.Color" /> structure that represents the starting color for the gradient.
      </param>
      <param name="color2">
        A <see cref="T:System.Drawing.Color" /> structure that represents the ending color for the gradient.
      </param>
      <param name="linearGradientMode">
        A <see langword="LinearGradientMode" /> enumeration that specifies the orientation of the gradient.
      </param>
    </member>
    <member name="M:System.Drawing.Drawing2D.LinearGradientBrush.MultiplyTransform(System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.MatrixOrder)">
      <summary>
        <para>Multiplies the <see cref="T:System.Drawing.Drawing2D.Matrix" /> object that represents the local geometric transform of this <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> object by the specified <see cref="T:System.Drawing.Drawing2D.Matrix" /> in the specified order.</para>
      </summary>
      <param name="matrix">
        The <see cref="T:System.Drawing.Drawing2D.Matrix" /> object by which to multiply the geometric transform.
      </param>
      <param name="order">
        A <see cref="T:System.Drawing.Drawing2D.MatrixOrder" /> enumeration that specifies in which order to multiply the two matrices.
      </param>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.SmallCheckerBoard">
      <summary>
        <para>Specifies a hatch that has the appearance of a checkerboard.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Graphics.RotateTransform(System.Single)">
      <summary>
        <para>Applies the specified rotation to the transformation matrix of this <see cref="T:System.Drawing.Graphics" /> object.</para>
      </summary>
      <param name="angle">
        Angle of rotation in degrees.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.LinearGradientBrush.ScaleTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
      <summary>
        <para>Scales the local geometric transform by the specified amounts in the specified order.</para>
      </summary>
      <param name="sx">
        The amount by which to scale the transform in the x-axis direction.
      </param>
      <param name="sy">
        The amount by which to scale the transform in the y-axis direction.
      </param>
      <param name="order">
        A <see cref="T:System.Drawing.Drawing2D.MatrixOrder" /> enumeration that specifies whether to append or prepend the scaling matrix.
      </param>
    </member>
    <member name="M:System.Drawing.Region.Intersect(System.Drawing.RectangleF)">
      <summary>
        <para>Updates this <see cref="T:System.Drawing.Region" /> object to the intersection of itself with the specified <see cref="T:System.Drawing.RectangleF" /> structure.</para>
      </summary>
      <param name="rect">
        The <see cref="T:System.Drawing.RectangleF" /> structure to intersect with this <see cref="T:System.Drawing.Region" /> object.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Drawing2D.CombineMode.Intersect">
      <summary>
        <para>Two clipping regions are combined by taking their intersection.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.Chocolate">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Color.Moccasin">
      <summary>
        <para>Gets a system-defined color.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.ToolboxBitmapAttribute.GetImage(System.Object,System.Boolean)">
      <summary>
        <para>Gets the <see cref="T:System.Drawing.Image" /> object associated with this <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> object.</para>
      </summary>
      <param name="component">
        The toolbox component with which this <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> object is associated.
      </param>
      <param name="large">
        Set to <see langword="true" /> if the image is in large format; otherwise, <see langword="false" />.
      </param>
      <returns>
        <para>The <see cref="T:System.Drawing.Image" /> object associated with this <see langword="ToolboxBitmapAttributeb" /> object.</para>
      </returns>
    </member>
    <member name="E:System.Drawing.Design.ToolboxItem.ComponentsCreating">
      <summary>
        <para>Occurs before and while components are created.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Region.IsVisible(System.Drawing.Point)">
      <summary>
        <para>Tests whether the specified <see cref="T:System.Drawing.Point" /> structure is contained within this <see cref="T:System.Drawing.Region" /> object.</para>
      </summary>
      <param name="point">
        The <see cref="T:System.Drawing.Point" /> structure to test.
      </param>
      <returns>
        <para>This method returns <see langword="true" /> when <paramref name="point" /> is contained within this <see cref="T:System.Drawing.Region" /> object; otherwise, <see langword="false" />.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Drawing2D.InterpolationMode.HighQualityBicubic">
      <summary>
        <para>Specifies high quality bicubic interpolation.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Pens.Transparent">
      <summary>
        <para>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.LineCap.ArrowAnchor">
      <summary>
        <para>Specifies an arrow-shaped anchor cap.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Region.GetHrgn(System.Drawing.Graphics)">
      <summary>
        <para>Returns a Windows handle to this <see cref="T:System.Drawing.Region" /> object in the specified graphics context.</para>
      </summary>
      <param name="g">
        The <see cref="T:System.Drawing.Graphics" /> object on which this <see cref="T:System.Drawing.Region" /> object is drawn.
      </param>
      <returns>
        <para>A Windows handle to this <see cref="T:System.Drawing.Region" /> object.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Printing.PrintController.OnStartPage(System.Drawing.Printing.PrintDocument,System.Drawing.Printing.PrintPageEventArgs)">
      <summary>
        <para>When overridden in a derived class, begins the control 
       sequence that determines when and how to print a page of a document.</para>
      </summary>
      <param name="document">A <see cref="T:System.Drawing.Printing.PrintDocument" /> that represents the document currently being printed.</param>
      <param name="e">A <see cref="T:System.Drawing.Printing.PrintPageEventArgs" /> that contains the event data.</param>
      <returns>
        <para>A <see cref="T:System.Drawing.Graphics" /> object that represents a page from a <see cref="T:System.Drawing.Printing.PrintDocument" />.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.Number10Envelope">
      <summary>
        <para>
       #10 envelope
       (4.125 in. by 9.5 in.).
    </para>
      </summary>
    </member>
    <member name="M:System.Drawing.Graphics.DrawBezier(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
      <summary>
        <para>Draws a Bézier spline defined by four ordered pairs of coordinates that represent points.</para>
      </summary>
      <param name="pen">
        <see cref="T:System.Drawing.Pen" /> object that determines the color, width, and style of the curve.
      </param>
      <param name="x1">
        x-coordinate of the starting point of the curve.
      </param>
      <param name="y1">
        y-coordinate of the starting point of the curve.
      </param>
      <param name="x2">
        x-coordinate of the first control point of the curve.
      </param>
      <param name="y2">
        y-coordinate of the first control point of the curve.
      </param>
      <param name="x3">
        x-coordinate of the second control point of the curve.
      </param>
      <param name="y3">
        y-coordinate of the second control point of the curve.
      </param>
      <param name="x4">
        x-coordinate of the ending point of the curve.
      </param>
      <param name="y4">
        y-coordinate of the ending point of the curve.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Drawing2D.PathPointType.Line">
      <summary>
    Specifies a line segment.
 </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.Matrix.Finalize">
      <summary>
    Cleans up resources allocated for this
 <see cref="T:System.Drawing.Drawing2D.Matrix" />.
 </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.HorizontalBrick">
      <summary>
        <para>Specifies a hatch that has the appearance of horizontally layered bricks.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.Standard12x11">
      <summary>
        <para>Standard paper (12 in. by 11 in.). Requires Windows 98,
       Windows
       NT 4.0, or later.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSetBrushOrgEx">
      <summary>
        <para>See "Enhanced-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.FontConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>
        <para>Converts the specified object to another type. The most common type conversion is to and from a string type. The default implementation calls the <see langword="ToString" /> method of the object if the object is valid and if the destination type is string. </para>
      </summary>
      <param name="context">
        A formatter context. This object can be used to get additional information about the environment this converter is being called from. This may be <see langword="null" />, so you should always check. Also, properties on the context object may also return <see langword="null" />.
      </param>
      <param name="culture">
        A <see langword="CultureInfo" /> object that specifies the culture used to represent the object.
      </param>
      <param name="value">
        The object to convert.
      </param>
      <param name="destinationType">
        The data type to convert the object to.
      </param>
      <returns>
        <para>The converted object. If this method cannot convert the specified object to the destination type, it throws a <see langword="NotSupportedException" /> exception.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfPaintRgn">
      <summary>
        <para>See "Enhanced-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfPolygon16">
      <summary>
        <para>See "Enhanced-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Printing.PrintPageEventArgs.HasMorePages">
      <summary>
        <para> Gets or sets a value indicating whether an additional page should
       be printed.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Design.IPropertyValueUIService.NotifyPropertyValueUIItemsChanged">
      <summary>
        <para>Notifies the <see cref="T:System.Drawing.Design.IPropertyValueUIService" /> implementation 
   that the global list of <see cref="T:System.Drawing.Design.PropertyValueUIItem" /> objects has been modified.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Printing.PrintPageEventArgs.Cancel">
      <summary>
        <para> Gets or sets a value indicating whether the print job should be canceled.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.IO.Stream,System.IntPtr,System.Drawing.Imaging.EmfType)">
      <summary>
        <para>Initializes a new instance of the <see cref="T:System.Drawing.Imaging.Metafile" /> class from the specified data stream, a Windows handle to a device context, and an <see cref="T:System.Drawing.Imaging.EmfType" /> enumeration that specifies the format of the <see cref="T:System.Drawing.Imaging.Metafile" /> object.</para>
      </summary>
      <param name="stream">
        A <see langword="Stream" /> object that contains the data for this <see cref="T:System.Drawing.Imaging.Metafile" /> object.
      </param>
      <param name="referenceHdc">
        A Windows handle to a device context.
      </param>
      <param name="type">
        An <see cref="T:System.Drawing.Imaging.EmfType" /> enumeration that specifies the format of the <see cref="T:System.Drawing.Imaging.Metafile" /> object.
      </param>
    </member>
    <member name="F:System.Drawing.KnownColor.LavenderBlush">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Image.GetPropertyItem(System.Int32)">
      <summary>
        <para>Gets the specified property item from this <see cref="T:System.Drawing.Image" /> object.</para>
      </summary>
      <param name="propid">
        The ID of the property item to get.
      </param>
      <returns>
        <para>The <see cref="T:System.Drawing.Imaging.PropertyItem" /> object this method gets.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.KnownColor.RoyalBlue">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.SizeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>
        <para>Converts the specified object to the converter's native type.</para>
      </summary>
      <param name="context">
        A formatter context. This object can be used to get additional information about the environment this converter is being called from. This may be <see langword="null" />, so you should always check. Also, properties on the context object may also return <see langword="null" />.
      </param>
      <param name="culture">
        An object that contains culture specific information, such as the language, calendar, and cultural conventions associated with a specific culture. It is based on the RFC 1766 standard.
      </param>
      <param name="value">
        The object to convert.
      </param>
      <returns>
        <para>The converted object. This will pass an exception if the conversion cannot be performed.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Drawing2D.FlushIntention.Sync">
      <summary>
        <para>Specifies that all graphics operations on the stack are executed as soon as possible. This synchronizes the graphics state.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.NavajoWhite">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderValue.TransformRotate90">
      <summary>
        <para>Specifies that the image is to be rotated clockwise 90 degrees about its center. Can be passed to the JPEG encoder as a parameter that belongs to the transformation category.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Imaging.ColorMap.OldColor">
      <summary>
        <para>Gets or sets the existing <see cref="T:System.Drawing.Color" /> structure to be converted.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.DarkMagenta">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfSetViewportOrg">
      <summary>
        <para>See "Windows-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.SolidBrush.Color">
      <summary>
        <para>Gets or sets the color of this <see cref="T:System.Drawing.SolidBrush" /> object.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.StringTrimming.Character">
      <summary>
        <para>Specifies that the text is trimmed to the nearest character.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.SetThreshold(System.Single)">
      <summary>
        <para>Sets the bi-level mapping threshold for all appropriate GDI+ objects (such as <see cref="T:System.Drawing.Bitmap" />, <see cref="T:System.Drawing.Brush" />, <see cref="T:System.Drawing.Pen" />, and so on).</para>
      </summary>
      <param name="threshold">
        A threshold value between 0.0 and 1.0 that is used as a breakpoint to sort colors that will be mapped to either a maximum or a minimum value.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.PointConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)">
      <summary>
        <para>Creates an instance of this type given a set of property values for the object. This is useful for objects that are immutable but still want to provide changeable properties.</para>
      </summary>
      <param name="context">
        A type descriptor through which additional context can be provided.
      </param>
      <param name="propertyValues">
        A dictionary of new property values. The dictionary contains a series of name-value pairs, one for each property returned from GetProperties.
      </param>
      <returns>
        <para>The newly created object, or <see langword="null" /> if the object could not be created. The default implementation returns <see langword="null" />.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.Widen(System.Drawing.Pen)">
      <summary>
        <para>Adds an additional outline to the path.</para>
      </summary>
      <param name="pen">
        A <see cref="T:System.Drawing.Pen" /> object that specifies the width between the original outline of the path and the new outline this method creates.
      </param>
    </member>
    <member name="M:System.Drawing.ToolboxBitmapAttribute.Equals(System.Object)">
      <summary>
        <para>Indicates whether the specified object is a <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> object and is identical to this <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> object.</para>
      </summary>
      <param name="value">
        The <see langword="Object" /> to test.
      </param>
      <returns>
        <para>This method returns <see langword="true" /> if <paramref name="value" /> is both a <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> object and is identical to this <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> object.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.KnownColor.LightSteelBlue">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Pens.DarkRed">
      <summary>
        <para>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.SystemColors.Menu">
      <summary>
        <para>Gets a <see cref="T:System.Drawing.Color" /> structure that is the color of a menu's background.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Region.Exclude(System.Drawing.Drawing2D.GraphicsPath)">
      <summary>
        <para>Updates this <see cref="T:System.Drawing.Region" /> object to contain only the portion of its interior that does not intersect with the specified <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object.</para>
      </summary>
      <param name="path">
        The <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object to exclude from this <see cref="T:System.Drawing.Region" /> object.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.RectangleF.Empty">
      <summary>
        <para>Represents an instance of the <see cref="T:System.Drawing.RectangleF" /> class with its members uninitialized.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Printing.PrintDocument.PrinterSettings">
      <summary>
        <para> Gets or sets the printer that
      prints the document.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.GraphicsUnit.Point">
      <summary>
        <para>Specifies a printer's point (1/72 inch) as the unit of measure.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Rectangle.Location">
      <summary>
        <para>Gets or sets the coordinates of the upper-left corner of this <see cref="T:System.Drawing.Rectangle" /> structure.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Font.ToString">
      <summary>
        <para>Returns a human-readable string representation of this <see cref="T:System.Drawing.Font" /> object.</para>
      </summary>
      <returns>
        <para>A string that represents this <see cref="T:System.Drawing.Font" /> object.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Imaging.ColorMatrixFlag.Default">
      <summary>
        <para>Specifies that all color values (including gray shades) are adjusted by the same color-adjustment matrix.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Region.Exclude(System.Drawing.Region)">
      <summary>
        <para>Updates this <see cref="T:System.Drawing.Region" /> object to contain only the portion of its interior that does not intersect with the specified <see cref="T:System.Drawing.Region" /> object.</para>
      </summary>
      <param name="region">
        The <see cref="T:System.Drawing.Region" /> object to exclude from this <see cref="T:System.Drawing.Region" /> object.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.Brushes.SlateBlue">
      <summary>
        <para>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.JapaneseEnvelopeKakuNumber3Rotated">
      <summary>
        <para>
       Japanese rotated Kaku #3 envelope. Requires
       Windows 98, Windows NT 4.0, or later.
    </para>
      </summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperSourceKind.AutomaticFeed">
      <summary>
        <para>Automatically fed paper.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Color.GreenYellow">
      <summary>
        <para>Gets a system-defined color.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Printing.PrintingPermission.ToXml">
      <summary>
        <para>Creates an XML encoding of the security object and its current
       state.</para>
      </summary>
      <returns>
        <para>An XML encoding of the security object, including any state
       information.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfStrokeAndFillPath">
      <summary>
        <para>See "Enhanced-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.ColorAdjustType.Text">
      <summary>
        <para>Color adjustment information for text.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Graphics.DrawClosedCurve(System.Drawing.Pen,System.Drawing.PointF[],System.Single,System.Drawing.Drawing2D.FillMode)">
      <summary>
        <para>Draws a closed cardinal spline defined by an array of <see cref="T:System.Drawing.PointF" /> structures using a specified tension.</para>
      </summary>
      <param name="pen">
        <see cref="T:System.Drawing.Pen" /> object that determines the color, width, and height of the curve.
      </param>
      <param name="points">
        Array of <see cref="T:System.Drawing.PointF" /> structures that define the spline.
      </param>
      <param name="tension">
        Value greater than or equal to 0.0F that specifies the tension of the curve.
      </param>
      <param name="fillmode">
        Member of the <see cref="T:System.Drawing.Drawing2D.FillMode" /> enumeration that determines how the curve is filled. This parameter is required but is ignored.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.KnownColor.MediumBlue">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.StringTrimming.None">
      <summary>
        <para>Specifies no trimming.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.ImageFormatConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>
        <para>Indicates whether this converter can convert an object in the specified source type to the native type of the converter.</para>
      </summary>
      <param name="context">
        A formatter context. This object can be used to get more information about the environment this converter is being called from. This may be <see langword="null" />, so you should always check. Also, properties on the context object may also return <see langword="null" />.
      </param>
      <param name="sourceType">
        The type you want to convert from.
      </param>
      <returns>
        <para>This method returns <see langword="true" /> if this object can perform the conversion.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Single,System.Single,System.Drawing.RectangleF,System.Drawing.GraphicsUnit)">
      <summary>
        <para>Draws the specified portion of the specified <see cref="T:System.Drawing.Image" /> object at the specified location with the original size.</para>
      </summary>
      <param name="image">
        <see cref="T:System.Drawing.Image" /> object to draw.
      </param>
      <param name="x">
        x-coordinate of the upper-left corner of the drawn image.
      </param>
      <param name="y">
        y-coordinate of the upper-left corner of the drawn image.
      </param>
      <param name="srcRect">
        <see cref="T:System.Drawing.RectangleF" /> structure that specifies the portion of the <paramref name="image" /> object to draw.
      </param>
      <param name="srcUnit">
        Member of the <see cref="T:System.Drawing.GraphicsUnit" /> enumeration that specifies the units of measure used by the <paramref name="srcRect" /> parameter.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Imaging.ImageFlags.HasAlpha">
      <summary>
        <para>The pixel data contains alpha information.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Point.op_Equality(System.Drawing.Point,System.Drawing.Point)">
      <summary>
        <para>Compares two <see cref="T:System.Drawing.Point" /> objects. The result specifies whether the values of the <see langword="X" /> and <see langword="Y" /> properties of the two <see cref="T:System.Drawing.Point" /> objects are equal.</para>
      </summary>
      <param name="left">
        A <see cref="T:System.Drawing.Point" /> to compare.
      </param>
      <param name="right">
        A <see cref="T:System.Drawing.Point" /> to compare.
      </param>
      <returns>
        <para>This operator returns <see langword="true" /> if the <see langword="X" /> and <see langword="Y" /> values of <paramref name="left" /> and <paramref name="right" /> are equal; otherwise, <see langword="false" />.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Design.IToolboxService.DeserializeToolboxItem(System.Object)">
      <summary>
        <para>Gets a toolbox item from the specified object that 
      represents a toolbox item in serialized form.</para>
      </summary>
      <param name="serializedObject">The object that contains the <see cref="T:System.Drawing.Design.ToolboxItem" /> to retrieve.</param>
      <returns>
        <para>The <see cref="T:System.Drawing.Design.ToolboxItem" /> created from the serialized object.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.Pens.PaleGoldenrod">
      <summary>
        <para>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Pens.SlateBlue">
      <summary>
        <para>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.ImageCodecFlags.Encoder">
      <summary>
        <para>Indicates that the codec supports encoding (saving). </para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeByte">
      <summary>
        <para>Specifies that each value in the array is an 8-bit unsigned integer.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Font.ToHfont">
      <summary>
        <para>Returns a handle to this <see cref="T:System.Drawing.Font" /> object.</para>
      </summary>
      <returns>
        <para>A Windows handle to this <see cref="T:System.Drawing.Font" /> object.</para>
      </returns>
    </member>
    <member name="T:System.Drawing.Text.PrivateFontCollection">
      <summary>
        <para>A collection of font families built from font files that are provided by the client application. For additional information on fonts and text, including example code, see <see langword="Fonts and Text" /> in the Using GDI+ Managed Classes section of these documents.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddBeziers(System.Drawing.PointF[])">
      <summary>
        <para>Adds a sequence of connected cubic Bézier curves to the current figure.</para>
      </summary>
      <param name="points">
        An array of <see cref="T:System.Drawing.PointF" /> structures that represents the points that define the curves.
      </param>
    </member>
    <member name="P:System.Drawing.Pens.Khaki">
      <summary>
        <para>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.SmoothingMode.HighQuality">
      <summary>
        <para>Specifies high quality, low speed rendering.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.WideUpwardDiagonal">
      <summary>
        <para>Specifies diagonal lines that slant to the left from top points to bottom points, have the same spacing as hatch style <see langword="BackwardDiagonal" />, and are triple its width, but are not antialiased.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.RectangleF.Intersect(System.Drawing.RectangleF)">
      <summary>
        <para>Replaces this <see cref="T:System.Drawing.RectangleF" /> structure with the intersection of itself and the specified <see cref="T:System.Drawing.RectangleF" /> structure.</para>
      </summary>
      <param name="rect">
        The rectangle to intersect.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.USStandardFanfold">
      <summary>
        <para>
       US standard
       fanfold (14.875 in. by 11 in.).
    </para>
      </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.Weave">
      <summary>
        <para>Specifies a hatch that has the appearance of a woven material.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSetIcmProfileA">
      <summary>
        <para>See "Enhanced-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
      <summary>
        <para>Appends an elliptical arc to the current figure.</para>
      </summary>
      <param name="x">
        The x-coordinate of the upper-left corner of the rectangular region that defines the ellipse from which the arc is drawn.
      </param>
      <param name="y">
        The y-coordinate of the upper-left corner of the rectangular region that defines the ellipse from which the arc is drawn.
      </param>
      <param name="width">
        The width of the rectangular region that defines the ellipse from which the arc is drawn.
      </param>
      <param name="height">
        The height of the rectangular region that defines the ellipse from which the arc is drawn.
      </param>
      <param name="startAngle">
        The starting angle of the arc, measured in degrees clockwise from the x-axis.
      </param>
      <param name="sweepAngle">
        The angle between <paramref name="startAngle" /> and the end of the arc.
      </param>
    </member>
    <member name="P:System.Drawing.Pens.SeaGreen">
      <summary>
        <para>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Color.Transparent">
      <summary>
        <para>Gets a system-defined color.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EndOfFile">
      <summary>
        <para>Identifies a record that marks the last EMF+ record of a metafile.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Image.Flags">
      <summary>
        <para>Gets attribute flags for this <see cref="T:System.Drawing.Image" /> object.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImageUnscaled(System.Drawing.Image,System.Drawing.Point)">
      <summary>
        <para>Draws the specified <see cref="T:System.Drawing.Image" /> object with its original size at the location specified by a <see cref="T:System.Drawing.Point" /> structure.</para>
      </summary>
      <param name="image">
        <see cref="T:System.Drawing.Image" /> object to draw.
      </param>
      <param name="point">
        <see cref="T:System.Drawing.Point" /> structure that represents the location of the upper-left corner of the drawn image.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
      <summary>
        <para>Sends the records in the specified <see cref="T:System.Drawing.Imaging.Metafile" /> object, one at a time, to a callback method for display at a specified point using specified image attributes.</para>
      </summary>
      <param name="metafile">
        <see cref="T:System.Drawing.Imaging.Metafile" /> object to enumerate.
      </param>
      <param name="destPoint">
        <see cref="T:System.Drawing.Point" /> structure that specifies the location of the upper-left corner of the drawn metafile.
      </param>
      <param name="callback">
        <see langword="Graphics.EnumerateMetafileProc" /> delegate that specifies the method to which the metafile records are sent.
      </param>
      <param name="callbackData">
        Internal pointer that is required, but ignored. You can pass <see langword="IntPtr.Zero" /> for this parameter.
      </param>
      <param name="imageAttr">
        <see cref="T:System.Drawing.Imaging.ImageAttributes" /> object that specifies image attribute information for the drawn image.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.DrawPie">
      <summary>
        <para>See <see cref="M:System.Drawing.Graphics.DrawPie" /><see langword=" Methods" />. </para>
      </summary>
    </member>
    <member name="T:System.Drawing.Printing.PreviewPageInfo">
      <summary>
        <para>Specifies print preview information for
       a single page. This class cannot be inherited.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Pens.Blue">
      <summary>
        <para>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Brushes.LightSalmon">
      <summary>
        <para>Gets a system-defined <see cref="T:System.Drawing.Brush" /> object.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.ImageFlags.Scalable">
      <summary>
        <para>The pixel data is scalable.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Printing.PrintingPermissionLevel.DefaultPrinting">
      <summary>
        <para>Provides printing programmatically to the default
      printer, along with safe printing through a less restricted dialog box.
   <see langword="DefaultPrinting" /> is a subset of
   <see langword="AllPrinting" />
   .</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Pens.Moccasin">
      <summary>
        <para>A system-defined <see cref="T:System.Drawing.Pen" /> object with a width of 1.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.KnownColor.SpringGreen">
      <summary>
        <para>A system-defined color.</para>
      </summary>
    </member>
    <member name="P:System.Drawing.Color.Black">
      <summary>
        <para>Gets a system-defined color.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.InterpolationMode.NearestNeighbor">
      <summary>
        <para>Specifies nearest-neighbor interpolation.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.LineJoin.MiterClipped">
    </member>
    <member name="T:System.Drawing.FontFamily">
      <summary>
        <para>Defines a group of type faces having a similar basic design and certain variations in styles. This class cannot be inherited. </para>
      </summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.Percent90">
      <summary>
        <para>Specifies a 90-percent hatch. The ratio of foreground color to background color is 90:100.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItem.GetType(System.ComponentModel.Design.IDesignerHost,System.Reflection.AssemblyName,System.String,System.Boolean)">
      <summary>
        <para>Creates an instance of the specified type.</para>
      </summary>
      <param name="host">The <see cref="T:System.ComponentModel.Design.IDesignerHost" /> for the current document. This can be <see langword="null" />.</param>
      <param name=" assemblyName">An <see cref="T:System.Reflection.AssemblyName" /> that indicates the assembly that contains the type to load. This can be <see langword="null" />.</param>
      <param name=" typeName">The name of the type to create an instance of.</param>
      <param name=" reference">A value indicating whether or not to add a reference to the assembly that contains the specified type to the designer host's set of references.</param>
      <returns>
        <para>An instance of the specified type, if it could be located.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.PointConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>
        <para>Gets a value indicating whether this converter can convert an object to the given destination type using the context.</para>
      </summary>
      <param name="context">
        An <see langword="ITypeDescriptorContext" /> object that provides a format context.
      </param>
      <param name="destinationType">
        A <see langword="Type" /> object that represents the type you want to convert to.
      </param>
      <returns>
        <para>This method returns <see langword="true" /> if this converter can perform the conversion; otherwise, <see langword="false" />.</para>
      </returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.CustomLineCap.GetStrokeCaps(System.Drawing.Drawing2D.LineCap@,System.Drawing.Drawing2D.LineCap@)">
      <summary>
        <para>Gets the caps used to start and end lines that make up this custom cap.</para>
      </summary>
      <param name="startCap">
        The <see cref="T:System.Drawing.Drawing2D.LineCap" /> enumeration used at the beginning of a line within this cap.
      </param>
      <param name="endCap">
        The <see cref="T:System.Drawing.Drawing2D.LineCap" /> enumeration used at the end of a line within this cap.
      </param>
    </member>
    <member name="M:System.Drawing.Color.GetHue">
      <summary>
        <para>Gets the hue-saturation-brightness (HSB) hue value, in degrees, for this <see cref="T:System.Drawing.Color" /> structure.</para>
      </summary>
      <returns>
        <para>The hue, in degrees, of this <see cref="T:System.Drawing.Color" /> structure. The hue is measured in degrees, ranging from 0.0 through 360.0, in HSB color space.</para>
      </returns>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.PaperSizeCollection.Item(System.Int32)">
      <summary>
        <para> Gets the <see cref="T:System.Drawing.Printing.PaperSize" /> at a specified index.</para>
      </summary>
      <param name="index">The index of the <see cref="T:System.Drawing.Printing.PaperSize" /> to get.</param>
    </member>
    <member name="M:System.Drawing.Region.Xor(System.Drawing.Rectangle)">
      <summary>
        <para>Updates this <see cref="T:System.Drawing.Region" /> object to the union minus the intersection of itself with the specified <see cref="T:System.Drawing.Rectangle" /> structure.</para>
      </summary>
      <param name="rect">
        The <see cref="T:System.Drawing.Rectangle" /> structure to <see langword="XOR" /> with this <see cref="T:System.Drawing.Region" /> object.
      </param>
      <returns>
        <para>This method does not return a value.</para>
      </returns>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderValue.Flush">
      <summary>
        <para>Specifies that a multiple-frame file or stream should be closed. Can be passed to the TIFF encoder as a parameter that belongs to the save flag category.</para>
      </summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfExcludeClipRect">
      <summary>
        <para>See "Windows-Format Metafiles" in the GDI section of the Platform SDK documentation.</para>
      </summary>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.CreateMeasurementGraphics">
      <summary>
        <para>Returns a <see cref="T:System.Drawing.Graphics" /