extra permissions for Avalon application when TargetZone is set to
    internet and localintranet.

    ===== It is used only inside Razzle. =======

    Please contact to AvPTT and Avalon MSBUILD team if you want to change any content in 
    this file.

-->

<WinFXExtraTrustInfo>

    <internet>

        <IPermission class="System.Security.Permissions.MediaPermission, WindowsBase, Version=3.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" version="1" Audio="SafeAudio" Video="SafeVideo" Image="SafeImage"/>

        <IPermission class="System.Security.Permissions.WebBrowserPermission, WindowsBase, Version=3.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" version="1" Level="Safe"/>

    </internet>


    <localintranet>

        <IPermission class="System.Security.Permissions.MediaPermission, WindowsBase, Version=3.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" version="1" Audio="SafeAudio" Video="SafeVideo" Image="SafeImage"/>

        <IPermission class="System.Security.Permissions.WebBrowserPermission, WindowsBase, Version=3.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" version="1" Level="Safe"/>

    </localintranet>

</WinFXExtraTrustInfo>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\tools\x86\managed\urt\v2.0.50727\Microsoft.Build.Utilities.xml ===
ï»¿<?xml version="1.0" encoding="utf-8"?>
<doc>
	<assembly>
		<name>Microsoft.Build.Utilities</name>
	</assembly>
	<members>
		<member name="N:Microsoft.Build.Utilities">
			<summary>The <see cref="N:Microsoft.Build.Utilities"></see> namespace provides helper classes that you can use to create your own MSBuild loggers and tasks.</summary>
		</member>
		<member name="T:Microsoft.Build.Utilities.AppDomainIsolatedTask">
			<summary>Provides the same functionality as <see cref="T:Microsoft.Build.Utilities.Task"></see>, but also derives from <see cref="T:System.MarshalByRefObject"></see> so that it can be instantiated in its own app domain.</summary>
		</member>
		<member name="M:Microsoft.Build.Utilities.AppDomainIsolatedTask.#ctor">
			<summary>Initializes a new instance of the <see cref="T:Microsoft.Build.Utilities.AppDomainIsolatedTask"></see> class.</summary>
		</member>
		<member name="M:Microsoft.Build.Utilities.AppDomainIsolatedTask.#ctor(System.Resources.ResourceManager)">
			<summary>Initializes a new instance of the <see cref="T:Microsoft.Build.Utilities.AppDomainIsolatedTask"></see> class and allows derived <see cref="T:Microsoft.Build.Utilities.Task"></see> classes to register their resources.</summary>
			<param name="taskResources">The task resources.</param>
		</member>
		<member name="M:Microsoft.Build.Utilities.AppDomainIsolatedTask.#ctor(System.Resources.ResourceManager,System.String)">
			<summary>Initializes a new instance of the <see cref="T:Microsoft.Build.Utilities.AppDomainIsolatedTask"></see> class and allows derived <see cref="T:Microsoft.Build.Utilities.Task"></see> classes to register their resources, as well as provide a prefix for composing help keywords from string resource names.</summary>
			<param name="helpKeywordPrefix">The Help keyword prefix.</param>
			<param name="taskResources">The task resources.</param>
		</member>
		<member name="M:Microsoft.Build.Utilities.AppDomainIsolatedTask.Execute">
			<summary>Runs the task.</summary>
			<returns>true if successful; otherwise, false.</returns>
		</member>
		<member name="M:Microsoft.Build.Utilities.AppDomainIsolatedTask.InitializeLifetimeService">
			<summary>When overridden in a derived class, gives tasks infinite lease time.</summary>
			<returns>null to specify an infinite lifetime.</returns>
		</member>
		<member name="P:Microsoft.Build.Utilities.AppDomainIsolatedTask.BuildEngine">
			<summary>Gets or sets the build engine interface that is available to tasks.</summary>
			<returns>The <see cref="T:Microsoft.Build.Framework.IBuildEngine"></see> that is available to tasks.</returns>
		</member>
		<member name="P:Microsoft.Build.Utilities.AppDomainIsolatedTask.HelpKeywordPrefix">
			<summary>Gets or sets the prefix that is used to compose Help keywords from string resource names.</summary>
			<returns>A <see cref="T:System.String"></see> that is used to compose Help keywords. This value can be null.</returns>
		</member>
		<member name="P:Microsoft.Build.Utilities.AppDomainIsolatedTask.HostObject">
			<summary>Gets or sets a host object instance that is associated with the derived <see cref="T:Microsoft.Build.Utilities.Task"></see>.</summary>
			<returns>The <see cref="T:Microsoft.Build.Framework.ITaskHost"></see> host object instance that is associated with the derived <see cref="T:Microsoft.Build.Utilities.Task"></see>. This value can be null.</returns>
		</member>
		<member name="P:Microsoft.Build.Utilities.AppDomainIsolatedTask.Log">
			<summary>Gets an instance of a task logging helper object that contains task logging methods.</summary>
			<returns>A <see cref="T:Microsoft.Build.Utilities.TaskLoggingHelper"></see> that contains task logging methods.</returns>
		</member>
		<member name="P:Microsoft.Build.Utilities.AppDomainIsolatedTask.TaskResources">
			<summary>Gets or sets culture-specific resources of the derived <see cref="T:Microsoft.Build.Utilities.Task"></see>.</summary>
			<returns>A <see cref="T:System.Resources.ResourceManager"></see> that is a culture-specific resource of the derived <see cref="T:Microsoft.Build.Utilities.Task"></see>. This value can be null.</returns>
		</member>
		<member name="T:Microsoft.Build.Utilities.CommandLineBuilder">
			<summary>Comprises utility methods for constructing a command line.</summary>
		</member>
		<member name="M:Microsoft.Build.Utilities.CommandLineBuilder.#ctor">
			<summary>Initializes a new instance of the <see cref="T:Microsoft.Build.Utilities.CommandLineBuilder"></see> class.</summary>
		</member>
		<member name="M:Microsoft.Build.Utilities.CommandLineBuilder.AppendFileNameIfNotNull(Microsoft.Build.Framework.ITaskItem)">
			<summary>Appends the command line with the file name of the specified <see cref="T:Microsoft.Build.Framework.ITaskItem"></see> object.</summary>
			<param name="fileItem">The task item specification to append to the command line. If it is null, then this method has no effect.</param>
		</member>
		<member name="M:Microsoft.Build.Utilities.CommandLineBuilder.AppendFileNameIfNotNull(System.String)">
			<summary>Appends the command line with file name represented by the parameter, inserting quotation marks if necessary.</summary>
			<param name="fileName">The file name to append. If it is null, then this method has no effect.</param>
		</member>
		<member name="M:Microsoft.Build.Utilities.CommandLineBuilder.AppendFileNamesIfNotNull(Microsoft.Build.Framework.ITaskItem[],System.String)">
			<summary>Appends the command line with the list of file names in the specified <see cref="T:Microsoft.Build.Framework.ITaskItem"></see> array, separated by the specified delimiter.</summary>
			<param name="fileItems">The task item specifications to append. If the array is null, then this method has no effect.</param>
			<param name="delimiter">The delimiter to put between task item specifications in the command line.</param>
		</member>
		<member name="M:Microsoft.Build.Utilities.CommandLineBuilder.AppendFileNamesIfNotNull(System.String[],System.String)">
			<summary>Appends the command line with the list of file names in the specified string array, separated by the specified delimiter.</summary>
			<param name="fileNames">The file names to append. If the array is null, then this method has no effect.</param>
			<param name="delimiter">The delimiter to put between file names in the command line.</param>
		</member>
		<member name="M:Microsoft.Build.Utilities.CommandLineBuilder.AppendFileNameWithQuoting(System.String)">
			<summary>Appends the command line with a file name, and surrounds the file name with quotation marks as necessary.</summary>
			<param name="fileName">The file name to append.</param>
		</member>
		<member name="M:Microsoft.Build.Utilities.CommandLineBuilder.AppendSpaceIfNotEmpty">
			<summary>Adds a space to the specified string, given the string is not empty.</summary>
		</member>
		<member name="M:Microsoft.Build.Utilities.CommandLineBuilder.AppendSwitch(System.String)">
			<summary>Appends the command line with the specified switch.</summary>
			<param name="switchName">The name of the switch to append to the command line. This value cannot be null.</param>
		</member>
		<member name="M:Microsoft.Build.Utilities.CommandLineBuilder.AppendSwitchIfNotNull(System.String,Microsoft.Build.Framework.ITaskItem)">
			<summary>Appends the command line with a switch that takes a task item specification that acts a single string parameter.</summary>
			<param name="parameter">The switch parameter to append to the command line. Quotation marks will be added as necessary. If this value is null, then this method has no effect.</param>
			<param name="switchName">The name of the switch to append to the command line. This value cannot be null.</param>
		</member>
		<member name="M:Microsoft.Build.Utilities.CommandLineBuilder.AppendSwitchIfNotNull(System.String,System.String)">
			<summary>Appends the command line with a switch that takes a single string parameter.</summary>
			<param name="parameter">The switch parameter to append to the command line. Quotation marks will be added as necessary. If this value is null, then this method has no effect.</param>
			<param name="switchName">The name of the switch to append to the command line. This value cannot be null.</param>
		</member>
		<member name="M:Microsoft.Build.Utilities.CommandLineBuilder.AppendSwitchIfNotNull(System.String,Microsoft.Build.Framework.ITaskItem[],System.String)">
			<summary>Appends the command line with a switch that takes an array of task item specifications that act as string parameters.</summary>
			<param name="delimiter">The delimiter that separates individual parameters. This value can be empty, but it cannot be null.</param>
			<param name="switchName">The name of the switch to append to the command line. This value cannot be null.</param>
			<param name="parameters">An array of switch parameters to append to the command line. Quotation marks will be added as necessary. If the array is null, then this method has no effect.</param>
		</member>
		<member name="M:Microsoft.Build.Utilities.CommandLineBuilder.AppendSwitchIfNotNull(System.String,System.String[],System.String)">
			<summary>Appends the command line with a switch that takes an array of string parameters.</summary>
			<param name="delimiter">The delimiter that separates individual parameters. This value can be empty, but it cannot be null.</param>
			<param name="switchName">The name of the switch to append to the command line. This value cannot be null.</param>
			<param name="parameters">An array of switch parameters to append to the command line. Quotation marks will be added as necessary. If the array is null, then this method has no effect.</param>
		</member>
		<member name="M:Microsoft.Build.Utilities.CommandLineBuilder.AppendSwitchUnquotedIfNotNull(System.String,Microsoft.Build.Framework.ITaskItem)">
			<summary>Appends the command line with a switch that takes a task item specification as a single string parameter, without attempting to encapsulate the switch parameter with quotation marks.</summary>
			<param name="parameter">The switch parameter to append to the command line. Quotation marks will not be added. If this value is null, then this method has no effect.</param>
			<param name="switchName">The name of the switch to append to the command line. This value cannot be null.</param>
		</member>
		<member name="M:Microsoft.Build.Utilities.CommandLineBuilder.AppendSwitchUnquotedIfNotNull(System.String,System.String)">
			<summary>Appends the command line with a switch that takes a single string parameter, without attempting to encapsulate the switch parameter with quotation marks.</summary>
			<param name="parameter">The switch parameter to append to the command line. Quotation marks will not be added. If this value is null, then this method has no effect.</param>
			<param name="switchName">The name of the switch to append to the command line. This value cannot be null.</param>
		</member>
		<member name="M:Microsoft.Build.Utilities.CommandLineBuilder.AppendSwitchUnquotedIfNotNull(System.String,Microsoft.Build.Framework.ITaskItem[],System.String)">
			<summary>Appends the command line with a switch that takes an array of task item specifications that act as string parameters, without attempting to encapsulate them with quotation marks.</summary>
			<param name="delimiter">The delimiter that separates individual parameters. This value can be empty, but it cannot be null.</param>
			<param name="switchName">The name of the switch to append to the command line. This value cannot be null.</param>
			<param name="parameters">An array of switch parameters to append to the command line. Quotation marks will not be added. If the array is null, then this method has no effect.</param>
		</member>
		<member name="M:Microsoft.Build.Utilities.CommandLineBuilder.AppendSwitchUnquotedIfNotNull(System.String,System.String[],System.String)">
			<summary>Appends the command line with a switch that takes an array of string parameters, without attempting to encapsulate switch parameters with quotation marks.</summary>
			<param name="delimiter">The delimiter that separates individual parameters. This value can be empty, but it cannot be null.</param>
			<param name="switchName">The name of the switch to append to the command line. This value cannot be null.</param>
			<param name="parameters">An array of switch parameters to append to the command line. Quotation marks will not be added. If the array is null, then this method has no effect.</param>
		</member>
		<member name="M:Microsoft.Build.Utilities.CommandLineBuilder.AppendTextUnquoted(System.String)">
			<summary>Appends the command line with string, without attempting to encapsulate the string with quotation marks.</summary>
			<param name="textToAppend">The string to append to the command line.</param>
		</member>
		<member name="M:Microsoft.Build.Utilities.CommandLineBuilder.AppendTextWithQuoting(System.String)">
			<summary>Appends the command line with string, and surrounds the string with quotations marks as necessary.</summary>
			<param name="textToAppend">The string to append to the command line.</param>
		</member>
		<member name="M:Microsoft.Build.Utilities.CommandLineBuilder.IsQuotingRequired(System.String)">
			<summary>Determines whether the specified string parameter should be surrounded with quotation marks because it contains white space.</summary>
			<returns>true, if the switch parameter should be surrounded with quotation marks; otherwise, false.</returns>
			<param name="parameter">The string to examine for characters that require quotation marks.</param>
		</member>
		<member name="M:Microsoft.Build.Utilities.CommandLineBuilder.ToString">
			<summary>Returns the command line as a string.</summary>
			<returns>A <see cref="T:System.String"></see> that represents the command line.</returns>
		</member>
		<member name="P:Microsoft.Build.Utilities.CommandLineBuilder.CommandLine">
			<summary>Gets the <see cref="T:System.Text.StringBuilder"></see> instance representing the command line for inheriting classes.</summary>
			<returns>A <see cref="T:System.Text.StringBuilder"></see> for inheriting classes.</returns>
		</member>
		<member name="T:Microsoft.Build.Utilities.HostObjectInitializationStatus">
			<summary>Defines the next action for <see cref="T:Microsoft.Build.Utilities.ToolTask"></see> after an attempt to initialize the host object.</summary>
		</member>
		<member name="F:Microsoft.Build.Utilities.HostObjectInitializationStatus.NoActionReturnFailure">
			<summary>Indicates that some of the parameters being passed into the task are invalid, and that the task should fail immediately.</summary>
		</member>
		<member name="F:Microsoft.Build.Utilities.HostObjectInitializationStatus.NoActionReturnSuccess">
			<summary>Indicates that the host object is up to date, and that no further action is necessary.</summary>
		</member>
		<member name="F:Microsoft.Build.Utilities.HostObjectInitializationStatus.UseAlternateToolToExecute">
			<summary>Indicates that either a host object is not available, or that the host object is not capable of supporting all of the features required for this build. Therefore, <see cref="T:Microsoft.Build.Utilities.ToolTask"></see> should fallback to an alternate means of doing the build, such as invoking the command-line tool.</summary>
		</member>
		<member name="F:Microsoft.Build.Utilities.HostObjectInitializationStatus.UseHostObjectToExecute">
			<summary>Indicates that an appropriate host object for this task exists, which can support all of the parameters passed in and should be invoked to do the real work of the task.</summary>
		</member>
		<member name="T:Microsoft.Build.Utilities.Logger">
			<summary>When overridden in a derived form, provides functionality for loggers that handle events raised by the  engine.</summary>
		</member>
		<member name="M:Microsoft.Build.Utilities.Logger.#ctor">
			<summary>Initializes a new instance of the <see cref="T:Microsoft.Build.Utilities.Logger"></see> class.</summary>
		</member>
		<member name="M:Microsoft.Build.Utilities.Logger.FormatErrorEvent(Microsoft.Build.Framework.BuildErrorEventArgs)">
			<summary>Generates an error message that is in the default format, from a <see cref="T:Microsoft.Build.Framework.BuildErrorEventArgs"></see> object.</summary>
			<returns>A <see cref="T:System.String"></see> that represents an error message in canonical format.</returns>
			<param name="args">The arguments of the error event.</param>
		</member>
		<member name="M:Microsoft.Build.Utilities.Logger.FormatWarningEvent(Microsoft.Build.Framework.BuildWarningEventArgs)">
			<summary>Generates a warning message that is in the default format, from a <see cref="T:Microsoft.Build.Framework.BuildWarningEventArgs"></see> object.</summary>
			<returns>A <see cref="T:System.String"></see> that represents a warning message in canonical format.</returns>
			<param name="args">The arguments of the warning event.</param>
		</member>
		<member name="M:Microsoft.Build.Utilities.Logger.Initialize(Microsoft.Build.Framework.IEventSource)">
			<summary>When overridden in a derived class, subscribes the logger to specific events.</summary>
			<param name="eventSource">The available events that a logger can subscribe to.</param>
		</member>
		<member name="M:Microsoft.Build.Utilities.Logger.IsVerbosityAtLeast(Microsoft.Build.Framework.LoggerVerbosity)">
			<summary>Determines whether the current <see cref="P:Microsoft.Build.Utilities.Logger.Verbosity"></see> setting is at least the value that is passed in.</summary>
			<returns>true if the current logger verbosity setting is at least the value that is passed in; otherwise, false.</returns>
			<param name="checkVerbosity">The logger verbosity setting passed in.</param>
		</member>
		<member name="M:Microsoft.Build.Utilities.Logger.Shutdown">
			<summary>When overridden in a derived class, releases the resources allocated to the logger at the time of initialization or during the build.</summary>
		</member>
		<member name="P:Microsoft.Build.Utilities.Logger.Parameters">
			<summary>Gets or sets the user-defined parameters of the logger.</summary>
			<returns>The logger parameters. This value can be null.</returns>
		</member>
		<member name="P:Microsoft.Build.Utilities.Logger.Verbosity">
			<summary>Gets or sets the level of detail to show in the event log.</summary>
			<returns>One of the enumeration values. The default is <see cref="F:Microsoft.Build.Framework.LoggerVerbosity.Normal"></see>.</returns>
		</member>
		<member name="T:Microsoft.Build.Utilities.TargetDotNetFrameworkVersion">
			<summary>Specifies the version of the  to use with the methods in <see cref="T:Microsoft.Build.Utilities.ToolLocationHelper"></see>.</summary>
		</member>
		<member name="F:Microsoft.Build.Utilities.TargetDotNetFrameworkVersion.Version11">
			<summary>Specifies  version 1.1.</summary>
		</member>
		<member name="F:Microsoft.Build.Utilities.TargetDotNetFrameworkVersion.Version20">
			<summary>Specifies  version 2.0.</summary>
		</member>
		<member name="F:Microsoft.Build.Utilities.TargetDotNetFrameworkVersion.VersionLatest">
			<summary>Specifies the most recent released version of the .</summary>
		</member>
		<member name="T:Microsoft.Build.Utilities.Task">
			<summary>When overridden in a derived form, provides functionality for tasks.</summary>
		</member>
		<member name="M:Microsoft.Build.Utilities.Task.#ctor">
			<summary>Initializes a new instance of the <see cref="T:Microsoft.Build.Utilities.Task"></see> class.</summary>
		</member>
		<member name="M:Microsoft.Build.Utilities.Task.#ctor(System.Resources.ResourceManager)">
			<summary>Initializes a new instance of the <see cref="T:Microsoft.Build.Utilities.Task"></see> class with the specified <see cref="P:Microsoft.Build.Utilities.Task.TaskResources"></see>.</summary>
			<param name="taskResources">The task resources.</param>
		</member>
		<member name="M:Microsoft.Build.Utilities.Task.#ctor(System.Resources.ResourceManager,System.String)">
			<summary>Initializes a new instance of the <see cref="T:Microsoft.Build.Utilities.Task"></see> class with the specified <see cref="P:Microsoft.Build.Utilities.Task.TaskResources"></see> and <see cref="P:Microsoft.Build.Utilities.Task.HelpKeywordPrefix"></see>.</summary>
			<param name="helpKeywordPrefix">The prefix to append to string resources to create Help keywords.</param>
			<param name="taskResources">The task resources.</param>
		</member>
		<member name="M:Microsoft.Build.Utilities.Task.Execute">
			<summary>When overridden in a derived class, executes the task.</summary>
			<returns>true if the task successfully executed; otherwise, false.</returns>
		</member>
		<member name="P:Microsoft.Build.Utilities.Task.BuildEngine">
			<summary>Gets or sets the instance of the <see cref="T:Microsoft.Build.Framework.IBuildEngine"></see> object used by the task.</summary>
			<returns>The <see cref="T:Microsoft.Build.Framework.IBuildEngine"></see> available to tasks.</returns>
		</member>
		<member name="P:Microsoft.Build.Utilities.Task.HelpKeywordPrefix">
			<summary>Gets or sets the prefix used to compose Help keywords from resource names.</summary>
			<returns>The prefix used to compose Help keywords from resource names.</returns>
		</member>
		<member name="P:Microsoft.Build.Utilities.Task.HostObject">
			<summary>Gets or sets the host object associated with the task.</summary>
			<returns>The host object associated with the task. This value can be null.</returns>
		</member>
		<member name="P:Microsoft.Build.Utilities.Task.Log">
			<summary>Gets an instance of a <see cref="T:Microsoft.Build.Utilities.TaskLoggingHelper"></see> class containing task logging methods.</summary>
			<returns>The logging helper object.</returns>
		</member>
		<member name="P:Microsoft.Build.Utilities.Task.TaskResources">
			<summary>Gets or sets the culture-specific resources associated with the task.</summary>
			<returns>The culture-specific resources associated with the task. This value can be null.</returns>
		</member>
		<member name="T:Microsoft.Build.Utilities.TaskItem">
			<summary>Defines a single item of the project as it is passed into a task.</summary>
		</member>
		<member name="M:Microsoft.Build.Utilities.TaskItem.#ctor">
			<summary>Initializes a new instance of the <see cref="T:Microsoft.Build.Utilities.TaskItem"></see> class.</summary>
		</member>
		<member name="M:Microsoft.Build.Utilities.TaskItem.#ctor(Microsoft.Build.Framework.ITaskItem)">
			<summary>Initializes a new instance of the <see cref="T:Microsoft.Build.Utilities.TaskItem"></see> class using the specified source <see cref="T:Microsoft.Build.Framework.ITaskItem"></see>.</summary>
			<param name="sourceItem">The item to copy.</param>
		</member>
		<member name="M:Microsoft.Build.Utilities.TaskItem.#ctor(System.String)">
			<summary>Initializes a new instance of the <see cref="T:Microsoft.Build.Utilities.TaskItem"></see> class using the specified item-specification string.</summary>
			<param name="itemSpec">The item specification.</param>
		</member>
		<member name="M:Microsoft.Build.Utilities.TaskItem.#ctor(System.String,System.Collections.IDictionary)">
			<summary>Initializes a new instance of the <see cref="T:Microsoft.Build.Utilities.TaskItem"></see> class using the specified item-specification string and its metadata.</summary>
			<param name="itemMetadata">The custom metadata for the item specification.</param>
			<param name="itemSpec">The item specification.</param>
		</member>
		<member name="M:Microsoft.Build.Utilities.TaskItem.CloneCustomMetadata">
			<summary>Clones the collection of custom metadata for the item specification.</summary>
			<returns>An <see cref="T:System.Collections.IDictionary"></see> that represents a clone of the custom metadata.</returns>
		</member>
		<member name="M:Microsoft.Build.Utilities.TaskItem.CopyMetadataTo(Microsoft.Build.Framework.ITaskItem)">
			<summary>Copies the item-specification metadata to the specified destination task item.</summary>
			<param name="destinationItem">The item that this method will copy metadata to.</param>
		</member>
		<member name="M:Microsoft.Build.Utilities.TaskItem.GetMetadata(System.String)">
			<summary>Retrieves the specified metadata on the item.</summary>
			<returns>A <see cref="T:System.String"></see> that represents the metadata value.</returns>
			<param name="metadataName">The name of the metadata to retrieve.</param>
		</member>
		<member name="M:Microsoft.Build.Utilities.TaskItem.InitializeLifetimeService">
			<summary>When overridden in a derived class, gives task items infinite lease time.</summary>
			<returns>null to specify an infinite lifetime.</returns>
		</member>
		<member name="M:Microsoft.Build.Utilities.TaskItem.op_Explicit(Microsoft.Build.Utilities.TaskItem)~System.String">
			<summary>Allows an explicit type cast from a <see cref="T:Microsoft.Build.Utilities.TaskItem"></see> to a <see cref="T:System.String"></see>, and returns the <see cref="P:Microsoft.Build.Utilities.TaskItem.ItemSpec"></see> for that item.</summary>
			<returns>The <see cref="P:Microsoft.Build.Utilities.TaskItem.ItemSpec"></see> for the item.</returns>
			<param name="taskItemToCast">The item to operate on.</param>
		</member>
		<member name="M:Microsoft.Build.Utilities.TaskItem.RemoveMetadata(System.String)">
			<summary>Removes the specified metadata on the item.</summary>
			<param name="metadataName">The name of metadata to remove.</param>
		</member>
		<member name="M:Microsoft.Build.Utilities.TaskItem.SetMetadata(System.String,System.String)">
			<summary>Sets or modifies the value of the specified metadata on the item.</summary>
			<param name="metadataValue">The new value of metadata.</param>
			<param name="metadataName">The name of metadata to set or modify.</param>
		</member>
		<member name="M:Microsoft.Build.Utilities.TaskItem.ToString">
			<summary>Gets the item specification.</summary>
			<returns>A <see cref="T:System.String"></see> that represents the item specification.</returns>
		</member>
		<member name="P:Microsoft.Build.Utilities.TaskItem.ItemSpec">
			<summary>Gets or sets the item specification.</summary>
			<returns>A <see cref="T:System.String"></see> that represents the item specification.</returns>
		</member>
		<member name="P:Microsoft.Build.Utilities.TaskItem.MetadataCount">
			<summary>Gets the number of metadata set on the item.</summary>
			<returns>An <see cref="T:System.Int32"></see> that represents the count of metadata set on the item.</returns>
		</member>
		<member name="P:Microsoft.Build.Utilities.TaskItem.MetadataNames">
			<summary>Gets the names of all the metadata on the item.</summary>
			<returns>An <see cref="T:System.Collections.ICollection"></see> of metadata names.</returns>
		</member>
		<member name="T:Microsoft.Build.Utilities.TaskLoggingHelper">
			<summary>Provides helper logging methods used by tasks.</summary>
		</member>
		<member name="M:Microsoft.Build.Utilities.TaskLoggingHelper.#ctor(Microsoft.Build.Framework.ITask)">
			<summary>Initializes a new instance of the <see cref="T:Microsoft.Build.Utilities.TaskLoggingHelper"></see> class and associates it with the specified task instance.</summary>
			<param name="taskInstance">The task containing an instance of this task.</param>
		</member>
		<member name="M:Microsoft.Build.Utilities.TaskLoggingHelper.ExtractMessageCode(System.String,System.String@)">
			<summary>Extracts the message code prefix from the given full message string.</summary>
			<returns>The message code prefix that is extracted from the full message string, or null if there is no message code.</returns>
			<param name="message">The full message to parse that includes code prefix.</param>
			<param name="messageWithoutCodePrefix">The message with the code prefix removed.</param>
			<exception cref="T:System.ArgumentNullException">message is null.</exception>
		</member>
		<member name="M:Microsoft.Build.Utilities.TaskLoggingHelper.FormatResourceString(System.String,System.Object[])">
			<summary>Loads the specified resource string and optionally formats it using the given arguments.</summary>
			<returns>The formatted string.</returns>
			<param name="args">Optional arguments for formatting the loaded string.</param>
			<param name="resourceName">The name of the string resource to load.</param>
			<exception cref="T:System.InvalidOperationException">The <see cref="P:Microsoft.Build.Utilities.Task.TaskResources"></see> property of the owner task is not set.</exception>
			<exception cref="T:System.ArgumentException">The string resource indicated by resourceName does not exist.</exception>
			<exception cref="T:System.ArgumentNullException">resourceName is null.</exception>
		</member>
		<member name="M:Microsoft.Build.Utilities.TaskLoggingHelper.FormatString(System.String,System.Object[])">
			<summary>Formats the given string using the given arguments.</summary>
			<returns>The formatted string.</returns>
			<param name="unformatted">The string to format.</param>
			<param name="args">Arguments for formatting.</param>
			<exception cref="T:System.ArgumentNullException">unformatted is null.</exception>
		</member>
		<member name="M:Microsoft.Build.Utilities.TaskLoggingHelper.LogCommandLine(System.String)">
			<summary>Logs the command line for an underlying tool, executable file, or shell command of a task.</summary>
			<param name="commandLine">The command line string.</param>
		</member>
		<member name="M:Microsoft.Build.Utilities.TaskLoggingHelper.LogCommandLine(Microsoft.Build.Framework.MessageImportance,System.String)">
			<summary>Logs the command line for an underlying tool, executable file, or shell command of a task using the specified importance level.</summary>
			<param name="importance">One of the values of <see cref="T:Microsoft.Build.Framework.MessageImportance"></see> that indicates the importance level of the command line.</param>
			<param name="commandLine">The command line string.</param>
		</member>
		<member name="M:Microsoft.Build.Utilities.TaskLoggingHelper.LogError(System.String,System.Object[])">
			<summary>Logs an error with the specified message.</summary>
			<param name="message">The message.</param>
			<param name="messageArgs">Optional arguments for formatting the message string.</param>
			<exception cref="T:System.ArgumentNullException">message is null.</exception>
		</member>
		<member name="M:Microsoft.Build.Utilities.TaskLoggingHelper.LogError(System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Object[])">
			<summary>Logs an error using the specified message and other error details.</summary>
			<param name="file">The path to the file containing the error.</param>
			<param name="errorCode">The error code.</param>
			<param name="subcategory">The description of the error type.</param>
			<param name="message">The message.</param>
			<param name="helpKeyword">The Help keyword to associate with the error.</param>
			<param name="columnNumber">The column in the file where the error occurs.</param>
			<param name="endLineNumber">The end line in the file where the error occurs.</param>
			<param name="endColumnNumber">The end column in the file where the error occurs.</param>
			<param name="messageArgs">Optional arguments for formatting the message string.</param>
			<param name="lineNumber">The line in the file where the error occurs.</param>
			<exception cref="T:System.ArgumentNullException">message is null.</exception>
		</member>
		<member name="M:Microsoft.Build.Utilities.TaskLoggingHelper.LogErrorFromException(System.Exception)">
			<summary>Logs an error using the message from the given exception.</summary>
			<param name="exception">The exception to log.</param>
			<exception cref="T:System.ArgumentNullException">e is null.</exception>
		</member>
		<member name="M:Microsoft.Build.Utilities.TaskLoggingHelper.LogErrorFromException(System.Exception,System.Boolean)">
			<summary>Logs an error using the message, and optionally the stack trace, from the given exception.</summary>
			<param name="exception">The exception to log</param>
			<param name="showStackTrace">true to include the stack trace in the log; otherwise, false.</param>
			<exception cref="T:System.ArgumentNullException">e is null.</exception>
		</member>
		<member name="M:Microsoft.Build.Utilities.TaskLoggingHelper.LogErrorFromResources(System.String,System.Object[])">
			<summary>Logs an error using the specified resource string.</summary>
			<param name="messageResourceName">The name of the string resource to load.</param>
			<param name="messageArgs">The arguments for formatting the loaded string.</param>
			<exception cref="T:System.ArgumentNullException">messageResourceName is null.</exception>
		</member>
		<member name="M:Microsoft.Build.Utilities.TaskLoggingHelper.LogErrorFromResources(System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Object[])">
			<summary>Logs an error using the specified resource string and other error details.</summary>
			<param name="file">The path to the file containing the error.</param>
			<param name="errorCode">The error code.</param>
			<param name="messageResourceName">The name of the string resource to load.</param>
			<param name="helpKeyword">The Help keyword to associate with the error.</param>
			<param name="subcategoryResourceName">The name of the string resource that describes the error type.</param>
			<param name="columnNumber">The column in the file where the error occurs.</param>
			<param name="endLineNumber">The end line in the file where the error occurs.</param>
			<param name="endColumnNumber">The end column in the file where the error occurs.</param>
			<param name="messageArgs">The arguments for formatting the loaded string.</param>
			<param name="lineNumber">The line in the file where the error occurs.</param>
			<exception cref="T:System.ArgumentNullException">messageResourceName is null.</exception>
		</member>
		<member name="M:Microsoft.Build.Utilities.TaskLoggingHelper.LogErrorWithCodeFromResources(System.String,System.Object[])">
			<summary>Logs an error with an error code using the specified resource string.</summary>
			<param name="messageResourceName">The name of the string resource to load.</param>
			<param name="messageArgs">The arguments for formatting the loaded string.</param>
			<exception cref="T:System.ArgumentNullException">messageResourceName is null.</exception>
		</member>
		<member name="M:Microsoft.Build.Utilities.TaskLoggingHelper.LogErrorWithCodeFromResources(System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Object[])">
			<summary>Logs an error using the specified resource string and other error details.</summary>
			<param name="file">The path to the file containing the error.</param>
			<param name="messageResourceName">The name of the string resource to load.</param>
			<param name="subcategoryResourceName">The name of the string resource that describes the error type.</param>
			<param name="columnNumber">The column in the file where the error occurs.</param>
			<param name="endLineNumber">The end line in the file where the error occurs.</param>
			<param name="endColumnNumber">The end column in the file where the error occurs.</param>
			<param name="messageArgs">The arguments for formatting the loaded string.</param>
			<param name="lineNumber">The line in the file where the error occurs.</param>
			<exception cref="T:System.ArgumentNullException">messageResourceName is null.</exception>
		</member>
		<member name="M:Microsoft.Build.Utilities.TaskLoggingHelper.LogExternalProjectFinished(System.String,System.String,System.String,System.Boolean)">
			<summary>Helps log the custom <see cref="T:Microsoft.Build.Framework.ExternalProjectFinishedEventArgs"></see> build event.</summary>
			<param name="message">The text message.</param>
			<param name="helpKeyword">The help keyword.</param>
			<param name="projectFile">The name of the project.</param>
			<param name="succeeded">true to indicate that project was built successfully; otherwise, false.</param>
		</member>
		<member name="M:Microsoft.Build.Utilities.TaskLoggingHelper.LogExternalProjectStarted(System.String,System.String,System.String,System.String)">
			<summary>Helps log the custom <see cref="T:Microsoft.Build.Framework.ExternalProjectStartedEventArgs"></see> build event.</summary>
			<param name="message">The text message.</param>
			<param name="helpKeyword">The help keyword.</param>
			<param name="projectFile">The name of the project.</param>
			<param name="targetNames">The targets to build. An empty string indicates default targets.</param>
		</member>
		<member name="M:Microsoft.Build.Utilities.TaskLoggingHelper.LogMessage(System.String,System.Object[])">
			<summary>Logs a message with the specified string.</summary>
			<param name="message">The message.</param>
			<param name="messageArgs">The arguments for formatting the message.</param>
			<exception cref="T:System.ArgumentNullException">message is null.</exception>
		</member>
		<member name="M:Microsoft.Build.Utilities.TaskLoggingHelper.LogMessage(Microsoft.Build.Framework.MessageImportance,System.String,System.Object[])">
			<summary>Logs a message with the specified string and importance.</summary>
			<param name="importance">One of the enumeration values that specifies the importance of the message.</param>
			<param name="message">The message.</param>
			<param name="messageArgs">The arguments for formatting the message.</param>
			<exception cref="T:System.ArgumentNullException">message is null.</exception>
		</member>
		<member name="M:Microsoft.Build.Utilities.TaskLoggingHelper.LogMessageFromResources(System.String,System.Object[])">
			<summary>Logs a message with the specified resource string.</summary>
			<param name="messageResourceName">The name of the string resource to load.</param>
			<param name="messageArgs">The arguments for formatting the loaded string.</param>
			<exception cref="T:System.ArgumentNullException">messageResourceName is null.</exception>
		</member>
		<member name="M:Microsoft.Build.Utilities.TaskLoggingHelper.LogMessageFromResources(Microsoft.Build.Framework.MessageImportance,System.String,System.Object[])">
			<summary>Logs a message with the specified resource string and importance.</summary>
			<param name="importance">One of the enumeration values that specifies the importance of the message.</param>
			<param name="messageResourceName">The name of the string resource to load.</param>
			<param name="messageArgs">The arguments for formatting the loaded string.</param>
			<exception cref="T:System.ArgumentNullException">message is null.</exception>
		</member>
		<member name="M:Microsoft.Build.Utilities.TaskLoggingHelper.LogMessageFromText(System.String,Microsoft.Build.Framework.MessageImportance)">
			<summary>Logs an error message or warning from the given line of text.</summary>
			<returns>true if an error was logged; otherwise, false.</returns>
			<param name="messageImportance">One of the values of <see cref="T:Microsoft.Build.Framework.MessageImportance"></see> that indicates the importance level of the command line.</param>
			<param name="lineOfText">The line of text to log from.</param>
			<exception cref="T:System.ArgumentNullException">lineOfText is null.</exception>
		</member>
		<member name="M:Microsoft.Build.Utilities.TaskLoggingHelper.LogMessagesFromFile(System.String)">
			<summary>Logs errors, warnings, and messages for each line of text in the given file.</summary>
			<returns>true to indicate at least one error was logged; otherwise, false.</returns>
			<param name="fileName">The name of the file to log messages from.</param>
			<exception cref="T:System.ArgumentNullException">message is null.</exception>
		</member>
		<member name="M:Microsoft.Build.Utilities.TaskLoggingHelper.LogMessagesFromFile(System.String,Microsoft.Build.Framework.MessageImportance)">
			<summary>Logs errors, warnings, and messages for each line of text in the given file. Also logs the importance of messages.</summary>
			<returns>true to indicate at least one error was logged; otherwise, false.</returns>
			<param name="fileName">The name of the file to log messages from.</param>
			<param name="messageImportance">One of the enumeration values that specifies the importance of logged messages.</param>
		</member>
		<member name="M:Microsoft.Build.Utilities.TaskLoggingHelper.LogMessagesFromStream(System.IO.TextReader,Microsoft.Build.Framework.MessageImportance)">
			<summary>Logs an error message or warning from the given stream.</summary>
			<returns>true if an error was logged; otherwise, false.</returns>
			<param name="messageImportance">One of the values of <see cref="T:Microsoft.Build.Framework.MessageImportance"></see> that indicates the importance level of the command line.</param>
			<param name="stream">A <see cref="T:System.IO.TextReader"></see> that reads the stream to log from.</param>
			<exception cref="T:System.ArgumentNullException">stream is null.</exception>
		</member>
		<member name="M:Microsoft.Build.Utilities.TaskLoggingHelper.LogWarning(System.String,System.Object[])">
			<summary>Logs a warning with the specified message.</summary>
			<param name="message">The message.</param>
			<param name="messageArgs">Optional arguments for formatting the message string.</param>
			<exception cref="T:System.ArgumentNullException">message is null.</exception>
		</member>
		<member name="M:Microsoft.Build.Utilities.TaskLoggingHelper.LogWarning(System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Object[])">
			<summary>Logs a warning using the specified message and other warning details.</summary>
			<param name="file">The path to the file containing the warning.</param>
			<param name="subcategory">The description of the warning type.</param>
			<param name="message">The message.</param>
			<param name="helpKeyword">The Help keyword to associate with the warning.</param>
			<param name="columnNumber">The column in the file where the warning occurs.</param>
			<param name="endLineNumber">The end line in the file where the warning occurs.</param>
			<param name="warningCode">The warning code.</param>
			<param name="endColumnNumber">The end column in the file where the warning occurs.</param>
			<param name="messageArgs">Optional arguments for formatting the message string.</param>
			<param name="lineNumber">The line in the file where the warning occurs.</param>
			<exception cref="T:System.ArgumentNullException">message is null.</exception>
		</member>
		<member name="M:Microsoft.Build.Utilities.TaskLoggingHelper.LogWarningFromException(System.Exception)">
			<summary>Logs a warning using the message from the specified exception.</summary>
			<param name="exception">The exception to log.</param>
			<exception cref="T:System.ArgumentNullException">e is null.</exception>
		</member>
		<member name="M:Microsoft.Build.Utilities.TaskLoggingHelper.LogWarningFromException(System.Exception,System.Boolean)">
			<summary>Logs a warning using the message, and optionally the stack trace, from the given exception.</summary>
			<param name="exception">The exception to log</param>
			<param name="showStackTrace">true to include the stack trace in the log; otherwise, false.</param>
			<exception cref="T:System.ArgumentNullException">e is null.</exception>
		</member>
		<member name="M:Microsoft.Build.Utilities.TaskLoggingHelper.LogWarningFromResources(System.String,System.Object[])">
			<summary>Logs a warning using the specified resource string.</summary>
			<param name="messageResourceName">The name of the string resource to load.</param>
			<param name="messageArgs">The arguments for formatting the loaded string.</param>
			<exception cref="T:System.ArgumentNullException">messageResourceName is null.</exception>
		</member>
		<member name="M:Microsoft.Build.Utilities.TaskLoggingHelper.LogWarningFromResources(System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Object[])">
			<summary>Logs a warning using the specified resource string and other warning details.</summary>
			<param name="file">The path to the file containing the warning.</param>
			<param name="messageResourceName">The name of the string resource to load.</param>
			<param name="helpKeyword">The Help keyword to associate with the warning.</param>
			<param name="subcategoryResourceName">The name of the string resource that describes the warning type.</param>
			<param name="columnNumber">The column in the file where the warning occurs.</param>
			<param name="endLineNumber">The end line in the file where the warning occurs.</param>
			<param name="warningCode">The warning code.</param>
			<param name="endColumnNumber">The end column in the file where the warning occurs.</param>
			<param name="messageArgs">The arguments for formatting the loaded string.</param>
			<param name="lineNumber">The line in the file where the warning occurs.</param>
			<exception cref="T:System.ArgumentNullException">messageResourceName is null.</exception>
		</member>
		<member name="M:Microsoft.Build.Utilities.TaskLoggingHelper.LogWarningWithCodeFromResources(System.String,System.Object[])">
			<summary>Logs a warning with a warning code using the specified resource string.</summary>
			<param name="messageResourceName">The name of the string resource to load.</param>
			<param name="messageArgs">The arguments for formatting the loaded string.</param>
			<exception cref="T:System.ArgumentNullException">messageResourceName is null.</exception>
		</member>
		<member name="M:Microsoft.Build.Utilities.TaskLoggingHelper.LogWarningWithCodeFromResources(System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Object[])">
			<summary>Logs a warning with a warning code using the specified resource string and other warning details.</summary>
			<param name="file">The path to the file containing the warning.</param>
			<param name="messageResourceName">The name of the string resource to load.</param>
			<param name="subcategoryResourceName">The name of the string resource that describes the warning type.</param>
			<param name="columnNumber">The column in the file where the warning occurs.</param>
			<param name="endLineNumber">The end line in the file where the warning occurs.</param>
			<param name="endColumnNumber">The end column in the file where the warning occurs.</param>
			<param name="messageArgs">The arguments for formatting the loaded string.</param>
			<param name="lineNumber">The line in the file where the warning occurs.</param>
			<exception cref="T:System.ArgumentNullException">messageResourceName is null.</exception>
		</member>
		<member name="P:Microsoft.Build.Utilities.TaskLoggingHelper.BuildEngine">
			<summary>Gets the build engine that is associated with the task.</summary>
			<returns>An <see cref="T:Microsoft.Build.Framework.IBuildEngine"></see> that represents the instance of the build engine that is associated with the task.</returns>
		</member>
		<member name="P:Microsoft.Build.Utilities.TaskLoggingHelper.HasLoggedErrors">
			<summary>Gets a value that indicates whether the task has logged any errors through this logging helper object.</summary>
			<returns>true if the task has logged any errors through this logging helper object; otherwise, false.</returns>
		</member>
		<member name="P:Microsoft.Build.Utilities.TaskLoggingHelper.HelpKeywordPrefix">
			<summary>Gets or sets the prefix used to compose Help keywords from resource names.</summary>
			<returns>The prefix used to compose Help keywords from resource names.</returns>
		</member>
		<member name="P:Microsoft.Build.Utilities.TaskLoggingHelper.TaskName">
			<summary>Gets the name of the parent task.</summary>
			<returns>The name of the parent task.</returns>
		</member>
		<member name="P:Microsoft.Build.Utilities.TaskLoggingHelper.TaskResources">
			<summary>Gets or sets the culture-specific resources used by the logging methods.</summary>
			<returns>A <see cref="T:System.Resources.ResourceManager"></see> that represents the culture-specific resources used by the logging methods. This value can be null.</returns>
		</member>
		<member name="T:Microsoft.Build.Utilities.ToolLocationHelper">
			<summary>Provides utility methods for locating  and  SDK files and directories.</summary>
		</member>
		<member name="M:Microsoft.Build.Utilities.ToolLocationHelper.GetDotNetFrameworkRootRegistryKey(Microsoft.Build.Utilities.TargetDotNetFrameworkVersion)">
			<summary>Gets the full name of the  root registry key.</summary>
			<returns>A string containing the full name of the  root registry key.</returns>
			<param name="version">The version of the  to target.</param>
		</member>
		<member name="M:Microsoft.Build.Utilities.ToolLocationHelper.GetDotNetFrameworkSdkInstallKeyValue(Microsoft.Build.Utilities.TargetDotNetFrameworkVersion)">
			<summary>Gets the value of the <see cref="M:Microsoft.Build.Utilities.ToolLocationHelper.GetDotNetFrameworkRootRegistryKey(Microsoft.Build.Utilities.TargetDotNetFrameworkVersion)"></see> that contains the  SDK installation path.</summary>
			<returns>A string containing the value of the  SDK installation path, or a null reference (Nothing in ) if the targeted version of the  is not installed.</returns>
			<param name="version">The version of the  to target.</param>
		</member>
		<member name="M:Microsoft.Build.Utilities.ToolLocationHelper.GetDotNetFrameworkVersionFolderPrefix(Microsoft.Build.Utilities.TargetDotNetFrameworkVersion)">
			<summary>Gets the prefix of the  folder.</summary>
			<returns>A string containing the prefix of the  folder, or a null reference (Nothing in ) if the targeted version of the  is not installed.</returns>
			<param name="version">The version of the  to target.</param>
		</member>
		<member name="M:Microsoft.Build.Utilities.ToolLocationHelper.GetPathToDotNetFramework(Microsoft.Build.Utilities.TargetDotNetFrameworkVersion)">
			<summary>Gets a fully qualified path to the  root directory.</summary>
			<returns>A string containing the fully qualified path to the  root directory, or a null reference (Nothing in ) if the targeted version of the  is not installed.</returns>
			<param name="version">The version of the  to target.</param>
		</member>
		<member name="M:Microsoft.Build.Utilities.ToolLocationHelper.GetPathToDotNetFrameworkFile(System.String,Microsoft.Build.Utilities.TargetDotNetFrameworkVersion)">
			<summary>Gets a fully qualified path to a file in the  directory.</summary>
			<returns>A string containing the fully qualified path to the specified file, or a null reference (Nothing in ) if the targeted version of the  is not installed.</returns>
			<param name="fileName">The file to locate in the  directory.</param>
			<param name="version">The version of the  to target.</param>
		</member>
		<member name="M:Microsoft.Build.Utilities.ToolLocationHelper.GetPathToDotNetFrameworkSdk(Microsoft.Build.Utilities.TargetDotNetFrameworkVersion)">
			<summary>Gets the fully qualified path to the \bin directory of the  SDK.</summary>
			<returns>A string containing the fully qualified path to the \bin directory of the  SDK, or a null reference (Nothing in ) if the targeted version of the  SDK is not installed.</returns>
			<param name="version">The version of the  to target.</param>
		</member>
		<member name="M:Microsoft.Build.Utilities.ToolLocationHelper.GetPathToDotNetFrameworkSdkFile(System.String,Microsoft.Build.Utilities.TargetDotNetFrameworkVersion)">
			<summary>Gets the fully qualified path to a file in the  SDK.</summary>
			<returns>A string containing the fully qualified path to the \bin directory of the  SDK, or a null reference (Nothing in ) if the targeted version of the  SDK is not installed.</returns>
			<param name="fileName">The file to locate in the  SDK.</param>
			<param name="version">The version of the  to target.</param>
		</member>
		<member name="M:Microsoft.Build.Utilities.ToolLocationHelper.GetPathToSystemFile(System.String)">
			<summary>Gets a fully qualified path to a file in the system directory.</summary>
			<returns>A string containing the fully qualified path to the the file in the system directory.</returns>
			<param name="fileName">The file to locate in the  SDK.</param>
		</member>
		<member name="P:Microsoft.Build.Utilities.ToolLocationHelper.PathToSystem">
			<summary>Gets the fully qualified path of the system directory.</summary>
			<returns>A string containing a directory path to the system directory.</returns>
		</member>
		<member name="T:Microsoft.Build.Utilities.ToolTask">
			<summary>When overridden in a derived form, provides functionality for a task that wraps a command line tool.</summary>
		</member>
		<member name="M:Microsoft.Build.Utilities.ToolTask.#ctor">
			<summary>Initializes a new instance of the <see cref="T:Microsoft.Build.Utilities.ToolTask"></see> class.</summary>
		</member>
		<member name="M:Microsoft.Build.Utilities.ToolTask.#ctor(System.Resources.ResourceManager)">
			<summary>Initializes a new instance of the <see cref="T:Microsoft.Build.Utilities.ToolTask"></see> class with the specified <see cref="T:System.Resources.ResourceManager"></see>.</summary>
			<param name="taskResources">The <see cref="T:System.Resources.ResourceManager"></see> for task resources.</param>
		</member>
		<member name="M:Microsoft.Build.Utilities.ToolTask.#ctor(System.Resources.ResourceManager,System.String)">
			<summary>Initializes a new instance of the <see cref="T:Microsoft.Build.Utilities.ToolTask"></see> class with the specified <see cref="T:System.Resources.ResourceManager"></see> and Help keyword prefix.</summary>
			<param name="helpKeywordPrefix">The Help keyword to use for messages raised by the task.</param>
			<param name="taskResources">The <see cref="T:System.Resources.ResourceManager"></see> for task resources.</param>
		</member>
		<member name="M:Microsoft.Build.Utilities.ToolTask.CallHostObjectToExecute">
			<summary>Calls the host object to perform the work of the task.</summary>
			<returns>true if the method was successfule; otherwise, false.</returns>
		</member>
		<member name="M:Microsoft.Build.Utilities.ToolTask.Execute">
			<summary>Runs the exectuable file with the specified task parameters.</summary>
			<returns>true if the task runs successfully; otherwise, false.</returns>
		</member>
		<member name="M:Microsoft.Build.Utilities.ToolTask.ExecuteTool(System.String,System.String,System.String)">
			<summary>Creates a temporoary response (.rsp) file and runs the executable file.</summary>
			<returns>The returned exit code of the executable file. If the task logged errors, but the executable returned an exit code of 0, this method returns -1.</returns>
			<param name="commandLineCommands">The command line arguments to pass directly to the executable file.</param>
			<param name="responseFileCommands">The command line arguments to place in the .rsp file.</param>
			<param name="pathToTool">The path to the executable file.</param>
		</member>
		<member name="M:Microsoft.Build.Utilities.ToolTask.GenerateCommandLineCommands">
			<summary>Returns a string value containing the command line arguments to pass directly to the executable file.</summary>
			<returns>A string value containing the command line arguments to pass directly to the executable file.</returns>
		</member>
		<member name="M:Microsoft.Build.Utilities.ToolTask.GenerateFullPathToTool">
			<summary>Returns the fully qualified path to the executable file.</summary>
			<returns>The fully qualified path to the executable file.</returns>
		</member>
		<member name="M:Microsoft.Build.Utilities.ToolTask.GenerateResponseFileCommands">
			<summary>Returns a string value containing the command line arguments to add to the response (.rsp) file before running the executable file.</summary>
			<returns>a string value containing the command line arguments to add to the response (.rsp) file before running the executable file.</returns>
		</member>
		<member name="M:Microsoft.Build.Utilities.ToolTask.GetResponseFileSwitch(System.String)">
			<summary>Returns the command line switch used by the executable file to specifiy a response (.rsp) file.</summary>
			<returns>The command line switch used by the executable file to specifiy a response (.rsp) file.</returns>
			<param name="responseFilePath">The full path to the temporary .rsp file.</param>
		</member>
		<member name="M:Microsoft.Build.Utilities.ToolTask.GetWorkingDirectory">
			<summary>Returns the directory in which to run the executable file.</summary>
			<returns>The directory in which to run the executable file, or a null reference (Nothing in ) if the executable file should be run in the current directory.</returns>
		</member>
		<member name="M:Microsoft.Build.Utilities.ToolTask.HandleTaskExecutionErrors">
			<summary>Handles execution errors raised by the executable file.</summary>
			<returns>true if the method runs successfully; otherwise, false.</returns>
		</member>
		<member name="M:Microsoft.Build.Utilities.ToolTask.InitializeHostObject">
			<summary>Initializes the host object of the task.</summary>
			<returns>The <see cref="T:Microsoft.Build.Utilities.HostObjectInitializationStatus"></see> of the host object.</returns>
		</member>
		<member name="M:Microsoft.Build.Utilities.ToolTask.LogEventsFromTextOutput(System.String,Microsoft.Build.Framework.MessageImportance)">
			<summary>Parses a single line of text to identify any errors or warnings in canonical format.</summary>
			<param name="messageImportance">A value of <see cref="T:Microsoft.Build.Framework.MessageImportance"></see> that indicates the importance level with which to log the message.</param>
			<param name="singleLine">A single line of text for the method to parse.</param>
		</member>
		<member name="M:Microsoft.Build.Utilities.ToolTask.LogPathToTool(System.String,System.String)">
			<summary>Logs the tool name and path to all registered loggers.</summary>
			<param name="toolName">The executable file name.</param>
			<param name="pathToTool">The path to the executable file.</param>
		</member>
		<member name="M:Microsoft.Build.Utilities.ToolTask.LogToolCommand(System.String)">
			<summary>Logs the starting point of the run to all registered loggers.</summary>
			<param name="message">A descriptive message to provide loggers, usually the command line and switches.</param>
		</member>
		<member name="M:Microsoft.Build.Utilities.ToolTask.SkipTaskExecution">
			<summary>Indicates whether task execution should be skipped.</summary>
			<returns>true to skip task execution; otherwise, false.</returns>
		</member>
		<member name="M:Microsoft.Build.Utilities.ToolTask.ValidateParameters">
			<summary>Indicates whether all task paratmeters are valid.</summary>
			<returns>true if all task parameters are valid; otherwise, false.</returns>
		</member>
		<member name="P:Microsoft.Build.Utilities.ToolTask.EnvironmentOverride">
			<summary>Gets the override value of the PATH environment variable.</summary>
			<returns>The override value of the PATH environment variable.</returns>
		</member>
		<member name="P:Microsoft.Build.Utilities.ToolTask.ExitCode">
			<summary>Gets the returned exit code of the executable file.</summary>
			<returns>The returned exit code of the executable file. If the task logged errors, but the executable returned an exit code of 0, this method returns -1.</returns>
		</member>
		<member name="P:Microsoft.Build.Utilities.ToolTask.ResponseFileEncoding">
			<summary>Gets the <see cref="T:System.Text.Encoding"></see> of the response file.</summary>
			<returns>The <see cref="T:System.Text.Encoding"></see> of the response file.</returns>
		</member>
		<member name="P:Microsoft.Build.Utilities.ToolTask.StandardErrorEncoding">
			<summary>Gets the <see cref="T:System.Text.Encoding"></see> of the standard error stream of the task.</summary>
			<returns>The <see cref="T:System.Text.Encoding"></see> of the response file.</returns>
		</member>
		<member name="P:Microsoft.Build.Utilities.ToolTask.StandardErrorLoggingImportance">
			<summary>Gets the <see cref="T:Microsoft.Build.Framework.MessageImportance"></see> with which to log errors.</summary>
			<returns>The <see cref="T:Microsoft.Build.Framework.MessageImportance"></see> with which to log errors.</returns>
		</member>
		<member name="P:Microsoft.Build.Utilities.ToolTask.StandardOutputEncoding">
			<summary>Gets the <see cref="T:System.Text.Encoding"></see> of the standard output stream of the task.</summary>
			<returns>The <see cref="T:System.Text.Encoding"></see> of the response file.</returns>
		</member>
		<member name="P:Microsoft.Build.Utilities.ToolTask.StandardOutputLoggingImportance">
			<summary>Gets the <see cref="T:Microsoft.Build.Framework.MessageImportance"></see> with which to log errors.</summary>
			<returns>The <see cref="T:Microsoft.Build.Framework.MessageImportance"></see> with which to log errors.</returns>
		</member>
		<member name="P:Microsoft.Build.Utilities.ToolTask.Timeout">
			<summary>Gets or sets the amount of time after which the task executable is terminated.</summary>
			<returns>The time-out length, in milliseconds.</returns>
		</member>
		<member name="P:Microsoft.Build.Utilities.ToolTask.ToolName">
			<summary>Gets the name of the executable file to run.</summary>
			<returns>The name of the executable file to run.</returns>
		</member>
		<member name="P:Microsoft.Build.Utilities.ToolTask.ToolPath">
			<summary>Gets or sets the path of the executable file to run.</summary>
			<returns>The path of the file to run.</returns>
		</member>
	</members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\tracewpp\readme.txt ===
Description:
	WPP preprocessor
	Preprocess WPP macros to generate ETW-based software tracing

Contacts:
	mailto:traceug - User group
	mailto:etwdev - tracewpp owners

Dependencies:
	None

Source:
	Vista/Win7 source depot or contact etwdev for copy of the latest bits
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\tracewpp\wppconfig\rev1\CodeTags.txt ===
# Nominal timestamp: 2004/11/17-21:38:31
# 
# Auto-generated from winmain-450k-newerupdatedlist.txt dated 2004/10/20
# with additional 13288 files from Vikram dated 2004/11/06
# See DavePr or LisaGra or RajeshM or JFeltis for questions.
# 
FILE  r1defwpp.ini
$TAG ENGR
$MODULE: build_tools_wppconfig
$OWNER: jtolman
$KEYWORDS: 
$ENDTAG

FILE *
$TAG ENGR
$MODULE: build_tools_wppconfig
$OWNER: josesua
$KEYWORDS: 
$ENDTAG

# checksum: 0020-008292397-00
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\tracewpp\wppconfig\rev1\r1defwpp.ini ===
#
# Default types for WPP
#

# our basic arithmetic types

DEFINE_SIMPLE_TYPE( SBYTE,  signed char,    ItemChar,  "d");
DEFINE_SIMPLE_TYPE( SSHORT, signed short,   ItemShort, "hd");
DEFINE_SIMPLE_TYPE( SINT,   signed int,     ItemInt,   "d");
DEFINE_SIMPLE_TYPE( SLONG,  signed long,    ItemLong,  "ld");
DEFINE_SIMPLE_TYPE( SINT64, signed _int64,  ItemLongLong,  "I64d");

DEFINE_FLAVOR( UCHAR,   SBYTE, ItemUChar, "c" );
DEFINE_FLAVOR( SCHAR,   SBYTE, ItemChar,  "c" );
DEFINE_FLAVOR( BOOLEAN, SBYTE, ItemListByte(FALSE,TRUE), "s");

# arch dependent types

DEFINE_SIMPLE_TYPE( SLONGPTR,  void*,     ItemPtr,  "p");
DEFINE_SIMPLE_TYPE( PTR,       void*,     ItemPtr,  "p");
DEFINE_SIMPLE_TYPE( HANDLE,    void*,     ItemPtr,  "p");

# all strings require custom processing

DEFINE_CPLX_TYPE(ASTR, WPP_LOGASTR, ItemString,   "s");
DEFINE_CPLX_TYPE(ARSTR, WPP_LOGASTR, ItemRString,  "s");
DEFINE_CPLX_TYPE(WSTR, WPP_LOGWSTR, ItemWString,  "s");
DEFINE_CPLX_TYPE(CSTR, WPP_LOGCSTR, ItemPString,  "s");
DEFINE_CPLX_TYPE(USTR, WPP_LOGUSTR, ItemPWString, "s");

# default formats for those who don't care to provide their own strings

DEFINE_FLAVOR(UBYTE, SBYTE,, "u");
DEFINE_FLAVOR(XBYTE, SBYTE,, "02x");
DEFINE_FLAVOR(OBYTE, SBYTE,, "o");

DEFINE_FLAVOR(USHORT, SSHORT, ItemUShort, "hu");
DEFINE_FLAVOR(XSHORT, SSHORT,, "04hX");
DEFINE_FLAVOR(OSHORT, SSHORT,, "ho");

DEFINE_FLAVOR(UINT, SINT, ItemUInt, "u");
DEFINE_FLAVOR(XINT, SINT,, "08x");
DEFINE_FLAVOR(OINT, SINT,, "o");

DEFINE_FLAVOR(ULONG, SLONG, ItemULong, "lu");
DEFINE_FLAVOR(XLONG, SLONG,, "08lX");
DEFINE_FLAVOR(OLONG, SLONG,, "lo");

DEFINE_FLAVOR(UINT64, SINT64,, "i64u");
DEFINE_FLAVOR(XINT64, SINT64,, "08i64X");
DEFINE_FLAVOR(OINT64, SINT64,, "i64o");

DEFINE_FLAVOR(ULONGPTR, SLONGPTR,,); 
DEFINE_FLAVOR(XLONGPTR, SLONGPTR,,);
DEFINE_FLAVOR(OLONGPTR, SLONGPTR,,);

# special formats

DEFINE_FLAVOR(IPADDR,    UINT,   ItemIPAddr,   "s");
DEFINE_FLAVOR(PORT,      USHORT, ItemPort,     "s");
DEFINE_FLAVOR(STATUS,    UINT,   ItemNTSTATUS, "s");
DEFINE_FLAVOR(WINERROR,  UINT,   ItemWINERROR, "s");
DEFINE_FLAVOR(PORT,      USHORT, ItemPort,     "s");
DEFINE_SIMPLE_TYPE(GUID, GUID,   ItemGuid, "s");

# time related stuff 

DEFINE_FLAVOR(TIMESTAMP, SINT64, ItemTimestamp, "s");
DEFINE_FLAVOR(TIME,      SINT64, ItemTimestamp, "s");
DEFINE_FLAVOR(DATE,      SINT64, ItemTimestamp, "s");
DEFINE_FLAVOR(WAITTIME,  SINT64, ItemTimestamp, "s");
DEFINE_FLAVOR(TIMEDELTA, SINT64, ItemTimestamp, "s");

# enumeration types

DEFINE_FLAVOR(ItemListByte,  SBYTE, ItemListByte, "s");
DEFINE_FLAVOR(ItemListShort, SSHORT, ItemListShort,"s");
DEFINE_FLAVOR(ItemListLong,  SLONG, ItemListLong, "s");

CUSTOM_TYPE(IRQL,    ItemListByte(Low,APC,DPC) );

CUSTOM_TYPE(PNPMN,   ItemListByte(IRP_MN_START_DEVICE,IRP_MN_QUERY_REMOVE_DEVICE,IRP_MN_REMOVE_DEVICE,IRP_MN_CANCEL_REMOVE_DEVICE,IRP_MN_STOP_DEVICE,IRP_MN_QUERY_STOP_DEVICE,IRP_MN_CANCEL_STOP_DEVICE,IRP_MN_QUERY_DEVICE_RELATIONS,IRP_MN_QUERY_INTERFACE,IRP_MN_QUERY_CAPABILITIES,IRP_MN_QUERY_RESOURCES,IRP_MN_QUERY_RESOURCE_REQUIREMENTS,IRP_MN_QUERY_DEVICE_TEXT,IRP_MN_FILTER_RESOURCE_REQUIREMENTS,IRP_MN_PNP_14,IRP_MN_READ_CONFIG,IRP_MN_WRITE_CONFIG,IRP_MN_EJECT,IRP_MN_SET_LOCK,IRP_MN_QUERY_ID,IRP_MN_QUERY_PNP_DEVICE_STATE,IRP_MN_QUERY_BUS_INFORMATION,IRP_MN_DEVICE_USAGE_NOTIFICATION,IRP_MN_SURPRISE_REMOVAL) );

# default tracing macro

SimpleTrace(MSG,ARG);
SimpleTraceEx(GRP,MSG,ARG);

USEPREFIX(*, "[%9!x!].%3!03x!::%4 [%1] ");
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\tracewpp\wppconfig\rev1\defaultwpp.ini ===
#
# Default types for WPP
#

# our basic arithmetic types

DEFINE_SIMPLE_TYPE( XINT64, signed __int64,  ItemLongLongX, "I64x", x, 8);
DEFINE_SIMPLE_TYPE( XXINT64, signed __int64,  ItemLongLongXX, "I64X", X, 8);
DEFINE_SIMPLE_TYPE( OINT64, signed __int64,  ItemLongLongO, "I64o", o, 8);

DEFINE_SIMPLE_TYPE( SBYTE,  signed char,     ItemChar,     "c",   c, 1);
DEFINE_SIMPLE_TYPE( SSHORT, signed short,    ItemShort,    "hd",  h, 2);
DEFINE_SIMPLE_TYPE( SINT,   signed int,      ItemLong,     "d",   d, 4);
DEFINE_SIMPLE_TYPE( SLONG,  signed long,     ItemLong,     "ld",  l, 4);
DEFINE_SIMPLE_TYPE( SINT64, signed __int64,  ItemLongLong, "I64d", i, 8);

DEFINE_SIMPLE_TYPE( UBYTE,  unsigned char,     ItemChar,     "c",   C, 1);
DEFINE_SIMPLE_TYPE( USHORT, unsigned short,    ItemShort,    "hu",  H, 2);
DEFINE_SIMPLE_TYPE( UINT,   unsigned int,      ItemLong,     "u",   D, 4);
DEFINE_SIMPLE_TYPE( ULONG,  unsigned long,     ItemLong,     "lu",  L, 4);
DEFINE_SIMPLE_TYPE( UINT64, unsigned __int64,  ItemULongLong, "I64u", I, 8);



DEFINE_SIMPLE_TYPE( DOUBLE, double,  ItemDouble, "s", g, 8);

# arch dependent types

DEFINE_SIMPLE_TYPE( SLONGPTR, LONG_PTR,     ItemPtr,  "Id", p, 6);
DEFINE_SIMPLE_TYPE( ULONGPTR, ULONG_PTR,    ItemPtr,  "Iu", P, 6);
DEFINE_SIMPLE_TYPE( PTR,      const void*,  ItemPtr,  "p", q, 6);
DEFINE_SIMPLE_TYPE( HANDLE,   const void*,  ItemPtr,  "p", Q, 6);

# predefined constants

DEFINE_SIMPLE_TYPE( COMPNAME,,, "__COMPNAME__",,);
DEFINE_SIMPLE_TYPE( FILE,,, "__FILE__",,);
DEFINE_SIMPLE_TYPE( LINE,,, "__LINE__",,);
DEFINE_SIMPLE_TYPE( FUNC,,, "%!FUNC!",,); // traceprt now understands %!FUNC!
DEFINE_SIMPLE_TYPE( LEVEL,,, "%!LEVEL!",,); // and %!LEVEL%

DEFINE_SIMPLE_TYPE( STDPREFIX,,, "%0",,);
DEFINE_SIMPLE_TYPE( MOD,,, "%1!s!",,);
DEFINE_SIMPLE_TYPE( TYP,,, "%2!s!",,);
DEFINE_SIMPLE_TYPE( TID,,, "%3!x!",,);
DEFINE_SIMPLE_TYPE( NOW,,, "%4!s!",,);
DEFINE_SIMPLE_TYPE( SEQ,,, "%7!x!",,);
DEFINE_SIMPLE_TYPE( PID,,, "%8!x!",,);
DEFINE_SIMPLE_TYPE( CPU,,, "%9!x!",,);
DEFINE_SIMPLE_TYPE( SPACE,,, " ",,);

DEFINE_SIMPLE_TYPE_PTR(GUID, LPCGUID, ItemGuid, "s", _guid_, 0); // simple type, passed by addr

DEFINE_FLAVOR( UCHAR,   SBYTE, ItemUChar, "c" );
DEFINE_FLAVOR( SCHAR,   SBYTE, ItemChar,  "c" );
DEFINE_FLAVOR( BOOLEAN, SBYTE, ItemListByte(FALSE,TRUE), "s");


# all strings require custom processing

DEFINE_CPLX_TYPE(ASTR,  WPP_LOGASTR,  const char*,     ItemString,  "s", s, 0);
DEFINE_CPLX_TYPE(ARSTR, WPP_LOGASTR,  LPCSTR,          ItemRString, "s", t, 0);
DEFINE_CPLX_TYPE(ARWSTR, WPP_LOGWSTR, LPCWSTR,        ItemRWString, "s", S, 0);
DEFINE_CPLX_TYPE(WSTR,  WPP_LOGWSTR,  LPCWSTR,         ItemWString, "s", S, 0);
DEFINE_CPLX_TYPE(CSTR,  WPP_LOGPCSTR, PCSTRING,        ItemPString, "s", z, 0, 2);
DEFINE_CPLX_TYPE(USTR,  WPP_LOGPUSTR, PCUNICODE_STRING,ItemPWString,"s", Z, 0, 2);
DEFINE_CPLX_TYPE(ANSTR,  WPP_LOGPCSTR, PCANSI_STRING,   ItemPString, "s", aZ, 0, 2);

DEFINE_CPLX_TYPE(sid,   WPP_LOGPSID, PSID, ItemSid,"s", _sid_, 0);
DEFINE_CPLX_TYPE(str,   WPP_LOGSTDSTR, const std::string&, ItemString,"s", _str_, 0);


#kludge for printf like statements

DEFINE_FLAVOR(e,  DOUBLE,,);
DEFINE_FLAVOR(E,  DOUBLE,,);
DEFINE_FLAVOR(f,  DOUBLE,,);
DEFINE_FLAVOR(g,  DOUBLE,,);
DEFINE_FLAVOR(G,  DOUBLE,,);

DEFINE_FLAVOR(c,  SBYTE,,);
DEFINE_FLAVOR(hc, SBYTE,,);
DEFINE_FLAVOR(lc, SSHORT,,);
DEFINE_FLAVOR(wc, SSHORT,,);
DEFINE_FLAVOR(C,  SSHORT,,);

DEFINE_FLAVOR(s,  ASTR,,);
DEFINE_FLAVOR(hs, ASTR,,);
DEFINE_FLAVOR(S,  WSTR,,);
DEFINE_FLAVOR(ws, WSTR,,);
DEFINE_FLAVOR(ls, WSTR,,);

DEFINE_FLAVOR(hi, SSHORT,,);
DEFINE_FLAVOR(hd, SSHORT,,);
DEFINE_FLAVOR(hu, USHORT,,"u");
DEFINE_FLAVOR(hx, USHORT,,"x");
DEFINE_FLAVOR(hX, USHORT,,"X");
DEFINE_FLAVOR(ho, USHORT,,"o");

DEFINE_FLAVOR(Id, ULONGPTR,,"Id");
DEFINE_FLAVOR(Iu, ULONGPTR,,"Iu");
DEFINE_FLAVOR(Ix, ULONGPTR,,"Ix");
DEFINE_FLAVOR(IX, ULONGPTR,,"IX");
DEFINE_FLAVOR(Io, ULONGPTR,,"Io");

DEFINE_FLAVOR(i, SINT,,);
DEFINE_FLAVOR(d, SINT,,);
DEFINE_FLAVOR(u, UINT,,"u");
DEFINE_FLAVOR(x, UINT,,"x");
DEFINE_FLAVOR(X, UINT,,"X");
DEFINE_FLAVOR(o, UINT,,"o");
DEFINE_FLAVOR(cccc, SINT, ItemChar4, "s");

DEFINE_FLAVOR(li, SLONG,,);
DEFINE_FLAVOR(ld, SLONG,,);
DEFINE_FLAVOR(lu, ULONG,,"u");
DEFINE_FLAVOR(lx, ULONG,,"x");
DEFINE_FLAVOR(lX, ULONG,,"X");
DEFINE_FLAVOR(lo, ULONG,,"o");

DEFINE_FLAVOR(I64d, SINT64,,);
DEFINE_FLAVOR(I64u, UINT64,,);
DEFINE_FLAVOR(I64x, XINT64,,"I64x");
DEFINE_FLAVOR(I64X, XXINT64,,"I64X");
DEFINE_FLAVOR(I64o, OINT64,,"I64o");

DEFINE_FLAVOR(p, PTR,,);

DEFINE_FLAVOR(Z,  ANSTR,,);
DEFINE_FLAVOR(wZ, USTR,,);
DEFINE_FLAVOR(z,  CSTR,,);
DEFINE_FLAVOR(hZ, CSTR,,);

# default formats for those who don't care to provide their own strings

DEFINE_FLAVOR(XBYTE, SBYTE,, "02x");
DEFINE_FLAVOR(OBYTE, SBYTE,, "o");

DEFINE_FLAVOR(XSHORT, SSHORT,, "04hX");
DEFINE_FLAVOR(OSHORT, SSHORT,, "ho");

DEFINE_FLAVOR(XINT, SINT,, "08x");
DEFINE_FLAVOR(OINT, SINT,, "o");

DEFINE_FLAVOR(XLONG, SLONG,, "08lX");
DEFINE_FLAVOR(OLONG, SLONG,, "lo");


DEFINE_FLAVOR(XLONGPTR, SLONGPTR,,"Ix");
DEFINE_FLAVOR(OLONGPTR, SLONGPTR,,"Ox");

# special formats

DEFINE_FLAVOR(IPADDR,    UINT,   ItemIPAddr,   "s");
DEFINE_FLAVOR(PORT,      USHORT, ItemPort,     "s");
DEFINE_FLAVOR(STATUS,    SINT,   ItemNTSTATUS, "s");
DEFINE_FLAVOR(WINERROR,  UINT,   ItemWINERROR, "s");
DEFINE_FLAVOR(HRESULT,   SINT,   ItemHRESULT, "s");

DEFINE_FLAVOR(ipaddr,IPADDR,,);
DEFINE_FLAVOR(port,PORT,,);
DEFINE_FLAVOR(status,STATUS,,);
DEFINE_FLAVOR(hresult,HRESULT,,);
DEFINE_FLAVOR(winerr,WINERROR,,);
DEFINE_FLAVOR(guid,GUID,,);

# time related stuff

DEFINE_FLAVOR(TIMESTAMP, SINT64, ItemTimestamp, "s");
DEFINE_FLAVOR(TIME,      SINT64, ItemTimestamp, "s");
DEFINE_FLAVOR(DATE,      SINT64, ItemTimestamp, "s");
DEFINE_FLAVOR(WAITTIME,  SINT64, ItemTimestamp, "s");

DEFINE_FLAVOR(due,      SINT64, ItemWaitTime, "s");
DEFINE_FLAVOR(delta,    SINT64, ItemTimeDelta, "s");
DEFINE_FLAVOR(datetime, SINT64, ItemTimestamp, "s");

# enumeration types

DEFINE_FLAVOR(ItemListByte,  SBYTE, ItemListByte, "s");
DEFINE_FLAVOR(ItemListShort, SSHORT, ItemListShort,"s");
DEFINE_FLAVOR(ItemListLong,  SLONG, ItemListLong, "s");

DEFINE_FLAVOR(ItemSetByte,  UBYTE, ItemSetByte, "s");
DEFINE_FLAVOR(ItemSetShort, USHORT, ItemSetShort,"s");
DEFINE_FLAVOR(ItemSetLong,  ULONG, ItemSetLong, "s");

DEFINE_FLAVOR(ItemEnum, ULONG, ItemEnum, "s");

DEFINE_FLAVOR(CLSID, GUID, ItemCLSID,  "s");
DEFINE_FLAVOR(LIBID, GUID, ItemLIBID,  "s");
DEFINE_FLAVOR(IID,   GUID, ItemIID,    "s");


CUSTOM_TYPE(b1,  ItemSetByte(1,2,3,4,5,6,7,8) );
CUSTOM_TYPE(b2,  ItemSetShort(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16) );
CUSTOM_TYPE(b4,  ItemSetLong(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32) );


CUSTOM_TYPE(bool,    ItemListLong(false,true) );
CUSTOM_TYPE(bool16,  ItemListShort(false,true) );
CUSTOM_TYPE(bool8,   ItemListByte(false,true) );

CUSTOM_TYPE(irql,    ItemListByte(Low,APC,DPC) );

CUSTOM_TYPE(pnpmn,   ItemListByte(IRP_MN_START_DEVICE,IRP_MN_QUERY_REMOVE_DEVICE,IRP_MN_REMOVE_DEVICE,IRP_MN_CANCEL_REMOVE_DEVICE,IRP_MN_STOP_DEVICE,IRP_MN_QUERY_STOP_DEVICE,IRP_MN_CANCEL_STOP_DEVICE,IRP_MN_QUERY_DEVICE_RELATIONS,IRP_MN_QUERY_INTERFACE,IRP_MN_QUERY_CAPABILITIES,IRP_MN_QUERY_RESOURCES,IRP_MN_QUERY_RESOURCE_REQUIREMENTS,IRP_MN_QUERY_DEVICE_TEXT,IRP_MN_FILTER_RESOURCE_REQUIREMENTS,IRP_MN_PNP_14,IRP_MN_READ_CONFIG,IRP_MN_WRITE_CONFIG,IRP_MN_EJECT,IRP_MN_SET_LOCK,IRP_MN_QUERY_ID,IRP_MN_QUERY_PNP_DEVICE_STATE,IRP_MN_QUERY_BUS_INFORMATION,IRP_MN_DEVICE_USAGE_NOTIFICATION,IRP_MN_SURPRISE_REMOVAL) );
CUSTOM_TYPE(sysctrl, ItemListByte(IRP_MN_QUERY_ALL_DATA,IRP_MN_QUERY_SINGLE_INSTANCE, IRP_MN_CHANGE_SINGLE_INSTANCE, IRP_MN_CHANGE_SINGLE_ITEM, IRP_MN_ENABLE_EVENTS, IRP_MN_DISABLE_EVENTS, IRP_MN_ENABLE_COLLECTION, IRP_MN_DISABLE_COLLECTION, IRP_MN_REGINFO, IRP_MN_EXECUTE_METHOD, IRP_MN_Reserved_0a, IRP_MN_REGINFO_EX) );

# default tracing macro

FUNC DoTraceMessage(LEVEL,MSG,...);
FUNC DoDebugTrace(TRACELEVEL,MSG,...);


# default prefix (use traceprt default)

USEPREFIX(*,"%!STDPREFIX!"); // traceprt will add standard prefix

WPP_FLAGS(-lookfor:WPP_INIT_TRACING); // the same flags that can be passed on the command line to tracewpp
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\tools\x86\managed\urt\v1.1.4322\Microsoft.VisualBasic.xml ===
ï»¿<doc>
	<assembly>
		<name>Microsoft.VisualBasic</name>
		<version>7.1.0.0</version>
	</assembly>
	<members>
		<member name="T:Microsoft.VisualBasic.AppWinStyle">
			<summary>The AppWinStyle enumeration contains constants used by the Shell function to control the style of an application window. These constants can be used anywhere in your code.
		</summary>
		</member>
<member name="F:Microsoft.VisualBasic.AppWinStyle.Hide">
			<summary>Window is hidden and focus is passed to the hidden window.</summary>
		</member>
<member name="F:Microsoft.VisualBasic.AppWinStyle.MaximizedFocus">
			<summary>Window is maximized with focus.</summary>
		</member>
<member name="F:Microsoft.VisualBasic.AppWinStyle.MinimizedFocus">
			<summary>Window is displayed as an icon with focus.</summary>
		</member>
<member name="F:Microsoft.VisualBasic.AppWinStyle.MinimizedNoFocus">
			<summary>Window is displayed as an icon. The currently active window remains active.</summary>
		</member>
<member name="F:Microsoft.VisualBasic.AppWinStyle.NormalFocus">
			<summary>Window has focus and is restored to its original size and position.</summary>
		</member>
<member name="F:Microsoft.VisualBasic.AppWinStyle.NormalNoFocus">
			<summary>Window is restored to its most recent size and position. The currently active window remains active.</summary>
		</member>

		<member name="T:Microsoft.VisualBasic.CallType">
			<summary>The CallType enumeration defines constants used to identify the call type used by the CallByName function.
		</summary>
		</member>
		<member name="F:Microsoft.VisualBasic.CallType.Get">
			<summary>A property value is being retrieved.</summary>
		</member>
		<member name="F:Microsoft.VisualBasic.CallType.Method">
			<summary>A method is being invoked.</summary>
		</member>
		<member name="F:Microsoft.VisualBasic.CallType.Set">
			<summary>A property value is being determined.</summary>
		</member>
		<member name="T:Microsoft.VisualBasic.Collection">
			<summary>The Collection class contains procedures used to perform operations on the Collection object.
		</summary>
		</member>
		<member name="M:Microsoft.VisualBasic.Collection.Add(System.Object,System.String,System.Object,System.Object)">
			<param name="Item">An object of any type that specifies the member to add to the collection.
		</param>
			<param name="Key">A unique String expression that specifies a key string that can be used instead of a positional index to access a member of the collection.
		</param>
			<param name="Before">The member to be added is placed in the collection before the member identified by the Before argument.</param>
			<param name="After">The member to be added is placed in the collection after the member identified by the After argument. </param>
			<summary>Adds a member to a Collection object.
		</summary>
		</member>
		<member name="P:Microsoft.VisualBasic.Collection.Count">
			<summary>Returns an integer containing the number of objects in a collection. Read-only.
		</summary>
		</member>
		<member name="P:Microsoft.VisualBasic.Collection.Item(System.Int32)">
			<summary>Returns a specific member of a Collection object either by position or by key.
		</summary>
			<param name="Index">Numeric Expression that specifies the position of a member of the collection. Index must be a number from 1 to the value of the collection's Count property. </param>
		</member>
		<member name="P:Microsoft.VisualBasic.Collection.Item(System.Object)">
			<summary>Returns a specific member of a Collection object either by position or by key.
		</summary>
			<param name="Index">Expression that specifies the position of a member of the collection, it must correspond to the key value specified when the member referred to was added to the collection.
		</param>
		</member>
		<member name="M:Microsoft.VisualBasic.Collection.Remove(System.Int32)">
			<param name="Index">Numeric expression that specifies the position of a member of the collection. Index must be a number from 1 to the value of the collection's Count property. 
		</param>
			<summary>Removes a member from a Collection object.
		</summary>
		</member>
		<member name="M:Microsoft.VisualBasic.Collection.Remove(System.String)">
			<param name="Key">Key must correspond to the Key argument specified when the member referred to was added to the collection.
		</param>
			<summary>Removes a member from a Collection object.
		</summary>
		</member>
	<member name="M:Microsoft.VisualBasic.Collection.GetEnumerator">
			<summary>Returns a reference to an IEnumerator interface, whose purpose is to grant access to an enumeration's items. 
		</summary>
		</member>
		<member name="T:Microsoft.VisualBasic.CompareMethod">
			<summary>The CompareMethod enumeration contains constants used to determine the way strings are compared when using the Instr and StrComp functions. These constants can be used anywhere in your code.
		</summary>
		</member>
<member name="F:Microsoft.VisualBasic.CompareMethod.Binary">
			<summary>Performs a binary comparison.</summary>
		</member>
<member name="F:Microsoft.VisualBasic.CompareMethod.Text">
			<summary>Performs a textual comparison.</summary>
		</member>
		<member name="T:Microsoft.VisualBasic.Constants">
			<summary>The Constants module contains miscellaneous constants. These constants can be used anywhere in your code.
		</summary>
		</member>
		<member name="F:Microsoft.VisualBasic.Constants.vbAbort">
			<summary> vbAbort = MsgBoxResult.Abort - Abort button was pressed.
		</summary>
		</member>
		<member name="F:Microsoft.VisualBasic.Constants.vbAbortRetryIgnore">
			<summary>
				 vbAbortRetryIgnore = MsgBoxStyle.AbortRetryIgnore - Abort, Retry, and Ignore buttons.
			</summary>
		</member>
		<member name="F:Microsoft.VisualBasic.Constants.vbApplicationModal">
			<summary>vbApplicationModal = MsgBoxStyle.ApplicationModal - Application modal message box (default).
		</summary>
		</member>
		<member name="F:Microsoft.VisualBasic.Constants.vbArchive">
			<summary>vbArchive = FileAttribute.Archive - File has changed since last backup.
		</summary>
		</member>
<member name="F:Microsoft.VisualBasic.Constants.vbArray">
			<summary>vbArray = VariantType.Array - Array.
		</summary>
		</member>
		<member name="F:Microsoft.VisualBasic.Constants.vbBack">
			<summary>vbBack - Chr(8) Backspace character.
		</summary>
		</member>
		<member name="F:Microsoft.VisualBasic.Constants.vbBinaryCompare">
			<summary>vbBinaryCompare = CompareMethod.Binary - Performs a binary comparison.
		</summary>
		</member>
<member name="F:Microsoft.VisualBasic.Constants.vbBoolean">
			<summary>vbBoolean = VariantType.Boolean - Contains a Boolean value (True or False).
		</summary>
		</member>
<member name="F:Microsoft.VisualBasic.Constants.vbByte">
			<summary>vbByte = VariantType.Byte - Contains a Byte value (0 through 255).
		</summary>
		</member>
		<member name="F:Microsoft.VisualBasic.Constants.vbCancel">
			<summary>vbCancel = MsgBoxResult.Cancel - Cancel button was pressed.
		</summary>
		</member>
		<member name="F:Microsoft.VisualBasic.Constants.vbCr">
			<summary>vbCr - Chr(13) Carriage return character.
		</summary>
		</member>
		<member name="F:Microsoft.VisualBasic.Constants.vbCritical">
			<summary>vbCritical = MsgBoxStyle.Critical - Critical message.
		</summary>
		</member>
		<member name="F:Microsoft.VisualBasic.Constants.vbCrLf">
			<summary>vbCrLf - Chr(13) + Chr(10) Carriage return/linefeed character combination.
		</summary>
		</member>
<member name="F:Microsoft.VisualBasic.Constants.vbCurrency">
			<summary>vbCurrency = VariantType.Currency - Contains a Currency value.
		</summary>
		</member>
		<member name="F:Microsoft.VisualBasic.Constants.vbDate">
			<summary>vbDate = VariantType.Date - Contains a Date value.
		</summary>
		</member>
<member name="F:Microsoft.VisualBasic.Constants.vbDecimal">
			<summary>vbDecimal = VariantType.Decimal - Contains a Decimal value.
		</summary>
		</member>
		<member name="F:Microsoft.VisualBasic.Constants.vbDefaultButton1">
			<summary>vbDefaultButton1 = MsgBoxStyle.DefaultButton1 - First button is default (default).
		</summary>
		</member>
		<member name="F:Microsoft.VisualBasic.Constants.vbDefaultButton2">
			<summary>vbDefaultButton2 = MsgBoxStyle.DefaultButton2 - Second button is default.
		</summary>
		</member>
		<member name="F:Microsoft.VisualBasic.Constants.vbDefaultButton3">
			<summary>vbDefaultButton3 = MsgBoxStyle.DefaultButton3 - Third button is default.
		</summary>
		</member>
		<member name="F:Microsoft.VisualBasic.Constants.vbDirectory">
			<summary>vbDirectory = FileAttribute.Directory - Directory or folder.
		</summary>
		</member>
<member name="F:Microsoft.VisualBasic.Constants.vbDouble">
			<summary>vbDouble = VariantType.Double - Contains a Double value.
		</summary>
		</member>
<member name="F:Microsoft.VisualBasic.Constants.vbEmpty">
			<summary>vbEmpty = VariantType.Empty - Null reference.
		</summary>
		</member>
		<member name="F:Microsoft.VisualBasic.Constants.vbExclamation">
			<summary>vbExclamation = MsgBoxStyle.Exclamation - Warning message.
		</summary>
		</member>
		<member name="F:Microsoft.VisualBasic.Constants.vbFalse">
			<summary>vbFalse = Tristate.False - Tristate value of False.
		</summary>
		</member>
		<member name="F:Microsoft.VisualBasic.Constants.vbFirstFourDays">
			<summary>vbFirstFourDays = FirstWeekOfYear.FirstFourDays - The first week that has at least four days in the new year.
		</summary>
		</member>
		<member name="F:Microsoft.VisualBasic.Constants.vbFirstFullWeek">
			<summary>vbFirstFullWeek = FirstWeekOfYear.FirstFullWeek - The first full week of the year.
		</summary>
		</member>
		<member name="F:Microsoft.VisualBasic.Constants.vbFirstJan1">
			<summary>vbFirstJan1 = FirstWeekOfYear.Jan1 - The week in which January 1 occurs (default).
		</summary>
		</member>
		<member name="F:Microsoft.VisualBasic.Constants.vbFormFeed">
			<summary>vbFormFeed - Chr(12).
		</summary>
		</member>
		<member name="F:Microsoft.VisualBasic.Constants.vbFriday">
			<summary>vbFriday = FirstDayOfWeek.Friday - Friday.
		</summary>
		</member>
		<member name="F:Microsoft.VisualBasic.Constants.vbGeneralDate">
			<summary>vbGeneralDate = DateFormat.GeneralDate - For real numbers, displays a date and time. If the number has no fractional part, displays only a date. If the number has no integer part, displays time only.
		</summary>
		</member>
		<member name="F:Microsoft.VisualBasic.Constants.vbGet">
			<summary>vbGet = CallType.Get - A property value is being retrieved.
		</summary>
		</member>
		<member name="F:Microsoft.VisualBasic.Constants.vbHidden">
			<summary>vbHidden = FileAttribute.Hidden - Hidden.
		</summary>
		</member>
		<member name="F:Microsoft.VisualBasic.Constants.vbHide">
			<summary>vbHide = AppWinStyle.Hide - Window is hidden and focus is passed to the hidden window.
		</summary>
		</member>
		<member name="F:Microsoft.VisualBasic.Constants.vbHiragana">
			<summary>vbHiragana = VbStrConv.Hirigana - Converts Katakana characters in the string to Hiragana characters. Applies to Japanese locale only.
		</summary>
		</member>
		<member name="F:Microsoft.VisualBasic.Constants.vbIgnore">
			<summary>vbIgnore = MsgBoxResult.Ignore - Ignore button was pressed.</summary>
		</member>
		<member name="F:Microsoft.VisualBasic.Constants.vbInformation">
			<summary>vbInformation = MsgBoxStyle.Information - Information message.</summary>
		</member>
<member name="F:Microsoft.VisualBasic.Constants.vbInteger">
			<summary>vbInteger = VariantType.Integer - Contains an Integer value.
		</summary>
		</member>
<member name="F:Microsoft.VisualBasic.Constants.vbKatakana">
			<summary>vbKatakana = VbStrConv.Katakana - Converts Hiragana characters in the string to Katakana characters.
		</summary>
		</member>
<member name="F:Microsoft.VisualBasic.Constants.vbLet">
			<summary>vbLet = CallType.Let - A property value is being determined.
		</summary>
		</member>
		<member name="F:Microsoft.VisualBasic.Constants.vbLf">
			<summary>vbLf - Chr(10) Linefeed character.</summary>
		</member>
<member name="F:Microsoft.VisualBasic.Constants.vbLinguisticCasing">
			<summary>vbLinguinsticCasing = VbStrConv.LinguisticCasing - Converts the string from file system rules for casing to linguistic rules.
		</summary>
		</member>
<member name="F:Microsoft.VisualBasic.Constants.vbLong">
			<summary>vbLong = VariantType.Long - Contains a Long value.
		</summary>
		</member>
		<member name="F:Microsoft.VisualBasic.Constants.vbLongDate">
			<summary>vbLongDate = DateFormat.LongDate - Displays a date using the long-date format specified in your computer's regional settings.</summary>
		</member>
		<member name="F:Microsoft.VisualBasic.Constants.vbLongTime">
			<summary>vbLongTime = DateFormat.LongTime - Displays a time using the long-time format specified in your computer's regional settings.</summary>
		</member>
		<member name="F:Microsoft.VisualBasic.Constants.vbLowerCase">
			<summary>vbLowerCase = VbStrConv.LowerCase - Converts the string to lowercase characters.</summary>
		</member>
		<member name="F:Microsoft.VisualBasic.Constants.vbMaximizedFocus">
			<summary>vbMaximizedFocus = AppWinStyle.MaximizedFocus - Window is maximized with focus.</summary>
		</member>
		<member name="F:Microsoft.VisualBasic.Constants.vbMethod">
			<summary>vbMethod = CallType.Method - A method is being invoked.</summary>
		</member>
		<member name="F:Microsoft.VisualBasic.Constants.vbMinimizedFocus">
			<summary>vbMinimizedFocus = AppWinStyle.MinimizedFocus - Window is displayed as an icon with focus.</summary>
		</member>
		<member name="F:Microsoft.VisualBasic.Constants.vbMinimizedNoFocus">
			<summary>vbMinimizedNoFocus = AppWinStyle.MinimizedNoFocus - Window is displayed as an icon. The currently active window remains active.</summary>
		</member>
		<member name="F:Microsoft.VisualBasic.Constants.vbMonday">
			<summary>vbMonday = FirstDayOfWeek.Monday - Monday.</summary>
		</member>
<member name="F:Microsoft.VisualBasic.Constants.vbMsgBoxHelp">
			<summary>vbMsgBoxHelp = MsgBoxStyle.MsgBoxHelp - Help text.
		</summary>
		</member>
		<member name="F:Microsoft.VisualBasic.Constants.vbMsgBoxRight">
			<summary>vbMsgBoxRight = MsgBoxStyle.MsgBoxRight - Right-aligned text.</summary>
		</member>
		<member name="F:Microsoft.VisualBasic.Constants.vbMsgBoxRtlReading">
			<summary>vbMsgBoxRtlReading = MsgBoxStyle.MsgBoxRtlReading - Right-to-left reading text (Hebrew and Arabic systems).</summary>
		</member>
		<member name="F:Microsoft.VisualBasic.Constants.vbMsgBoxSetForeground">
			<summary>vbMsgBoxSetForeground = MsgBoxStyle.MsgBoxSetForeground - Foreground message box window.</summary>
		</member>
		<member name="F:Microsoft.VisualBasic.Constants.vbNarrow">
			<summary>vbNarrow = VbStrConv.Narrow - Converts wide (double-byte) characters in the string to narrow (single-byte) characters. Applies to Asian locales.</summary>
		</member>
		<member name="F:Microsoft.VisualBasic.Constants.vbNewLine">
			<summary>vbNewLine = Chr(13) + Chr(10) - New line character.</summary>
		</member>
		<member name="F:Microsoft.VisualBasic.Constants.vbNo">
			<summary>vbNo = MsgBoxResult.No - No button was pressed.</summary>
		</member>
		<member name="F:Microsoft.VisualBasic.Constants.vbNormal">
			<summary>vbNormal = FileAttribute.Normal - Normal (default for Dir and SetAttr).</summary>
		</member>
		<member name="F:Microsoft.VisualBasic.Constants.vbNormalFocus">
			<summary>vbNormalFocus = AppWinStyle.NormalFocus - Window has focus and is restored to its original size and position.</summary>
		</member>
		<member name="F:Microsoft.VisualBasic.Constants.vbNormalNoFocus">
			<summary>vbNormalNoFocus = AppWinStyle.NormalNoFocus - Window is restored to its most recent size and position. The currently active window remains active.</summary>
		</member>
<member name="F:Microsoft.VisualBasic.Constants.vbNull">
			<summary>vbNull = VariantType.Null - Contains a Null object.
		</summary>
		</member>
		<member name="F:Microsoft.VisualBasic.Constants.vbNullChar">
			<summary>vbNullChar = Chr(0) - Character having value 0.</summary>
		</member>
		<member name="F:Microsoft.VisualBasic.Constants.vbNullString">
			<summary>vbNullString - String having value 0.  Not the same as a zero-length string (""); used for calling external procedures.</summary>
		</member>
<member name="F:Microsoft.VisualBasic.Constants.vbObject">
			<summary>vbObject = VariantType.Object - Contains an Object value.
		</summary>
		</member>
		<member name="F:Microsoft.VisualBasic.Constants.vbObjectError">
			<summary>vbObjectError = -2147221504 - Error number. User-defined error numbers should be greater than this value. For example: Err.Raise(Number) = ObjectError + 1000.</summary>
		</member>
<member name="F:Microsoft.VisualBasic.Constants.vbOK">
			<summary>vbOK = MsgBoxResult.OK - OK button was pressed.
		</summary>
		</member>
		<member name="F:Microsoft.VisualBasic.Constants.vbOKCancel">
			<summary>vbOKCancel = MsgBoxStyle.OKCancel - OK and Cancel buttons.</summary>
		</member>
		<member name="F:Microsoft.VisualBasic.Constants.vbOKOnly">
			<summary>vbOKOnly = MsgBoxStyle.OKOnly - OK button only (default).</summary>
		</member>
		<member name="F:Microsoft.VisualBasic.Constants.vbProperCase">
			<summary>vbProperCase = VbStrConv.ProperCase - Converts the first letter of every word in the string to uppercase.</summary>
		</member>
		<member name="F:Microsoft.VisualBasic.Constants.vbQuestion">
			<summary>vbQuestion = MsgBoxStyle.Question - Warning query.</summary>
		</member>
		<member name="F:Microsoft.VisualBasic.Constants.vbReadOnly">
			<summary>vbReadOnly = FileAttribute.ReadOnly - Read only.</summary>
		</member>
		<member name="F:Microsoft.VisualBasic.Constants.vbRetry">
			<summary>vbRetry = MsgBoxResult.Retry - Retry button was pressed.</summary>
		</member>
		<member name="F:Microsoft.VisualBasic.Constants.vbRetryCancel">
			<summary>vbRetryCancel = MsgBoxStyle.RetryCancel - Retry and Cancel buttons.</summary>
		</member>
		<member name="F:Microsoft.VisualBasic.Constants.vbSaturday">
			<summary>vbSaturday = FirstDayOfWeek.Saturday - Saturday.</summary>
		</member>
		<member name="F:Microsoft.VisualBasic.Constants.vbSet">
			<summary>vbSet = CallType.Set - A property value is being determined.</summary>
		</member>
		<member name="F:Microsoft.VisualBasic.Constants.vbShortDate">
			<summary>vbShortDate = DateFormat.ShortDate - Displays a date using the short-date format specified in your computer's regional settings.</summary>
		</member>
		<member name="F:Microsoft.VisualBasic.Constants.vbShortTime">
			<summary>vbShortTime = DateFormat.ShortTime - Displays a time using the short-time format specified in your computer's regional settings.</summary>
		</member>
<member name="F:Microsoft.VisualBasic.Constants.vbSimplifiedChinese">
			<summary>vbSimplifiedChinese = VbStrConv.SimplifiedChinese - Converts the string to Simplified Chinese characters.
		</summary>
		</member>
<member name="F:Microsoft.VisualBasic.Constants.vbSingle">
			<summary>vbSingle = VariantType.Single - Contains a Single value.</summary>
		</member>
<member name="F:Microsoft.VisualBasic.Constants.vbString">
			<summary>vbString = VariantType.String - Contains a String value.</summary>
</member>
		<member name="F:Microsoft.VisualBasic.Constants.vbSunday">
			<summary>vbSunday = FirstDayOfWeek.Sunday - Sunday.</summary>
		</member>
		<member name="F:Microsoft.VisualBasic.Constants.vbSystem">
			<summary>vbSystem = FileAttribute.System - System file.</summary>
		</member>
<member name="F:Microsoft.VisualBasic.Constants.vbSystemModal">
			<summary>vbSystemModal= MsgBoxStyle.SystemModal - System modal message box.</summary>
</member>
		<member name="F:Microsoft.VisualBasic.Constants.vbTab">
			<summary>vbTab = Chr(9) - Tab character.</summary>
		</member>
		<member name="F:Microsoft.VisualBasic.Constants.vbTextCompare">
			<summary>vbTextCompare = CompareMethod.TextCompare - Performs a textual comparison.</summary>
		</member>
		<member name="F:Microsoft.VisualBasic.Constants.vbThursday">
			<summary>vbThursday = FirstDayOfWeek.Thursday - Thursday.</summary>
		</member>
<member name="F:Microsoft.VisualBasic.Constants.vbTraditionalChinese">
			<summary>vbTraditionalChinese = VbStrConv.TraditionalChinese - Converts the string to Traditional Chinese characters.</summary></member>
		<member name="F:Microsoft.VisualBasic.Constants.vbTrue">
			<summary>vbTrue = Tristate.True = â1 </summary>
		</member>
		<member name="F:Microsoft.VisualBasic.Constants.vbTuesday">
			<summary>vbTuesday = FirstDayOfWeek.Tuesday - Tuesday.</summary>
		</member>
		<member name="F:Microsoft.VisualBasic.Constants.vbUpperCase">
			<summary>vbUpperCase = VbStrConv.UpperCase - Converts the string to uppercase characters.</summary>
		</member>
		<member name="F:Microsoft.VisualBasic.Constants.vbUseDefault">
			<summary>vbUseDefault = TriState.UseDefault -  Default setting</summary>
		</member>
<member name="F:Microsoft.VisualBasic.Constants.vbUserDefinedType">
			<summary>vbUserDefinedType = VariantType.UserDefinedType - Contains a UserDefinedType value.</summary></member>
		<member name="F:Microsoft.VisualBasic.Constants.vbUseSystem">
			<summary>vbUseSystem = FirstWeekOfYear.System - The day of the week specified in your system settings as the first day of the week.</summary>
		</member>
		<member name="F:Microsoft.VisualBasic.Constants.vbUseSystemDayOfWeek">
			<summary>vbUseSystemDayOfWeek = FirstDayOfWeek.System - The first day of the week as specified in your system settings. </summary>
		</member>
<member name="F:Microsoft.VisualBasic.Constants.vbVariant">
			<summary>vbVariant = VariantType.Variant - Contains a Variant value.</summary></member>
		<member name="F:Microsoft.VisualBasic.Constants.vbVerticalTab">
			<summary>vbVerticalTab = Chr(11) Not useful in Microsoft Windows.</summary>
		</member>
		<member name="F:Microsoft.VisualBasic.Constants.vbVolume">
			<summary>vbVolume = FileAttribute.Volume - Volume label.</summary>
		</member>
		<member name="F:Microsoft.VisualBasic.Constants.vbWednesday">
			<summary>vbWednesday = FirstDayOfWeek.Wednesday - Wednesday.</summary>
		</member>
		<member name="F:Microsoft.VisualBasic.Constants.vbWide">
			<summary>vbWide = VbStrConv.Wide - Converts narrow (single-byte) characters in the string to wide (double-byte) characters. Applies to Asian locales.</summary>
		</member>
		<member name="F:Microsoft.VisualBasic.Constants.vbYes">
			<summary>vbYes = MsgBoxResult.Yes - Yes button was pressed.</summary>
		</member>
		<member name="F:Microsoft.VisualBasic.Constants.vbYesNo">
			<summary>vbYesNo = MsgBoxResult.YesNo - Yes and No buttons.</summary>
		</member>
		<member name="F:Microsoft.VisualBasic.Constants.vbYesNoCancel">
			<summary>vbYesNoCancel = MsgBoxStyle.YesNoCancel - Yes, No, and Cancel buttons.</summary>
		</member>
		<member name="T:Microsoft.VisualBasic.ControlChars">
			<summary>The ControlChars class contains constants used as control characters. These constants can be used anywhere in your code.
		</summary>
		</member>

<member name="F:Microsoft.VisualBasic.ControlChars.CrLf">
<summary>Chr(13) + Chr(10) Carriage return/linefeed character combination.</summary>
		</member>
<member name="F:Microsoft.VisualBasic.ControlChars.Cr">
<summary>Chr(13)
Carriage return character.</summary>
		</member>
<member name="F:Microsoft.VisualBasic.ControlChars.Lf">
<summary>Chr(10)
Linefeed character.</summary>
		</member>
<member name="F:Microsoft.VisualBasic.ControlChars.NewLine">
<summary>Chr(13) + Chr(10)
New line character. </summary>
		</member>
<member name="F:Microsoft.VisualBasic.ControlChars.NullChar">
<summary>Chr(0)
Character having value 0.</summary>
		</member>

<member name="F:Microsoft.VisualBasic.ControlChars.Tab">
<summary>Chr(9)
Tab character.</summary>
		</member>
<member name="F:Microsoft.VisualBasic.ControlChars.Back">
<summary>Chr(8)
Backspace character.</summary>
		</member>
<member name="F:Microsoft.VisualBasic.ControlChars.FormFeed">
<summary>Chr(12)
Not useful in Microsoft Windows.</summary>
		</member>
<member name="F:Microsoft.VisualBasic.ControlChars.VerticalTab">
<summary>Chr(11)
Not useful in Microsoft Windows.</summary>
		</member>
<member name="F:Microsoft.VisualBasic.ControlChars.Quote">
<summary>Chr(34)
Quotation mark character (" or ') used to enclose values.</summary>
		</member>


		<member name="T:Microsoft.VisualBasic.Conversion">
			<summary>The Conversion module contains the procedures used to perform various conversion operations.
		</summary>
		</member>
		<member name="M:Microsoft.VisualBasic.Conversion.Fix(System.Decimal)">
			<summary>Return the integer portion of a number.
		</summary>
			<param name="number">A number of type Decimal or any valid numeric expression. 
		</param>
		</member>
		<member name="M:Microsoft.VisualBasic.Conversion.Fix(System.Double)">
			<summary>Return the integer portion of a number.
		</summary>
			<param name="number">A number of type Double or any valid numeric expression. 
		</param>
			summary
		</member>
		<member name="M:Microsoft.VisualBasic.Conversion.Fix(System.Int16)">
			<summary>Return the integer portion of a number.
		</summary>
			<param name="number">A number of type Short or any valid numeric expression. 
		</param>
			summary
		</member>
		<member name="M:Microsoft.VisualBasic.Conversion.Fix(System.Int32)">
			<summary>Return the integer portion of a number.
		</summary>
			<param name="number">A number of type Integer or any valid numeric expression. 
		</param>
			summary
		</member>
		<member name="M:Microsoft.VisualBasic.Conversion.Fix(System.Int64)">
			<summary>Return the integer portion of a number.
		</summary>
			<param name="number">A number of type Long or any valid numeric expression. 
		</param>
			summary
		</member>
		<member name="M:Microsoft.VisualBasic.Conversion.Fix(System.Object)">
			<summary>Return the integer portion of a number.
		</summary>
			<param name="number">A number of type Object or any valid numeric expression. If number contains Nothing, Nothing is returned.
		</param>
			summary
		</member>
		<member name="M:Microsoft.VisualBasic.Conversion.Fix(System.Single)">
			<summary>Return the integer portion of a number.
		</summary>
			<param name="number">A number of type Single or any valid numeric expression. 
		</param>
			summary
		</member>
		<member name="M:Microsoft.VisualBasic.Conversion.Hex(System.Byte)">
			<summary>Returns a String representing the hexadecimal value of a number.
		</summary>
			<param name="Number">Any valid numeric expression.
		</param>
			summary
		</member>
		<member name="M:Microsoft.VisualBasic.Conversion.Hex(System.Int16)">
			<summary>Returns a String representing the hexadecimal value of a number.
		</summary>
			<param name="Number">Any valid numeric expression.
		</param>
			summary
		</member>
		<member name="M:Microsoft.VisualBasic.Conversion.Hex(System.Int32)">
			<summary>Returns a String representing the hexadecimal value of a number.
		</summary>
			<param name="Number">Any valid numeric expression.
		</param>
			summary
		</member>
		<member name="M:Microsoft.VisualBasic.Conversion.Hex(System.Int64)">
			<summary>Returns a String representing the hexadecimal value of a number.
		</summary>
			<param name="Number">Any valid numeric expression.
		</param>
			summary
		</member>
		<member name="M:Microsoft.VisualBasic.Conversion.Hex(System.Object)">
			<summary>Returns a String representing the hexadecimal value of a number.
		</summary>
			<param name="Number">Any valid numeric expression or String expression.
		</param>
		</member>
		<member name="M:Microsoft.VisualBasic.Conversion.Int(System.Decimal)">
			<summary>Return the integer portion of a number.
		</summary>
			<param name="number">A number of type Decimal or any valid numeric expression.
		</param>
		</member>
		<member name="M:Microsoft.VisualBasic.Conversion.Int(System.Double)">
			<summary>Return the integer portion of a number.
		</summary>
			<param name="number">A number of type Double or any valid numeric expression.
		</param>
		</member>
		<member name="M:Microsoft.VisualBasic.Conversion.Int(System.Int16)">
			<summary>Return the integer portion of a number.
		</summary>
			<param name="number">A number of type Short or any valid numeric expression.
		</param>
		</member>
		<member name="M:Microsoft.VisualBasic.Conversion.Int(System.Int32)">
			<summary>Return the integer portion of a number.
		</summary>
			<param name="number">A number of type Integer or any valid numeric expression.
		</param>
		</member>
		<member name="M:Microsoft.VisualBasic.Conversion.Int(System.Int64)">
			<summary>Return the integer portion of a number.
		</summary>
			<param name="number">A number of type Long or any valid numeric expression.
		</param>
		</member>
		<member name="M:Microsoft.VisualBasic.Conversion.Int(System.Object)">
			<summary>Return the integer portion of a number.
		</summary>
			<param name="number">A number of type Object or any valid numeric expression. If number contains Nothing, Nothing is returned.
		</param>
		</member>
		<member name="M:Microsoft.VisualBasic.Conversion.Int(System.Single)">
			<summary>Return the integer portion of a number.
		</summary>
			<param name="number">A number of type Single or any valid numeric expression.
		</param>
		</member>
		<member name="M:Microsoft.VisualBasic.Conversion.Oct(System.Byte)">
			<summary>Returns a string representing the octal value of a number.
		</summary>
			<param name="Number">Any valid numeric expression.
		</param>
		</member>
		<member name="M:Microsoft.VisualBasic.Conversion.Oct(System.Int16)">
			<summary>Returns a string representing the octal value of a number.
		</summary>
			<param name="Number">Any valid numeric expression.
		</param>
		</member>
		<member name="M:Microsoft.VisualBasic.Conversion.Oct(System.Int32)">
			<summary>Returns a string representing the octal value of a number.
		</summary>
			<param name="Number">Any valid numeric expression.
		</param>
		</member>
		<member name="M:Microsoft.VisualBasic.Conversion.Oct(System.Int64)">
			<summary>Returns a string representing the octal value of a number.
		</summary>
			<param name="Number">Any valid numeric expression.
		</param>
		</member>
		<member name="M:Microsoft.VisualBasic.Conversion.Oct(System.Object)">
			<summary>Returns a string representing the octal value of a number.
		</summary>
			<param name="Number">Any valid numeric expression.
		</param>
		</member>
		<member name="M:Microsoft.VisualBasic.Conversion.Str(System.Object)">
			<summary>Returns a String representation of a number.
		</summary>
			<param name="number">An Object containing any valid numeric expression.
		</param>
		</member>
		<member name="M:Microsoft.VisualBasic.Conversion.Val(System.Char)">
			<summary>Returns the numbers contained in a string as a numeric value of appropriate type.
		</summary>
			<param name="Expression">Any valid String expression.
		</param>
		</member>
		<member name="M:Microsoft.VisualBasic.Conversion.Val(System.Object)">
			<summary>Returns the numbers contained in a string as a numeric value of appropriate type.
		</summary>
			<param name="Expression">Any valid String expression.
		</param>
		</member>
		<member name="M:Microsoft.VisualBasic.Conversion.Val(System.String)">
			<summary>Returns the numbers contained in a string as a numeric value of appropriate type.
		</summary>
			<param name="InputStr">Any valid String expression.
		</param>
		</member>
		<member name="T:Microsoft.VisualBasic.DateAndTime">
			<summary>The DateTime module contains the procedures and properties used in date and time operations.
		</summary>
		</member>
		<member name="M:Microsoft.VisualBasic.DateAndTime.DateAdd(Microsoft.VisualBasic.DateInterval,System.Double,System.DateTime)">
			<summary>Returns a Date containing a date and time value to which a specified time interval has been added.
		</summary>
			<param name="Interval">DateInterval enumeration value representing the time interval you want to add.
		</param>
			<param name="Number">Double. Floating-point expression representing the number of intervals you want to add. Number can be positive (to get date/time values in the future) or negative (to get date/time values in the past).
		</param>
			<param name="DateValue">Date. An expression representing the date and time to which the interval is to be added. DateValue itself is not changed in the calling program.
		</param>
		</member>
		<member name="M:Microsoft.VisualBasic.DateAndTime.DateAdd(System.String,System.Double,System.Object)">
			<summary>Returns a Date containing a date and time value to which a specified time interval has been added.
		</summary>
			<param name="Interval">DateInterval String expression representing the time interval you want to add.
		</param>
			<param name="Number">Double. Floating-point expression representing the number of intervals you want to add. Number can be positive (to get date/time values in the future) or negative (to get date/time values in the past).
		</param>
			<param name="DateValue">Date. An expression representing the date and time to which the interval is to be added. DateValue itself is not changed in the calling program.
		</param>
		</member>
		<member name="M:Microsoft.VisualBasic.DateAndTime.DateDiff(Microsoft.VisualBasic.DateInterval,System.DateTime,System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)">
			<summary>Returns a Long specifying the number of time intervals between two Date values.
		</summary>
			<param name="Interval">DateInterval enumeration value representing the time interval you want to use as the unit of difference between Date1 and Date2.
		</param>
			<param name="Date1">The value of Date1 is subtracted from the value of Date2 to produce the difference. 
		</param>
			<param name="Date2">The value of Date1 is subtracted from the value of Date2 to produce the difference. 
		</param>
			<param name="DayOfWeek">A value chosen from the FirstDayOfWeek enumeration that specifies the first day of the week. 
		</param>
			<param name="WeekOfYear">A value chosen from the FirstWeekOfYear enumeration that specifies the first week of the year. 
		</param>
		</member>
		<member name="M:Microsoft.VisualBasic.DateAndTime.DateDiff(System.String,System.Object,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)">
			<summary>Returns a Long specifying the number of time intervals between two Date values.
		</summary>
			<param name="Interval">String expression representing the time interval you want to use as the unit of difference between Date1 and Date2.</param>
			<param name="Date1">The value of Date1 is subtracted from the value of Date2 to produce the difference. 
		</param>
			<param name="Date2">The value of Date1 is subtracted from the value of Date2 to produce the difference. 
		</param>
			<param name="DayOfWeek">A value chosen from the FirstDayOfWeek enumeration that specifies the first day of the week. 
		</param>
			<param name="WeekOfYear">A value chosen from the FirstWeekOfYear enumeration that specifies the first week of the year. 
		</param>
		</member>
		<member name="M:Microsoft.VisualBasic.DateAndTime.DatePart(Microsoft.VisualBasic.DateInterval,System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)">
			<summary>Returns an Integer containing the specified component of a given Date value.
		</summary>
			<param name="Interval">DateInterval enumeration value representing the part of the date/time value you want to return.
		</param>
			<param name="DateValue">Date value that you want to evaluate.
		</param>
			<param name="FirstDayOfWeekValue">A value chosen from the FirstDayOfWeek enumeration that specifies the first day of the week.
		</param>
			<param name="FirstWeekOfYearValue">A value chosen from the FirstWeekOfYear enumeration that specifies the first week of the year.
		</param>
		</member>
		<member name="M:Microsoft.VisualBasic.DateAndTime.DatePart(System.String,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)">
			<summary>Returns an Integer containing the specified component of a given Date value.
		</summary>
			<param name="Interval">String expression representing the part of the date/time value you want to return.
		</param>
			<param name="DateValue">Date value that you want to evaluate.
		</param>
			<param name="DayOfWeek">A value chosen from the FirstDayOfWeek enumeration that specifies the first day of the week.
		</param>
			<param name="WeekOfYear">A value chosen from the FirstWeekOfYear enumeration that specifies the first week of the year.
		</param>
		</member>
		<member name="M:Microsoft.VisualBasic.DateAndTime.DateSerial(System.Int32,System.Int32,System.Int32)">
			<summary>Returns a Date representing a specified year, month, and day, with the time information set to midnight (00:00:00).
		</summary>
			<param name="Year">Integer expression from 1 through 9999.
		</param>
			<param name="Month">Integer expression from 1 through 12.</param>
			<param name="Day">Integer expression from 1 through 31. 
		</param>
		</member>
		<member name="P:Microsoft.VisualBasic.DateAndTime.DateString">
			<summary>Returns or sets a String representing the current date according to your system.
		</summary>
		</member>
		<member name="M:Microsoft.VisualBasic.DateAndTime.DateValue(System.String)">
			<summary>Returns a Date containing the date information represented by a string, with the time information set to midnight (00:00:00).
		</summary>
			<param name="StringDate">String expression representing a date/time value.
		</param>
		</member>
		<member name="M:Microsoft.VisualBasic.DateAndTime.Day(System.DateTime)">
			<summary>Returns an Integer from 1 through 31 representing the day of the month.
		</summary>
			<param name="DateValue">Date value from which you want to extract the day.
		</param>
		</member>
		<member name="M:Microsoft.VisualBasic.DateAndTime.Hour(System.DateTime)">
			<summary>Returns an Integer from 0 through 23 representing the hour of the day.
		</summary>
			<param name="TimeValue">Date value from which you want to extract the hour.
		</param>
		</member>
		<member name="M:Microsoft.VisualBasic.DateAndTime.Minute(System.DateTime)">
			<summary>Returns an Integer from 0 through 59 representing the minute of the hour.
		</summary>
			<param name="TimeValue">Date value from which you want to extract the minute.
		</param>
		</member>
		<member name="M:Microsoft.VisualBasic.DateAndTime.Month(System.DateTime)">
			<summary>Returns an Integer from 1 through 12 representing the month of the year.
		</summary>
			<param name="DateValue">Date value from which you want to extract the month.
		</param>
		</member>
		<member name="M:Microsoft.VisualBasic.DateAndTime.MonthName(System.Int32,System.Boolean)">
			<summary>Returns a String value containing the name of the specified month.
		</summary>
			<param name="Month">The numeric designation of the month, from 1 through 13.
		</param>
			<param name="Abbreviate">Boolean value that indicates if the month name is to be abbreviated.
		</param>
		</member>
		<member name="P:Microsoft.VisualBasic.DateAndTime.Now">
			<summary>Returns a Date containing the current date and time according to your system.
		</summary>
		</member>
		<member name="M:Microsoft.VisualBasic.DateAndTime.Second(System.DateTime)">
			<summary>Returns an Integer value from 0 through 59 representing the second of the minute.
		</summary>
			<param name="TimeValue">Date value from which you want to extract the second.
		</param>
		</member>
		<member name="P:Microsoft.VisualBasic.DateAndTime.TimeOfDay">
			<summary>Returns or sets a Date containing the current time of day according to your system.
		</summary>
		</member>
		<member name="P:Microsoft.VisualBasic.DateAndTime.Timer">
			<summary>Returns a Double value representing the number of seconds elapsed since midnight.
		</summary>
		</member>
		<member name="M:Microsoft.VisualBasic.DateAndTime.TimeSerial(System.Int32,System.Int32,System.Int32)">
			<summary>Returns a Date representing a specified hour, minute, and second, with the date information set to January 1 of the year 1.
		</summary>
			<param name="Hour">Integer expression from 0 through 23.
		</param>
			<param name="Minute">Integer expression from 0 through 59.
		</param>
			<param name="Second">Integer expression from 0 through 59.
		</param>
		</member>
		<member name="P:Microsoft.VisualBasic.DateAndTime.TimeString">
			<summary>Returns or sets a String value representing the current time of day according to your system.
		</summary>
		</member>
		<member name="M:Microsoft.VisualBasic.DateAndTime.TimeValue(System.String)">
			<summary>Returns a Date value containing the time information represented by a string, with the date information set to January 1 of the year 1.
		</summary>
			<param name="StringTime">String expression representing a date/time value from 00:00:00 on January 1 of the year 1 through 23:59:59 on December 31, 9999.
		</param>
		</member>
		<member name="P:Microsoft.VisualBasic.DateAndTime.Today">
			<summary>Returns or sets a Date containing the current date according to your system.
		</summary>
		</member>
		<member name="M:Microsoft.VisualBasic.DateAndTime.Weekday(System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek)">
			<summary>Returns an Integer containing a number representing the day of the week.
		</summary>
			<param name="DateValue">Date value for which you want to determine the day of the week.
		</param>
			<param name="DayOfWeek">A value chosen from the FirstDayOfWeek enumeration that specifies the first day of the week.
		</param>
		</member>
		<member name="M:Microsoft.VisualBasic.DateAndTime.WeekdayName(System.Int32,System.Boolean,Microsoft.VisualBasic.FirstDayOfWeek)">
			<summary>Returns a String containing the name of the specified weekday.
		</summary>
			<param name="WeekDay">The numeric designation for the weekday, from 1 through 7.
		</param>
			<param name="Abbreviate">Boolean value that indicates if the weekday name is to be abbreviated.
		</param>
			<param name="FirstDayOfWeekValue">A value chosen from the FirstDayOfWeek enumeration that specifies the first day of the week.
		</param>
		</member>
		<member name="M:Microsoft.VisualBasic.DateAndTime.Year(System.DateTime)">
			<summary>Returns an Integer value from 1 through 9999 representing the year.
		</summary>
			<param name="DateValue">Date value from which you want to extract the year.
		</param>
		</member>
		<member name="T:Microsoft.VisualBasic.DateFormat">
			<summary>The DateFormat enumeration defines constants used to identify how the date and time are formatted.
		</summary>
		</member>
<member name="F:Microsoft.VisualBasic.DateFormat.GeneralDate">
			<summary>For real numbers, displays a date and time. Date and time display is determined by your computer's regional settings.</summary>
		</member>
<member name="F:Microsoft.VisualBasic.DateFormat.LongDate">
			<summary>Displays a date using the long-date format specified in your computer's regional settings.</summary>
		</member>
<member name="F:Microsoft.VisualBasic.DateFormat.LongTime">
			<summary>Displays a time using the long-time format specified in your computer's regional settings.</summary>
		</member>
<member name="F:Microsoft.VisualBasic.DateFormat.ShortDate">
			<summary>Displays a date using the short-date format specified in your computer's regional settings.</summary>
		</member>
<member name="F:Microsoft.VisualBasic.DateFormat.ShortTime">
			<summary>Displays a time using the short-time format specified in your computer's regional settings.</summary>
		</member>

		<member name="T:Microsoft.VisualBasic.DateInterval">
			<summary>The DateInterval enumeration defines constants used to identify how the date and time are formatted.
		</summary>
		</member>
<member name="F:Microsoft.VisualBasic.DateInterval.Day">
			<summary>Day of month (1 through 31).</summary>
		</member>
<member name="F:Microsoft.VisualBasic.DateInterval.DayOfYear">
			<summary>Day of year (1 through 366).</summary>
		</member>
<member name="F:Microsoft.VisualBasic.DateInterval.Hour">
			<summary>Hour (1 through 24).</summary>
		</member>
<member name="F:Microsoft.VisualBasic.DateInterval.Minute">
			<summary>Minute (1 through 60).</summary>
		</member>

<member name="F:Microsoft.VisualBasic.DateInterval.Month">
			<summary>Month (1 through 12).</summary>
		</member>
<member name="F:Microsoft.VisualBasic.DateInterval.Quarter">
			<summary>Quarter of year (1 through 4).</summary>
		</member>
<member name="F:Microsoft.VisualBasic.DateInterval.Second">
			<summary>Second (1 through 60).</summary>
		</member>
<member name="F:Microsoft.VisualBasic.DateInterval.Weekday">
			<summary>Day of week (1 through 7).</summary>
		</member>
<member name="F:Microsoft.VisualBasic.DateInterval.WeekOfYear">
			<summary>Week of year (1 through 53).</summary>
		</member>
<member name="F:Microsoft.VisualBasic.DateInterval.Year">
			<summary>Year.</summary>
		</member>

		<member name="T:Microsoft.VisualBasic.DueDate">
			<summary>The DueDate enumeration defines constants used to identify how the date and time are formatted.
		</summary>
		</member>
<member name="F:Microsoft.VisualBasic.DueDate.BegOfPeriod">
			<summary>Falls at the beginning of the date interval.</summary>
		</member>
<member name="F:Microsoft.VisualBasic.DueDate.EndOfPeriod">
			<summary>Falls at the end of the date interval.</summary>
		</member>
		<member name="T:Microsoft.VisualBasic.ErrObject">
			<summary>The ErrObject module contains properties and procedures used to identify and handle run-time errors using the Err object.
		</summary>
		</member>
		<member name="M:Microsoft.VisualBasic.ErrObject.Clear">
			<summary>Clears all property settings of the Err object.
		</summary>
		</member>
		<member name="P:Microsoft.VisualBasic.ErrObject.Description">
			<summary>Returns or sets a String expression containing a descriptive string associated with an error.
		</summary>
		</member>
		<member name="P:Microsoft.VisualBasic.ErrObject.Erl">
			<summary>Returns an integer indicating the line number of the last executed statement.
		</summary>
		</member>
		<member name="M:Microsoft.VisualBasic.ErrObject.GetException">
			<summary>Returns the exception representing the error that has occurred.
		</summary>
		</member>
		<member name="P:Microsoft.VisualBasic.ErrObject.HelpContext">
			<summary>Returns or sets an Integer containing the context ID for a topic in a Help file.
		</summary>
		</member>
		<member name="P:Microsoft.VisualBasic.ErrObject.HelpFile">
			<summary>Returns or sets a String expression containing the fully qualified path to a Help file.
		</summary>
		</member>
		<member name="P:Microsoft.VisualBasic.ErrObject.LastDllError">
			<summary>Returns a system error code produced by a call to a dynamic-link library (DLL).
		</summary>
		</member>
		<member name="P:Microsoft.VisualBasic.ErrObject.Number">
			<summary>Returns or sets a numeric value specifying an error.
		</summary>
		</member>
		<member name="M:Microsoft.VisualBasic.ErrObject.Raise(System.Int32,System.Object,System.Object,System.Object,System.Object)">
			<param name="Number">Long integer that identifies the nature of the error.
		</param>
			<param name="Source">String expression naming the object or application that generated the error. 
		</param>
			<param name="Description">String expression describing the error. If unspecified, the value in the Number property is examined to determine a description. 
		</param>
			<param name="HelpFile">The fully qualified path to the Help file in which help on this error can be found.
		</param>
			<param name="HelpContext">The context ID identifying a topic within HelpFile that provides help for the error. 
		</param>
			<summary>Generates a run-time error; can be used instead of the Error statement.
		</summary>
		</member>
		<member name="P:Microsoft.VisualBasic.ErrObject.Source">
			<summary>Returns or sets a String expression specifying the name of the object or application that originally generated the error. Read/write.
		</summary>
		</member>
		<member name="T:Microsoft.VisualBasic.FileAttribute">
			<summary>The FileAttribute enumeration contains constants used to identify file attributes used in the Dir, GetAttr, and SetAttr functions.
		</summary>
		</member>


<member name="F:Microsoft.VisualBasic.FileAttribute.Normal">
<summary>Normal (default for Dir and SetAttr).</summary>
		</member>
<member name="F:Microsoft.VisualBasic.FileAttribute.ReadOnly">
<summary>Read only.</summary>
		</member>
<member name="F:Microsoft.VisualBasic.FileAttribute.Hidden">
<summary>Hidden.</summary>
		</member>
<member name="F:Microsoft.VisualBasic.FileAttribute.System">
<summary>System file.</summary>
		</member>
<member name="F:Microsoft.VisualBasic.FileAttribute.Volume">
<summary>Volume label.</summary>
		</member>
<member name="F:Microsoft.VisualBasic.FileAttribute.Directory">
<summary>Directory or folder.</summary>
		</member>
<member name="F:Microsoft.VisualBasic.FileAttribute.Archive">
<summary>File has changed since last backup.</summary>
		</member>

		<member name="T:Microsoft.VisualBasic.FileSystem">
			<summary>The FileSystem module contains the procedures used to perform file, directory or folder, and system operations.
		</summary>
		</member>
		<member name="M:Microsoft.VisualBasic.FileSystem.ChDir(System.String)">
			<param name="Path">A String expression that identifies which directory or folder becomes the new default directory or folder. 
		</param>
			<summary>Changes the current directory or folder.
		</summary>
		</member>
		<member name="M:Microsoft.VisualBasic.FileSystem.ChDrive(System.Char)">
			<param name="Drive">Char expression that specifies an existing drive. 
		</param>
			<summary>Changes the current drive.
		</summary>
		</member>
		<member name="M:Microsoft.VisualBasic.FileSystem.ChDrive(System.String)">
			<param name="Drive">String expression that specifies an existing drive.
		</param>
			<summary>Changes the current drive.
		</summary>
		</member>
		<member name="M:Microsoft.VisualBasic.FileSystem.CurDir">
			<summary>Returns a string representing the current path.
		</summary>
		</member>
		<member name="M:Microsoft.VisualBasic.FileSystem.CurDir(System.Char)">
			<summary>Returns a string representing the current path.
		</summary>
			<param name="Drive">Expression that specifies an existing drive. 
		</param>
		</member>
		<member name="M:Microsoft.VisualBasic.FileSystem.Dir">
			<summary>Returns the name of the next file, directory, or folder that matches the previously specified pattern.
		</summary>
		</member>
		<member name="M:Microsoft.VisualBasic.FileSystem.Dir(System.String,Microsoft.VisualBasic.FileAttribute)">
			<summary>Returns a string representing the name of a file, directory, or folder that matches a specified pattern or file attribute, or the volume label of a drive.
		</summary>
			<param name="Pathname">String expression that specifies a file name, directory or folder name, or drive volume label.
		</param>
			<param name="Attributes">Enumeration whose value specifies file attributes. If omitted, returns files that match Pathname, but have no attributes.
		</param>
		</member>
		<member name="M:Microsoft.VisualBasic.FileSystem.EOF(System.Int32)">
			<summary>Returns a Boolean value True when the end of a file opened for Random or sequential Input has been reached.
		</summary>
			<param name="FileNumber">Any valid file number.
		</param>
		</member>
		<member name="M:Microsoft.VisualBasic.FileSystem.FileAttr(System.Int32)">
			<summary>Returns an enumeration representing the file mode for files opened using the FileOpen function.
		</summary>
			<param name="FileNumber">Any valid file number.
		</param>
		</member>
		<member name="M:Microsoft.VisualBasic.FileSystem.FileClose(System.Int32[])">
			<param name="FileNumbers">Parameter array of 0 or more channels to be closed.
		</param>
			<summary>Concludes input/output (I/O) to a file opened using the FileOpen function.
		</summary>
		</member>
		<member name="M:Microsoft.VisualBasic.FileSystem.FileCopy(System.String,System.String)">
			<param name="Source">String expression that specifies the name of the file to be copied. Source may include the directory or folder, and drive, of the source file.
		</param>
			<param name="Destination">String expression that specifies the target file name. Destination may include the directory or folder, and drive, of the destination file.
		</param>
			<summary>Copies a file.
		</summary>
		</member>
		<member name="M:Microsoft.VisualBasic.FileSystem.FileDateTime(System.String)">
			<summary>Returns a Date value that indicates the date and time when a file was created or last modified.
		</summary>
			<param name="Pathname">String expression that specifies a file name. Pathname may include the directory or folder, and the drive.
		</param>
		</member>
		<member name="M:Microsoft.VisualBasic.FileSystem.FileLen(System.String)">
			<summary>Returns a Long value specifying the length of a file in bytes.
		</summary>
			<param name="Pathname">String expression that specifies a file. Pathname may include the directory or folder, and the drive.
		</param>
		</member>
		<member name="M:Microsoft.VisualBasic.FileSystem.FreeFile">
			<summary>Returns an Integer value representing the next file number available for use by the FileOpen function.
		</summary>
		</member>
		<member name="M:Microsoft.VisualBasic.FileSystem.GetAttr(System.String)">
			<summary>Returns a FileAttribute value representing the attributes of a file, directory, or folder.
		</summary>
			<param name="PathName">String expression that specifies a file, directory, or folder name. PathName may include the directory or folder, and the drive.
		</param>
		</member>
		<member name="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Boolean@)">
			<param name="FileNumber">Any valid file number.
		</param>
			<param name="Value">Variable to read into.
		</param>
			<summary>Reads data from an open sequential file and assigns the data to specified variable.
		</summary>
		</member>
		<member name="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Byte@)">
			<param name="FileNumber">Any valid file number.
		</param>
			<param name="Value">Variable to read into.
		</param>
			<summary>Reads data from an open sequential file and assigns the data to specified variable.
		</summary>
		</member>
		<member name="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Char@)">
			<param name="FileNumber">Any valid file number.
		</param>
			<param name="Value">Variable to read into.
		</param>
			<summary>Reads data from an open sequential file and assigns the data to specified variable.
		</summary>
		</member>
		<member name="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.DateTime@)">
			<param name="FileNumber">Any valid file number.
		</param>
			<param name="Value">Variable to read into.
		</param>
			<summary>Reads data from an open sequential file and assigns the data to specified variable.
		</summary>
		</member>
		<member name="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Decimal@)">
			<param name="FileNumber">Any valid file number.
		</param>
			<param name="Value">Variable to read into.
		</param>
			<summary>Reads data from an open sequential file and assigns the data to specified variable.
		</summary>
		</member>
		<member name="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Double@)">
			<param name="FileNumber">Any valid file number.
		</param>
			<param name="Value">Variable to read into.
		</param>
			<summary>Reads data from an open sequential file and assigns the data to specified variable.
		</summary>
		</member>
		<member name="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Int16@)">
			<param name="FileNumber">Any valid file number.
		</param>
			<param name="Value">Variable to read into.
		</param>
			<summary>Reads data from an open sequential file and assigns the data to specified variable.
		</summary>
		</member>
		<member name="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Int32@)">
			<param name="FileNumber">Any valid file number.
		</param>
			<param name="Value">Variable to read into.
		</param>
			<summary>Reads data from an open sequential file and assigns the data to specified variable.
		</summary>
		</member>
		<member name="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Int64@)">
			<param name="FileNumber">Any valid file number.
		</param>
			<param name="Value">Variable to read into.
		</param>
			<summary>Reads data from an open sequential file and assigns the data to specified variable.
		</summary>
		</member>
		<member name="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Object@)">
			<param name="FileNumber">Any valid file number.
		</param>
			<param name="Value">Variable to read into.
		</param>
			<summary>Reads data from an open sequential file and assigns the data to specified variable.
		</summary>
		</member>
		<member name="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Single@)">
			<param name="FileNumber">Any valid file number.
		</param>
			<param name="Value">Variable to read into.
		</param>
			<summary>Reads data from an open sequential file and assigns the data to specified variable.
		</summary>
		</member>
		<member name="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.String@)">
			<param name="FileNumber">Any valid file number.
		</param>
			<param name="Value">Variable to read into.
		</param>
			<summary>Reads data from an open sequential file and assigns the data to specified variable.
		</summary>
		</member>
		<member name="M:Microsoft.VisualBasic.FileSystem.InputString(System.Int32,System.Int32)">
			<summary>Returns String value containing characters from a file opened in Input or Binary mode.
		</summary>
			<param name="FileNumber">Any valid file number.
		</param>
			<param name="CharCount">Any valid numeric expression specifying the number of characters to read.
		</param>
		</member>
		<member name="M:Microsoft.VisualBasic.FileSystem.Kill(System.String)">
			<param name="PathName">String expression that specifies one or more file names to be deleted. PathName may include the directory or folder, and the drive.
		</param>
			<summary>Deletes files from a disk.
		</summary>
		</member>
		<member name="M:Microsoft.VisualBasic.FileSystem.LineInput(System.Int32)">
			<summary>Reads a single line from an open sequential file and assigns it to a String variable.
		</summary>
			<param name="FileNumber">Any valid file number.
		</param>
		</member>
		<member name="M:Microsoft.VisualBasic.FileSystem.Loc(System.Int32)">
			<summary>Returns a Long value specifying the current read/write position within an open file.
		</summary>
			<param name="FileNumber">Any valid Integer file number.
		</param>
		</member>
		<member name="M:Microsoft.VisualBasic.FileSystem.Lock(System.Int32)">
			<param name="FileNumber">Any valid file number.
		</param>
			<summary>Denies access by other processes to all of a file opened using the Open function.
		</summary>
		</member>
		<member name="M:Microsoft.VisualBasic.FileSystem.Lock(System.Int32,System.Int64)">
			<param name="FileNumber">Any valid file number.
		</param>
			<param name="Record">Number of the record to lock.
		</param>
			<summary>Denies access by other processes to a part of a file opened using the Open function.
		</summary>
		</member>
		<member name="M:Microsoft.VisualBasic.FileSystem.Lock(System.Int32,System.Int64,System.Int64)">
			<param name="FileNumber">Any valid file number.
		</param>
			<param name="FromRecord">Number of the first record or byte to lock.
		</param>
			<param name="ToRecord">Number of the last record or byte to lock.
		</param>
			<summary>Denies access by other processes to a part of a file opened using the Open function.
		</summary>
		</member>
		<member name="M:Microsoft.VisualBasic.FileSystem.LOF(System.Int32)">
			<summary>Returns a Long representing the size, in bytes, of a file opened using the Open statement.
		</summary>
			<param name="FileNumber">An Integer containing a valid file number.
		</param>
		</member>
		<member name="M:Microsoft.VisualBasic.FileSystem.MkDir(System.String)">
			<param name="Path">String expression that identifies the directory or folder to be created. The Path may include the drive.
		</param>
			<summary>Creates a new directory or folder.
		</summary>
		</member>
		<member name="M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])">
			<param name="FileNumber">Any valid file number.
		</param>
			<param name="Output">Zero or more comma-delimited expressions to write to a file.
		</param>
			<summary>Writes display-formatted data to a sequential file.
		</summary>
		</member>
		<member name="M:Microsoft.VisualBasic.FileSystem.Rename(System.String,System.String)">
			<param name="OldPath">String expression that specifies the existing file name and location. 
		</param>
			<param name="NewPath">String expression that specifies the new file name and location.
		</param>
			<summary>Renames a disk file, directory, or folder.
		</summary>
		</member>
		<member name="M:Microsoft.VisualBasic.FileSystem.Reset">
			<summary>Closes all disk files opened using the FileOpen function.
		</summary>
		</member>
		<member name="M:Microsoft.VisualBasic.FileSystem.RmDir(System.String)">
			<param name="Path">String expression that identifies the directory or folder to be removed. 
		</param>
			<summary>Removes an existing directory or folder.
		</summary>
		</member>
		<member name="M:Microsoft.VisualBasic.FileSystem.Seek(System.Int32)">
			<summary>Returns a Long specifying the current read/write position within a file opened using the FileOpen function.
		</summary>
			<param name="FileNumber">An Integer containing a valid file number.
		</param>
		</member>
		<member name="M:Microsoft.VisualBasic.FileSystem.Seek(System.Int32,System.Int64)">
			<param name="FileNumber">An Integer containing a valid file number.
		</param>
			<param name="Position">A numeric expression specifying the new position.
		</param>
			<summary>Sets the position for the next read/write operation within a file opened using the FileOpen function.
		</summary>
		</member>
		<member name="M:Microsoft.VisualBasic.FileSystem.SetAttr(System.String,Microsoft.VisualBasic.FileAttribute)">
			<param name="PathName">String expression that specifies a file name. PathName may include directory or folder, and drive.
		</param>
			<param name="Attributes">Enumeration expression, whose sum specifies file attributes.
		</param>
			<summary>Sets attribute information for a file.
		</summary>
		</member>
		<member name="M:Microsoft.VisualBasic.FileSystem.SPC(System.Int16)">
			<summary>Used with the Print or PrintLine functions to position output.
		</summary>
			<param name="Count">The number of spaces to insert before displaying or printing the next expression in a list.
		</param>
		</member>
		<member name="M:Microsoft.VisualBasic.FileSystem.TAB">
			<summary>Used with the Print or PrintLine functions to position output. Tab moves the insertion point to the next column.
		</summary>
		</member>
		<member name="M:Microsoft.VisualBasic.FileSystem.TAB(System.Int16)">
			<summary>Used with the Print or PrintLine functions to position output.
		</summary>
			<param name="Column">The column number moved to before displaying or printing the next expression in a list.
		</param>
		</member>
		<member name="M:Microsoft.VisualBasic.FileSystem.Unlock(System.Int32)">
			<param name="FileNumber">Any valid file number.
		</param>
			<summary>Re-enables access by other processes to a file locked using the lock function.
		</summary>
		</member>
		<member name="M:Microsoft.VisualBasic.FileSystem.Unlock(System.Int32,System.Int64)">
			<param name="FileNumber">Any valid file number.
		</param>
			<param name="Record">Number of the record to unlock.
		</param>
			<summary>Re-enables access by other processes to a part of a file locked using the lock function.
		</summary>
		</member>
		<member name="M:Microsoft.VisualBasic.FileSystem.Unlock(System.Int32,System.Int64,System.Int64)">
			<param name="FileNumber">Any valid file number.
		</param>
			<param name="FromRecord">Number of the first record or byte to unlock.
		</param>
			<param name="ToRecord">Number of the last record or byte to unlock.
		</param>
			<summary>Re-enables access by other processes to a part of a file locked using the lock function.
		</summary>
		</member>
		<member name="M:Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])">
			<param name="FileNumber">Any valid file number.
		</param>
			<param name="Output">One or more comma-delimited expressions to write to a file.
		</param>
			<summary>Writes data to a sequential file. Data written with Write is usually read from a file with Input.
		</summary>
		</member>
		<member name="T:Microsoft.VisualBasic.Financial">
			<summary>The Financial module contains procedures used to perform financial operations.
		</summary>
		</member>
		<member name="M:Microsoft.VisualBasic.Financial.DDB(System.Double,System.Double,System.Double,System.Double,System.Double)">
			<summary>Returns a Double specifying the depreciation of an asset for a specific time period using the double-declining balance method or some other method you specify.
		</summary>
			<param name="Cost">Double specifying initial cost of the asset.
		</param>
			<param name="Salvage">Double specifying value of the asset at the end of its useful life.
		</param>
			<param name="Life">Double specifying length of useful life of the asset.
		</param>
			<param name="Period">Double specifying period for which asset depreciation is calculated.
		</param>
			<param name="Factor">Double specifying rate at which the balance declines.
		</param>
		</member>
		<member name="M:Microsoft.VisualBasic.Financial.FV(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)">
			<summary>Returns a Double specifying the future value of an annuity based on periodic, fixed payments and a fixed interest rate.
		</summary>
			<param name="Rate">Double specifying interest rate per period. 
		</param>
			<param name="NPer">Double specifying total number of payment periods in the annuity. 
		</param>
			<param name="Pmt">Double specifying payment to be made each period.
		</param>
			<param name="PV">Double specifying present value (or lump sum) of a series of future payments.
		</param>
			<param name="Due">Object of type Microsoft.VisualBasic.DueDate that specifies when payments are due.
		</param>
		</member>
		<member name="M:Microsoft.VisualBasic.Financial.IPmt(System.Double,System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)">
			<summary>Returns a Double specifying the interest payment for a given period of an annuity based on periodic, fixed payments and a fixed interest rate.
		</summary>
			<param name="Rate">Double specifying interest rate per period.
		</param>
			<param name="Per">Double specifying payment period in the range 1 through NPer.
		</param>
			<param name="NPer">Double specifying total number of payment periods in the annuity.
		</param>
			<param name="PV">Double specifying present value, or value today, of a series of future payments or receipts.
		</param>
			<param name="FV">Double specifying future value or cash balance you want after you've made the final payment.
		</param>
			<param name="Due">Object of type Microsoft.VisualBasic.DueDate that specifies when payments are due.
		</param>
		</member>
		<member name="M:Microsoft.VisualBasic.Financial.IRR(System.Double[]@,System.Double)">
			<summary>Returns a Double specifying the internal rate of return for a series of periodic cash flows (payments and receipts).
		</summary>
			<param name="ValueArray">Array of Double specifying cash flow values. The array must contain at least one negative value (a payment) and one positive value (a receipt).
		</param>
			<param name="Guess">Object specifying value you estimate will be returned by IRR. 
		</param>
		</member>
		<member name="M:Microsoft.VisualBasic.Financial.MIRR(System.Double[]@,System.Double,System.Double)">
			<summary>Returns a Double specifying the modified internal rate of return for a series of periodic cash flows (payments and receipts).
		</summary>
			<param name="ValueArray">Array of Double specifying cash flow values. The array must contain at least one negative value (a payment) and one positive value (a receipt).
		</param>
			<param name="FinanceRate">Double specifying interest rate paid as the cost of financing.
		</param>
			<param name="ReinvestRate">Double specifying interest rate received on gains from cash reinvestment.
		</param>
		</member>
		<member name="M:Microsoft.VisualBasic.Financial.NPer(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)">
			<summary>Returns a Double specifying the number of periods for an annuity based on periodic, fixed payments and a fixed interest rate.
		</summary>
			<param name="Rate">Double specifying interest rate per period.
		</param>
			<param name="Pmt">Double specifying payment to be made each period. Payments usually contain principal and interest that doesn't change over the life of the annuity.
		</param>
			<param name="PV">Double specifying present value, or value today, of a series of future payments or receipts.
		</param>
			<param name="FV">Double specifying future value or cash balance you want after you've made the final payment.
		</param>
			<param name="Due">Object of type Microsoft.VisualBasic.DueDate that specifies when payments are due.
		</param>
		</member>
		<member name="M:Microsoft.VisualBasic.Financial.NPV(System.Double,System.Double[]@)">
			<summary>Returns a Double specifying the net present value of an investment based on a series of periodic cash flows (payments and receipts) and a discount rate.
		</summary>
			<param name="Rate">Double specifying discount rate over the length of the period, expressed as a decimal.
		</param>
			<param name="ValueArray">Array of Double specifying cash flow values. The array must contain at least one negative value (a payment) and one positive value (a receipt).
		</param>
		</member>
		<member name="M:Microsoft.VisualBasic.Financial.Pmt(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)">
			<summary>Returns a Double specifying the payment for an annuity based on periodic, fixed payments and a fixed interest rate.
		</summary>
			<param name="Rate">Double specifying interest rate per period.
		</param>
			<param name="NPer">Double specifying total number of payment periods in the annuity.
		</param>
			<param name="PV">Double specifying present value (or lump sum) that a series of payments to be paid in the future is worth now.
		</param>
			<param name="FV">Double specifying future value or cash balance you want after you've made the final payment.
		</param>
			<param name="Due">Enumeration of type Microsoft.VisualBasic.DueDate that specifies when payments are due.
		</param>
		</member>
		<member name="M:Microsoft.VisualBasic.Financial.PPmt(System.Double,System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)">
			<summary>Returns a Double specifying the principal payment for a given period of an annuity based on periodic, fixed payments and a fixed interest rate.
		</summary>
			<param name="Rate">Double specifying interest rate per period.
		</param>
			<param name="Per">Double specifying payment period in the range 1 through NPer.
		</param>
			<param name="NPer">Double specifying total number of payment periods in the annuity.
		</param>
			<param name="PV">Double specifying present value, or value today, of a series of future payments or receipts.
		</param>
			<param name="FV">Double specifying future value or cash balance you want after you've made the final payment.
		</param>
			<param name="Due">Enumeration of type Microsoft.VisualBasic.DueDate that specifies when payments are due.
		</param>
		</member>
		<member name="M:Microsoft.VisualBasic.Financial.PV(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)">
			<summary>Returns a Double specifying the present value of an annuity based on periodic, fixed payments to be paid in the future and a fixed interest rate.
		</summary>
			<param name="Rate">Double specifying interest rate per period.
		</param>
			<param name="NPer">Double specifying total number of payment periods in the annuity.
		</param>
			<param name="Pmt">Double specifying payment to be made each period.
		</param>
			<param name="FV">Double specifying future value or cash balance you want after you've made the final payment.</param>
			<param name="Due">Object of type Microsoft.VisualBasic.DueDate that specifies when payments are due.
		</param>
		</member>
		<member name="M:Microsoft.VisualBasic.Financial.Rate(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate,System.Double)">
			<summary>Returns a Double specifying the interest rate per period for an annuity.
		</summary>
			<param name="NPer">Double specifying total number of payment periods in the annuity.
		</param>
			<param name="Pmt">Double specifying payment to be made each period.
		</param>
			<param name="PV">Double specifying present value, or value today, of a series of future payments or receipts.
		</param>
			<param name="FV">Double specifying future value or cash balance you want after you make the final payment.
		</param>
			<param name="Due">Object of type Microsoft.VisualBasic.DueDate that specifies when payments are due.
		</param>
			<param name="Guess">Double specifying value you estimate will be returned by Rate.
		</param>
		</member>
		<member name="M:Microsoft.VisualBasic.Financial.SLN(System.Double,System.Double,System.Double)">
			<summary>Returns a Double specifying the straight-line depreciation of an asset for a single period.
		</summary>
			<param name="Cost">Double specifying initial cost of the asset.
		</param>
			<param name="Salvage">Double specifying value of the asset at the end of its useful life.
		</param>
			<param name="Life">Double specifying length of the useful life of the asset.
		</param>
		</member>
		<member name="M:Microsoft.VisualBasic.Financial.SYD(System.Double,System.Double,System.Double,System.Double)">
			<summary>Returns a Double specifying the sum-of-years digits depreciation of an asset for a specified period.
		</summary>
			<param name="Cost">Double specifying initial cost of the asset.
		</param>
			<param name="Salvage">Double specifying value of the asset at the end of its useful life.
		</param>
			<param name="Life">Double specifying length of the useful life of the asset.
		</param>
			<param name="Period">Double specifying period for which asset depreciation is calculated.
		</param>
		</member>
		<member name="T:Microsoft.VisualBasic.FirstDayOfWeek">
			<summary>The FirstDayOfWeek enumeration contains constants used to identify specific days of the week when using the DateDiff, DatePart, and Weekday functions. These constants can be used anywhere in your code.
		</summary>
		</member>


<member name="F:Microsoft.VisualBasic.FirstDayOfWeek.System">
<summary>The first day of the week as specified in your system settings.</summary>
		</member>
<member name="F:Microsoft.VisualBasic.FirstDayOfWeek.Sunday">
<summary>Sunday (default)</summary>
		</member>
<member name="F:Microsoft.VisualBasic.FirstDayOfWeek.Monday">
<summary>Monday</summary>
		</member>
<member name="F:Microsoft.VisualBasic.FirstDayOfWeek.Tuesday">
<summary>Tuesday</summary>
		</member>
<member name="F:Microsoft.VisualBasic.FirstDayOfWeek.Wednesday">
<summary>Wednesday</summary>
		</member>
<member name="F:Microsoft.VisualBasic.FirstDayOfWeek.Thursday">
<summary>Thursday</summary>
		</member>
<member name="F:Microsoft.VisualBasic.FirstDayOfWeek.Friday">
<summary>Friday</summary>
		</member>
<member name="F:Microsoft.VisualBasic.FirstDayOfWeek.Saturday">
<summary>Saturday</summary>
		</member>

		<member name="T:Microsoft.VisualBasic.FirstWeekOfYear">
			<summary>The FirstWeekOfYear enumeration contains constants used to identify how the first week of a year is determined when using the DateDiff and DatePart functions. These constants can be used anywhere in your code.
		</summary>
		</member>

<member name="F:Microsoft.VisualBasic.FirstWeekOfYear.System">
<summary>The day of the week specified in your system settings as the first day of the week.</summary>
		</member>
<member name="F:Microsoft.VisualBasic.FirstWeekOfYear.Jan1">
<summary>The week in which January 1 occurs (default).</summary>
		</member>
<member name="F:Microsoft.VisualBasic.FirstWeekOfYear.FirstFourDays">
<summary>The first week that has at least four days in the new year.</summary>
		</member>
<member name="F:Microsoft.VisualBasic.FirstWeekOfYear.FirstFullWeek">
<summary>The first full week of the year.</summary>
		</member>

		<member name="T:Microsoft.VisualBasic.Globals">
			<summary>The Global module contains script engine functions.
		</summary>
		</member>
		<member name="P:Microsoft.VisualBasic.Globals.ScriptEngine">
			<summary>Returns a string representing the scripting language in use.
		</summary>
		</member>
		<member name="P:Microsoft.VisualBasic.Globals.ScriptEngineBuildVersion">
			<summary>Returns the build version number of the scripting engine in use.
		</summary>
		</member>
		<member name="P:Microsoft.VisualBasic.Globals.ScriptEngineMajorVersion">
			<summary>Returns the major version number of the scripting engine in use.
		</summary>
		</member>
		<member name="P:Microsoft.VisualBasic.Globals.ScriptEngineMinorVersion">
			<summary>Returns the minor version number of the scripting engine in use.
		</summary>
		</member>
		<member name="T:Microsoft.VisualBasic.Information">
			<summary>The Information module contains the procedures used to return, test for, or verify information.
		</summary>
		</member>
		<member name="M:Microsoft.VisualBasic.Information.Err">
			<summary>Returns an ErrObject containing details of the last error.
		</summary>
		</member>

		<member name="M:Microsoft.VisualBasic.Information.IsArray(System.Object)">
			<summary>Returns a Boolean value indicating whether a variable contains to an array.
		</summary>
		</member>
		<member name="M:Microsoft.VisualBasic.Information.IsDate(System.Object)">
			<summary>Returns a Boolean value indicating whether an expression can be converted to a date.
		</summary>
		</member>
		<member name="M:Microsoft.VisualBasic.Information.IsDBNull(System.Object)">
			<summary>Returns a Boolean value indicating whether an expression evaluates to the Null value returned from a database.
		</summary>
		</member>
		<member name="M:Microsoft.VisualBasic.Information.IsError(System.Object)">
			<summary>Returns a Boolean value indicating whether an expression is an exception type.
		</summary>
		</member>
		<member name="M:Microsoft.VisualBasic.Information.IsNothing(System.Object)">
			<summary>Returns a Boolean value indicating whether an expression has no value assigned to it.
		</summary>
		</member>
		<member name="M:Microsoft.VisualBasic.Information.IsNumeric(System.Object)">
			<summary>Returns a Boolean value indicating whether an expression can be evaluated as a number.
		</summary>
		</member>
		<member name="M:Microsoft.VisualBasic.Information.IsReference(System.Object)">
			<summary>Returns a Boolean value indicating whether an expression evaluates to a reference type.
		</summary>
		</member>
		<member name="M:Microsoft.VisualBasic.Information.LBound(System.Array,System.Int32)">
			<summary>Returns the lowest available subscript for the indicated dimension of an array.
		</summary>
			<param name="Array">The array in which you want to find the lowest possible subscript of a dimension.
		</param>
			<param name="Rank">The dimension for which the lowest possible subscript is to be returned. Use 1 for the first dimension, 2 for the second, and so on.
		</param>
		</member>
		<member name="M:Microsoft.VisualBasic.Information.QBColor(System.Int32)">
			<summary>Returns an integer value representing the RGB color code corresponding to the specified color number.
		</summary>
			<param name="color">A whole number in the range 0â15.
		</param>
		</member>
		<member name="M:Microsoft.VisualBasic.Information.RGB(System.Int32,System.Int32,System.Int32)">
			<summary>Returns an integer value representing an RGB color value from a set of red, green and blue color components.
		</summary>
			<param name="red">Integer in the range 0â255, inclusive, that represents the intensity of the red component of the color.
		</param>
			<param name="green">Integer in the range 0â255, inclusive, that represents the intensity of the green component of the color.
		</param>
			<param name="blue">Integer in the range 0â255, inclusive, that represents the intensity of the blue component of the color.
		</param>
		</member>
		<member name="M:Microsoft.VisualBasic.Information.SystemTypeName(System.String)">
			<summary>Returns the system type name corresponding to a Visual Basic type name.
			<param name="VBName">Name of the Visual Basic Type.
		</param>
		</summary>
		</member>
		<member name="M:Microsoft.VisualBasic.Information.UBound(System.Array,System.Int32)">
			<summary>Returns the highest available subscript for the indicated dimension of an array.
		</summary>
			<param name="Array">The array in which you want to find the highest possible subscript of a dimension.
		</param>
			<param name="Rank">The dimension for which the highest possible subscript is to be returned. Use 1 for the first dimension, 2 for the second, and so on.
		</param>
		</member>
<member name="M:Microsoft.VisualBasic.Information.VbTypeName(System.String)">
			<summary>Returns a String value containing the Visual Basic data type name of a variable.
			
		</summary>
		<param name="UrtName">Required. String variable containing a type name used by the common language runtime.</param>

		</member>
		<member name="T:Microsoft.VisualBasic.Interaction">
			<summary>The Interaction module contains procedures used to interact with objects, applications, and systems.
		</summary>
		</member>
		<member name="M:Microsoft.VisualBasic.Interaction.AppActivate(System.Int32)">
			<param name="ProcessID">specifying the Win32 Process ID number assigned to this process.
		</param>
			<summary>Activates an application window.
		</summary>
		</member>
		<member name="M:Microsoft.VisualBasic.Interaction.AppActivate(System.String)">
			<param name="Title">expression specifying the title in the title bar of the application window you want to activate. You can use the task ID returned by the Shell function.
		</param>
			<summary>Activates an application window.
		</summary>
		</member>
		<member name="M:Microsoft.VisualBasic.Interaction.Beep">
			<summary>Sounds a tone through the computer's speaker.
		</summary>
		</member>
		<member name="M:Microsoft.VisualBasic.Interaction.CallByName(System.Object,System.String,Microsoft.VisualBasic.CallType,System.Object[])">
			<summary>Executes a method on an object, or sets or returns a property on an object.
		</summary>
			<param name="ObjectRef">Object. A pointer to the object exposing the property or method.
		</param>
			<param name="ProcName">String. A string expression containing the name of the property or method on the object.
		</param>
			<param name="UseCallType">An enumeration member of type Microsoft.VisualBasic.CallType representing the type of procedure being called. The value of CallType can be Method, Get, or Set.
		</param>
			<param name="Args">ParamArray. A parameter array containing the arguments to be passed to the property or method being called.
		</param>
		</member>
		<member name="M:Microsoft.VisualBasic.Interaction.Choose(System.Double,System.Object[])">
			<summary>Selects and returns a value from a list of arguments.
		</summary>
			<param name="Index">Double. Numeric expression that results in a value between 1 and the number of elements passed in the Choice argument.
		</param>
			<param name="Choice">Object parameter array. You can supply either a single variable or an expression that evaluates to the Object data type, to a list of Object variables or expressions separated by commas, or to a single-dimensional array of Object elements.
		</param>
		</member>
		<member name="M:Microsoft.VisualBasic.Interaction.Command">
			<summary>Returns the argument portion of the command line used to launch Visual Basic or an executable program developed with Visual Basic.
		</summary>
		</member>
		<member name="M:Microsoft.VisualBasic.Interaction.CreateObject(System.String,System.String)">
			<summary>Creates and returns a reference to a COM object. CreateObject cannot be used to create instances of classes in Visual Basic unless those classes are explicitly exposed as ActiveX objects.
		</summary>
			<param name="ProgId">String. The program ID of the object to create.
		</param>
			<param name="ServerName">String. The name of the network server where the object will be created. If ServerName is an empty string (""), the local machine is used.
		</param>
		</member>
		<member name="M:Microsoft.VisualBasic.Interaction.DeleteSetting(System.String,System.String,System.String)">
			<param name="AppName">String expression containing the name of the application or project to which the section or key setting applies.
		</param>
			<param name="Section">String expression containing the name of the section from which the key setting is being deleted. If only AppName and Section are provided, the specified section is deleted along with all related key settings.
		</param>
			<param name="Key">String expression containing the name of the key setting being deleted.
		</param>
			<summary>Deletes a section or key setting from an application's entry in the Windows registry.
		</summary>
		</member>
		<member name="M:Microsoft.VisualBasic.Interaction.Environ(System.Int32)">
			<summary>Returns the string associated with an operating system environment variable.
		</summary>
			<param name="Expression">Expression that evaluates to either a string containing the name of an environment variable, or an integer corresponding to the numeric order of an environment string in the environment-string table.
		</param>
		</member>
		<member name="M:Microsoft.VisualBasic.Interaction.Environ(System.String)">
			<summary>Returns the string associated with an operating system environment variable.
		</summary>
			<param name="Expression">Expression that evaluates to either a string containing the name of an environment variable, or an integer corresponding to the numeric order of an environment string in the environment-string table.
		</param>
		</member>
		<member name="M:Microsoft.VisualBasic.Interaction.GetAllSettings(System.String,System.String)">
			<summary>Returns a list of key settings and their respective values (originally created with SaveSetting) from an application's entry in the Windows registry.
		</summary>
			<param name="AppName">String expression containing the name of the application or project whose key settings are requested.
		</param>
			<param name="Section">String expression containing the name of the section whose key settings are requested. GetAllSettings returns an object that contains a two-dimensional array of strings. The strings contain all the key settings in the specified section plus their corresponding values.
		</param>
		</member>
		<member name="M:Microsoft.VisualBasic.Interaction.GetObject(System.String,System.String)">
			<summary>Returns a reference to an object provided by a COM component.
		</summary>
			<param name="pathname">String. The full path and name of the file containing the object to retrieve. If pathname is omitted, class is required.
		</param>
			<param name="class">String. A string representing the class of the object.
		</param>
		</member>
		<member name="M:Microsoft.VisualBasic.Interaction.GetSetting(System.String,System.String,System.String,System.String)">
			<summary>Returns a key setting value from an application's entry in the Windows registry.
		</summary>
			<param name="AppName">String expression containing the name of the application or project whose key setting is requested.
		</param>
			<param name="Section">String expression containing the name of the section in which the key setting is found.
		</param>
			<param name="Key">String expression containing the name of the key setting to return.
		</param>
			<param name="Default">Expression containing the value to return if no value is set in the Key setting. If omitted, Default is assumed to be a zero-length string ("").
		</param>
		</member>
		<member name="M:Microsoft.VisualBasic.Interaction.IIf(System.Boolean,System.Object,System.Object)">
			<summary>Returns one of two objects, depending on the evaluation of an expression.
		</summary>
			<param name="Expression">Boolean. The expression you want to evaluate.
		</param>
			<param name="TruePart">Object. Returned if Expression evaluates to True.
		</param>
			<param name="FalsePart">Object. Returned if Expression evaluates to False.
		</param>
		</member>
		<member name="M:Microsoft.VisualBasic.Interaction.InputBox(System.String,System.String,System.String,System.Int32,System.Int32)">
			<summary>Displays a prompt in a dialog box, waits for the user to input text or click a button, and then returns a string containing the contents of the text box.
		</summary>
			<param name="Prompt">String expression displayed as the message in the dialog box. The maximum length of Prompt is approximately 1024 characters, depending on the width of the characters used. If Prompt consists of more than one line, you can separate the lines using a carriage return character (Chr(13)), a linefeed character (Chr(10)), or a carriage returnâlinefeed character combination between each line.
		</param>
			<param name="Title">String expression displayed in the title bar of the dialog box. If you omit Title, the application name is placed in the title bar.
		</param>
			<param name="DefaultResponse">String expression displayed in the text box as the default response if no other input is provided. If you omit DefaultResponse, the displayed text box is empty.
		</param>
			<param name="XPos">Numeric expression that specifies, in twips, the distance of the left edge of the dialog box from the left edge of the screen. If you omit XPos, the dialog box is centered horizontally.
		</param>
			<param name="YPos">Numeric expression that specifies, in twips, the distance of the upper edge of the dialog box from the top of the screen. If you omit YPos, the dialog box is positioned vertically approximately one-third of the way down the screen.
		</param>
		</member>
		<member name="M:Microsoft.VisualBasic.Interaction.MsgBox(System.Object,Microsoft.VisualBasic.MsgBoxStyle,System.Object)">
			<summary>Displays a message in a dialog box, waits for the user to click a button, and then returns an integer indicating which button the user clicked.
		</summary>
			<param name="Prompt">String expression displayed as the message in the dialog box. The maximum length of Prompt is approximately 1024 characters, depending on the width of the characters used. If Prompt consists of more than one line, you can separate the lines using a carriage return character (Chr(13)), a linefeed character (Chr(10)), or a carriage return-linefeed character combination between each line.
		</param>
			<param name="Buttons">Numeric expression that is the sum of values specifying the number and type of buttons to display, the icon style to use, the identity of the default button, and the modality of the message box. If you omit Buttons, the default value is zero.
		</param>
			<param name="Title">String expression displayed in the title bar of the dialog box. If you omit Title, the application name is placed in the title bar.
		</param>
		</member>
		<member name="M:Microsoft.VisualBasic.Interaction.Partition(System.Int64,System.Int64,System.Int64,System.Int64)">
			<summary>Returns a string representing the calculated range that contains a number.
		</summary>
			<param name="Number">Long. Whole number that you want to locate within one of the calculated ranges.
		</param>
			<param name="Start">Long. Whole number that indicates the start of the set of calculated ranges. Start cannot be less than 0.
		</param>
			<param name="Stop">Long. Whole number that indicates the end of the set of calculated ranges. Stop cannot be less than or equal to Start.
		</param>
			<param name="Interval">Long. Whole number that indicates the size of each range calculated between Start and Stop. Interval cannot be less than 1.
		</param>
		</member>
		<member name="M:Microsoft.VisualBasic.Interaction.SaveSetting(System.String,System.String,System.String,System.String)">
			<param name="AppName">String expression containing the name of the application or project to which the setting applies.
		</param>
			<param name="Section">String expression containing the name of the section in which the key setting is being saved.
		</param>
			<param name="Key">String expression containing the name of the key setting being saved.
		</param>
			<param name="Setting">Expression containing the value to which Key is being set.
		</param>
			<summary>Saves or creates an application entry in the Windows registry.
		</summary>
		</member>
		<member name="M:Microsoft.VisualBasic.Interaction.Shell(System.String,Microsoft.VisualBasic.AppWinStyle,System.Boolean,System.Int32)">
			<summary>Runs an executable program and returns an integer containing the program's process ID if it is still running.
		</summary>
			<param name="Pathname">String. Name of the program to execute, together with any required arguments and command-line switches. Pathname can also include the drive and the directory path or folder.
		</param>
			<param name="Style">AppWinStyle. A value chosen from the AppWinStyle enumeration corresponding to the style of the window in which the program is to be run. If Style is omitted, Shell uses AppWinStyle.MinimizedFocus, which starts the program minimized and with focus.
		</param>
			<param name="Wait">A value indicating whether the Shell function should wait for completion of the program. If Wait is omitted, Shell uses False.
		</param>
			<param name="Timeout">The number of milliseconds to wait for completion if Wait is True. If Timeout is omitted, Shell uses -1, which means there is no timeout and Shell does not return until the program completes. Therefore, if you omit Timeout or set it to -1, it is possible that Shell might never return control to your program.
		</param>
		</member>
		<member name="M:Microsoft.VisualBasic.Interaction.Switch(System.Object[])">
			<summary>Evaluates a list of expressions and returns an Object value of an expression associated with the first expression in the list that is True.
		</summary>
			<param name="VarExpr">Object parameter array. Must have an even number of elements. You can supply a list of Object variables or expressions separated by commas, or a single-dimensional array of Object elements.
		</param>
		</member>
		<member name="T:Microsoft.VisualBasic.MsgBoxResult">
			<summary>The MsgBoxResult enumeration contains constants used to identify which button was pressed on a message box displayed using the MsgBox function. These constants can be used anywhere in your code.
		</summary>
		</member>

<member name="F:Microsoft.VisualBasic.MsgBoxResult.OK">
<summary>OK button was pressed.</summary>
		</member>
<member name="F:Microsoft.VisualBasic.MsgBoxResult.Cancel">
<summary>Cancel button was pressed.</summary>
		</member>
<member name="F:Microsoft.VisualBasic.MsgBoxResult.Abort">
<summary>Abort button was pressed.</summary>
		</member>
<member name="F:Microsoft.VisualBasic.MsgBoxResult.Retry">
<summary>Retry button was pressed.</summary>
		</member>
<member name="F:Microsoft.VisualBasic.MsgBoxResult.Ignore">
<summary>Ignore button was pressed.</summary>
		</member>
<member name="F:Microsoft.VisualBasic.MsgBoxResult.Yes">
<summary>Yes button was pressed.</summary>
		</member>
<member name="F:Microsoft.VisualBasic.MsgBoxResult.No">
<summary>No button was pressed.</summary>
		</member>

		<member name="T:Microsoft.VisualBasic.MsgBoxStyle">
			<summary>The MsgBoxStyle enumeration contains constants used to specify the behavior of a message box, along with symbols and buttons that appear on it, when displayed using the MsgBox function. These constants can be used anywhere in your code.
		</summary>
		</member>


<member name="F:Microsoft.VisualBasic.MsgBoxStyle.OKOnly">
<summary>OK button only (default).</summary>
		</member>
<member name="F:Microsoft.VisualBasic.MsgBoxStyle.OKCancel">
<summary>
OK and Cancel buttons.</summary>
		</member>
<member name="F:Microsoft.VisualBasic.MsgBoxStyle.AbortRetryIgnore">
<summary>Abort, Retry, and Ignore buttons.</summary>
		</member>
<member name="F:Microsoft.VisualBasic.MsgBoxStyle.YesNoCancel">
<summary>Yes, No, and Cancel buttons.</summary>
		</member>
<member name="F:Microsoft.VisualBasic.MsgBoxStyle.YesNo">
<summary>Yes and No buttons.</summary>
		</member>
<member name="F:Microsoft.VisualBasic.MsgBoxStyle.RetryCancel">
<summary>Retry and Cancel buttons.</summary>
		</member>
<member name="F:Microsoft.VisualBasic.MsgBoxStyle.Critical">
<summary>Critical message.</summary>
		</member>
<member name="F:Microsoft.VisualBasic.MsgBoxStyle.Question">
<summary>Warning query.</summary>
		</member>
<member name="F:Microsoft.VisualBasic.MsgBoxStyle.Exclamation">
<summary>Warning message.</summary>
		</member>
<member name="F:Microsoft.VisualBasic.MsgBoxStyle.Information">
<summary>Information message.</summary>
		</member>
<member name="F:Microsoft.VisualBasic.MsgBoxStyle.DefaultButton1">
<summary>First button is default (default).</summary>
		</member>
<member name="F:Microsoft.VisualBasic.MsgBoxStyle.DefaultButton2">
<summary>Second button is default.</summary>
		</member>
<member name="F:Microsoft.VisualBasic.MsgBoxStyle.DefaultButton3">
<summary>Third button is default.</summary>
		</member>
<member name="F:Microsoft.VisualBasic.MsgBoxStyle.ApplicationModal">
<summary>Application modal message box (default).</summary>
		</member>
<member name="F:Microsoft.VisualBasic.MsgBoxStyle.SystemModal">
<summary>System modal message box.</summary>
		</member>
<member name="F:Microsoft.VisualBasic.MsgBoxStyle.MsgBoxSetForeground">
<summary>Foreground message box window.</summary>
		</member>
<member name="F:Microsoft.VisualBasic.MsgBoxStyle.MsgBoxRight">
<summary>Right-aligned text.</summary>
		</member>
<member name="F:Microsoft.VisualBasic.MsgBoxStyle.MsgBoxRtlReading">
<summary>Right-to-left reading text (Hebrew and Arabic systems).</summary>
		</member>
<member name="F:Microsoft.VisualBasic.MsgBoxStyle.MsgBoxHelp">
<summary>Help text.</summary>
		</member>





		<member name="T:Microsoft.VisualBasic.OpenAccess">
			<summary>The OpenAccess enumeration defines constants used to identify file access.
		</summary>
		</member>

<member name="F:Microsoft.VisualBasic.OpenAccess.Default">
<summary>Read and write permitted. This is the default.</summary>
		</member>
<member name="F:Microsoft.VisualBasic.OpenAccess.Read">
<summary>Read permitted.</summary>
		</member>
<member name="F:Microsoft.VisualBasic.OpenAccess.ReadWrite">
<summary>Read and write permitted.</summary>
		</member>
<member name="F:Microsoft.VisualBasic.OpenAccess.Write">
<summary>Write permitted.</summary>
		</member>

		<member name="T:Microsoft.VisualBasic.OpenMode">
			<summary>The OpenMode enumeration defines constants used to identify file access modes.
		</summary>
		</member>

<member name="F:Microsoft.VisualBasic.OpenMode.Append">
<summary>Append mode</summary>
		</member>
<member name="F:Microsoft.VisualBasic.OpenMode.Binary">
<summary>Binary mode</summary>
		</member>
<member name="F:Microsoft.VisualBasic.OpenMode.Input">
<summary>Input mode</summary>
		</member>
<member name="F:Microsoft.VisualBasic.OpenMode.Output">
<summary>Output mode</summary>
		</member>
<member name="F:Microsoft.VisualBasic.OpenMode.Random">
<summary>Random mode</summary>
		</member>


		<member name="T:Microsoft.VisualBasic.OpenShare">
			<summary>The OpenShare enumeration defines constants used to identify file sharing.
		</summary>
		</member>

<member name="F:Microsoft.VisualBasic.OpenShare.Default">
			<summary>Shared. This is the default.</summary>
		</member>
<member name="F:Microsoft.VisualBasic.OpenShare.LockRead">
			<summary>Cannot be read.</summary>
		</member>
<member name="F:Microsoft.VisualBasic.OpenShare.LockReadWrite">
			<summary>Cannot be read or written to.</summary>
		</member>
<member name="F:Microsoft.VisualBasic.OpenShare.LockWrite">
			<summary>Cannot be written to.</summary>
		</member>
<member name="F:Microsoft.VisualBasic.OpenShare.Shared">
			<summary>Shared.</summary>
		</member>

		<member name="T:Microsoft.VisualBasic.Strings">
			<summary>The Strings module contains procedures used to perform string operations.
		</summary>
		</member>
		<member name="M:Microsoft.VisualBasic.Strings.Asc(System.Char)">
			<summary>Returns an Integer representing the character code corresponding to the first letter in a string.
		</summary>
			<param name="String">Any valid Char or String expression. If String is Nothing or contains no characters, an ArgumentException error occurs.
		</param>
		</member>
		<member name="M:Microsoft.VisualBasic.Strings.Asc(System.String)">
			<summary>Returns an Integer representing the character code corresponding to the first letter in a string.
		</summary>
			<param name="String">Any valid Char or String expression. If String is Nothing or contains no characters, an ArgumentException error occurs.
		</param>
		</member>
		<member name="M:Microsoft.VisualBasic.Strings.AscW(System.Char)">
			<summary>Returns an Integer representing the character code corresponding to the first letter in a string.
		</summary>
			<param name="String">Any valid Char or String expression. If String is Nothing or contains no characters, an ArgumentException error occurs.
		</param>
		</member>
		<member name="M:Microsoft.VisualBasic.Strings.AscW(System.String)">
			<summary>Returns an Integer representing the character code corresponding to the first letter in a string.
		</summary>
			<param name="String">Any valid Char or String expression. If String is Nothing or contains no characters, an ArgumentException error occurs.
		</param>
		</member>
		<member name="M:Microsoft.VisualBasic.Strings.Chr(System.Int32)">
			<summary>Returns the character associated with the specified character code as a Char data type.
		</summary>
			<param name="Charcode">An integer that identifies a character.
		</param>
		</member>
		<member name="M:Microsoft.VisualBasic.Strings.ChrW(System.Int32)">
			<summary>Returns the character associated with the specified character code as a Char data type.
		</summary>
			<param name="Charcode">An integer that identifies a character.
		</param>
		</member>
		<member name="M:Microsoft.VisualBasic.Strings.Filter(System.Object[],System.String,System.Boolean,Microsoft.VisualBasic.CompareMethod)">
			<summary>Returns a zero-based array containing a subset of a String array based on specified filter criteria.
		</summary>
			<param name="Source">One-dimensional array of strings to be searched.
		</param>
			<param name="Match">String to search for.
		</param>
			<param name="Include">Boolean value indicating whether to return substrings that include or exclude Match. If Include is True, the Filter function returns the subset of the array that contains Match as a substring. If Include is False, the Filter function returns the subset of the array that does not contain Match as a substring.
		</param>
			<param name="Compare">Numeric value indicating the kind of string comparison to use. See Settings for values.
		</param>
		</member>
		<member name="M:Microsoft.VisualBasic.Strings.Filter(System.String[],System.String,System.Boolean,Microsoft.VisualBasic.CompareMethod)">
			<summary>Returns a zero-based array containing a subset of a String array based on specified filter criteria.
		</summary>
			<param name="Source">One-dimensional array of strings to be searched.
		</param>
			<param name="Match">String to search for.
		</param>
			<param name="Include">Boolean value indicating whether to return substrings that include or exclude Match. If Include is True, the Filter function returns the subset of the array that contains Match as a substring. If Include is False, the Filter function returns the subset of the array that does not contain Match as a substring.
		</param>
			<param name="Compare">Numeric value indicating the kind of string comparison to use. See Settings for values.
		</param>
		</member>
		<member name="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
			<summary>Returns a String expression formatted according to instructions contained in a format String expression.
		</summary>
			<param name="Expression">Any valid expression.
		</param>
			<param name="Style">A valid named or user-defined format String expression.
		</param>
		</member>
		<member name="M:Microsoft.VisualBasic.Strings.FormatCurrency(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)">
			<summary>Returns an expression formatted as a currency value using the currency symbol defined in the system control panel.
		</summary>
			<param name="Expression">Expression to be formatted.
		</param>
			<param name="NumDigitsAfterDecimal">Numeric value indicating how many places are displayed to the right of the decimal. Default value is â1, which indicates that the computer's regional settings are used.
		</param>
			<param name="IncludeLeadingDigit">Tristate constant that indicates whether or not a leading zero is displayed for fractional values. See Settings for values.
		</param>
			<param name="UseParensForNegativeNumbers">Tristate constant that indicates whether or not to place negative values within parentheses. See Settings for values.
		</param>
			<param name="GroupDigits">Tristate constant that indicates whether or not numbers are grouped using the group delimiter specified in the computer's regional settings. See Settings for values.
		</param>
		</member>
		<member name="M:Microsoft.VisualBasic.Strings.FormatDateTime(System.DateTime,Microsoft.VisualBasic.DateFormat)">
			<summary>Returns an expression formatted as a date or time.
		</summary>
			<param name="Expression">Date expression to be formatted.
		</param>
			<param name="NamedFormat">Numeric value that indicates the date or time format used. If omitted, GeneralDate is used.
		</param>
		</member>
		<member name="M:Microsoft.VisualBasic.Strings.FormatNumber(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)">
			<summary>Returns an expression formatted as a number.
		</summary>
			<param name="Expression">Expression to be formatted.
		</param>
			<param name="NumDigitsAfterDecimal">Numeric value indicating how many places are displayed to the right of the decimal. The default value is â1, which indicates that the computer's regional settings are used.
		</param>
			<param name="IncludeLeadingDigit">Tristate constant that indicates whether a leading zero is displayed for fractional values. See Settings for values.
		</param>
			<param name="UseParensForNegativeNumbers">Tristate constant that indicates whether to place negative values within parentheses. See Settings for values.
		</param>
			<param name="GroupDigits">Tristate constant that indicates whether or not numbers are grouped using the group delimiter specified in the locale settings. See Settings for values.
		</param>
		</member>
		<member name="M:Microsoft.VisualBasic.Strings.FormatPercent(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)">
			<summary>Returns an expression formatted as a percentage (that is, multiplied by 100) with a trailing % character.
		</summary>
			<param name="Expression">Expression to be formatted.
		</param>
			<param name="NumDigitsAfterDecimal">Numeric value indicating how many places to the right of the decimal are displayed. Default value is â1, which indicates that the locale settings are used.
		</param>
			<param name="IncludeLeadingDigit">Tristate constant that indicates whether or not a leading zero is displayed for fractional values. See Settings for values.
		</param>
			<param name="UseParensForNegativeNumbers">Tristate constant that indicates whether or not to place negative values within parentheses. See Settings for values.
		</param>
			<param name="GroupDigits">Tristate constant that indicates whether or not numbers are grouped using the group delimiter specified in the locale settings. See Settings for values.
		</param>
		</member>
		<member name="M:Microsoft.VisualBasic.Strings.InStr(System.Int32,System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
			<summary>Returns an Integer specifying the start position of the first occurrence of one string within another.
		</summary>
			<param name="Start">Numeric expression that sets the starting position for each search. If omitted, search begins at the first character position. The start index is 1 based.
		</param>
			<param name="String1">String expression being searched.
		</param>
			<param name="String2">String expression sought.
		</param>
			<param name="Compare">Specifies the type of string comparison. If Compare is omitted, the Option Compare setting determines the type of comparison. Specify a valid LCID (LocaleID) to use locale-specific rules in the comparison.
		</param>
		</member>
		<member name="M:Microsoft.VisualBasic.Strings.InStr(System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
			<summary>Returns an Integer specifying the start position of the first occurrence of one string within another.
		</summary>
			<param name="String1">String expression being searched.
		</param>
			<param name="String2">String expression sought.
		</param>
			<param name="Compare">Specifies the type of string comparison. If Compare is omitted, the Option Compare setting determines the type of comparison. Specify a valid LCID (LocaleID) to use locale-specific rules in the comparison.
		</param>
		</member>
		<member name="M:Microsoft.VisualBasic.Strings.InStrRev(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)">
			<summary>Returns the position of the first occurrence of one string within another, starting from the right side of the string.
		</summary>
			<param name="StringCheck">String expression being searched.
		</param>
			<param name="StringMatch">String expression being searched for.
		</param>
			<param name="Start">Numeric expression that sets the one-based starting position for each search, starting from the left side of the string. If Start is omitted, â1 is used, which means that the search begins at the last character position. Search then proceeds from right to left.
		</param>
			<param name="Compare">Numeric value indicating the kind of comparison to use when evaluating substrings. If omitted, a binary comparison is performed. See Settings for values.
		</param>
		</member>
		<member name="M:Microsoft.VisualBasic.Strings.Join(System.Object[],System.String)">
			<summary>Returns a string created by joining a number of substrings contained in an array.
		</summary>
			<param name="SourceArray">One-dimensional array containing substrings to be joined.
		</param>
			<param name="Delimiter">String used to separate the substrings in the returned string. If omitted, the space character (" ") is used. If Delimiter is a zero-length string (""), all items in the list are concatenated with no delimiters.
		</param>
		</member>
		<member name="M:Microsoft.VisualBasic.Strings.Join(System.String[],System.String)">
			<summary>Returns a string created by joining a number of substrings contained in an array.
		</summary>
			<param name="SourceArray">One-dimensional array containing substrings to be joined.
		</param>
			<param name="Delimiter">String used to separate the substrings in the returned string. If omitted, the space character (" ") is used. If Delimiter is a zero-length string (""), all items in the list are concatenated with no delimiters.
		</param>
		</member>
		<member name="M:Microsoft.VisualBasic.Strings.LCase(System.Char)">
			<summary>Returns a String or Char that has been converted to lowercase.
		</summary>
			<param name="Value">Any valid String or Char expression.
		</param>
		</member>
		<member name="M:Microsoft.VisualBasic.Strings.LCase(System.String)">
			<summary>Returns a String or Char that has been converted to lowercase.
		</summary>
			<param name="Value">Any valid String or Char expression.
		</param>
		</member>
		<member name="M:Microsoft.VisualBasic.Strings.Left(System.String,System.Int32)">
			<summary>Returns a String containing a specified number of characters from the left side of a string.
		</summary>
			<param name="Str">String expression from which the leftmost characters are returned.
		</param>
			<param name="Length">Integer expression. Numeric expression indicating how many characters to return. If 0, a zero-length string ("") is returned. If greater than or equal to the number of characters in Str, the entire string is returned.
		</param>
		</member>
		<member name="M:Microsoft.VisualBasic.Strings.Len(System.Boolean)">
			<summary>Returns an Integer containing either the number of characters in a string or the number of bytes required to store a variable.
		</summary>
			<param name="Expression">valid String expression or variable name. If Expression is of type Object, the Len function returns the size as it will be written to the file.
		</param>
		</member>
		<member name="M:Microsoft.VisualBasic.Strings.Len(System.Byte)">
			<summary>Returns an Integer containing either the number of characters in a string or the number of bytes required to store a variable.
		</summary>
			<param name="Expression">valid String expression or variable name. If Expression is of type Object, the Len function returns the size as it will be written to the file.
		</param>
		</member>
		<member name="M:Microsoft.VisualBasic.Strings.Len(System.Char)">
			<summary>Returns an Integer containing either the number of characters in a string or the number of bytes required to store a variable.
		</summary>
			<param name="Expression">valid String expression or variable name. If Expression is of type Object, the Len function returns the size as it will be written to the file.
		</param>
		</member>
		<member name="M:Microsoft.VisualBasic.Strings.Len(System.DateTime)">
			<summary>Returns an Integer containing either the number of characters in a string or the number of bytes required to store a variable.
		</summary>
			<param name="Expression">valid String expression or variable name. If Expression is of type Object, the Len function returns the size as it will be written to the file.
		</param>
		</member>
		<member name="M:Microsoft.VisualBasic.Strings.Len(System.Decimal)">
			<summary>Returns an Integer containing either the number of characters in a string or the number of bytes required to store a variable.
		</summary>
			<param name="Expression">valid String expression or variable name. If Expression is of type Object, the Len function returns the size as it will be written to the file.
		</param>
		</member>
		<member name="M:Microsoft.VisualBasic.Strings.Len(System.Double)">
			<summary>Returns an Integer containing either the number of characters in a string or the number of bytes required to store a variable.
		</summary>
			<param name="Expression">valid String expression or variable name. If Expression is of type Object, the Len function returns the size as it will be written to the file.
		</param>
		</member>
		<member name="M:Microsoft.VisualBasic.Strings.Len(System.Int16)">
			<summary>Returns an Integer containing either the number of characters in a string or the number of bytes required to store a variable.
		</summary>
			<param name="Expression">valid String expression or variable name. If Expression is of type Object, the Len function returns the size as it will be written to the file.
		</param>
		</member>
		<member name="M:Microsoft.VisualBasic.Strings.Len(System.Int32)">
			<summary>Returns an Integer containing either the number of characters in a string or the number of bytes required to store a variable.
		</summary>
			<param name="Expression">valid String expression or variable name. If Expression is of type Object, the Len function returns the size as it will be written to the file.
		</param>
		</member>
		<member name="M:Microsoft.VisualBasic.Strings.Len(System.Int64)">
			<summary>Returns an Integer containing either the number of characters in a string or the number of bytes required to store a variable.
		</summary>
			<param name="Expression">valid String expression or variable name. If Expression is of type Object, the Len function returns the size as it will be written to the file.
		</param>
		</member>
		<member name="M:Microsoft.VisualBasic.Strings.Len(System.Object)">
			<summary>Returns an Integer containing either the number of characters in a string or the number of bytes required to store a variable.
		</summary>
			<param name="Expression">valid String expression or variable name. If Expression is of type Object, the Len function returns the size as it will be written to the file.
		</param>
		</member>
		<member name="M:Microsoft.VisualBasic.Strings.Len(System.Single)">
			<summary>Returns an Integer containing either the number of characters in a string or the number of bytes required to store a variable.
		</summary>
			<param name="Expression">valid String expression or variable name. If Expression is of type Object, the Len function returns the size as it will be written to the file.
		</param>
		</member>
		<member name="M:Microsoft.VisualBasic.Strings.Len(System.String)">
			<summary>Returns an Integer containing either the number of characters in a string or the number of bytes required to store a variable.
		</summary>
			<param name="Expression">valid String expression or variable name. If Expression is of type Object, the Len function returns the size as it will be written to the file.
		</param>
		</member>
		<member name="M:Microsoft.VisualBasic.Strings.LSet(System.String,System.Int32)">
			<summary>Returns a left-aligned string containing the specified string adjusted to the specified length. 
		</summary>
		</member>
		<member name="M:Microsoft.VisualBasic.Strings.LTrim(System.String)">
			<summary>Returns a string containing a copy of a specified string with no leading spaces (LTrim), no trailing spaces (RTrim), or no leading or trailing spaces (Trim).
		</summary>
			<param name="Str">Any valid String expression.
		</param>
		</member>
		<member name="M:Microsoft.VisualBasic.Strings.Mid(System.String,System.Int32)">
			<summary>Replaces a specified number of characters in a String variable with characters from another string.
		</summary>
			<param name="str">Name of the String variable to modify.
		</param>
			<param name="Start">Integer data type. Character position in target where the replacement of text begins. Start uses a one based index.
		</param>
		</member>
		<member name="M:Microsoft.VisualBasic.Strings.Mid(System.String,System.Int32,System.Int32)">
			<summary>Replaces a specified number of characters in a String variable with characters from another string.
		</summary>
			<param name="str">Name of the String variable to modify.
		</param>
			<param name="Start">Integer data type. Character position in target where the replacement of text begins. Start uses a one based index.
		</param>
			<param name="Length">Integer data type. Number of characters to replace. If omitted, all of string is used.
		</param>
		</member>
		<member name="M:Microsoft.VisualBasic.Strings.Replace(System.String,System.String,System.String,System.Int32,System.Int32,Microsoft.VisualBasic.CompareMethod)">
			<summary>Returns a string in which a specified substring has been replaced with another substring a specified number of times.
		</summary>
			<param name="Expression">String expression containing substring to replace.
		</param>
			<param name="Find">Substring being searched for.
		</param>
			<param name="Replacement">Replacement substring.
		</param>
			<param name="Start">Position within Expression where substring search is to begin. If omitted, 1 is assumed.
		</param>
			<param name="Count">Number of substring substitutions to perform. If omitted, the default value is â1, which means make all possible substitutions.
		</param>
			<param name="Compare">Numeric value indicating the kind of comparison to use when evaluating substrings. See Settings for values.
		</param>
		</member>
		<member name="M:Microsoft.VisualBasic.Strings.Right(System.String,System.Int32)">
			<summary>Returns a String containing a specified number of characters from the right side of a string.
		</summary>
			<param name="Str">String expression from which the rightmost characters are returned.
		</param>
			<param name="Length">Integer. Numeric expression indicating how many characters to return. If 0, a zero-length string ("") is returned. If greater than or equal to the number of characters in Str, the entire string is returned.
		</param>
		</member>
		<member name="M:Microsoft.VisualBasic.Strings.RSet(System.String,System.Int32)">
			<summary>This example demonstrates the use of the RSet function.
		</summary>
		</member>
		<member name="M:Microsoft.VisualBasic.Strings.RTrim(System.String)">
			<summary>Returns a string containing a copy of a specified string with no leading spaces (LTrim), no trailing spaces (RTrim), or no leading or trailing spaces (Trim).
		</summary>
			<param name="Str">Any valid String expression.
		</param>
		</member>
		<member name="M:Microsoft.VisualBasic.Strings.Space(System.Int32)">
			<summary>Returns a string consisting of the specified number of spaces.
		</summary>
			<param name="Number">Integer data type. The number of spaces you want in the string.
		</param>
		</member>
		<member name="M:Microsoft.VisualBasic.Strings.Split(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)">
			<summary>Returns a zero-based, one-dimensional array containing a specified number of substrings.
		</summary>
			<param name="Expression">String expression containing substrings and delimiters. If Expression is a zero-length string (""), the Split function returns an array with no elements and no data.
		</param>
			<param name="Delimiter">Single character used to identify substring limits. If Delimiter is omitted, the space character (" ") is assumed to be the delimiter. If Delimiter is a zero-length string, a single-element array containing the entire Expression string is returned.
		</param>
			<param name="Limit">Number of substrings to be returned; the default, â1, indicates that all substrings are returned.
		</param>
			<param name="Compare">Numeric value indicating the comparison to use when evaluating substrings. See Settings for values.
		</param>
		</member>
		<member name="M:Microsoft.VisualBasic.Strings.StrComp(System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
			<summary>Returns -1, 0, or 1, based on the result of a string comparison. The strings are compared by alphanumeric sort values begining with the first character.
		</summary>
			<param name="String1">Any valid String expression.
		</param>
			<param name="String2">Any valid String expression.
		</param>
			<param name="Compare">Specifies the type of string comparison. If compare is omitted, the Option Compare setting determines the type of comparison.
		</param>
		</member>
		<member name="M:Microsoft.VisualBasic.Strings.StrConv(System.String,Microsoft.VisualBasic.VbStrConv,System.Int32)">
			<summary>Returns a String converted as specified.
		</summary>
			<param name="Str">String expression to be converted.
		</param>
			<param name="Conversion">Microsoft.VisualBasic.VbStrConv. The enumeration value specifying the type of conversion to perform.
		</param>
			<param name="LocaleID">The LocaleID value, if different from the system LocaleID value. (The system LocaleID value is the default.)
		</param>
		</member>
		<member name="M:Microsoft.VisualBasic.Strings.StrDup(System.Int32,System.Char)">
			<summary>Returns a String or Object consisting of the specified character repeated the specified number of times.
		</summary>
			<param name="Number">Integer. The length to the string to be returned.
		</param>
			<param name="Character">Any valid Char, String, or Object expression. Only the first character of the expression will be used.
		</param>
		</member>
		<member name="M:Microsoft.VisualBasic.Strings.StrDup(System.Int32,System.Object)">
			<summary>Returns a String or Object consisting of the specified character repeated the specified number of times.
		</summary>
			<param name="Number">Integer. The length to the string to be returned.
		</param>
			<param name="Character">Any valid Char, String, or Object expression. Only the first character of the expression will be used.
		</param>
		</member>
		<member name="M:Microsoft.VisualBasic.Strings.StrDup(System.Int32,System.String)">
			<summary>Returns a String or Object consisting of the specified character repeated the specified number of times.
		</summary>
			<param name="Number">Integer. The length to the string to be returned.
		</param>
			<param name="Character">Any valid Char, String, or Object expression. Only the first character of the expression will be used.
		</param>
		</member>
		<member name="M:Microsoft.VisualBasic.Strings.StrReverse(System.String)">
			<summary>Returns a string in which the character order of a specified string is reversed.
		</summary>
			<param name="Expression">String expression whose characters are to be reversed. If Expression is a zero-length string (""), a zero-length string is returned.
		</param>
		</member>
		<member name="M:Microsoft.VisualBasic.Strings.Trim(System.String)">
			<summary>Returns a string containing a copy of a specified string with no leading spaces (LTrim), no trailing spaces (RTrim), or no leading or trailing spaces (Trim).
		</summary>
			<param name="Str">Any valid String expression.
		</param>
		</member>
		<member name="M:Microsoft.VisualBasic.Strings.UCase(System.Char)">
			<summary>Returns a String or Char containing the specified string converted to uppercase.
		</summary>
			<param name="Value">Any valid String or Char expression.
		</param>
		</member>
		<member name="M:Microsoft.VisualBasic.Strings.UCase(System.String)">
			<summary>Returns a String or Char containing the specified string converted to uppercase.
		</summary>
			<param name="Value">Any valid String or Char expression.
		</param>
		</member>
		<member name="T:Microsoft.VisualBasic.TriState">
			<summary>The TriState enumeration defines constants used to identify one of three possible states.
		</summary>
		</member>




<member name="F:Microsoft.VisualBasic.Tristate.True">
<summary>â1 True</summary>
		</member>
<member name="F:Microsoft.VisualBasic.Tristate.False">
<summary>0 False</summary>
		</member>
<member name="F:Microsoft.VisualBasic.Tristate.UseDefault">
<summary>â2 Default setting</summary>
		</member>



		<member name="T:Microsoft.VisualBasic.VariantType">
			<summary>The VariantType enumeration defines constants used to possible variant types.
		</summary>
		</member>


<member name="F:Microsoft.VisualBasic.VariantType.Array">
<summary>Array.</summary>
		</member>
<member name="F:Microsoft.VisualBasic.VariantType.Boolean">
<summary>Boolean. (True or False.)</summary>
		</member>
<member name="F:Microsoft.VisualBasic.VariantType.Byte">
<summary>Byte. (0 through 255.)</summary>
		</member>
<member name="F:Microsoft.VisualBasic.VariantType.Char">
<summary>Char. (0 through 65535.)</summary>
		</member>
<member name="F:Microsoft.VisualBasic.VariantType.Currency">
<summary>Currency.</summary>
		</member>
<member name="F:Microsoft.VisualBasic.VariantType.DataObject">
<summary>DataObject.</summary>
		</member>
<member name="F:Microsoft.VisualBasic.VariantType.Date">
<summary>Date. (0:00:00 on January 1, 0001 through 11:59:59 PM on December 31, 9999.)</summary>
		</member>
<member name="F:Microsoft.VisualBasic.VariantType.Decimal">
<summary>Decimal. (0 through +/-79,228,162,514,264,337,593,543,950,335 with no decimal point; 0 through +/-7.9228162514264337593543950335 with 28 places to the right of the decimal; smallest non-zero number is +/-0.0000000000000000000000000001.)</summary>
		</member>
<member name="F:Microsoft.VisualBasic.VariantType.Double">
<summary>Double. (-1.79769313486231E+308 through 
-4.94065645841247E-324 for negative values; 4.94065645841247E-324 through 1.79769313486231E+308 for positive values.)</summary>
		</member>
<member name="F:Microsoft.VisualBasic.VariantType.Empty">
<summary>Null reference.</summary>
		</member>
<member name="F:Microsoft.VisualBasic.VariantType.Error">
<summary></summary>
		</member>
<member name="F:Microsoft.VisualBasic.VariantType.Integer">
<summary>Integer. (-2,147,483,648 through 2,147,483,647.)</summary>
		</member>
<member name="F:Microsoft.VisualBasic.VariantType.Long">
<summary>Long. (-9,223,372,036,854,775,808 through 9,223,372,036,854,775,807.)</summary>
		</member>
<member name="F:Microsoft.VisualBasic.VariantType.Null">
<summary>Null object.</summary>
		</member>
<member name="F:Microsoft.VisualBasic.VariantType.Object">
<summary>Any type can be stored in a variable of type Object.</summary>
		</member>
<member name="F:Microsoft.VisualBasic.VariantType.Short">
<summary>Short. (-32,768 through 32,767.)</summary>
		</member>
<member name="F:Microsoft.VisualBasic.VariantType.Single">
<summary>Single. (-3.402823E+38 through -1.401298E-45 for negative values; 1.401298E-45 through 3.402823E+38 for positive values.)</summary>
		</member>
<member name="F:Microsoft.VisualBasic.VariantType.String">
<summary>String. (0 to approximately 2 billion Unicode characters.)</summary>
		</member>
<member name="F:Microsoft.VisualBasic.VariantType.UserDefinedType">
<summary>User-defined type. Each member of the structure has a range determined by its data type and independent of the ranges of the other members.</summary>
		</member>
<member name="F:Microsoft.VisualBasic.VariantType.Variant">
<summary>Variant.</summary>
		</member>


		<member name="T:Microsoft.VisualBasic.VBMath">
			<summary>The VbMath module contains procedures used to perform mathematical operations.
		</summary>
		</member>
		<member name="T:Microsoft.VisualBasic.VbStrConv">
			<summary>The VbStrConv enumeration contains constants used to identify the type of string conversion to be performed by the StrConv function. These constants can be used anywhere in your code.
		</summary>
		</member>


<member name="F:Microsoft.VisualBasic.VbStrConv.UpperCase">
<summary>Converts the string to uppercase characters.</summary>
		</member>
<member name="F:Microsoft.VisualBasic.VbStrConv.LowerCase">
<summary>Converts the string to lowercase characters.</summary>
		</member>
<member name="F:Microsoft.VisualBasic.VbStrConv.ProperCase">
<summary>Converts the first letter of every word in the string to uppercase.</summary>
		</member>
<member name="F:Microsoft.VisualBasic.VbStrConv.Wide">
<summary>Converts narrow (single-byte) characters in the string to wide (double-byte) characters.</summary>
		</member> Applies to Asian locales.
<member name="F:Microsoft.VisualBasic.VbStrConv.Narrow">
<summary>Converts wide (double-byte) characters in the string to narrow (single-byte) characters. Applies to Asian locales.</summary>
		</member>
<member name="F:Microsoft.VisualBasic.VbStrConv.Katakana">
<summary>Converts Hiragana characters in the string to Katakana characters. Applies to Japanese locale only.</summary>
		</member>
<member name="F:Microsoft.VisualBasic.VbStrConv.Hiragana">
<summary>Converts Katakana characters in the string to Hiragana characters. Applies to Japanese locale only.</summary>
		</member>
<member name="F:Microsoft.VisualBasic.VbStrConv.SimplifiedChinese">
<summary>Converts the string to Simplified Chinese characters.</summary>
		</member>
<member name="F:Microsoft.VisualBasic.VbStrConv.TraditionalChinese">
<summary>Converts the string to Traditional Chinese characters.</summary>
		</member>
<member name="F:Microsoft.VisualBasic.VbStrConv.LinguisticCasing">
<summary>Converts the string from file system rules for casing to linguistic rules.</summary>
		</member>

	<member name="T:Microsoft.VisualBasic.ComClassAttribute">
			<summary>The ComClassAttribute can be applied to a class to expose its functionality to COM.
		</summary>
		</member>
		<member name="M:Microsoft.VisualBasic.ComClassAttribute.#ctor">
			<summary>Exposes the class to COM and automatically generates GUIDs for the classid, default interface and the events interface.
		</summary>
		</member>
		<member name="M:Microsoft.VisualBasic.ComClassAttribute.#ctor(System.String)">
			<summary>Exposes the class to COM. It uses the specified ClassID and automatically generates IIDs for the default interface and the events interface.
		</summary>
			<param name="_ClassID">The UUID for the ClassID for this class</param>
		</member>
		<member name="M:Microsoft.VisualBasic.ComClassAttribute.#ctor(System.String,System.String)">
			<summary>Exposes the class to COM. It uses the specified ClassID and IID for the default interface and automatically generates an IID for the events interface.
		</summary>
			<param name="_ClassID">The GUID for the ClassID for this class</param>
			<param name="_InterfaceID">The IID for the default interface for this class</param>
		</member>
		<member name="M:Microsoft.VisualBasic.ComClassAttribute.#ctor(System.String,System.String,System.String)">
			<summary>Exposes the class to COM and uses the specified GUIDs for the ClassID, default interface and the events interface.
		</summary>
			<param name="_ClassID">The GUID for the ClassID for this class</param>
			<param name="_InterfaceID">The IID for the default interface for this class</param>
			<param name="_EventID">The IID for the events interface for this class</param>
		</member>
<member name="P:Microsoft.VisualBasic.ComClassAttribute.ClassID">
			<summary>Gets a class ID used to uniquely identify a class.</summary>
		</member>
<member name="P:Microsoft.VisualBasic.ComClassAttribute.EventID">
			<summary>Gets an event ID used to uniquely identify an event.</summary>
		</member>
<member name="P:Microsoft.VisualBasic.ComClassAttribute.InterfaceID">
			<summary>Gets an interface ID used to uniquely identify an interface.</summary>
		</member>
<member name="P:Microsoft.VisualBasic.ComClassAttribute.InterfaceShadows">
			<summary>Indicates that the COM interface name shadows another member of the class or base class.</summary>
		</member>

		<member name="M:Microsoft.VisualBasic.Conversion.ErrorToString">
			<summary>Returns the error message for the last error.
		</summary>
		</member>
		<member name="M:Microsoft.VisualBasic.Conversion.ErrorToString(System.Int32)">
			<summary>Returns the message for the specified error number.</summary>
			<param name="ErrorNumber">The Error number as an integer. </param>
		
		</member>

<member name="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Array@,System.Int64,System.Boolean,System.Boolean)">
			<summary>Reads data from an open disk file into a variable.</summary>
			<param name="FileNumber">Any valid file number.</param>
			<param name="Value">Array variable name into which data is read. </param>
			<param name="RecordNumber">Record number (Random mode files) or byte number (Binary mode files) at which reading begins.</param>
			<param name="ArrayIsDynamic">Specifies whether the array is to be treated as dynamic and so whether to read 
an array descriptor describing the size and bounds of the array.</param>
			<param name="StringIsFixedLength">Specifies whether any strings are to be treated as fixed length and so whether to read 
a descriptor describing the size of the string.</param>
		</member>

<member name="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Boolean@,System.Int64)">
			<summary>Reads data from an open disk file into a variable.</summary>
			<param name="FileNumber">Any valid file number.</param>
			<param name="Value">Boolean variable name into which data is read. </param>
			<param name="RecordNumber">Record number (Random mode files) or byte number (Binary mode files) at which reading begins.</param>
		</member>

<member name="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Byte@,System.Int64)">
			<summary>Reads data from an open disk file into a variable.</summary>
			<param name="FileNumber">Any valid file number.</param>
			<param name="Value">Byte variable name into which data is read. </param>
			<param name="RecordNumber">Record number (Random mode files) or byte number (Binary mode files) at which reading begins.</param>
		</member>

<member name="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Char@,System.Int64)">
			<summary>Reads data from an open disk file into a variable.</summary>
			<param name="FileNumber">Any valid file number.</param>
			<param name="Value">Character variable name into which data is read. </param>
			<param name="RecordNumber">Record number (Random mode files) or byte number (Binary mode files) at which reading begins.</param>
		</member>

<member name="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.DateTime@,System.Int64)">
			<summary>Reads data from an open disk file into a variable.</summary>
			<param name="FileNumber">Any valid file number.</param>
			<param name="Value">Date variable name into which data is read. </param>
			<param name="RecordNumber">Record number (Random mode files) or byte number (Binary mode files) at which reading begins.</param>
		</member>

<member name="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Decimal@,System.Int64)">
			<summary>Reads data from an open disk file into a variable.</summary>
			<param name="FileNumber">Any valid file number.</param>
			<param name="Value">Decimal variable name into which data is read. </param>
			<param name="RecordNumber">Record number (Random mode files) or byte number (Binary mode files) at which reading begins.</param>
		</member>

<member name="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Double@,System.Int64)">
			<summary>Reads data from an open disk file into a variable.</summary>
			<param name="FileNumber">Any valid file number.</param>
			<param name="Value">Double variable name into which data is read. </param>
			<param name="RecordNumber">Record number (Random mode files) or byte number (Binary mode files) at which reading begins.</param>
		</member>

<member name="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Int16@,System.Int64)">
			<summary>Reads data from an open disk file into a variable.</summary>
			<param name="FileNumber">Any valid file number.</param>
			<param name="Value">Short variable name into which data is read. </param>
			<param name="RecordNumber">Record number (Random mode files) or byte number (Binary mode files) at which reading begins.</param>
		</member>

<member name="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Int32@,System.Int64)">
			<summary>Reads data from an open disk file into a variable.</summary>
			<param name="FileNumber">Any valid file number.</param>
			<param name="Value">Integer variable name into which data is read. </param>
			<param name="RecordNumber">Record number (Random mode files) or byte number (Binary mode files) at which reading begins.</param>
		</member>

<member name="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Int64@,System.Int64)">
			<summary>Reads data from an open disk file into a variable.</summary>
			<param name="FileNumber">Any valid file number.</param>
			<param name="Value">Long variable name into which data is read. </param>
			<param name="RecordNumber">Record number (Random mode files) or byte number (Binary mode files) at which reading begins.</param>
		</member>

<member name="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Single@,System.Int64)">
			<summary>Reads data from an open disk file into a variable.</summary>
			<param name="FileNumber">Any valid file number.</param>
			<param name="Value">Single variable name into which data is read. </param>
			<param name="RecordNumber">Record number (Random mode files) or byte number (Binary mode files) at which reading begins.</param>
		</member>

<member name="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.String@,System.Int64,System.Boolean)">
			<summary>Reads data from an open disk file into a variable.</summary>
			<param name="FileNumber">Any valid file number.</param>
			<param name="Value">String variable name into which data is read. </param>
			<param name="RecordNumber">Record number (Random mode files) or byte number (Binary mode files) at which reading begins.</param>
			<param name="StringIsFixedLength">Specifies whether string is to be treated as fixed length and so whether to read 
a descriptor describing the size of the string.</param>
		</member>

<member name="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.ValueType@,System.Int64)">
			<summary>Reads data from an open disk file into a variable.</summary>
			<param name="FileNumber">Any valid file number.</param>
			<param name="Value">Structure variable name into which data is read.</param>
			<param name="RecordNumber">Record number (Random mode files) or byte number (Binary mode files) at which reading begins.</param>
		</member>

<member name="M:Microsoft.VisualBasic.FileSystem.FileGetObject(System.Int32,System.Object@,System.Int64)">
			<summary>Reads data from an open disk file into an object variable as if it were a variant</summary>
			<param name="FileNumber">Any valid file number.</param>
			<param name="Value">Object variable name into which data is read.</param>
			<param name="RecordNumber">Record number (Random mode files) or byte number (Binary mode files) at which reading begins.</param>
		</member>

<member name="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)">
			<summary>Opens a file for input or output.</summary>
			<param name="FileNumber">Any valid file number. Use the FreeFile function to obtain the next 
available file number.</param>
			<param name="FileName">Expression that specifies a file name â may include directory or folder, and 
drive.</param>
			<param name="Mode">Enum specifying the file mode.</param>
			<param name="Access">Enum specifying the operations permitted on the open file.</param>
			<param name="Share">Enum specifying the operations restricted on the open file by other processes</param>
			<param name="RecordLength">For files opened for random access, this value is the record length. For 
sequential files, this value is the number of characters buffered.</param>
		</member>

<member name="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Array,System.Int64,System.Boolean,System.Boolean)">
			<summary>Writes data from a variable to a disk file.</summary>
			<param name="FileNumber">Any valid file number. </param>
			<param name="Value">Variable name containing data to be written to disk. </param>
			<param name="RecordNumber">Record number (Random mode files) or byte number (Binary mode files) at which writing begins. </param>
			<param name="ArrayIsDynamic">Specifies whether the array is to be treated as dynamic, and whether to write an 
array descriptor for the string describing the length.</param>
			<param name="StringIsFixedLength">Specifies whether a string is to be treated as fixedlength, and whether to write a 
descriptor for the string describing the length</param>
		</member>

<member name="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Boolean,System.Int64)">
			<summary>Writes data from a variable to a disk file.</summary>
			<param name="FileNumber">Any valid file number. </param>
			<param name="Value">Variable name containing data to be written to disk. </param>
			<param name="RecordNumber">Record number (Random mode files) or byte number (Binary mode files) at which writing begins. </param>
		</member>

<member name="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Byte,System.Int64)">
			<summary>Writes data from a variable to a disk file.</summary>
			<param name="FileNumber">Any valid file number. </param>
			<param name="Value">Variable name containing data to be written to disk. </param>
			<param name="RecordNumber">Record number (Random mode files) or byte number (Binary mode files) at which writing begins. </param>
		</member>

<member name="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Char,System.Int64)">
			<summary>Writes data from a variable to a disk file.</summary>
			<param name="FileNumber">Any valid file number. </param>
			<param name="Value">Variable name containing data to be written to disk. </param>
			<param name="RecordNumber">Record number (Random mode files) or byte number (Binary mode files) at which writing begins. </param>
		</member>

<member name="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.DateTime,System.Int64)">
			<summary>Writes data from a variable to a disk file.</summary>
			<param name="FileNumber">Any valid file number. </param>
			<param name="Value">Variable name containing data to be written to disk. </param>
			<param name="RecordNumber">Record number (Random mode files) or byte number (Binary mode files) at which writing begins. </param>
		</member>

<member name="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Decimal,System.Int64)">
			<summary>Writes data from a variable to a disk file.</summary>
			<param name="FileNumber">Any valid file number. </param>
			<param name="Value">Variable name containing data to be written to disk. </param>
			<param name="RecordNumber">Record number (Random mode files) or byte number (Binary mode files) at which writing begins. </param>
		</member>

<member name="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Double,System.Int64)">
			<summary>Writes data from a variable to a disk file.</summary>
			<param name="FileNumber">Any valid file number. </param>
			<param name="Value">Variable name containing data to be written to disk. </param>
			<param name="RecordNumber">Record number (Random mode files) or byte number (Binary mode files) at which writing begins. </param>
		</member>

<member name="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Int16,System.Int64)">
			<summary>Writes data from a variable to a disk file.</summary>
			<param name="FileNumber">Any valid file number. </param>
			<param name="Value">Value as System.Int16</param>
			<param name="RecordNumber">Record number (Random mode files) or byte number (Binary mode files) at which writing begins. </param>
		</member>

<member name="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Int32,System.Int64)">
			<summary>Writes data from a variable to a disk file.</summary>
			<param name="FileNumber">Any valid file number. </param>
			<param name="Value">Value as System.Int32</param>
			<param name="RecordNumber">Record number (Random mode files) or byte number (Binary mode files) at which writing begins. </param>
		</member>

<member name="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Int64,System.Int64)">
			<summary>Writes data from a variable to a disk file.</summary>
			<param name="FileNumber">Any valid file number. </param>
			<param name="Value">Value as System.Int64</param>
			<param name="RecordNumber">Record number (Random mode files) or byte number (Binary mode files) at which writing begins. </param>
		</member>

<member name="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Single,System.Int64)">
			<summary>Writes data from a variable to a disk file.</summary>
			<param name="FileNumber">Any valid file number. </param>
			<param name="Value">Variable name containing data to be written to disk. </param>
			<param name="RecordNumber">Record number (Random mode files) or byte number (Binary mode files) at which writing begins. </param>
		</member>

<member name="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.String,System.Int64,System.Boolean)">
			<summary>Writes data from a variable to a disk file.</summary>
			<param name="FileNumber">Any valid file number. </param>
			<param name="Value">Variable name containing data to be written to disk. </param>
			<param name="RecordNumber">Record number (Random mode files) or byte number (Binary mode files) at which writing begins. </param>
			<param name="StringIsFixedLength">Specifies whether a string is to be treated as fixedlength, and whether to write a 
descriptor for the string describing the length</param>
		</member>

<member name="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.ValueType,System.Int64)">
			<summary>Writes data from a variable to a disk file.</summary>
			<param name="FileNumber">Any valid file number. </param>
			<param name="Value">Variable name containing data to be written to disk. </param>
			<param name="RecordNumber">Record number (Random mode files) or byte number (Binary mode files) at which writing begins. </param>
		</member>

<member name="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Object,System.Object,System.Object)">
			<summary>Writes data from a variable to a disk file.</summary>
			<param name="FileNumber">FileNumber as System.Object</param>
			<param name="Value">Variable name containing data to be written to disk. </param>
			<param name="RecordNumber">RecordNumber as System.Object</param>
		</member>

<member name="M:Microsoft.VisualBasic.FileSystem.FilePutObject(System.Int32,System.Object,System.Int64)">
			<summary>Writes data from a variable to a disk file to be compatible with the VB6 variant</summary>
			<param name="FileNumber">Any valid file number. </param>
			<param name="Value">Variable name containing data to be written to disk. </param>
			<param name="RecordNumber">Record number (Random mode files) or byte number (Binary mode files) at which writing begins. </param>
		</member>

<member name="M:Microsoft.VisualBasic.FileSystem.FileWidth(System.Int32,System.Int32)">
			<summary>Assigns an output line width to a file opened using the FileOpen 
function.</summary>
			<param name="FileNumber">Any valid file number.</param>
			<param name="RecordWidth">Numeric expression which indicates how many 
characters appear on a line before a new line is started.</param>
		</member>

<member name="M:Microsoft.VisualBasic.Strings.GetChar(System.String,System.Int32)">
			<summary>Returns the character at a specified position in a string</summary>
			<param name="str">String to use as a source</param>
			<param name="Index">1 based index of the character to return</param>
		</member>

<member name="M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])">
			<summary>Writes display-formatted data to a sequential file, including a linefeed at the end.</summary>
			<param name="FileNumber">Any valid file number.</param>
			<param name="Output">Zero or more comma-delimited expressions to write to a file.</param>
		</member>

<member name="M:Microsoft.VisualBasic.VBMath.Randomize">
			<summary>Seeds the VB random number generator using the time as the seed</summary>
		</member>

<member name="M:Microsoft.VisualBasic.VBMath.Randomize(System.Double)">
			<summary>Seeds the VB random number generator</summary>
			<param name="Number">Number specifying the seed value</param>
		</member>

<member name="M:Microsoft.VisualBasic.VBMath.Rnd">
			<summary>Returns a Single containing a random number.</summary>
		</member>

<member name="M:Microsoft.VisualBasic.VBMath.Rnd(System.Single)">
			<summary>Returns a Single containing a random number.</summary>
			<param name="Number">Determines which item from sequence to return.</param>
		</member>

<member name="M:Microsoft.VisualBasic.Information.TypeName(System.Object)">
			<summary>Returns a String that provides data type information about a variable.</summary>
			<param name="VarName">Argument is an Object variable of any data type except a structure.</param>
		</member>

<member name="M:Microsoft.VisualBasic.Information.VarType(System.Object)">
			<summary>Returns a value indicating the subtype of a variable.</summary>
			<param name="VarName">Variable for which the type is to be returned.</param>
		</member>

<member name="M:Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])">
			<summary>Writes data to a sequential file.</summary>
			<param name="FileNumber">Any valid file number.</param>
			<param name="Output">One or more comma-delimited expressions to write to a file.</param>
		</member>

<member name="T:Microsoft.VisualBasic.VBFixedArrayAttribute">
			<summary>Used to declare fixed-sized arrays.</summary>
		</member>
<member name="M:Microsoft.VisualBasic.VBFixedArrayAttribute.#ctor(System.Int32)">
			<summary>Initializes the bounds of a fixed-sized array.
		</summary>
			<param name="UpperBound1">Initializes the value of upper field, which represents the size of the first dimension of the array.</param></member>
<member name="M:Microsoft.VisualBasic.VBFixedArrayAttribute.#ctor(System.Int32,System.Int32)">
			<summary>Initializes the bounds of a fixed-sized array.
		</summary>
			<param name="UpperBound1">Initializes the value of upper field, which represents the size of the first dimension of the array.</param>
			<param name="UpperBound2">Initializes the value of the upper field, which represents the size of the second dimension of the array.</param>
		</member>		
		<member name="P:Microsoft.VisualBasic.VBFixedArrayAttribute.Bounds">
			<summary>Returns the bounds of the array.
		</summary>
		</member>
		<member name="P:Microsoft.VisualBasic.VBFixedArrayAttribute.Length">
			<summary>Returns the length of the bounds of the array.
		</summary>
		</member>
		<member name="T:Microsoft.VisualBasic.VBFixedStringAttribute">
			<summary>Used to declare fixed-sized strings.</summary>
		</member>		
		<member name="M:Microsoft.VisualBasic.VBFixedStringAttribute.#ctor(System.Int32)">
			<summary>Initializes the value of the field.
		</summary>
		</member>
		<member name="P:Microsoft.VisualBasic.VBFixedStringAttribute.Length">
			<summary>Returns the length of the string.
		</summary>
		</member>

</members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\tracewpp\wppconfig\rev1\TCHARUNIwpp.ini ===
#
# Default types for WPP for users who are using TCHAR's and have Unicode defined.
# 2004 Revision        0.0
#

# our basic arithmetic types

DEFINE_SIMPLE_TYPE( XINT64, signed __int64,  ItemLongLongX, "I64x", x, 8);
DEFINE_SIMPLE_TYPE( XXINT64, signed __int64,  ItemLongLongXX, "I64X", X, 8);
DEFINE_SIMPLE_TYPE( OINT64, signed __int64,  ItemLongLongO, "I64o", o, 8);

DEFINE_SIMPLE_TYPE( SBYTE,  signed char,     ItemChar,     "c",   c, 1);
DEFINE_SIMPLE_TYPE( SSHORT, signed short,    ItemShort,    "hd",  h, 2);
DEFINE_SIMPLE_TYPE( SINT,   signed int,      ItemLong,     "d",   d, 4);
DEFINE_SIMPLE_TYPE( SLONG,  signed long,     ItemLong,     "ld",  l, 4);
DEFINE_SIMPLE_TYPE( SINT64, signed __int64,  ItemLongLong, "I64d", i, 8);

DEFINE_SIMPLE_TYPE( UBYTE,  unsigned char,     ItemChar,     "c",   C, 1);
DEFINE_SIMPLE_TYPE( USHORT, unsigned short,    ItemShort,    "hu",  H, 2);
DEFINE_SIMPLE_TYPE( UINT,   unsigned int,      ItemLong,     "u",   D, 4);
DEFINE_SIMPLE_TYPE( ULONG,  unsigned long,     ItemLong,     "lu",  L, 4);
DEFINE_SIMPLE_TYPE( UINT64, unsigned __int64,  ItemULongLong, "I64u", I, 8);



DEFINE_SIMPLE_TYPE( DOUBLE, double,  ItemDouble, "s", g, 8);

# arch dependent types

DEFINE_SIMPLE_TYPE( SLONGPTR, LONG_PTR,     ItemPtr,  "Id", p, 6);
DEFINE_SIMPLE_TYPE( ULONGPTR, ULONG_PTR,    ItemPtr,  "Iu", P, 6);
DEFINE_SIMPLE_TYPE( PTR,      const void*,  ItemPtr,  "p", q, 6);
DEFINE_SIMPLE_TYPE( HANDLE,   const void*,  ItemPtr,  "p", Q, 6);

# predefined constants

DEFINE_SIMPLE_TYPE( COMPNAME,,, "__COMPNAME__",,);
DEFINE_SIMPLE_TYPE( FILE,,, "__FILE__",,);
DEFINE_SIMPLE_TYPE( LINE,,, "__LINE__",,);
DEFINE_SIMPLE_TYPE( FUNC,,, "%!FUNC!",,); // traceprt now understands %!FUNC!
DEFINE_SIMPLE_TYPE( LEVEL,,, "%!LEVEL!",,); // and %!LEVEL%

DEFINE_SIMPLE_TYPE( STDPREFIX,,, "%0",,);
DEFINE_SIMPLE_TYPE( MOD,,, "%1!s!",,);
DEFINE_SIMPLE_TYPE( TYP,,, "%2!s!",,);
DEFINE_SIMPLE_TYPE( TID,,, "%3!x!",,);
DEFINE_SIMPLE_TYPE( NOW,,, "%4!s!",,);
DEFINE_SIMPLE_TYPE( SEQ,,, "%7!x!",,);
DEFINE_SIMPLE_TYPE( PID,,, "%8!x!",,);
DEFINE_SIMPLE_TYPE( CPU,,, "%9!x!",,);
DEFINE_SIMPLE_TYPE( SPACE,,, " ",,);

DEFINE_SIMPLE_TYPE_PTR(GUID, LPCGUID, ItemGuid, "s", _guid_, 0); // simple type, passed by addr

DEFINE_FLAVOR( UCHAR,   SBYTE, ItemUChar, "c" );
DEFINE_FLAVOR( SCHAR,   SBYTE, ItemChar,  "c" );
DEFINE_FLAVOR( BOOLEAN, SBYTE, ItemListByte(FALSE,TRUE), "s");


# all strings require custom processing
# Note that in the TCHAR Unicode verions ASTR is wide and WSTR is mapped to single

DEFINE_CPLX_TYPE(ASTR,  WPP_LOGWSTR,  LPCWSTR,        ItemWString,  "s", s, 0);
DEFINE_CPLX_TYPE(ARSTR, WPP_LOGASTR,  LPCSTR,          ItemRString, "s", t, 0);
DEFINE_CPLX_TYPE(ARWSTR, WPP_LOGWSTR, LPCWSTR,        ItemRWString, "s", S, 0);
DEFINE_CPLX_TYPE(WSTR,  WPP_LOGASTR,  const char *,         ItemString, "s", S, 0);
DEFINE_CPLX_TYPE(CSTR,  WPP_LOGPCSTR, PCSTRING,        ItemPString, "s", z, 0, 2);
DEFINE_CPLX_TYPE(USTR,  WPP_LOGPUSTR, PCUNICODE_STRING,ItemPWString,"s", Z, 0, 2);

DEFINE_CPLX_TYPE(sid,   WPP_LOGPSID, PSID, ItemSid,"s", _sid_, 0);
DEFINE_CPLX_TYPE(str,   WPP_LOGSTDSTR, const std::string&, ItemString,"s", _str_, 0);


#kludge for printf like statements

DEFINE_FLAVOR(e,  DOUBLE,,);
DEFINE_FLAVOR(E,  DOUBLE,,);
DEFINE_FLAVOR(f,  DOUBLE,,);
DEFINE_FLAVOR(g,  DOUBLE,,);
DEFINE_FLAVOR(G,  DOUBLE,,);

DEFINE_FLAVOR(c,  SBYTE,,);
DEFINE_FLAVOR(hc, SBYTE,,);
DEFINE_FLAVOR(lc, SSHORT,,);
DEFINE_FLAVOR(wc, SSHORT,,);
DEFINE_FLAVOR(C,  SSHORT,,);

DEFINE_FLAVOR(s,  ASTR,,);
DEFINE_FLAVOR(hs, ASTR,,);
DEFINE_FLAVOR(S,  WSTR,,);
DEFINE_FLAVOR(ws, WSTR,,);
DEFINE_FLAVOR(ls, ASTR,,);

DEFINE_FLAVOR(hi, SSHORT,,);
DEFINE_FLAVOR(hd, SSHORT,,);
DEFINE_FLAVOR(hu, USHORT,,"u");
DEFINE_FLAVOR(hx, USHORT,,"x");
DEFINE_FLAVOR(hX, USHORT,,"X");
DEFINE_FLAVOR(ho, USHORT,,"o");

DEFINE_FLAVOR(Id, ULONGPTR,,"Id");
DEFINE_FLAVOR(Iu, ULONGPTR,,"Iu");
DEFINE_FLAVOR(Ix, ULONGPTR,,"Ix");
DEFINE_FLAVOR(IX, ULONGPTR,,"IX");
DEFINE_FLAVOR(Io, ULONGPTR,,"Io");

DEFINE_FLAVOR(i, SINT,,);
DEFINE_FLAVOR(d, SINT,,);
DEFINE_FLAVOR(u, UINT,,"u");
DEFINE_FLAVOR(x, UINT,,"x");
DEFINE_FLAVOR(X, UINT,,"X");
DEFINE_FLAVOR(o, UINT,,"o");
DEFINE_FLAVOR(cccc, SINT, ItemChar4, "s");

DEFINE_FLAVOR(li, SLONG,,);
DEFINE_FLAVOR(ld, SLONG,,);
DEFINE_FLAVOR(lu, ULONG,,"u");
DEFINE_FLAVOR(lx, ULONG,,"x");
DEFINE_FLAVOR(lX, ULONG,,"X");
DEFINE_FLAVOR(lo, ULONG,,"o");

DEFINE_FLAVOR(I64d, SINT64,,);
DEFINE_FLAVOR(I64u, UINT64,,);
DEFINE_FLAVOR(I64x, XINT64,,"I64x");
DEFINE_FLAVOR(I64X, XXINT64,,"I64X");
DEFINE_FLAVOR(I64o, OINT64,,"I64o");

DEFINE_FLAVOR(p, PTR,,);

DEFINE_FLAVOR(Z,  USTR,,);
DEFINE_FLAVOR(wZ, USTR,,);
DEFINE_FLAVOR(z,  CSTR,,);
DEFINE_FLAVOR(hZ, CSTR,,);

# default formats for those who don't care to provide their own strings

DEFINE_FLAVOR(XBYTE, SBYTE,, "02x");
DEFINE_FLAVOR(OBYTE, SBYTE,, "o");

DEFINE_FLAVOR(XSHORT, SSHORT,, "04hX");
DEFINE_FLAVOR(OSHORT, SSHORT,, "ho");

DEFINE_FLAVOR(XINT, SINT,, "08x");
DEFINE_FLAVOR(OINT, SINT,, "o");

DEFINE_FLAVOR(XLONG, SLONG,, "08lX");
DEFINE_FLAVOR(OLONG, SLONG,, "lo");


DEFINE_FLAVOR(XLONGPTR, SLONGPTR,,"Ix");
DEFINE_FLAVOR(OLONGPTR, SLONGPTR,,"Ox");

# special formats

DEFINE_FLAVOR(IPADDR,    UINT,   ItemIPAddr,   "s");
DEFINE_FLAVOR(PORT,      USHORT, ItemPort,     "s");
DEFINE_FLAVOR(STATUS,    SINT,   ItemNTSTATUS, "s");
DEFINE_FLAVOR(WINERROR,  UINT,   ItemWINERROR, "s");
DEFINE_FLAVOR(HRESULT,   SINT,   ItemHRESULT, "s");

DEFINE_FLAVOR(ipaddr,IPADDR,,);
DEFINE_FLAVOR(port,PORT,,);
DEFINE_FLAVOR(status,STATUS,,);
DEFINE_FLAVOR(hresult,HRESULT,,);
DEFINE_FLAVOR(winerr,WINERROR,,);
DEFINE_FLAVOR(guid,GUID,,);

# time related stuff

DEFINE_FLAVOR(TIMESTAMP, SINT64, ItemTimestamp, "s");
DEFINE_FLAVOR(TIME,      SINT64, ItemTimestamp, "s");
DEFINE_FLAVOR(DATE,      SINT64, ItemTimestamp, "s");
DEFINE_FLAVOR(WAITTIME,  SINT64, ItemTimestamp, "s");

DEFINE_FLAVOR(due,      SINT64, ItemWaitTime, "s");
DEFINE_FLAVOR(delta,    SINT64, ItemTimeDelta, "s");
DEFINE_FLAVOR(datetime, SINT64, ItemTimestamp, "s");

# enumeration types

DEFINE_FLAVOR(ItemListByte,  SBYTE, ItemListByte, "s");
DEFINE_FLAVOR(ItemListShort, SSHORT, ItemListShort,"s");
DEFINE_FLAVOR(ItemListLong,  SLONG, ItemListLong, "s");

DEFINE_FLAVOR(ItemSetByte,  UBYTE, ItemSetByte, "s");
DEFINE_FLAVOR(ItemSetShort, USHORT, ItemSetShort,"s");
DEFINE_FLAVOR(ItemSetLong,  ULONG, ItemSetLong, "s");
DEFINE_FLAVOR(ItemEnum, ULONG, ItemEnum, "s");

DEFINE_FLAVOR(CLSID, GUID, ItemCLSID,  "s");
DEFINE_FLAVOR(LIBID, GUID, ItemLIBID,  "s");
DEFINE_FLAVOR(IID,   GUID, ItemIID,    "s");

CUSTOM_TYPE(b1,  ItemSetByte(1,2,3,4,5,6,7,8) );
CUSTOM_TYPE(b2,  ItemSetShort(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16) );
CUSTOM_TYPE(b4,  ItemSetLong(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32) );


CUSTOM_TYPE(bool,    ItemListLong(false,true) );
CUSTOM_TYPE(bool16,  ItemListShort(false,true) );
CUSTOM_TYPE(bool8,   ItemListByte(false,true) );

CUSTOM_TYPE(irql,    ItemListByte(Low,APC,DPC) );

CUSTOM_TYPE(pnpmn,   ItemListByte(IRP_MN_START_DEVICE,IRP_MN_QUERY_REMOVE_DEVICE,IRP_MN_REMOVE_DEVICE,IRP_MN_CANCEL_REMOVE_DEVICE,IRP_MN_STOP_DEVICE,IRP_MN_QUERY_STOP_DEVICE,IRP_MN_CANCEL_STOP_DEVICE,IRP_MN_QUERY_DEVICE_RELATIONS,IRP_MN_QUERY_INTERFACE,IRP_MN_QUERY_CAPABILITIES,IRP_MN_QUERY_RESOURCES,IRP_MN_QUERY_RESOURCE_REQUIREMENTS,IRP_MN_QUERY_DEVICE_TEXT,IRP_MN_FILTER_RESOURCE_REQUIREMENTS,IRP_MN_PNP_14,IRP_MN_READ_CONFIG,IRP_MN_WRITE_CONFIG,IRP_MN_EJECT,IRP_MN_SET_LOCK,IRP_MN_QUERY_ID,IRP_MN_QUERY_PNP_DEVICE_STATE,IRP_MN_QUERY_BUS_INFORMATION,IRP_MN_DEVICE_USAGE_NOTIFICATION,IRP_MN_SURPRISE_REMOVAL) );
CUSTOM_TYPE(sysctrl, ItemListByte(IRP_MN_QUERY_ALL_DATA,IRP_MN_QUERY_SINGLE_INSTANCE, IRP_MN_CHANGE_SINGLE_INSTANCE, IRP_MN_CHANGE_SINGLE_ITEM, IRP_MN_ENABLE_EVENTS, IRP_MN_DISABLE_EVENTS, IRP_MN_ENABLE_COLLECTION, IRP_MN_DISABLE_COLLECTION, IRP_MN_REGINFO, IRP_MN_EXECUTE_METHOD, IRP_MN_Reserved_0a, IRP_MN_REGINFO_EX) );

# default tracing macro

FUNC DoTraceMessage(LEVEL,MSG,...);
FUNC DoDebugTrace(TRACELEVEL,MSG,...);


# default prefix (use traceprt default)

USEPREFIX(*,"%!STDPREFIX!"); // traceprt will add standard prefix

WPP_FLAGS(-lookfor:WPP_INIT_TRACING); // the same flags that can be passed on the command line to tracewpp
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\VisualStudio\VS10RTM\MsTest\Microsoft.VisualStudio.QualityTools.LoadTestFramework.xml ===
ï»¿<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>Microsoft.VisualStudio.QualityTools.LoadTestFramework</name>
  </assembly>
  <members>
    <member name="T:Microsoft.VisualStudio.TestTools.LoadTesting.HeartbeatEventArgs">
      <summary>Provides data for the <see cref="E:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTest.HeartBeat" /> event. </summary>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.LoadTesting.HeartbeatEventArgs.ElapsedSeconds">
      <summary>Gets the number of seconds since the beginning of the run, including the warm-up period. </summary>
      <returns>The number of seconds since the beginning of the run.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.LoadTesting.HeartbeatEventArgs.IsWarmupComplete">
      <summary>Gets a value that indicates whether the warm-up period is complete.</summary>
      <returns>true if the warm-up interval is complete; otherwise, false.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.LoadTesting.ICounterProvider">
      <summary>Defines an interface that an implementation of the <see cref="T:Microsoft.VisualStudio.TestTools.LoadTesting.IThresholdRule" /> interface can use to obtain the current values of performance counters, other than the performance counter being tested. </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.LoadTesting.ICounterProvider.GetCounterValue(System.String,System.String,System.String,System.String)">
      <summary>Gets the current value of a performance counter.</summary>
      <returns>A <see cref="T:Microsoft.VisualStudio.TestTools.LoadTesting.PerformanceCounterValue" /> object.</returns>
      <param name="machineName">The name of the computer from which the performance counter value is collected.</param>
      <param name="categoryName">The category name of the performance counter.</param>
      <param name="counterName">The name of the performance counter.</param>
      <param name="instanceName">The name of the instance of the performance counter.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.LoadTesting.ILoadTestPlugin">
      <summary>Defines an interface that is implemented to allow a user written class to handle events that occur as the load test, and the tests contained within the load test, are run.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.LoadTesting.ILoadTestPlugin.Initialize(Microsoft.VisualStudio.TestTools.LoadTesting.LoadTest)">
      <summary>Initializes the load test plug-in.</summary>
      <param name="loadTest">The load test to be executed.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.LoadTesting.InvalidLoadProfileException">
      <summary>This class represents an Exception that occurs when a load test plug-in attempts to assign the <see cref="P:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestScenario.LoadProfile" /> property of the <see cref="T:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestScenario" /> to a <see cref="T:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestLoadProfile" /> with an invalid or inconsistent set of property values. </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.LoadTesting.InvalidLoadProfileException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.LoadTesting.InvalidLoadProfileException" /> class with a system-supplied message that describes the error.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.LoadTesting.InvalidLoadProfileException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.LoadTesting.InvalidLoadProfileException" /> class with serialized data.</summary>
      <param name="info">The object that holds the serialized object data. </param>
      <param name="context">The contextual information about the source or destination. </param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.LoadTesting.InvalidLoadProfileException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.LoadTesting.InvalidLoadProfileException" /> class with a specified message that describes the error.</summary>
      <param name="message">The message that describes the exception. The caller of this constructor is required to make sure that this string has been localized for the current system culture.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.LoadTesting.InvalidLoadProfileException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.LoadTesting.InvalidLoadProfileException" /> class with a specified error message and a reference to the inner exception that is the cause of this exception.</summary>
      <param name="message">The message that describes the exception. The caller of this constructor is required to make sure that this string has been localized for the current system culture. </param>
      <param name="innerException">The exception that is the cause of the current exception. If the <paramref name="innerException" /> parameter is not null, the current exception is raised in a catch block that handles the inner exception. </param>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.LoadTesting.IThresholdRule">
      <summary>Used to monitor the values of performance counters during a load test run to signal warnings or critical alarms when the value of a performance counters exceeds a threshold.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.LoadTesting.IThresholdRule.CheckCounterValue(Microsoft.VisualStudio.TestTools.LoadTesting.PerformanceCounterValue,Microsoft.VisualStudio.TestTools.LoadTesting.ICounterProvider)">
      <summary>Checks the value of one or more counter samples against a threshold and returns a result that indicates the status of the counter relative to the threshold parameters specified by the rule parameters.</summary>
      <returns>A <see cref="T:Microsoft.VisualStudio.TestTools.LoadTesting.ThresholdRuleResult" /> enumeration.</returns>
      <param name="counterValue">The computed value of a performance counter.</param>
      <param name="counterProvider">Provides information about performance counter values.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.LoadTesting.IThresholdRule.ViolationMessage">
      <summary>Gets a message describing a rule violation.</summary>
      <returns>A message describing a rule violation.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTest">
      <summary>Represents the load test being run.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTest.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTest" /> class.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTest.Abort">
      <summary>Stops the load test on all agents.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTest.Abort(System.Exception)">
      <summary>Stops the load test on all agents and specifies the exception that caused the abort.</summary>
      <param name="exception">An <see cref="T:System.Exception" /> that caused the load test to abort.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTest.Context">
      <summary>Gets the <see cref="T:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestContext" /> for the current load test run.</summary>
      <returns>A <see cref="T:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestContext" /> object.</returns>
    </member>
    <member name="E:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTest.Heartbeat">
      <summary>Occurs once every second.</summary>
    </member>
    <member name="E:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTest.LoadTestAborted">
      <summary>Occurs when the load test is aborted.</summary>
    </member>
    <member name="E:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTest.LoadTestFinished">
      <summary>Occurs when the load test has stopped running on the agent.</summary>
    </member>
    <member name="E:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTest.LoadTestStarting">
      <summary>Occurs just before the load test begins to run on the agent.</summary>
    </member>
    <member name="E:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTest.LoadTestWarmupComplete">
      <summary>Occurs when the warm-up period has completed.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTest.Name">
      <summary>Gets the name of the load test.</summary>
      <returns>The name of the <see cref="T:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTest" />.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTest.RunSettings">
      <summary>Gets the run settings used for the current load test run.</summary>
      <returns>A <see cref="T:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestRunSettings" /> object.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTest.Scenarios">
      <summary>Gets a collection of scenarios within the load test.</summary>
      <returns>A collection of <see cref="T:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestScenario" /> objects contained within an <see cref="T:System.Collections.IList" />.</returns>
    </member>
    <member name="E:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTest.TestFinished">
      <summary>Occurs when an iteration of one of the tests contained within the load test finishes.</summary>
    </member>
    <member name="E:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTest.TestSelected">
      <summary>Occurs every time an iteration of one of the tests contained within the <see cref="T:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTest" /> is selected.</summary>
    </member>
    <member name="E:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTest.TestStarting">
      <summary>Occurs when an iteration of one of the tests contained within the load test is started.</summary>
    </member>
    <member name="E:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTest.ThresholdExceeded">
      <summary>Occurs when a threshold rule is exceeded. </summary>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestAbortedEventArgs">
      <summary>Provides data for the <see cref="E:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTest.LoadTestAborted" /> event. </summary>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestAbortedEventArgs.Exception">
      <summary>Gets the exception that caused the load test to be aborted.</summary>
      <returns>An <see cref="T:System.Exception" /> object.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestConstantLoadProfile">
      <summary>Represents the load profile of a load test that has a constant load pattern.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestConstantLoadProfile.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestConstantLoadProfile" /> class.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestConstantLoadProfile.GetLoad(System.Int32)">
      <summary>Returns the user load that should be used at the current time in the load test based on the value of <paramref name="elapsedSeconds" /> since the start of the load test that was passed as an argument.</summary>
      <param name="elapsedSeconds"> The time, in seconds, since the start of the load test.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestConstantLoadProfile.MaxUserCount">
      <summary>Gets or sets the maximum user count. The maximum user count is the same as the <see cref="P:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestConstantLoadProfile.UserCount" /> for the <see cref="T:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestConstantLoadProfile" /> class.</summary>
      <returns>The maximum user count. </returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestConstantLoadProfile.MinUserCount">
      <summary>Gets or sets the minimum user count. The minimum user count is the same as the <see cref="P:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestConstantLoadProfile.UserCount" /> for the <see cref="T:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestConstantLoadProfile" /> class.</summary>
      <returns>The minimum user count. </returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestConstantLoadProfile.UserCount">
      <summary>Gets or sets the number of virtual users in the case in which you are using a constant load pattern.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestConstantLoadProfile.Validate">
      <summary>Throws an <see cref="T:Microsoft.VisualStudio.TestTools.LoadTesting.InvalidLoadProfileException" /> if the LoadProfile object has invalid or inconsistent properties. </summary>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestContext">
      <summary>Encapsulates information about the context in which the load test is running. </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestContext.Add(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
      <summary>Adds an <see cref="T:System.Collections.Generic.KeyValuePair`2" /> item to the <see cref="T:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestContext" />.</summary>
      <param name="item">The <see cref="T:System.Collections.Generic.KeyValuePair`2" /> to add to the <see cref="T:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestContext" />.</param>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestContext" />  is read-only.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestContext.Add(System.String,System.Object)">
      <summary>Adds an element with the provided key and value to the <see cref="T:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestContext" />.</summary>
      <param name="key">The unique identifier to use as the key of the element to add.</param>
      <param name="value">The object to use as the value of the element to add.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> is null.</exception>
      <exception cref="T:System.ArgumentException">An element with the same <paramref name="key" /> already exists in the <see cref="T:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestContext" />.</exception>
      <exception cref="T:System.NotSupportedException">The <see cref="T:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestContext" /> is read-only.</exception>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestContext.AgentCount">
      <summary>Gets the total number of agents being used in the load test run.</summary>
      <returns>The number of agents being used in the load test.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestContext.AgentId">
      <summary>Gets the one-based index for the current agent.</summary>
      <returns>The one-based index for the current agent.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestContext.AgentName">
      <summary>Gets the name of the current agent.</summary>
      <returns>The name of the current agent.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestContext.Clear">
      <summary>Removes all items from the <see cref="T:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestContext" />.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestContext.Contains(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
      <summary>Determines whether the <see cref="T:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestContext" /> contains a specific value.</summary>
      <returns>true if item is found in the <see cref="T:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestContext" />; otherwise, false.</returns>
      <param name="item">The object to locate in the <see cref="T:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestContext" />.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestContext.ContainsKey(System.String)">
      <summary>Indicates whether the <see cref="T:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestContext" /> contains an element with the specified key.</summary>
      <returns>true if the <see cref="T:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestContext" /> contains an element with the <paramref name="key" />; otherwise, false.</returns>
      <param name="key">The key to locate in the <see cref="T:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestContext" />.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestContext.ControllerName">
      <summary>Gets the name of the computer acting as the controller for the load test run.</summary>
      <returns>The name of the computer acting as the controller for the load test run.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestContext.CopyTo(System.Collections.Generic.KeyValuePair{System.String,System.Object}[],System.Int32)">
      <summary>Copies the elements of the <see cref="T:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestContext" /> to an Array, starting at a particular Array index.</summary>
      <param name="array">The one-dimensional Array that is the destination of the elements copied from <see cref="T:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestContext" />. The array must have zero-based indexing.</param>
      <param name="arrayIndex">The zero-based index in array at which copying begins.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="arrayIndex" /> is less than 0.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> is multidimensional.-or-The number of elements in the source <see cref="T:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestContext" /> is greater than the available space from <paramref name="arrayIndex" /> to the end of the destination array.</exception>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestContext.Count">
      <summary>Gets the number of elements contained in the <see cref="T:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestContext" /> object.</summary>
      <returns>The number of elements contained in the <see cref="T:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestContext" />.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestContext.GetEnumerator">
      <summary>Returns an enumerator that iterates through the <see cref="T:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestContext" />.</summary>
      <returns>A <see cref="T:System.Collections.Generic.IEnumerator`1" /> that can be used to iterate through the <see cref="T:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestContext" />.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestContext.IsLocalRun">
      <summary>Gets a value that indicates whether the test was run locally or remotely.</summary>
      <returns>true if the test was run locally; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestContext.IsReadOnly">
      <summary>Gets a value indicating whether <see cref="T:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestContext" /> is read-only. </summary>
      <returns>This always returns false.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestContext.Item(System.String)">
      <summary>Gets or sets a <see cref="T:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestContext" /> element with the specified key. </summary>
      <returns>The element with the specified key.</returns>
      <param name="key">The key of the element to get or set.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> is null.</exception>
      <exception cref="T:System.Collections.Generic.KeyNotFoundException">The property is retrieved and <paramref name="key" /> is not found.</exception>
      <exception cref="T:System.NotSupportedException">The property is set and the <see cref="T:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestContext" />  is read-only.</exception>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestContext.Keys">
      <summary>Gets an <see cref="T:System.Collections.Generic.ICollection`1" /> that contains the keys of the <see cref="T:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestContext" /> elements.</summary>
      <returns>A Generic <see cref="T:System.Collections.Generic.ICollection`1" /> that contains the keys of the <see cref="T:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestContext" />.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestContext.LoadTestRunId"></member>
    <member name="M:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestContext.Remove(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
      <summary>Removes the first occurrence of a specific object from the <see cref="T:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestContext" />.</summary>
      <returns>true if item was successfully removed from the <see cref="T:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestContext" />; otherwise, false. This method also returns false if item is not found in the original <see cref="T:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestContext" />.</returns>
      <param name="item">The object to remove from the <see cref="T:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestContext" />.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestContext.Remove(System.String)">
      <summary>Removes the element with the specified key from the <see cref="T:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestContext" />.</summary>
      <returns>true if the element is successfully removed; otherwise, false. This method also returns false if <paramref name="key" /> was not found in the original <see cref="T:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestContext" />.</returns>
      <param name="key">The key of the element to remove.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> is null.</exception>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestContext" />  is read-only.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestContext.System#Collections#IEnumerable#GetEnumerator"></member>
    <member name="M:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestContext.TryGetValue(System.String,System.Object@)">
      <summary>Gets the value associated with the specified key.</summary>
      <returns>true if it contains an element with the specified <paramref name="key" />; otherwise, false.</returns>
      <param name="key">The key to find.</param>
      <param name="value">The referenced object that gets the key's value if it is found; otherwise, it gets the default value for the type of the <paramref name="value" /> parameter. This parameter can be passed uninitialized.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> is null.</exception>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestContext.Values">
      <summary>Gets <see cref="T:System.Collections.Generic.ICollection`1" /> that contains the values in the <see cref="T:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestContext" /> elements.</summary>
      <returns>A Generic <see cref="T:System.Collections.Generic.ICollection`1" /> that contains the values of the <see cref="T:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestContext" /> elements.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestGoalBasedLoadProfile">
      <summary>Represents the load profile of a load test that has a goal-based load pattern. </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestGoalBasedLoadProfile.#ctor">
      <summary>Initializes a new instance of the LoadTestGoalBasedLoadProfile class.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestGoalBasedLoadProfile.CategoryName">
      <summary>Gets or sets a performance counter category to monitor.</summary>
      <returns>The name of the performance counter category to monitor.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestGoalBasedLoadProfile.CounterName">
      <summary>Gets or sets the performance counter to monitor.</summary>
      <returns>The name of the performance counter to monitor.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestGoalBasedLoadProfile.GetLoad(System.Int32)">
      <summary>Returns the user load that should be used at the current time in the load test based on the value of elapsedSeconds since the start of the load test passed as an argument.  </summary>
      <param name="elapsed"> The time, in seconds, since the start of the load test.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestGoalBasedLoadProfile.HigherValuesBetter">
      <summary>Set this Boolean value to True when the performance counter specified by the Category and Counter properties is a performance counter for which a lower value indicates higher utilization of a resource. </summary>
      <returns>True if a lower value indicates higher utilization; otherwise, false. </returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestGoalBasedLoadProfile.InitialUserCount">
      <summary>Gets or sets the initial user count. This is the number of virtual users to run at the start of the load test before the user load is adjusted, based on the specified goal.</summary>
      <returns>The initial user count. </returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestGoalBasedLoadProfile.InstanceName">
      <summary>Gets or sets the performance counter instance to monitor.</summary>
      <returns>The performance counter instance to monitor.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestGoalBasedLoadProfile.MachineName">
      <summary>Gets or sets the name of the computer to monitor.</summary>
      <returns>The name of the computer to monitor.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestGoalBasedLoadProfile.MaxTargetValue">
      <summary>Gets or sets an upper limit to target. Load is increased or decreased to keep the counter below this value.</summary>
      <returns>The upper limit to target. </returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestGoalBasedLoadProfile.MaxUserCount">
      <summary>Gets or sets the maximum user count. The load cannot not exceed this value after the goal is met.</summary>
      <returns>The maximum user count. </returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestGoalBasedLoadProfile.MaxUserCountDecrease">
      <summary>Gets or sets the maximum amount by which to reduce the user load.</summary>
      <returns>The maximum amount by which to reduce the user load.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestGoalBasedLoadProfile.MaxUserCountIncrease">
      <summary>Gets or sets the maximum amount by which to increase the user load.</summary>
      <returns>The maximum amount by which to increase the user load.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestGoalBasedLoadProfile.MinTargetValue">
      <summary>Gets or sets the lower limit to target for the goal-based load pattern.</summary>
      <returns>The lower limit to target. </returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestGoalBasedLoadProfile.MinUserCount">
      <summary>Gets or sets the minimum user count. The load cannot go below this value even to satisfy the goal.</summary>
      <returns>The minimum user count. </returns>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestGoalBasedLoadProfile.RestoreUserCountAfterRestart(System.Int32)"></member>
    <member name="P:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestGoalBasedLoadProfile.StopAdjustingAtGoal">
      <summary>True indicates to stop adjusting user load. False indicates that the test must continue to adjust the user load throughout the test if needed to keep the specified performance counter value within the target range. </summary>
      <returns>True if the running test has stopped adjusting the user load. False if the running test will continue to adjust user load throughout the test.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestGoalBasedLoadProfile.Validate">
      <summary>Throws an InvalidLoadProfileException if the LoadProfile object has invalid or inconsistent properties. It also displays an appropriate message.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestLoadProfile"></member>
    <member name="M:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestLoadProfile.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestLoadProfile" /> class.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestLoadProfile.CheckIfProfileCanBeModified(System.String)">
      <summary>Throws an exception if the profile property is not yet ready to be modified.</summary>
      <param name="propertyName">The property name you wish to set.</param>
      <exception cref="LoadProfileModificationException">Thrown if the property is not ready to be modified.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestLoadProfile.Copy">
      <summary>Returns a copy of the object, typically a LoadTestPlugin object. The caller can then modify it and reassign it to the LoadProfile property of the LoadTestScenario object. </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestLoadProfile.GetLoad(System.Int32)">
      <summary>Returns the user load that should be used at the current time in the load test based on the value of elapsedSeconds since the start of the load test passed as an argument.</summary>
      <param name="elapsedSeconds">The time, in seconds, since the start of the load test. </param>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestLoadProfile.MaxUserCount">
      <summary>Gets or sets the highest user count that will ever be returned by the GetLoad method of the class extending LoadTestLoadProfile.</summary>
      <returns>The maximum user count. </returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestLoadProfile.MinUserCount">
      <summary>Gets or sets the smallest user count that will ever be returned by the GetLoad method of the class extending LoadTestLoadProfile.</summary>
      <returns>The smallest user count that will ever be returned by the GetLoad method of the class extending LoadTestLoadProfile.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestLoadProfile.RestoreUserCountAfterRestart(System.Int32)"></member>
    <member name="P:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestLoadProfile.ScenarioName">
      <summary>Gets or sets the name of the scenario in the load test that the load profile implementation is controlling.</summary>
      <returns>The name of the scenario in the load test that the load profile implementation is controlling.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestLoadProfile.Validate">
      <summary>Throws an InvalidLoadProfileException if the LoadProfile object has invalid or inconsistent properties. </summary>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestRunIdNotSetException"></member>
    <member name="M:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestRunIdNotSetException.#ctor"></member>
    <member name="M:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestRunIdNotSetException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestRunIdNotSetException.#ctor(System.String)"></member>
    <member name="M:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestRunIdNotSetException.#ctor(System.String,System.Exception)"></member>
    <member name="T:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestRunSettings">
      <summary>Describes the load test run settings in use for the current load test run, as defined in the Load Test Editor. </summary>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestRunSettings.Description">
      <summary>Gets a description of the run.</summary>
      <returns>A description of the run.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestRunSettings.Name">
      <summary>Gets the name of the run settings in the load test.</summary>
      <returns>The name of the run settings in the load test.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestRunSettings.RunDuration">
      <summary>Gets the number of seconds the load test is to run, not including the <see cref="P:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestRunSettings.WarmupTime" />.</summary>
      <returns>The number of seconds the load test is to run.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestRunSettings.WarmupTime">
      <summary>Gets the number of seconds in the warm-up period.</summary>
      <returns>The number of seconds in the warm-up period.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestScenario">
      <summary>Represents a scenario that is contained within a load test. </summary>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestScenario.CurrentLoad">
      <summary>Gets or sets the current value for the concurrent user load for this scenario.</summary>
      <returns>The current value for the concurrent user load.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Set value is less than 0.</exception>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestScenario.DelayBetweenIterations">
      <summary>Gets or sets the delay between the tests in a load test. </summary>
      <returns>The delay between the tests in a load test.</returns>
    </member>
    <member name="E:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestScenario.LoadChanged">
      <summary>Occurs when the current user load for this scenario changes as the load test runs.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestScenario.LoadProfile"></member>
    <member name="P:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestScenario.Name">
      <summary>Gets the name of the scenario as defined in the Load Test Editor.</summary>
      <returns>The name of the scenario as defined in the Load Test Editor.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestScenario.TestNames">
      <summary>Gets an array of the test names included in the scenario.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerable" /> collection of test names.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestStepLoadProfile">
      <summary>Represents the load profile of a load test that has a step load pattern.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestStepLoadProfile.#ctor">
      <summary>Initializes a new instance of the LoadTestStepLoadProfile class. </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestStepLoadProfile.GetLoad(System.Int32)">
      <summary>Returns the user load that should be used at the current time in the load test based on the value of elapsedSeconds since the start of the load test passed as an argument.</summary>
      <param name="elapsed"> The time, in seconds, since the start of the load test.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestStepLoadProfile.InitialUserCount">
      <summary>Gets or sets the initial user count, in the case in which you are using the step load pattern.</summary>
      <returns>The initial user count. </returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestStepLoadProfile.MaxUserCount">
      <summary>Gets or sets the maximum user count, in the case in which you are using the step load pattern.</summary>
      <returns>The maximum user count. </returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestStepLoadProfile.StepDuration">
      <summary>Gets or sets the amount of time between steps in seconds.</summary>
      <returns>The amount of time between steps, in seconds. </returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestStepLoadProfile.StepRampTime">
      <summary>Gets or sets the amount of time that it takes in each step to gradually add the users specified by the step user count.</summary>
      <returns>The amount of time that it takes in each step to gradually add the users specified by the step user count.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestStepLoadProfile.StepUserCount">
      <summary>Gets or sets the number of users to increase at each step, in the case in which you are using a step load pattern.</summary>
      <returns>The number of users to increase at each step. </returns>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestStepLoadProfile.Validate">
      <summary>Throws an InvalidLoadProfileException if the LoadProfile object has invalid or inconsistent properties. </summary>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestUserContext">
      <summary>Encapsulates information about the user context in which a test is running, in a load test. </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestUserContext.Add(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
      <summary>Adds an <see cref="T:System.Collections.Generic.KeyValuePair`2" /> item to the LoadTestUserContext.</summary>
      <param name="item">The <see cref="T:System.Collections.Generic.KeyValuePair`2" /> to add to the LoadTestUserContext.</param>
      <exception cref="T:System.NotSupportedException">LoadTestUserContext is read-only.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestUserContext.Add(System.String,System.Object)">
      <summary>Adds an element that has the provided key and value to the <see cref="T:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestUserContext" />.</summary>
      <param name="key">The unique identifier to use as the key of the element to add.</param>
      <param name="value">The object to use as the value of the element to add.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> is null.</exception>
      <exception cref="T:System.ArgumentException">An element that has the same <paramref name="key" /> already exists in the <see cref="T:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestUserContext" />.</exception>
      <exception cref="T:System.NotSupportedException">The <see cref="T:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestUserContext" /> is read-only.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestUserContext.Clear">
      <summary>Removes all items from the <see cref="T:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestUserContext" />.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestUserContext.CompletedTestCount">
      <summary>Gets or sets the number of tests that have been completed by the virtual user that is represented by the <see cref="T:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestUserContext" /> object since the beginning of the load test.</summary>
      <returns>The number of tests that have been completed by the virtual user since the load test run began.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestUserContext.Contains(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
      <summary>Determines whether the <see cref="T:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestUserContext" /> contains a specific value.</summary>
      <returns>true if item is found in the <see cref="T:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestUserContext" />; otherwise, false.</returns>
      <param name="item">The object to locate in the <see cref="T:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestUserContext" />.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestUserContext.ContainsKey(System.String)">
      <summary>Indicates whether the <see cref="T:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestUserContext" /> contains an element that has the specified key.</summary>
      <returns>true if the <see cref="T:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestUserContext" /> contains an element that has the key; otherwise, false.</returns>
      <param name="key">The key to locate in the <see cref="T:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestUserContext" />.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestUserContext.CopyTo(System.Collections.Generic.KeyValuePair{System.String,System.Object}[],System.Int32)">
      <summary>Copies the elements of the <see cref="T:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestUserContext" /> to an Array, starting at a particular Array index.</summary>
      <param name="array">The one-dimensional Array that is the destination of the elements copied from <see cref="T:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestUserContext" />. The array must have zero-based indexing.</param>
      <param name="arrayIndex">The zero-based index in array at which copying begins.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="arrayIndex" /> is less than 0.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> is multidimensional.-or-The number of elements in the source <see cref="T:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestUserContext" /> is greater than the available space from <paramref name="arrayIndex" /> to the end of the destination array.</exception>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestUserContext.Count">
      <summary>Gets the number of elements contained in the <see cref="T:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestUserContext" /> object.</summary>
      <returns>The number of elements contained in the <see cref="T:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestUserContext" /> object.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestUserContext.GetEnumerator">
      <summary>Returns an enumerator that iterates through the <see cref="T:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestUserContext" />.</summary>
      <returns>A <see cref="T:System.Collections.Generic.IEnumerator`1" /> that can be used to iterate through the <see cref="T:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestUserContext" />.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestUserContext.InitializeTestContext">
      <summary>Gets or sets the state of the user context at the time InitializeTest completed for the virtual user associated with the <see cref="T:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestUserContext" /> object.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestUserContext.IsNewUser">
      <summary>Gets a value that indicates whether a newly created virtual user is running the current test.</summary>
      <returns>true indicates that a newly created virtual user is running the current test; otherwise false.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestUserContext.IsReadOnly">
      <summary>Gets a value that indicates whether <see cref="T:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestUserContext" /> is read-only. </summary>
      <returns>This always returns false.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestUserContext.Item(System.String)">
      <summary>Gets or sets a <see cref="T:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestUserContext" />  element that has the specified key. </summary>
      <returns>The element that has the specified key.</returns>
      <param name="key"> The key of the element to get or set.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> is null.</exception>
      <exception cref="T:System.Collections.Generic.KeyNotFoundException">The property is retrieved and <paramref name="key" /> is not found.</exception>
      <exception cref="T:System.NotSupportedException">The property is set and the <see cref="T:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestUserContext" />  is read-only.</exception>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestUserContext.Keys">
      <summary>Gets an <see cref="T:System.Collections.ICollection" /> that contains the keys of the <see cref="T:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestUserContext" /> elements.</summary>
      <returns>A Generic <see cref="T:System.Collections.ICollection" /> that contains the keys of the <see cref="T:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestUserContext" />.</returns>
    </member>
    <member name="F:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestUserContext.LoadTestUserContextKey"></member>
    <member name="M:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestUserContext.Remove(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
      <summary>Removes the first occurrence of a specific object from the <see cref="T:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestUserContext" />.</summary>
      <returns>true if item was successfully removed from the <see cref="T:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestUserContext" />; otherwise, false. This method also returns false if item is not found in the original <see cref="T:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestUserContext" />.</returns>
      <param name="item">The object to remove from the <see cref="T:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestUserContext" />.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestUserContext.Remove(System.String)">
      <summary>Removes the first occurrence of a specific object from the <see cref="T:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestUserContext" />.</summary>
      <param name="key">The unique identifier to use as the key of the element to remove.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestUserContext.ScenarioName">
      <summary>Gets or sets the name of the load test scenario that created the virtual user that is represented by this <see cref="T:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestUserContext" />. </summary>
      <returns>The name of the load test scenario that created the virtual user that is represented by this <see cref="T:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestUserContext" />.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestUserContext.System#Collections#IEnumerable#GetEnumerator"></member>
    <member name="M:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestUserContext.TryGetValue(System.String,System.Object@)">
      <summary>Gets the value associated with the specified key.</summary>
      <returns>true if it contains an element that has the specified <paramref name="key" />; otherwise, false.</returns>
      <param name="key">The key to find.</param>
      <param name="value">The referenced object that gets the key's value if it is found; otherwise, it gets the default value for the type of the <paramref name="value" /> parameter. This parameter can be passed uninitialized.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> is null.</exception>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestUserContext.UserId">
      <summary>Gets the UserId of the user within the load test scenario.</summary>
      <returns>The UserId of the user within the load test scenario.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestUserContext.Values">
      <summary>Gets <see cref="T:System.Collections.ICollection" /> that contains the values in the <see cref="T:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestUserContext" /> elements.</summary>
      <returns>A Generic <see cref="T:System.Collections.ICollection" /> that contains the values of the <see cref="T:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestUserContext" /> elements.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.LoadTesting.PerformanceCounterValue">
      <summary>Contains the computed value of a performance counter collected during a load test run. </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.LoadTesting.PerformanceCounterValue.#ctor(System.String,System.String,System.String,System.String,System.Single)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.LoadTesting.PerformanceCounterValue" /> class. </summary>
      <param name="machineName">The name of the computer from which the performance counter value was collected.</param>
      <param name="categoryName">The category of the performance counter.</param>
      <param name="counterName">The name of the performance counter.</param>
      <param name="instanceName">The name of the instance of the performance counter.</param>
      <param name="value">The sampled value of the performance counter.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.LoadTesting.PerformanceCounterValue.CategoryName">
      <summary>Gets the category of the performance counter.</summary>
      <returns>The category of the performance counter.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.LoadTesting.PerformanceCounterValue.CounterName">
      <summary>Gets the name of the performance counter.</summary>
      <returns>The name of the performance counter.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.LoadTesting.PerformanceCounterValue.InstanceName">
      <summary>Gets the name of the instance of the performance counter.</summary>
      <returns>The name of the instance of the performance counter.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.LoadTesting.PerformanceCounterValue.MachineName">
      <summary>Gets the name of the computer from which the performance counter value was collected.</summary>
      <returns>The name of the computer from which the performance counter value was collected.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.LoadTesting.PerformanceCounterValue.ToString">
      <summary>Returns information about the <see cref="T:Microsoft.VisualStudio.TestTools.LoadTesting.PerformanceCounterValue" /> and its value property.</summary>
      <returns>Information about the <see cref="T:Microsoft.VisualStudio.TestTools.LoadTesting.PerformanceCounterValue" /> and its value property.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.LoadTesting.PerformanceCounterValue.Value">
      <summary>Gets the sampled value of the performance counter.</summary>
      <returns>The sampled value of the performance counter.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.LoadTesting.TestFinishedEventArgs">
      <summary>Provides data for the <see cref="E:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTest.TestFinished" /> event. </summary>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.LoadTesting.TestFinishedEventArgs.IsInitializeTest">
      <summary>Gets a value that indicates whether the test that finished is the InitializeTest that was specified in the load test scenario's test mix.</summary>
      <returns>true if the test that finished is the InitializeTest that was specified in the load test scenario's test mix; otherwise false.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.LoadTesting.TestFinishedEventArgs.IsTerminateTest">
      <summary>Gets a value that indicates whether the test that finished is the TerminateTest that was specified in the load test scenario's test mix.</summary>
      <returns>true if the test that finished is the TerminateTest that was specified in the load test scenario's test mix; otherwise false.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.LoadTesting.TestFinishedEventArgs.Result">
      <summary>Gets the result of the test that finished.</summary>
      <returns>The result of the finished test.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.LoadTesting.TestFinishedEventArgs.ScenarioName">
      <summary>Gets the scenario name of the test that finished.</summary>
      <returns>The scenario name of the finished test.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.LoadTesting.TestFinishedEventArgs.TestName">
      <summary>Gets the name of the finished test.</summary>
      <returns>The name of the finished test.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.LoadTesting.TestFinishedEventArgs.UserContext">
      <summary>Gets the <see cref="T:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestUserContext" /> that represents the virtual user that was running the test that finished.</summary>
      <returns>The <see cref="T:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestUserContext" /> that represents the virtual user that was running the test that finished.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.LoadTesting.TestIterationResult">
      <summary>Describes the result of running an individual test case within a load test. </summary>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.LoadTesting.TestIterationResult.Duration">
      <summary>Gets the duration of the test.</summary>
      <returns>A <see cref="T:System.TimeSpan" /> structure.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.LoadTesting.TestIterationResult.EndTime">
      <summary>Gets the time at which the test finished.</summary>
      <returns>A <see cref="T:System.DateTime" /> object.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.LoadTesting.TestIterationResult.ErrorMessage">
      <summary>Gets the error message associated with a failure, if any.</summary>
      <returns>The error message associated with a failure.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.LoadTesting.TestIterationResult.ErrorStackTrace">
      <summary>Gets the stack trace associated with a failure, if any.</summary>
      <returns>The stack trace associated with a failure.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.LoadTesting.TestIterationResult.Passed">
      <summary>Gets a value that indicates whether the test passed.</summary>
      <returns>true if the test passed; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.LoadTesting.TestIterationResult.StartTime">
      <summary>Gets the time at which the test started.</summary>
      <returns>A <see cref="T:System.DateTime" /> object.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.LoadTesting.TestSelectedEventArgs">
      <summary>Contains the arguments for the <see cref="E:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTest.TestSelected" /> event. </summary>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.LoadTesting.TestSelectedEventArgs.IsInitializeTest">
      <summary>Gets a value that indicates whether the selected test is the InitializeTest that was specified in the load test scenario's test mix.</summary>
      <returns>true if the selected test is the InitializeTest that was specified in the load test scenario's test mix; otherwise false.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.LoadTesting.TestSelectedEventArgs.IsTerminateTest">
      <summary>Gets a value that indicates whether the selected test is the TerminateTest that was specified in the load test scenario's test mix.</summary>
      <returns>true if the selected test is the TerminateTest that was specified in the load test scenario's test mix; otherwise false.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.LoadTesting.TestSelectedEventArgs.ScenarioName">
      <summary>Gets the scenario name that contains the test that is selected.</summary>
      <returns>A scenario name.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.LoadTesting.TestSelectedEventArgs.TestName">
      <summary>Gets or sets the name of the test that is selected.</summary>
      <returns>The name of the test that is selected.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.LoadTesting.TestSelectedEventArgs.UserContext">
      <summary>Gets the <see cref="T:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestUserContext" /> that represents the virtual user that is running the selected test.</summary>
      <returns>The <see cref="T:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestUserContext" /> that represents the virtual user that is running the selected test.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.LoadTesting.TestStartingEventArgs">
      <summary>Contains the arguments for the <see cref="E:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTest.TestStarting" /> event. </summary>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.LoadTesting.TestStartingEventArgs.IsInitializeTest">
      <summary>Gets a value that indicates whether the test that is starting is the InitializeTest that was specified in the load test scenario's test mix.</summary>
      <returns>true if the test that is starting is the InitializeTest that was specified in the load test scenario's test mix; otherwise false.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.LoadTesting.TestStartingEventArgs.IsTerminateTest">
      <summary>Gets a value that indicates whether the test that is starting is the TerminateTest that was specified in the load test scenario's test mix.</summary>
      <returns>true if the test that is starting is the TerminateTest that was specified in the load test scenario's test mix; otherwise false.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.LoadTesting.TestStartingEventArgs.ScenarioName">
      <summary>Gets the scenario name that contains the test that is starting.</summary>
      <returns>A scenario name.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.LoadTesting.TestStartingEventArgs.TestContextProperties">
      <summary>Gets an <see cref="T:System.Collections.Generic.IDictionary`2" /> that contains data available to individual tests in a load test.</summary>
      <returns>An <see cref="T:System.Collections.Generic.IDictionary`2" />.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.LoadTesting.TestStartingEventArgs.TestIterationNumber">
      <summary>Gets a value that represents the number of tests that have run within the load test on a particular agent.</summary>
      <returns>The number of test iterations.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.LoadTesting.TestStartingEventArgs.TestName">
      <summary>Gets the name of the test that is starting.</summary>
      <returns>The name of the test that is starting.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.LoadTesting.TestStartingEventArgs.UserContext">
      <summary>Gets the <see cref="T:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestUserContext" /> that represents the virtual user that is running the test that is starting.</summary>
      <returns>The <see cref="T:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestUserContext" /> that represents the virtual user that is running the test that is starting.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.LoadTesting.ThresholdExceededEventArgs">
      <summary>Provides data for the <see cref="E:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTest.ThresholdExceeded" /> event.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.LoadTesting.ThresholdExceededEventArgs.CounterValue">
      <summary>Gets the complete name (computer, category, counter, and instance) and value of the performance counter sample that exceeded a threshold.</summary>
      <returns>A <see cref="T:Microsoft.VisualStudio.TestTools.LoadTesting.PerformanceCounterValue" /> object.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.LoadTesting.ThresholdExceededEventArgs.ThresholdResult">
      <summary>Gets a value that indicates if the <see cref="F:Microsoft.VisualStudio.TestTools.LoadTesting.ThresholdRuleResult.Critical" /> or <see cref="F:Microsoft.VisualStudio.TestTools.LoadTesting.ThresholdRuleResult.Warning" /> threshold level was exceeded.</summary>
      <returns>A <see cref="T:Microsoft.VisualStudio.TestTools.LoadTesting.ThresholdRuleResult" /> enumeration value.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.LoadTesting.ThresholdRuleResult">
      <summary>Specifies the results of applying a threshold rule to a performance counter sample.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.TestTools.LoadTesting.ThresholdRuleResult.OK">
      <summary>Equals 0.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.TestTools.LoadTesting.ThresholdRuleResult.Warning">
      <summary>Equals 1.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.TestTools.LoadTesting.ThresholdRuleResult.Critical">
      <summary>Equals 2.</summary>
    </member>
  </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\VisualStudio\VS10RTM\PublicAssemblies\Microsoft.VisualStudio.QualityTools.LoadTestFramework.xml ===
ï»¿<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>Microsoft.VisualStudio.QualityTools.LoadTestFramework</name>
  </assembly>
  <members>
    <member name="T:Microsoft.VisualStudio.TestTools.LoadTesting.HeartbeatEventArgs">
      <summary>Provides data for the <see cref="E:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTest.HeartBeat" /> event. </summary>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.LoadTesting.HeartbeatEventArgs.ElapsedSeconds">
      <summary>Gets the number of seconds since the beginning of the run, including the warm-up period. </summary>
      <returns>The number of seconds since the beginning of the run.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.LoadTesting.HeartbeatEventArgs.IsWarmupComplete">
      <summary>Gets a value that indicates whether the warm-up period is complete.</summary>
      <returns>true if the warm-up interval is complete; otherwise, false.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.LoadTesting.ICounterProvider">
      <summary>Defines an interface that an implementation of the <see cref="T:Microsoft.VisualStudio.TestTools.LoadTesting.IThresholdRule" /> interface can use to obtain the current values of performance counters, other than the performance counter being tested. </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.LoadTesting.ICounterProvider.GetCounterValue(System.String,System.String,System.String,System.String)">
      <summary>Gets the current value of a performance counter.</summary>
      <returns>A <see cref="T:Microsoft.VisualStudio.TestTools.LoadTesting.PerformanceCounterValue" /> object.</returns>
      <param name="machineName">The name of the computer from which the performance counter value is collected.</param>
      <param name="categoryName">The category name of the performance counter.</param>
      <param name="counterName">The name of the performance counter.</param>
      <param name="instanceName">The name of the instance of the performance counter.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.LoadTesting.ILoadTestPlugin">
      <summary>Defines an interface that is implemented to allow a user written class to handle events that occur as the load test, and the tests contained within the load test, are run.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.LoadTesting.ILoadTestPlugin.Initialize(Microsoft.VisualStudio.TestTools.LoadTesting.LoadTest)">
      <summary>Initializes the load test plug-in.</summary>
      <param name="loadTest">The load test to be executed.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.LoadTesting.InvalidLoadProfileException">
      <summary>This class represents an Exception that occurs when a load test plug-in attempts to assign the <see cref="P:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestScenario.LoadProfile" /> property of the <see cref="T:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestScenario" /> to a <see cref="T:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestLoadProfile" /> with an invalid or inconsistent set of property values. </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.LoadTesting.InvalidLoadProfileException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.LoadTesting.InvalidLoadProfileException" /> class with a system-supplied message that describes the error.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.LoadTesting.InvalidLoadProfileException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.LoadTesting.InvalidLoadProfileException" /> class with serialized data.</summary>
      <param name="info">The object that holds the serialized object data. </param>
      <param name="context">The contextual information about the source or destination. </param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.LoadTesting.InvalidLoadProfileException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.LoadTesting.InvalidLoadProfileException" /> class with a specified message that describes the error.</summary>
      <param name="message">The message that describes the exception. The caller of this constructor is required to make sure that this string has been localized for the current system culture.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.LoadTesting.InvalidLoadProfileException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.LoadTesting.InvalidLoadProfileException" /> class with a specified error message and a reference to the inner exception that is the cause of this exception.</summary>
      <param name="message">The message that describes the exception. The caller of this constructor is required to make sure that this string has been localized for the current system culture. </param>
      <param name="innerException">The exception that is the cause of the current exception. If the <paramref name="innerException" /> parameter is not null, the current exception is raised in a catch block that handles the inner exception. </param>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.LoadTesting.IThresholdRule">
      <summary>Used to monitor the values of performance counters during a load test run to signal warnings or critical alarms when the value of a performance counters exceeds a threshold.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.LoadTesting.IThresholdRule.CheckCounterValue(Microsoft.VisualStudio.TestTools.LoadTesting.PerformanceCounterValue,Microsoft.VisualStudio.TestTools.LoadTesting.ICounterProvider)">
      <summary>Checks the value of one or more counter samples against a threshold and returns a result that indicates the status of the counter relative to the threshold parameters specified by the rule parameters.</summary>
      <returns>A <see cref="T:Microsoft.VisualStudio.TestTools.LoadTesting.ThresholdRuleResult" /> enumeration.</returns>
      <param name="counterValue">The computed value of a performance counter.</param>
      <param name="counterProvider">Provides information about performance counter values.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.LoadTesting.IThresholdRule.ViolationMessage">
      <summary>Gets a message describing a rule violation.</summary>
      <returns>A message describing a rule violation.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTest">
      <summary>Represents the load test being run.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTest.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTest" /> class.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTest.Abort">
      <summary>Stops the load test on all agents.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTest.Abort(System.Exception)">
      <summary>Stops the load test on all agents and specifies the exception that caused the abort.</summary>
      <param name="exception">An <see cref="T:System.Exception" /> that caused the load test to abort.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTest.Context">
      <summary>Gets the <see cref="T:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestContext" /> for the current load test run.</summary>
      <returns>A <see cref="T:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestContext" /> object.</returns>
    </member>
    <member name="E:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTest.Heartbeat">
      <summary>Occurs once every second.</summary>
    </member>
    <member name="E:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTest.LoadTestAborted">
      <summary>Occurs when the load test is aborted.</summary>
    </member>
    <member name="E:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTest.LoadTestFinished">
      <summary>Occurs when the load test has stopped running on the agent.</summary>
    </member>
    <member name="E:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTest.LoadTestStarting">
      <summary>Occurs just before the load test begins to run on the agent.</summary>
    </member>
    <member name="E:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTest.LoadTestWarmupComplete">
      <summary>Occurs when the warm-up period has completed.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTest.Name">
      <summary>Gets the name of the load test.</summary>
      <returns>The name of the <see cref="T:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTest" />.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTest.RunSettings">
      <summary>Gets the run settings used for the current load test run.</summary>
      <returns>A <see cref="T:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestRunSettings" /> object.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTest.Scenarios">
      <summary>Gets a collection of scenarios within the load test.</summary>
      <returns>A collection of <see cref="T:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestScenario" /> objects contained within an <see cref="T:System.Collections.IList" />.</returns>
    </member>
    <member name="E:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTest.TestFinished">
      <summary>Occurs when an iteration of one of the tests contained within the load test finishes.</summary>
    </member>
    <member name="E:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTest.TestSelected">
      <summary>Occurs every time an iteration of one of the tests contained within the <see cref="T:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTest" /> is selected.</summary>
    </member>
    <member name="E:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTest.TestStarting">
      <summary>Occurs when an iteration of one of the tests contained within the load test is started.</summary>
    </member>
    <member name="E:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTest.ThresholdExceeded">
      <summary>Occurs when a threshold rule is exceeded. </summary>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestAbortedEventArgs">
      <summary>Provides data for the <see cref="E:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTest.LoadTestAborted" /> event. </summary>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestAbortedEventArgs.Exception">
      <summary>Gets the exception that caused the load test to be aborted.</summary>
      <returns>An <see cref="T:System.Exception" /> object.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestConstantLoadProfile">
      <summary>Represents the load profile of a load test that has a constant load pattern.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestConstantLoadProfile.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestConstantLoadProfile" /> class.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestConstantLoadProfile.GetLoad(System.Int32)">
      <summary>Returns the user load that should be used at the current time in the load test based on the value of <paramref name="elapsedSeconds" /> since the start of the load test that was passed as an argument.</summary>
      <param name="elapsedSeconds"> The time, in seconds, since the start of the load test.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestConstantLoadProfile.MaxUserCount">
      <summary>Gets or sets the maximum user count. The maximum user count is the same as the <see cref="P:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestConstantLoadProfile.UserCount" /> for the <see cref="T:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestConstantLoadProfile" /> class.</summary>
      <returns>The maximum user count. </returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestConstantLoadProfile.MinUserCount">
      <summary>Gets or sets the minimum user count. The minimum user count is the same as the <see cref="P:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestConstantLoadProfile.UserCount" /> for the <see cref="T:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestConstantLoadProfile" /> class.</summary>
      <returns>The minimum user count. </returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestConstantLoadProfile.UserCount">
      <summary>Gets or sets the number of virtual users in the case in which you are using a constant load pattern.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestConstantLoadProfile.Validate">
      <summary>Throws an <see cref="T:Microsoft.VisualStudio.TestTools.LoadTesting.InvalidLoadProfileException" /> if the LoadProfile object has invalid or inconsistent properties. </summary>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestContext">
      <summary>Encapsulates information about the context in which the load test is running. </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestContext.Add(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
      <summary>Adds an <see cref="T:System.Collections.Generic.KeyValuePair`2" /> item to the <see cref="T:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestContext" />.</summary>
      <param name="item">The <see cref="T:System.Collections.Generic.KeyValuePair`2" /> to add to the <see cref="T:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestContext" />.</param>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestContext" />  is read-only.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestContext.Add(System.String,System.Object)">
      <summary>Adds an element with the provided key and value to the <see cref="T:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestContext" />.</summary>
      <param name="key">The unique identifier to use as the key of the element to add.</param>
      <param name="value">The object to use as the value of the element to add.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> is null.</exception>
      <exception cref="T:System.ArgumentException">An element with the same <paramref name="key" /> already exists in the <see cref="T:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestContext" />.</exception>
      <exception cref="T:System.NotSupportedException">The <see cref="T:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestContext" /> is read-only.</exception>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestContext.AgentCount">
      <summary>Gets the total number of agents being used in the load test run.</summary>
      <returns>The number of agents being used in the load test.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestContext.AgentId">
      <summary>Gets the one-based index for the current agent.</summary>
      <returns>The one-based index for the current agent.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestContext.AgentName">
      <summary>Gets the name of the current agent.</summary>
      <returns>The name of the current agent.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestContext.Clear">
      <summary>Removes all items from the <see cref="T:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestContext" />.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestContext.Contains(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
      <summary>Determines whether the <see cref="T:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestContext" /> contains a specific value.</summary>
      <returns>true if item is found in the <see cref="T:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestContext" />; otherwise, false.</returns>
      <param name="item">The object to locate in the <see cref="T:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestContext" />.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestContext.ContainsKey(System.String)">
      <summary>Indicates whether the <see cref="T:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestContext" /> contains an element with the specified key.</summary>
      <returns>true if the <see cref="T:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestContext" /> contains an element with the <paramref name="key" />; otherwise, false.</returns>
      <param name="key">The key to locate in the <see cref="T:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestContext" />.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestContext.ControllerName">
      <summary>Gets the name of the computer acting as the controller for the load test run.</summary>
      <returns>The name of the computer acting as the controller for the load test run.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestContext.CopyTo(System.Collections.Generic.KeyValuePair{System.String,System.Object}[],System.Int32)">
      <summary>Copies the elements of the <see cref="T:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestContext" /> to an Array, starting at a particular Array index.</summary>
      <param name="array">The one-dimensional Array that is the destination of the elements copied from <see cref="T:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestContext" />. The array must have zero-based indexing.</param>
      <param name="arrayIndex">The zero-based index in array at which copying begins.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="arrayIndex" /> is less than 0.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> is multidimensional.-or-The number of elements in the source <see cref="T:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestContext" /> is greater than the available space from <paramref name="arrayIndex" /> to the end of the destination array.</exception>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestContext.Count">
      <summary>Gets the number of elements contained in the <see cref="T:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestContext" /> object.</summary>
      <returns>The number of elements contained in the <see cref="T:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestContext" />.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestContext.GetEnumerator">
      <summary>Returns an enumerator that iterates through the <see cref="T:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestContext" />.</summary>
      <returns>A <see cref="T:System.Collections.Generic.IEnumerator`1" /> that can be used to iterate through the <see cref="T:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestContext" />.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestContext.IsLocalRun">
      <summary>Gets a value that indicates whether the test was run locally or remotely.</summary>
      <returns>true if the test was run locally; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestContext.IsReadOnly">
      <summary>Gets a value indicating whether <see cref="T:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestContext" /> is read-only. </summary>
      <returns>This always returns false.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestContext.Item(System.String)">
      <summary>Gets or sets a <see cref="T:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestContext" /> element with the specified key. </summary>
      <returns>The element with the specified key.</returns>
      <param name="key">The key of the element to get or set.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> is null.</exception>
      <exception cref="T:System.Collections.Generic.KeyNotFoundException">The property is retrieved and <paramref name="key" /> is not found.</exception>
      <exception cref="T:System.NotSupportedException">The property is set and the <see cref="T:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestContext" />  is read-only.</exception>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestContext.Keys">
      <summary>Gets an <see cref="T:System.Collections.Generic.ICollection`1" /> that contains the keys of the <see cref="T:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestContext" /> elements.</summary>
      <returns>A Generic <see cref="T:System.Collections.Generic.ICollection`1" /> that contains the keys of the <see cref="T:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestContext" />.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestContext.LoadTestRunId"></member>
    <member name="M:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestContext.Remove(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
      <summary>Removes the first occurrence of a specific object from the <see cref="T:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestContext" />.</summary>
      <returns>true if item was successfully removed from the <see cref="T:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestContext" />; otherwise, false. This method also returns false if item is not found in the original <see cref="T:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestContext" />.</returns>
      <param name="item">The object to remove from the <see cref="T:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestContext" />.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestContext.Remove(System.String)">
      <summary>Removes the element with the specified key from the <see cref="T:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestContext" />.</summary>
      <returns>true if the element is successfully removed; otherwise, false. This method also returns false if <paramref name="key" /> was not found in the original <see cref="T:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestContext" />.</returns>
      <param name="key">The key of the element to remove.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> is null.</exception>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestContext" />  is read-only.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestContext.System#Collections#IEnumerable#GetEnumerator"></member>
    <member name="M:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestContext.TryGetValue(System.String,System.Object@)">
      <summary>Gets the value associated with the specified key.</summary>
      <returns>true if it contains an element with the specified <paramref name="key" />; otherwise, false.</returns>
      <param name="key">The key to find.</param>
      <param name="value">The referenced object that gets the key's value if it is found; otherwise, it gets the default value for the type of the <paramref name="value" /> parameter. This parameter can be passed uninitialized.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> is null.</exception>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestContext.Values">
      <summary>Gets <see cref="T:System.Collections.Generic.ICollection`1" /> that contains the values in the <see cref="T:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestContext" /> elements.</summary>
      <returns>A Generic <see cref="T:System.Collections.Generic.ICollection`1" /> that contains the values of the <see cref="T:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestContext" /> elements.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestGoalBasedLoadProfile">
      <summary>Represents the load profile of a load test that has a goal-based load pattern. </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestGoalBasedLoadProfile.#ctor">
      <summary>Initializes a new instance of the LoadTestGoalBasedLoadProfile class.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestGoalBasedLoadProfile.CategoryName">
      <summary>Gets or sets a performance counter category to monitor.</summary>
      <returns>The name of the performance counter category to monitor.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestGoalBasedLoadProfile.CounterName">
      <summary>Gets or sets the performance counter to monitor.</summary>
      <returns>The name of the performance counter to monitor.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestGoalBasedLoadProfile.GetLoad(System.Int32)">
      <summary>Returns the user load that should be used at the current time in the load test based on the value of elapsedSeconds since the start of the load test passed as an argument.  </summary>
      <param name="elapsed"> The time, in seconds, since the start of the load test.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestGoalBasedLoadProfile.HigherValuesBetter">
      <summary>Set this Boolean value to True when the performance counter specified by the Category and Counter properties is a performance counter for which a lower value indicates higher utilization of a resource. </summary>
      <returns>True if a lower value indicates higher utilization; otherwise, false. </returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestGoalBasedLoadProfile.InitialUserCount">
      <summary>Gets or sets the initial user count. This is the number of virtual users to run at the start of the load test before the user load is adjusted, based on the specified goal.</summary>
      <returns>The initial user count. </returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestGoalBasedLoadProfile.InstanceName">
      <summary>Gets or sets the performance counter instance to monitor.</summary>
      <returns>The performance counter instance to monitor.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestGoalBasedLoadProfile.MachineName">
      <summary>Gets or sets the name of the computer to monitor.</summary>
      <returns>The name of the computer to monitor.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestGoalBasedLoadProfile.MaxTargetValue">
      <summary>Gets or sets an upper limit to target. Load is increased or decreased to keep the counter below this value.</summary>
      <returns>The upper limit to target. </returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestGoalBasedLoadProfile.MaxUserCount">
      <summary>Gets or sets the maximum user count. The load cannot not exceed this value after the goal is met.</summary>
      <returns>The maximum user count. </returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestGoalBasedLoadProfile.MaxUserCountDecrease">
      <summary>Gets or sets the maximum amount by which to reduce the user load.</summary>
      <returns>The maximum amount by which to reduce the user load.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestGoalBasedLoadProfile.MaxUserCountIncrease">
      <summary>Gets or sets the maximum amount by which to increase the user load.</summary>
      <returns>The maximum amount by which to increase the user load.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestGoalBasedLoadProfile.MinTargetValue">
      <summary>Gets or sets the lower limit to target for the goal-based load pattern.</summary>
      <returns>The lower limit to target. </returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestGoalBasedLoadProfile.MinUserCount">
      <summary>Gets or sets the minimum user count. The load cannot go below this value even to satisfy the goal.</summary>
      <returns>The minimum user count. </returns>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestGoalBasedLoadProfile.RestoreUserCountAfterRestart(System.Int32)"></member>
    <member name="P:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestGoalBasedLoadProfile.StopAdjustingAtGoal">
      <summary>True indicates to stop adjusting user load. False indicates that the test must continue to adjust the user load throughout the test if needed to keep the specified performance counter value within the target range. </summary>
      <returns>True if the running test has stopped adjusting the user load. False if the running test will continue to adjust user load throughout the test.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestGoalBasedLoadProfile.Validate">
      <summary>Throws an InvalidLoadProfileException if the LoadProfile object has invalid or inconsistent properties. It also displays an appropriate message.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestLoadProfile"></member>
    <member name="M:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestLoadProfile.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestLoadProfile" /> class.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestLoadProfile.CheckIfProfileCanBeModified(System.String)">
      <summary>Throws an exception if the profile property is not yet ready to be modified.</summary>
      <param name="propertyName">The property name you wish to set.</param>
      <exception cref="LoadProfileModificationException">Thrown if the property is not ready to be modified.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestLoadProfile.Copy">
      <summary>Returns a copy of the object, typically a LoadTestPlugin object. The caller can then modify it and reassign it to the LoadProfile property of the LoadTestScenario object. </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestLoadProfile.GetLoad(System.Int32)">
      <summary>Returns the user load that should be used at the current time in the load test based on the value of elapsedSeconds since the start of the load test passed as an argument.</summary>
      <param name="elapsedSeconds">The time, in seconds, since the start of the load test. </param>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestLoadProfile.MaxUserCount">
      <summary>Gets or sets the highest user count that will ever be returned by the GetLoad method of the class extending LoadTestLoadProfile.</summary>
      <returns>The maximum user count. </returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestLoadProfile.MinUserCount">
      <summary>Gets or sets the smallest user count that will ever be returned by the GetLoad method of the class extending LoadTestLoadProfile.</summary>
      <returns>The smallest user count that will ever be returned by the GetLoad method of the class extending LoadTestLoadProfile.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestLoadProfile.RestoreUserCountAfterRestart(System.Int32)"></member>
    <member name="P:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestLoadProfile.ScenarioName">
      <summary>Gets or sets the name of the scenario in the load test that the load profile implementation is controlling.</summary>
      <returns>The name of the scenario in the load test that the load profile implementation is controlling.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestLoadProfile.Validate">
      <summary>Throws an InvalidLoadProfileException if the LoadProfile object has invalid or inconsistent properties. </summary>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestRunIdNotSetException"></member>
    <member name="M:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestRunIdNotSetException.#ctor"></member>
    <member name="M:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestRunIdNotSetException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestRunIdNotSetException.#ctor(System.String)"></member>
    <member name="M:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestRunIdNotSetException.#ctor(System.String,System.Exception)"></member>
    <member name="T:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestRunSettings">
      <summary>Describes the load test run settings in use for the current load test run, as defined in the Load Test Editor. </summary>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestRunSettings.Description">
      <summary>Gets a description of the run.</summary>
      <returns>A description of the run.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestRunSettings.Name">
      <summary>Gets the name of the run settings in the load test.</summary>
      <returns>The name of the run settings in the load test.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestRunSettings.RunDuration">
      <summary>Gets the number of seconds the load test is to run, not including the <see cref="P:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestRunSettings.WarmupTime" />.</summary>
      <returns>The number of seconds the load test is to run.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestRunSettings.WarmupTime">
      <summary>Gets the number of seconds in the warm-up period.</summary>
      <returns>The number of seconds in the warm-up period.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestScenario">
      <summary>Represents a scenario that is contained within a load test. </summary>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestScenario.CurrentLoad">
      <summary>Gets or sets the current value for the concurrent user load for this scenario.</summary>
      <returns>The current value for the concurrent user load.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Set value is less than 0.</exception>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestScenario.DelayBetweenIterations">
      <summary>Gets or sets the delay between the tests in a load test. </summary>
      <returns>The delay between the tests in a load test.</returns>
    </member>
    <member name="E:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestScenario.LoadChanged">
      <summary>Occurs when the current user load for this scenario changes as the load test runs.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestScenario.LoadProfile"></member>
    <member name="P:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestScenario.Name">
      <summary>Gets the name of the scenario as defined in the Load Test Editor.</summary>
      <returns>The name of the scenario as defined in the Load Test Editor.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestScenario.TestNames">
      <summary>Gets an array of the test names included in the scenario.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerable" /> collection of test names.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestStepLoadProfile">
      <summary>Represents the load profile of a load test that has a step load pattern.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestStepLoadProfile.#ctor">
      <summary>Initializes a new instance of the LoadTestStepLoadProfile class. </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestStepLoadProfile.GetLoad(System.Int32)">
      <summary>Returns the user load that should be used at the current time in the load test based on the value of elapsedSeconds since the start of the load test passed as an argument.</summary>
      <param name="elapsed"> The time, in seconds, since the start of the load test.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestStepLoadProfile.InitialUserCount">
      <summary>Gets or sets the initial user count, in the case in which you are using the step load pattern.</summary>
      <returns>The initial user count. </returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestStepLoadProfile.MaxUserCount">
      <summary>Gets or sets the maximum user count, in the case in which you are using the step load pattern.</summary>
      <returns>The maximum user count. </returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestStepLoadProfile.StepDuration">
      <summary>Gets or sets the amount of time between steps in seconds.</summary>
      <returns>The amount of time between steps, in seconds. </returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestStepLoadProfile.StepRampTime">
      <summary>Gets or sets the amount of time that it takes in each step to gradually add the users specified by the step user count.</summary>
      <returns>The amount of time that it takes in each step to gradually add the users specified by the step user count.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestStepLoadProfile.StepUserCount">
      <summary>Gets or sets the number of users to increase at each step, in the case in which you are using a step load pattern.</summary>
      <returns>The number of users to increase at each step. </returns>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestStepLoadProfile.Validate">
      <summary>Throws an InvalidLoadProfileException if the LoadProfile object has invalid or inconsistent properties. </summary>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestUserContext">
      <summary>Encapsulates information about the user context in which a test is running, in a load test. </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestUserContext.Add(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
      <summary>Adds an <see cref="T:System.Collections.Generic.KeyValuePair`2" /> item to the LoadTestUserContext.</summary>
      <param name="item">The <see cref="T:System.Collections.Generic.KeyValuePair`2" /> to add to the LoadTestUserContext.</param>
      <exception cref="T:System.NotSupportedException">LoadTestUserContext is read-only.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestUserContext.Add(System.String,System.Object)">
      <summary>Adds an element that has the provided key and value to the <see cref="T:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestUserContext" />.</summary>
      <param name="key">The unique identifier to use as the key of the element to add.</param>
      <param name="value">The object to use as the value of the element to add.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> is null.</exception>
      <exception cref="T:System.ArgumentException">An element that has the same <paramref name="key" /> already exists in the <see cref="T:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestUserContext" />.</exception>
      <exception cref="T:System.NotSupportedException">The <see cref="T:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestUserContext" /> is read-only.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestUserContext.Clear">
      <summary>Removes all items from the <see cref="T:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestUserContext" />.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestUserContext.CompletedTestCount">
      <summary>Gets or sets the number of tests that have been completed by the virtual user that is represented by the <see cref="T:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestUserContext" /> object since the beginning of the load test.</summary>
      <returns>The number of tests that have been completed by the virtual user since the load test run began.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestUserContext.Contains(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
      <summary>Determines whether the <see cref="T:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestUserContext" /> contains a specific value.</summary>
      <returns>true if item is found in the <see cref="T:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestUserContext" />; otherwise, false.</returns>
      <param name="item">The object to locate in the <see cref="T:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestUserContext" />.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestUserContext.ContainsKey(System.String)">
      <summary>Indicates whether the <see cref="T:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestUserContext" /> contains an element that has the specified key.</summary>
      <returns>true if the <see cref="T:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestUserContext" /> contains an element that has the key; otherwise, false.</returns>
      <param name="key">The key to locate in the <see cref="T:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestUserContext" />.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestUserContext.CopyTo(System.Collections.Generic.KeyValuePair{System.String,System.Object}[],System.Int32)">
      <summary>Copies the elements of the <see cref="T:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestUserContext" /> to an Array, starting at a particular Array index.</summary>
      <param name="array">The one-dimensional Array that is the destination of the elements copied from <see cref="T:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestUserContext" />. The array must have zero-based indexing.</param>
      <param name="arrayIndex">The zero-based index in array at which copying begins.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="arrayIndex" /> is less than 0.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> is multidimensional.-or-The number of elements in the source <see cref="T:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestUserContext" /> is greater than the available space from <paramref name="arrayIndex" /> to the end of the destination array.</exception>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestUserContext.Count">
      <summary>Gets the number of elements contained in the <see cref="T:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestUserContext" /> object.</summary>
      <returns>The number of elements contained in the <see cref="T:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestUserContext" /> object.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestUserContext.GetEnumerator">
      <summary>Returns an enumerator that iterates through the <see cref="T:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestUserContext" />.</summary>
      <returns>A <see cref="T:System.Collections.Generic.IEnumerator`1" /> that can be used to iterate through the <see cref="T:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestUserContext" />.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestUserContext.InitializeTestContext">
      <summary>Gets or sets the state of the user context at the time InitializeTest completed for the virtual user associated with the <see cref="T:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestUserContext" /> object.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestUserContext.IsNewUser">
      <summary>Gets a value that indicates whether a newly created virtual user is running the current test.</summary>
      <returns>true indicates that a newly created virtual user is running the current test; otherwise false.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestUserContext.IsReadOnly">
      <summary>Gets a value that indicates whether <see cref="T:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestUserContext" /> is read-only. </summary>
      <returns>This always returns false.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestUserContext.Item(System.String)">
      <summary>Gets or sets a <see cref="T:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestUserContext" />  element that has the specified key. </summary>
      <returns>The element that has the specified key.</returns>
      <param name="key"> The key of the element to get or set.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> is null.</exception>
      <exception cref="T:System.Collections.Generic.KeyNotFoundException">The property is retrieved and <paramref name="key" /> is not found.</exception>
      <exception cref="T:System.NotSupportedException">The property is set and the <see cref="T:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestUserContext" />  is read-only.</exception>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestUserContext.Keys">
      <summary>Gets an <see cref="T:System.Collections.ICollection" /> that contains the keys of the <see cref="T:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestUserContext" /> elements.</summary>
      <returns>A Generic <see cref="T:System.Collections.ICollection" /> that contains the keys of the <see cref="T:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestUserContext" />.</returns>
    </member>
    <member name="F:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestUserContext.LoadTestUserContextKey"></member>
    <member name="M:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestUserContext.Remove(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
      <summary>Removes the first occurrence of a specific object from the <see cref="T:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestUserContext" />.</summary>
      <returns>true if item was successfully removed from the <see cref="T:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestUserContext" />; otherwise, false. This method also returns false if item is not found in the original <see cref="T:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestUserContext" />.</returns>
      <param name="item">The object to remove from the <see cref="T:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestUserContext" />.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestUserContext.Remove(System.String)">
      <summary>Removes the first occurrence of a specific object from the <see cref="T:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestUserContext" />.</summary>
      <param name="key">The unique identifier to use as the key of the element to remove.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestUserContext.ScenarioName">
      <summary>Gets or sets the name of the load test scenario that created the virtual user that is represented by this <see cref="T:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestUserContext" />. </summary>
      <returns>The name of the load test scenario that created the virtual user that is represented by this <see cref="T:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestUserContext" />.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestUserContext.System#Collections#IEnumerable#GetEnumerator"></member>
    <member name="M:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestUserContext.TryGetValue(System.String,System.Object@)">
      <summary>Gets the value associated with the specified key.</summary>
      <returns>true if it contains an element that has the specified <paramref name="key" />; otherwise, false.</returns>
      <param name="key">The key to find.</param>
      <param name="value">The referenced object that gets the key's value if it is found; otherwise, it gets the default value for the type of the <paramref name="value" /> parameter. This parameter can be passed uninitialized.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> is null.</exception>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestUserContext.UserId">
      <summary>Gets the UserId of the user within the load test scenario.</summary>
      <returns>The UserId of the user within the load test scenario.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestUserContext.Values">
      <summary>Gets <see cref="T:System.Collections.ICollection" /> that contains the values in the <see cref="T:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestUserContext" /> elements.</summary>
      <returns>A Generic <see cref="T:System.Collections.ICollection" /> that contains the values of the <see cref="T:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestUserContext" /> elements.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.LoadTesting.PerformanceCounterValue">
      <summary>Contains the computed value of a performance counter collected during a load test run. </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.LoadTesting.PerformanceCounterValue.#ctor(System.String,System.String,System.String,System.String,System.Single)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.LoadTesting.PerformanceCounterValue" /> class. </summary>
      <param name="machineName">The name of the computer from which the performance counter value was collected.</param>
      <param name="categoryName">The category of the performance counter.</param>
      <param name="counterName">The name of the performance counter.</param>
      <param name="instanceName">The name of the instance of the performance counter.</param>
      <param name="value">The sampled value of the performance counter.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.LoadTesting.PerformanceCounterValue.CategoryName">
      <summary>Gets the category of the performance counter.</summary>
      <returns>The category of the performance counter.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.LoadTesting.PerformanceCounterValue.CounterName">
      <summary>Gets the name of the performance counter.</summary>
      <returns>The name of the performance counter.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.LoadTesting.PerformanceCounterValue.InstanceName">
      <summary>Gets the name of the instance of the performance counter.</summary>
      <returns>The name of the instance of the performance counter.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.LoadTesting.PerformanceCounterValue.MachineName">
      <summary>Gets the name of the computer from which the performance counter value was collected.</summary>
      <returns>The name of the computer from which the performance counter value was collected.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.LoadTesting.PerformanceCounterValue.ToString">
      <summary>Returns information about the <see cref="T:Microsoft.VisualStudio.TestTools.LoadTesting.PerformanceCounterValue" /> and its value property.</summary>
      <returns>Information about the <see cref="T:Microsoft.VisualStudio.TestTools.LoadTesting.PerformanceCounterValue" /> and its value property.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.LoadTesting.PerformanceCounterValue.Value">
      <summary>Gets the sampled value of the performance counter.</summary>
      <returns>The sampled value of the performance counter.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.LoadTesting.TestFinishedEventArgs">
      <summary>Provides data for the <see cref="E:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTest.TestFinished" /> event. </summary>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.LoadTesting.TestFinishedEventArgs.IsInitializeTest">
      <summary>Gets a value that indicates whether the test that finished is the InitializeTest that was specified in the load test scenario's test mix.</summary>
      <returns>true if the test that finished is the InitializeTest that was specified in the load test scenario's test mix; otherwise false.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.LoadTesting.TestFinishedEventArgs.IsTerminateTest">
      <summary>Gets a value that indicates whether the test that finished is the TerminateTest that was specified in the load test scenario's test mix.</summary>
      <returns>true if the test that finished is the TerminateTest that was specified in the load test scenario's test mix; otherwise false.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.LoadTesting.TestFinishedEventArgs.Result">
      <summary>Gets the result of the test that finished.</summary>
      <returns>The result of the finished test.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.LoadTesting.TestFinishedEventArgs.ScenarioName">
      <summary>Gets the scenario name of the test that finished.</summary>
      <returns>The scenario name of the finished test.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.LoadTesting.TestFinishedEventArgs.TestName">
      <summary>Gets the name of the finished test.</summary>
      <returns>The name of the finished test.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.LoadTesting.TestFinishedEventArgs.UserContext">
      <summary>Gets the <see cref="T:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestUserContext" /> that represents the virtual user that was running the test that finished.</summary>
      <returns>The <see cref="T:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestUserContext" /> that represents the virtual user that was running the test that finished.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.LoadTesting.TestIterationResult">
      <summary>Describes the result of running an individual test case within a load test. </summary>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.LoadTesting.TestIterationResult.Duration">
      <summary>Gets the duration of the test.</summary>
      <returns>A <see cref="T:System.TimeSpan" /> structure.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.LoadTesting.TestIterationResult.EndTime">
      <summary>Gets the time at which the test finished.</summary>
      <returns>A <see cref="T:System.DateTime" /> object.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.LoadTesting.TestIterationResult.ErrorMessage">
      <summary>Gets the error message associated with a failure, if any.</summary>
      <returns>The error message associated with a failure.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.LoadTesting.TestIterationResult.ErrorStackTrace">
      <summary>Gets the stack trace associated with a failure, if any.</summary>
      <returns>The stack trace associated with a failure.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.LoadTesting.TestIterationResult.Passed">
      <summary>Gets a value that indicates whether the test passed.</summary>
      <returns>true if the test passed; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.LoadTesting.TestIterationResult.StartTime">
      <summary>Gets the time at which the test started.</summary>
      <returns>A <see cref="T:System.DateTime" /> object.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.LoadTesting.TestSelectedEventArgs">
      <summary>Contains the arguments for the <see cref="E:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTest.TestSelected" /> event. </summary>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.LoadTesting.TestSelectedEventArgs.IsInitializeTest">
      <summary>Gets a value that indicates whether the selected test is the InitializeTest that was specified in the load test scenario's test mix.</summary>
      <returns>true if the selected test is the InitializeTest that was specified in the load test scenario's test mix; otherwise false.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.LoadTesting.TestSelectedEventArgs.IsTerminateTest">
      <summary>Gets a value that indicates whether the selected test is the TerminateTest that was specified in the load test scenario's test mix.</summary>
      <returns>true if the selected test is the TerminateTest that was specified in the load test scenario's test mix; otherwise false.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.LoadTesting.TestSelectedEventArgs.ScenarioName">
      <summary>Gets the scenario name that contains the test that is selected.</summary>
      <returns>A scenario name.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.LoadTesting.TestSelectedEventArgs.TestName">
      <summary>Gets or sets the name of the test that is selected.</summary>
      <returns>The name of the test that is selected.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.LoadTesting.TestSelectedEventArgs.UserContext">
      <summary>Gets the <see cref="T:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestUserContext" /> that represents the virtual user that is running the selected test.</summary>
      <returns>The <see cref="T:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestUserContext" /> that represents the virtual user that is running the selected test.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.LoadTesting.TestStartingEventArgs">
      <summary>Contains the arguments for the <see cref="E:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTest.TestStarting" /> event. </summary>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.LoadTesting.TestStartingEventArgs.IsInitializeTest">
      <summary>Gets a value that indicates whether the test that is starting is the InitializeTest that was specified in the load test scenario's test mix.</summary>
      <returns>true if the test that is starting is the InitializeTest that was specified in the load test scenario's test mix; otherwise false.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.LoadTesting.TestStartingEventArgs.IsTerminateTest">
      <summary>Gets a value that indicates whether the test that is starting is the TerminateTest that was specified in the load test scenario's test mix.</summary>
      <returns>true if the test that is starting is the TerminateTest that was specified in the load test scenario's test mix; otherwise false.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.LoadTesting.TestStartingEventArgs.ScenarioName">
      <summary>Gets the scenario name that contains the test that is starting.</summary>
      <returns>A scenario name.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.LoadTesting.TestStartingEventArgs.TestContextProperties">
      <summary>Gets an <see cref="T:System.Collections.Generic.IDictionary`2" /> that contains data available to individual tests in a load test.</summary>
      <returns>An <see cref="T:System.Collections.Generic.IDictionary`2" />.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.LoadTesting.TestStartingEventArgs.TestIterationNumber">
      <summary>Gets a value that represents the number of tests that have run within the load test on a particular agent.</summary>
      <returns>The number of test iterations.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.LoadTesting.TestStartingEventArgs.TestName">
      <summary>Gets the name of the test that is starting.</summary>
      <returns>The name of the test that is starting.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.LoadTesting.TestStartingEventArgs.UserContext">
      <summary>Gets the <see cref="T:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestUserContext" /> that represents the virtual user that is running the test that is starting.</summary>
      <returns>The <see cref="T:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTestUserContext" /> that represents the virtual user that is running the test that is starting.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.LoadTesting.ThresholdExceededEventArgs">
      <summary>Provides data for the <see cref="E:Microsoft.VisualStudio.TestTools.LoadTesting.LoadTest.ThresholdExceeded" /> event.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.LoadTesting.ThresholdExceededEventArgs.CounterValue">
      <summary>Gets the complete name (computer, category, counter, and instance) and value of the performance counter sample that exceeded a threshold.</summary>
      <returns>A <see cref="T:Microsoft.VisualStudio.TestTools.LoadTesting.PerformanceCounterValue" /> object.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.LoadTesting.ThresholdExceededEventArgs.ThresholdResult">
      <summary>Gets a value that indicates if the <see cref="F:Microsoft.VisualStudio.TestTools.LoadTesting.ThresholdRuleResult.Critical" /> or <see cref="F:Microsoft.VisualStudio.TestTools.LoadTesting.ThresholdRuleResult.Warning" /> threshold level was exceeded.</summary>
      <returns>A <see cref="T:Microsoft.VisualStudio.TestTools.LoadTesting.ThresholdRuleResult" /> enumeration value.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.LoadTesting.ThresholdRuleResult">
      <summary>Specifies the results of applying a threshold rule to a performance counter sample.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.TestTools.LoadTesting.ThresholdRuleResult.OK">
      <summary>Equals 0.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.TestTools.LoadTesting.ThresholdRuleResult.Warning">
      <summary>Equals 1.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.TestTools.LoadTesting.ThresholdRuleResult.Critical">
      <summary>Equals 2.</summary>
    </member>
  </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\VisualStudio\VS10RTM\MsTest\Microsoft.VisualStudio.QualityTools.UnitTestFramework.xml ===
ï»¿<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>Microsoft.VisualStudio.QualityTools.UnitTestFramework</name>
  </assembly>
  <members>
    <member name="T:Microsoft.VisualStudio.TestTools.UnitTesting.AfterAssemblyCleanupEventArgs">
      <summary>Provides data for the <see cref="E:Microsoft.VisualStudio.TestTools.UnitTesting.TestExecution.AfterAssemblyCleanup" /> event.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.UnitTesting.AfterAssemblyInitializeEventArgs">
      <summary>Provides data for the <see cref="E:Microsoft.VisualStudio.TestTools.UnitTesting.TestExecution.AfterAssemblyInitialize" /> event.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.AfterAssemblyInitializeEventArgs.IsAssemblyInitializeFailed">
      <summary>Gets the flag that indicates whether the AssemblyInitialize call provided by the user failed because of an exception.</summary>
      <returns>true if the AssemblyInitialize call failed; otherwise false.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.UnitTesting.AfterClassCleanupEventArgs">
      <summary>Provides data for the <see cref="E:Microsoft.VisualStudio.TestTools.UnitTesting.TestExecution.AfterClassCleanup" /> event.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.UnitTesting.AfterClassInitializeEventArgs">
      <summary>Provides data for the <see cref="E:Microsoft.VisualStudio.TestTools.UnitTesting.TestExecution.AfterClassInitialize" /> event.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.AfterClassInitializeEventArgs.IsClassInitializeFailed">
      <summary>Gets the flag that indicates whether the ClassInitialize call provided by the user failed because of an exception.</summary>
      <returns>true if the ClassInitialize call failed; otherwise false.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.UnitTesting.AfterTestCleanupEventArgs">
      <summary>Provides data for the <see cref="E:Microsoft.VisualStudio.TestTools.UnitTesting.TestExecution.AfterTestCleanup" /> event.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.UnitTesting.AfterTestInitializeEventArgs">
      <summary>Provides data for the <see cref="E:Microsoft.VisualStudio.TestTools.UnitTesting.TestExecution.AfterTestInitialize" /> event.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.AfterTestInitializeEventArgs.IsTestInitializeFailed">
      <summary>Gets the flag that indicates whether the TestInitialize call provided by the user failed because of an exception. </summary>
      <returns>true if the TestInitialize call failed; otherwise false.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssemblyCleanupAttribute">
      <summary>Identifies a method that contains code to be used after all tests in the assembly have run and to free resources obtained by the assembly. This class cannot be inherited. </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.AssemblyCleanupAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssemblyCleanupAttribute" /> class.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssemblyInitializeAttribute">
      <summary>Identifies a method that contains code to be used before all tests in the assembly have run and to allocate resources obtained by the assembly. This class cannot be inherited.  </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.AssemblyInitializeAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssemblyCleanupAttribute" /> class.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.UnitTesting.Assert">
      <summary>Verifies conditions in unit tests using true/false propositions.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreEqual(System.Double,System.Double,System.Double)">
      <summary>Verifies that two specified doubles are equal, or within the specified accuracy of each other. The assertion fails if they are not within the specified accuracy of each other.</summary>
      <param name="expected">The first double to compare. This is the double the unit test expects.</param>
      <param name="actual">The second double to compare. This is the double the unit test produced.</param>
      <param name="delta">The required accuracy. The assertion will fail only if <paramref name="expected" /> is different from <paramref name="actual" /> by more than <paramref name="delta" />.</param>
      <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
        <paramref name="expected" /> is different from <paramref name="actual" /> by more than <paramref name="delta" />.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreEqual(System.Double,System.Double,System.Double,System.String)">
      <summary>Verifies that two specified doubles are equal, or within the specified accuracy of each other. The assertion fails if they are not within the specified accuracy of each other. Displays a message if the assertion fails.</summary>
      <param name="expected">The first double to compare. This is the double the unit test expects.</param>
      <param name="actual">The second double to compare. This is the double the unit test produced.</param>
      <param name="delta">The required accuracy. The assertion will fail only if <paramref name="expected" /> is different from <paramref name="actual" /> by more than <paramref name="delta" />.</param>
      <param name="message">A message to display if the assertion fails. This message can be seen in the unit test results.</param>
      <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
        <paramref name="expected" /> is different from <paramref name="actual" /> by more than <paramref name="delta" />.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreEqual(System.Double,System.Double,System.Double,System.String,System.Object[])">
      <summary>Verifies that two specified doubles are equal, or within the specified accuracy of each other. The assertion fails if they are not within the specified accuracy of each other. Displays a message if the assertion fails, and applies the specified formatting to it.</summary>
      <param name="expected">The first double to compare. This is the double the unit tests expects.</param>
      <param name="actual">The second double to compare. This is the double the unit test produced.</param>
      <param name="delta">The required accuracy. The assertion will fail only if <paramref name="expected" /> is different from <paramref name="actual" /> by more than <paramref name="delta" />.</param>
      <param name="message">A message to display if the assertion fails. This message can be seen in the unit test results.</param>
      <param name="parameters">An array of parameters to use when formatting <paramref name="message" />.</param>
      <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
        <paramref name="expected" /> is different from <paramref name="actual" /> by more than <paramref name="delta" />.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreEqual(System.Object,System.Object)">
      <summary>Verifies that two specified objects are equal. The assertion fails if the objects are not equal.</summary>
      <param name="expected">The first object to compare. This is the object the unit test expects.</param>
      <param name="actual">The second object to compare. This is the object the unit test produced.</param>
      <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
        <paramref name="expected" /> is not equal to <paramref name="actual" />.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreEqual(System.Object,System.Object,System.String)">
      <summary>Verifies that two specified objects are equal. The assertion fails if the objects are not equal. Displays a message if the assertion fails.</summary>
      <param name="expected">The first object to compare. This is the object the unit test expects.</param>
      <param name="actual">The second object to compare. This is the object the unit test produced.</param>
      <param name="message">A message to display if the assertion fails. This message can be seen in the unit test results.</param>
      <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
        <paramref name="expected" /> is not equal to <paramref name="actual" />.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreEqual(System.Object,System.Object,System.String,System.Object[])">
      <summary>Verifies that two specified objects are equal. The assertion fails if the objects are not equal. Displays a message if the assertion fails, and applies the specified formatting to it.</summary>
      <param name="expected">The first object to compare. This is the object the unit test expects.</param>
      <param name="actual">The second object to compare. This is the object the unit test produced.</param>
      <param name="message">A message to display if the assertion fails. This message can be seen in the unit test results.</param>
      <param name="parameters">An array of parameters to use when formatting <paramref name="message" />.</param>
      <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
        <paramref name="expected" /> is not equal to <paramref name="actual" />.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreEqual(System.Single,System.Single,System.Single)">
      <summary>Verifies that two specified singles are equal, or within the specified accuracy of each other. The assertion fails if they are not within the specified accuracy of each other.</summary>
      <param name="expected">The first single to compare. This is the single the unit test expects.</param>
      <param name="actual">The second single to compare. This is the single the unit test produced.</param>
      <param name="delta">The required accuracy. The assertion will fail only if <paramref name="expected" /> is different from <paramref name="actual" /> by more than <paramref name="delta" />.</param>
      <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
        <paramref name="expected" /> is not equal to <paramref name="actual" />.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreEqual(System.Single,System.Single,System.Single,System.String)">
      <summary>Verifies that two specified singles are equal, or within the specified accuracy of each other. The assertion fails if they are not within the specified accuracy of each other. Displays a message if the assertion fails.</summary>
      <param name="expected">The first single to compare. This is the single the unit test expects.</param>
      <param name="actual">The second single to compare. This is the single the unit test produced.</param>
      <param name="delta">The required accuracy. The assertion will fail only if <paramref name="expected" /> is different from <paramref name="actual" /> by more than <paramref name="delta" />.</param>
      <param name="message">A message to display if the assertion fails. This message can be seen in the unit test results.</param>
      <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
        <paramref name="expected" /> is not equal to <paramref name="actual" />.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreEqual(System.Single,System.Single,System.Single,System.String,System.Object[])">
      <summary>Verifies that two specified singles are equal, or within the specified accuracy of each other. The assertion fails if they are not within the specified accuracy of each other. Displays a message if the assertion fails, and applies the specified formatting to it.</summary>
      <param name="expected">The first single to compare. This is the single the unit test expects.</param>
      <param name="actual">The second single to compare. This is the single the unit test produced.</param>
      <param name="delta">The required accuracy. The assertion will fail only if <paramref name="expected" /> is different from <paramref name="actual" /> by more than <paramref name="delta" />.</param>
      <param name="message">A message to display if the assertion fails. This message can be seen in the unit test results.</param>
      <param name="parameters">An array of parameters to use when formatting <paramref name="message" />.</param>
      <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
        <paramref name="expected" /> is different from <paramref name="actual" /> by more than <paramref name="delta" />.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreEqual(System.String,System.String,System.Boolean)">
      <summary>Verifies that two specified strings are equal, ignoring case or not as specified. The assertion fails if they are not equal.</summary>
      <param name="expected">The first string to compare. This is the string the unit test expects.</param>
      <param name="actual">The second string to compare. This is the string the unit test produced.</param>
      <param name="ignoreCase">A Boolean value that indicates a case-sensitive or insensitive comparison. true indicates a case-insensitive comparison.</param>
      <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
        <paramref name="expected" /> is not equal to <paramref name="actual" />.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreEqual(System.String,System.String,System.Boolean,System.Globalization.CultureInfo)">
      <summary>Verifies that two specified strings are equal, ignoring case or not as specified, and using the culture info specified. The assertion fails if they are not equal.</summary>
      <param name="expected">The first string to compare. This is the string the unit test expects.</param>
      <param name="actual">The second string to compare. This is the string the unit test produced.</param>
      <param name="ignoreCase">A Boolean value that indicates a case-sensitive or insensitive comparison. true indicates a case-insensitive comparison.</param>
      <param name="culture">A <see cref="T:System.Globalization.CultureInfo" /> object that supplies culture-specific comparison information.</param>
      <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
        <paramref name="expected" /> is not equal to <paramref name="actual" />.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreEqual(System.String,System.String,System.Boolean,System.Globalization.CultureInfo,System.String)">
      <summary>Verifies that two specified strings are equal, ignoring case or not as specified, and using the culture info specified. The assertion fails if they are not equal. Displays a message if the assertion fails.</summary>
      <param name="expected">The first string to compare. This is the string the unit test expects.</param>
      <param name="actual">The second string to compare. This is the string the unit test produced.</param>
      <param name="ignoreCase">A Boolean value that indicates a case-sensitive or insensitive comparison. true indicates a case-insensitive comparison.</param>
      <param name="culture">A <see cref="T:System.Globalization.CultureInfo" /> object that supplies culture-specific comparison information.</param>
      <param name="message">A message to display if the assertion fails. This message can be seen in the unit test results.</param>
      <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
        <paramref name="expected" /> is not equal to <paramref name="actual" />.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreEqual(System.String,System.String,System.Boolean,System.Globalization.CultureInfo,System.String,System.Object[])">
      <summary>Verifies that two specified strings are equal, ignoring case or not as specified, and using the culture info specified. The assertion fails if they are not equal. Displays a message if the assertion fails, and applies the specified formatting to it.</summary>
      <param name="expected">The first string to compare. This is the string the unit test expects.</param>
      <param name="actual">The second string to compare. This is the string the unit test produced.</param>
      <param name="ignoreCase">A Boolean value that indicates a case-sensitive or insensitive comparison. true indicates a case-insensitive comparison.</param>
      <param name="culture">A <see cref="T:System.Globalization.CultureInfo" /> object that supplies culture-specific comparison information.</param>
      <param name="message">A message to display if the assertion fails. This message can be seen in the unit test results.</param>
      <param name="parameters">An array of parameters to use when formatting <paramref name="message" />.</param>
      <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
        <paramref name="expected" /> is not equal to <paramref name="actual" />.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreEqual(System.String,System.String,System.Boolean,System.String)">
      <summary>Verifies that two specified strings are equal, ignoring case or not as specified. The assertion fails if they are not equal. Displays a message if the assertion fails.</summary>
      <param name="expected">The first string to compare. This is the string the unit test expects.</param>
      <param name="actual">The second string to compare. This is the string the unit test produced.</param>
      <param name="ignoreCase">A Boolean value that indicates a case-sensitive or insensitive comparison. true indicates a case-insensitive comparison.</param>
      <param name="message">A message to display if the assertion fails. This message can be seen in the unit test results.</param>
      <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
        <paramref name="expected" /> is not equal to <paramref name="actual" />.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreEqual(System.String,System.String,System.Boolean,System.String,System.Object[])">
      <summary>Verifies that two specified strings are equal, ignoring case or not as specified. The assertion fails if they are not equal. Displays a message if the assertion fails, and applies the specified formatting to it.</summary>
      <param name="expected">The first string to compare. This is the string the unit test expects.</param>
      <param name="actual">The second string to compare. This is the string the unit test produced.</param>
      <param name="ignoreCase">A Boolean value that indicates a case-sensitive or insensitive comparison. true indicates a case-insensitive comparison.</param>
      <param name="message">A message to display if the assertion fails. This message can be seen in the unit test results.</param>
      <param name="parameters">An array of parameters to use when formatting <paramref name="message" />.</param>
      <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
        <paramref name="expected" /> is not equal to <paramref name="actual" />.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreEqual``1(``0,``0)">
      <summary>Verifies that two specified generic type data are equal. The assertion fails if they are not equal.</summary>
      <param name="expected">The first generic type data to compare. This is the generic type data the unit test expects.</param>
      <param name="actual">The second generic type data to compare. This is the generic type data the unit test produced.</param>
      <typeparam name="T"></typeparam>
      <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
        <paramref name="expected" /> is not equal to <paramref name="actual" />.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreEqual``1(``0,``0,System.String)">
      <summary>Verifies that two specified generic type data are equal. The assertion fails if they are not equal. Displays a message if the assertion fails.</summary>
      <param name="expected">The first generic type data to compare. This is the generic type data the unit test expects.</param>
      <param name="actual">The second generic type data to compare. This is the generic type data the unit test produced.</param>
      <param name="message">A message to display if the assertion fails. This message can be seen in the unit test results.</param>
      <typeparam name="T"></typeparam>
      <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
        <paramref name="expected" /> is not equal to <paramref name="actual" />.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreEqual``1(``0,``0,System.String,System.Object[])">
      <summary>Verifies that two specified generic type data are equal. The assertion fails if they are not equal. Displays a message if the assertion fails, and applies the specified formatting to it.</summary>
      <param name="expected">The first generic type data to compare. This is the generic type data the unit test expects.</param>
      <param name="actual">The second generic type data to compare. This is the generic type data the unit test produced.</param>
      <param name="message">A message to display if the assertion fails. This message can be seen in the unit test results.</param>
      <param name="parameters">An array of parameters to use when formatting <paramref name="message" />.</param>
      <typeparam name="T"></typeparam>
      <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
        <paramref name="expected" /> is not equal to <paramref name="actual" />.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreNotEqual(System.Double,System.Double,System.Double)">
      <summary>Verifies that two specified doubles are not equal, and not within the specified accuracy of each other. The assertion fails if they are equal or within the specified accuracy of each other.</summary>
      <param name="notExpected">The first double to compare. This is the double the unit test expects not to match <paramref name="actual" />.</param>
      <param name="actual">The second double to compare. This is the double the unit test produced.</param>
      <param name="delta">The required inaccuracy. The assertion fails only if <paramref name="notExpected" /> is equal to <paramref name="actual" /> or different from it by less than <paramref name="delta" />.</param>
      <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
        <paramref name="notExpected" /> is equal to <paramref name="actual" /> or different from it by less than <paramref name="delta" />.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreNotEqual(System.Double,System.Double,System.Double,System.String)">
      <summary>Verifies that two specified doubles are not equal, and not within the specified accuracy of each other. The assertion fails if they are equal or within the specified accuracy of each other. Displays a message if the assertion fails.</summary>
      <param name="notExpected">The first double to compare. This is the double the unit test expects not to match <paramref name="actual" />.</param>
      <param name="actual">The second double to compare. This is the double the unit test produced.</param>
      <param name="delta">The required inaccuracy. The assertion fails only if <paramref name="notExpected" /> is equal to <paramref name="actual" /> or different from it by less than <paramref name="delta" />.</param>
      <param name="message">A message to display if the assertion fails. This message can be seen in the unit test results.</param>
      <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
        <paramref name="notExpected" /> is equal to <paramref name="actual" /> or different from it by less than <paramref name="delta" />.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreNotEqual(System.Double,System.Double,System.Double,System.String,System.Object[])">
      <summary>Verifies that two specified doubles are not equal, and not within the specified accuracy of each other. The assertion fails if they are equal or within the specified accuracy of each other. Displays a message if the assertion fails, and applies the specified formatting to it.</summary>
      <param name="notExpected">The first double to compare. This is the double the unit test expects not to match <paramref name="actual" />.</param>
      <param name="actual">The second double to compare. This is the double the unit test produced.</param>
      <param name="delta">The required inaccuracy. The assertion will fail only if <paramref name="notExpected" /> is equal to <paramref name="actual" /> or different from it by less than <paramref name="delta" />.</param>
      <param name="message">A message to display if the assertion fails. This message can be seen in the unit test results.</param>
      <param name="parameters">An array of parameters to use when formatting <paramref name="message" />.</param>
      <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
        <paramref name="notExpected" /> is equal to <paramref name="actual" /> or different from it by less than <paramref name="delta" />.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreNotEqual(System.Object,System.Object)">
      <summary>Verifies that two specified objects are not equal. The assertion fails if the objects are equal.</summary>
      <param name="notExpected">The first object to compare. This is the object the unit test expects not to match <paramref name="actual" />.</param>
      <param name="actual">The second object to compare. This is the object the unit test produced.</param>
      <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
        <paramref name="notExpected" /> is equal to <paramref name="actual" />.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreNotEqual(System.Object,System.Object,System.String)">
      <summary>Verifies that two specified objects are not equal. The assertion fails if the objects are equal. Displays a message if the assertion fails.</summary>
      <param name="notExpected">The first object to compare. This is the object the unit test expects not to match <paramref name="actual" />.</param>
      <param name="actual">The second object to compare. This is the object the unit test produced.</param>
      <param name="message">A message to display if the assertion fails. This message can be seen in the unit test results.</param>
      <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
        <paramref name="notExpected" /> is equal to <paramref name="actual" />.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreNotEqual(System.Object,System.Object,System.String,System.Object[])">
      <summary>Verifies that two specified objects are not equal. The assertion fails if the objects are equal. Displays a message if the assertion fails, and applies the specified formatting to it.</summary>
      <param name="notExpected">The first object to compare. This is the object the unit test expects not to match <paramref name="actual" />.</param>
      <param name="actual">The second object to compare. This is the object the unit test produced.</param>
      <param name="message">A message to display if the assertion fails. This message can be seen in the unit test results.</param>
      <param name="parameters">An array of parameters to use when formatting <paramref name="message" />.</param>
      <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
        <paramref name="notExpected" /> is equal to <paramref name="actual" />.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreNotEqual(System.Single,System.Single,System.Single)">
      <summary>Verifies that two specified singles are not equal, and not within the specified accuracy of each other. The assertion fails if they are equal or within the specified accuracy of each other.</summary>
      <param name="notExpected">The first single to compare. This is the single the unit test expects.</param>
      <param name="actual">The second single to compare. This is the single the unit test produced.</param>
      <param name="delta">The required inaccuracy. The assertion will fail only if <paramref name="notExpected" /> is equal to <paramref name="actual" /> or different from it by less than <paramref name="delta" />.</param>
      <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
        <paramref name="notExpected" /> is equal to <paramref name="actual" /> or different from it by less than <paramref name="delta" />.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreNotEqual(System.Single,System.Single,System.Single,System.String)">
      <summary>Verifies that two specified singles are not equal, and not within the specified accuracy of each other. The assertion fails if they are equal or within the specified accuracy of each other. Displays a message if the assertion fails.</summary>
      <param name="notExpected">The first single to compare. This is the single the unit test expects.</param>
      <param name="actual">The second single to compare. This is the single the unit test produced.</param>
      <param name="delta">The required inaccuracy. The assertion will fail only if <paramref name="notExpected" /> is equal to <paramref name="actual" /> or different from it by less than <paramref name="delta" />.</param>
      <param name="message">A message to display if the assertion fails. This message can be seen in the unit test results.</param>
      <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
        <paramref name="notExpected" /> is equal to <paramref name="actual" /> or different from it by less than <paramref name="delta" />.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreNotEqual(System.Single,System.Single,System.Single,System.String,System.Object[])">
      <summary>Verifies that two specified singles are not equal, and not within the specified accuracy of each other. The assertion fails if they are equal or within the specified accuracy of each other. Displays a message if the assertion fails, and applies the specified formatting to it.</summary>
      <param name="notExpected">The first single to compare. This is the single the unit test expects not to match <paramref name="actual" />.</param>
      <param name="actual">The second single to compare. This is the single the unit test produced.</param>
      <param name="delta">The required inaccuracy. The assertion will fail only if <paramref name="notExpected" /> is equal to <paramref name="actual" /> or different from it by less than <paramref name="delta" />.</param>
      <param name="message">A message to display if the assertion fails. This message can be seen in the unit test results.</param>
      <param name="parameters">An array of parameters to use when formatting <paramref name="message" />.</param>
      <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
        <paramref name="notExpected" /> is equal to <paramref name="actual" /> or different from it by less than <paramref name="delta" />.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreNotEqual(System.String,System.String,System.Boolean)">
      <summary>Verifies that two specified strings are not equal, ignoring case or not as specified. The assertion fails if they are equal.</summary>
      <param name="notExpected">The first string to compare. This is the string the unit test expects not to match <paramref name="actual" />.</param>
      <param name="actual">The second string to compare. This is the string the unit test produced.</param>
      <param name="ignoreCase">A Boolean value that indicates a case-sensitive or insensitive comparison. true indicates a case-insensitive comparison.</param>
      <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
        <paramref name="notExpected" /> is equal to <paramref name="actual" />.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreNotEqual(System.String,System.String,System.Boolean,System.Globalization.CultureInfo)">
      <summary>Verifies that two specified strings are not equal, ignoring case or not as specified, and using the culture info specified. The assertion fails if they are equal.</summary>
      <param name="notExpected">The first string to compare. This is the string the unit test expects not to match <paramref name="actual" />.</param>
      <param name="actual">The second string to compare. This is the string the unit test produced.</param>
      <param name="ignoreCase">A Boolean value that indicates a case-sensitive or insensitive comparison. true indicates a case-insensitive comparison.</param>
      <param name="culture">A <see cref="T:System.Globalization.CultureInfo" /> object that supplies culture-specific comparison information.</param>
      <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
        <paramref name="notExpected" /> is equal to <paramref name="actual" />.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreNotEqual(System.String,System.String,System.Boolean,System.Globalization.CultureInfo,System.String)">
      <summary>Verifies that two specified strings are not equal, ignoring case or not as specified, and using the culture info specified. The assertion fails if they are equal. Displays a message if the assertion fails.</summary>
      <param name="notExpected">The first string to compare. This is the string the unit test expects not to match <paramref name="actual" />.</param>
      <param name="actual">The second string to compare. This is the string the unit test produced.</param>
      <param name="ignoreCase">A Boolean value that indicates a case-sensitive or insensitive comparison. true indicates a case-insensitive comparison.</param>
      <param name="culture">A <see cref="T:System.Globalization.CultureInfo" /> object that supplies culture-specific comparison information.</param>
      <param name="message">A message to display if the assertion fails. This message can be seen in the unit test results.</param>
      <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
        <paramref name="notExpected" /> is equal to <paramref name="actual" />.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreNotEqual(System.String,System.String,System.Boolean,System.Globalization.CultureInfo,System.String,System.Object[])">
      <summary>Verifies that two specified strings are not equal, ignoring case or not as specified, and using the culture info specified. The assertion fails if they are equal. Displays a message if the assertion fails, and applies the specified formatting to it.</summary>
      <param name="notExpected">The first string to compare. This is the string the unit test expects not to match <paramref name="actual" />.</param>
      <param name="actual">The second string to compare. This is the string the unit test produced.</param>
      <param name="ignoreCase">A Boolean value that indicates a case-sensitive or insensitive comparison. true indicates a case-insensitive comparison.</param>
      <param name="culture">A <see cref="T:System.Globalization.CultureInfo" /> object that supplies culture-specific comparison information.</param>
      <param name="message">A message to display if the assertion fails. This message can be seen in the unit test results.</param>
      <param name="parameters">An array of parameters to use when formatting <paramref name="message" />.</param>
      <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
        <paramref name="notExpected" /> is equal to <paramref name="actual" />.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreNotEqual(System.String,System.String,System.Boolean,System.String)">
      <summary>Verifies that two specified strings are not equal, ignoring case or not as specified. The assertion fails if they are equal. Displays a message if the assertion fails.</summary>
      <param name="notExpected">The first string to compare. This is the string the unit test expects not to match <paramref name="actual" />.</param>
      <param name="actual">The second string to compare. This is the string the unit test produced.</param>
      <param name="ignoreCase">A Boolean value that indicates a case-sensitive or insensitive comparison. true indicates a case-insensitive comparison.</param>
      <param name="message">A message to display if the assertion fails. This message can be seen in the unit test results.</param>
      <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
        <paramref name="notExpected" /> is equal to <paramref name="actual" />.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreNotEqual(System.String,System.String,System.Boolean,System.String,System.Object[])">
      <summary>Verifies that two specified strings are not equal, ignoring case or not as specified. The assertion fails if they are equal. Displays a message if the assertion fails, and applies the specified formatting to it. </summary>
      <param name="notExpected">The first string to compare. This is the string the unit test expects not to match <paramref name="actual" />.</param>
      <param name="actual">The second string to compare. This is the string the unit test produced.</param>
      <param name="ignoreCase">A Boolean value that indicates a case-sensitive or insensitive comparison. true indicates a case-insensitive comparison.</param>
      <param name="message">A message to display if the assertion fails. This message can be seen in the unit test results.</param>
      <param name="parameters">An array of parameters to use when formatting <paramref name="message" />.</param>
      <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
        <paramref name="notExpected" /> is equal to <paramref name="actual" />.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreNotEqual``1(``0,``0)">
      <summary>Verifies that two specified generic type data are not equal. The assertion fails if they are equal.</summary>
      <param name="notExpected">The first generic type data to compare. This is the generic type data the unit test expects not to match <paramref name="actual" />.</param>
      <param name="actual">The second generic type data to compare. This is the generic type data the unit test produced.</param>
      <typeparam name="T"></typeparam>
      <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
        <paramref name="notExpected" /> is equal to <paramref name="actual" />.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreNotEqual``1(``0,``0,System.String)">
      <summary>Verifies that two specified generic type data are not equal. The assertion fails if they are equal. Displays a message if the assertion fails.</summary>
      <param name="notExpected">The first generic type data to compare. This is the generic type data the unit test expects not to match <paramref name="actual" />.</param>
      <param name="actual">The second generic type data to compare. This is the generic type data the unit test produced.</param>
      <param name="message">A message to display if the assertion fails. This message can be seen in the unit test results.</param>
      <typeparam name="T"></typeparam>
      <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
        <paramref name="notExpected" /> is equal to <paramref name="actual" />.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreNotEqual``1(``0,``0,System.String,System.Object[])">
      <summary>Verifies that two specified generic type data are not equal. The assertion fails if they are equal. Displays a message if the assertion fails, and applies the specified formatting to it.</summary>
      <param name="notExpected">The first generic type data to compare. This is the generic type data the unit test expects not to match <paramref name="actual" />.</param>
      <param name="actual">The second generic type data to compare. This is the generic type data the unit test produced.</param>
      <param name="message">A message to display if the assertion fails. This message can be seen in the unit test results.</param>
      <param name="parameters">An array of parameters to use when formatting <paramref name="message" />.</param>
      <typeparam name="T"></typeparam>
      <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
        <paramref name="notExpected" /> is equal to <paramref name="actual" />.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreNotSame(System.Object,System.Object)">
      <summary>Verifies that two specified object variables refer to different objects. The assertion fails if they refer to the same object.</summary>
      <param name="notExpected">The first object to compare. This is the object the unit test expects not to match <paramref name="actual" />.</param>
      <param name="actual">The second object to compare. This is the object the unit test produced.</param>
      <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
        <paramref name="notExpected" /> refers to the same object as <paramref name="actual" />.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreNotSame(System.Object,System.Object,System.String)">
      <summary>Verifies that two specified object variables refer to different objects. The assertion fails if they refer to the same object. Displays a message if the assertion fails. </summary>
      <param name="notExpected">The first object to compare. This is the object the unit test expects not to match <paramref name="actual" />.</param>
      <param name="actual">The second object to compare. This is the object the unit test produced.</param>
      <param name="message">A message to display if the assertion fails. This message can be seen in the unit test results.</param>
      <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
        <paramref name="notExpected" /> refers to the same object as <paramref name="actual" />.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreNotSame(System.Object,System.Object,System.String,System.Object[])">
      <summary>Verifies that two specified object variables refer to different objects. The assertion fails if they refer to the same object. Displays a message if the assertion fails, and applies the specified formatting to it.</summary>
      <param name="notExpected">The first object to compare. This is the object the unit test expects not to match <paramref name="actual" />.</param>
      <param name="actual">The second object to compare. This is the object the unit test produced.</param>
      <param name="message">A message to display if the assertion fails. This message can be seen in the unit test results.</param>
      <param name="parameters">An array of parameters to use when formatting <paramref name="message" />.</param>
      <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
        <paramref name="notExpected" /> refers to the same object as <paramref name="actual" />.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreSame(System.Object,System.Object)">
      <summary>Verifies that two specified object variables refer to the same object. The assertion fails if they refer to different objects.</summary>
      <param name="expected">The first object to compare. This is the object the unit test expects.</param>
      <param name="actual">The second object to compare. This is the object the unit test produced.</param>
      <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
        <paramref name="expected" /> does not refer to the same object as <paramref name="actual" />.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreSame(System.Object,System.Object,System.String)">
      <summary>Verifies that two specified object variables refer to the same object. The assertion fails if they refer to different objects. Displays a message if the assertion fails.</summary>
      <param name="expected">The first object to compare. This is the object the unit test expects.</param>
      <param name="actual">The second object to compare. This is the object the unit test produced.</param>
      <param name="message">A message to display if the assertion fails. This message can be seen in the unit test results.</param>
      <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
        <paramref name="expected" /> does not refer to the same object as <paramref name="actual" />.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreSame(System.Object,System.Object,System.String,System.Object[])">
      <summary>Verifies that two specified object variables refer to the same object. The assertion fails if they refer to different objects. Displays a message if the assertion fails, and applies the specified formatting to it.</summary>
      <param name="expected">The first object to compare. This is the object the unit test expects.</param>
      <param name="actual">The second object to compare. This is the object the unit test produced.</param>
      <param name="message">A message to display if the assertion fails. This message can be seen in the unit test results.</param>
      <param name="parameters">An array of parameters to use when formatting <paramref name="message" />.</param>
      <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
        <paramref name="expected" /> does not refer to the same object as <paramref name="actual" />.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.Equals(System.Object,System.Object)">
      <summary>Do not use this method. </summary>
      <param name="objA"></param>
      <param name="objB"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.Fail">
      <summary>Fails the assertion without checking any conditions.</summary>
      <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">Always thrown.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.Fail(System.String)">
      <summary>Fails the assertion without checking any conditions. Displays a message.</summary>
      <param name="message">A message to display. This message can be seen in the unit test results.</param>
      <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">Always thrown.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.Fail(System.String,System.Object[])">
      <summary>Fails the assertion without checking any conditions. Displays a message, and applies the specified formatting to it.</summary>
      <param name="message">A message to display. This message can be seen in the unit test results.</param>
      <param name="parameters">An array of parameters to use when formatting <paramref name="message" />.</param>
      <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">Always thrown.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.Inconclusive">
      <summary>Indicates that the assertion cannot be verified.</summary>
      <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertInconclusiveException">Always thrown.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.Inconclusive(System.String)">
      <summary>Indicates that the assertion can not be verified. Displays a message.</summary>
      <param name="message">A message to display. This message can be seen in the unit test results.</param>
      <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertInconclusiveException">Always thrown.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.Inconclusive(System.String,System.Object[])">
      <summary>Indicates that an assertion can not be verified. Displays a message, and applies the specified formatting to it.</summary>
      <param name="message">A message to display. This message can be seen in the unit test results.</param>
      <param name="parameters">An array of parameters to use when formatting <paramref name="message" />.</param>
      <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertInconclusiveException">Always thrown.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.IsFalse(System.Boolean)">
      <summary>Verifies that the specified condition is false. The assertion fails if the condition is true.</summary>
      <param name="condition">The condition to verify is false.</param>
      <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
        <paramref name="condition" /> evaluates to true.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.IsFalse(System.Boolean,System.String)">
      <summary>Verifies that the specified condition is false. The assertion fails if the condition is true. Displays a message if the assertion fails.</summary>
      <param name="condition">The condition to verify is false.</param>
      <param name="message">A message to display if the assertion fails. This message can be seen in the unit test results.</param>
      <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
        <paramref name="condition" /> evaluates to true.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.IsFalse(System.Boolean,System.String,System.Object[])">
      <summary>Verifies that the specified condition is false. The assertion fails if the condition is true. Displays a message if the assertion fails, and applies the specified formatting to it.</summary>
      <param name="condition">The condition to verify is false.</param>
      <param name="message">A message to display if the assertion fails. This message can be seen in the unit test results.</param>
      <param name="parameters">An array of parameters to use when formatting <paramref name="message" />.</param>
      <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
        <paramref name="condition" /> evaluates to true.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.IsInstanceOfType(System.Object,System.Type)">
      <summary>Verifies that the specified object is an instance of the specified type. The assertion fails if the type is not found in the inheritance hierarchy of the object.</summary>
      <param name="value">The object to verify is of <paramref name="expectedType" />.</param>
      <param name="expectedType">The type expected to be found in the inheritance hierarchy of <paramref name="value" />.</param>
      <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
        <paramref name="value" /> is null or <paramref name="expectedType" /> is not found in the inheritance hierarchy of <paramref name="value" />.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.IsInstanceOfType(System.Object,System.Type,System.String)">
      <summary>Verifies that the specified object is an instance of the specified type. The assertion fails if the type is not found in the inheritance hierarchy of the object. Displays a message if the assertion fails.</summary>
      <param name="value">The object to verify is of <paramref name="expectedType" />.</param>
      <param name="expectedType">The type expected to be found in the inheritance hierarchy of <paramref name="value" />.</param>
      <param name="message">A message to display if the assertion fails. This message can be seen in the unit test results.</param>
      <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
        <paramref name="value" /> is null or <paramref name="expectedType" /> is not found in the inheritance hierarchy of <paramref name="value" />.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.IsInstanceOfType(System.Object,System.Type,System.String,System.Object[])">
      <summary>Verifies that the specified object is an instance of the specified type. The assertion fails if the type is not found in the inheritance hierarchy of the object. Displays a message if the assertion fails, and applies the specified formatting to it.</summary>
      <param name="value">The object to verify is of <paramref name="expectedType" />.</param>
      <param name="expectedType">The type expected to be found in the inheritance hierarchy of <paramref name="value" />.</param>
      <param name="message">A message to display if the assertion fails. This message can be seen in the unit test results.</param>
      <param name="parameters">An array of parameters to use when formatting <paramref name="message" />.</param>
      <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
        <paramref name="value" /> is null or <paramref name="expectedType" /> is not found in the inheritance hierarchy of <paramref name="value" />.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.IsNotInstanceOfType(System.Object,System.Type)">
      <summary>Verifies that the specified object is not an instance of the specified type. The assertion fails if the type is found in the inheritance hierarchy of the object.</summary>
      <param name="value">The object to verify is not of <paramref name="wrongType" />.</param>
      <param name="wrongType">The type that should not be found in the inheritance hierarchy of <paramref name="value" />.</param>
      <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
        <paramref name="value" /> is not null and <paramref name="wrongType" /> is found in the inheritance hierarchy of <paramref name="value" />.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.IsNotInstanceOfType(System.Object,System.Type,System.String)">
      <summary>Verifies that the specified object is not an instance of the specified type. The assertion fails if the type is found in the inheritance hierarchy of the object. Displays a message if the assertion fails.</summary>
      <param name="value">The object to verify is not of <paramref name="wrongType" />.</param>
      <param name="wrongType">The type that should not be found in the inheritance hierarchy of <paramref name="value" />.</param>
      <param name="message">A message to display if the assertion fails. This message can be seen in the unit test results. </param>
      <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
        <paramref name="value" /> is not null and <paramref name="wrongType" /> is found in the inheritance hierarchy of <paramref name="value" />.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.IsNotInstanceOfType(System.Object,System.Type,System.String,System.Object[])">
      <summary>Verifies that the specified object is not an instance of the specified type. The assertion fails if the type is found in the inheritance hierarchy of the object. Displays a message if the assertion fails, and applies the specified formatting to it.</summary>
      <param name="value">The object to verify is not of <paramref name="wrongType" />.</param>
      <param name="wrongType">The type that should not be found in the inheritance hierarchy of <paramref name="value" />.</param>
      <param name="message">A message to display if the assertion fails. This message can be seen in the unit test results. </param>
      <param name="parameters">An array of parameters to use when formatting <paramref name="message" />.</param>
      <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
        <paramref name="value" /> is not null and <paramref name="wrongType" /> is found in the inheritance hierarchy of <paramref name="value" />.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.IsNotNull(System.Object)">
      <summary>Verifies that the specified object is not null. The assertion fails if it is null.</summary>
      <param name="value">The object to verify is not null.</param>
      <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
        <paramref name="value" /> is null.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.IsNotNull(System.Object,System.String)">
      <summary>Verifies that the specified object is not null. The assertion fails if it is null. Displays a message if the assertion fails.</summary>
      <param name="value">The object to verify is not null.</param>
      <param name="message">A message to display if the assertion fails. This message can be seen in the unit test results.</param>
      <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
        <paramref name="value" /> is null.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.IsNotNull(System.Object,System.String,System.Object[])">
      <summary>Verifies that the specified object is not null. The assertion fails if it is null. Displays a message if the assertion fails, and applies the specified formatting to it.</summary>
      <param name="value">The object to verify is not null.</param>
      <param name="message">A message to display if the assertion fails. This message can be seen in the unit test results.</param>
      <param name="parameters">An array of parameters to use when formatting <paramref name="message" />.</param>
      <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
        <paramref name="value" /> is null.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.IsNull(System.Object)">
      <summary>Verifies that the specified object is null. The assertion fails if it is not null.</summary>
      <param name="value">The object to verify is null.</param>
      <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
        <paramref name="value" /> is not null.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.IsNull(System.Object,System.String)">
      <summary>Verifies that the specified object is null. The assertion fails if it is not null. Displays a message if the assertion fails.</summary>
      <param name="value">The object to verify is null.</param>
      <param name="message">A message to display if the assertion fails. This message can be seen in the unit test results.</param>
      <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
        <paramref name="value" /> is not null.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.IsNull(System.Object,System.String,System.Object[])">
      <summary>Verifies that the specified object is null. The assertion fails if it is not null. Displays a message if the assertion fails, and applies the specified formatting to it.</summary>
      <param name="value">The object to verify is null.</param>
      <param name="message">A message to display if the assertion fails. This message can be seen in the unit test results.</param>
      <param name="parameters">An array of parameters to use when formatting <paramref name="message" />.</param>
      <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
        <paramref name="value" /> is not null.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.IsTrue(System.Boolean)">
      <summary>Verifies that the specified condition is true. The assertion fails if the condition is false.</summary>
      <param name="condition">The condition to verify is true.</param>
      <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
        <paramref name="condition" /> evaluates to false.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.IsTrue(System.Boolean,System.String)">
      <summary>Verifies that the specified condition is true. The assertion fails if the condition is false. Displays a message if the assertion fails.</summary>
      <param name="condition">The condition to verify is true.</param>
      <param name="message">A message to display if the assertion fails. This message can be seen in the unit test results.</param>
      <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
        <paramref name="condition" /> evaluates to false.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.IsTrue(System.Boolean,System.String,System.Object[])">
      <summary>Verifies that the specified condition is true. The assertion fails if the condition is false. Displays a message if the assertion fails, and applies the specified formatting to it.</summary>
      <param name="condition">The condition to verify is true.</param>
      <param name="message">A message to display if the assertion fails. This message can be seen in the unit test results.</param>
      <param name="parameters">An array of parameters to use when formatting <paramref name="message" />.</param>
      <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
        <paramref name="condition" /> evaluates to false.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.ReplaceNullChars(System.String)">
      <summary>In a string, replaces null characters ('\0') with "\\0".</summary>
      <returns>The converted string with null characters replaced by "\\0".</returns>
      <param name="input">The string in which to search for and replace null characters. </param>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
      <summary>Used to indicate failure for a test. </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException" /> class. </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException" /> class with serialized data.</summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
      <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="info" /> is null.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or HResult is zero (0).</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException" /> class that uses with a specified error message.</summary>
      <param name="msg">The message that describes the error.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException" /> class with a specified error message and a reference to the inner exception that is the cause of this exception.</summary>
      <param name="msg">The error message that explains the reason for the exception.</param>
      <param name="ex">The exception that is the cause of the current exception. If the <paramref name="ex" /> parameter is not null, the current exception is raised in a catch block that handles the inner exception.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertInconclusiveException">
      <summary>Used to indicate that a test is not yet implemented. </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.AssertInconclusiveException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertInconclusiveException" /> class. </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.AssertInconclusiveException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertInconclusiveException" /> class with serialized data. </summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
      <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="info" /> parameter is null.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.AssertInconclusiveException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertInconclusiveException" /> class with a specified error message. </summary>
      <param name="msg">The message that describes the error.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.AssertInconclusiveException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertInconclusiveException" /> class with a specified error message and a reference to the inner exception that is the cause of this exception.  </summary>
      <param name="msg">The error message that explains the reason for the exception.</param>
      <param name="ex">The exception that is the cause of the current exception. If the parameter is not null, the current exception is raised in a catch block that handles the inner exception. </param>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.UnitTesting.BaseShadow">
      <summary>This class is used by the publicize method to help test private types. </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.BaseShadow.#ctor(Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.BaseShadow" /> class. </summary>
      <param name="privateTarget">Object to store at initialization.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.BaseShadow.#ctor(Microsoft.VisualStudio.TestTools.UnitTesting.PrivateType)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.BaseShadow" /> class.</summary>
      <param name="type">Type to store at initialization.</param>
    </member>
    <member name="F:Microsoft.VisualStudio.TestTools.UnitTesting.BaseShadow.AttachShadowName">
      <summary>The name of the static method in derived classes.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.BaseShadow.Equals(System.Object)">
      <summary>Determines whether the specified Object is equal to the current Object.</summary>
      <returns>true if the specified Object is equal to the current Object; otherwise, false.</returns>
      <param name="obj">The Object to compare with the current Object.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.BaseShadow.GetHashCode">
      <summary>Returns the hash code for this instance.</summary>
      <returns>A 32-bit signed integer hash code.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.BaseShadow.GetShadowAttacher(System.Type)">
      <summary>Used for dynamically restoring of arrays of private types.</summary>
      <returns>The <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.BaseShadow.ElementConverter" /> delegate for the AttachShadow method.</returns>
      <param name="type">The type, potentially an array or pointer.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.BaseShadow.GetTargetObject(System.Object)">
      <summary>Static function that will be used with <see cref="M:Microsoft.VisualStudio.TestTools.UnitTesting.BaseShadow.TransferArray(System.Array,System.Type,Microsoft.VisualStudio.TestTools.UnitTesting.BaseShadow.ElementConverter)" /> for deep array copy with unshadowing the real target <see cref="T:System.Type" /> objects.</summary>
      <returns>If <paramref name="Source" /> is a shadow, returns the underlying target <see cref="T:System.Type" />; otherwise returns <paramref name="Source" />.</returns>
      <param name="source"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.BaseShadow.GetTargetType(System.Type)">
      <summary>Returns the target <see cref="T:System.Type" /> for a potential shadow class. </summary>
      <returns>Returns the target <see cref="T:System.Type" /> for a potential shadow class. If the passed type is not a shadow type, it returns the same type.</returns>
      <param name="type">The type to examine.</param>
    </member>
    <member name="F:Microsoft.VisualStudio.TestTools.UnitTesting.BaseShadow.m_privateObject">
      <summary>The <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject" /> stored in this instance.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.BaseShadow.MakeArrayType(System.Type,System.Int32)">
      <summary>Returns a <see cref="T:System.Type" /> object that represents an array of the specified type, with the specified number of dimensions.</summary>
      <returns>A <see cref="T:System.Type" /> object that represents an array of the specified type, with the specified number of dimensions.</returns>
      <param name="elementType">The element type for the array.</param>
      <param name="rank">The number of dimensions for the array.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.BaseShadow.MakeByRefType(System.Type)">
      <summary>Returns a <see cref="T:System.Type" /> object that represents the specified type when it is passed as a ref parameter.</summary>
      <returns>A <see cref="T:System.Type" /> object that represents the current type when it is passed as a ref parameter.</returns>
      <param name="elementType">The element type.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.BaseShadow.MakePointerType(System.Type)">
      <summary>Returns a <see cref="T:System.Type" /> object that represents a pointer to the specified type.</summary>
      <returns>A <see cref="T:System.Type" /> object that represents a pointer to the specified type.</returns>
      <param name="elementType">The element type.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.BaseShadow.Same(System.Object)">
      <summary>Dummy method used to transfer the arrays of the same <see cref="T:System.Type" />. This is the failsafe implementation of the <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.BaseShadow.ElementConverter" /> delegate used for arrays of the same type.</summary>
      <returns>Returns the <paramref name="source" /> object.</returns>
      <param name="source">The source object.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.BaseShadow.Target">
      <summary>Gets the target object.</summary>
      <returns>The stored object.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.BaseShadow.ToString">
      <summary>Returns a <see cref="T:System.String" /> that represents the current <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.BaseShadow" /> object.</summary>
      <returns>A <see cref="T:System.String" /> that represents the current <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.BaseShadow" /> object.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.BaseShadow.TransferArray(System.Array,System.Type,Microsoft.VisualStudio.TestTools.UnitTesting.BaseShadow.ElementConverter)">
      <summary>Performs a deep copy of an array of one <see cref="T:System.Type" /> into a similar array of different <see cref="T:System.Type" />.</summary>
      <returns>An array with the same characteristics (rank and dimension limitations) as the original array.</returns>
      <param name="source">The source array.</param>
      <param name="targetType">The type of the target array.</param>
      <param name="converter">The method which performs the conversion between the elements of the arrays.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.UnitTesting.BaseShadow.ElementConverter">
      <summary>Delegate used for deep copying of arrays. Converts the source element of an array into the target element.</summary>
      <returns>The target element of the deep copy.</returns>
      <param name="source">The source element to deep copy.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.UnitTesting.BeforeAssemblyCleanupEventArgs">
      <summary>Provides data for the <see cref="E:Microsoft.VisualStudio.TestTools.UnitTesting.TestExecution.BeforeAssemblyCleanup" /> event.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.UnitTesting.BeforeAssemblyInitializeEventArgs">
      <summary>Provides data for the <see cref="E:Microsoft.VisualStudio.TestTools.UnitTesting.TestExecution.BeforeAssemblyInitialize" /> event.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.UnitTesting.BeforeClassCleanupEventArgs">
      <summary>Provides data for the <see cref="E:Microsoft.VisualStudio.TestTools.UnitTesting.TestExecution.BeforeClassCleanup" /> event.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.UnitTesting.BeforeClassInitializeEventArgs">
      <summary>Provides data for the <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.BeforeClassInitializeEventArgs" /> event.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.UnitTesting.BeforeTestCleanupEventArgs">
      <summary>Provides data for the <see cref="E:Microsoft.VisualStudio.TestTools.UnitTesting.TestExecution.BeforeTestCleanup" /> event.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.UnitTesting.BeforeTestInitializeEventArgs">
      <summary>Provides data for the <see cref="E:Microsoft.VisualStudio.TestTools.UnitTesting.TestExecution.BeforeTestInitialize" /> event.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute">
      <summary>Identifies a method that contains code to be used after all the tests in the test class have run and to free resources obtained by the test class. This class cannot be inherited. </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute" /> class.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute">
      <summary>Identifies a method that contains code that must be used before any of the tests in the test class have run and to allocate resources to be used by the test class. This class cannot be inherited. </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute" /> class.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.UnitTesting.CollectionAssert">
      <summary>Verifies true/false propositions associated with collections in unit tests.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.CollectionAssert.AllItemsAreInstancesOfType(System.Collections.ICollection,System.Type)">
      <summary>Verifies that all elements in the specified collection are instances of the specified type. The assertion fails if for any element the type is not found in its inheritance hierarchy.</summary>
      <param name="collection">The collection to verify.</param>
      <param name="expectedType">The type expected to be found in the inheritance hierarchy of every element in <paramref name="collection" />.</param>
      <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">An element in <paramref name="collection" /> is null or <paramref name="expectedType" /> is not found in the inheritance hierarchy of all elements  in <paramref name="collection" />.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.CollectionAssert.AllItemsAreInstancesOfType(System.Collections.ICollection,System.Type,System.String)">
      <summary>Verifies that all elements in the specified collection are instances of the specified type. The assertion fails if there exists one element in the collection for which the specified type is not found in its inheritance hierarchy. Displays a message if the assertion fails.</summary>
      <param name="collection">The collection to verify.</param>
      <param name="expectedType">The type expected to be found in the inheritance hierarchy of every element in <paramref name="collection" />.</param>
      <param name="message">A message to display if the assertion fails. This message can be seen in the unit test results.</param>
      <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">An element in <paramref name="collection" /> is null or <paramref name="expectedType" /> is not found in the inheritance hierarchy of all elements in <paramref name="collection" />.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.CollectionAssert.AllItemsAreInstancesOfType(System.Collections.ICollection,System.Type,System.String,System.Object[])">
      <summary>Verifies that all elements in the specified collection are instances of the specified type. The assertion fails if there exists one element in the collection for which the specified type is not found in its inheritance hierarchy. Displays a message if the assertion fails, and applies the specified formatting to it.</summary>
      <param name="collection">The collection to verify.</param>
      <param name="expectedType">The type expected to be found in the inheritance hierarchy of every element in <paramref name="collection" />.</param>
      <param name="message">A message to display if the assertion fails. This message can be seen in the unit test results.</param>
      <param name="parameters">An array of parameters to use when formatting <paramref name="message" />.</param>
      <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">An element in <paramref name="collection" /> is null or <paramref name="expectedType" /> is not found in the inheritance hierarchy of all elements in <paramref name="collection" />.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.CollectionAssert.AllItemsAreNotNull(System.Collections.ICollection)">
      <summary>Verifies that all items in the specified collection are not null. The assertion fails if any element is null.</summary>
      <param name="collection">The collection in which to search for elements that are null.</param>
      <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">An element which is null is found in <paramref name="collection" />.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.CollectionAssert.AllItemsAreNotNull(System.Collections.ICollection,System.String)">
      <summary>Verifies that all items in the specified collection are not null. The assertion fails if any element is null. Displays a message if the assertion fails.</summary>
      <param name="collection">The collection in which to search for elements that are null.</param>
      <param name="message">A message to display if the assertion fails. This message can be seen in the unit test results.</param>
      <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">An element which is null is found in <paramref name="collection" />.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.CollectionAssert.AllItemsAreNotNull(System.Collections.ICollection,System.String,System.Object[])">
      <summary>Verifies that all items in the specified collection are not null. The assertion fails if any element is null. Displays a message if the assertion fails, and applies the specified formatting to it.</summary>
      <param name="collection">The collection in which to search for elements that are null.</param>
      <param name="message">A message to display if the assertion fails. This message can be seen in the unit test results.</param>
      <param name="parameters">An array of parameters to use when formatting <paramref name="message" />.</param>
      <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">An element which is null is found in <paramref name="collection" />.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.CollectionAssert.AllItemsAreUnique(System.Collections.ICollection)">
      <summary>Verifies that all items in the specified collection are unique. The assertion fails if any two elements in the collection are equal.</summary>
      <param name="collection">The collection in which to search for duplicate elements.</param>
      <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">Two or more equal elements are found in <paramref name="collection" />.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.CollectionAssert.AllItemsAreUnique(System.Collections.ICollection,System.String)">
      <summary>Verifies that all items in the specified collection are unique. The assertion fails if any two elements in the collection are equal. Displays a message if the assertion fails.</summary>
      <param name="collection">The collection in which to search for duplicate elements.</param>
      <param name="message">A message to display if the assertion fails. This message can be seen in the unit test results.</param>
      <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">Two or more equal elements are found in <paramref name="collection" />.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.CollectionAssert.AllItemsAreUnique(System.Collections.ICollection,System.String,System.Object[])">
      <summary>Verifies that all items in the specified collection are unique. The assertion fails if any two elements in the collection are equal. Displays a message if the assertion fails, and applies the specified formatting to it.</summary>
      <param name="collection">The collection in which to search for duplicate elements.</param>
      <param name="message">A message to display if the assertion fails. This message can be seen in the unit test results.</param>
      <param name="parameters">An array of parameters to use when formatting <paramref name="message" />.</param>
      <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">Two or more equal elements are found in <paramref name="collection" />.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.CollectionAssert.AreEqual(System.Collections.ICollection,System.Collections.ICollection)">
      <summary>Verifies that two specified collections are equal. The assertion fails if the collections are not equal.</summary>
      <param name="expected">The first collection to compare. This is the collection the unit test expects.</param>
      <param name="actual">The second collection to compare. This is the collection the unit test produced.</param>
      <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
        <paramref name="expected" /> is not equal to <paramref name="actual" />.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.CollectionAssert.AreEqual(System.Collections.ICollection,System.Collections.ICollection,System.Collections.IComparer)">
      <summary>Verifies that two specified collections are equal, using the specified method to compare the values of elements. The assertion fails if the collections are not equal.</summary>
      <param name="expected">The first collection to compare. This is the collection the unit test expects.</param>
      <param name="actual">The second collection to compare. This is the collection the unit test produced.</param>
      <param name="comparer">The compare implementation to use when comparing elements of the collection.</param>
      <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
        <paramref name="expected" /> is not equal to <paramref name="actual" />.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.CollectionAssert.AreEqual(System.Collections.ICollection,System.Collections.ICollection,System.Collections.IComparer,System.String)">
      <summary>Verifies that two specified collections are equal, using the specified method to compare the values of elements. The assertion fails if the collections are not equal. Displays a message if the assertion fails.</summary>
      <param name="expected">The first collection to compare. This is the collection the unit test expects.</param>
      <param name="actual">The second collection to compare. This is the collection the unit test produced.</param>
      <param name="comparer">The compare implementation to use when comparing elements of the collection.</param>
      <param name="message">A message to display if the assertion fails. This message can be seen in the unit test results.</param>
      <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
        <paramref name="expected" /> is not equal to <paramref name="actual" />.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.CollectionAssert.AreEqual(System.Collections.ICollection,System.Collections.ICollection,System.Collections.IComparer,System.String,System.Object[])">
      <summary>Verifies that two specified collections are equal, using the specified method to compare the values of elements. The assertion fails if the collections are not equal. Displays a message if the assertion fails, and applies the specified formatting to it.</summary>
      <param name="expected">The first collection to compare. This is the collection the unit test expects.</param>
      <param name="actual">The second collection to compare. This is the collection the unit test produced.</param>
      <param name="comparer">The compare implementation to use when comparing elements of the collection.</param>
      <param name="message">A message to display if the assertion fails. This message can be seen in the unit test results.</param>
      <param name="parameters">An array of parameters to use when formatting <paramref name="message" />.</param>
      <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
        <paramref name="expected" /> is not equal to <paramref name="actual" />.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.CollectionAssert.AreEqual(System.Collections.ICollection,System.Collections.ICollection,System.String)">
      <summary>Verifies that two specified collections are equal. The assertion fails if the collections are not equal. Displays a message if the assertion fails.</summary>
      <param name="expected">The first collection to compare. This is the collection the unit test expects.</param>
      <param name="actual">The second collection to compare. This is the collection the unit test produced.</param>
      <param name="message">A message to display if the assertion fails. This message can be seen in the unit test results.</param>
      <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
        <paramref name="expected" /> is not equal to <paramref name="actual" />.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.CollectionAssert.AreEqual(System.Collections.ICollection,System.Collections.ICollection,System.String,System.Object[])">
      <summary>Verifies that two specified collections are equal. The assertion fails if the collections are not equal. Displays a message if the assertion fails, and applies the specified formatting to it.</summary>
      <param name="expected">The first collection to compare. This is the collection the unit test expects.</param>
      <param name="actual">The second collection to compare. This is the collection the unit test produced.</param>
      <param name="message">A message to display if the assertion fails. This message can be seen in the unit test results.</param>
      <param name="parameters">An array of parameters to use when formatting <paramref name="message" />.</param>
      <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
        <paramref name="expected" /> is not equal to <paramref name="actual" />.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.CollectionAssert.AreEquivalent(System.Collections.ICollection,System.Collections.ICollection)">
      <summary>Verifies that two specified collections are equivalent. The assertion fails if the collections are not equivalent.</summary>
      <param name="expected">The first collection to compare. This contains the elements the unit test expects.</param>
      <param name="actual">The second collection to compare. This is the collection the unit test produced.</param>
      <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">An element was found in one of the collections but not in the other.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.CollectionAssert.AreEquivalent(System.Collections.ICollection,System.Collections.ICollection,System.String)">
      <summary>Verifies that two specified collections are equivalent. The assertion fails if the collections are not equivalent. Displays a message if the assertion fails.</summary>
      <param name="expected">The first collection to compare. This contains the elements the unit test expects.</param>
      <param name="actual">The second collection to compare. This is the collection the unit test produced.</param>
      <param name="message">A message to display if the assertion fails. This message can be seen in the unit test results.</param>
      <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">An element was found in one of the collections but not in the other.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.CollectionAssert.AreEquivalent(System.Collections.ICollection,System.Collections.ICollection,System.String,System.Object[])">
      <summary>Verifies that two specified collections are equivalent. The assertion fails if the collections are not equivalent. Displays a message if the assertion fails, and applies the specified formatting to it.</summary>
      <param name="expected">The first collection to compare. This contains the elements the unit test expects.</param>
      <param name="actual">The second collection to compare. This is the collection the unit test produced.</param>
      <param name="message">A message to display if the assertion fails. This message can be seen in the unit test results.</param>
      <param name="parameters">An array of parameters to use when formatting <paramref name="message" />.</param>
      <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">An element was found in one of the collections but not the other.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.CollectionAssert.AreNotEqual(System.Collections.ICollection,System.Collections.ICollection)">
      <summary>Verifies that two specified collections are not equal. The assertion fails if the collections are equal.</summary>
      <param name="notExpected">The first collection to compare. This is the collection that the unit test does not expect to match <paramref name="actual" />.</param>
      <param name="actual">The second collection to compare. This is the collection the unit test produced.</param>
      <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
        <paramref name="expected" /> is equal to <paramref name="actual" />.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.CollectionAssert.AreNotEqual(System.Collections.ICollection,System.Collections.ICollection,System.Collections.IComparer)">
      <summary>Verifies that two specified collections are not equal, using the specified method to compare the values of elements. The assertion fails if the collections are equal.</summary>
      <param name="notExpected">The first collection to compare. This is the collection that the unit test does not expect to match <paramref name="actual" />.</param>
      <param name="actual">The second collection to compare. This is the collection the unit test produced.</param>
      <param name="comparer">The compare implementation to use when comparing elements of the collection.</param>
      <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
        <paramref name="expected" /> is equal to <paramref name="actual" />.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.CollectionAssert.AreNotEqual(System.Collections.ICollection,System.Collections.ICollection,System.Collections.IComparer,System.String)">
      <summary>Verifies that two specified collections are not equal, using the specified method to compare the values of elements. The assertion fails if the collections are equal. Displays a message if the assertion fails.</summary>
      <param name="notExpected">The first collection to compare. This is the collection that the unit test does not expect to match <paramref name="actual" />.</param>
      <param name="actual">The second collection to compare. This is the collection the unit test produced.</param>
      <param name="comparer">The compare implementation to use when comparing elements of the collection.</param>
      <param name="message">A message to display if the assertion fails. This message can be seen in the unit test results.</param>
      <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
        <paramref name="expected" /> is equal to <paramref name="actual" />.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.CollectionAssert.AreNotEqual(System.Collections.ICollection,System.Collections.ICollection,System.Collections.IComparer,System.String,System.Object[])">
      <summary>Verifies that two specified collections are not equal, using the specified method to compare the values of elements. The assertion fails if the collections are equal. Displays a message if the assertion fails, and applies the specified formatting to it.</summary>
      <param name="notExpected">The first collection to compare. This is the collection that the unit test does not expect to match <paramref name="actual" />.</param>
      <param name="actual">The second collection to compare. This is the collection the unit test produced.</param>
      <param name="comparer">The compare implementation to use when comparing elements of the collection.</param>
      <param name="message">A message to display if the assertion fails. This message can be seen in the unit test results.</param>
      <param name="parameters">An array of parameters to use when formatting <paramref name="message" />.</param>
      <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
        <paramref name="expected" /> is equal to <paramref name="actual" />.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.CollectionAssert.AreNotEqual(System.Collections.ICollection,System.Collections.ICollection,System.String)">
      <summary>Verifies that two specified collections are not equal. The assertion fails if the collections are equal. Displays a message if the assertion fails.</summary>
      <param name="notExpected">The first collection to compare. This is the collection that the unit test does not expect to match <paramref name="actual" />.</param>
      <param name="actual">The second collection to compare. This is the collection the unit test produced.</param>
      <param name="message">A message to display if the assertion fails. This message can be seen in the unit test results.</param>
      <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
        <paramref name="expected" /> is equal to <paramref name="actual" />.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.CollectionAssert.AreNotEqual(System.Collections.ICollection,System.Collections.ICollection,System.String,System.Object[])">
      <summary>Verifies that two specified collections are not equal. The assertion fails if the collections are equal. Displays a message if the assertion fails, and applies the specified formatting to it.</summary>
      <param name="notExpected">The first collection to compare. This is the collection that the unit test does not expect to match <paramref name="actual" />.</param>
      <param name="actual">The second collection to compare. This is the collection the unit test produced.</param>
      <param name="message">A message to display if the assertion fails. This message can be seen in the unit test results.</param>
      <param name="parameters">An array of parameters to use when formatting <paramref name="message" />.</param>
      <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
        <paramref name="expected" /> is equal to <paramref name="actual" />.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.CollectionAssert.AreNotEquivalent(System.Collections.ICollection,System.Collections.ICollection)">
      <summary>Verifies that two specified collections are not equivalent. The assertion fails if the collections are equivalent.</summary>
      <param name="expected">The first collection to compare. This contains the elements the unit test expects to be different from the actual collection.</param>
      <param name="actual">The second collection to compare. This is the collection the unit test produced.</param>
      <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">The two collections contain the same elements, including the same number of duplicate occurrences of each element.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.CollectionAssert.AreNotEquivalent(System.Collections.ICollection,System.Collections.ICollection,System.String)">
      <summary>Verifies that two specified collections are not equivalent. The assertion fails if the collections are equivalent. Displays a message if the assertion fails.</summary>
      <param name="expected">The first collection to compare. This contains the elements the unit test expects to be different from the actual collection.</param>
      <param name="actual">The second collection to compare. This is the collection the unit test produced.</param>
      <param name="message">A message to display if the assertion fails. This message can be seen in the unit test results.</param>
      <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">The two collections contain the same elements, including the same number of duplicate occurrences of each element.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.CollectionAssert.AreNotEquivalent(System.Collections.ICollection,System.Collections.ICollection,System.String,System.Object[])">
      <summary>Verifies that two specified collections are not equivalent. The assertion fails if the collections are equivalent. Displays a message if the assertion fails, and applies the specified formatting to it.</summary>
      <param name="expected">The first collection to compare. This contains the elements the unit test expects to be different from the actual collection.</param>
      <param name="actual">The second collection to compare. This is the collection the unit test produced.</param>
      <param name="message">A message to display if the assertion fails. This message can be seen in the unit test results.</param>
      <param name="parameters">An array of parameters to use when formatting <paramref name="message" />.</param>
      <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">The two collections contain the same elements, including the same number of duplicate occurrences of each element.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.CollectionAssert.Contains(System.Collections.ICollection,System.Object)">
      <summary>Verifies that the specified collection contains the specified element. The assertion fails if the element is not found in the collection.</summary>
      <param name="collection">The collection in which to search for the element.</param>
      <param name="element">The element that is expected to be in the collection.</param>
      <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
        <paramref name="element" /> is not found in <paramref name="collection" />.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.CollectionAssert.Contains(System.Collections.ICollection,System.Object,System.String)">
      <summary>Verifies that the specified collection contains the specified element. The assertion fails if the element is not found in the collection. Displays a message if the assertion fails.</summary>
      <param name="collection">The collection in which to search for the element.</param>
      <param name="element">The element that is expected to be in the collection.</param>
      <param name="message">A message to display if the assertion fails. This message can be seen in the unit test results.</param>
      <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
        <paramref name="element" /> is not found in <paramref name="collection" />.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.CollectionAssert.Contains(System.Collections.ICollection,System.Object,System.String,System.Object[])">
      <summary>Verifies that the specified collection contains the specified element. The assertion fails if the element is not found in the collection. Displays a message if the assertion fails, and applies the specified formatting to it.</summary>
      <param name="collection">The collection in which to search for the element.</param>
      <param name="element">The element that is expected to be in the collection.</param>
      <param name="message">A message to display if the assertion fails. This message can be seen in the unit test results.</param>
      <param name="parameters">An array of parameters to use when formatting <paramref name="message" />.</param>
      <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
        <paramref name="element" /> is not found in <paramref name="collection" />.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.CollectionAssert.DoesNotContain(System.Collections.ICollection,System.Object)">
      <summary>Verifies that the specified collection does not contain the specified element. The assertion fails if the element is found in the collection.</summary>
      <param name="collection">The collection in which to search for the element.</param>
      <param name="element">The element that is not expected to be in the collection.</param>
      <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
        <paramref name="element" /> is found in <paramref name="collection" />.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.CollectionAssert.DoesNotContain(System.Collections.ICollection,System.Object,System.String)">
      <summary>Verifies that the specified collection does not contain the specified element. The assertion fails if the element is found in the collection. Displays a message if the assertion fails.</summary>
      <param name="collection">The collection in which to search for the element.</param>
      <param name="element">The element that is not expected to be in the collection.</param>
      <param name="message">A message to display if the assertion fails. This message can be seen in the unit test results.</param>
      <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
        <paramref name="element" /> is found in <paramref name="collection" />.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.CollectionAssert.DoesNotContain(System.Collections.ICollection,System.Object,System.String,System.Object[])">
      <summary>Verifies that the specified collection does not contain the specified element. The assertion fails if the element is found in the collection. Displays a message if the assertion fails, and applies the specified formatting to it.</summary>
      <param name="collection">The collection in which to search for the element.</param>
      <param name="element">The element that is not expected to be in the collection.</param>
      <param name="message">A message to display if the assertion fails. This message can be seen in the unit test results.</param>
      <param name="parameters">An array of parameters to use when formatting <paramref name="message" />.</param>
      <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
        <paramref name="element" /> is found in <paramref name="collection" />.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.CollectionAssert.IsNotSubsetOf(System.Collections.ICollection,System.Collections.ICollection)">
      <summary>Verifies that the first collection is not a subset of the second collection.</summary>
      <param name="subset">The collection not expected to be a subset of <paramref name="superset" />.</param>
      <param name="superset">The collection not expected to be a superset of <paramref name="subset" />.</param>
      <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">All elements in <paramref name="subset" /> are found in <paramref name="superset" />Â and are found in sufficient quantity.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.CollectionAssert.IsNotSubsetOf(System.Collections.ICollection,System.Collections.ICollection,System.String)">
      <summary>Verifies that the first collection is not a subset of the second collection. Displays a message if the assertion fails.</summary>
      <param name="subset">The collection not expected to be a subset of <paramref name="superset" />.</param>
      <param name="superset">The collection not expected to be a superset of <paramref name="subset" />.</param>
      <param name="message">A message to display if the assertion fails. This message can be seen in the unit test results.</param>
      <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">All elements in <paramref name="subset" /> are found in <paramref name="superset" />Â and are found in sufficient quantity.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.CollectionAssert.IsNotSubsetOf(System.Collections.ICollection,System.Collections.ICollection,System.String,System.Object[])">
      <summary>Verifies that the first collection is not a subset of the second collection. Displays a message if the assertion fails, and applies the specified formatting to it.</summary>
      <param name="subset">The collection not expected to be a subset of <paramref name="superset" />.</param>
      <param name="superset">The collection not expected to be a superset of <paramref name="subset" />.</param>
      <param name="message">A message to display if the assertion fails. This message can be seen in the unit test results.</param>
      <param name="parameters">An array of parameters to use when formatting <paramref name="message" />.</param>
      <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">All elements in <paramref name="subset" /> are found in <paramref name="superset" />Â and are found in sufficient quantity.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.CollectionAssert.IsSubsetOf(System.Collections.ICollection,System.Collections.ICollection)">
      <summary>Verifies that the first collection is a subset of the second collection.</summary>
      <param name="subset">The collection expected to be a subset of <paramref name="superset" />.</param>
      <param name="superset">The collection expected to be a superset of <paramref name="subset" />.</param>
      <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">An element in <paramref name="subset" /> is not found in <paramref name="superset" />Â or an element in <paramref name="subset" /> is not found in <paramref name="superset" /> in sufficient quantity.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.CollectionAssert.IsSubsetOf(System.Collections.ICollection,System.Collections.ICollection,System.String)">
      <summary>Verifies that the first collection is a subset of the second collection. Displays a message if the assertion fails.</summary>
      <param name="subset">The collection expected to be a subset of <paramref name="superset" />.</param>
      <param name="superset">The collection expected to be a superset of <paramref name="subset" />.</param>
      <param name="message">A message to display if the assertion fails. This message can be seen in the unit test results.</param>
      <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">An element in <paramref name="subset" /> is not found in <paramref name="superset" /> or an element in <paramref name="subset" /> is not found in <paramref name="superset" /> in sufficient quantity.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.CollectionAssert.IsSubsetOf(System.Collections.ICollection,System.Collections.ICollection,System.String,System.Object[])">
      <summary>Verifies that the first collection is a subset of the second collection. Displays a message if the assertion fails, and applies the specified formatting to it.</summary>
      <param name="subset">The collection expected to be a subset of <paramref name="superset" />.</param>
      <param name="superset">The collection expected to be a superset of <paramref name="subset" />.</param>
      <param name="message">A message to display if the assertion fails. This message can be seen in the unit test results.</param>
      <param name="parameters">An array of parameters to use when formatting <paramref name="message" />.</param>
      <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">An element in <paramref name="subset" /> is not found in <paramref name="superset" /> or an element in <paramref name="subset" /> is not found in <paramref name="superset" /> in sufficient quantity.</exception>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.UnitTesting.CssIterationAttribute">
      <summary>Represents the project iteration to which this test corresponds. This class cannot be inherited. </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.CssIterationAttribute.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.CssIterationAttribute" /> class. </summary>
      <param name="cssIteration">A string that identifies the corresponding project iteration.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.CssIterationAttribute.CssIteration">
      <summary>Gets the iteration identifier for the test.</summary>
      <returns>An iteration identifier.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.UnitTesting.CssProjectStructureAttribute">
      <summary>Represents the node in the team project hierarchy to which this test corresponds. </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.CssProjectStructureAttribute.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.CssProjectStructureAttribute" /> class. </summary>
      <param name="cssProjectStructure">A string that identifies the corresponding project feature.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.CssProjectStructureAttribute.CssProjectStructure">
      <summary>Gets the project feature identifier for the test.</summary>
      <returns>A project feature identifier.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.UnitTesting.DataAccessMethod">
      <summary>Specifies constants that indicate how data rows are accessed in data-driven testing. </summary>
    </member>
    <member name="F:Microsoft.VisualStudio.TestTools.UnitTesting.DataAccessMethod.Sequential">
      <summary>Rows are returned in a sequential order.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.TestTools.UnitTesting.DataAccessMethod.Random">
      <summary>Rows are returned in a random order.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.UnitTesting.DataSourceAttribute">
      <summary>Provides data source-specific information for data-driven testing. This class cannot be inherited.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.DataSourceAttribute.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.DataSourceAttribute" /> class.  This instance will be initialized with a data provider and connection string associated with the setting name.</summary>
      <param name="dataSourceSettingName">The name of a data source found in the &lt;microsoft.visualstudio.qualitytools&gt; section in the app.config file.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.DataSourceAttribute.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.DataSourceAttribute" /> class. This instance will be initialized with a connection string and table name.</summary>
      <param name="connectionString">Data provider-specific connection string. </param>
      <param name="tableName">The name of the data table.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.DataSourceAttribute.#ctor(System.String,System.String,System.String,Microsoft.VisualStudio.TestTools.UnitTesting.DataAccessMethod)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.DataSourceAttribute" /> class.  This instance will be initialized with a data provider, connection string, data table and data access method to access the data source.</summary>
      <param name="providerInvariantName">Invariant data provider name, such as System.Data.SqlClient.</param>
      <param name="connectionString">A data provider-specific connection string. </param>
      <param name="tableName">The name of the data table.</param>
      <param name="dataAccessMethod">Specifies the order to access data.  It takes a <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.DataAccessMethod" />.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.DataSourceAttribute.ConnectionString">
      <summary>Gets a value representing the connection string for the data source.</summary>
      <returns>The connection string used to access the data source.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.DataSourceAttribute.DataAccessMethod">
      <summary>Gets the method used to access the data source.</summary>
      <returns>One of the <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.DataAccessMethod" /> values. If the <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.DataSourceAttribute" /> is not initialized, this will return the default value <see cref="F:Microsoft.VisualStudio.TestTools.UnitTesting.DataAccessMethod.Random" />.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.DataSourceAttribute.DataSourceSettingName">
      <summary>Gets a value indicating the setting name used to identify data source connection information stored in a configuration file.</summary>
      <returns>The name of a data source found in the &lt;microsoft.visualstudio.qualitytools&gt; section in the app.config file.</returns>
    </member>
    <member name="F:Microsoft.VisualStudio.TestTools.UnitTesting.DataSourceAttribute.DefaultDataAccessMethod">
      <summary>Represents the default data access method. This field is read-only.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.TestTools.UnitTesting.DataSourceAttribute.DefaultProviderName">
      <summary>Represents the default data provider name. This field is read-only.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.DataSourceAttribute.ProviderInvariantName">
      <summary>Gets a value representing the data provider of the data source.</summary>
      <returns>The data provider name. If a data provider was not designated at object initialization, the default provider of System.Data.OleDb will be returned.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.DataSourceAttribute.TableName">
      <summary>Gets a value indicating the table name providing data.</summary>
      <returns>The table name providing data for the test.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.UnitTesting.DataSourceElement">
      <summary>Represents a data source element as an XML tag within a configuration file. </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.DataSourceElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.DataSourceElement" /> class.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.DataSourceElement.ConnectionString">
      <summary>Gets or sets the connection string setting element in the &lt;connectionStrings&gt; section in the app.config file.</summary>
      <returns>A connection string.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.DataSourceElement.DataAccessMethod">
      <summary>Gets or sets the data source access method element in the app.config file.</summary>
      <returns>The data source access method.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.DataSourceElement.DataTableName">
      <summary>Gets or sets the table name setting element in the app.config file.</summary>
      <returns>A table name.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.DataSourceElement.Name">
      <summary>Gets or sets the data source name setting element in the app.config file.</summary>
      <returns>A data source name.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.UnitTesting.DataSourceElementCollection">
      <summary>Represents an XML element that contains a collection of child <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.DataSourceElement" /> objects. </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.DataSourceElementCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.DataSourceElementCollection" /> class.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.DataSourceElementCollection.Add(Microsoft.VisualStudio.TestTools.UnitTesting.DataSourceElement)">
      <summary>Adds a data source element to <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.DataSourceElementCollection" />.</summary>
      <param name="element">The <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.DataSourceElement" /> to add to the collection.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.DataSourceElementCollection.Clear">
      <summary>Removes all data source element objects from the collection.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.DataSourceElementCollection.Item(System.Int32)">
      <summary>Gets or sets a <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.DataSourceElement" /> at the specified index location.</summary>
      <returns>A <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.DataSourceElement" /> object.</returns>
      <param name="index">The location of the <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.DataSourceElement" />.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.DataSourceElementCollection.Item(System.String)">
      <summary>Gets a <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.DataSourceElement" /> identified by name.</summary>
      <returns>A <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.DataSourceElement" /> object, or null if the <paramref name="name" /> key does not exist.</returns>
      <param name="name">The name of the <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.DataSourceElement" /> to return.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.DataSourceElementCollection.Remove(Microsoft.VisualStudio.TestTools.UnitTesting.DataSourceElement)">
      <summary>Removes a <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.DataSourceElement" /> from the collection.</summary>
      <param name="element">The element to remove from the collection.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.DataSourceElementCollection.Remove(System.String)">
      <summary>Removes a <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.DataSourceElement" /> from the collection.</summary>
      <param name="name">The name of the element to remove.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.UnitTesting.DeploymentItemAttribute">
      <summary>Used to specify deployment items such as files or directories for per-test deployment. This class cannot be inherited. </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.DeploymentItemAttribute.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.DeploymentItemAttribute" /> class. An object that is created with this constructor will be initialized with a path to a deployment item or directory.</summary>
      <param name="path">The relative or absolute path to the deployment item or directory to deploy. All items or directories will be deployed to the directory where the deployed test assemblies reside.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.DeploymentItemAttribute.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.DeploymentItemAttribute" /> class. An object that is created with this constructor will be initialized with a path to a deployment item and an output directory.</summary>
      <param name="path">The relative or absolute path to the deployment item or directory to deploy.</param>
      <param name="outputDirectory">The path to the output directory. This contains all items and directories identified by <paramref name="path" />. This directory will be relative to the directory that contains the deployed test assemblies.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.DeploymentItemAttribute.OutputDirectory">
      <summary>Gets a value that represents the path to the output directory.</summary>
      <returns>A value that represents the directory under the deployment directory that will contain the deployed files and directories.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.DeploymentItemAttribute.Path">
      <summary>Gets a value that represents the path to the deployment item.</summary>
      <returns>The path to the file or directory to deploy.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute">
      <summary>Used to specify the description of the test. This class cannot be inherited.  </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute" /> class.</summary>
      <param name="description">A short explanation of the test.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute.Description">
      <summary>Gets the description of the test.</summary>
      <returns>The test description.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.UnitTesting.ExpectedExceptionAttribute">
      <summary>Indicates that an exception is expected during test method execution. This class cannot be inherited. </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.ExpectedExceptionAttribute.#ctor(System.Type)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.ExpectedExceptionAttribute" /> class with an expected exception.</summary>
      <param name="exceptionType">An expected type of exception to be thrown by a method.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.ExpectedExceptionAttribute.#ctor(System.Type,System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.ExpectedExceptionAttribute" /> class with and expected exception type and a message that describes the exception.</summary>
      <param name="exceptionType">An expected type of exception to be thrown by a method.</param>
      <param name="noExceptionMessage"></param>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.ExpectedExceptionAttribute.AllowDerivedTypes"></member>
    <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.ExpectedExceptionAttribute.ExceptionType">
      <summary>Gets the expected exception type.</summary>
      <returns>A <see cref="T:System.Type" /> object.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.UnitTesting.ExpectedExceptionBaseAttribute">
      <summary>This is a base class for attributes that specify to expect an exception from a unit test.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.ExpectedExceptionBaseAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.ExpectedExceptionBaseAttribute" /> class.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.ExpectedExceptionBaseAttribute.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.ExpectedExceptionBaseAttribute" /> class.</summary>
      <param name="noExceptionMessage">If the test fails because an exception was not thrown, then this message is included in the test result.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.ExpectedExceptionBaseAttribute.NoExceptionMessage"></member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.ExpectedExceptionBaseAttribute.RethrowIfAssertException(System.Exception)"></member>
    <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.ExpectedExceptionBaseAttribute.TestContext"></member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.ExpectedExceptionBaseAttribute.Verify(System.Exception)">
      <param name="exception">The exception thrown by the unit test.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.UnitTesting.GenericParameterHelper">
      <summary>This class is a placeholder for use with generics. It helps you test generic types by letting you pass non-specific type arguments.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.GenericParameterHelper.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.GenericParameterHelper" /> class. This constructor initializes the <see cref="P:Microsoft.VisualStudio.TestTools.UnitTesting.GenericParameterHelper.Data" /> property to a random value.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.GenericParameterHelper.#ctor(System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.GenericParameterHelper" /> class. This constructor initializes the <see cref="P:Microsoft.VisualStudio.TestTools.UnitTesting.GenericParameterHelper.Data" /> property to a user specified value.</summary>
      <param name="data">The initial value for the <see cref="P:Microsoft.VisualStudio.TestTools.UnitTesting.GenericParameterHelper.Data" /> property.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.GenericParameterHelper.Clone">
      <summary>Creates a new <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.GenericParameterHelper" /> that is a copy of the current instance.</summary>
      <returns>A new <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.GenericParameterHelper" /> that is a copy of the current instance.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.GenericParameterHelper.CompareTo(System.Object)">
      <summary>Compares the current instance with another object of the same type and returns an integer that indicates whether the current instance precedes, follows, or occurs in the same position in the sort order as the other object.</summary>
      <returns>A 32-bit signed integer that indicates the relative order of the objects being compared. The return value has these meanings:Less than zeroThis instance is less than <paramref name="obj" />.ZeroThis instance is equal to <paramref name="obj" />.Greater than zeroThis instance is greater than <paramref name="obj" />.</returns>
      <param name="obj">A <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.GenericParameterHelper" /> to compare with the current instance.</param>
      <exception cref="NotSupportedException">
        <paramref name="obj" /> is not of type <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.GenericParameterHelper" />.</exception>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.GenericParameterHelper.Data">
      <summary>Gets or sets the Data property for this instance.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.GenericParameterHelper.Equals(System.Object)">
      <summary>Determines whether the specified <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.GenericParameterHelper" /> object is equal to the current <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.GenericParameterHelper" /> object.</summary>
      <returns>true if the specified <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.GenericParameterHelper" /> object is equal to the current <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.GenericParameterHelper" /> object; otherwise, false.</returns>
      <param name="obj">The <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.GenericParameterHelper" /> object to compare with the current <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.GenericParameterHelper" /> object.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.GenericParameterHelper.GetEnumerator">
      <summary>Returns an enumerator whose length is derived from the <see cref="P:Microsoft.VisualStudio.TestTools.UnitTesting.GenericParameterHelper.Data" /> property.</summary>
      <returns>An enumerator whose length is derived from the <see cref="P:Microsoft.VisualStudio.TestTools.UnitTesting.GenericParameterHelper.Data" /> property.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.GenericParameterHelper.GetHashCode">
      <summary>Returns the hash code for this <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.GenericParameterHelper" /> object.</summary>
      <returns>A 32-bit signed integer hash code for this <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.GenericParameterHelper" /> object.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.UnitTesting.HostTypeAttribute">
      <summary>Used to specify the type of host that this unit test will run in. This class cannot be inherited.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.HostTypeAttribute.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.HostTypeAttribute" /> class. This is instantiated with an argument that specifies the type of host that this unit test will run in.</summary>
      <param name="hostType">The type of host that this unit test will run in.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.HostTypeAttribute.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.HostTypeAttribute" /> class. This is instantiated with an argument that specifies the type of host that this unit test will run in, and custom data for the host adapter.</summary>
      <param name="hostType">The type of host that this unit test will run in.</param>
      <param name="hostData">Custom data for the host adapter.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.HostTypeAttribute.HostData">
      <summary>Gets custom data for the host adapter.</summary>
      <returns>Custom data for the host adapter.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.HostTypeAttribute.HostType">
      <summary>Gets a value that represents the type of host.</summary>
      <returns>A value that represents the type of host.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.UnitTesting.IgnoreAttribute">
      <summary>Indicates that a specific test should not be run.  This class cannot be inherited.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.IgnoreAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.IgnoreAttribute" /> class. </summary>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.UnitTesting.InternalTestFailureException">
      <summary>The exception that is thrown to indicate an internal failure for a test.  </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.InternalTestFailureException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.InternalTestFailureException" /> class without arguments.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.InternalTestFailureException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.InternalTestFailureException" /> class with serialized data. </summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
      <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="info" /> is null</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.InternalTestFailureException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.InternalTestFailureException" /> class with a specified error message. </summary>
      <param name="msg">The error message string.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.InternalTestFailureException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.InternalTestFailureException" /> class with a specified error message and a reference to the inner exception that is the cause of this exception. </summary>
      <param name="msg">The error message that explains the reason for the exception. </param>
      <param name="ex">The exception that is the cause of the current exception.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.UnitTesting.ITestMethodInvoker">
      <summary>Interface for invoking test method body.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.ITestMethodInvoker.Invoke(System.Object[])"></member>
    <member name="T:Microsoft.VisualStudio.TestTools.UnitTesting.OnTestStoppingEventArgs"></member>
    <member name="T:Microsoft.VisualStudio.TestTools.UnitTesting.OwnerAttribute">
      <summary>Used to specify the person responsible for maintaining, running, and/or debugging the test. This class cannot be inherited.  </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.OwnerAttribute.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.OwnerAttribute" /> class that uses an owner name.</summary>
      <param name="owner">The owner of the test.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.OwnerAttribute.Owner">
      <summary>Gets the owner of the test.</summary>
      <returns>The owner of the test.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.UnitTesting.PriorityAttribute">
      <summary>Used to specify the priority of a unit test.  This class cannot be inherited.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.PriorityAttribute.#ctor(System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.PriorityAttribute" /> class that has a priority value. </summary>
      <param name="priority">An integer that represents the priority value for the test.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.PriorityAttribute.Priority">
      <summary>Gets the priority value.</summary>
      <returns>An integer that represents the priority value for the test.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject">
      <summary>Allows test code to call methods and properties on the code under test that would be inaccessible because they are not public.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject.#ctor(System.Object)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject" /> class that creates the wrapper for the specified object.</summary>
      <param name="obj">The object to wrap.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="obj" /> is null</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject.#ctor(System.Object,Microsoft.VisualStudio.TestTools.UnitTesting.PrivateType)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject" /> class that creates the wrapper for the specified object. </summary>
      <param name="obj">The object to wrap.</param>
      <param name="type">The wrapped object type.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="type" /> is null</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject.#ctor(System.Object,System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject" /> class that creates the wrapper for the specified object.  </summary>
      <param name="obj">The object to wrap. This serves as starting point to reach the private members.</param>
      <param name="memberToAccess">The dereferencing string that points to the object to be retrieved. This takes the form of "objectX.objectY.objectZ".</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="memberToAccess" /> is a zero-length string</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="obj" /> is null or <paramref name="memberToAccess" /> is null</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject.#ctor(System.String,System.String,System.Object[])">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject" /> class. This creates the object of the specified type and wraps it in the private object.</summary>
      <param name="assemblyName">Name of the assembly that contains the type.</param>
      <param name="typeName">Fully qualified name of the type.</param>
      <param name="args">Arguments to pass to the constructor of the object.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="assemblyName" /> or <paramref name="typeName" /> is null.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject.#ctor(System.String,System.String,System.Type[],System.Object[])">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject" /> class. This creates an object of the specified type and wraps it in the private object.</summary>
      <param name="assemblyName">Name of the assembly that contains the type.</param>
      <param name="typeName">Fully qualified name of the type.</param>
      <param name="parameterTypes">An array of <see cref="T:System.Type" /> objects representing the number, order, and type of the parameters for constructing the object.</param>
      <param name="args">The arguments to define the object.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="assemblyName" /> or <paramref name="typeName" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="parameterTypes" /> is multidimensional.-or-A constructor cannot be found to match the parameters specified in <see cref="M:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject.#ctor(System.Type,System.Type[],System.Object[])" />. </exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject.#ctor(System.Type,System.Object[])">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject" /> class that creates the wrapper for the specified object.</summary>
      <param name="type">The wrapped object type.</param>
      <param name="args">The arguments to define the object.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="type" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="type" /> is not a RuntimeType.</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="type" /> cannot be a <see cref="T:System.Reflection.Emit.TypeBuilder" />.-or-Creation of <see cref="T:System.TypedReference" />, <see cref="T:System.ArgIterator" />, and <see cref="T:System.RuntimeArgumentHandle" /> types is not supported.</exception>
      <exception cref="T:System.Reflection.TargetInvocationException">The constructor being called throws an exception.</exception>
      <exception cref="T:System.Runtime.InteropServices.COMException">
        <paramref name="type" /> is a COM object but the class identifier used to obtain the type is invalid, or the identified class is not registered.</exception>
      <exception cref="T:System.TypeLoadException">
        <paramref name="type" /> is not a valid type.</exception>
      <exception cref="T:System.MissingMethodException">No matching public constructor was found to match the <paramref name="type" /> and <paramref name="args" />.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject.#ctor(System.Type,System.Type[],System.Object[])">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject" /> class. </summary>
      <param name="type">The wrapped object type.</param>
      <param name="parameterTypes">An array of <see cref="T:System.Type" /> objects representing the number, order, and type of the parameters for constructing the object.</param>
      <param name="args">The arguments to define the object.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="type" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="parameterTypes" /> is multidimensional.-or-A constructor cannot be found to match the parameters specified in <see cref="M:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject.#ctor(System.Type,System.Type[],System.Object[])" />. </exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject.Equals(System.Object)">
      <summary>Returns a value that indicates whether two private objects are encapsulating the same target object.</summary>
      <returns>true if the objects are equal; otherwise, false.</returns>
      <param name="obj">The object to compare.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject.GetArrayElement(System.String,System.Int32[])">
      <summary>Gets the array element by using an array of subscripts for each dimension.</summary>
      <returns>An object that represents the array element.</returns>
      <param name="name">The variable name of array to get.</param>
      <param name="indices">An array that represents the location of the element to get.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> is null.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject.GetArrayElement(System.String,System.Reflection.BindingFlags,System.Int32[])">
      <summary>Gets the array element by using an array of subscripts for each dimension.</summary>
      <returns>An object representing the array element.</returns>
      <param name="name">The variable name of array to get.</param>
      <param name="bindingFlags"></param>
      <param name="indices">An array representing the location of the element to get.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> is null.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject.GetField(System.String)">
      <summary>Gets a value from a named field, based on the name.</summary>
      <returns>The value set for the <paramref name="name" /> field.</returns>
      <param name="name">The name of the private field to get.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> is null or empty.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject.GetField(System.String,System.Reflection.BindingFlags)">
      <summary>Gets a value from a named field, based on the name and lookup mask.</summary>
      <returns>The value set for the <paramref name="name" /> field.</returns>
      <param name="name">The name of the private field to get.</param>
      <param name="bindingFlags"></param>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> is null or empty.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject.GetFieldOrProperty(System.String)">
      <summary>Gets a value of a wrapped field or property based on the name.</summary>
      <returns>The value set for the <paramref name="name" /> field or property.</returns>
      <param name="name">The name of the private field or property to get.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject.GetFieldOrProperty(System.String,System.Reflection.BindingFlags)">
      <summary>Gets a value of a wrapped field or property based on the name.</summary>
      <returns>The value set for the <paramref name="name" /> field or property.</returns>
      <param name="name">The name of the private field or property to get.</param>
      <param name="bindingFlags"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject.GetHashCode">
      <summary>Gets the hash code of the wrapped object.</summary>
      <returns>An integer that represents the hash code of the wrapped object.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject.GetProperty(System.String,System.Object[])">
      <summary>Gets a property for a wrapped object identified by name.</summary>
      <returns>An object that contains the value of the property identified by <paramref name="name" />.</returns>
      <param name="name">The name of property to get.</param>
      <param name="args">An array that contains the arguments to pass to the member to invoke.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> is null or empty.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject.GetProperty(System.String,System.Reflection.BindingFlags,System.Object[])">
      <summary>Gets a property for a wrapped object identified by name with binding flags.</summary>
      <returns>An object that contains the value of the property identified by <paramref name="name" />.</returns>
      <param name="name">The name of property to get.</param>
      <param name="bindingFlags"></param>
      <param name="args">An array that contains the arguments to pass to the member to invoke.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> is null or empty.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject.GetProperty(System.String,System.Reflection.BindingFlags,System.Type[],System.Object[])">
      <summary>Gets an indexed property for a wrapped object identified by name.</summary>
      <returns>An object that contains the value of the property identified by <paramref name="name" />.</returns>
      <param name="name">The name of property to get.</param>
      <param name="bindingFlags"></param>
      <param name="parameterTypes">An array of <see cref="T:System.Type" /> objects that represents the number, order, and type of the parameters for the indexed property to get.</param>
      <param name="args">An array that contains the arguments to pass to the member to invoke.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> is null or empty.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject.GetProperty(System.String,System.Type[],System.Object[])">
      <summary>Gets a property for a wrapped object identified by name.</summary>
      <returns>An object that contains the value of the property identified by <paramref name="name" />.</returns>
      <param name="name">The name of property to get.</param>
      <param name="parameterTypes">An array of <see cref="T:System.Type" /> objects representing the number, order, and type of the parameters for the indexed property to get.</param>
      <param name="args">An array that contains the arguments to pass to the member to invoke.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> is null or empty.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject.Invoke(System.String,System.Object[])">
      <summary>Used to access the members of the private object.</summary>
      <returns>An object that represents the return value of a private member.</returns>
      <param name="name">The name of the member to invoke.</param>
      <param name="args">Any arguments that the member requires.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject.Invoke(System.String,System.Object[],System.Globalization.CultureInfo)">
      <summary>Used to access the members of the private object.</summary>
      <returns>An object that represents the return value of the invoked member.</returns>
      <param name="name">The name of the member to invoke.</param>
      <param name="args">Any arguments that the member requires.</param>
      <param name="culture">The <see cref="T:System.Globalization.CultureInfo" /> object that represents the globalization locale to use, which might be necessary for locale-specific conversions, such as converting a numeric String to a Double.-or-null to use the current thread's <see cref="T:System.Globalization.CultureInfo" />.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject.Invoke(System.String,System.Reflection.BindingFlags,System.Object[])">
      <summary>Used to access the members of the private object.</summary>
      <returns>An object that represents the return value of a private member.</returns>
      <param name="name">The name of the member to invoke.</param>
      <param name="bindingFlags"></param>
      <param name="args">Any arguments that the member requires.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject.Invoke(System.String,System.Reflection.BindingFlags,System.Object[],System.Globalization.CultureInfo)">
      <summary>Used to access the members of the private object.</summary>
      <returns>An object representing the return value of the invoked member.</returns>
      <param name="name">The name of the member to invoke.</param>
      <param name="bindingFlags"></param>
      <param name="args">Any arguments that the member requires.</param>
      <param name="culture">The <see cref="T:System.Globalization.CultureInfo" /> object that represents the globalization locale to use, which might be necessary for locale-specific conversions, such as converting a numeric String to a Double.-or-null to use the current thread's <see cref="T:System.Globalization.CultureInfo" />.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject.Invoke(System.String,System.Reflection.BindingFlags,System.Type[],System.Object[])">
      <summary>Used to access the members of the private object.</summary>
      <returns>An object that represents the return value of the invoked member.</returns>
      <param name="name">The name of the member to invoke.</param>
      <param name="bindingFlags"></param>
      <param name="parameterTypes">An array of <see cref="T:System.Type" /> objects that represents the number, order, and type of the parameters for the method to access.-or-An empty array of the type <see cref="T:System.Type" /> (that is, Type[] types = new Type[0]) to get a method that takes no parameters.</param>
      <param name="args">Any arguments that the member requires.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject.Invoke(System.String,System.Reflection.BindingFlags,System.Type[],System.Object[],System.Globalization.CultureInfo)">
      <summary>Used to access the members of the private object.</summary>
      <returns>An object representing the return value of the invoked member.</returns>
      <param name="name">The name of the member to invoke.</param>
      <param name="bindingFlags"></param>
      <param name="parameterTypes">An array of <see cref="T:System.Type" /> objects that represents the number, order, and type of the parameters for the method to access.-or-An empty array of the type <see cref="T:System.Type" /> (that is, Type[] types = new Type[0]) to get a method that takes no parameters.</param>
      <param name="args">Any arguments that the member requires.</param>
      <param name="culture">The <see cref="T:System.Globalization.CultureInfo" /> object that represents the globalization locale to use, which might be necessary for locale-specific conversions, such as converting a numeric String to a Double.-or-null to use the current thread's <see cref="T:System.Globalization.CultureInfo" />.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject.Invoke(System.String,System.Reflection.BindingFlags,System.Type[],System.Object[],System.Globalization.CultureInfo,System.Type[])">
      <summary>Used to access generic members of a private object.</summary>
      <param name="name">The name of the member to invoke.</param>
      <param name="bindingFlags"></param>
      <param name="parameterTypes">An array of <see cref="T:System.Type" /> objects that represents the number, order, and type of the parameters for the method to access.-or-An empty array of the type <see cref="T:System.Type" /> (that is, Type[] types = new Type[0]) to get a method that takes no parameters.</param>
      <param name="args">Any arguments that the member requires.</param>
      <param name="culture">The <see cref="T:System.Globalization.CultureInfo" /> object that represents the globalization locale to use, which might be necessary for locale-specific conversions, such as converting a numeric String to a Double.-or-null to use the current thread's <see cref="T:System.Globalization.CultureInfo" />.</param>
      <param name="typeArguments">An array of type arguments to use when invoking a generic method.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject.Invoke(System.String,System.Type[],System.Object[])">
      <summary>Used to access the methods of the private object.</summary>
      <returns>An object that represents the return value of the invoked method.</returns>
      <param name="name">The name of the member to invoke.</param>
      <param name="parameterTypes">An array of <see cref="T:System.Type" /> objects that represents the number, order, and type of the parameters for the method to access.-or-An empty array of the type <see cref="T:System.Type" /> (that is, Type[] types = new Type[0]) to get a method that takes no parameters.</param>
      <param name="args">Any arguments that the member requires.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject.Invoke(System.String,System.Type[],System.Object[],System.Globalization.CultureInfo)">
      <summary>Used to access the members of the private object.</summary>
      <returns>An object representing the return value of the invoked member.</returns>
      <param name="name">The name of the member to invoke.</param>
      <param name="parameterTypes">An array of <see cref="T:System.Type" /> objects that represents the number, order, and type of the parameters for the method to access.-or-An empty array of the type <see cref="T:System.Type" /> (that is, Type[] types = new Type[0]) to get a method that takes no parameters.</param>
      <param name="args">Any arguments that the member requires.</param>
      <param name="culture">The <see cref="T:System.Globalization.CultureInfo" /> object that represents the globalization locale to use, which might be necessary for locale-specific conversions, such as converting a numeric String to a Double.-or-null to use the current thread's <see cref="T:System.Globalization.CultureInfo" />.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject.Invoke(System.String,System.Type[],System.Object[],System.Type[])">
      <summary>Used to access generic members of a private object. </summary>
      <param name="name">The name of the member to invoke.</param>
      <param name="parameterTypes">An array of <see cref="T:System.Type" /> objects that represents the number, order, and type of the parameters for the method to access.-or-An empty array of the type <see cref="T:System.Type" /> (that is, Type[] types = new Type[0]) to get a method that takes no parameters.</param>
      <param name="args">Any arguments that the member requires.</param>
      <param name="typeArguments">An array of type arguments to use when invoking a generic method.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject.RealType">
      <summary>Gets the type of the underlying object.</summary>
      <returns>A <see cref="T:System.Type" /> object.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject.SetArrayElement(System.String,System.Object,System.Int32[])">
      <summary>Sets the array element by using an array of subscripts for each dimension.</summary>
      <param name="name">The variable name of array to set.</param>
      <param name="value">The value to assign to the array element.</param>
      <param name="indices">An array that represents the location of the element to set.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject.SetArrayElement(System.String,System.Reflection.BindingFlags,System.Object,System.Int32[])">
      <summary>Sets the array element by using an array of subscripts for each dimension.</summary>
      <param name="name">The variable name of array to set.</param>
      <param name="bindingFlags"></param>
      <param name="value">The value to assign to the array element.</param>
      <param name="indices">An array that represents the location of the element to set.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject.SetField(System.String,System.Object)">
      <summary>Sets a value for the field of the wrapped object, identified by name.</summary>
      <param name="name">The name of the field to set a value.</param>
      <param name="value">The value to set.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> is null or empty.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject.SetField(System.String,System.Reflection.BindingFlags,System.Object)">
      <summary>Sets a value for the field of the wrapped object, identified by name.</summary>
      <param name="name">The name of the field to set a value.</param>
      <param name="bindingFlags"></param>
      <param name="value">The value to set.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> is null or empty.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject.SetFieldOrProperty(System.String,System.Object)">
      <summary>Sets a value of a wrapped field or property based on the name.</summary>
      <param name="name">The name of the private field or property to set.</param>
      <param name="value">The value to set for <paramref name="name" />.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject.SetFieldOrProperty(System.String,System.Reflection.BindingFlags,System.Object)">
      <summary>Sets a value of a wrapped field or property based on the name.</summary>
      <param name="name">The name of the private field or property to set.</param>
      <param name="bindingFlags"></param>
      <param name="value">The value to set for <paramref name="name" />.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject.SetProperty(System.String,System.Object,System.Object[])">
      <summary>Sets a property for a wrapped object identified by name.</summary>
      <param name="name">The name of property to invoke.</param>
      <param name="value">The value to set the property identified by <paramref name="name" />.</param>
      <param name="args">An array that contains the arguments to pass to the property to invoke.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> is null or empty.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject.SetProperty(System.String,System.Reflection.BindingFlags,System.Object,System.Object[])">
      <summary>Sets a property for a wrapped object identified by name with binding flags.</summary>
      <param name="name">The name of property to invoke.</param>
      <param name="bindingFlags"></param>
      <param name="value">The value to set the property identified by <paramref name="name" />.</param>
      <param name="args">An array that contains the arguments to pass to the property to invoke.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> is null or empty.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject.SetProperty(System.String,System.Reflection.BindingFlags,System.Object,System.Type[],System.Object[])">
      <summary>Sets an indexed property for a wrapped object identified by name.</summary>
      <param name="name">The name of property to invoke.</param>
      <param name="bindingFlags"></param>
      <param name="value">The value to set the property identified by <paramref name="name" />.</param>
      <param name="parameterTypes">An array of <see cref="T:System.Type" /> objects that represents the number, order, and type of the parameters for the indexed property to get.</param>
      <param name="args">An array that contains the arguments to pass to the property to invoke.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> is null or empty.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject.SetProperty(System.String,System.Type[],System.Object,System.Object[])">
      <summary>Sets an indexed property for a wrapped object identified by name.</summary>
      <param name="name">The name of property to invoke.</param>
      <param name="parameterTypes">An array of <see cref="T:System.Type" /> objects that represents the number, order, and type of the parameters for the indexed property to get.</param>
      <param name="value">The value to set the property identified by <paramref name="name" />.</param>
      <param name="args">An array that contains the arguments to pass to the property to invoke.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> is null or empty.</exception>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject.Target">
      <summary>Gets or sets the wrapped object.</summary>
      <returns>The wrapped object.</returns>
      <exception cref="T:System.ArgumentNullException">Try to set this property to null.</exception>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateType">
      <summary>Represents the type of a private class that gives access to private static implementations.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateType.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateType" /> class. </summary>
      <param name="assemblyName">assembly name</param>
      <param name="typeName">fully qualified name of the type</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="assemblyName" /> or <paramref name="typeName" /> is null or empty.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateType.#ctor(System.Type)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateType" /> class with the type information.</summary>
      <param name="type">The wrapped <see cref="T:System.Type" /> to create.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="type" /> is null.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateType.GetStaticArrayElement(System.String,System.Int32[])">
      <summary>Gets a static array element contained in the wrapped type.</summary>
      <returns>An object that represents an element of <paramref name="name" /> at the location specified with <paramref name="indices" />.</returns>
      <param name="name">The name of the array</param>
      <param name="indices">An array of subscripts for identifying the element to get.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateType.GetStaticArrayElement(System.String,System.Reflection.BindingFlags,System.Int32[])">
      <summary>Gets a static array element contained in the wrapped type.</summary>
      <returns>An object that represents an element of <paramref name="name" /> at the location specified with <paramref name="indices" />.</returns>
      <param name="name">The name of the array</param>
      <param name="bindingFlags"></param>
      <param name="indices">An array of subscripts for identifying the element to get.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateType.GetStaticField(System.String)">
      <summary>Gets a static field contained in the wrapped type.</summary>
      <returns>An object that represents the value of the static field.</returns>
      <param name="name">The name of the static field.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateType.GetStaticField(System.String,System.Reflection.BindingFlags)">
      <summary>Gets a static field contained in the wrapped type.</summary>
      <returns>An object that represents the value of the static field.</returns>
      <param name="name">The name of the static field.</param>
      <param name="bindingFlags"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateType.GetStaticFieldOrProperty(System.String)">
      <summary>Gets a value of a static field or property in a wrapped type based on the name.</summary>
      <returns>The value set for the <paramref name="name" /> field or property.</returns>
      <param name="name">The name of the static field or property to get.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateType.GetStaticFieldOrProperty(System.String,System.Reflection.BindingFlags)">
      <summary>Gets a value of a static field or property in a wrapped type based on the name.</summary>
      <returns>The value set for the <paramref name="name" /> field or property.</returns>
      <param name="name">The name of the static field or property to get.</param>
      <param name="bindingFlags"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateType.GetStaticProperty(System.String,System.Object[])">
      <summary>Gets a static property contained in the wrapped type.</summary>
      <returns>An object that represents the value of the static property.</returns>
      <param name="name">The name of the static property.</param>
      <param name="args">An array that contains the arguments to pass to the member to invoke.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateType.GetStaticProperty(System.String,System.Reflection.BindingFlags,System.Object[])">
      <summary>Gets a static property contained in the wrapped type.</summary>
      <returns>An object that represents the value of the static property.</returns>
      <param name="name">The name of the static property.</param>
      <param name="bindingFlags"></param>
      <param name="args">An array that contains the arguments to pass to the member to invoke.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateType.GetStaticProperty(System.String,System.Reflection.BindingFlags,System.Type[],System.Object[])">
      <summary>Gets a static indexed property contained in the wrapped type.</summary>
      <returns>An object that represents the value of the static indexed property.</returns>
      <param name="name">The name of the static property.</param>
      <param name="bindingFlags"></param>
      <param name="parameterTypes">An array of <see cref="T:System.Type" /> objects that represents the number, order, and type of the parameters for the indexed property to get.-or- An empty array of the type <see cref="T:System.Type" /> (that is, Type[] types = new Type[0]) to get a property that is not indexed.</param>
      <param name="args">An array that contains the arguments to pass to the member to invoke.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateType.InvokeStatic(System.String,System.Object[])">
      <summary>Invokes static methods on the <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateType" />.</summary>
      <returns>An object that represents the invoked static method's return value, if any.</returns>
      <param name="name">The name of the method to invoke.</param>
      <param name="args">Any array of arguments to pass</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> is null.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateType.InvokeStatic(System.String,System.Object[],System.Globalization.CultureInfo)">
      <summary>Invokes static methods on the <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateType" />.</summary>
      <returns>An object that represents the invoked static method's return value, if any.</returns>
      <param name="name">The name of the method to invoke.</param>
      <param name="args">Any array of arguments to pass</param>
      <param name="culture">The <see cref="T:System.Globalization.CultureInfo" /> object that represents the globalization locale to use, which might be necessary for locale-specific conversions, such as converting a numeric String to a Double.-or-null to use the current thread's <see cref="T:System.Globalization.CultureInfo" />.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> is null.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateType.InvokeStatic(System.String,System.Reflection.BindingFlags,System.Object[])">
      <summary>Invokes static methods on the <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateType" />.</summary>
      <returns>An object that represents the invoked static method's return value, if any.</returns>
      <param name="name">The name of the method to invoke.</param>
      <param name="bindingFlags"></param>
      <param name="args">Any array of arguments to pass</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> is null.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateType.InvokeStatic(System.String,System.Reflection.BindingFlags,System.Object[],System.Globalization.CultureInfo)">
      <summary>Invokes static methods on the <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateType" />.</summary>
      <returns>An object representing the invoked static method's return value, if any.</returns>
      <param name="name">The name of the method to invoke.</param>
      <param name="bindingFlags"></param>
      <param name="args">An array of arguments to pass.</param>
      <param name="culture">The <see cref="T:System.Globalization.CultureInfo" /> object that represents the globalization locale to use, which might be necessary for locale-specific conversions, such as converting a numeric String to a Double.-or-null to use the current thread's <see cref="T:System.Globalization.CultureInfo" />.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> is null.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateType.InvokeStatic(System.String,System.Reflection.BindingFlags,System.Type[],System.Object[])">
      <summary>Invokes static methods on the <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateType" />.</summary>
      <returns>An object that represents the invoked static method's return value, if any.</returns>
      <param name="name">The name of the method to invoke.</param>
      <param name="bindingFlags"></param>
      <param name="parameterTypes">An array of <see cref="T:System.Type" /> objects that represents the number, order, and type of the parameters for the method.-or- An empty array of the type Type, that is, Type[] types = new Type[0] to get a method that takes no parameters.</param>
      <param name="args">An array of arguments to pass.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> is null.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateType.InvokeStatic(System.String,System.Reflection.BindingFlags,System.Type[],System.Object[],System.Globalization.CultureInfo)">
      <summary>Invokes static methods on the <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateType" />.</summary>
      <returns>An object representing the invoked static method's return value, if any.</returns>
      <param name="name">The name of the method to invoke.</param>
      <param name="bindingFlags"></param>
      <param name="parameterTypes">An array of <see cref="T:System.Type" /> objects that represents the number, order, and type of the parameters for the method.-or- An empty array of the type Type, that is, Type[] types = new Type[0] to get a method that takes no parameters.</param>
      <param name="args">An array of arguments to pass.</param>
      <param name="culture">The <see cref="T:System.Globalization.CultureInfo" /> object that represents the globalization locale to use, which might be necessary for locale-specific conversions, such as converting a numeric String to a Double.-or-null to use the current thread's <see cref="T:System.Globalization.CultureInfo" />.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> is null.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateType.InvokeStatic(System.String,System.Reflection.BindingFlags,System.Type[],System.Object[],System.Globalization.CultureInfo,System.Type[])">
      <summary>Invokes static methods on the <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateType" />.</summary>
      <param name="name">The name of the method to invoke.</param>
      <param name="bindingFlags"></param>
      <param name="parameterTypes">An array of <see cref="T:System.Type" /> objects that represents the number, order, and type of the parameters for the method.-or- An empty array of the type Type, that is, Type[] types = new Type[0] to get a method that takes no parameters.</param>
      <param name="args">An array of arguments to pass.</param>
      <param name="culture">The <see cref="T:System.Globalization.CultureInfo" /> object that represents the globalization locale to use, which might be necessary for locale-specific conversions, such as converting a numeric String to a Double.-or-null to use the current thread's <see cref="T:System.Globalization.CultureInfo" />.</param>
      <param name="typeArguments">An array of type arguments to use when invoking a generic method.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateType.InvokeStatic(System.String,System.Type[],System.Object[])">
      <summary>Invokes static methods on the <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateType" />.</summary>
      <returns>An object that represents the invoked static method's return value, if any.</returns>
      <param name="name">The name of the method to invoke.</param>
      <param name="parameterTypes">An array of <see cref="T:System.Type" /> objects that represents the number, order, and type of the parameters for the method.-or- An empty array of the type Type, that is, Type[] types = new Type[0] to get a method that takes no parameters.</param>
      <param name="args">An array of arguments to pass</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> is null.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateType.InvokeStatic(System.String,System.Type[],System.Object[],System.Globalization.CultureInfo)">
      <summary>Invokes static methods on the <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateType" />.</summary>
      <returns>An object that represents the invoked static method's return value, if any.</returns>
      <param name="name">The name of the method to invoke.</param>
      <param name="parameterTypes">An array of <see cref="T:System.Type" /> objects that represents the number, order, and type of the parameters for the method.-or- An empty array of the type Type, that is, Type[] types = new Type[0] to get a method that takes no parameters.</param>
      <param name="args">An array of arguments to pass.</param>
      <param name="culture">The <see cref="T:System.Globalization.CultureInfo" /> object that represents the globalization locale to use, which might be necessary for locale-specific conversions, such as converting a numeric String to a Double.-or-null to use the current thread's <see cref="T:System.Globalization.CultureInfo" />.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> is null.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateType.InvokeStatic(System.String,System.Type[],System.Object[],System.Type[])">
      <summary>Invokes static methods on the <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateType" />.</summary>
      <param name="name">The name of the method to invoke.</param>
      <param name="parameterTypes">An array of <see cref="T:System.Type" /> objects that represents the number, order, and type of the parameters for the method.-or- An empty array of the type Type, that is, Type[] types = new Type[0] to get a method that takes no parameters.</param>
      <param name="args">An array of arguments to pass.</param>
      <param name="typeArguments">An array of type arguments to use when invoking a generic method.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateType.ReferencedType">
      <summary>Gets the <see cref="T:System.Type" /> representing the <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateType" />.</summary>
      <returns>A <see cref="T:System.Type" /> object.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateType.SetStaticArrayElement(System.String,System.Object,System.Int32[])">
      <summary>Sets a static array element contained in the wrapped type.</summary>
      <param name="name">The name of the array</param>
      <param name="value">The value to set the element identified by <paramref name="indices" />.</param>
      <param name="indices">An array of subscripts for identifying the element to set.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateType.SetStaticArrayElement(System.String,System.Reflection.BindingFlags,System.Object,System.Int32[])">
      <summary>Sets a static array element contained in the wrapped type.</summary>
      <param name="name">The name of the array</param>
      <param name="bindingFlags"></param>
      <param name="value">The value to set the element identified by <paramref name="indices" />.</param>
      <param name="indices">An array of subscripts for identifying the element to set.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateType.SetStaticField(System.String,System.Object)">
      <summary>Sets a static field contained in the wrapped type.</summary>
      <param name="name">The name of the static field.</param>
      <param name="value">The value to set to the static field.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateType.SetStaticField(System.String,System.Reflection.BindingFlags,System.Object)">
      <summary>Sets a static field contained in the wrapped type.</summary>
      <param name="name">The name of the static field.</param>
      <param name="bindingFlags"></param>
      <param name="value">The value to set to the static field.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateType.SetStaticFieldOrProperty(System.String,System.Object)">
      <summary>Sets a static field or property contained in the wrapped type.</summary>
      <param name="name">The name of the static field or property.</param>
      <param name="value">The value to set to the static field or property.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateType.SetStaticFieldOrProperty(System.String,System.Reflection.BindingFlags,System.Object)">
      <summary>Sets a static field or property contained in the wrapped type.</summary>
      <param name="name">The name of the static field or property.</param>
      <param name="bindingFlags"></param>
      <param name="value">The value to set to the static field or property.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateType.SetStaticProperty(System.String,System.Object,System.Object[])">
      <summary>Sets a static property contained in the wrapped type.</summary>
      <param name="name">The name of the static property.</param>
      <param name="value">The value to set the static property.</param>
      <param name="args">An array that contains the arguments to pass to the member to invoke.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateType.SetStaticProperty(System.String,System.Object,System.Type[],System.Object[])">
      <summary>Sets a static property contained in the wrapped type.</summary>
      <param name="name">The name of the static property.</param>
      <param name="value">The value to set the static property.</param>
      <param name="parameterTypes">An array of <see cref="T:System.Type" /> objects that represents the number, order, and type of the parameters for the indexed property to set.-or-An empty array of the type <see cref="T:System.Type" />, that is, Type[] types = new Type[0] to set a property that is not indexed.</param>
      <param name="args">An array that contains the arguments to pass to the member to invoke.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateType.SetStaticProperty(System.String,System.Reflection.BindingFlags,System.Object,System.Object[])">
      <summary>Sets a static property contained in the wrapped type.</summary>
      <param name="name">The name of the static property.</param>
      <param name="bindingFlags"></param>
      <param name="value">The value to set the static property.</param>
      <param name="args">An array that contains the arguments to pass to the member to invoke.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateType.SetStaticProperty(System.String,System.Reflection.BindingFlags,System.Object,System.Type[],System.Object[])">
      <summary>Sets a static property contained in the wrapped type.</summary>
      <param name="name">The name of the static property.</param>
      <param name="bindingFlags"></param>
      <param name="value">The value to set the static property.</param>
      <param name="parameterTypes">An array of <see cref="T:System.Type" /> objects that represents the number, order, and type of the parameters for the indexed property to set.-or- An empty array of the type <see cref="T:System.Type" />, that is, Type[] types = new Type[0] to set a property that is not indexed.</param>
      <param name="args">An array that contains the arguments to pass to the member to invoke.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.UnitTesting.ShadowingAttribute">
      <summary>Do not use this class. </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.ShadowingAttribute.#ctor(System.String)">
      <param name="fullNameOfSource"></param>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.ShadowingAttribute.FullNameOfSource"></member>
    <member name="T:Microsoft.VisualStudio.TestTools.UnitTesting.StringAssert">
      <summary>Verifies true/false propositions associated with strings in unit tests.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.StringAssert.Contains(System.String,System.String)">
      <summary>Verifies that the first string contains the second string.</summary>
      <param name="value">The string that is expected to contain <paramref name="substring" />.</param>
      <param name="substring">The string expected to occur within <paramref name="value" />.</param>
      <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
        <paramref name="substring" /> is not found in <paramref name="value" />.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.StringAssert.Contains(System.String,System.String,System.String)">
      <summary>Verifies that the first string contains the second string. Displays a message if the assertion fails.</summary>
      <param name="value">The string that is expected to contain <paramref name="substring" />.</param>
      <param name="substring">The string expected to occur within <paramref name="value" />.</param>
      <param name="message">A message to display if the assertion fails. This message can be seen in the unit test results.</param>
      <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
        <paramref name="substring" /> is not found in <paramref name="value" />.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.StringAssert.Contains(System.String,System.String,System.String,System.Object[])">
      <summary>Verifies that the first string contains the second string. Displays a message if the assertion fails, and applies the specified formatting to it.</summary>
      <param name="value">The string that is expected to contain <paramref name="substring" />.</param>
      <param name="substring">The string expected to occur within <paramref name="value" />.</param>
      <param name="message">A message to display if the assertion fails. This message can be seen in the unit test results.</param>
      <param name="parameters">An array of parameters to use when formatting <paramref name="message" />.</param>
      <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
        <paramref name="substring" /> is not found in <paramref name="value" />.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.StringAssert.DoesNotMatch(System.String,System.Text.RegularExpressions.Regex)">
      <summary>Verifies that the specified string does not match the regular expression.</summary>
      <param name="value">The string that is not expected to match <paramref name="pattern" />.</param>
      <param name="pattern">The regular expression that <paramref name="value" /> is not expected to match.</param>
      <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
        <paramref name="value" /> matches <paramref name="pattern" />.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.StringAssert.DoesNotMatch(System.String,System.Text.RegularExpressions.Regex,System.String)">
      <summary>Verifies that the specified string does not match the regular expression. Displays a message if the assertion fails.</summary>
      <param name="value">The string that is not expected to match <paramref name="pattern" />.</param>
      <param name="pattern">The regular expression that <paramref name="value" /> is not expected to match.</param>
      <param name="message">A message to display if the assertion fails. This message can be seen in the unit test results.</param>
      <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
        <paramref name="value" /> matches <paramref name="pattern" />.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.StringAssert.DoesNotMatch(System.String,System.Text.RegularExpressions.Regex,System.String,System.Object[])">
      <summary>Verifies that the specified string does not match the regular expression. Displays a message if the assertion fails, and applies the specified formatting to it.</summary>
      <param name="value">The string that is not expected to match <paramref name="pattern" />.</param>
      <param name="pattern">The regular expression that <paramref name="value" /> is not expected to match.</param>
      <param name="message">A message to display if the assertion fails. This message can be seen in the unit test results.</param>
      <param name="parameters">An array of parameters to use when formatting <paramref name="message" />.</param>
      <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
        <paramref name="value" /> matches <paramref name="pattern" />.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.StringAssert.EndsWith(System.String,System.String)">
      <summary>Verifies that the first string ends with the second string.</summary>
      <param name="value">The string that is expected to end with <paramref name="substring" />.</param>
      <param name="substring">The string expected to be a suffix of <paramref name="value" />.</param>
      <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
        <paramref name="value" /> does not end with <paramref name="substring" />.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.StringAssert.EndsWith(System.String,System.String,System.String)">
      <summary>Verifies that the first string ends with the second string. Displays a message if the assertion fails.</summary>
      <param name="value">The string that is expected to end with <paramref name="substring" />.</param>
      <param name="substring">The string expected to be a suffix of <paramref name="value" />.</param>
      <param name="message">A message to display if the assertion fails. This message can be seen in the unit test results.</param>
      <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
        <paramref name="value" /> does not end with <paramref name="substring" />.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.StringAssert.EndsWith(System.String,System.String,System.String,System.Object[])">
      <summary>Verifies that the first string ends with the second string. Displays a message if the assertion fails, and applies the specified formatting to it.</summary>
      <param name="value">The string that is expected to end with <paramref name="substring" />.</param>
      <param name="substring">The string expected to be a suffix of <paramref name="value" />.</param>
      <param name="message">A message to display if the assertion fails. This message can be seen in the unit test results.</param>
      <param name="parameters">An array of parameters to use when formatting <paramref name="message" />.</param>
      <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
        <paramref name="value" /> does not end with <paramref name="substring" />.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.StringAssert.Matches(System.String,System.Text.RegularExpressions.Regex)">
      <summary>Verifies that the specified string matches the regular expression.</summary>
      <param name="value">The string that is expected to match <paramref name="pattern" />.</param>
      <param name="pattern">The regular expression that <paramref name="value" /> is expected to match.</param>
      <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
        <paramref name="value" /> does not match <paramref name="pattern" />.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.StringAssert.Matches(System.String,System.Text.RegularExpressions.Regex,System.String)">
      <summary>Verifies that the specified string matches the regular expression. Displays a message if the assertion fails.</summary>
      <param name="value">The string that is expected to match <paramref name="pattern" />.</param>
      <param name="pattern">The regular expression that <paramref name="value" /> is expected to match.</param>
      <param name="message">A message to display if the assertion fails. This message can be seen in the unit test results.</param>
      <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
        <paramref name="value" /> does not match <paramref name="pattern" />.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.StringAssert.Matches(System.String,System.Text.RegularExpressions.Regex,System.String,System.Object[])">
      <summary>Verifies that the specified string matches the regular expression. Displays a message if the assertion fails, and applies the specified formatting to it.</summary>
      <param name="value">The string that is expected to match <paramref name="pattern" />.</param>
      <param name="pattern">The regular expression that <paramref name="value" /> is expected to match.</param>
      <param name="message">A message to display if the assertion fails. This message can be seen in the unit test results.</param>
      <param name="parameters">An array of parameters to use when formatting <paramref name="message" />.</param>
      <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
        <paramref name="value" /> does not match <paramref name="pattern" />.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.StringAssert.StartsWith(System.String,System.String)">
      <summary>Verifies that the first string begins with the second string.</summary>
      <param name="value">The string that is expected to begin with <paramref name="substring" />.</param>
      <param name="substring">The string expected to be a prefix of <paramref name="value" />.</param>
      <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
        <paramref name="value" /> does not begin with <paramref name="substring" />.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.StringAssert.StartsWith(System.String,System.String,System.String)">
      <summary>Verifies that the first string begins with the second string. Displays a message if the assertion fails.</summary>
      <param name="value">The string that is expected to begin with <paramref name="substring" />.</param>
      <param name="substring">The string expected to be a prefix of <paramref name="value" />.</param>
      <param name="message">A message to display if the assertion fails. This message can be seen in the unit test results.</param>
      <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
        <paramref name="value" /> does not begin with <paramref name="substring" />.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.StringAssert.StartsWith(System.String,System.String,System.String,System.Object[])">
      <summary>Verifies that the first string begins with the second string. Displays a message if the assertion fails, and applies the specified formatting to it.</summary>
      <param name="value">The string that is expected to begin with <paramref name="substring" />.</param>
      <param name="substring">The string expected to be a prefix of <paramref name="value" />.</param>
      <param name="message">A message to display if the assertion fails. This message can be seen in the unit test results.</param>
      <param name="parameters">An array of parameters to use when formatting <paramref name="message" />.</param>
      <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
        <paramref name="value" /> does not begin with <paramref name="substring" />.</exception>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute">
      <summary>Class used to specify the category of a unit test.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute" /> class by applying the supplied category to the test.</summary>
      <param name="testCategory">The test category to be applied.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute.TestCategories"></member>
    <member name="T:Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryBaseAttribute"></member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryBaseAttribute.#ctor"></member>
    <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryBaseAttribute.TestCategories"></member>
    <member name="T:Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute">
      <summary>Used to identify classes that contain test methods. This class cannot be inherited. </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute" /> class.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.UnitTesting.TestClassExtensionAttribute">
      <summary>Activates a class so that it is recognized as a Unit Test extension class.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.TestClassExtensionAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.TestClassExtensionAttribute" /> class.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.TestClassExtensionAttribute.ExtensionId">
      <summary>Gets the unique ID of the extension.</summary>
      <returns>The unique ID of the extension.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.TestClassExtensionAttribute.GetClientSide">
      <summary>Gets the TestTypeExtensionClientSide object.</summary>
      <returns>The TestTypeExtensionClientSide object.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.TestClassExtensionAttribute.GetExecution">
      <summary>Method to get the <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.TestExtensionExecution" /> object.</summary>
      <returns>The <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.TestExtensionExecution" /> object.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute">
      <summary>Identifies a method that contains code that must be used after the test has run and to free resources obtained by all the tests in the test class. This class cannot be inherited.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute" /> class. </summary>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.UnitTesting.TestConfiguration">
      <summary>Provides access to a <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.TestConfigurationSection" /> that represents the microsoft.visualstudio.testtools section in an app.config file. </summary>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.TestConfiguration.ConfigurationSection">
      <summary>Gets a <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.TestConfigurationSection" /> object.</summary>
      <returns>A <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.TestConfigurationSection" /> object.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.UnitTesting.TestConfigurationSection">
      <summary>Provides access to data source configuration data. </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.TestConfigurationSection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.TestConfigurationSection" /> class. </summary>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.TestConfigurationSection.DataSources">
      <summary>Gets a <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.DataSourceElementCollection" /> that contains data source configuration information.</summary>
      <returns>A <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.DataSourceElementCollection" />.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.UnitTesting.TestContext">
      <summary>Used to store information that is provided to unit tests.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.TestContext.#ctor">
      <summary>Initializes a new instance of an object that derives from the <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.TestContext" /> class.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.TestContext.AddResultFile(System.String)">
      <summary>When overridden in a derived class, adds a file name to the list in TestResult.ResultFileNames.</summary>
      <param name="fileName">The file name to add.</param>
    </member>
    <member name="F:Microsoft.VisualStudio.TestTools.UnitTesting.TestContext.AspNetDevelopmentServerPrefix">
      <summary>Represents the prefix for ASP.NET Development Server.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.TestContext.BeginTimer(System.String)">
      <summary>When overridden in a derived class, begins a timer with the specified name. </summary>
      <param name="timerName">The name of the timer to begin.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.TestContext.CurrentTestOutcome">
      <summary>You can use this property in a TestCleanup method to determine the outcome of a test that has run. </summary>
      <returns>A <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.UnitTestOutcome" /> that states the outcome of a test that has run.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.TestContext.DataConnection">
      <summary>When overridden in a derived class, gets the current data connection when the test is used for data driven testing.</summary>
      <returns>A <see cref="T:System.Data.Common.DbConnection" /> object.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.TestContext.DataRow">
      <summary>When overridden in a derived class, gets the current data row when test is used for data driven testing.</summary>
      <returns>A <see cref="T:System.Data.DataRow" /> object.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.TestContext.DeploymentDirectory"></member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.TestContext.EndTimer(System.String)">
      <summary>When overridden in a derived class, ends a timer with the specified name</summary>
      <param name="timerName">The name of the timer to end.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.TestContext.FullyQualifiedTestClassName"></member>
    <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.TestContext.Properties">
      <summary>When overridden in a derived class, gets the test properties.</summary>
      <returns>An <see cref="T:System.Collections.IDictionary" /> object that contains key/value pairs that represent the test properties.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.TestContext.RequestedPage">
      <summary>Gets the requested page.</summary>
      <returns>A <see cref="T:System.Web.UI.Page" /> object.</returns>
      <exception cref="T:System.InvalidCastException">An invalid value type is associated with the <see cref="P:Microsoft.VisualStudio.TestTools.UnitTesting.TestContext.RequestedPage" /> property of the test context.</exception>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.TestContext.ResultsDirectory"></member>
    <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.TestContext.TestDeploymentDir">
      <summary>Gets the path to the test deployment directory.</summary>
      <returns>The path to the test deployment directory.</returns>
      <exception cref="T:System.InvalidCastException">An invalid value type is associated with the <see cref="P:Microsoft.VisualStudio.TestTools.UnitTesting.TestContext.TestDeploymentDir" /> property of the test context.</exception>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.TestContext.TestDir">
      <summary>Gets the path to the test directory.</summary>
      <returns>The path to the test directory.</returns>
      <exception cref="T:System.InvalidCastException">An invalid value type is associated with the <see cref="P:Microsoft.VisualStudio.TestTools.UnitTesting.TestContext.TestDir" />  property of the test context.</exception>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.TestContext.TestLogsDir">
      <summary>Gets the path to the test log directory.</summary>
      <returns>The path to the test log directory.</returns>
      <exception cref="T:System.InvalidCastException">An invalid value type is associated with the <see cref="P:Microsoft.VisualStudio.TestTools.UnitTesting.TestContext.TestLogsDir" />   property of the test context.</exception>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.TestContext.TestName">
      <summary>Gets the test name.</summary>
      <returns>The test name.</returns>
      <exception cref="T:System.InvalidCastException">An invalid value type is associated with the <see cref="P:Microsoft.VisualStudio.TestTools.UnitTesting.TestContext.TestName" />    property of the test context.</exception>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.TestContext.TestResultsDirectory"></member>
    <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.TestContext.TestRunDirectory"></member>
    <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.TestContext.TestRunResultsDirectory"></member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.TestContext.WriteLine(System.String,System.Object[])">
      <summary>When overridden in a derived class, used to write trace messages while the test is running.</summary>
      <param name="format">The string that contains the trace message.</param>
      <param name="args">Arguments to add to the trace message.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.UnitTesting.TestExecution">
      <summary>This class represents events related to executing tests.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.TestExecution.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.TestExecution" /> class.</summary>
    </member>
    <member name="E:Microsoft.VisualStudio.TestTools.UnitTesting.TestExecution.AfterAssemblyCleanup">
      <summary>Occurs after the assembly finishes cleanup.</summary>
    </member>
    <member name="E:Microsoft.VisualStudio.TestTools.UnitTesting.TestExecution.AfterAssemblyInitialize">
      <summary>Occurs after the assembly initializes.</summary>
    </member>
    <member name="E:Microsoft.VisualStudio.TestTools.UnitTesting.TestExecution.AfterClassCleanup">
      <summary>Occurs after the class finishes cleanup.</summary>
    </member>
    <member name="E:Microsoft.VisualStudio.TestTools.UnitTesting.TestExecution.AfterClassInitialize">
      <summary>Occurs after the class initializes.</summary>
    </member>
    <member name="E:Microsoft.VisualStudio.TestTools.UnitTesting.TestExecution.AfterTestCleanup">
      <summary>Occurs after the test finishes cleanup.</summary>
    </member>
    <member name="E:Microsoft.VisualStudio.TestTools.UnitTesting.TestExecution.AfterTestInitialize">
      <summary>Occurs after the test initializes.</summary>
    </member>
    <member name="E:Microsoft.VisualStudio.TestTools.UnitTesting.TestExecution.BeforeAssemblyCleanup">
      <summary>Occurs before the assembly starts cleanup.</summary>
    </member>
    <member name="E:Microsoft.VisualStudio.TestTools.UnitTesting.TestExecution.BeforeAssemblyInitialize">
      <summary>Occurs before the assembly starts initialization.</summary>
    </member>
    <member name="E:Microsoft.VisualStudio.TestTools.UnitTesting.TestExecution.BeforeClassCleanup">
      <summary>Occurs before the class starts cleanup.</summary>
    </member>
    <member name="E:Microsoft.VisualStudio.TestTools.UnitTesting.TestExecution.BeforeClassInitialize">
      <summary>Occurs before the class starts initialization.</summary>
    </member>
    <member name="E:Microsoft.VisualStudio.TestTools.UnitTesting.TestExecution.BeforeTestCleanup">
      <summary>Occurs before the test starts cleanup.</summary>
    </member>
    <member name="E:Microsoft.VisualStudio.TestTools.UnitTesting.TestExecution.BeforeTestInitialize">
      <summary>Occurs before the test starts initialization.</summary>
    </member>
    <member name="E:Microsoft.VisualStudio.TestTools.UnitTesting.TestExecution.OnTestStopping"></member>
    <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.TestExecution.RunContext">
      <summary>Gets the context of this test run.</summary>
      <returns>The context of this test run.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.UnitTesting.TestExecutionEventArgs">
      <summary>Base class for events in the <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.TestExecution" /> class.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.TestExecutionEventArgs.Instance">
      <summary>Gets the instance of test class. Defined only in test methods.</summary>
      <returns>The instance of test class. Defined only in test methods.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.TestExecutionEventArgs.MethodInfo">
      <summary>Gets the method called.</summary>
      <returns>The method called.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.TestExecutionEventArgs.TestContext">
      <summary>Gets the user's test context. </summary>
      <returns>The user's test context.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.UnitTesting.TestExtensionExecution">
      <summary>This class enables the customized execution of tests.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.TestExtensionExecution.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.TestExtensionExecution" /> class.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.TestExtensionExecution.CreateTestMethodInvoker(Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodInvokerContext)">
      <summary>Creates the Test Method Invoker.</summary>
      <returns>Returns the test method invoker as defined by the <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.ITestMethodInvoker" /> interface.</returns>
      <param name="context">The context.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.TestExtensionExecution.Dispose">
      <summary>Releases all resources used by the <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.TestExtensionExecution" />.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.TestExtensionExecution.Initialize(Microsoft.VisualStudio.TestTools.UnitTesting.TestExecution)">
      <summary>Before execution starts, this method is called to enable subscription to the Unit Test Events.</summary>
      <param name="execution">The <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.TestExecution" />.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute">
      <summary>Identifies the method to run before the test to allocate and configure resources needed by all tests in the test class. This class cannot be inherited.  </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute" /> class.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute">
      <summary>Used to identify test methods. This class cannot be inherited. </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute" /> class. </summary>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodInvokerContext">
      <summary>Passed to the Unit Test Adapter to the TestExtensionExecution.CreateMethodInvoker.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodInvokerContext.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodInvokerContext" /> class.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodInvokerContext.InnerInvoker">
      <summary>Gets the <see cref="M:Microsoft.VisualStudio.TestTools.UnitTesting.ITestMethodInvoker.Invoke" /> method of the test method invoker.</summary>
      <returns>The <see cref="M:Microsoft.VisualStudio.TestTools.UnitTesting.ITestMethodInvoker.Invoke" /> method of the test method invoker.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodInvokerContext.TestContext">
      <summary>Gets the test context.</summary>
      <returns>The test context.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodInvokerContext.TestMethodInfo">
      <summary>Gets the <see cref="T:System.Reflection.MethodInfo" /> of the test method.</summary>
      <returns>The <see cref="T:System.Reflection.MethodInfo" /> of the test method.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodInvokerResult">
      <summary>The result returned by ITestMethodInvoker.<see cref="M:Microsoft.VisualStudio.TestTools.UnitTesting.ITestMethodInvoker.Invoke" />.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodInvokerResult.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodInvokerResult" /> class.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodInvokerResult.Exception">
      <summary>Gets or sets the <see cref="T:System.Exception" /> thrown in the invoker.</summary>
      <returns>The <see cref="T:System.Exception" /> thrown in the invoker.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodInvokerResult.ExtensionResult">
      <summary>Gets or sets the Unit Test Extension custom result.</summary>
      <returns>The Unit Test Extension custom result.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute">
      <summary>Establishes a test specific property on a method. This class cannot be inherited. </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute" /> class with values for the <see cref="P:Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute.Name" /> and <see cref="P:Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute.Value" /> properties. </summary>
      <param name="name">The name of the test property.</param>
      <param name="value">The value of the test property.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute.Name">
      <summary>Gets the name of the test property.</summary>
      <returns>The name of the test property.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute.Value">
      <summary>Gets the value of the test property.</summary>
      <returns>The value of the test property.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.UnitTesting.TestTimeout">
      <summary>Enumeration for timeouts, that can be used with the <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.TimeoutAttribute" /> class.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.TestTools.UnitTesting.TestTimeout.Infinite">
      <summary>The maximum time-out amount.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.UnitTesting.TimeoutAttribute">
      <summary>Used to specify the time-out period of a unit test.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.TimeoutAttribute.#ctor(Microsoft.VisualStudio.TestTools.UnitTesting.TestTimeout)"></member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.TimeoutAttribute.#ctor(System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.TimeoutAttribute" /> class.</summary>
      <param name="timeout">The time-out period of a unit test. This is measured in milliseconds.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.TimeoutAttribute.Timeout">
      <summary>Gets the time-out period for a unit test.</summary>
      <returns>The time-out period for a unit test. This is measured in milliseconds.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.UnitTesting.UnitTestAssertException">
      <summary>This is the base class for unit test exceptions.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.UnitTestAssertException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.UnitTestAssertException" /> class. </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.UnitTestAssertException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.UnitTestAssertException" /> class with serialized data.</summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
      <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0).</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.UnitTestAssertException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.UnitTestAssertException" /> class with a specified error. </summary>
      <param name="msg">The error message that explains the reason for the exception.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.UnitTestAssertException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.UnitTestAssertException" /> class with a specified error message and a reference to the inner exception that caused this exception. </summary>
      <param name="msg">The error message that explains the reason for the exception.</param>
      <param name="ex">The exception that is the cause of the current exception. If the <paramref name="ex" /> parameter is not null, the current exception is raised in a catch block that handles the inner exception.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.UnitTestAssertException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.</summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
      <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null.</exception>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.UnitTestAssertException.Message">
      <summary>Gets a message that describes the current exception.</summary>
      <returns>A message describing the exception.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.UnitTesting.UnitTestOutcome">
      <summary>Use UnitTestOutcome to programmatically determine the outcome of a test that has run or is currently running. </summary>
    </member>
    <member name="F:Microsoft.VisualStudio.TestTools.UnitTesting.UnitTestOutcome.Failed">
      <summary>The test failed.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.TestTools.UnitTesting.UnitTestOutcome.Inconclusive">
      <summary>An Assert.<see cref="M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.Inconclusive" /> was raised. </summary>
    </member>
    <member name="F:Microsoft.VisualStudio.TestTools.UnitTesting.UnitTestOutcome.Passed">
      <summary>The test passed.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.TestTools.UnitTesting.UnitTestOutcome.InProgress">
      <summary>The test is currently running.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.TestTools.UnitTesting.UnitTestOutcome.Error">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.TestTools.UnitTesting.UnitTestOutcome.Timeout">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.TestTools.UnitTesting.UnitTestOutcome.Aborted">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.TestTools.UnitTesting.UnitTestOutcome.Unknown">
      <summary>The outcome of the test is unknown. </summary>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.UnitTesting.WebServiceHelper">
      <summary>Contains helper methods for Web service testing. </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.WebServiceHelper.TryUrlRedirection(System.Web.Services.Protocols.WebClientProtocol,Microsoft.VisualStudio.TestTools.UnitTesting.TestContext,System.String)">
      <summary>Redirects a Web service object to the ASP.NET Development Server instead of what is defined in the Web reference.</summary>
      <returns>true if a redirect occurred; otherwise, false.</returns>
      <param name="client">An instance of the Web service type being tested.</param>
      <param name="context">The <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.TestContext" /> for this unit test.</param>
      <param name="identifier">A unique string that identifies an ASP.NET Development Server instance. This matches the name parameter of an <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.Web.AspNetDevelopmentServerAttribute" /> on the test method.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.UnitTesting.WorkItemAttribute">
      <summary>Used to specify a work item associated with a test.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.WorkItemAttribute.#ctor(System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.WorkItemAttribute" /> class with an identification number.</summary>
      <param name="id">The ID of the work item.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.WorkItemAttribute.Id">
      <summary>Gets the ID of the work item.</summary>
      <returns>The work item ID.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.UnitTesting.Web.AspNetDevelopmentServerAttribute">
      <summary>Specifies the settings that must be used for the ASP.NET Development Server for the test. This is primarily used for Web service unit tests.   </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.Web.AspNetDevelopmentServerAttribute.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.Web.AspNetDevelopmentServerAttribute" /> class with the server name and the path to the Web application.</summary>
      <param name="name">The name of the ASP.NET Development Server. This name must be unique for all <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.Web.AspNetDevelopmentServerAttribute" /> specified on a single test.</param>
      <param name="pathToWebApp">The path to the Web application. This can also include environmental variables.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.Web.AspNetDevelopmentServerAttribute.#ctor(System.String,System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.Web.AspNetDevelopmentServerAttribute" /> class with the server name, the path to the Web application, and the Web application root.</summary>
      <param name="name">The name of the server.</param>
      <param name="pathToWebApp">The path to the Web application. This can also include environment variables like %TEMPDIR%\website1.</param>
      <param name="webAppRoot">The Web application root.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.Web.AspNetDevelopmentServerAttribute.Name">
      <summary>Gets the name of the ASP.NET Development Server.</summary>
      <returns>The name of the ASP.NET Development Server.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.Web.AspNetDevelopmentServerAttribute.PathToWebApp">
      <summary>Gets the path to the Web application.</summary>
      <returns>The path to the Web application.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.Web.AspNetDevelopmentServerAttribute.WebAppRoot">
      <summary>Gets the Web application root.</summary>
      <returns>The Web application root.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.UnitTesting.Web.AspNetDevelopmentServerHostAttribute">
      <summary>Specifies the settings to use when an ASP.NET Development Server is the host server for the test. This is used for ASP.NET unit tests.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.Web.AspNetDevelopmentServerHostAttribute.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.Web.AspNetDevelopmentServerHostAttribute" /> class with the full path name.</summary>
      <param name="pathToWebApp">The full path of the Web application. The path can include environment variables like %TEMPDIR%\website1.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.Web.AspNetDevelopmentServerHostAttribute.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.Web.AspNetDevelopmentServerHostAttribute" /> class with the full path name and the Web application root.</summary>
      <param name="pathToWebApp">The full path of the Web application. The path can include environment variables like %TEMPDIR%\website1.</param>
      <param name="webAppRoot">The Web application root.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.Web.AspNetDevelopmentServerHostAttribute.PathToWebApp">
      <summary>Gets the path of the Web application.</summary>
      <returns>The path of the Web application.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.Web.AspNetDevelopmentServerHostAttribute.WebAppRoot">
      <summary>Gets the Web application root.</summary>
      <returns>The Web application root.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.UnitTesting.Web.CredentialAttribute">
      <summary>Specifies the user name and password for ASP.NET sites that require basic authentication or Windows authentication. This class cannot be inherited.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.Web.CredentialAttribute.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.Web.CredentialAttribute" /> class with a user name and password needed to access the test Web site.</summary>
      <param name="userName">The user to authenticate.</param>
      <param name="password">The associated password for the user.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.Web.CredentialAttribute.#ctor(System.String,System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.Web.CredentialAttribute" /> class with a user name, password and domain needed to access the test Web site.</summary>
      <param name="userName">The user to authenticate.</param>
      <param name="password">The associated password for the user.</param>
      <param name="domain">The domain of the user.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.Web.CredentialAttribute.Domain">
      <summary>Gets the user's domain.</summary>
      <returns>The name of the user's domain.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.Web.CredentialAttribute.Password">
      <summary>Gets the user's password.</summary>
      <returns>The user's password.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.Web.CredentialAttribute.UserName">
      <summary>Gets the user's user name.</summary>
      <returns>The user's user name.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.UnitTesting.Web.UrlToTestAttribute">
      <summary>Specifies the URL that should be requested to give context to the test. This class cannot be inherited. </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.Web.UrlToTestAttribute.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.Web.UrlToTestAttribute" /> class.</summary>
      <param name="urlToTest">The URL to give context to the test.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.Web.UrlToTestAttribute.UrlToTest">
      <summary>Gets the URL that gives context to the test.</summary>
      <returns>A URL string.</returns>
    </member>
  </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\VisualStudio\VS10RTM\MsTest\Microsoft.VisualStudio.QualityTools.WebTestFramework.xml ===
ï»¿<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>Microsoft.VisualStudio.QualityTools.WebTestFramework</name>
  </assembly>
  <members>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.AlwaysExecuteRecorderPluginAttribute">
      <summary>Attribute to indicate that the recorder plug-in should always be executed.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.AlwaysExecuteRecorderPluginAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.AlwaysExecuteRecorderPluginAttribute" /> class.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.BaseEnumStringConverter`1">
      <summary>Helper class that helps with conversions between enum values and strings.</summary>
      <typeparam name="T"></typeparam>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.BaseEnumStringConverter`1.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.BaseEnumStringConverter`1" /> class.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.BaseEnumStringConverter`1.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Gets a value indicating whether this converter can convert an object in the given source type to a string using the specified context.</summary>
      <returns>true if this converter can perform the conversion; otherwise, false.</returns>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
      <param name="sourceType">A <see cref="T:System.Type" /> that represents the type you want to convert from.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.BaseEnumStringConverter`1.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Returns whether this converter can convert the object to the specified type.</summary>
      <returns>true if this converter can perform the conversion; otherwise, false.</returns>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
      <param name="destinationType">A <see cref="T:System.Type" /> that represents the type you want to convert to.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.BaseEnumStringConverter`1.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Converts the specified object to the type of this converter, using the specified context and culture information.</summary>
      <returns>An <see cref="T:System.Object" /> that represents the converted value.</returns>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
      <param name="culture">The <see cref="T:System.Globalization.CultureInfo" /> to use as the current culture.</param>
      <param name="value">The <see cref="T:System.Object" /> to convert.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.BaseEnumStringConverter`1.ConvertFromEnumToString(`0)">
      <summary>Converts the specified enum value to a string representative of this enum value.</summary>
      <returns>A string representation of the specified enum value.</returns>
      <param name="value">The enum value to convert.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.BaseEnumStringConverter`1.ConvertFromStringToEnum(System.String)">
      <summary>Converts the specified string to a corresponding enum value.</summary>
      <returns>The enum corresponding to the specified string value.</returns>
      <param name="value">The string value to convert.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.BaseEnumStringConverter`1.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Converts the specified value object to the specified type, using the specified context and culture information.</summary>
      <returns>An <see cref="T:System.Object" /> that represents the converted value.</returns>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
      <param name="culture">The <see cref="T:System.Globalization.CultureInfo" /> to use as the current culture.</param>
      <param name="value">The <see cref="T:System.Object" /> to convert.</param>
      <param name="destinationType">The <see cref="T:System.Type" /> to convert the <paramref name="value" /> parameter to.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.BaseEnumStringConverter`1.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Returns a collection of standard values for the data type this type converter is designed for when provided with a format context.</summary>
      <returns>A <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> that holds a standard set of valid values, or null if the data type does not support a standard set of values.</returns>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context that can be used to extract additional information about the environment from which this converter is invoked. This parameter or properties of this parameter can be null.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.BaseEnumStringConverter`1.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Returns whether the collection of standard values returned from <see cref="M:Microsoft.VisualStudio.TestTools.WebTesting.BaseEnumStringConverter`1.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" /> is an exclusive list of possible values, using the specified context.</summary>
      <returns>true if the <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> returned from <see cref="M:Microsoft.VisualStudio.TestTools.WebTesting.BaseEnumStringConverter`1.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" /> is an exhaustive list of possible values; false if other values are possible.</returns>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.BaseEnumStringConverter`1.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Returns whether this object supports a standard set of values that can be picked from a list, using the specified context.</summary>
      <returns>true if <see cref="M:Microsoft.VisualStudio.TestTools.WebTesting.BaseEnumStringConverter`1.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" /> should be called to find a common set of values the object supports; otherwise, false.</returns>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.BaseEnumStringConverter`1.PopulateStandardValues">
      <summary>Returns a string array with the string representation of all possible enum values.</summary>
      <returns>A string array with the string representation of all possible enum values.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.BinaryHttpBody"></member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.BinaryHttpBody.#ctor"></member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.BinaryHttpBody.Clone"></member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.BinaryHttpBody.ContentType"></member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.BinaryHttpBody.Data"></member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.BinaryHttpBody.WriteHttpBody(Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequest,System.IO.Stream)"></member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.Comment">
      <summary>Represents a comment that the test designer adds to a Web test.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.Comment.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.Comment" /> class.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.Comment.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.Comment" /> class using the specified string.</summary>
      <param name="commentText">A <see cref="T:System.String" /> that contains the text of the comment. </param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.Comment.Clone">
      <summary>Creates a new <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.Comment" /> that is a copy of the current <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.Comment" />.</summary>
      <returns>A new <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.Comment" /> that is a copy of the current <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.Comment" />.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.Comment.CommentText">
      <summary>Gets or sets the text of the comment. </summary>
      <returns>The text of the comment. </returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.ConditionalConstructType">
      <summary>Enumerates all possible conditional construct types.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.TestTools.WebTesting.ConditionalConstructType.Condition">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.TestTools.WebTesting.ConditionalConstructType.Loop">
      <summary />
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.ConditionalEventArgs">
      <summary>Class to contain <see cref="T:System.EventArgs" /> used for conditional loops and statements.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.ConditionalEventArgs.IsMet">
      <summary>Gets or sets whether the condition was met or not.</summary>
      <returns>true if the condition was met; otherwise, false. </returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.ConditionalEventArgs.Message">
      <summary>Gets or sets the message to appear when this rule is run in playback. This message is not shown during a load test.</summary>
      <returns>A message to appear when this rule is run in playback.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.ConditionalEventArgs.WebTest">
      <summary>Gets the Web test that contains the request that triggered this condition event.</summary>
      <returns>The Web test that triggered this condition event.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.ConditionalRule">
      <summary>Condition rules are executed in a conditional loop or statement. These rules are intended to decide whether the body of the loop or statement should be executed.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.ConditionalRule.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.ConditionalRule" /> class.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.ConditionalRule.CheckCondition(System.Object,Microsoft.VisualStudio.TestTools.WebTesting.ConditionalEventArgs)">
      <summary>Determines whether the condition was met or not.</summary>
      <param name="sender">The sender of the event.</param>
      <param name="e">The <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.ConditionalEventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.ConditionalRule.CleanUp(System.Object,Microsoft.VisualStudio.TestTools.WebTesting.ConditionalEventArgs)">
      <summary>Called after the loop or condition finished executing. This includes any requests in the body. Any cleanup code relevant to the conditional rule should be added to this method.</summary>
      <param name="sender">The sender of the event.</param>
      <param name="e">The <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.ConditionalEventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.ConditionalRule.Initialize(System.Object,Microsoft.VisualStudio.TestTools.WebTesting.ConditionalEventArgs)">
      <summary>Called before the first <see cref="M:Microsoft.VisualStudio.TestTools.WebTesting.ConditionalRule.CheckCondition(System.Object,Microsoft.VisualStudio.TestTools.WebTesting.ConditionalEventArgs)" /> call is made. Any initialization code relevant to the conditional rule should be added to this method.</summary>
      <param name="sender">The sender of the event.</param>
      <param name="e">The <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.ConditionalEventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.ConditionalRule.StringRepresentation">
      <summary>Converts the rule to a string to be displayed in the tree.</summary>
      <returns>A string representation of the rule.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.ConditionalRuleException">
      <summary>A <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.ConditionalRuleException" /> is thrown when an exception occurs while executing one of the three methods of a conditional rule. The three methods are <see cref="M:Microsoft.VisualStudio.TestTools.WebTesting.ConditionalRule.Initialize(System.Object,Microsoft.VisualStudio.TestTools.WebTesting.ConditionalEventArgs)" />, <see cref="M:Microsoft.VisualStudio.TestTools.WebTesting.ConditionalRule.CheckCondition(System.Object,Microsoft.VisualStudio.TestTools.WebTesting.ConditionalEventArgs)" />, and <see cref="M:Microsoft.VisualStudio.TestTools.WebTesting.ConditionalRule.CleanUp(System.Object,Microsoft.VisualStudio.TestTools.WebTesting.ConditionalEventArgs)" />.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.ConditionalRuleException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.ConditionalRuleException" /> class.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.ConditionalRuleException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.ConditionalRuleException" /> class. Used in remoting scenarios when an exception is propagated from the server to the client.</summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> to use for serialization and deserialization.</param>
      <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> to describe the source and destination of the serialized stream.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.ConditionalRuleException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.ConditionalRuleException" /> class with the specified message.</summary>
      <param name="message">The message to use for initialization.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.ConditionalRuleException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.ConditionalRuleException" /> class with the specified message an inner exception.</summary>
      <param name="message">The message.</param>
      <param name="innerException">The inner exception data.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.ConditionalRuleReference">
      <summary>Base class for a reference to a particular conditional rule.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.ConditionalRuleReference.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.ConditionalRuleReference" /> class.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.ConditionalRuleReference.#ctor(Microsoft.VisualStudio.TestTools.WebTesting.ConditionalRuleReference)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.ConditionalRuleReference" /> class by copying the specified <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.ConditionalRuleReference" />.</summary>
      <param name="copy">The <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.ConditionalRuleReference" /> to copy to create the new <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.ConditionalRuleReference" />.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.ConditionalRuleReference.#ctor(System.Type)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.ConditionalRuleReference" /> class with the specified type.</summary>
      <param name="type">The type to use for initialization.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.ConditionalRuleReferenceCollection">
      <summary>Represents a strongly typed container for web-test conditional rule references.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.ConditionalRuleReferenceCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.ConditionalRuleReferenceCollection" /> class.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.ConditionalRuleType">
      <summary>Enumerates all possible condition rule types.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.TestTools.WebTesting.ConditionalRuleType.AnyConditional">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.TestTools.WebTesting.ConditionalRuleType.ConditionOnly">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.TestTools.WebTesting.ConditionalRuleType.LoopOnly">
      <summary />
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.ConditionConditionalRuleReference">
      <summary>Reference to a conditional rule that will be used in a condition.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.ConditionConditionalRuleReference.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.ConditionConditionalRuleReference" /> class.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.ConditionConditionalRuleReference.#ctor(Microsoft.VisualStudio.TestTools.WebTesting.ConditionConditionalRuleReference)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.ConditionConditionalRuleReference" /> class by copying the specified <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.ConditionConditionalRuleReference" />.</summary>
      <param name="copy">The <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.ConditionConditionalRuleReference" /> to copy to create the new <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.ConditionConditionalRuleReference" />.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.ConditionConditionalRuleReference.#ctor(System.Type)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.ConditionConditionalRuleReference" /> class with the specified type.</summary>
      <param name="type">The type to use for initialization.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.ConditionConditionalRuleReference.Clone">
      <summary>Creates a new <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.ConditionConditionalRuleReference" /> that is a copy of the current instance.</summary>
      <returns>A new <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.ConditionConditionalRuleReference" /> that is a copy of the current instance.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.ConnectionFailedWebTestException">
      <summary>An exception that is thrown by the test engine for connection failure errors during a Web test.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.ConnectionFailedWebTestException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.ConnectionFailedWebTestException" /> class.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.ConnectionFailedWebTestException.#ctor(System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.ConnectionFailedWebTestException" /> class with a reference to the inner exception that is the cause of this exception.</summary>
      <param name="innerException">The exception that is the cause of the current exception.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.ConnectionFailedWebTestException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.ConnectionFailedWebTestException" /> class with serialized data, for use in remoting scenarios.</summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown. </param>
      <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.ConnectionFailedWebTestException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.ConnectionFailedWebTestException" /> class with a specified error message.</summary>
      <param name="message">A message that describes the error. </param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.ConnectionFailedWebTestException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.ConnectionFailedWebTestException" /> class with a specified error message and a reference to the inner exception that is the cause of this exception.</summary>
      <param name="message">A message that describes the error.</param>
      <param name="innerException">The exception that is the cause of the current exception.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.ContextParameter">
      <summary>The <see cref="N:Microsoft.VisualStudio.TestTools.WebTesting" /><see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.ContextParameter" /> class encapsulates a single parameter in the WebTest context that has a name and value. A <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.ContextParameter" /> object is typically one of many <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.ContextParameter" /> objects in the WebTest.Context property which is a collection of <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.ContextParameter" /> objects.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.ContextParameter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.ContextParameter" /> class with an empty <see cref="P:Microsoft.VisualStudio.TestTools.WebTesting.ContextParameter.Name" /> and <see cref="P:Microsoft.VisualStudio.TestTools.WebTesting.ContextParameter.Value" />.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.ContextParameter.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.ContextParameter" /> class with the specified <see cref="P:Microsoft.VisualStudio.TestTools.WebTesting.ContextParameter.Name" /> and <see cref="P:Microsoft.VisualStudio.TestTools.WebTesting.ContextParameter.Value" />.</summary>
      <param name="parameterName">The name of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.ContextParameter" />.</param>
      <param name="parameterValue">The value of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.ContextParameter" />.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.ContextParameter.Clone">
      <summary>Creates a new <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.ContextParameter" /> that is a copy of the current instance.</summary>
      <returns>A new <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.ContextParameter" /> that is a copy of the current instance.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.ContextParameter.Name">
      <summary>Gets or sets the name of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.ContextParameter" />.</summary>
      <returns>The name of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.ContextParameter" />.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.ContextParameter.Value">
      <summary>Gets or sets the value of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.ContextParameter" />.</summary>
      <returns>The value of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.ContextParameter" />.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.ContextParameterCollection">
      <summary>Contains a strongly typed collection of <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.ContextParameter" /> objects.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.ContextParameterCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.ContextParameterCollection" /> class.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.CssIterationAttribute">
      <summary>Represents the project iteration to which this test corresponds. This class cannot be inherited.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.CssIterationAttribute.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.CssIterationAttribute" /> class. </summary>
      <param name="cssIteration">A string that identifies the corresponding project iteration.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.CssIterationAttribute.CssIteration">
      <summary>Gets the iteration identifier for the test.</summary>
      <returns>An iteration identifier. </returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.CssProjectStructureAttribute">
      <summary>Represents the node in the team project hierarchy to which this test corresponds.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.CssProjectStructureAttribute.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.CssProjectStructureAttribute" /> class. </summary>
      <param name="cssProjectStructure">A string that identifies the corresponding project feature.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.CssProjectStructureAttribute.CssProjectStructure">
      <summary>Gets the project feature identifier for the test.</summary>
      <returns>A project feature identifier.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.DataBindingAccessMethod">
      <summary>Enumeration for the access method that is used for data binding.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.TestTools.WebTesting.DataBindingAccessMethod.Random">
      <summary>Randomly selects data from the data source for the duration of the test.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.TestTools.WebTesting.DataBindingAccessMethod.Sequential">
      <summary>Sequentially selects data from the data source for the duration of the test. If necessary, starts at the first row of the data source again.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.TestTools.WebTesting.DataBindingAccessMethod.Unique">
      <summary>Sequentially selects each element in the data source only one time and ends the test when the data is exhausted. For example, if the data source has ten rows, then the load test will have ten test iterations executed and then stop, even if there is time left in the test duration. Additionally, if there are other tests in the load test not using the unique data binding option, the load test will continue to run those tests although the unique tests have ended.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.TestTools.WebTesting.DataBindingAccessMethod.DoNotMoveCursor">
      <summary />
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.DataBindingAttribute">
      <summary>Contains information that defines data binding properties for a Web test. This class cannot be inherited.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.DataBindingAttribute.#ctor(System.String,System.String,System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.DataBindingAttribute" /> class.</summary>
      <param name="dataSourceName">The name of the data source to bind.</param>
      <param name="tableName">The name of the table that contains the data to bind.</param>
      <param name="columnName">The name of the column that contains data to bind.</param>
      <param name="contextVariableName">The name of the variable that represents the data-bound value.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.DataBindingAttribute.ColumnName">
      <summary>Gets the name of the column that contains data to bind.</summary>
      <returns>A column name.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.DataBindingAttribute.ContextVariableName">
      <summary>Gets the name of the variable that represents the data-bound value.</summary>
      <returns>The name of the variable that represents the data-bound value.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.DataBindingAttribute.DataSourceName">
      <summary>Gets the name of the data source to bind.</summary>
      <returns>A data source name. </returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.DataBindingAttribute.TableName">
      <summary>Gets the name of the table that contains the data to bind. </summary>
      <returns>A table name. </returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.DataBindingSelectColumns"></member>
    <member name="F:Microsoft.VisualStudio.TestTools.WebTesting.DataBindingSelectColumns.SelectAllColumns">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.TestTools.WebTesting.DataBindingSelectColumns.SelectOnlyBoundColumns">
      <summary />
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.DataSource">
      <summary>Defines a data source for a Web test. </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.DataSource.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.DataSource" /> class. </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.DataSource.Clone">
      <summary>Creates a new instance of the data source. </summary>
      <returns>A new instance of the data source.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.DataSource.Connection">
      <summary>Gets the connection string that is used to connect to the data source. The format for the connection string is the same as for the ConnectionString property of the System.Data.OleDbConnection class.</summary>
      <returns>The connection string that is used to connect to the data source.</returns>
    </member>
    <member name="F:Microsoft.VisualStudio.TestTools.WebTesting.DataSource.CsvProvider">
      <summary>Specifies a .csv file as a data source for a Web test. </summary>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.DataSource.Name">
      <summary>Gets or sets the name for the data source that uniquely identifies the data source from other data sources in the Web test.</summary>
      <returns>The name for the data source.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.DataSource.Provider">
      <summary>Gets the provider-invariant name for this data source. Example: System.Data.OleDb.</summary>
      <returns>The provider-invariant name for this data source.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.DataSource.SetConnection(System.String,System.String)">
      <summary>Sets the provider and connection string for the data source.</summary>
      <param name="provider">The <see cref="P:Microsoft.VisualStudio.TestTools.WebTesting.DataSource.Provider" /> name for the data source. </param>
      <param name="connection">The <see cref="P:Microsoft.VisualStudio.TestTools.WebTesting.DataSource.Connection" /> string to set for this data source. </param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.DataSource.SetConnection(System.String,System.String,System.String)">
      <summary>Sets the provider and connection string and enables a different string that you can use as a display value.</summary>
      <param name="provider">The <see cref="P:Microsoft.VisualStudio.TestTools.WebTesting.DataSource.Provider" /> name for the data source.</param>
      <param name="connection">The <see cref="P:Microsoft.VisualStudio.TestTools.WebTesting.DataSource.Connection" /> string to set for this data source.</param>
      <param name="connectionDisplayValue">The connection string value to be displayed in the editor. This value should be the same as the connection string with security value stripped out.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.DataSource.Tables">
      <summary>A <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.DataSourceTableCollection" /> object that contains a <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.DataSourceTable" /> object for each table in the data source that can be used by the Web test.</summary>
      <returns>A <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.DataSourceTableCollection" /> object.</returns>
    </member>
    <member name="F:Microsoft.VisualStudio.TestTools.WebTesting.DataSource.XmlProvider">
      <summary>Specifies an XML data source for a Web test.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.DataSourceAttribute">
      <summary>Contains information that describes a data source for a Web test. This class cannot be inherited. </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.DataSourceAttribute.#ctor(System.String,System.String,Microsoft.VisualStudio.TestTools.WebTesting.DataBindingAccessMethod,System.String)">
      <summary>Initializes an instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.DataSourceAttribute" /> class using a single table and the defined access method.</summary>
      <param name="dataSourceName">The name of the data source.</param>
      <param name="connectionString">The connection string to access the data source.</param>
      <param name="accessMethod">The mode for accessing data from the data source.</param>
      <param name="tableName">The table name within the data source that contain information to be accessed.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.DataSourceAttribute.#ctor(System.String,System.String,Microsoft.VisualStudio.TestTools.WebTesting.DataBindingAccessMethod,System.String[])">
      <summary>Initializes an instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.DataSourceAttribute" /> class using an array of table names.</summary>
      <param name="dataSourceName">The name of the data source.</param>
      <param name="connectionString">The connection string to access the data source.</param>
      <param name="accessMethod">The mode for accessing data from the data source.</param>
      <param name="tableNames">The table names within the data source that contain information to be accessed.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.DataSourceAttribute.#ctor(System.String,System.String,System.String)">
      <summary>Initializes an instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.DataSourceAttribute" /> class using a single table.</summary>
      <param name="dataSourceName">The name of the data source.</param>
      <param name="connectionString">The connection string to access the data source.</param>
      <param name="tableName">The table name within the data source that contain information to be accessed.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.DataSourceAttribute.#ctor(System.String,System.String,System.String,Microsoft.VisualStudio.TestTools.WebTesting.DataBindingAccessMethod,Microsoft.VisualStudio.TestTools.WebTesting.DataBindingSelectColumns,System.String)"></member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.DataSourceAttribute.#ctor(System.String,System.String,System.String,Microsoft.VisualStudio.TestTools.WebTesting.DataBindingAccessMethod,Microsoft.VisualStudio.TestTools.WebTesting.DataBindingSelectColumns,System.String[])"></member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.DataSourceAttribute.#ctor(System.String,System.String,System.String,Microsoft.VisualStudio.TestTools.WebTesting.DataBindingAccessMethod,System.String)">
      <summary>Initializes an instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.DataSourceAttribute" /> class using a single table, the defined access method, and the name of the data source provider.</summary>
      <param name="dataSourceName">The name of the data source.</param>
      <param name="providerName">The name of the data source provider.</param>
      <param name="connectionString">The connection string to access the data source.</param>
      <param name="accessMethod">The mode for accessing data from the data source.</param>
      <param name="tableName">The table name within the data source that contain information to be accessed.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.DataSourceAttribute.#ctor(System.String,System.String,System.String,Microsoft.VisualStudio.TestTools.WebTesting.DataBindingAccessMethod,System.String[])">
      <summary>Initializes an instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.DataSourceAttribute" /> class using an array of table names, the defined access method, and the name of the data source provider.</summary>
      <param name="dataSourceName">The name of the data source.</param>
      <param name="providerName">The name of the data source provider.</param>
      <param name="connectionString">The connection string to access the data source.</param>
      <param name="accessMethod">The mode for accessing data from the data source.</param>
      <param name="tableNames">The table names within the data source that contain information to be accessed.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.DataSourceAttribute.#ctor(System.String,System.String,System.String,System.String)">
      <summary>Initializes an instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.DataSourceAttribute" /> class using a single table and the name of the data source provider.</summary>
      <param name="dataSourceName">The name of the data source.</param>
      <param name="providerName">The name of the data source provider. </param>
      <param name="connectionString">The connection string to access the data source.</param>
      <param name="tableName">The table name within the data source that contain information to be accessed.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.DataSourceAttribute.#ctor(System.String,System.String,System.String,System.String[])">
      <summary>Initializes an instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.DataSourceAttribute" /> class using an array of table names and the name of the data source provider.</summary>
      <param name="dataSourceName">The name of the data source.</param>
      <param name="providerName">The name of the data source provider.</param>
      <param name="connectionString">The connection string to access the data source.</param>
      <param name="tableNames">The table names within the data source that contain information to be accessed.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.DataSourceAttribute.#ctor(System.String,System.String,System.String[])">
      <summary>Initializes an instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.DataSourceAttribute" /> class.</summary>
      <param name="dataSourceName">The name of the data source.</param>
      <param name="connectionString">The connection string to access the data source.</param>
      <param name="tableNames">The table names, within the data source, that contain information to be accessed.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.DataSourceAttribute.AccessMethod">
      <summary>Gets the method by which data will be accessed in the data source.</summary>
      <returns>A <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.DataBindingAccessMethod" /> enumeration.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.DataSourceAttribute.ConnectionString">
      <summary>Gets the connection for the data source.</summary>
      <returns>A connection string.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.DataSourceAttribute.DataSourceName">
      <summary>Gets the name of the data source.</summary>
      <returns>A data source name.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.DataSourceAttribute.DataSourceProviderName">
      <summary>Gets the name of the data source provider. </summary>
      <returns>The name of the data source provider.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.DataSourceAttribute.SelectColumns"></member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.DataSourceAttribute.TableNames">
      <summary>Gets the table names in the data source that contains data to be accessed.</summary>
      <returns>An array of table names.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.DataSourceCollection">
      <summary>Contains a strongly typed collection of <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.DataSourceCollection" /> objects.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.DataSourceCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.DataSourceCollection" /> class.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.DataSourceTable">
      <summary>An object that represents a table in a data source that you can use in a Web test.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.DataSourceTable.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.DataSourceTable" /> class.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.DataSourceTable.AccessMethod">
      <summary>Gets or sets the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.DataBindingAccessMethod" /> enumeration value: either Sequential, Random, or Unique.</summary>
      <returns>The <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.DataBindingAccessMethod" /> enumeration value</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.DataSourceTable.Clone">
      <summary>Creates a new <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.DataSourceTable" /> that is a copy of the current instance.</summary>
      <returns>A new <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.DataSourceTable" /> that is a copy of the current instance.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.DataSourceTable.Name">
      <summary>Gets or sets the name for the data source table. This name must be unique throughout the data source.</summary>
      <returns>The name for the data source table.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.DataSourceTable.SelectColumns"></member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.DataSourceTableCollection">
      <summary>Contains a strongly typed collection of <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.DataSourceTableCollection" /> objects.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.DataSourceTableCollection.#ctor">
      <summary>Initializes an instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.DataSourceTableCollection" /> class.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.DeclarativeWebTest">
      <summary>Represents a declarative, XML-based Web test. </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.DeclarativeWebTest.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.DeclarativeWebTest" /> class.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.DeclarativeWebTest.Clone">
      <summary>Creates a new <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.DeclarativeWebTest" /> that is a copy of the current instance.</summary>
      <returns>A new <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.DeclarativeWebTest" /> that is a copy of the current instance.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.DeclarativeWebTest.ConditionalRuleReferences"></member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.DeclarativeWebTest.ContextParameters">
      <summary>Gets the set of context parameters associated with this Web test.</summary>
      <returns>A collection of context parameters. </returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.DeclarativeWebTest.Description">
      <summary>Gets or sets a textual description of this Web test. </summary>
      <returns>A description of this Web test. </returns>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.DeclarativeWebTest.GetExtractionRuleVariables"></member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.DeclarativeWebTest.GetItem(System.Int32)"></member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.DeclarativeWebTest.GetRequestEnumerator">
      <returns>An enumerator.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.DeclarativeWebTest.InitializeDataBinding"></member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.DeclarativeWebTest.InsertItemAt(System.Int32,Microsoft.VisualStudio.TestTools.WebTesting.WebTestItem)"></member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.DeclarativeWebTest.Items">
      <summary>Gets or sets the set of items that are contained in this Web test. Items are transactions, requests, comments, and included Web tests.</summary>
      <returns>A collection of items. </returns>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.DeclarativeWebTest.RemoveItemAt(System.Int32)"></member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.DeclarativeWebTest.RequestItems"></member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.DeclarativeWebTestSerializer">
      <summary>Loads the contents of a .webtest file into an instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.DeclarativeWebTest" /> class.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.DeclarativeWebTestSerializer.Open(System.IO.Stream)">
      <param name="stream"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.DeclarativeWebTestSerializer.Open(System.String)">
      <summary>Opens a Web test file. </summary>
      <returns>A declarative Web test. </returns>
      <param name="fileName">The path to and name of a Web test file.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.DeclarativeWebTestSerializer.Save(Microsoft.VisualStudio.TestTools.WebTesting.DeclarativeWebTest,System.IO.Stream)">
      <summary>Saves a Web test to a stream. </summary>
      <param name="declarativeWebTest">A declarative Web test.</param>
      <param name="stream"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.DeclarativeWebTestSerializer.Save(Microsoft.VisualStudio.TestTools.WebTesting.DeclarativeWebTest,System.String)">
      <summary>Saves a Web test file. </summary>
      <param name="declarativeWebTest">A declarative Web test. </param>
      <param name="fileName">The path to and name of a Web test file.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.DeploymentItemAttribute">
      <summary>Used to specify deployment items such as a file or directory for per-test-deployment. This class cannot be inherited.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.DeploymentItemAttribute.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.DeploymentItemAttribute" /> class. Use the <paramref name="path" /> parameter to specify the path to a file or directory to deploy.  </summary>
      <param name="path">The relative or absolute path to the deployment item or directory to deploy. All items or directories will be deployed to the directory where the deployed test assemblies reside.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.DeploymentItemAttribute.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.DeploymentItemAttribute" /> class. Use the <paramref name="path" /> parameter to specify the path to a file or directory to deploy, and the <paramref name="outputDirectory" /> parameter to specify the path to the output directory.  </summary>
      <param name="path">The relative or absolute path to the deployment item or directory to deploy.</param>
      <param name="outputDirectory">The path to the output directory. This contains all items and directories identified by <paramref name="path" />. This directory will be relative to the directory that contains the deployed test assemblies.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.DeploymentItemAttribute.OutputDirectory">
      <summary>Gets a value representing the path to the output directory.</summary>
      <returns>A value representing the directory under the deployment directory that will contain the deployed files and directories.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.DeploymentItemAttribute.Path">
      <summary>Gets a value that represents the path to the deployment item.</summary>
      <returns>The path to the file or directory to deploy.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.ExtractHtmlSelectTag">
      <summary>An extraction rule used to extract the selected option from an HTML select tag.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.ExtractHtmlSelectTag.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.ExtractHtmlSelectTag" /> class.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.ExtractHtmlSelectTag.Extract(System.Object,Microsoft.VisualStudio.TestTools.WebTesting.ExtractionEventArgs)">
      <summary>Extracts the selected option of a particular HTML select tag.</summary>
      <param name="sender">The sender of the event.</param>
      <param name="e">The <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.ExtractionEventArgs" /> that contains the event data.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.ExtractHtmlSelectTag.Index">
      <summary>Gets or sets the index.</summary>
      <returns>The index.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.ExtractHtmlSelectTag.SelectTagName">
      <summary>Gets or sets the select tag name.</summary>
      <returns>The select tag name.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.ExtractHtmlTagInnerText">
      <summary>Extraction rule used to extract the inner text from an HTML tag</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.ExtractHtmlTagInnerText.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.ExtractHtmlTagInnerText" /> class.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.ExtractHtmlTagInnerText.AttributeName">
      <summary>Gets or sets the attribute name.</summary>
      <returns>The attribute name.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.ExtractHtmlTagInnerText.AttributeValue">
      <summary>Gets or sets the attribute value.</summary>
      <returns>The attribute value.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.ExtractHtmlTagInnerText.CollapseWhiteSpace">
      <summary>Gets or sets the indicator of whether to collapse white space.</summary>
      <returns>true to collapse white space; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.ExtractHtmlTagInnerText.Extract(System.Object,Microsoft.VisualStudio.TestTools.WebTesting.ExtractionEventArgs)">
      <summary>Extracts the Inner Text of a particular HTML tag.</summary>
      <param name="sender">The sender of the event.</param>
      <param name="e">The <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.ExtractionEventArgs" /> that contains the event data.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.ExtractHtmlTagInnerText.HasClosingTags">
      <summary>Gets or sets the indicator of whether to include closing tags.</summary>
      <returns>true to include closing tags; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.ExtractHtmlTagInnerText.Index">
      <summary>Gets or sets the index.</summary>
      <returns>The index.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.ExtractHtmlTagInnerText.RemoveInnerTags">
      <summary>Gets or sets the indicator of whether to remove the inner tags.</summary>
      <returns>true to remove the inner tags; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.ExtractHtmlTagInnerText.TagName">
      <summary>Gets or sets the tag name.</summary>
      <returns>The tag name.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.ExtractionEventArgs">
      <summary>Provides data for the <see cref="E:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequest.ExtractValues" /> event. </summary>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.ExtractionEventArgs.Message">
      <summary>Gets or sets a message that is associated with the results of the <see cref="E:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequest.ExtractValues" /> event.</summary>
      <returns>A message that is associated with the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.ExtractionEventArgs" />.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.ExtractionEventArgs.Request">
      <summary>Gets the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequest" /> object that generated the response.</summary>
      <returns>A <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequest" /> object.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.ExtractionEventArgs.Response">
      <summary>Gets the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResponse" /> object from which to extract values into the context.</summary>
      <returns>A <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResponse" /> object.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.ExtractionEventArgs.Success">
      <summary>Gets or sets a value that indicates whether the extraction rule succeeded.</summary>
      <returns>true if it did succeed; otherwise, false. The default is true.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.ExtractionEventArgs.WebTest">
      <summary>Gets the Web test that contains the request that triggered the extraction event.</summary>
      <returns>A <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTest" /> object.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.ExtractionRule">
      <summary>Base class used to define rules for obtaining data from a Web response that is generated by a Web test. </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.ExtractionRule.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.ExtractionRule" /> class. </summary>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.ExtractionRule.ContextParameterName">
      <summary>Gets or sets the context name of the extracted property.</summary>
      <returns>The context name of the extracted property.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.ExtractionRule.Extract(System.Object,Microsoft.VisualStudio.TestTools.WebTesting.ExtractionEventArgs)">
      <summary>When overridden in a derived class, this method extracts information from a <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.HtmlDocument" /> and places it into the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestContext" />.</summary>
      <param name="sender">The source of the event.</param>
      <param name="e">An <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.ExtractionEventArgs" /> that contains the event data.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.ExtractionRule.RuleDescription">
      <summary>This method is no longer used. Use the <see cref="T:System.ComponentModel.DisplayNameAttribute" /> on the class to set a description for this rule.</summary>
      <returns>The rule description.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.ExtractionRule.RuleName">
      <summary>This method is no longer used. Use the <see cref="T:System.ComponentModel.DisplayNameAttribute" /> on the class to set a display name for this rule.</summary>
      <returns>The rule name.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.ExtractionRuleReference">
      <summary>The <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.ExtractionRuleReference" /> class encapsulates the metadata about an <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.ExtractionRule" /> and the parameter values to use when an instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.ExtractionRule" /> is created when the Web test that uses the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.ExtractionRule" /> is run.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.ExtractionRuleReference.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.ExtractionRuleReference" /> class.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.ExtractionRuleReference.#ctor(System.Type)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.ExtractionRuleReference" /> class using the <see cref="T:System.Type" /> of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.ExtractionRule" /> implementation as a parameter.</summary>
      <param name="type">The <see cref="T:System.Type" /> of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.ExtractionRule" /> implementation.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.ExtractionRuleReference.Clone">
      <summary>Returns a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.ExtractionRuleReference" /> object.</summary>
      <returns>An <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.ExtractionRuleReference" /> object.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.ExtractionRuleReference.ContextParameterName">
      <summary>Gets or sets the name of the context parameter in the Web test's context.</summary>
      <returns>The name of the context parameter in the Web test's context.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.ExtractionRuleReferenceCollection">
      <summary>Contains a strongly typed collection of <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.ExtractionRuleReferenceCollection" /> objects.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.ExtractionRuleReferenceCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.ExtractionRuleReferenceCollection" /> class.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.FileUploadParameter">
      <summary>Represents a file upload form post parameter.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.FileUploadParameter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.FileUploadParameter" /> class.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.FileUploadParameter.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.FileUploadParameter" /> class with values for the inherited Name and UrlEncode properties in addition to the <see cref="P:Microsoft.VisualStudio.TestTools.WebTesting.FileUploadParameter.FileName" /> property.</summary>
      <param name="name">The parameter name.</param>
      <param name="fileName">The name of the file to upload.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.FileUploadParameter.#ctor(System.String,System.String,System.String)"></member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.FileUploadParameter.#ctor(System.String,System.String,System.String,System.Boolean)"></member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.FileUploadParameter.Clone">
      <summary>Performs a MemberwiseClone on this instance.</summary>
      <returns>A <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.FileUploadParameter" /> object.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.FileUploadParameter.ContentType">
      <summary>Gets or sets the content type header.</summary>
      <returns>The content type header. The default value is "application/octet-stream".</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.FileUploadParameter.FileName">
      <summary>Gets or sets the file name to upload.</summary>
      <returns>The file name to upload.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.FileUploadParameter.GenerateUniqueName"></member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.ForLoopComparisonOperator">
      <summary>Enumerates all possible numerical comparison operators for the for loop conditional rule.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.TestTools.WebTesting.ForLoopComparisonOperator.LessThan">
      <summary>Represents a less than comparison.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.TestTools.WebTesting.ForLoopComparisonOperator.LessThanOrEqual">
      <summary>Represents a less than or equal comparison.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.TestTools.WebTesting.ForLoopComparisonOperator.GreaterThan">
      <summary>Represents a greater than comparison.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.TestTools.WebTesting.ForLoopComparisonOperator.GreaterThanOrEqual">
      <summary>Represents a greater than or equal comparison.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.ForLoopComparisonOperatorConverter">
      <summary>Helper class that helps with conversions between enum values and strings.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.ForLoopComparisonOperatorConverter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.ForLoopComparisonOperatorConverter" /> class.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.ForLoopComparisonOperatorConverter.ConvertFromEnumToString(Microsoft.VisualStudio.TestTools.WebTesting.ForLoopComparisonOperator)">
      <summary>Converts the specified enum value to a string representative of this enum value.</summary>
      <returns>A string representation of the specified enum value.</returns>
      <param name="value">The enum value to convert.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.ForLoopComparisonOperatorConverter.ConvertFromStringToEnum(System.String)">
      <summary>Converts the specified string to a corresponding enum value.</summary>
      <returns>The enum corresponding to the specified string value.</returns>
      <param name="value">The string value to convert.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.ForLoopComparisonOperatorConverter.PopulateStandardValues">
      <summary>Returns a string array with the string representation of all possible enum values.</summary>
      <returns>A string array with the string representation of all possible enum values.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.FormPostHttpBody">
      <summary>Represents an HTML form post body with a collection of form parameters.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.FormPostHttpBody.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.FormPostHttpBody" /> class.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.FormPostHttpBody.Clone">
      <summary>Returns a deep copy of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.FormPostHttpBody" />.</summary>
      <returns>A deep copy of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.FormPostHttpBody" />.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.FormPostHttpBody.ContentType">
      <summary>Gets a value that indicates the content type of the data being sent.</summary>
      <returns>A value representing the content type.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.FormPostHttpBody.FormPostParameters">
      <summary>Gets the list of FormPostParameters included in this <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.FormPostHttpBody" />.</summary>
      <returns>A <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.FormPostParameterCollection" /> collection that contains each <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.FormPostParameter" /> associated with this <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.FormPostHttpBody" />.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.FormPostHttpBody.WriteHttpBody(Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequest,System.IO.Stream)">
      <summary>Writes the HTTP body stream.</summary>
      <param name="request">Used to define the encoding of non-ASCII characters.</param>
      <param name="bodyStream">The stream to add the form post HTTP body.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.FormPostParameter">
      <summary>Represents an HTML form POST parameter.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.FormPostParameter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.FormPostParameter" /> object.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.FormPostParameter.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.FormPostParameter" /> object with a name/value pair.</summary>
      <param name="name">The form post parameter name.</param>
      <param name="value">The form post parameter value.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.FormPostParameter.#ctor(System.String,System.String,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.FormPostParameter" /> object with a form post parameter name/value pair and a Boolean value that indicates whether the FormPost Parameter is URL encoded.</summary>
      <param name="name">The form post parameter name.</param>
      <param name="value">The form post parameter value.</param>
      <param name="urlEncode">true if this <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.FormPostParameter" /> is URL encoded; otherwise, false.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.FormPostParameter.Clone">
      <summary>Creates a clone of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.FormPostParameter" /> object.</summary>
      <returns>A <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.FormPostParameter" /> object.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.FormPostParameterCollection">
      <summary>Represents a strongly typed container for form post parameters.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.FormPostParameterCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.FormPostParameterCollection" /> class.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.FormPostParameterCollection.Add(System.String,System.String)">
      <summary>Adds a <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.FormPostParameter" /> created from a parameter name and value.</summary>
      <param name="parameterName">The name of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.FormPostParameter" /> to be created and then added to the collection.</param>
      <param name="parameterValue">The value of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.FormPostParameter" /> to be created and then added to the collection.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.FormPostParameterCollection.Add(System.String,System.String,System.Boolean)">
      <summary>Adds a <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.FormPostParameter" /> created from a parameter name and value and a value that indicates whether the form post parameter is URL encoded.</summary>
      <param name="parameterName">The name of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.FormPostParameter" /> to be created and then added to the collection.</param>
      <param name="parameterValue">The value of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.FormPostParameter" /> to be created and then added to the collection.</param>
      <param name="urlEncode">true if the form post parameter is URL encoded; otherwise, false.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.FormPostParameterCollection.Contains(System.String)">
      <summary>Gets a value that indicates whether a <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.FormPostParameter" /> occurs in this collection.</summary>
      <returns>true if the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.FormPostParameter" /> exists in this collection; otherwise, false.</returns>
      <param name="parameterName">The name of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.FormPostParameter" /> to look for in this collection.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.HtmlAttribute">
      <summary>Represents an HTML attribute.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.HtmlAttribute.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.HtmlAttribute" /> class.</summary>
      <param name="name">The name of the HTML attribute.</param>
      <param name="value">The value of the HTML attribute.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.HtmlAttribute.Name">
      <summary>Gets the attribute name set by the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.HtmlAttribute" /> constructor.</summary>
      <returns>The name of the attribute.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.HtmlAttribute.Value">
      <summary>Gets the attribute value set by the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.HtmlAttribute" /> constructor.</summary>
      <returns>The value of the attribute.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.HtmlAttributeWithOffsets">
      <summary>Extends the basic <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.HtmlAttribute" /> and tracks the beginning and ending offsets within an HTML document.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.HtmlAttributeWithOffsets.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.HtmlAttributeWithOffsets" /> class.</summary>
      <param name="name">The name of the HTML attribute.</param>
      <param name="value">The value of the HTML attribute.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.HtmlAttributeWithOffsets.BeginOffset">
      <summary>Gets or sets the first character offset of an HTML attribute within an HTML document.</summary>
      <returns>A value that represents an HTML attribute offset.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.HtmlAttributeWithOffsets.EndOffset">
      <summary>Gets or sets the last character offset of an HTML attribute within an HTML document.</summary>
      <returns>A value that represents an HTML attribute offset.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.HtmlDocument">
      <summary>Provides access to the set of HTML tags in an HTML response body.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.HtmlDocument.#ctor(System.Uri,System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.HtmlDocument" /> class. This constructor takes a string and uses it as the document.</summary>
      <param name="documentLocation">A URI representing the document location.</param>
      <param name="documentContent">The contents of the document.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.HtmlDocument.DependentRequestUrls">
      <summary>Gets the URLs for dependent requests found in the HTML document.</summary>
      <returns>An <see cref="T:System.Collections.Generic.ICollection`1" /> containing strings representing the dependent requests found in the HTML document.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.HtmlDocument.GetFilteredHtmlTags(System.String[])">
      <summary>Parses <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.HtmlDocument" /> and returns an iterator with all the HTML tags found that match the tags that are contained in the <paramref name="tagFilter" /> array.</summary>
      <returns>A <see cref="T:System.Collections.Generic.IEnumerable`1" /> object.</returns>
      <param name="tagFilter">An array that contains HTML tags to be used as a filter for the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.HtmlDocument" />.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.HtmlDocument.HtmlTags">
      <summary>Gets all the tags that are available in the document.</summary>
      <returns>An <see cref="T:System.Collections.Generic.IEnumerable`1" /> object that contains HTML tags.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.HtmlDocument.SetParserOffsetTracking(System.Boolean)">
      <summary>Sets the parser mode for tracking tag and attribute value offsets.</summary>
      <param name="flag">true for tracking tag and attribute value offsets; otherwise, false.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.HtmlTag">
      <summary>The <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.HtmlTag" /> object is the foundation of the HTML document and holds the parsed structure of the document.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.HtmlTag.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.HtmlTag" /> class.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.HtmlTag.AddAttribute(Microsoft.VisualStudio.TestTools.WebTesting.HtmlAttribute)">
      <summary>Adds an attribute to the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.HtmlTag" /> collection.</summary>
      <param name="attribute">The <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.HtmlAttribute" /> to add to the collection.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.HtmlTag.Attributes">
      <summary>Gets a collection of attributes associated with the HTML tag.</summary>
      <returns>A <see cref="T:System.Collections.Generic.IList`1" /> object.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.HtmlTag.GetAttributeValue(System.String)">
      <summary>Gets the value of a specified attribute.</summary>
      <returns>A <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.HtmlAttribute" /> object. </returns>
      <param name="attributeName">The name of the attribute. Used as the key to look up the attribute value.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.HtmlTag.GetAttributeValueAsString(System.String)">
      <summary>Gets the value of a specified attribute in string format.</summary>
      <returns>An attribute value in a string format.</returns>
      <param name="attributeName">The name of the attribute. Used as the key to look up the attribute value.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.HtmlTag.Name">
      <summary>Gets or sets the name of the tag.</summary>
      <returns>The tag name.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.HtmlTagInnerText">
      <summary>This class represents the inner text of an html tag. It contains the beginning and ending offset of the inner text location in the whole document.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.HtmlTagInnerText.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.HtmlTagInnerText" /> class.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.HtmlTagInnerText.#ctor(System.String,System.Int32,System.Int32,System.Boolean,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.HtmlTagInnerText" /> class using the specified values.</summary>
      <param name="documentContent">The document content.</param>
      <param name="beginOffset">The beginning offset of the inner text within the document.</param>
      <param name="endOffset">The ending offset of the inner text within the document.</param>
      <param name="removeInnerTags">true to remove the inner HTML tags; otherwise, false.</param>
      <param name="collapseWhiteSpace">true to collapse whitespace within the inner text; otherwise, false.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.HtmlTagInnerText.BeginOffset">
      <summary>Gets the beginning offset of the inner text within the document.</summary>
      <returns>The beginning offset of the inner text within the document.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.HtmlTagInnerText.CollapseWhiteSpace">
      <summary>Gets or sets the indicator of whether to collapse white space.</summary>
      <returns>true to collapse white space; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.HtmlTagInnerText.DocumentContent">
      <summary>Gets the complete document.</summary>
      <returns>The complete document.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.HtmlTagInnerText.EndOffset">
      <summary>Gets the ending offset of the inner text within the document.</summary>
      <returns>The ending offset of the inner text within the document.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.HtmlTagInnerText.RemoveInnerTags">
      <summary>Gets or sets the indicator of whether to remove the inner tags.</summary>
      <returns>true to remove the inner tags; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.HtmlTagInnerText.Value">
      <summary>Gets a string that contains the inner text represented by this object.</summary>
      <returns>A string that contains the inner text.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.HtmlTagInnerTextParser">
      <summary>A specialized parser used to extract the inner text from HTML tags located in an HTML document.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.HtmlTagInnerTextParser.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.HtmlTagInnerTextParser" /> class by using the specified HTML document text.</summary>
      <param name="documentContent">The HTML document text for this <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.HtmlTagInnerTextParser" /> object.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.HtmlTagInnerTextParser.GetInnerTextForHtmlTags(System.String,System.Boolean,System.Boolean,System.Boolean)">
      <summary>Returns an enumerable list of all the inner text that matches the specified parameters.</summary>
      <returns>An enumerable list of the inner text of the matching tags.</returns>
      <param name="tagName">The name of the tag to search for.</param>
      <param name="hasClosingTag">Specifies if this tag has a closing tag.</param>
      <param name="removeInnerTags">true to filter out HTML tags from the inner text; otherwise, false.</param>
      <param name="collapseWhiteSpace">true to collapse the extra white space in the HTML document; otherwise, false.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.HtmlTagInnerTextParser.GetInnerTextForHtmlTags(System.String,System.Boolean,System.Boolean,System.Boolean,System.Int32,System.Int32)">
      <summary>Returns an enumerable list of all the inner text that matches the specified parameters.</summary>
      <returns>An enumerable list of the inner text of the matching tags.</returns>
      <param name="tagName">The name of the tag to search for.</param>
      <param name="hasClosingTag">Specifies if this tag has a closing tag.</param>
      <param name="removeInnerTags">true to filter out HTML tags from the inner text; otherwise, false.</param>
      <param name="collapseWhiteSpace">true to collapse the extra white space in the HTML document; otherwise, false.</param>
      <param name="beginParseOffset">The start offset for parsing the HTML document.</param>
      <param name="endParseOffset">The end offset for the parsing the HTML document.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.HtmlTagInnerTextParser.GetInnerTextForHtmlTags(System.String,System.String,System.String,System.Boolean,System.Boolean,System.Boolean)">
      <summary>Returns an enumerable list of all the inner text that matches the specified parameters.</summary>
      <returns>An enumerable list of the inner text of the matching tags.</returns>
      <param name="tagName">The name of the tag to search for.</param>
      <param name="attributeName">The name of the attribute to match.</param>
      <param name="attributeValue">The value of the attribute to match.</param>
      <param name="hasClosingTag">Specifies if this tag has a closing tag.</param>
      <param name="removeInnerTags">true to filter out HTML tags from the inner text; otherwise, false.</param>
      <param name="collapseWhiteSpace">true to collapse the extra white space in the HTML document; otherwise, false.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.HtmlTagInnerTextParser.GetInnerTextForHtmlTags(System.String,System.String,System.String,System.Boolean,System.Boolean,System.Boolean,System.Int32,System.Int32)">
      <summary>Returns an enumerable list of all the inner text that matches the specified parameters.</summary>
      <returns>An enumerable list of the inner text of the matching tags.</returns>
      <param name="tagName">The name of the tag to search for.</param>
      <param name="attributeName">The name of the attribute to match.</param>
      <param name="attributeValue">The value of the attribute to match.</param>
      <param name="hasClosingTag">Specifies if this tag has a closing tag.</param>
      <param name="removeInnerTags">true to filter out HTML tags from the inner text; otherwise, false.</param>
      <param name="collapseWhiteSpace">true to collapse the extra white space in the HTML document; otherwise, false.</param>
      <param name="beginParseOffset">The start offset for parsing the HTML document.</param>
      <param name="endParseOffset">The end offset for the parsing the HTML document.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.HtmlTagWithOffsets">
      <summary>Extends the basic <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.HtmlTag" /> by tracking the beginning and ending tag offsets within the HTML document. </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.HtmlTagWithOffsets.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.HtmlTagWithOffsets" /> class. </summary>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.HtmlTagWithOffsets.BeginOffset">
      <summary>Gets or set the offset for an open bracket of <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.HtmlTag" /> within a HTML document.</summary>
      <returns>The offset for a tag for an open bracket of <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.HtmlTag" />.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.HtmlTagWithOffsets.EndOffset">
      <summary>Gets or set the offset for an <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.HtmlTag" /> close bracket within a HTML document.</summary>
      <returns>The offset for a close bracket for <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.HtmlTag" />.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.IBinaryHttpBodyEditorPlugin"></member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.IBinaryHttpBodyEditorPlugin.CreateEditor(System.String,System.Byte[])"></member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.IBinaryHttpBodyEditorPlugin.GetNewValue"></member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.IBinaryHttpBodyEditorPlugin.SupportsContentType(System.String)"></member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.IHttpBody">
      <summary>Provides a common interface for accessing an HTTP body. </summary>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.IHttpBody.ContentType">
      <summary>Gets a value that represents the content-type of the body.</summary>
      <returns>The body content-type.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.IHttpBody.WriteHttpBody(Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequest,System.IO.Stream)">
      <summary>Creates a stream that contains the HTTP body.</summary>
      <param name="request">Used to define the encoding of non-ASCII characters.</param>
      <param name="bodyStream">The stream to add the form post HTTP body.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.IncludeCodedWebTestAttribute">
      <summary>Contains information that defines a coded Web test that is included in another Web test.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.IncludeCodedWebTestAttribute.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.IncludeCodedWebTestAttribute" /> class.</summary>
      <param name="fullClassName">The full class name of the coded Web test attribute.</param>
      <param name="path">The path of the coded Web test attribute.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.IncludeCodedWebTestAttribute.FullClassName">
      <summary>Gets or sets the full class name of the coded Web test attribute.</summary>
      <returns>The full class name of the coded Web test attribute.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.IncludeCodedWebTestAttribute.Path">
      <summary>Gets or sets the path of the coded Web test attribute.</summary>
      <returns>The path of the coded Web test attribute.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.IncludeDeclarativeWebTestAttribute">
      <summary>Contains information that defines a coded Web test that is included in another Web test.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.IncludeDeclarativeWebTestAttribute.#ctor(System.String,System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.IncludeDeclarativeWebTestAttribute" /> class.</summary>
      <param name="name">The name of the Declarative Web Test Attribute.</param>
      <param name="path">The path of the Declarative Web Test Attribute.</param>
      <param name="testId">The Test ID of the Declarative Web Test Attribute.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.IncludeDeclarativeWebTestAttribute.Name">
      <summary>Gets or sets the name of the Declarative Web Test Attribute.</summary>
      <returns>The name of the Declarative Web Test Attribute.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.IncludeDeclarativeWebTestAttribute.Path">
      <summary>Gets or sets the path of the Declarative Web Test Attribute.</summary>
      <returns>The path of the Declarative Web Test Attribute.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.IncludeDeclarativeWebTestAttribute.TestId">
      <summary>Gets or sets the Test ID of the Declarative Web Test Attribute.</summary>
      <returns>The Test ID of the Declarative Web Test Attribute.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.IncludedWebTest">
      <summary>Represents a Web test that is included in another Web test.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.IncludedWebTest.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.IncludedWebTest" /> class.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.IncludedWebTest.Clone">
      <summary>Creates a new <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.IncludedWebTest" /> that is a copy of the current instance.</summary>
      <returns>A new <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.IncludedWebTest" /> that is a copy of the current instance.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.IncludedWebTest.InheritWebTestSettings">
      <summary>Gets or sets a value that indicates whether the included Web test inherits settings from the parent Web test.</summary>
      <returns>A value that indicates whether the included Web test inherits settings from the parent Web test.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.IncludedWebTest.IsCodedWebTest">
      <summary>Gets or sets a value that indicates whether the included Web test is a coded Web test.</summary>
      <returns>A value that indicates whether the included Web test is a coded Web test.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.IncludedWebTest.Name">
      <summary>Gets or sets the name of the included Web test.</summary>
      <returns>The name of the included Web test.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.IncludedWebTest.Path">
      <summary>Gets or sets the file path of the included Web test.</summary>
      <returns>The file path of the included Web test.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.IncludedWebTest.TestId">
      <summary>Gets or sets a string value that contains the TestId of the included Web test.</summary>
      <returns>A GUID value that indicates the TestId of the included Web test. </returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.IStringHttpBodyEditorPlugin"></member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.IStringHttpBodyEditorPlugin.CreateEditor(System.String,System.String)"></member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.IStringHttpBodyEditorPlugin.GetNewValue"></member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.IStringHttpBodyEditorPlugin.SupportsContentType(System.String)"></member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.LoopConditionalRuleReference">
      <summary>Class to contain a reference to a particular conditional rule that will be used in a loop.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.LoopConditionalRuleReference.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.LoopConditionalRuleReference" /> class.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.LoopConditionalRuleReference.#ctor(Microsoft.VisualStudio.TestTools.WebTesting.LoopConditionalRuleReference)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.LoopConditionalRuleReference" /> class by creating a copy of the specified <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.LoopConditionalRuleReference" />.</summary>
      <param name="copy">The <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.LoopConditionalRuleReference" /> to use to create the new <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.LoopConditionalRuleReference" />.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.LoopConditionalRuleReference.#ctor(System.Type)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.LoopConditionalRuleReference" /> class with the specified type.</summary>
      <param name="type">The type to use for initialization.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.LoopConditionalRuleReference.AdvanceDataCursors">
      <summary>Gets or sets the indicator of whether the data cursor should advance or not.</summary>
      <returns>true to advance the data cursor; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.LoopConditionalRuleReference.Clone">
      <summary>Creates a new <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.LoopConditionalRuleReference" /> that is a copy of the current instance.</summary>
      <returns>A new <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.LoopConditionalRuleReference" /> that is a copy of this instance.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.LoopConditionalRuleReference.MaxIterations">
      <summary>Gets or sets the maximum iterations for the loop.</summary>
      <returns>The maximum iterations for the loop.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.NumericalComparisonOperator">
      <summary>Enumerates the numerical comparison operators that are available.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.TestTools.WebTesting.NumericalComparisonOperator.Equality">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.TestTools.WebTesting.NumericalComparisonOperator.Inequality">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.TestTools.WebTesting.NumericalComparisonOperator.LessThan">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.TestTools.WebTesting.NumericalComparisonOperator.LessThanOrEqual">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.TestTools.WebTesting.NumericalComparisonOperator.GreaterThan">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.TestTools.WebTesting.NumericalComparisonOperator.GreaterThanOrEqual">
      <summary />
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.NumericalComparisonOperatorConverter">
      <summary>Helper class that helps with conversions between enum values and strings.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.NumericalComparisonOperatorConverter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.NumericalComparisonOperatorConverter" /> class.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.NumericalComparisonOperatorConverter.ConvertFromEnumToString(Microsoft.VisualStudio.TestTools.WebTesting.NumericalComparisonOperator)">
      <summary>Converts the specified enum value to a string representative of this enum value.</summary>
      <returns>A string representation of the specified enum value.</returns>
      <param name="value">The enum value to convert.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.NumericalComparisonOperatorConverter.ConvertFromStringToEnum(System.String)">
      <summary>Converts the specified string to a corresponding enum value.</summary>
      <returns>The enum corresponding to the specified string value.</returns>
      <param name="value">The string value to convert.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.NumericalComparisonOperatorConverter.PopulateStandardValues">
      <summary>Returns a string array with the string representation of all possible enum values.</summary>
      <returns>A string array with the string representation of all possible enum values.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.Outcome">
      <summary>Describes the outcome of a Web test.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.TestTools.WebTesting.Outcome.Pass">
      <summary>Indicates that the Web test passed.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.TestTools.WebTesting.Outcome.Fail">
      <summary>Indicates that the Web test failed.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.OutcomeConverter">
      <summary>Helper class that helps with conversions between enum values and strings.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.OutcomeConverter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.OutcomeConverter" /> class.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.OutcomeConverter.ConvertFromEnumToString(Microsoft.VisualStudio.TestTools.WebTesting.Outcome)">
      <summary>Converts the specified enum value to a string representative of this enum value.</summary>
      <returns>A string representation of the specified enum value.</returns>
      <param name="value">The enum value to convert.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.OutcomeConverter.ConvertFromStringToEnum(System.String)">
      <summary>Converts the specified string to a corresponding enum value.</summary>
      <returns>The enum corresponding to the specified string value.</returns>
      <param name="value">The string value to convert.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.OutcomeConverter.PopulateStandardValues">
      <summary>Returns a string array with the string representation of all possible enum values.</summary>
      <returns>A string array with the string representation of all possible enum values.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.OwnerAttribute">
      <summary>Used to specify the person responsible for maintaining, running, and/or debugging the test. This class cannot be inherited.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.OwnerAttribute.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.OwnerAttribute" /> class that uses an owner name. </summary>
      <param name="owner">The owner of the test.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.OwnerAttribute.Owner">
      <summary>Gets the owner of the test.</summary>
      <returns>The owner of the test.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.Parameter">
      <summary>Represents an HTTP parameter base class. </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.Parameter.#ctor">
      <summary>This class is abstract and cannot be instantiated.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.Parameter.Clone">
      <summary>When overridden in a derived class, creates a cloned copy of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.Parameter" /> instance. </summary>
      <returns>An object derived from <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.Parameter" />.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.Parameter.Name">
      <summary>Gets or sets the parameter name.</summary>
      <returns>The parameter name.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.Parameter.UrlEncode">
      <summary>Gets or sets a value that indicates whether the <see cref="P:Microsoft.VisualStudio.TestTools.WebTesting.Parameter.Name" /> and <see cref="P:Microsoft.VisualStudio.TestTools.WebTesting.Parameter.Value" /> will be URL encoded.</summary>
      <returns>true if <see cref="P:Microsoft.VisualStudio.TestTools.WebTesting.Parameter.Name" /> and <see cref="P:Microsoft.VisualStudio.TestTools.WebTesting.Parameter.Value" /> will be URL encoded; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.Parameter.Value">
      <summary>Gets or sets the string value of the parameter.</summary>
      <returns>The string value of the parameter.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.PluginOrRuleProperty">
      <summary>The <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.PluginOrRuleProperty" /> class is a multi-purpose class used to encapsulate the name and value of a single property for either a rule, such as an <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.ExtractionRule" /> or <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.ValidationRule" />, or a plug-in, such as a <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestPlugin" /> or a <see cref="T:Microsoft.VisualStudio.TestTools.LoadTesting.ILoadTestPlugin" />.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.PluginOrRuleProperty.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.PluginOrRuleProperty" /> class.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.PluginOrRuleProperty.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.PluginOrRuleProperty" /> class with the specified name and value.</summary>
      <param name="name">The name of the property.</param>
      <param name="value">The value of the property.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.PluginOrRuleProperty.Clone">
      <summary>Creates a new <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.PluginOrRuleProperty" /> object that is a copy of the current instance.</summary>
      <returns>A new <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.PluginOrRuleProperty" /> object that is a copy of the current instance.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.PluginOrRuleProperty.Name">
      <summary>Gets or sets the property name.</summary>
      <returns>The property name</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.PluginOrRuleProperty.Value">
      <summary>Gets or sets the property value.</summary>
      <returns>The property value.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.PostPageEventArgs">
      <summary>Provides data for the <see cref="E:Microsoft.VisualStudio.TestTools.WebTesting.WebTest.PostPage" /> event.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.PostPageEventArgs.PageOutcome">
      <summary>Gets a value that indicates the outcome of the page request and response. </summary>
      <returns>A value of either <see cref="F:Microsoft.VisualStudio.TestTools.WebTesting.Outcome.Pass" /> or <see cref="F:Microsoft.VisualStudio.TestTools.WebTesting.Outcome.Fail" /> that indicates the outcome of the page request and response. </returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.PostPageEventArgs.PageStatistics">
      <summary>Gets a WebTestPageStatistics object that contains statistics about the execution of the page.</summary>
      <returns>A WebTestPageStatistics object that contains statistics about the execution of the page.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.PostRequestEventArgs">
      <summary>Provides data for the <see cref="E:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequest.PostRequest" /> and <see cref="E:Microsoft.VisualStudio.TestTools.WebTesting.WebTest.PostRequest" /> events.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.PostRequestEventArgs.Request">
      <summary>Gets the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequest" /> that is the source of the <see cref="E:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequest.PostRequest" /> event.</summary>
      <returns>A <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequest" /> object.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.PostRequestEventArgs.Response">
      <summary>Gets the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResponse" /> that is generated by the request.</summary>
      <returns>A <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResponse" /> object.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.PostRequestEventArgs.ResponseExists">
      <summary>Gets a value that indicates whether a response exists.</summary>
      <returns>true if a response exists; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.PostRequestEventArgs.WebTest">
      <summary>Gets the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTest" /> that contains the request.</summary>
      <returns>A <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTest" /> object.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.PostTransactionEventArgs">
      <summary>Provides data for the <see cref="E:Microsoft.VisualStudio.TestTools.WebTesting.WebTest.PostTransaction" /> event.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.PostTransactionEventArgs.Duration">
      <summary>Gets the duration of the transaction from the time that it starts until it is completed.</summary>
      <returns>The duration of the transaction.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.PostTransactionEventArgs.TransactionName">
      <summary>Gets the name of the transaction that is starting. </summary>
      <returns>The name of the transaction that is starting. </returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.PostTransactionEventArgs.WebTest">
      <summary>Gets the Web test that contains the transaction.</summary>
      <returns>The Web test that contains the transaction.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.PostWebTestEventArgs">
      <summary>Provides data for the <see cref="E:Microsoft.VisualStudio.TestTools.WebTesting.WebTest.PostWebTest" /> event.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.PostWebTestEventArgs.WebTest">
      <summary>Gets the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTest" /> object that completed and caused the <see cref="E:Microsoft.VisualStudio.TestTools.WebTesting.WebTest.PostWebTest" /> event.</summary>
      <returns>A <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTest" /> object.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.PostWebTestRecordingEventArgs">
      <summary>Event arguments used for pre and post Web test recording callouts.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.PostWebTestRecordingEventArgs.IsRecordingForNewWebTest">
      <summary>Gets the indication of whether this Web test is a new Web test, or an insert into an existing Web test.</summary>
      <returns>true if the Web test recorder was started to create a new Web test; false if the Web test recorder was started to insert a recording in an existing Web test.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.PostWebTestRecordingEventArgs.RecordedWebTest">
      <summary>Gets a reference to the Web test after the recording.</summary>
      <returns>A reference to the Web test after the recording.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.PostWebTestRecordingEventArgs.RecordedWebTestDeploymentItems">
      <summary>Items added to this collection will be added as deployment items to the Web test.</summary>
      <returns>A collection of deployment items.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.PostWebTestRecordingEventArgs.RecordedWebTestModified">
      <summary>Gets or sets the indication that <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRecorderPlugin" /> modified the contents of the <see cref="P:Microsoft.VisualStudio.TestTools.WebTesting.PostWebTestRecordingEventArgs.RecordedWebTest" /> in the event handler.</summary>
      <returns>true if the <see cref="P:Microsoft.VisualStudio.TestTools.WebTesting.PostWebTestRecordingEventArgs.RecordedWebTest" /> was modified in the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRecorderPlugin" /> event handler; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.PostWebTestRecordingEventArgs.RecordedWebTestResult">
      <summary>Gets a reference to the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResultIteration" /> object that contains all details of the HTTP requests and responses that occurred during the recording session.</summary>
      <returns>A reference to a <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResultIteration" /> object.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.PrePageEventArgs">
      <summary>Provides data for the <see cref="E:Microsoft.VisualStudio.TestTools.WebTesting.WebTest.PrePage" /> event.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.PrePageEventArgs.Request">
      <summary>Gets the original WebTestRequest for the page that was defined by the declarative or coded Web test.</summary>
      <returns>The original WebTestRequest for the page that was defined by the declarative or coded Web test.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.PrePageEventArgs.WebTest">
      <summary>Gets the Web test that contains the request.</summary>
      <returns>The Web test that contains the request.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.PreRequestDataBindingEventArgs"></member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.PreRequestDataBindingEventArgs.Request"></member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.PreRequestDataBindingEventArgs.WebTest"></member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.PreRequestEventArgs">
      <summary>Provides data for the <see cref="E:Microsoft.VisualStudio.TestTools.WebTesting.WebTest.PreRequest" /> event.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.PreRequestEventArgs.Instruction">
      <summary>Gets or sets the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestExecutionInstruction" /> for this request.  This enables an upcoming request to be skipped.</summary>
      <returns>A <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestExecutionInstruction" /> object.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.PreRequestEventArgs.Request">
      <summary>Gets the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequest" /> that caused the <see cref="E:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequest.PreRequest" /> event.</summary>
      <returns>A <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequest" /> object.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.PreRequestEventArgs.WebTest">
      <summary>Gets the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTest" /> that contains the request.</summary>
      <returns>A <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTest" /> object.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.PreTransactionEventArgs">
      <summary>Provides data for the <see cref="E:Microsoft.VisualStudio.TestTools.WebTesting.WebTest.PreTransaction" /> event.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.PreTransactionEventArgs.TransactionName">
      <summary>Gets the name of the transaction that is starting.</summary>
      <returns>A string that contains the name of the transaction that is starting.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.PreTransactionEventArgs.WebTest">
      <summary>Gets the Web test that contains the transaction.</summary>
      <returns>The Web test that contains the transaction. </returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.PreWebTestEventArgs">
      <summary>Provides data for the <see cref="E:Microsoft.VisualStudio.TestTools.WebTesting.WebTest.PreWebTest" /> event.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.PreWebTestEventArgs.WebTest">
      <summary>Gets the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTest" /> object that is about to start and caused the <see cref="E:Microsoft.VisualStudio.TestTools.WebTesting.WebTest.PreWebTest" /> event.</summary>
      <returns>A <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTest" /> object.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.PriorityAttribute">
      <summary>Used to specify the priority of a unit test. This class cannot be inherited.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.PriorityAttribute.#ctor(System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.PriorityAttribute" /> class that has a priority value.  </summary>
      <param name="priority">An integer that represents the priority value for the test.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.PriorityAttribute.Priority">
      <summary>Gets the priority value.</summary>
      <returns>An integer that represents the priority value for the test.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.PropertyCollection">
      <summary>Represents a strongly-typed container for Web test rule properties.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.PropertyCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.PropertyCollection" /> class.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.PropertyCollection.Add(System.String,System.String)">
      <summary>Adds a <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.PluginOrRuleProperty" /> to the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.PropertyCollection" />.</summary>
      <param name="propertyName">The property name to add.</param>
      <param name="propertyValue">The value to add.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.PropertyCollection.Item(System.String)">
      <summary>Gets or sets the first property value stored with the specified property name.</summary>
      <returns>The first property value stored with the specified property name.</returns>
      <param name="propertyName"> The property name.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.QueryStringParameter">
      <summary>Represents an HTTP querystring parameter. </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.QueryStringParameter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.QueryStringParameter" /> class with default value for UrlEncode. </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.QueryStringParameter.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.QueryStringParameter" /> class with the specified name and value. </summary>
      <param name="parameterName">The parameter name to set.</param>
      <param name="parameterValue">The parameter value to set.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.QueryStringParameter.#ctor(System.String,System.String,System.Boolean,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.QueryStringParameter" /> class with values for the Name, Value, UrlEncode and <see cref="P:Microsoft.VisualStudio.TestTools.WebTesting.QueryStringParameter.UseToGroupResults" /> properties.</summary>
      <param name="parameterName">The parameter name to set.</param>
      <param name="parameterValue">The parameter value to set.</param>
      <param name="urlEncode">Indicates whether to URL encode the querystring parameter name and value.</param>
      <param name="useToGroupResults">Indicates whether to use this parameter to group results. The parameter is used if it changes the content of the page. The grouped results enable the user to have separate results captured for each value of the querystring parameter instead of a single set of results for the page.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.QueryStringParameter.Clone">
      <summary>Performs a <see cref="M:System.Object.MemberwiseClone" /> clone of this <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.QueryStringParameter" /> instance.</summary>
      <returns>A <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.QueryStringParameter" /> object.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.QueryStringParameter.UseToGroupResults">
      <summary>Gets or sets a value that indicates whether this parameter should be used to uniquely identify a request.</summary>
      <returns>true if this parameter is used to identify a request; otherwise, false. The default value is false.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.QueryStringParameterCollection">
      <summary>Represents a strongly typed container for query string parameters. </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.QueryStringParameterCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.QueryStringParameterCollection" /> class.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.QueryStringParameterCollection.Add(System.String,System.String)">
      <summary>Adds a <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.QueryStringParameter" /> created from a parameter name and value. </summary>
      <param name="parameterName">The name of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.QueryStringParameter" /> to be created and then added to the collection.</param>
      <param name="parameterValue">The value of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.QueryStringParameter" /> to be created and then added to the collection.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.QueryStringParameterCollection.Add(System.String,System.String,System.Boolean,System.Boolean)">
      <summary>Adds a <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.QueryStringParameter" /> created from a parameter name and value.</summary>
      <param name="parameterName">The name of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.QueryStringParameter" /> to be created and then added to the collection.</param>
      <param name="parameterValue">The value of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.QueryStringParameter" /> to be created and then added to the collection.</param>
      <param name="urlEncode">true if the query string parameter is URL encoded; otherwise, false.</param>
      <param name="useToGroupResults">Indicates whether to use this parameter to group results. The parameter is used if it changes the content of the page. This parameter enables the user to have separate results captured for each value of the querystring parameter instead of a single set of results for the page.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.QueryStringParameterCollection.Contains(System.String)">
      <summary>Gets a value that indicates whether a <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.QueryStringParameter" /> exists in this collection.</summary>
      <returns>true if the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.QueryStringParameter" /> exists in this collection; otherwise, false.</returns>
      <param name="parameterName">The name of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.QueryStringParameter" /> to look for in this collection.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.RequestBodyEditorPluginReference"></member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.RequestBodyEditorPluginReference.#ctor"></member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.RequestBodyEditorPluginReference.Clone"></member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.RequestBodyEditorPluginReference.CreateInstance"></member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.RequestType">
      <summary>Enumerates the request types that are available.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.TestTools.WebTesting.RequestType.TopLevel">
      <summary>A top-level request type.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.TestTools.WebTesting.RequestType.Dependent">
      <summary>A dependent request type.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.RuleExecutionOrder">
      <summary>Enumerates the possible order-of-execution for validation rules.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.TestTools.WebTesting.RuleExecutionOrder.BeforeDependents">
      <summary>Test is to be executed before dependent tests.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.TestTools.WebTesting.RuleExecutionOrder.AfterDependents">
      <summary>Test is to be executed after dependent tests.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.TestTools.WebTesting.RuleExecutionOrder.BeforeAndAfterDependents">
      <summary>Test is to be executed both before and after dependent tests.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.StringComparisonOperator">
      <summary>Enumerates the string comparison operators that are available.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.TestTools.WebTesting.StringComparisonOperator.Equality">
      <summary>Indicates that two strings are equal.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.TestTools.WebTesting.StringComparisonOperator.Inequality">
      <summary>Indicates that two strings are not equal.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.StringComparisonOperatorConverter">
      <summary>Helper class that helps with conversions between enum values and strings.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.StringComparisonOperatorConverter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.StringComparisonOperatorConverter" /> class.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.StringComparisonOperatorConverter.ConvertFromEnumToString(Microsoft.VisualStudio.TestTools.WebTesting.StringComparisonOperator)">
      <summary>Converts the specified enum value to a string representative of this enum value.</summary>
      <returns>A string representation of the specified enum value.</returns>
      <param name="value">The enum value to convert.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.StringComparisonOperatorConverter.ConvertFromStringToEnum(System.String)">
      <summary>Converts the specified string to a corresponding enum value.</summary>
      <returns>The enum corresponding to the specified string value.</returns>
      <param name="value">The string value to convert.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.StringComparisonOperatorConverter.PopulateStandardValues">
      <summary>Returns a string array with the string representation of all possible enum values.</summary>
      <returns>A string array with the string representation of all possible enum values.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.StringHttpBody">
      <summary>Represents an HTTP body in string form used for SOAP support. </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.StringHttpBody.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.StringHttpBody" /> class.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.StringHttpBody.BodyString">
      <summary>Gets or sets the string that contains the HTTP body contents.</summary>
      <returns>A value that represents the HTTP body. The default value is an empty string.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.StringHttpBody.Clone">
      <summary>Creates a shallow copy of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.StringHttpBody" /> object.</summary>
      <returns>A <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.StringHttpBody" /> object.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.StringHttpBody.ContentType">
      <summary>Gets a value representing the content-type of the body.</summary>
      <returns>The body content-type.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.StringHttpBody.InsertByteOrderMark"></member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.StringHttpBody.WriteHttpBody(Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequest,System.IO.Stream)">
      <summary>Creates a stream that contains the HTTP body.</summary>
      <param name="request">Used to define the encoding of non-ASCII characters.</param>
      <param name="bodyStream">The stream to add the form post HTTP body.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.TestDescriptionAttribute">
      <summary>Used to specify the description of the test. This class cannot be inherited. </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.TestDescriptionAttribute.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.TestDescriptionAttribute" /> class. </summary>
      <param name="testDescription">A short description of the test.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.TestDescriptionAttribute.TestDescription">
      <summary>Gets the description of the test.</summary>
      <returns>The test description.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.ThreadedWebTest">
      <summary>Represents a base class for a coded Web test that uses a single thread per Web test iteration. </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.ThreadedWebTest.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.ThreadedWebTest" /> class.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.ThreadedWebTest.GetRequestEnumerator">
      <summary>This method returns the next request to be submitted in a Web test for Web tests that extend the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.ThreadedWebTest" /> class. </summary>
      <returns>The next request to be submitted.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.ThreadedWebTest.Run">
      <summary>When overridden in a derived class, runs the user's coded Web test.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.ThreadedWebTest.Send(Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequest)">
      <summary>Sends a <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequest" /> to be run by the Web test engine.</summary>
      <param name="request">A <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequest" /> to be run.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.ThreadedWebTest.Stop"></member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.TimeoutAttribute">
      <summary>Use this attribute to specify the time-out period of a Web test. </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.TimeoutAttribute.#ctor(System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.TimeoutAttribute" /> class. </summary>
      <param name="timeout">The time-out period of a test, measured in milliseconds.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.TimeoutAttribute.Timeout">
      <summary>Gets the time-out period for a test.</summary>
      <returns>The time-out period for a test, measured in milliseconds.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.TransactionTimer">
      <summary>Represents a timed transaction in a Web test. This portion of the Web test may include Web test requests, calls to included Web tests, or other Web test transactions.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.TransactionTimer.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.TransactionTimer" /> class.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.TransactionTimer.Clone">
      <summary>Creates a copy of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.TransactionTimer" />.</summary>
      <returns>A copy of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.TransactionTimer" />.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.TransactionTimer.Items">
      <summary>Gets the list of Web test items that are included in the timed transaction.</summary>
      <returns>The collection of Web test items.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.TransactionTimer.Name">
      <summary>Gets or sets the name given to the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.TransactionTimer" />. This name is displayed in the Web test editor, or displayed in a Coded web test in the Web test and load test results.</summary>
      <returns>The name of the transaction timer.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.TransactionTimer.RuntimeClone"></member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.ValidationEventArgs">
      <summary>Provides data for the <see cref="E:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequest.ValidateResponse" /> event.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.ValidationEventArgs.IsValid">
      <summary>Gets or sets a value indicating whether the request passes validation.</summary>
      <returns>true if the request passes validation; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.ValidationEventArgs.Message">
      <summary>Gets or sets a message that describes validation attempts.</summary>
      <returns>Gets a value that indicates whether or not validation occurred or a message describing a thrown Exception.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.ValidationEventArgs.Request">
      <summary>Gets the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequest" /> that generated the response that is validated.</summary>
      <returns>A <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequest" /> object.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.ValidationEventArgs.RequestDuration"></member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.ValidationEventArgs.Response">
      <summary>Gets the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResponse" /> being validated.</summary>
      <returns>A <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResponse" /> object.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.ValidationEventArgs.ValidationLevel">
      <summary>Gets the current validation level.</summary>
      <returns>A <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.ValidationLevel" /> enumeration.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.ValidationEventArgs.WebTest">
      <summary>Gets the Web test that contains the request that triggered the validation event.</summary>
      <returns>A <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTest" /> object.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.ValidationLevel">
      <summary>Used to identify the importance of a validation rule that is run in a load test.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.TestTools.WebTesting.ValidationLevel.Low">
      <summary>Load test invokes validation rules with a Low setting. This equals 0.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.TestTools.WebTesting.ValidationLevel.Medium">
      <summary>Load test invokes validation rules with a Low or Medium setting. This equals 1.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.TestTools.WebTesting.ValidationLevel.High">
      <summary>Load test invokes all validation rules. This equals 2.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.ValidationRule">
      <summary>Verifies that requests return valid HTTP responses and that the contents of the response match the expected results. This class must be inherited.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.ValidationRule.#ctor">
      <summary>This class must be inherited. It cannot be instantiated.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.ValidationRule.RuleDescription">
      <summary>Gets the description displayed in the user interface when a rule is selected.</summary>
      <returns>The description displayed in the user interface when a rule is selected.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.ValidationRule.RuleName">
      <summary>When overridden in a derived class, gets the name displayed in the user interface when a rule is selected or shown in the editor.</summary>
      <returns>The name of the validation rule.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.ValidationRule.Validate(System.Object,Microsoft.VisualStudio.TestTools.WebTesting.ValidationEventArgs)">
      <summary>When overridden in a derived class, this validates both the request and response.</summary>
      <param name="sender">The source of the event.</param>
      <param name="e">A  <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.ValidationEventArgs" /> that contains the event data.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.ValidationRuleReference">
      <summary>The <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.ValidationRuleReference" /> class encapsulates the metadata about an <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.ValidationRule" /> and the parameter values to use when an instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.ValidationRule" /> is created when the Web test that uses the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.ValidationRule" /> is run.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.ValidationRuleReference.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.ValidationRuleReference" /> class.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.ValidationRuleReference.#ctor(System.Type)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.ValidationRuleReference" /> class using the <see cref="T:System.Type" /> of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.ValidationRule" /> implementation as a parameter.</summary>
      <param name="type">The <see cref="T:System.Type" /> of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.ValidationRule" /> implementation.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.ValidationRuleReference.Clone">
      <summary>Returns a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.ValidationRuleReference" /> object.</summary>
      <returns>A <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.ValidationRuleReference" /> object.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.ValidationRuleReference.ValidationLevel">
      <summary>Gets or sets the validation level as defined by the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.ValidationLevel" /> enum.</summary>
      <returns>The validation level.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.ValidationRuleReferenceCollection">
      <summary>Represents a serializable, strongly typed container for Web test validation rules.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.ValidationRuleReferenceCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.ValidationRuleReferenceCollection" /> class.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTest">
      <summary>Base class for all Web tests. Coded Web tests that are written in C# derive directly from this class.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTest.#ctor">
      <summary>Initializes a new instance of a class derived from <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTest" /> class.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTest.AddCommentToResult(System.String)">
      <summary>Adds a comment to the Web test result following the most recently completed Web test request, transaction, or included Web test.</summary>
      <param name="comment">A string that contains the comment text. </param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTest.AddDataSource(System.String,System.String,Microsoft.VisualStudio.TestTools.WebTesting.DataBindingAccessMethod,System.String[])">
      <summary>Adds a data source to the data collection that is contained by the Web test.</summary>
      <param name="dataSourceName">The name of the data source.</param>
      <param name="connectionString">The provider dependent connection string for the data source.</param>
      <param name="accessMethod">The access method that is used to get information from the data source. This uses a <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.DataBindingAccessMethod" /> enumeration. </param>
      <param name="tableNames">Table names found in the data source that contains data to be accessed.</param>
      <exception cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestException">
        <paramref name="dataSourceName" /> already exists as a data source.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTest.AddDataSource(System.String,System.String,System.String,Microsoft.VisualStudio.TestTools.WebTesting.DataBindingAccessMethod,Microsoft.VisualStudio.TestTools.WebTesting.DataBindingSelectColumns,System.String[])"></member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTest.AddDataSource(System.String,System.String,System.String,Microsoft.VisualStudio.TestTools.WebTesting.DataBindingAccessMethod,System.String[])">
      <summary>Adds a data source to the data collection that is contained by the Web test.</summary>
      <param name="dataSourceName">The name of the data source.</param>
      <param name="providerName"></param>
      <param name="connectionString">The provider dependent connection string for the data source.</param>
      <param name="accessMethod">The access method that is used to get information from the data source. This uses a <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.DataBindingAccessMethod" /> enumeration.</param>
      <param name="tableNames">Table names found in the data source that contains data to be accessed.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTest.AddDataSourceBinding(System.String,System.String,System.String,System.String)">
      <summary>Defines a binding relationship and adds it to the data source binding collection for the Web test.</summary>
      <param name="dataSourceName">The name of the data source.</param>
      <param name="tableName">The name of a table in the data source.</param>
      <param name="columnName">The name of a column within the table to be used for binding.</param>
      <param name="contextName">The variable name representing the binding.</param>
      <exception cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestException">
        <paramref name="dataSourceName" /> does not represent a data source found in the internal Web test data source collection.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTest.BeginCondition(Microsoft.VisualStudio.TestTools.WebTesting.ConditionalRule)"></member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTest.BeginLoop(Microsoft.VisualStudio.TestTools.WebTesting.ConditionalRule,System.Int32,System.Boolean)"></member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTest.BeginTransaction(System.String)">
      <summary>Starts a transaction timer with the specified name.</summary>
      <param name="transactionName">The name of a transaction timer.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="transactionName" /> is null.</exception>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTest.Context">
      <summary>Gets or sets an object that contains context variables that are available to the Web test at run time.</summary>
      <returns>A <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestContext" /> object.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTest.DataSources">
      <summary>Gets the collection of data sources defined for the Web test.</summary>
      <returns>The collection of data sources defined for the Web test.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTest.EndCondition(Microsoft.VisualStudio.TestTools.WebTesting.ConditionalRule)"></member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTest.EndLoop(Microsoft.VisualStudio.TestTools.WebTesting.ConditionalRule)"></member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTest.EndTransaction(System.String)">
      <summary>Ends a transaction timer with the specified name.</summary>
      <param name="transactionName">The name of a transaction timer.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="transactionName" /> is null.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTest.EndTransaction(System.String,System.Boolean)">
      <summary>Ends the specified transaction.</summary>
      <param name="transactionName">The name of the transaction to end.</param>
      <param name="isForIncludedWebTest">true indicates that the named transaction is a transaction that was automatically created to measure the duration of the included Web test.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTest.ExecuteConditionalRule(Microsoft.VisualStudio.TestTools.WebTesting.ConditionalRule)"></member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTest.GetDataTableRowCount(System.String,System.String)"></member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTest.GetEnumerator">
      <summary>Gets an Enumerator that enumerates the items in the Web test.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTest.GetRequestEnumerator">
      <summary>When overridden in a derived class, returns an <see cref="T:System.Collections.Generic.IEnumerator`1" /> interface supporting a simple iteration over a generic collection of <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequest" />.</summary>
      <returns>An <see cref="T:System.Collections.Generic.IEnumerator`1" /> that contains <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequest" /> objects.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTest.Guid">
      <summary>Gets or sets a Globally Unique Identifier that uniquely identifies each instance of a <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTest" />.</summary>
      <returns>A <see cref="T:System.Guid" /> object.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTest.IncludeWebTest(Microsoft.VisualStudio.TestTools.WebTesting.WebTest)">
      <summary>Calls a coded Web test from within a coded Web test.</summary>
      <param name="childWebTest">The WebTest object to call from the current coded Web test.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTest.IncludeWebTest(Microsoft.VisualStudio.TestTools.WebTesting.WebTest,System.Boolean)">
      <summary>Calls a coded Web test from within a coded Web test.</summary>
      <param name="childWebTest">The WebTest object to call from the current coded Web test.</param>
      <param name="inheritWebTestSettings">If true, the included Web test inherits the values of the properties from the parent Web test.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTest.IncludeWebTest(System.String)">
      <summary>Calls a coded Web test from within a coded Web test.</summary>
      <param name="webTestName">The name of the declarative Web test to include.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTest.IncludeWebTest(System.String,System.Boolean)">
      <summary>Calls a coded Web test from within a coded Web test.</summary>
      <param name="webTestName">The name of the declarative Web test to include.</param>
      <param name="inheritWebTestSettings">If true, the included Web test inherits the values of the properties from the parent Web test.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTest.InheritFromWebTest">
      <summary>Gets the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTest" /> object for the parent Web test when this Web test is included in another Web test and is inheriting properties from the parent Web test. </summary>
      <returns>Returns a <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTest" /> object if this Web test is not included in another Web test and inherits from that parent Web test.Returns NULL if this Web test is not included in another Web test or does not inherit from a parent Web test.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTest.InitializeDataBinding">
      <summary>Adds data source and data binding information from attributes to the current instance.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTest.InternalSetOutcome(Microsoft.VisualStudio.TestTools.WebTesting.Outcome)"></member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTest.LastRequestOutcome"></member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTest.LastResponse">
      <summary>Gets the last response received for a top-level request in this Web test.</summary>
      <returns>A <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResponse" /> object.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTest.MoveDataTableCursor(System.String,System.String)">
      <summary>Advances the cursor in the data table to the next record.</summary>
      <param name="dataSourceName">The data source name.</param>
      <param name="dataTableName">A table found in the data source.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="dataSourceName" /> does not represent a data source found in the internal Web test data source collection.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="dataTableName" /> does not represent a table found in <paramref name="dataSourceName" />.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTest.MoveDataTableCursor(System.String,System.String,System.Int32)"></member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTest.Name">
      <summary>Gets the name of the test case.</summary>
      <returns>The user-defined name if one exists; otherwise, this defaults to the derived class name.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTest.Outcome">
      <summary>Gets or sets the Pass or Fail outcome of the Web test.</summary>
      <returns>The outcome of the Web test. </returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTest.Password">
      <summary>Gets and sets the password used for authentication.</summary>
      <returns>The password used for authentication. The default value is an empty string.</returns>
    </member>
    <member name="E:Microsoft.VisualStudio.TestTools.WebTesting.WebTest.PostPage"></member>
    <member name="E:Microsoft.VisualStudio.TestTools.WebTesting.WebTest.PostRequest">
      <summary>Occurs after each request this Web test runs.</summary>
    </member>
    <member name="E:Microsoft.VisualStudio.TestTools.WebTesting.WebTest.PostTransaction"></member>
    <member name="E:Microsoft.VisualStudio.TestTools.WebTesting.WebTest.PostWebTest">
      <summary>Occurs after the Web test runs.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTest.PreAuthenticate">
      <summary>Gets or sets a value that indicates whether to pre-authenticate all requests within the Web test.</summary>
      <returns>true if all requests are pre-authenticated; otherwise, false. The default value is true.</returns>
    </member>
    <member name="E:Microsoft.VisualStudio.TestTools.WebTesting.WebTest.PrePage"></member>
    <member name="E:Microsoft.VisualStudio.TestTools.WebTesting.WebTest.PreRequest">
      <summary>Occurs before each request this Web test runs.</summary>
    </member>
    <member name="E:Microsoft.VisualStudio.TestTools.WebTesting.WebTest.PreRequestDataBinding"></member>
    <member name="E:Microsoft.VisualStudio.TestTools.WebTesting.WebTest.PreTransaction"></member>
    <member name="E:Microsoft.VisualStudio.TestTools.WebTesting.WebTest.PreWebTest">
      <summary>Occurs before the Web test runs.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTest.Proxy">
      <summary>Gets or sets a value representing a proxy server for the Web test to use.</summary>
      <returns>A string representation of a proxy server location and port. The default value is an empty string.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTest.RegisterDataSourceInLoop(Microsoft.VisualStudio.TestTools.WebTesting.ConditionalRule,System.String,System.String)"></member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTest.ReloadDataTable(System.String,System.String)"></member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTest.RequestBodyCaptureLimit">
      <summary>Gets or sets the limit, in bytes, that is used for capturing request data.</summary>
      <returns>The limit that is used for capturing request data. The default value is 750,000 bytes.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTest.ResponseBodyCaptureLimit">
      <summary>Gets or sets the limit, in bytes, that is used for capturing response data.</summary>
      <returns>The limit that is used for capturing response data. The default value is 1,500,000 bytes.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTest.Stop">
      <summary>Stops the current Web test.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTest.StopOnError">
      <summary>Gets or sets the indication of whether the test should stop running when an error occurs. </summary>
      <returns>true will stop the test after an error occurs, false will allow the test to continue after an error.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTest.UserName">
      <summary>Gets and sets the user name used for authentication.</summary>
      <returns>The user name used for authentication. The default value is an empty string.</returns>
    </member>
    <member name="E:Microsoft.VisualStudio.TestTools.WebTesting.WebTest.ValidateResponse">
      <summary>Occurs when the response to a Web test request has been received and is ready to be validated.</summary>
    </member>
    <member name="E:Microsoft.VisualStudio.TestTools.WebTesting.WebTest.ValidateResponseOnPageComplete"></member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTest.ValidationRuleReferences">
      <summary>Gets the collection of references to Web test-level validation rules.</summary>
      <returns>The collection of references to Web test-level validation rules.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTest.WebProxy">
      <summary>Gets or sets the Web proxy for this Web test to use.</summary>
      <returns>A <see cref="T:System.Net.IWebProxy" /> object.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTest.WebTestPluginReferences">
      <summary>Gets the collection of references to Web test plug-ins.</summary>
      <returns>The collection of references to Web test plug-ins.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestBaseCollection`1">
      <summary>An abstract base class used to store a variety of Web tests.</summary>
      <typeparam name="T"></typeparam>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestBaseCollection`1.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestBaseCollection`1" /> class.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestBaseCollection`1.AddRange(System.Collections.Generic.IEnumerable{`0})">
      <summary>Adds the elements of the specified collection to the end of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestBaseCollection`1" />.</summary>
      <param name="items">The collection whose elements should be added to the end of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestBaseCollection`1" />. The collection itself cannot be null, but it can contain elements that are null, if type T is a reference type.</param>
      <exception cref="ArgumentNullException">
        <paramref name="items" /> is null.</exception>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestCondition">
      <summary>This class represents the conditional statement constructs. It contains a collection of web test items that are executed if the conditional rule is met.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestCondition.#ctor(Microsoft.VisualStudio.TestTools.WebTesting.ConditionalRule)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestCondition" /> class by using the specified <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.ConditionalRule" />.</summary>
      <param name="conditionalRule">The conditional rule to use for initialization.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestCondition.#ctor(Microsoft.VisualStudio.TestTools.WebTesting.ConditionConditionalRuleReference)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestCondition" /> class by using the specified <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.ConditionalRuleReference" />.</summary>
      <param name="conditionalRuleReference">The conditional rule reference to use for initialization.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestCondition.#ctor(Microsoft.VisualStudio.TestTools.WebTesting.WebTestCondition)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestCondition" /> class by copying the specified <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestCondition" />.</summary>
      <param name="copy">The <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestCondition" /> to copy.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestCondition.Clone">
      <summary>Creates a new <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestCondition" /> object that is a copy of the current instance.</summary>
      <returns>A new <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestCondition" /> object that is a copy of the current instance.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestCondition.ConditionConditionalRuleReference">
      <summary>Gets the conditional rule reference for this <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestCondition" />.</summary>
      <returns>The conditional rule reference for this <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestCondition" />.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestCondition.ElseItems"></member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestCondition.RuntimeClone">
      <summary>Creates a new <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestCondition" /> object that is a copy of the current instance at runtime.</summary>
      <returns>A new <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestCondition" /> object that is a copy of the current instance.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestCondition.ToString">
      <summary>Returns a <see cref="T:System.String" /> that represents the current <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestCondition" />.</summary>
      <returns>A <see cref="T:System.String" /> that represents the current <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestCondition" />.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestCondition.ToString(System.String)">
      <summary>Returns a <see cref="T:System.String" /> that represents the current <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestCondition" /> based on the specified conditional rule text.</summary>
      <returns>A <see cref="T:System.String" /> that represents the current <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestCondition" />.</returns>
      <param name="conditionalRuleText">The conditional rule text to return, or the <see cref="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRuleBase.DisplayName" /> if <paramref name="conditionalRuleText" /> is null.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestConditionalConstruct">
      <summary>Base class for the conditional loop and the conditional statement constructs.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestConditionalConstruct.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestConditionalConstruct" /> class.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestConditionalConstruct.#ctor(Microsoft.VisualStudio.TestTools.WebTesting.WebTestConditionalConstruct)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestConditionalConstruct" /> class by copying the specified <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestConditionalConstruct" />.</summary>
      <param name="copy">The <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestConditionalConstruct" /> to copy.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestConditionalConstruct.ConditionalRuleReference">
      <summary>Gets or sets the reference to a conditional rule.</summary>
      <returns>The reference to a conditional rule.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestConditionalConstruct.ExecuteCheckConditionalRule(Microsoft.VisualStudio.TestTools.WebTesting.WebTest)">
      <summary>Executes the conditional rule.</summary>
      <returns>true if the condition was met; otherwise, false.</returns>
      <param name="webTest">The <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTest" /> to execute.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestConditionalConstruct.ExecuteCleanUpConditionalRule(Microsoft.VisualStudio.TestTools.WebTesting.WebTest)">
      <summary>Performs clean up after the conditional rule was checked.</summary>
      <param name="webTest">The <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTest" /> that was executed.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestConditionalConstruct.ExecuteInitializeConditionalRule(Microsoft.VisualStudio.TestTools.WebTesting.WebTest)">
      <summary>Initializes the conditional rule.</summary>
      <param name="webTest">The <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTest" /> to be executed.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestConditionalConstruct.GetConditionalRuleText">
      <summary>Returns the text description of the conditional rule.</summary>
      <returns>The text description of the conditional rule.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestConditionalConstruct.Initialize(Microsoft.VisualStudio.TestTools.WebTesting.ConditionalRuleReference)">
      <summary>Initializes a new referenced conditional rule.</summary>
      <param name="conditionalRuleReference">The reference to the conditional rule to initialize.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestConditionalConstruct.Initialize(Microsoft.VisualStudio.TestTools.WebTesting.WebTestConditionalConstruct,Microsoft.VisualStudio.TestTools.WebTesting.ConditionalRuleReference)">
      <summary>Initializes a new referenced conditional rule by copying the specified <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.ConditionalRuleReference" />.</summary>
      <param name="copy">The <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestConditionalConstruct" /> to initialize.</param>
      <param name="ruleCopy">The <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.ConditionalRuleReference" /> to copy to create the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestConditionalConstruct" />.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestConditionalConstruct.Items">
      <summary>Gets the collection of <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestItem" /> objects.</summary>
      <returns>The collection of <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestItem" /> objects.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestConditionalConstruct.ToString(System.String)">
      <summary>Returns a <see cref="T:System.String" /> that represents the current <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestConditionalConstruct" />.</summary>
      <returns>A <see cref="T:System.String" /> that represents the current <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestConditionalConstruct" />.</returns>
      <param name="conditionalRuleText">The conditional rule text to return, or the <see cref="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRuleBase.DisplayName" /> if <paramref name="conditionalRuleText" /> is null.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestConditionalConstruct.UniqueStringId">
      <summary>Gets or sets the unique string ID.</summary>
      <returns>The unique string ID.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestContext">
      <summary>Represents the context available to a <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTest" />.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestContext.Add(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
      <summary>Adds a <see cref="T:System.Collections.Generic.KeyValuePair`2" /> object to the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestContext" />.</summary>
      <param name="keyValuePair">The object to add.</param>
      <exception cref="T:System.ArgumentNullException">key of the <paramref name="keyValuePair" /> is null.</exception>
      <exception cref="T:System.ArgumentException">An element with the same key already occurs in the collection.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestContext.Add(System.String,System.Object)">
      <summary>Adds an element with the provided key and value to the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestContext" />.</summary>
      <param name="key">The key to an object.</param>
      <param name="value">A value that corresponds to the <paramref name="key" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> is null.</exception>
      <exception cref="T:System.ArgumentException">An element with the same <paramref name="key" /> already occurs in the collection.</exception>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestContext.AgentCount">
      <summary>Gets the total number of agents used in the current test run.</summary>
      <returns>The number of agents used in the current test run.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestContext.AgentId">
      <summary>Gets the zero-based index for the current agent.</summary>
      <returns>The index value of the current agent.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestContext.AgentName">
      <summary>Gets the name of the agent computer on which the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTest" /> is running.</summary>
      <returns>The agent computer name.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestContext.Clear">
      <summary>Removes all the elements from the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestContext" />.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestContext.Contains(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
      <summary>Determines whether the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestContext" /> contains the specified key/value pair.</summary>
      <returns>true if the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestContext" /> contains the specific <see cref="T:System.Collections.Generic.KeyValuePair`2" /> object; otherwise, false.</returns>
      <param name="keyValuePair">An object </param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestContext.ContainsKey(System.String)">
      <summary>Determines whether the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestContext" /> contains an element with the specified key.</summary>
      <returns>true if the key occurs in the collection; otherwise, false.</returns>
      <param name="key">The key to look up in collection.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestContext.ControllerName">
      <summary>Gets the name of the test controller computer.</summary>
      <returns>The name of the test controller computer.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestContext.CookieContainer">
      <summary>Gets or sets the cookies used by previous requests in the Web test.</summary>
      <returns>A <see cref="T:System.Net.CookieContainer" /> object.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestContext.CopyTo(System.Collections.Generic.KeyValuePair{System.String,System.Object}[],System.Int32)">
      <summary>Copies the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestContext" /> elements to an array of <see cref="T:System.Collections.Generic.KeyValuePair`2" /> objects</summary>
      <param name="keyValuePairArray">The name of the array objects where the copy resides.</param>
      <param name="index">The starting index location where the array of objects is copied.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestContext.Count">
      <summary>Gets the number of key/value pair elements in the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestContext" />.</summary>
      <returns>The number of key/value pairs in the collection.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestContext.GetEnumerator">
      <summary>Returns an <see cref="T:System.Collections.Generic.IEnumerator`1" /> that contains the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestContext" /> elements.</summary>
      <returns>An <see cref="T:System.Collections.Generic.IEnumerator`1" /> object.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestContext.IsNewUser">
      <summary>Gets a value that indicates whether the Web test is being run in the context of a new user of the target Web site.</summary>
      <returns>true if the Web test is being run in the context of a new user; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestContext.IsReadOnly">
      <summary>Gets a value that indicates whether the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestContext" /> is read-only.</summary>
      <returns>The value is always false.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestContext.Item(System.String)">
      <summary>Gets or sets the value associated with the specified key from the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestContext" /> object.</summary>
      <returns>A <see cref="T:System.Object" /> that contains the value associated with <paramref name="key" />.</returns>
      <param name="key">A string that corresponds to a key in the collection.</param>
      <exception cref="T:System.Collections.Generic.KeyNotFoundException">
        <paramref name="key" /> not found. </exception>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestContext.Keys">
      <summary>Gets a collection of all the keys in the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestContext" />.</summary>
      <returns>An <see cref="T:System.Collections.ICollection" /> object that contains a collection of key strings.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestContext.LastRequestOutcome"></member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestContext.LastResponse">
      <summary>Gets or sets the last <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResponse" />.</summary>
      <returns>The last <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResponse" />.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestContext.Remove(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
      <summary>Removes a <see cref="T:System.Collections.Generic.KeyValuePair`2" /> from the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestContext" />.</summary>
      <returns>true if the element is successfully removed; otherwise, false. This also returns false if the key is not found.</returns>
      <param name="keyValuePair">A <see cref="T:System.Collections.Generic.KeyValuePair`2" /> object to remove from the collection.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestContext.Remove(System.String)">
      <summary>Removes the element with the specified key from the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestContext" />.</summary>
      <returns>true if the element is successfully removed; otherwise, false. This also returns false if the <paramref name="key" /> is not found.</returns>
      <param name="key">The key to remove from the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestContext" />. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> is null.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestContext.System#Collections#IEnumerable#GetEnumerator"></member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestContext.TryGetValue(System.String,System.Object@)">
      <summary>Gets the value associated with the specified key.</summary>
      <returns>true if it contains an element with the specified key; otherwise, false.</returns>
      <param name="key">The key to find.</param>
      <param name="value">The referenced object that retrieves the value of the key, if it is found; otherwise, it retrieves the default value for the type of the <paramref name="value" /> parameter. This parameter can be passed uninitialized.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> is null.</exception>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestContext.ValidationLevel">
      <summary>Gets the validation level for the current test run.</summary>
      <returns>A <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.ValidationLevel" /> enumeration.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestContext.Values">
      <summary>Gets a collection of all the values in the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestContext" />.</summary>
      <returns>An <see cref="T:System.Collections.ICollection" /> object that contains a collection of value objects.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestContext.WebTestIteration">
      <summary>Gets the iteration number of this Web test variation.</summary>
      <returns>A value that represents the iteration number of this Web test variation.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestContext.WebTestUserId">
      <summary>Gets a value that uniquely identifies a simulated virtual user when you run the Web test in a load test.</summary>
      <returns>A virtual user identification number.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestCorrelationResult">
      <summary>Class to contain the result of a correlation applied when running a Web test in correlation mode.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestCorrelationResult.BindingRequestUrl">
      <summary>Gets the binding request URL.</summary>
      <returns>The binding request URL.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestCorrelationResult.ExtractingRequestUrl">
      <summary>Gets the extracting request URL.</summary>
      <returns>The extracting request URL.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestCorrelationResult.ParameterName">
      <summary>Gets the parameter name.</summary>
      <returns>The parameter name.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestCorrelationResult.UniqueContextParameterName">
      <summary>Gets the unique context parameter name.</summary>
      <returns>The unique context parameter name.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestEmptyTableException">
      <summary>Represents an Exception that occurs when data binding is being performed on an empty table.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestEmptyTableException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestEmptyTableException" /> class.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestEmptyTableException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestEmptyTableException" /> class with serialized data.</summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
      <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination. </param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestEmptyTableException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestEmptyTableException" /> class with a specified error message.</summary>
      <param name="message">The message that describes the error.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestEmptyTableException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestEmptyTableException" /> class with a specified error message and a reference to the inner exception that is the cause of this exception.</summary>
      <param name="message">The error message that explains the reason for the exception.</param>
      <param name="innerException">The exception that is the cause of the current exception, or null if no inner exception is specified.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestEndOfDataException">
      <summary>The exception that is thrown when data binding is being performed on a table with the <see cref="F:Microsoft.VisualStudio.TestTools.WebTesting.DataBindingAccessMethod.Unique" /><see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.DataBindingAccessMethod" /> when there are no more rows of data in the table.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestEndOfDataException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestEndOfDataException" /> class. </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestEndOfDataException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestEndOfDataException" /> class for remoting scenarios.</summary>
      <param name="info">Holds the serialized object data about the exception being thrown.</param>
      <param name="context">Contains contextual information about the source or destination.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="info" /> is null.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestEndOfDataException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestEndOfDataException" /> class with an error message.</summary>
      <param name="message">The message that describes the error.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestEndOfDataException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestEndOfDataException" /> class with an error message and a reference to the inner <see cref="T:System.Exception" /> that caused this exception.</summary>
      <param name="message">The error message that explains the reason for the exception.</param>
      <param name="innerException">The exception that is the cause of the current exception.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestError">
      <summary>Class to encapsulate errors that occur during Web test execution.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestError.ErrorSubtype">
      <summary>Gets or sets the error subtype string.</summary>
      <returns>The error subtype.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestError.ErrorText">
      <summary>Gets or sets a string that describes the error.</summary>
      <returns>A string that describes the error.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestError.ErrorType">
      <summary>Gets or sets the type of error that occurred.</summary>
      <returns>The type of error that occurred.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestError.ErrorTypeString"></member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestError.ExceptionText">
      <summary>Gets or sets the exception text, which is the string returned by the ToString() method of the exception.</summary>
      <returns>The exception text.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestError.StackTrace">
      <summary>Gets or sets the stack trace for the error.</summary>
      <returns>The stack trace for the error.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestError.TimeOfError">
      <summary>Gets or sets the time the error occurred.</summary>
      <returns>The time the error occurred.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestErrorType">
      <summary>Enumerates the types of errors that can be included in a WebTestError object.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.TestTools.WebTesting.WebTestErrorType.TestError">
      <summary>A test error.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.TestTools.WebTesting.WebTestErrorType.Exception">
      <summary>An exception error.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.TestTools.WebTesting.WebTestErrorType.HttpError">
      <summary>An HTTP error.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.TestTools.WebTesting.WebTestErrorType.ValidationRuleError">
      <summary>A <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.ValidationRule" /> error.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.TestTools.WebTesting.WebTestErrorType.ExtractionRuleError">
      <summary>An <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.ExtractionRule" /> error.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.TestTools.WebTesting.WebTestErrorType.ConditionalRuleError">
      <summary>A <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.ConditionalRule" /> error.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.TestTools.WebTesting.WebTestErrorType.Timeout">
      <summary>A time-out error.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.TestTools.WebTesting.WebTestErrorType.DataCollectionError">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.TestTools.WebTesting.WebTestErrorType.DataCollectionWarning">
      <summary />
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestException">
      <summary>The exception that is thrown by the test engine for errors that occur while a test is running.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestException" /> class. </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestException" /> class for remoting scenarios. </summary>
      <param name="info">Holds the serialized object data about the exception being thrown.</param>
      <param name="context">Contains contextual information about the source or the destination.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="info" /> is null.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestException" /> class with an error message. </summary>
      <param name="message">The message that describes the error.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestException" /> class with an error message and a reference to the inner <see cref="T:System.Exception" /> that caused this exception.</summary>
      <param name="message">The error message that explains the reason for the exception.</param>
      <param name="innerException">The exception that is the cause of the current exception.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestExecutionInstruction">
      <summary>Used to denote how to handle an operation.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.TestTools.WebTesting.WebTestExecutionInstruction.Execute">
      <summary>An operation is to be run.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.TestTools.WebTesting.WebTestExecutionInstruction.Skip">
      <summary>An operation is to be skipped.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestItem">
      <summary>Base class for <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequest" />.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestItem.Clone">
      <summary>When it is overridden in a derived class, it creates a copy of the calling object. </summary>
      <returns>A copy of the object.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestItem.ItemId">
      <summary>Zero-based sequence number of the item within the web test.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestItem.RuntimeClone"></member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestItemCollection">
      <summary>Represents a strongly typed container for Web test items. </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestItemCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestItemCollection" /> class.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestLoop">
      <summary>Class to represent conditional loop constructs that contains a collection of Web test items that are executed as long as the conditional rule is met.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestLoop.#ctor(Microsoft.VisualStudio.TestTools.WebTesting.ConditionalRule,System.Int32,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestLoop" /> class by using the specified parameters.</summary>
      <param name="conditionalRule">The conditional rule.</param>
      <param name="maxIterations">The maximum number of iterations for this loop.</param>
      <param name="advanceDataSources">true to advance the data cursors in the data set; false to not advance the data cursors in the data set.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestLoop.#ctor(Microsoft.VisualStudio.TestTools.WebTesting.LoopConditionalRuleReference)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestLoop" /> class by using the specified <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.LoopConditionalRuleReference" />.</summary>
      <param name="conditionalRuleReference">The <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.LoopConditionalRuleReference" /> to use to initialize this <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestLoop" />.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestLoop.#ctor(Microsoft.VisualStudio.TestTools.WebTesting.WebTestLoop)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestLoop" /> class by copying the specified <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestLoop" />.</summary>
      <param name="copy">The <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestLoop" /> to copy.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestLoop.Clone">
      <summary>Creates a new <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestLoop" /> that is a copy of the current instance.</summary>
      <returns>A new <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestLoop" /> that is a copy of the current instance.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestLoop.CurrentIterationNumber">
      <summary>Gets the current iteration number.</summary>
      <returns>The current iteration number.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestLoop.ExecuteCheckConditionalRule(Microsoft.VisualStudio.TestTools.WebTesting.WebTest)">
      <returns>true if the condition was met; otherwise, false.</returns>
      <param name="webTest">The <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTest" /> to execute.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestLoop.ExecuteInitializeConditionalRule(Microsoft.VisualStudio.TestTools.WebTesting.WebTest)">
      <summary>Initializes the conditional rule.</summary>
      <param name="webTest">The <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTest" /> to be executed.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestLoop.LoopConditionalRuleReference">
      <summary>Gets the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.LoopConditionalRuleReference" />.</summary>
      <returns>The <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.LoopConditionalRuleReference" />.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestLoop.RegisterDataSource(System.String,System.String)">
      <summary>Registers the specified data source and data table.</summary>
      <param name="dataSourceName">The name of the data source.</param>
      <param name="dataTableName">The name of the data table.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestLoop.RuntimeClone">
      <summary>Creates a new <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestLoop" /> that is a copy of the current instance at runtime.</summary>
      <returns>A new <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestLoop" /> that is a copy of the current instance.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestLoop.ToString">
      <summary>Returns a <see cref="T:System.String" /> that represents the current <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestLoop" />.</summary>
      <returns>A <see cref="T:System.String" /> that represents the current <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestLoop" />.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestLoop.ToString(System.String)">
      <summary>Returns a <see cref="T:System.String" /> that represents the current <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestLoop" />.</summary>
      <returns>A <see cref="T:System.String" /> that represents the current <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestLoop" />.</returns>
      <param name="conditionalRuleText">The conditional rule text to return, or the <see cref="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRuleBase.DisplayName" /> if <paramref name="conditionalRuleText" /> is null.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestPageStatistics">
      <summary>Contains statistics about the execution of the page.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestPageStatistics.PageTime">
      <summary>Gets the response time for the entire page from the time that the first request was issued to the time that the last byte for all dependent requests was received. </summary>
      <returns>A <see cref="T:System.TimeSpan" /> data type that represents the entire response time for the page. </returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestPageStatistics.StartTime">
      <summary>Gets the time the page started.</summary>
      <returns>A <see cref="T:System.DateTime" /> value type that represents the time that the page started. </returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestPageStatistics.TotalContentLength">
      <summary>Gets the total content length of all responses for the page, including redirects and dependents.</summary>
      <returns>The total content length of all the responses for the page. </returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestPlugin">
      <summary>Provides a means to run code and access a <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTest" /> before and after the Web test is run. This class must be inherited. </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestPlugin.#ctor">
      <summary>This class must be inherited.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestPlugin.PostPage(System.Object,Microsoft.VisualStudio.TestTools.WebTesting.PostPageEventArgs)">
      <summary>When overridden in a derived class, represents the method that will handle the event associated with the completion of a Web page.</summary>
      <param name="sender">The source of the event.</param>
      <param name="e">A PostPageEventArgs that contains the event data.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestPlugin.PostRequest(System.Object,Microsoft.VisualStudio.TestTools.WebTesting.PostRequestEventArgs)">
      <summary>When overridden in a derived class, represents the method that will handle the event associated with the completion of an HTTP request.</summary>
      <param name="sender">The source of the event.</param>
      <param name="e">A PostRequestEventArgs that contains the event data.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestPlugin.PostTransaction(System.Object,Microsoft.VisualStudio.TestTools.WebTesting.PostTransactionEventArgs)">
      <summary>When overridden in a derived class, represents the method that will handle the event associated with the completion of a transaction that is defined in the Web test.</summary>
      <param name="sender">The source of the event.</param>
      <param name="e">A PostTransactionEventArgs that contains the event data.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestPlugin.PostWebTest(System.Object,Microsoft.VisualStudio.TestTools.WebTesting.PostWebTestEventArgs)">
      <summary>When overridden in a derived class, represents the method that will handle the event associated with the end of a Web test.</summary>
      <param name="sender">The source of the event.</param>
      <param name="e">A <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.PostWebTestEventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestPlugin.PrePage(System.Object,Microsoft.VisualStudio.TestTools.WebTesting.PrePageEventArgs)">
      <summary>When overridden in a derived class, represents the method that will handle the event associated with the start of a Web page.</summary>
      <param name="sender">The source of the event.</param>
      <param name="e">A PrePageEventArgs that contains the event data.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestPlugin.PreRequest(System.Object,Microsoft.VisualStudio.TestTools.WebTesting.PreRequestEventArgs)">
      <summary>When overridden in a derived class, represents the method that will handle the event associated with the start of an HTTP request.</summary>
      <param name="sender">The source of the event.</param>
      <param name="e">A PreRequestEventArgs that contains the event data.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestPlugin.PreRequestDataBinding(System.Object,Microsoft.VisualStudio.TestTools.WebTesting.PreRequestDataBindingEventArgs)"></member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestPlugin.PreTransaction(System.Object,Microsoft.VisualStudio.TestTools.WebTesting.PreTransactionEventArgs)">
      <summary>When overridden in a derived class, represents the method that will handle the event associated with the start of a transaction that is defined in the Web test.</summary>
      <param name="sender">The source of the event.</param>
      <param name="e">A PreTransactionEventArgs that contains the event data.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestPlugin.PreWebTest(System.Object,Microsoft.VisualStudio.TestTools.WebTesting.PreWebTestEventArgs)">
      <summary>When overridden in a derived class, represents the method that will handle the event associated with the start of a Web test.</summary>
      <param name="sender">The source of the event.</param>
      <param name="e">A <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.PostWebTestEventArgs" /> that contains the event data.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestPluginReference">
      <summary>The <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestPluginReference" /> class encapsulates the metadata about a <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequestPlugin" /> and the parameter values to use when an instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequestPlugin" /> is created when the Web test that uses the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequestPlugin" /> is run.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestPluginReference.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestPluginReference" /> class.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestPluginReference.Clone">
      <summary>Creates a new <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestPluginReference" /> that is a copy of the current instance.</summary>
      <returns>A new <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestPluginReference" /> that is a copy of the current instance.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestPluginReference.CreateInstance">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestPluginReference" /> class.</summary>
      <returns>A new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestPluginReference" /> class.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestPluginReferenceCollection">
      <summary>Represents a serializable strongly typed container for Web test plug-in references.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestPluginReferenceCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestPluginReferenceCollection" /> class.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRecorderPlugin">
      <summary>Plug-in interface for a Web test recorder.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRecorderPlugin.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRecorderPlugin" /> class.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRecorderPlugin.PostWebTestDynamicParameterDetection(System.Object,Microsoft.VisualStudio.TestTools.WebTesting.PostWebTestRecordingEventArgs)">
      <param name="sender">The source of the event.</param>
      <param name="e">A <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.PostWebTestRecordingEventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRecorderPlugin.PostWebTestRecording(System.Object,Microsoft.VisualStudio.TestTools.WebTesting.PostWebTestRecordingEventArgs)">
      <param name="sender">The source of the event.</param>
      <param name="e">A <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.PostWebTestRecordingEventArgs" /> that contains the event data.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRecorderPluginReference"></member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRecorderPluginReference.#ctor"></member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRecorderPluginReference.AlwaysExecute"></member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRecorderPluginReference.Clone"></member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRecorderPluginReference.CreateInstance"></member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRecorderUtilities"></member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRecorderUtilities.ParseFileUploadFields(Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequest)">
      <param name="request"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequest">
      <summary>Represents an HTTP request that will be sent to a Web server. </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequest.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequest" /> class using a URL string.</summary>
      <param name="url">The location of the resource being tested by the Web test.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequest.#ctor(System.Uri)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequest" /> class using a <see cref="T:System.Uri" /> object.</summary>
      <param name="requestUri">The <see cref="T:System.Uri" /> object that contains information about the resource being tested.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequest.Body">
      <summary>Gets or sets the body of this request.</summary>
      <returns>An <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.IHttpBody" /> object. </returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequest.BodyBytes">
      <summary>Gets the bytes associated with the body.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequest.Cache">
      <summary>Gets or sets a value that indicates whether to simulate browser caching for the request.</summary>
      <returns>true to simulate browser caching; otherwise, false. This has a default value of false.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequest.ClientCertificates">
      <summary>Gets or sets a reference to allow users to authenticate using X.509 SSL certificates.</summary>
      <returns>A <see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" /> collection.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequest.Clone">
      <summary>Makes a deep copy of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequest" /> object.</summary>
      <returns>A <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequest" /> object.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequest.ContentLength">
      <summary>Gets the length (in bytes) of the request body.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequest.ContentType">
      <summary>Gets the content type of the request.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequest.Cookies">
      <summary>Gets a collection of cookies.</summary>
      <returns>A <see cref="T:System.Net.CookieCollection" /> collection.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequest.CorrelationExtractionRuleReferences">
      <summary>Gets the collection of references to extraction rules that are used to correlate dynamic parameters.</summary>
      <returns>The collection of references to extraction rules.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequest.DependentRequests">
      <summary>Gets the collection of dependent requests.</summary>
      <returns>A <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequestCollection" /> collection. </returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequest.EncodeRedirectedUrl"></member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequest.Encoding">
      <summary>Gets or sets the <see cref="T:System.Text.Encoding" /> format.</summary>
      <returns>Gets an <see cref="T:System.Text.Encoding" /> object. The default format is UTF-8.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequest.ExpectedHttpStatusCode">
      <summary>Gets or sets the HTTP status code that is expected for this request.</summary>
      <returns>The HTTP status code.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequest.ExpectedResponseUrl">
      <summary>Gets or sets the expected URL of the response. When a redirect is expected, this URL might differ from the request URL.</summary>
      <returns>The expected URL of the response.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequest.ExtractionRuleReferences">
      <summary>Gets the collection of references to extraction rules that are defined for the request.</summary>
      <returns>The collection of references to extraction rules that are defined for the request.</returns>
    </member>
    <member name="E:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequest.ExtractValues">
      <summary>Occurs after the <see cref="E:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequest.ValidateResponse" /> event.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequest.FollowRedirects">
      <summary>Gets or sets a value that indicates whether to automatically follow redirects.</summary>
      <returns>true if redirects are followed; otherwise, false. The default is true.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequest.HasCookies">
      <summary>Gets a value that indicates whether the request has cookies.</summary>
      <returns>true if the request has cookies; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequest.HasDependentRequests">
      <summary>Gets a value that indicates whether the request has dependent requests.</summary>
      <returns>true if the request has dependent requests; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequest.HasHeaders">
      <summary>Gets a value that indicates whether the request has HTTP headers.</summary>
      <returns>true if the request has HTTP headers; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequest.HasQueryStringParameters">
      <summary>Gets a value that indicates whether the request has querystring parameters.</summary>
      <returns>true if the request has querystring parameters; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequest.Headers">
      <summary>Gets the collection of HTTP headers for the request.</summary>
      <returns>A <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequestHeaderCollection" /> collection.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequest.InternalSetOutcome(Microsoft.VisualStudio.TestTools.WebTesting.Outcome)">
      <param name="outcome"></param>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequest.IsRedirectFollow">
      <summary>Gets a value that indicates whether the request was created as the result of following a redirect.</summary>
      <returns>true if the request was created by a redirect; otherwise, false. The default value is false.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequest.Method">
      <summary>Gets or sets the method to use for the request.</summary>
      <returns>The method that is used for the request. The default value is "GET".</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequest.Outcome">
      <summary>Gets or sets the Pass or Fail outcome of the Web test request.</summary>
      <returns>The outcome of the Web test request.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequest.ParseDependentRequests">
      <summary>Gets or sets a value that indicates whether to automatically fetch dependent requests found in the response body.</summary>
      <returns>true if dependent requests are fetched; otherwise, false. The default value is true.</returns>
    </member>
    <member name="E:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequest.PostRequest">
      <summary>Occurs after the <see cref="E:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequest.ValidateResponse" /> and the <see cref="E:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequest.ExtractValues" /> events.</summary>
    </member>
    <member name="E:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequest.PreRequest">
      <summary>Occurs before the request is sent. </summary>
    </member>
    <member name="E:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequest.PreRequestDataBinding"></member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequest.QueryStringParameters">
      <summary>Gets the list of query string parameters for the request.</summary>
      <returns>A <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.QueryStringParameterCollection" /> collection.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequest.RecordedCookies">
      <summary>Gets the cookies recorded with the request.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequest.RecordResult">
      <summary>Gets or sets a value that indicates whether individual statistics and result data are tracked for this request.</summary>
      <returns>true if statistics and result data are tracked; otherwise, false. The default value is true.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequest.ReportingName">
      <summary>Gets or sets the reporting name for a request.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequest.ResponseTimeGoal">
      <summary>Gets or sets the response time goal for a particular page.</summary>
      <returns>A value that represents the response time goal for a particular page. This is measured in seconds. The default value is zero seconds which means there is no goal for this page.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequest.SendChunked">
      <summary>Gets or sets a value that indicates whether the user can send a chunked request body.</summary>
      <returns>true if chunked requests are sent; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequest.ThinkTime">
      <summary>Gets or sets a value that represents the think time to wait after the response is received.</summary>
      <returns>A think time value. The default value is 0.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequest.Timeout">
      <summary>Gets or sets a value that indicates the amount of time to wait for this request before timing out.</summary>
      <returns>The time to wait before timing out. The default value is 0.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequest.Url">
      <summary>Gets or sets the URL to the resource used for the request.</summary>
      <returns>A URL value.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequest.UrlWithQueryString">
      <summary>Gets the URL to the resource that is used for the request, including the query string.</summary>
      <returns>The URL to the resource that is used for the request.</returns>
    </member>
    <member name="E:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequest.ValidateResponse">
      <summary>Occurs immediately after the response is received.</summary>
    </member>
    <member name="E:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequest.ValidateResponseOnPageComplete">
      <summary>This event is raised after the page is fully loaded.Â  This is used to check that the response was valid.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequest.ValidationRuleReferences">
      <summary>Gets the collection of references to validation rules that are defined for the request.</summary>
      <returns>The collection of references to validation rules that are defined for the request.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequest.Version">
      <summary>Gets or sets the HTTP version of the request.</summary>
      <returns>The HTTP version of the request. The default value is "1.1".</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequest.WebTestRequestPluginReferences">
      <summary>Gets the collection of references to the Web test request plug-ins that are defined on the request.</summary>
      <returns>The collection of references to the Web test request plug-ins that are defined on the request.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequestCollection">
      <summary>A strongly typed container for Web test request headers. </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequestCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequestCollection" /> class.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequestHeader">
      <summary>Represents an HTTP header. </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequestHeader.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequestHeader" /> class.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequestHeader.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequestHeader" /> class with values for the <see cref="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequestHeader.Name" /> and <see cref="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequestHeader.Value" /> properties.</summary>
      <param name="name">The name of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequestHeader" />. </param>
      <param name="value">The value of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequestHeader" />. </param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequestHeader.Clone">
      <summary>Creates of a copy of the current instance.</summary>
      <returns>A <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequestHeader" /> object.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequestHeader.Name">
      <summary>Gets or sets the name of the request header.</summary>
      <returns>The name of the request header.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequestHeader.Value">
      <summary>Gets or sets the value of the request header.</summary>
      <returns>The value of the request header.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequestHeaderCollection">
      <summary>A serializable strongly typed container for Web test request headers.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequestHeaderCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequestHeaderCollection" /> class. </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequestHeaderCollection.Add(System.String,System.String)">
      <summary>Adds a <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequestHeaderCollection" /> created from a parameter name and value.</summary>
      <param name="name">The name of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequestHeader" /> to be created and then added to the collection.</param>
      <param name="value">The value of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequestHeader" /> to be created and then added to the collection.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequestHeaderCollection.Contains(System.String)">
      <summary>Returns a value that indicates whether a <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequestHeader" /> occurs in this collection.</summary>
      <returns>true if the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequestHeader" /> occurs in this collection; otherwise, false.</returns>
      <param name="headerName">The name of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequestHeader" /> to look for in this collection.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequestHeaderCollection.Remove(System.String)">
      <summary>Removes the first occurrence of a header with the specified header name.</summary>
      <returns>true if a <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequestHeader" /> was removed; otherwise, false.Remarks</returns>
      <param name="headerName">The name of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequestHeader" /> to remove from this collection.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequestPlugin">
      <summary>Receives notifications before and after a request is processed. </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequestPlugin.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequestPlugin" /> class.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequestPlugin.PostRequest(System.Object,Microsoft.VisualStudio.TestTools.WebTesting.PostRequestEventArgs)">
      <summary>When overridden in a derived class, this method is run each time a request finishes before dependent requests are run. This allows the callback to get runtime information about the request.</summary>
      <param name="sender">The object that fired the event.</param>
      <param name="e">A <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.PostRequestEventArgs" /> object.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequestPlugin.PreRequest(System.Object,Microsoft.VisualStudio.TestTools.WebTesting.PreRequestEventArgs)">
      <summary>When overridden in a derived class, this method allows outside code to affect the request. </summary>
      <param name="sender">The object that fired the event.</param>
      <param name="e">A <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.PreRequestEventArgs" /> object.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequestPlugin.PreRequestDataBinding(System.Object,Microsoft.VisualStudio.TestTools.WebTesting.PreRequestDataBindingEventArgs)"></member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequestPluginConverter">
      <summary>Class to convert webtests from Visual Studio 2005. Not intended for use by user written code.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequestPluginConverter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequestPluginConverter" /> class.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequestPluginConverter.ClassName">
      <summary>Gets or sets the class name.</summary>
      <returns>The class name.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequestPluginConverter.PostRequest(System.Object,Microsoft.VisualStudio.TestTools.WebTesting.PostRequestEventArgs)">
      <summary>Represents the method that will handle the event associated with the completion of an HTTP request.</summary>
      <param name="sender">The source of the event.</param>
      <param name="e">A <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.PostRequestEventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequestPluginConverter.PreRequest(System.Object,Microsoft.VisualStudio.TestTools.WebTesting.PreRequestEventArgs)">
      <summary>Represents the method that will handle the event associated with the start of an HTTP request.</summary>
      <param name="sender">The source of the event.</param>
      <param name="e">A <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.PreRequestEventArgs" /> that contains the event data.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequestPluginConverter.WebTestRequestPlugin">
      <summary>Gets the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequestPlugin" />.</summary>
      <returns>The <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequestPlugin" />.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequestPluginReference">
      <summary>The <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequestPluginReference" /> class encapsulates the metadata about a <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequestPlugin" /> and the parameter values to use when an instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequestPlugin" /> is created when the Web test that uses the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequestPlugin" /> is run.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequestPluginReference.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequestPluginReference" /> class.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequestPluginReference.Clone">
      <summary>Creates a new <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequestPluginReference" /> that is a copy of the current instance.</summary>
      <returns>A new <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequestPluginReference" /> that is a copy of the current instance.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequestPluginReference.CreateInstance">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequestPluginReference" /> class.</summary>
      <returns>A new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequestPluginReference" /> class.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequestPluginReferenceCollection">
      <summary>Represents a strongly typed container for Web test request plug-in references.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequestPluginReferenceCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequestPluginReferenceCollection" /> class.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequestResult">
      <summary>Class to contain all result information for a completed Web test request.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequestResult.ConditionalRuleResult">
      <summary>Gets or sets the conditional rule result.</summary>
      <returns>The conditional rule result.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequestResult.DependantResults">
      <summary>Gets the list of dependant results.</summary>
      <returns>The list of dependant results.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequestResult.Errors">
      <summary>Gets the list of errors.</summary>
      <returns>The list of errors.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequestResult.ExtractionRuleResults">
      <summary>Gets the list of extraction rule results.</summary>
      <returns>The list of extraction rule results.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequestResult.GetDependantResult(System.String)">
      <summary>Returns the dependent result for the specified URL, or null if no dependent result could be found at that URL.</summary>
      <returns>The dependent result for the specified URL, or null if no dependent result could be found at that URL.</returns>
      <param name="url">The URL to evaluate.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequestResult.IsSkippedRequest">
      <summary>Gets or sets the Boolean indicator of whether this request will be skipped.</summary>
      <returns>true if this request will be skipped; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequestResult.Request">
      <summary>Gets or sets the Web test request.</summary>
      <returns>The Web test request.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequestResult.Response">
      <summary>Gets or sets the Web test response.</summary>
      <returns>The Web test response.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequestResult.ValidationRuleResults">
      <summary>Gets or sets the validation rule results.</summary>
      <returns>The validation rule results.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequestStatistics">
      <summary>Used to track key information that is gathered when the request is run.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequestStatistics.ContentLength">
      <summary>Gets or sets the length of the response.</summary>
      <returns>The length of the response. This is measured in bytes. </returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequestStatistics.MillisecondsToFirstByte">
      <summary>Gets the number of milliseconds elapsed between <see cref="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequestStatistics.StartTime" /> and <see cref="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequestStatistics.TimeOfFirstByte" />.</summary>
      <returns>The number of milliseconds elapsed between <see cref="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequestStatistics.StartTime" /> and <see cref="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequestStatistics.TimeOfFirstByte" />.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequestStatistics.MillisecondsToLastByte">
      <summary>Gets the number of milliseconds elapsed between <see cref="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequestStatistics.StartTime" /> and <see cref="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequestStatistics.TimeOfLastByte" />.</summary>
      <returns>The number of milliseconds elapsed between <see cref="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequestStatistics.StartTime" /> and <see cref="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequestStatistics.TimeOfLastByte" />.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequestStatistics.StartTime">
      <summary>Gets or sets the time the request was sent to the server.</summary>
      <returns>A <see cref="T:System.DateTime" /> object.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequestStatistics.TimeOfFirstByte">
      <summary>Gets or sets the time the first byte of the response was received.</summary>
      <returns>A <see cref="T:System.DateTime" /> object.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequestStatistics.TimeOfLastByte">
      <summary>Gets or sets the time the last byte of the response was received.</summary>
      <returns>A <see cref="T:System.DateTime" /> object.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResponse">
      <summary>Represents an HTTP response. </summary>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResponse.BodyBytes">
      <summary>Gets the raw bytes of the HTTP response body.</summary>
      <returns>A byte array representing the HTTP response body.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResponse.BodyString">
      <summary>Gets a string version of the response body for responses with text, HTML, or XML content types.</summary>
      <returns>The response body. This returns null if there is not a body or the content type is not text, HTML, or XML.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResponse.CharacterSet">
      <summary>Gets the character set that is specified in the response headers.</summary>
      <returns>A string that contains the character set of the response.</returns>
      <exception cref="T:System.ObjectDisposedException">The current instance has been disposed.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResponse.Clone"></member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResponse.ContentEncoding">
      <summary>Gets the method that is used to encode the body of the response.</summary>
      <returns>A string describing the method that is used to encode the body of the response.</returns>
      <exception cref="T:System.ObjectDisposedException">The current instance has been disposed.</exception>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResponse.ContentLength">
      <summary>Gets the length of the content that is returned by the request.</summary>
      <returns>The number of bytes returned by the request. Content length does not include header information.</returns>
      <exception cref="T:System.ObjectDisposedException">The current instance has been disposed.</exception>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResponse.ContentType">
      <summary>Gets the MIME type of the response body.</summary>
      <returns>A MIME type.</returns>
      <exception cref="T:System.ObjectDisposedException">The current instance has been disposed.</exception>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResponse.Cookies">
      <summary>Gets the cookies associated with the response.</summary>
      <returns>A <see cref="T:System.Net.CookieCollection" /> collection.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResponse.Headers">
      <summary>Gets the headers associated with the response from the server.</summary>
      <returns>A <see cref="T:System.Net.WebHeaderCollection" /> collection.</returns>
      <exception cref="T:System.ObjectDisposedException">The current instance has been disposed.</exception>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResponse.HtmlDocument">
      <summary>Gets the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.HtmlDocument" /> created by parsing the response body of a response with HTML or XHTML content type.</summary>
      <returns>A <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.HtmlDocument" /> object. This returns null if this is not an HTML response.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResponse.IsBodyEmpty">
      <summary>Gets a value indicating whether the response body is empty.</summary>
      <returns>true if the body is empty or null; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResponse.IsHtml">
      <summary>Gets a value indicating whether the response body is an HTML document.</summary>
      <returns>true if the response body is an HTML document; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResponse.IsText">
      <summary>Gets a value indicating whether the response body is a text document.</summary>
      <returns>true if the response body is a text document; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResponse.IsXml">
      <summary>Gets a value that indicates whether the response is XML.</summary>
      <returns>true if the response content type is "text/xml", "application/xml", or "application/xhtml+xml"; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResponse.LastModified">
      <summary>Gets the last date and time that the contents of the response were modified.</summary>
      <returns>A <see cref="T:System.DateTime" /> object.</returns>
      <exception cref="T:System.ObjectDisposedException">The current instance has been disposed.</exception>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResponse.Method">
      <summary>Gets the method that is used to return the response.</summary>
      <returns>A string that contains the HTTP method that is used to return the response.</returns>
      <exception cref="T:System.ObjectDisposedException">The current instance has been disposed. </exception>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResponse.ProtocolVersion">
      <summary>Gets the version of the HTTP protocol that is used in the response.</summary>
      <returns>A <see cref="T:System.Version" /> that contains the HTTP protocol version of the response.</returns>
      <exception cref="T:System.ObjectDisposedException">The current instance has been disposed. </exception>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResponse.ResponseUri">
      <summary>Gets the URI of the Internet resource that responded to the request.</summary>
      <returns>A <see cref="T:System.Uri" /> that contains the URI of the Internet resource that responded to the request.</returns>
      <exception cref="T:System.ObjectDisposedException">The current instance has been disposed. </exception>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResponse.Server">
      <summary>Gets the name of the server that sent the response.</summary>
      <returns>A string that contains the name of the server that sent the response.</returns>
      <exception cref="T:System.ObjectDisposedException">The current instance has been disposed. </exception>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResponse.Statistics">
      <summary>Gets detailed information gathered during the execution of the request.</summary>
      <returns>A <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequestStatistics" /> object.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResponse.StatusCode">
      <summary>Gets the status of the response.</summary>
      <returns>A <see cref="T:System.Net.HttpStatusCode" /> value.</returns>
      <exception cref="T:System.ObjectDisposedException">The current instance has been disposed. </exception>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResponse.StatusDescription">
      <summary>Gets the status description returned with the response.</summary>
      <returns>A string describing the status of the response.</returns>
      <exception cref="T:System.ObjectDisposedException">The current instance has been disposed. </exception>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResponse.XmlDocument">
      <summary>Gets a <see cref="T:System.Xml.XmlDocument" /> representing the response body if the content type indicated the response was XML.</summary>
      <returns>A <see cref="T:System.Xml.XmlDocument" /> object. Returns null if this is not an XML response.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResponseCode">
      <summary>Enumerates the HTTP response codes defined in RFC 2616 for HTTP 1.1.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResponseCode.None">
      <summary>HTTP Response code 0.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResponseCode.Continue">
      <summary>HTTP Response code 100.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResponseCode.SwitchingProtocols">
      <summary>HTTP Response code 101.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResponseCode.Ok">
      <summary>HTTP Response code 200.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResponseCode.Created">
      <summary>HTTP Response code 201.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResponseCode.Accepted">
      <summary>HTTP Response code 202.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResponseCode.NonAuthoritativeInformation">
      <summary>HTTP Response code 203.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResponseCode.NoContent">
      <summary>HTTP Response code 204.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResponseCode.ResetContent">
      <summary>HTTP Response code 205.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResponseCode.PartialContent">
      <summary>HTTP Response code 206.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResponseCode.MultipleChoices">
      <summary>HTTP Response code 300.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResponseCode.Moved">
      <summary>HTTP Response code 301.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResponseCode.Redirect">
      <summary>HTTP Response code 302.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResponseCode.RedirectMethod">
      <summary>HTTP Response code 303.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResponseCode.NotModified">
      <summary>HTTP Response code 304.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResponseCode.UseProxy">
      <summary>HTTP Response code 305.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResponseCode.Unused">
      <summary>HTTP Response code 306.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResponseCode.TemporaryRedirect">
      <summary>HTTP Response code 307.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResponseCode.BadRequest">
      <summary>HTTP Response code 400.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResponseCode.Unauthorized">
      <summary>HTTP Response code 401.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResponseCode.PaymentRequired">
      <summary>HTTP Response code 402.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResponseCode.Forbidden">
      <summary>HTTP Response code 403.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResponseCode.NotFound">
      <summary>HTTP Response code 404.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResponseCode.MethodNotAllowed">
      <summary>HTTP Response code 405.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResponseCode.NotAcceptable">
      <summary>HTTP Response code 406.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResponseCode.ProxyAuthenticationRequired">
      <summary>HTTP Response code 407.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResponseCode.RequestTimeout">
      <summary>HTTP Response code 408.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResponseCode.Conflict">
      <summary>HTTP Response code 409.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResponseCode.Gone">
      <summary>HTTP Response code 410.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResponseCode.LengthRequired">
      <summary>HTTP Response code 411.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResponseCode.PreconditionFailed">
      <summary>HTTP Response code 412.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResponseCode.RequestEntityTooLarge">
      <summary>HTTP Response code 413.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResponseCode.RequestUriTooLong">
      <summary>HTTP Response code 414.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResponseCode.UnsupportedMediaType">
      <summary>HTTP Response code 415.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResponseCode.RequestedRangeNotSatisfied">
      <summary>HTTP Response code 416.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResponseCode.ExpectationFailed">
      <summary>HTTP Response code 417.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResponseCode.InternalServerError">
      <summary>HTTP Response code 500.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResponseCode.NotImplemented">
      <summary>HTTP Response code 501.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResponseCode.BadGateway">
      <summary>HTTP Response code 502.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResponseCode.ServiceUnavailable">
      <summary>HTTP Response code 503.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResponseCode.GatewayTimeout">
      <summary>HTTP Response code 504.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResponseCode.HttpVersionNotSupported">
      <summary>HTTP Response code 505.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResponseCodeConverter">
      <summary>Helper class that helps with conversions between enum values and strings.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResponseCodeConverter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResponseCodeConverter" /> class.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResponseCodeConverter.ConvertFromEnumToString(Microsoft.VisualStudio.TestTools.WebTesting.WebTestResponseCode)">
      <summary>Converts the specified enum value to a string representative of this enum value.</summary>
      <returns>A string representation of the specified enum value.</returns>
      <param name="value">The enum value to convert.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResponseCodeConverter.ConvertFromStringToEnum(System.String)">
      <summary>Converts the specified string to a corresponding enum value.</summary>
      <returns>The enum corresponding to the specified string value.</returns>
      <param name="value">The string value to convert.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResponseCodeConverter.PopulateStandardValues">
      <summary>Returns a string array with the string representation of all possible enum values.</summary>
      <returns>A string array with the string representation of all possible enum values.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResultComment"></member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResultComment.Clone">
      <summary>Creates a new <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResultComment" /> that is a copy of the current instance.</summary>
      <returns>A new <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResultComment" /> that is a copy of the current instance.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResultComment.Comment">
      <summary>Gets or sets a text comment.</summary>
      <returns>A text comment.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResultComment.GetRequestSize"></member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResultComment.GetResponseSize"></member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResultComment.Passed">
      <summary>Gets the Boolean indicator of whether the Web test passed.</summary>
      <returns>The Boolean indicator of whether the Web test passed.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResultCondition">
      <summary>Class to contain the Web test result condition.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResultCondition.Clone">
      <summary>Creates a new <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResultCondition" /> that is a copy of the current instance.</summary>
      <returns>A new <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResultCondition" /> that is a copy of the current instance.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResultCondition.ConditionStringRepresentation">
      <summary>Gets or sets the text representation of the condition.</summary>
      <returns>The text representation of the condition.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResultCondition.ErrorOccurred">
      <summary>Gets or sets the Boolean indicator of whether an error occurred.</summary>
      <returns>The Boolean indicator of whether an error occurred.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResultCondition.IsConditionalRuleMet">
      <summary>Returns a Boolean indicator of whether the conditional rule was met.</summary>
      <returns>true if the conditional rule was met; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResultCondition.Passed">
      <summary>Gets the Boolean indicator of whether the Web test passed.</summary>
      <returns>The Boolean indicator of whether the Web test passed.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResultCondition.RequestResult">
      <summary>Gets the request result of the Web test.</summary>
      <returns>The request result of the Web test.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResultCondition.StopCondition"></member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResultCondition.UniqueStringId">
      <summary>Gets or sets the unique string ID for this <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResultCondition" />.</summary>
      <returns>The unique string ID for this <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResultCondition" />.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResultDetails">
      <summary>Class to contain the result details of Web tests.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResultDetails.CorrelationResults">
      <summary>Gets the list of correlation results.</summary>
      <returns>The list of correlation results.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResultDetails.GetWebTestRequestResults">
      <summary>Retrieves the list of <see cref="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResultDetails.GetWebTestRequestResults" />.</summary>
      <returns>A list of <see cref="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResultDetails.GetWebTestRequestResults" />.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResultDetails.TestName"></member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResultDetails.WebTestIterations">
      <summary>Gets the list of Web test iterations.</summary>
      <returns>The list of Web test iterations.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResultDetailsSerializer"></member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResultDetailsSerializer.#ctor"></member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResultDetailsSerializer.Deserialize(System.String)"></member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResultDetailsSerializer.Serialize(Microsoft.VisualStudio.TestTools.WebTesting.WebTestResultDetails,System.String)"></member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResultGroup"></member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResultGroup.AddNonExecutedChildren(System.Collections.Generic.List{Microsoft.VisualStudio.TestTools.WebTesting.WebTestResultUnit},Microsoft.VisualStudio.TestTools.WebTesting.WebTestItemCollection,Microsoft.VisualStudio.TestTools.WebTesting.WebTestResultStatus)">
      <param name="children"></param>
      <param name="itemCollection"></param>
      <param name="resultStatus"></param>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResultGroup.Children"></member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResultGroup.GetItem(System.Int32)">
      <summary>Retrieves the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResultUnit" /> at the specified index from the collection.</summary>
      <returns>The <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResultUnit" /> at the specified index.</returns>
      <param name="itemId">The specified index.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResultGroup.GetRequestSize"></member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResultGroup.GetResponseSize"></member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResultGroup.Passed"></member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResultIteration"></member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResultIteration.Clone">
      <summary>Creates a new object that is a copy of the current instance.</summary>
      <returns>A new object that is a copy of the current instance.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResultIteration.IterationNumber">
      <summary>Gets or sets the iteration number.</summary>
      <returns>The iteration number.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResultLoop">
      <summary>Class to contain the loop result of a Web test.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResultLoop.Clone">
      <summary>Creates a new object that is a copy of the current instance.</summary>
      <returns>A new object that is a copy of the current instance.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResultLoop.LoopStringRepresentation">
      <summary>Gets or sets the string representation of the loop.</summary>
      <returns>The string representation of the loop.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResultLoop.NumberOfIterations">
      <summary>Gets or sets the number of iterations.</summary>
      <returns>The number of iterations.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResultLoop.UniqueStringId">
      <summary>Gets or sets the unique string ID.</summary>
      <returns>The unique string ID.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResultLoopIteration">
      <summary>Class to contain the result of a Web test loop iteration.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResultLoopIteration.Clone">
      <summary>Creates a new object that is a copy of the current instance.</summary>
      <returns>A new object that is a copy of the current instance.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResultLoopIteration.ErrorOccurred">
      <summary>Gets or sets a Boolean indicator of whether an error occurred.</summary>
      <returns>true if an error occurred; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResultLoopIteration.IsConditionalRuleMet">
      <summary>Returns true if the conditional rule was met; otherwise, false.</summary>
      <returns>true if the conditional rule was met; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResultLoopIteration.IterationNumber">
      <summary>Gets or sets the iteration number.</summary>
      <returns>The iteration number.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResultLoopIteration.Passed">
      <summary>Gets a Boolean indicator of whether the Web test passed.</summary>
      <returns>true if the Web test passed; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResultLoopIteration.RequestResult">
      <summary>Gets or sets the request result.</summary>
      <returns>The request result.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResultLoopIteration.StopLoopIteration">
      <summary>Gets or sets the iteration to stop the loop.</summary>
      <returns>The iteration to stop the loop.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResultLoopIteration.UniqueStringId">
      <summary>Gets or sets the unique string ID.</summary>
      <returns>The unique string ID.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResultPage"></member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResultPage.Clone">
      <summary>Creates a new object that is a copy of the current instance.</summary>
      <returns>A new object that is a copy of the current instance.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResultPage.GetRequestSize"></member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResultPage.GetResponseSize"></member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResultPage.Passed">
      <summary>Gets the Boolean indicator of whether the Web test passed.</summary>
      <returns>true if the Web test passed; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResultPage.RedirectedPages">
      <summary>Gets or sets the list of redirected pages.</summary>
      <returns>The list of redirected pages.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResultPage.RequestResult">
      <summary>Gets or sets the result of the request.</summary>
      <returns>The result of the request.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResultStatus">
      <summary>Enumeration for the result status of all WebTestResult classes.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResultStatus.Completed">
      <summary>The Web test completed.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResultStatus.TemplateResult">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResultStatus.Skipped">
      <summary>The Web test was skipped.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResultStatus.ConditionallySkipped">
      <summary>The Web test was conditionally skipped.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResultTransaction"></member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResultTransaction.Clone">
      <summary>Creates a new object that is a copy of the current instance.</summary>
      <returns>A new object that is a copy of the current instance.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResultTransaction.IsIncludedTest"></member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResultTransaction.Name"></member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResultTransaction.ResponseTime">
      <summary>Gets or sets the response time.</summary>
      <returns>The response time.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResultUnit"></member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResultUnit.Clone">
      <summary>Creates a new object that is a copy of the current instance.</summary>
      <returns>A new object that is a copy of the current instance.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResultUnit.DeclarativeWebTestItemId"></member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResultUnit.GetRequestSize"></member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResultUnit.GetResponseSize"></member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResultUnit.IsCompleted"></member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResultUnit.IsSkipped"></member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResultUnit.Passed"></member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResultUnit.ResultStatus"></member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResultUnit.SourceWebTestId"></member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRuleBase">
      <summary>An abstract base class extended by rule and reference classes in the <see cref="N:Microsoft.VisualStudio.TestTools.WebTesting" /> namespace.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRuleBase.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRuleBase" /> class.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRuleBase.#ctor(Microsoft.VisualStudio.TestTools.WebTesting.WebTestRuleBase)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRuleBase" /> class by copying the specified <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRuleBase" />.</summary>
      <param name="copy">The <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRuleBase" /> to copy to create the new <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRuleBase" />.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRuleBase.#ctor(System.Type)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRuleBase" /> class with the specified type.</summary>
      <param name="type">The type to use for initialization.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRuleBase.Clone">
      <summary>Creates a new <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRuleBase" /> that is a copy of the current instance.</summary>
      <returns>A new <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRuleBase" /> that is a copy of the current instance.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRuleBase.Description">
      <summary>Gets or sets the description of the rule or plug-in.</summary>
      <returns>The description of the rule or plug-in.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRuleBase.DisplayName">
      <summary>Gets or sets the name of the rule or plug-in to be displayed in the Web test editor.</summary>
      <returns>The name of the rule or plug-in.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRuleBase.ExecutionOrder"></member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRuleBase.Properties">
      <summary>Gets or sets a collection of <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.PluginOrRuleProperty" /> objects with one member for each property defined by the rule or plug-in implementation.</summary>
      <returns>A collection of <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.PluginOrRuleProperty" /> objects.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRuleBase.Type">
      <summary>Gets or sets the <see cref="T:System.Type" /> object representing the type of the rule or plug-in.</summary>
      <returns>The <see cref="T:System.Type" /> object representing the type of the rule or plug-in.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestStoppedException">
      <summary>The <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestStoppedException" /> is thrown when data binding is being performed on a table with a unique <see cref="P:Microsoft.VisualStudio.TestTools.WebTesting.DataSourceTable.AccessMethod" /> when there are no more rows of data in the table.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestStoppedException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestStoppedException" /> class.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestStoppedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestStoppedException" /> class for remoting scenarios.</summary>
      <param name="info">Holds the serialized object data about the exception being thrown.</param>
      <param name="context">Contains contextual information about the source or the destination.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="info" /> is null.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestStoppedException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestStoppedException" /> class with the specified error message.</summary>
      <param name="message">The message that describes the error.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestStoppedException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestStoppedException" /> class with an error message and a reference to the inner <see cref="T:System.Exception" /> that caused this exception.</summary>
      <param name="message">The error message that explains the reason for the exception.</param>
      <param name="innerException">The exception that is the cause of the current exception.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.WorkItemAttribute">
      <summary>Use this attribute to specify a work item that is associated with a test.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WorkItemAttribute.#ctor(System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WorkItemAttribute" /> class with an identification number. </summary>
      <param name="id">The ID of the work item. </param>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WorkItemAttribute.Id">
      <summary>Gets the ID of the work item.</summary>
      <returns>The ID of the work item.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ConditionalRuleTypeAttribute">
      <summary>Attribute that represents the conditional rule type attribute. This attribute specifies the conditional rule type for which the conditional rule applies.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ConditionalRuleTypeAttribute.#ctor(Microsoft.VisualStudio.TestTools.WebTesting.ConditionalRuleType)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ConditionalRuleTypeAttribute" /> class to the specified conditional rule type.</summary>
      <param name="conditionalRuleType">The conditional rule type to use for initialization.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ConditionalRuleTypeAttribute.ConditionalRuleType">
      <summary>Gets the conditional rule type.</summary>
      <returns>The conditional rule type.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ContextParameterExistenceRule">
      <summary>Class to contain a condition rule that checks whether a context parameter exists.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ContextParameterExistenceRule.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ContextParameterExistenceRule" /> class.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ContextParameterExistenceRule.CheckCondition(System.Object,Microsoft.VisualStudio.TestTools.WebTesting.ConditionalEventArgs)">
      <summary>Determines whether the condition was met or not.</summary>
      <param name="sender">The sender of the event.</param>
      <param name="e">The <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.ConditionalEventArgs" /> that contains the event data.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ContextParameterExistenceRule.CheckForExistence">
      <summary>Gets or sets the Boolean indicator of whether the context parameter exists.</summary>
      <returns>The Boolean indicator of whether the context parameter exists.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ContextParameterExistenceRule.ContextParameterName">
      <summary>Gets or sets the context parameter name.</summary>
      <returns>The context parameter name.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ContextParameterExistenceRule.StringRepresentation">
      <summary>Converts the rule to a string to be displayed in the tree.</summary>
      <returns>A string representation of the rule.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.Rules.CookieComparisonRule">
      <summary>Class to contain a conditional rule that checks the value of a cookie.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.Rules.CookieComparisonRule.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.Rules.CookieComparisonRule" /> class.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.Rules.CookieComparisonRule.CheckCondition(System.Object,Microsoft.VisualStudio.TestTools.WebTesting.ConditionalEventArgs)">
      <summary>Determines whether the condition was met or not.</summary>
      <param name="sender">The sender of the event.</param>
      <param name="e">The <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.ConditionalEventArgs" /> that contains the event data.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.Rules.CookieComparisonRule.ComparisonOperator">
      <summary>Gets or sets the comparison operator.</summary>
      <returns>The comparison operator.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.Rules.CookieComparisonRule.CookieDomainName">
      <summary>Gets or sets the cookie domain name.</summary>
      <returns>The cookie domain name.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.Rules.CookieComparisonRule.CookieName">
      <summary>Gets or sets the cookie name.</summary>
      <returns>The cookie name.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.Rules.CookieComparisonRule.CookiePath">
      <summary>Gets or sets the cookie path.</summary>
      <returns>The cookie path.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.Rules.CookieComparisonRule.CookieValue">
      <summary>Gets or sets the cookie value.</summary>
      <returns>The cookie value.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.Rules.CookieComparisonRule.IgnoreCase">
      <summary>Gets or sets the Boolean indicator of whether to ignore case.</summary>
      <returns>true to ignore case; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.Rules.CookieComparisonRule.StringRepresentation">
      <summary>Converts the rule to a string to be displayed in the tree.</summary>
      <returns>A string representation of the rule.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.Rules.CookieComparisonRule.UseRegularExpression">
      <summary>Gets or sets the Boolean value of whether to use regular expressions.</summary>
      <returns>The Boolean value of whether to use regular expressions.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.Rules.CookieComparisonRule.Webpage">
      <summary>Gets or sets the Web page.</summary>
      <returns>The Web page.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.Rules.CookieExistenceRule">
      <summary>Class to contain a conditional rule that checks for the existence of a cookie.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.Rules.CookieExistenceRule.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.Rules.CookieExistenceRule" /> class.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.Rules.CookieExistenceRule.CheckCondition(System.Object,Microsoft.VisualStudio.TestTools.WebTesting.ConditionalEventArgs)">
      <summary>Determines whether the condition was met or not.</summary>
      <param name="sender">The sender of the event.</param>
      <param name="e">The <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.ConditionalEventArgs" /> that contains the event data.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.Rules.CookieExistenceRule.CheckForExistence">
      <summary>Gets or sets the Boolean indicator of whether the cookie exists.</summary>
      <returns>true if the cookie exists; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.Rules.CookieExistenceRule.CookieDomainName">
      <summary>Gets or sets the cookie domain name.</summary>
      <returns>The cookie domain name.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.Rules.CookieExistenceRule.CookieName">
      <summary>Gets or sets the cookie name.</summary>
      <returns>The cookie name.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.Rules.CookieExistenceRule.CookiePath">
      <summary>Gets or sets the cookie path.</summary>
      <returns>The cookie path.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.Rules.CookieExistenceRule.StringRepresentation">
      <summary>Converts the rule to a string to be displayed in the tree.</summary>
      <returns>A string representation of the rule.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.Rules.CookieExistenceRule.Webpage">
      <summary>Gets or sets the Web page.</summary>
      <returns>The Web page.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.Rules.CountingLoopRule">
      <summary>Class to contain a conditional rule which is used to execute a loop a particular number of times.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.Rules.CountingLoopRule.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.Rules.CountingLoopRule" /> class.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.Rules.CountingLoopRule.CheckCondition(System.Object,Microsoft.VisualStudio.TestTools.WebTesting.ConditionalEventArgs)">
      <summary>Determines whether the condition was met or not.</summary>
      <param name="sender">The sender of the event.</param>
      <param name="e">The <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.ConditionalEventArgs" /> that contains the event data.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.Rules.CountingLoopRule.ContextParameterName">
      <summary>Gets or sets the context parameter name.</summary>
      <returns>The context parameter name.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.Rules.CountingLoopRule.Initialize(System.Object,Microsoft.VisualStudio.TestTools.WebTesting.ConditionalEventArgs)">
      <summary>Initializes a <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.Rules.CountingLoopRule" />.</summary>
      <param name="sender">The sender of the event.</param>
      <param name="e">The <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.ConditionalEventArgs" /> that contains the event data.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.Rules.CountingLoopRule.IterationsCount">
      <summary>Gets or sets the number of iterations.</summary>
      <returns>The number of iterations.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.Rules.CountingLoopRule.StringRepresentation">
      <summary>Converts the rule to a string to be displayed in the tree.</summary>
      <returns>A string representation of the rule.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractAttributeValue">
      <summary>Extract the value of an attribute from a specified HTML tag.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractAttributeValue.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractAttributeValue" /> class.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractAttributeValue.AttributeName">
      <summary>Gets or sets a value that represents the name of the attribute that has the value to extract.</summary>
      <returns>The name of an attribute.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractAttributeValue.Extract(System.Object,Microsoft.VisualStudio.TestTools.WebTesting.ExtractionEventArgs)">
      <summary>Extracts the value of an attribute if a match is found.</summary>
      <param name="sender">The object raising the event.</param>
      <param name="e">An <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.ExtractionEventArgs" /> that contains the request, response, and context event data.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractAttributeValue.HtmlDecode">
      <summary>Gets or sets a value that indicates whether the extracted value should be HTML decoded before the value is placed in the Web test context.</summary>
      <returns>true if extracted value should be HTML decoded before the value is placed in the Web test context; otherwise false.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractAttributeValue.Index"></member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractAttributeValue.MatchAttributeName">
      <summary>Gets or sets an additional attribute name that must be found in the HTML tag that contains the attribute value to extract. Used in conjunction with <see cref="P:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractAttributeValue.MatchAttributeValue" />.</summary>
      <returns>An attribute name.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractAttributeValue.MatchAttributeValue">
      <summary>Gets or sets the value of an additional attribute that must be found in the HTML tag that contains the attribute value to extract. Used in conjunction with <see cref="P:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractAttributeValue.MatchAttributeName" />.</summary>
      <returns>An attribute value.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractAttributeValue.Required">
      <summary>Gets or sets a value that indicates whether the extraction rule should fail if the value to be extracted is not found in the response.</summary>
      <returns>true if the extraction rule should fail because the value to be extracted is not found in the response; otherwise false.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractAttributeValue.TagName">
      <summary>Gets or sets the name of the tag that contains the attribute you want to extract.</summary>
      <returns>The name of a tag contains the attribute value to extract.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractFormField">
      <summary>Extracts the value of a form field attribute and adds it to the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestContext" />.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractFormField.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractFormField" /> class.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractFormField.Extract(System.Object,Microsoft.VisualStudio.TestTools.WebTesting.ExtractionEventArgs)">
      <summary>Extracts the form field name and value that matches the <see cref="P:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractFormField.Name" /> property.</summary>
      <param name="sender">The object raising the event.</param>
      <param name="e">An <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.ExtractionEventArgs" /> that contains the request, response, and context event data.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractFormField.HtmlDecode">
      <summary>Gets or sets a value that indicates whether the extracted value should be HTML decoded before the value is placed in the Web test context.</summary>
      <returns>true if extracted value should be HTML decoded before the value is placed in the Web test context; otherwise false.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractFormField.Index"></member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractFormField.Name">
      <summary>Gets or sets the name of the field whose value is to be extracted.</summary>
      <returns>The name of the field to be extracted and its value.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractFormField.Required">
      <summary>Gets or sets a value that indicates whether the extraction rule should fail if the value to be extracted is not found in the response.</summary>
      <returns>true if the extraction rule should fail because the value to be extracted is not found in the response; otherwise false.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractHiddenFields">
      <summary>Extracts all hidden fields from the response and adds each value to the context.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractHiddenFields.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractHiddenFields" /> class.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractHiddenFields.ContextParameterName">
      <summary>Gets or sets the name of the extracted property.</summary>
      <returns>The name of the extracted property.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractHiddenFields.Extract(System.Object,Microsoft.VisualStudio.TestTools.WebTesting.ExtractionEventArgs)">
      <summary>Extracts all hidden fields found in the body of the response and adds the unique hidden fields to the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestContext" />.</summary>
      <param name="sender">The object raising the event.</param>
      <param name="e">An <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.ExtractionEventArgs" /> that contains the request, response, and context event data.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractHiddenFields.HtmlDecode">
      <summary>Gets or sets a value that indicates whether the extracted value should be HTML decoded before the value is placed in the Web test context.</summary>
      <returns>true if extracted value should be HTML decoded before the value is placed in the Web test context; otherwise false.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractHiddenFields.Required">
      <summary>Gets or sets a value that indicates whether the extraction rule should fail if the values to be extracted are not found in the response.</summary>
      <returns>true if the extraction rule should fail because the value to be extracted is not found in the response; otherwise false.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractHttpHeader">
      <summary>Used to extract an HTTP header value from the response and place the value of the header into the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestContext" />.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractHttpHeader.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractHttpHeader" /> class.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractHttpHeader.Extract(System.Object,Microsoft.VisualStudio.TestTools.WebTesting.ExtractionEventArgs)">
      <summary>Extracts the value of an HTTP header from the response and places the value and context parameter name into the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestContext" />.</summary>
      <param name="sender">The object that fired the event.</param>
      <param name="e">Contains request, response, and context information.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractHttpHeader.Header">
      <summary>Gets or sets a value representing the name of the header whose value is to be extracted.</summary>
      <returns>The name of a header.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractHttpHeader.Required">
      <summary>Gets or sets a value that indicates whether the request fails if the header does not exist.</summary>
      <returns>true if the header is required; otherwise, false. The default value is true.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractRegularExpression">
      <summary>Extracts text from the response that matches the regular expression pattern.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractRegularExpression.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractRegularExpression" /> class.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractRegularExpression.Extract(System.Object,Microsoft.VisualStudio.TestTools.WebTesting.ExtractionEventArgs)">
      <summary>Finds the text represented by the regular expression in the response and adds the value to the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestContext" />.</summary>
      <param name="sender">The object that fired the event.</param>
      <param name="e">Contains information about the request, response, and context event data.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractRegularExpression.HtmlDecode">
      <summary>Gets or sets a value that indicates whether the extracted value should be HTML decoded before the value is placed in the Web test context.</summary>
      <returns>true if extracted value should be HTML decoded before the value is placed in the Web test context; otherwise false.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractRegularExpression.IgnoreCase">
      <summary>Gets or sets a value that indicates whether matching is case-sensitive.</summary>
      <returns>true if matching is case-sensitive; otherwise, false. The default value is true.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractRegularExpression.Index">
      <summary>Gets or sets a value that represents an index value of an occurrence of a string that is located in the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.HtmlDocument" />.</summary>
      <returns>An index value of an occurrence of a string that is identified by <see cref="P:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractRegularExpression.RegularExpression" />.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractRegularExpression.RegularExpression">
      <summary>Gets or sets a regular expression which defines the string to extract.</summary>
      <returns>A regular expression which defines the string to extract.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractRegularExpression.Required">
      <summary>Gets or sets a value that indicates whether the extraction fails if the text represented by <see cref="P:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractRegularExpression.RegularExpression" /> does not exist in the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.HtmlDocument" />.</summary>
      <returns>true if the request fails if the text represented by <see cref="P:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractRegularExpression.RegularExpression" /> does not exist; otherwise, false. The default value is true.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText">
      <summary>Extract text from the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.HtmlDocument" /> based on delimiting start/end strings, matching regular expressions, and the occurrence of the text. The extracted text is added to the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestContext" />.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText" /> class.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText.EndsWith">
      <summary>Gets or sets a value that represents the string that delimits the end of the string to extract.</summary>
      <returns>A string that delimits the end of the string to extract.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText.Extract(System.Object,Microsoft.VisualStudio.TestTools.WebTesting.ExtractionEventArgs)">
      <summary>Finds the text delimited by the <see cref="P:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText.StartsWith" /> and <see cref="P:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText.EndsWith" /> properties and adds the text to the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestContext" />.</summary>
      <param name="sender">The object that fired the event.</param>
      <param name="e">Contains information about the request, response, and context.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText.ExtractRandomMatch">
      <summary>Indicates whether the extracted value is chosen randomly from all matches in the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.HtmlDocument" />.</summary>
      <returns>A Boolean value that indicates whether the extracted value is chosen randomly from all matches in the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.HtmlDocument" />.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText.HtmlDecode">
      <summary>Gets or sets a value that indicates whether the extracted value should be HTML decoded before the value is placed in the Web test context.</summary>
      <returns>true if extracted value should be HTML decoded before the value is placed in the Web test context; otherwise false.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText.IgnoreCase">
      <summary>Gets or sets a value that indicates whether matching is case-sensitive.</summary>
      <returns>true if matching is case-sensitive; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText.Index">
      <summary>Gets or sets the zero-based index of the string to match.</summary>
      <returns>The index of the string to match. The default value is zero.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText.Required">
      <summary>Gets or sets a value that indicates whether the request fails if the search text is not found.</summary>
      <returns>true if the extracted text is required; otherwise, false. The default is true.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText.StartsWith">
      <summary>Gets or sets a value representing the string which delimits the beginning of the string to extract.</summary>
      <returns>A string delimiting the beginning of the string to extract.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText.UseRegularExpression">
      <summary>Gets or sets a value that indicates whether the search strings are regular expressions.</summary>
      <returns>true if the search strings are regular expressions; otherwise, false. The default value is false.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ForLoopRule">
      <summary>Class to contain a conditional rule that represents an iteration statement, an initialization statement, a test expression, and an increment statement.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ForLoopRule.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ForLoopRule" /> class.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ForLoopRule.CheckCondition(System.Object,Microsoft.VisualStudio.TestTools.WebTesting.ConditionalEventArgs)">
      <summary>Determines whether the condition was met or not.</summary>
      <param name="sender">The sender of the event.</param>
      <param name="e">The <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.ConditionalEventArgs" /> that contains the event data.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ForLoopRule.ComparisonOperator">
      <summary>Gets or sets the comparison operator.</summary>
      <returns>The comparison operator.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ForLoopRule.ContextParameterName">
      <summary>Gets or sets the context parameter name.</summary>
      <returns>The context parameter name.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ForLoopRule.IncrementValue">
      <summary>Gets or sets the increment value.</summary>
      <returns>The increment value.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ForLoopRule.Initialize(System.Object,Microsoft.VisualStudio.TestTools.WebTesting.ConditionalEventArgs)">
      <summary>Initializes a <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.ConditionalEventArgs" />.</summary>
      <param name="sender">The sender of the event.</param>
      <param name="e">The <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.ConditionalEventArgs" /> that contains the event data.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ForLoopRule.InitialValue">
      <summary>Gets or sets the initial value.</summary>
      <returns>The initial value.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ForLoopRule.StringRepresentation">
      <summary>Converts the rule to a string to be displayed in the tree.</summary>
      <returns>A string representation of the rule.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ForLoopRule.TerminatingValue">
      <summary>Gets or sets the terminating value.</summary>
      <returns>The terminating value.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.Rules.IsContextParameterNameAttribute">
      <summary>Attribute to specify that a property represents a context parameter name.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.Rules.IsContextParameterNameAttribute.#ctor(System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.Rules.IsContextParameterNameAttribute" /> class with the specified value to indicate if the property is an added context parameter name.</summary>
      <param name="isAddedContextParameter">true to declare the property is a context parameter name; otherwise, false.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.Rules.IsContextParameterNameAttribute.IsAddedContextParameter">
      <summary>Gets a Boolean value which indicates that the property is an added context parameter name.</summary>
      <returns>true if the property is an added context parameter name; otherwise, false.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.Rules.LastRequestOutcomeRule">
      <summary>Class to contain a conditional rule that is compares the outcome of the last request. Applies only to condition statements.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.Rules.LastRequestOutcomeRule.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.Rules.LastRequestOutcomeRule" /> class.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.Rules.LastRequestOutcomeRule.CheckCondition(System.Object,Microsoft.VisualStudio.TestTools.WebTesting.ConditionalEventArgs)">
      <summary>Determines whether the condition was met or not. The condition is met if the outcome of the previous request matches the provided outcome.</summary>
      <param name="sender">The sender of the event.</param>
      <param name="e">The <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.ConditionalEventArgs" /> that contains the event data.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.Rules.LastRequestOutcomeRule.RequestOutcome"></member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.Rules.LastRequestOutcomeRule.StringRepresentation">
      <summary>Converts the rule to a string to be displayed in the tree.</summary>
      <returns>A string representation of the rule.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.Rules.LastResponseCodeRule">
      <summary>Class to contain a conditional rule that checks the response code of the last response. Applies only to condition statements.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.Rules.LastResponseCodeRule.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.Rules.LastResponseCodeRule" /> class.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.Rules.LastResponseCodeRule.CheckCondition(System.Object,Microsoft.VisualStudio.TestTools.WebTesting.ConditionalEventArgs)">
      <summary>Determines whether the condition was met or not. The condition is met if the status code of the previous response matches the provided status code.</summary>
      <param name="sender">The sender of the event.</param>
      <param name="e">The <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.ConditionalEventArgs" /> that contains the event data.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.Rules.LastResponseCodeRule.ComparisonOperator">
      <summary>Gets or sets the comparison operator.</summary>
      <returns>The comparison operator.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.Rules.LastResponseCodeRule.ResponseCode">
      <summary>Gets or sets the response code.</summary>
      <returns>The response code.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.Rules.LastResponseCodeRule.StringRepresentation">
      <summary>Converts the rule to a string to be displayed in the tree.</summary>
      <returns>A string representation of the rule.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.Rules.NumericalComparisonRule">
      <summary>Class to contain a conditional rule that consists of a numeric comparison.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.Rules.NumericalComparisonRule.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.Rules.NumericalComparisonRule" /> class.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.Rules.NumericalComparisonRule.CheckCondition(System.Object,Microsoft.VisualStudio.TestTools.WebTesting.ConditionalEventArgs)">
      <summary>Determines whether the condition was met or not. The condition is met if the content of the context parameter passes the comparison.</summary>
      <param name="sender">The sender of the event.</param>
      <param name="e">The <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.ConditionalEventArgs" /> that contains the event data.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.Rules.NumericalComparisonRule.ComparisonOperator">
      <summary>Gets or sets the comparison operator.</summary>
      <returns>The comparison operator.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.Rules.NumericalComparisonRule.ContextParameterName">
      <summary>Gets or sets the context parameter name.</summary>
      <returns>The context parameter name.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.Rules.NumericalComparisonRule.StringRepresentation">
      <summary>Converts the rule to a string to be displayed in the tree.</summary>
      <returns>A string representation of the rule.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.Rules.NumericalComparisonRule.Value">
      <summary>Gets or sets the value.</summary>
      <returns>The value.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ProbabilityRule">
      <summary>Class to contain a conditional rule which is based on the provided probability.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ProbabilityRule.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ProbabilityRule" /> class.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ProbabilityRule.CheckCondition(System.Object,Microsoft.VisualStudio.TestTools.WebTesting.ConditionalEventArgs)">
      <summary>Determines whether the condition was met or not.</summary>
      <param name="sender">The sender of the event.</param>
      <param name="e">The <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.ConditionalEventArgs" /> that contains the event data.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ProbabilityRule.ContextParameterName">
      <summary>Gets or sets the context parameter name.</summary>
      <returns>The context parameter name.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ProbabilityRule.Percentage">
      <summary>Gets or sets the probability percentage.</summary>
      <returns>The probability percentage.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ProbabilityRule.StringRepresentation">
      <summary>Converts the rule to a string to be displayed in the tree.</summary>
      <returns>A string representation of the rule.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.Rules.RuleExecutionOrderAttribute">
      <summary>Attribute to specify when a rule should be executed relative to the dependent requests of this rule.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.Rules.RuleExecutionOrderAttribute.#ctor(Microsoft.VisualStudio.TestTools.WebTesting.RuleExecutionOrder)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.Rules.RuleExecutionOrderAttribute" /> class with the specified value to indicate the rule execution order.</summary>
      <param name="executionOrder">The execution order for the rule.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.Rules.RuleExecutionOrderAttribute.ExecutionOrder">
      <summary>Gets the execution order for the current rule.</summary>
      <returns>The execution order for the current rule.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.Rules.RuleResult"></member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.Rules.RuleResult.Exception">
      <summary>Gets or sets the exception.</summary>
      <returns>The exception.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.Rules.RuleResult.Message">
      <summary>Gets or sets the message.</summary>
      <returns>The message.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.Rules.RuleResult.Name">
      <summary>Gets or sets the name.</summary>
      <returns>The name.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.Rules.RuleResult.RuleProperties">
      <summary>Gets or sets the collection of rule properties.</summary>
      <returns>The collection of rule properties.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.Rules.RuleResult.RuleType">
      <summary>Gets or sets the rule type.</summary>
      <returns>The rule type.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.Rules.RuleResult.Success">
      <summary>Gets or sets a Boolean value which indicates the success of the rule.</summary>
      <returns>true if the rule result was successful; otherwise, false.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.Rules.StringComparisonRule">
      <summary>Class to contain a conditional rule that consists of a string comparison.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.Rules.StringComparisonRule.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.Rules.StringComparisonRule" /> class.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.Rules.StringComparisonRule.CheckCondition(System.Object,Microsoft.VisualStudio.TestTools.WebTesting.ConditionalEventArgs)">
      <summary>Determines whether the condition was met or not.</summary>
      <param name="sender">The sender of the event.</param>
      <param name="e">The <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.ConditionalEventArgs" /> that contains the event data.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.Rules.StringComparisonRule.ComparisonOperator">
      <summary>Gets or sets the comparison operator.</summary>
      <returns>The comparison operator.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.Rules.StringComparisonRule.ContextParameterName">
      <summary>Gets or sets the context parameter name.</summary>
      <returns>The context parameter name.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.Rules.StringComparisonRule.IgnoreCase">
      <summary>Gets or sets a Boolean value to indicate whether to ignore case.</summary>
      <returns>true to ignore case; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.Rules.StringComparisonRule.StringRepresentation">
      <summary>Converts the rule to a string to be displayed in the tree.</summary>
      <returns>A string representation of the rule.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.Rules.StringComparisonRule.UseRegularExpression">
      <summary>Gets or sets a Boolean value to indicate whether to use regular expressions.</summary>
      <returns>true to use regular expressions; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.Rules.StringComparisonRule.Value">
      <summary>Gets or sets the value.</summary>
      <returns>The value.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ValidateFormField">
      <summary>Validates the name and value of a form field attribute.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ValidateFormField.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ValidateFormField" /> class.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ValidateFormField.ExpectedValue">
      <summary>Gets or sets the expected value of the form field.</summary>
      <returns>The expected value of the form field.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ValidateFormField.Name">
      <summary>Gets or sets the name of the field whose value is to be validated.</summary>
      <returns>The name of the field to be validated.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ValidateFormField.Validate(System.Object,Microsoft.VisualStudio.TestTools.WebTesting.ValidationEventArgs)">
      <summary>Validates the existence of a form field that contains a specific value.</summary>
      <param name="sender">The object raising the event.</param>
      <param name="e">A <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.ValidationEventArgs" /> object.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ValidateHtmlSelectTag"></member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ValidateHtmlSelectTag.#ctor"></member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ValidateHtmlSelectTag.ExpectedSelectedOption"></member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ValidateHtmlSelectTag.IgnoreCase"></member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ValidateHtmlSelectTag.Index"></member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ValidateHtmlSelectTag.SelectTagName"></member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ValidateHtmlSelectTag.Validate(System.Object,Microsoft.VisualStudio.TestTools.WebTesting.ValidationEventArgs)"></member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ValidateHtmlTagInnerText"></member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ValidateHtmlTagInnerText.#ctor"></member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ValidateHtmlTagInnerText.AttributeName"></member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ValidateHtmlTagInnerText.AttributeValue"></member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ValidateHtmlTagInnerText.CollapseWhiteSpace"></member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ValidateHtmlTagInnerText.ExpectedInnerText"></member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ValidateHtmlTagInnerText.HasClosingTags"></member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ValidateHtmlTagInnerText.IgnoreCase"></member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ValidateHtmlTagInnerText.Index"></member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ValidateHtmlTagInnerText.RemoveInnerTags"></member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ValidateHtmlTagInnerText.TagName"></member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ValidateHtmlTagInnerText.Validate(System.Object,Microsoft.VisualStudio.TestTools.WebTesting.ValidationEventArgs)"></member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ValidateResponseUrl">
      <summary>A validation rule validates that a redirect occurs during the run of the Web test if and only if the redirect was expected.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ValidateResponseUrl.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ValidateResponseUrl" /> class.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ValidateResponseUrl.Validate(System.Object,Microsoft.VisualStudio.TestTools.WebTesting.ValidationEventArgs)">
      <summary>Validate is called with the test case context and transaction context. These allow the rule to examine both the request and the response and make sure that the data matches the required values.</summary>
      <param name="sender">The source of the event.</param>
      <param name="e">A <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.ValidationEventArgs" /> that contains the event data.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ValidationRuleFindText">
      <summary>Validates that the specified text exists or does not exist in the text response.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ValidationRuleFindText.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ValidationRuleFindText" /> class.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ValidationRuleFindText.FindText">
      <summary>Gets or sets the string which is searched for in the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResponse" />.</summary>
      <returns>The search string.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ValidationRuleFindText.IgnoreCase">
      <summary>Gets or sets a value indicating whether the match is case-sensitive.</summary>
      <returns>true if matching is case-insensitive; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ValidationRuleFindText.PassIfTextFound">
      <summary>Gets or sets a value that indicates whether to pass or fail the test if it is found or not.</summary>
      <returns>true if the test passes when the text is found; otherwise, false if the test passes when the text is not found. The default is true.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ValidationRuleFindText.UseRegularExpression">
      <summary>Gets or sets a value that indicates whether <see cref="P:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ValidationRuleFindText.FindText" /> is a regular expression.</summary>
      <returns>true if the search string is a regular expression; otherwise, false. The default value is false.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ValidationRuleFindText.Validate(System.Object,Microsoft.VisualStudio.TestTools.WebTesting.ValidationEventArgs)">
      <summary>Validates the existence of a string that is defined by <see cref="P:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ValidationRuleFindText.FindText" /> in the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.HtmlDocument" />.</summary>
      <param name="sender">The source of the event.</param>
      <param name="e">A <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.ValidationEventArgs" /> that contains the event data.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ValidationRuleRequestTime">
      <summary>Validates that the response for a request is returned within the specified period of time.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ValidationRuleRequestTime.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ValidationRuleRequestTime" /> class.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ValidationRuleRequestTime.MaxRequestTime">
      <summary>Gets or sets the maximum time the request is allowed to run.</summary>
      <returns>The maximum time the request is allowed to run. This is measured in milliseconds.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ValidationRuleRequestTime.Validate(System.Object,Microsoft.VisualStudio.TestTools.WebTesting.ValidationEventArgs)">
      <summary>Validates that the request time did not exceed the <see cref="P:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ValidationRuleRequestTime.MaxRequestTime" /> property.</summary>
      <param name="sender">The source of the event.</param>
      <param name="e">A <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.ValidationEventArgs" /> that contains the event data.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ValidationRuleRequiredAttributeValue">
      <summary>Validates that the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.HtmlDocument" /> provided by the response contains a tag that includes an attribute that has a specified value.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ValidationRuleRequiredAttributeValue.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ValidationRuleRequiredAttributeValue" /> class.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ValidationRuleRequiredAttributeValue.AttributeName">
      <summary>Gets or sets the name of the attribute to be validated.</summary>
      <returns>The name of the attribute to be validated.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ValidationRuleRequiredAttributeValue.ExpectedValue">
      <summary>Gets or sets the expected value of the attribute.</summary>
      <returns>The expected value of the attribute.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ValidationRuleRequiredAttributeValue.IgnoreCase">
      <summary>Gets or sets a value that indicates whether a case-insensitive comparison is performed.</summary>
      <returns>true if a case-insensitive comparison is performed; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ValidationRuleRequiredAttributeValue.Index"></member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ValidationRuleRequiredAttributeValue.MatchAttributeName">
      <summary>Gets or sets an additional attribute name that must be found in the HTML tag containing the attribute value to validate. Used in conjunction with <see cref="P:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ValidationRuleRequiredAttributeValue.MatchAttributeValue" />.</summary>
      <returns>An attribute name.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ValidationRuleRequiredAttributeValue.MatchAttributeValue">
      <summary>Gets or sets the value of an additional attribute that must be found in the HTML tag containing the attribute value to validate. Used in conjunction with <see cref="P:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ValidationRuleRequiredAttributeValue.MatchAttributeName" />.</summary>
      <returns>An attribute value.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ValidationRuleRequiredAttributeValue.TagName">
      <summary>Gets or sets the HTML tag that contains the attribute to be validated.</summary>
      <returns>The HTML tag that contains the attribute to be validated.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ValidationRuleRequiredAttributeValue.Validate(System.Object,Microsoft.VisualStudio.TestTools.WebTesting.ValidationEventArgs)">
      <summary>Validates the existence of an attribute value in a response.</summary>
      <param name="sender">The source of the event.</param>
      <param name="e">A <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.ValidationEventArgs" /> that contains the event data.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ValidationRuleRequiredTag">
      <summary>Validates the existence of a specified tag in the response.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ValidationRuleRequiredTag.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ValidationRuleRequiredTag" /> class.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ValidationRuleRequiredTag.MinOccurrences">
      <summary>Gets or sets the minimum number of times the HTML tag must exist in the HTML document for the validation rule to succeed.</summary>
      <returns>The minimum number of times the HTML tag must exist in the HTML document.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ValidationRuleRequiredTag.RequiredTagName">
      <summary>Gets or sets the name of the HTML tag that must exist in the HTML document for the validation rule to succeed.</summary>
      <returns>The name of the HTML tag that must exist in the HTML document.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ValidationRuleRequiredTag.Validate(System.Object,Microsoft.VisualStudio.TestTools.WebTesting.ValidationEventArgs)">
      <summary>Validates the existence and number of occurrences of an HTML tag in the response.</summary>
      <param name="sender">The source of the event.</param>
      <param name="e">A <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.ValidationEventArgs" /> that contains the event data. </param>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ValidationRuleResponseTimeGoal">
      <summary>Used to check that the response time for a request is less than or equal to the response time goal specified in the request properties.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ValidationRuleResponseTimeGoal.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ValidationRuleResponseTimeGoal" /> class.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ValidationRuleResponseTimeGoal.Tolerance">
      <summary>Gets or sets the tolerance for response times that are beyond their goal times.</summary>
      <returns>The tolerance value.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ValidationRuleResponseTimeGoal.Validate(System.Object,Microsoft.VisualStudio.TestTools.WebTesting.ValidationEventArgs)">
      <summary>Called with the test case context and the request context for the rule to examine both the request and the response to make sure that the data matches the specified values.</summary>
      <param name="sender">The sender of the event.</param>
      <param name="e">The <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.ConditionalEventArgs" /> that contains the event data.</param>
    </member>
  </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\VisualStudio\VS10RTM\VisualStudioIntegration\Readme.txt ===
Few modifications to original VSSDK 

1. Few XML Schema files from %ProgramFiles%\%Vs2010%\Common7\IDE\Schema folder related to VSSDK are copied in $(EXTPATH)\VisualStudio\VS10RTM\VisualStudioIntegration\Schema folder
The list of files copied...
   VSCT.xsd
   VSIXLanguagePackSchema.xsd
   VSIXManifestSchema.xsd


2. CreatePkgDef.exe in $(EXTPATH)\VisualStudio\VS10RTM\VisualStudioIntegration\tools\bin folder is dependednt on Microsoft.VisualStudio.Shell.Immutable.10.0.dll which is Gac'ed by VS2010. 
    Putting the above assembly from $(EXTPATH)\VisualStudio\VS10RTM\VisualStudioIntegration\Common\Assemblies\v4.0 to $(EXTPATH)\VisualStudio\VS10RTM\VisualStudioIntegration\tools\bin folder so that createPkgDef can find it.
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\VisualStudio\VS10RTM\VisualStudioIntegration\Common\Assemblies\v2.0\Microsoft.VisualStudio.Debugger.Interop.10.0.xml ===
ï»¿<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>Microsoft.VisualStudio.Debugger.Interop.10.0</name>
  </assembly>
  <members>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop._PSI_FLAGS"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop._PSI_FLAGS.PSI_USESHOWWINDOW">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop._PSI_FLAGS.PSI_USESIZE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop._PSI_FLAGS.PSI_USEPOSITION">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop._PSI_FLAGS.PSI_USECOUNTCHARS">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop._PSI_FLAGS.PSI_USEFILLATTRIBUTE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop._PSI_FLAGS.PSI_RUNFULLSCREEN">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop._PSI_FLAGS.PSI_FORCEONFEEDBACK">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop._PSI_FLAGS.PSI_FORCEOFFFEEDBACK">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop._PSI_FLAGS.PSI_USESTDHANDLES">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop._PSI_FLAGS.PSI_USECREATIONFLAGS">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop._PSI_FLAGS.PSI_INHERITHANDLES">
      <summary />
    </member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.CRASHING_PROGRAM_INFO100"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.CRASHING_PROGRAM_INFO100.AttachOptions1"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.CRASHING_PROGRAM_INFO100.AttachOptions2"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.CRASHING_PROGRAM_INFO100.dwProcessId"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.CRASHING_PROGRAM_INFO100.guidEngine"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.CRASHING_PROGRAM_INFO100.JitFlags"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.CRASHING_PROGRAM_INFO100.ProgramId"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.CRASHING_PROGRAM_INFO100.pSetEventCallback"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.CRASHING_PROGRAM_INFO100.RuntimeVersion"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.CRASHING_PROGRAM_INFO100.szExceptionText"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.DISPLAY_NAME_PRIORITY"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.DISPLAY_NAME_PRIORITY.DISPLAY_NAME_PRI_LOWEST_CONFIDENCY">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.DISPLAY_NAME_PRIORITY.DISPLAY_NAME_PRI_LOW_CONFIDENCY">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.DISPLAY_NAME_PRIORITY.DISPLAY_NAM_PRI_DEFAULT">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.DISPLAY_NAME_PRIORITY.DISPLAY_NAME_PRI_NORMAL">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.DISPLAY_NAME_PRIORITY.DISPLAY_NAME_PRI_HIGH">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.DISPLAY_NAME_PRIORITY.DISPLAY_NAME_PRI_HIGHEST">
      <summary />
    </member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.DISPLAY_NAME_PRIORITY100"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.DISPLAY_NAME_PRIORITY100.DISPLAY_NAME_PRI_LOWEST_CONFIDENCY_100">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.DISPLAY_NAME_PRIORITY100.DISPLAY_NAME_PRI_LOW_CONFIDENCY_100">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.DISPLAY_NAME_PRIORITY100.DISPLAY_NAM_PRI_DEFAULT_100">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.DISPLAY_NAME_PRIORITY100.DISPLAY_NAME_PRI_NORMAL_100">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.DISPLAY_NAME_PRIORITY100.DISPLAY_NAME_PRI_HIGH_100">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.DISPLAY_NAME_PRIORITY100.DISPLAY_NAME_PRI_HIGHEST_100">
      <summary />
    </member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.enum_BP_FLAGS90"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_BP_FLAGS90.BP90_FLAG_NONE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_BP_FLAGS90.BP90_FLAG_MAP_DOCPOSITION">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_BP_FLAGS90.BP90_FLAG_DONT_STOP">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_BP_FLAGS90.BP90_FLAG_TRACEPOINT_CONTINUE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_BP_FLAGS90.BP90_FLAG_ALLOW_NON_USER">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_BP_FLAGS90.BP90_FLAG_USE_REQUEST_LANGUAGE">
      <summary />
    </member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.enum_BPREQI_FIELDS90"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_BPREQI_FIELDS90.BPREQI90_BPLOCATION">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_BPREQI_FIELDS90.BPREQI90_LANGUAGE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_BPREQI_FIELDS90.BPREQI90_PROGRAM">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_BPREQI_FIELDS90.BPREQI90_PROGRAMNAME">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_BPREQI_FIELDS90.BPREQI90_THREAD">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_BPREQI_FIELDS90.BPREQI90_THREADNAME">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_BPREQI_FIELDS90.BPREQI90_PASSCOUNT">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_BPREQI_FIELDS90.BPREQI90_CONDITION">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_BPREQI_FIELDS90.BPREQI90_FLAGS">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_BPREQI_FIELDS90.BPREQI90_ALLOLDFIELDS">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_BPREQI_FIELDS90.BPREQI90_VENDOR">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_BPREQI_FIELDS90.BPREQI90_CONSTRAINT">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_BPREQI_FIELDS90.BPREQI90_TRACEPOINT">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_BPREQI_FIELDS90.BPREQI90_MACROTRACEPOINT">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_BPREQI_FIELDS90.BPREQI90_ALLFIELDS">
      <summary />
    </member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.enum_DBG_ATTRIB_FLAGS_100"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_DBG_ATTRIB_FLAGS_100.DBG_ATTRIB_NONE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_DBG_ATTRIB_FLAGS_100.DBG_ATTRIB_ALL">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_DBG_ATTRIB_FLAGS_100.DBG_ATTRIB_OBJ_IS_EXPANDABLE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_DBG_ATTRIB_FLAGS_100.DBG_ATTRIB_OBJ_HAS_ID">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_DBG_ATTRIB_FLAGS_100.DBG_ATTRIB_OBJ_CAN_HAVE_ID">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_DBG_ATTRIB_FLAGS_100.DBG_ATTRIB_VALUE_READONLY">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_DBG_ATTRIB_FLAGS_100.DBG_ATTRIB_VALUE_ERROR">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_DBG_ATTRIB_FLAGS_100.DBG_ATTRIB_VALUE_SIDE_EFFECT">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_DBG_ATTRIB_FLAGS_100.DBG_ATTRIB_OVERLOADED_CONTAINER">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_DBG_ATTRIB_FLAGS_100.DBG_ATTRIB_VALUE_BOOLEAN">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_DBG_ATTRIB_FLAGS_100.DBG_ATTRIB_VALUE_BOOLEAN_TRUE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_DBG_ATTRIB_FLAGS_100.DBG_ATTRIB_VALUE_INVALID">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_DBG_ATTRIB_FLAGS_100.DBG_ATTRIB_VALUE_NAT">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_DBG_ATTRIB_FLAGS_100.DBG_ATTRIB_VALUE_AUTOEXPANDED">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_DBG_ATTRIB_FLAGS_100.DBG_ATTRIB_VALUE_TIMEOUT">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_DBG_ATTRIB_FLAGS_100.DBG_ATTRIB_VALUE_RAW_STRING">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_DBG_ATTRIB_FLAGS_100.DBG_ATTRIB_VALUE_CUSTOM_VIEWER">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_DBG_ATTRIB_FLAGS_100.DBG_ATTRIB_ACCESS_NONE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_DBG_ATTRIB_FLAGS_100.DBG_ATTRIB_ACCESS_PUBLIC">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_DBG_ATTRIB_FLAGS_100.DBG_ATTRIB_ACCESS_PRIVATE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_DBG_ATTRIB_FLAGS_100.DBG_ATTRIB_ACCESS_PROTECTED">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_DBG_ATTRIB_FLAGS_100.DBG_ATTRIB_ACCESS_FINAL">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_DBG_ATTRIB_FLAGS_100.DBG_ATTRIB_ACCESS_ALL">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_DBG_ATTRIB_FLAGS_100.DBG_ATTRIB_STORAGE_NONE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_DBG_ATTRIB_FLAGS_100.DBG_ATTRIB_STORAGE_GLOBAL">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_DBG_ATTRIB_FLAGS_100.DBG_ATTRIB_STORAGE_STATIC">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_DBG_ATTRIB_FLAGS_100.DBG_ATTRIB_STORAGE_REGISTER">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_DBG_ATTRIB_FLAGS_100.DBG_ATTRIB_STORAGE_ALL">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_DBG_ATTRIB_FLAGS_100.DBG_ATTRIB_TYPE_NONE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_DBG_ATTRIB_FLAGS_100.DBG_ATTRIB_TYPE_VIRTUAL">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_DBG_ATTRIB_FLAGS_100.DBG_ATTRIB_TYPE_CONSTANT">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_DBG_ATTRIB_FLAGS_100.DBG_ATTRIB_TYPE_SYNCHRONIZED">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_DBG_ATTRIB_FLAGS_100.DBG_ATTRIB_TYPE_VOLATILE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_DBG_ATTRIB_FLAGS_100.DBG_ATTRIB_TYPE_ALL">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_DBG_ATTRIB_FLAGS_100.DBG_ATTRIB_DATA">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_DBG_ATTRIB_FLAGS_100.DBG_ATTRIB_METHOD">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_DBG_ATTRIB_FLAGS_100.DBG_ATTRIB_PROPERTY">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_DBG_ATTRIB_FLAGS_100.DBG_ATTRIB_CLASS">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_DBG_ATTRIB_FLAGS_100.DBG_ATTRIB_BASECLASS">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_DBG_ATTRIB_FLAGS_100.DBG_ATTRIB_INTERFACE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_DBG_ATTRIB_FLAGS_100.DBG_ATTRIB_INNERCLASS">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_DBG_ATTRIB_FLAGS_100.DBG_ATTRIB_MOSTDERIVEDCLASS">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_DBG_ATTRIB_FLAGS_100.DBG_ATTRIB_CHILD_ALL">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_DBG_ATTRIB_FLAGS_100.DBG_ATTRIB_MULTI_CUSTOM_VIEWERS">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_DBG_ATTRIB_FLAGS_100.DBG_ATTRIB_EVENT">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_DBG_ATTRIB_FLAGS_100.DBG_ATTRIB_VALUE_ERROR_THREAD_SLIP_REQUIRED">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_DBG_ATTRIB_FLAGS_100.DBG_ATTRIB_VALUE_ILINTERPRETER">
      <summary />
    </member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.enum_DEBUGPROP_INFO_FLAGS100"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_DEBUGPROP_INFO_FLAGS100.DEBUGPROP100_INFO_FULLNAME">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_DEBUGPROP_INFO_FLAGS100.DEBUGPROP100_INFO_NAME">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_DEBUGPROP_INFO_FLAGS100.DEBUGPROP100_INFO_TYPE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_DEBUGPROP_INFO_FLAGS100.DEBUGPROP100_INFO_VALUE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_DEBUGPROP_INFO_FLAGS100.DEBUGPROP100_INFO_ATTRIB">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_DEBUGPROP_INFO_FLAGS100.DEBUGPROP100_INFO_PROP">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_DEBUGPROP_INFO_FLAGS100.DEBUGPROP100_INFO_VALUE_AUTOEXPAND">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_DEBUGPROP_INFO_FLAGS100.DEBUGPROP100_INFO_NOFUNCEVAL">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_DEBUGPROP_INFO_FLAGS100.DEBUGPROP100_INFO_VALUE_RAW">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_DEBUGPROP_INFO_FLAGS100.DEBUGPROP100_INFO_VALUE_NO_TOSTRING">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_DEBUGPROP_INFO_FLAGS100.DEBUGPROP100_INFO_NO_NONPUBLIC_MEMBERS">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_DEBUGPROP_INFO_FLAGS100.DEBUGPROP100_INFO_NONE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_DEBUGPROP_INFO_FLAGS100.DEBUGPROP100_INFO_STANDARD">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_DEBUGPROP_INFO_FLAGS100.DEBUGPROP100_INFO_ALL">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_DEBUGPROP_INFO_FLAGS100.DEBUGPROP100_INFO_NOSIDEEFFECTS">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_DEBUGPROP_INFO_FLAGS100.DEBUGPROP100_INFO_NO_IL_INTERPRETER">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_DEBUGPROP_INFO_FLAGS100.DEBUGPROP100_INFO_ALLOW_FUNC_EVALS_EVEN_IF_NO_SIDE_EFFECTS">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_DEBUGPROP_INFO_FLAGS100.DEBUGPROP100_INFO_ALLOW_THREADSLIPPING">
      <summary />
    </member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.enum_DEBUGPROP_INFO_FLAGS90"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_DEBUGPROP_INFO_FLAGS90.DEBUGPROP90_INFO_FULLNAME">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_DEBUGPROP_INFO_FLAGS90.DEBUGPROP90_INFO_NAME">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_DEBUGPROP_INFO_FLAGS90.DEBUGPROP90_INFO_TYPE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_DEBUGPROP_INFO_FLAGS90.DEBUGPROP90_INFO_VALUE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_DEBUGPROP_INFO_FLAGS90.DEBUGPROP90_INFO_ATTRIB">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_DEBUGPROP_INFO_FLAGS90.DEBUGPROP90_INFO_PROP">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_DEBUGPROP_INFO_FLAGS90.DEBUGPROP90_INFO_VALUE_AUTOEXPAND">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_DEBUGPROP_INFO_FLAGS90.DEBUGPROP90_INFO_NOFUNCEVAL">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_DEBUGPROP_INFO_FLAGS90.DEBUGPROP90_INFO_VALUE_RAW">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_DEBUGPROP_INFO_FLAGS90.DEBUGPROP90_INFO_VALUE_NO_TOSTRING">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_DEBUGPROP_INFO_FLAGS90.DEBUGPROP90_INFO_NO_NONPUBLIC_MEMBERS">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_DEBUGPROP_INFO_FLAGS90.DEBUGPROP90_INFO_NONE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_DEBUGPROP_INFO_FLAGS90.DEBUGPROP90_INFO_STANDARD">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_DEBUGPROP_INFO_FLAGS90.DEBUGPROP90_INFO_ALL">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_DEBUGPROP_INFO_FLAGS90.DEBUGPROP90_INFO_NOSIDEEFFECTS">
      <summary />
    </member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.enum_DISPLAY_NAME_PRIORITY"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_DISPLAY_NAME_PRIORITY.DISPLAY_NAME_PRI_LOWEST_CONFIDENCY">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_DISPLAY_NAME_PRIORITY.DISPLAY_NAME_PRI_LOW_CONFIDENCY">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_DISPLAY_NAME_PRIORITY.DISPLAY_NAM_PRI_DEFAULT">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_DISPLAY_NAME_PRIORITY.DISPLAY_NAME_PRI_NORMAL">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_DISPLAY_NAME_PRIORITY.DISPLAY_NAME_PRI_HIGH">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_DISPLAY_NAME_PRIORITY.DISPLAY_NAME_PRI_HIGHEST">
      <summary />
    </member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.enum_DISPLAY_NAME_PRIORITY100"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_DISPLAY_NAME_PRIORITY100.DISPLAY_NAME_PRI_LOWEST_CONFIDENCY_100">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_DISPLAY_NAME_PRIORITY100.DISPLAY_NAME_PRI_LOW_CONFIDENCY_100">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_DISPLAY_NAME_PRIORITY100.DISPLAY_NAM_PRI_DEFAULT_100">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_DISPLAY_NAME_PRIORITY100.DISPLAY_NAME_PRI_NORMAL_100">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_DISPLAY_NAME_PRIORITY100.DISPLAY_NAME_PRI_HIGH_100">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_DISPLAY_NAME_PRIORITY100.DISPLAY_NAME_PRI_HIGHEST_100">
      <summary />
    </member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.enum_ENUMERATED_PROCESS_FLAGS90"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_ENUMERATED_PROCESS_FLAGS90.EPFLAG90_SHOW_SECURITY_WARNING">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_ENUMERATED_PROCESS_FLAGS90.EPFLAG90_SYSTEM_PROCESS">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_ENUMERATED_PROCESS_FLAGS90.EPFLAG90_INTEGRITY_LEVEL_MASK">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_ENUMERATED_PROCESS_FLAGS90.EPFLAG90_INTEGRITY_LEVEL_NONE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_ENUMERATED_PROCESS_FLAGS90.EPFLAG90_INTEGRITY_LEVEL_UNTRUSTED">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_ENUMERATED_PROCESS_FLAGS90.EPFLAG90_INTEGRITY_LEVEL_LOW">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_ENUMERATED_PROCESS_FLAGS90.EPFLAG90_INTEGRITY_LEVEL_MEDIUM">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_ENUMERATED_PROCESS_FLAGS90.EPFLAG90_INTEGRITY_LEVEL_HIGH">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_ENUMERATED_PROCESS_FLAGS90.EPFLAG90_INTEGRITY_LEVEL_SYSTEM">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_ENUMERATED_PROCESS_FLAGS90.EPFLAG90_INTEGRITY_LEVEL_PROTECTED">
      <summary />
    </member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.enum_EVALFLAGS100"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_EVALFLAGS100.EVAL100_RETURNVALUE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_EVALFLAGS100.EVAL100_NOSIDEEFFECTS">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_EVALFLAGS100.EVAL100_ALLOWBPS">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_EVALFLAGS100.EVAL100_ALLOWERRORREPORT">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_EVALFLAGS100.EVAL100_FUNCTION_AS_ADDRESS">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_EVALFLAGS100.EVAL100_NOFUNCEVAL">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_EVALFLAGS100.EVAL100_NOEVENTS">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_EVALFLAGS100.EVAL100_DESIGN_TIME_EXPR_EVAL">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_EVALFLAGS100.EVAL100_ALLOW_IMPLICIT_VARS">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_EVALFLAGS100.EVAL100_FORCE_EVALUATION_NOW">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_EVALFLAGS100.EVAL100_NO_IL_INTERPRETER">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_EVALFLAGS100.EVAL100_ALLOW_FUNC_EVALS_EVEN_IF_NO_SIDE_EFFECTS">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_EVALFLAGS100.EVAL100_ALLOW_THREADSLIPPING">
      <summary />
    </member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.enum_EVALFLAGS90"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_EVALFLAGS90.EVAL90_RETURNVALUE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_EVALFLAGS90.EVAL90_NOSIDEEFFECTS">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_EVALFLAGS90.EVAL90_ALLOWBPS">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_EVALFLAGS90.EVAL90_ALLOWERRORREPORT">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_EVALFLAGS90.EVAL90_FUNCTION_AS_ADDRESS">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_EVALFLAGS90.EVAL90_NOFUNCEVAL">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_EVALFLAGS90.EVAL90_NOEVENTS">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_EVALFLAGS90.EVAL90_DESIGN_TIME_EXPR_EVAL">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_EVALFLAGS90.EVAL90_ALLOW_IMPLICIT_VARS">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_EVALFLAGS90.EVAL90_FORCE_EVALUATION_NOW">
      <summary />
    </member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.enum_FRAMEINFO_FLAGS_VALUES100"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_FRAMEINFO_FLAGS_VALUES100.FIFV_MAXFRAMES_EXCEEDED">
      <summary />
    </member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.enum_JIT_FLAGS100"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_JIT_FLAGS100.JIT_FLAG_SHOW_DEBUGGER_PRESENT_WARNING">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_JIT_FLAGS100.JIT_FLAG_LEGACY_CLR_LOADED_WARNING">
      <summary />
    </member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.enum_LAUNCH_FLAGS90"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_LAUNCH_FLAGS90.LAUNCH_WAIT_FOR_EVENT">
      <summary />
    </member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.enum_MESSAGETYPE90"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_MESSAGETYPE90.MT_REASON_STEP_FILTER">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_MESSAGETYPE90.MT_REASON_JMC_PROMPT">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_MESSAGETYPE90.MT_REASON_STEP_FILTER_PROMPT">
      <summary />
    </member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.enum_MODULE100_FLAGS"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_MODULE100_FLAGS.MODULE100_FLAG_NONE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_MODULE100_FLAGS.MODULE100_FLAG_SYSTEM">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_MODULE100_FLAGS.MODULE100_FLAG_SYMBOLS">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_MODULE100_FLAGS.MODULE100_FLAG_64BIT">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_MODULE100_FLAGS.MODULE100_FLAG_OPTIMIZED">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_MODULE100_FLAGS.MODULE100_FLAG_UNOPTIMIZED">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_MODULE100_FLAGS.MODULE100_FLAG_ENGINEWILLLOADSYMS">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_MODULE100_FLAGS.MODULE100_FLAG_SYMBOLSUNAVAILABLE">
      <summary />
    </member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.enum_STEPSTATUS"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_STEPSTATUS.STEPSTATUS_UNKNOWN">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_STEPSTATUS.STEPSTATUS_IN">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_STEPSTATUS.STEPSTATUS_NORMAL">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_STEPSTATUS.STEPSTATUS_OUT">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_STEPSTATUS.STEPSTATUS_THREAD_EXIT">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_STEPSTATUS.STEPSTATUS_CUSTOM">
      <summary />
    </member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.enum_THREADPROPERTY_FIELDS100"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_THREADPROPERTY_FIELDS100.TPF100_ID">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_THREADPROPERTY_FIELDS100.TPF100_SUSPENDCOUNT">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_THREADPROPERTY_FIELDS100.TPF100_STATE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_THREADPROPERTY_FIELDS100.TPF100_PRIORITY">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_THREADPROPERTY_FIELDS100.TPF100_NAME">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_THREADPROPERTY_FIELDS100.TPF100_LOCATION">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_THREADPROPERTY_FIELDS100.TPF100_ALLFIELDS">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_THREADPROPERTY_FIELDS100.TPF100_DISPLAY_NAME">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_THREADPROPERTY_FIELDS100.TPF100_DISPLAY_NAME_PRIORITY">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_THREADPROPERTY_FIELDS100.TPF100_CATEGORY">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_THREADPROPERTY_FIELDS100.TPF100_AFFINITY">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_THREADPROPERTY_FIELDS100.TPF100_PRIORITY_ID">
      <summary />
    </member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.enum_THREADPROPERTY_FIELDS90"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_THREADPROPERTY_FIELDS90.TPF90_ID">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_THREADPROPERTY_FIELDS90.TPF90_SUSPENDCOUNT">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_THREADPROPERTY_FIELDS90.TPF90_STATE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_THREADPROPERTY_FIELDS90.TPF90_PRIORITY">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_THREADPROPERTY_FIELDS90.TPF90_NAME">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_THREADPROPERTY_FIELDS90.TPF90_LOCATION">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_THREADPROPERTY_FIELDS90.TPF90_ALLFIELDS">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_THREADPROPERTY_FIELDS90.TPF90_DISPLAY_NAME">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_THREADPROPERTY_FIELDS90.TPF90_DISPLAY_NAME_PRIORITY">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_THREADPROPERTY_FIELDS90.TPF90_CATEGORY">
      <summary />
    </member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.IDebugBinderDirect100"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugBinderDirect100.GetErrorMessage(System.Int32,System.String@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugBinderDirect100.IsDump(System.Int32@)"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.IDebugCodeContext100"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugCodeContext100.GetProgram(Microsoft.VisualStudio.Debugger.Interop.IDebugProgram2@)"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.IDebugCodePath90"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugCodePath90.GetName(System.String@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugCodePath90.GetStepper(Microsoft.VisualStudio.Debugger.Interop.IDebugStepper90@)"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.IDebugCoreServer90"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugCoreServer90.CreateManagedInstanceInServer(System.String,System.String,System.UInt16,System.Guid@,System.IntPtr@)"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.IDebugCurrentThreadChangedEvent100"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.IDebugDumpModule100"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugDumpModule100.IsBinaryLoaded(System.Int32@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugDumpModule100.LoadBinary(Microsoft.VisualStudio.Debugger.Interop.IDebugDumpModule100@)"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.IDebugEngineLaunch100"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugEngineLaunch100.LaunchSuspended(System.String,Microsoft.VisualStudio.Debugger.Interop.IDebugPort2,System.String,System.String,System.String,System.String,System.String,System.UInt32,Microsoft.VisualStudio.Debugger.Interop.PROCESS_STARTUP_INFO[],Microsoft.VisualStudio.Debugger.Interop.IDebugEventCallback2,Microsoft.VisualStudio.Debugger.Interop.IDebugProcess2@)"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.IDebugEngineStepFilterManager90"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugEngineStepFilterManager90.ReceiveStepFilterSettings(System.String)"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.IDebugExpressionEvaluator100"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugExpressionEvaluator100.NotifyFuncEval"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugExpressionEvaluator100.SetAttachedCLRMajorMinorVersion(System.String)"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.IDebugJIT100"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugJIT100.JITDebug(Microsoft.VisualStudio.Debugger.Interop.CRASHING_PROGRAM_INFO100)"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.IDebugModuleReloadOperationCompleteEvent100"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.IDebugObject90"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugObject90.CreateStrongAlias(System.Guid@,System.IntPtr@)"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.IDebugProcessContinueEvent100"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugProcessContinueEvent100.GetProcess(Microsoft.VisualStudio.Debugger.Interop.IDebugProcess2@)"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.IDebugProcessEnhancedStep90"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugProcessEnhancedStep90.Step(Microsoft.VisualStudio.Debugger.Interop.IDebugThread2,Microsoft.VisualStudio.Debugger.Interop.IDebugStepper90)"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.IDebugProcessJITInfo100"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugProcessJITInfo100.GetAttachOptions(System.Guid@,System.Object@,System.Object@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugProcessJITInfo100.GetJITCallback(System.Guid@,Microsoft.VisualStudio.Debugger.Interop.IDebugSetJITEventCallback2@)"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.IDebugProgramEnhancedStep90"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugProgramEnhancedStep90.EnumCodePaths(Microsoft.VisualStudio.Debugger.Interop.IDebugThread2,Microsoft.VisualStudio.Debugger.Interop.IDebugCodeContext2,System.UInt32,Microsoft.VisualStudio.Debugger.Interop.IEnumDebugCodePaths90@)"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.IDebugStepCompleteEvent90"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugStepCompleteEvent90.EnumBreakpoints(Microsoft.VisualStudio.Debugger.Interop.IEnumDebugBoundBreakpoints2@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugStepCompleteEvent90.GetStepStatus(System.UInt32@)"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.IDebugStepper90"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugStepper90.GetStepKind(System.UInt32@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugStepper90.Step(Microsoft.VisualStudio.Debugger.Interop.IDebugProgram2,Microsoft.VisualStudio.Debugger.Interop.IDebugThread2)"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.IDebugSymbolSettings100"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugSymbolSettings100.SetSymbolLoadState(System.Int32,System.Int32,System.String,System.String)"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.IDebugThread100"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugThread100.CanDoFuncEval"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugThread100.GetFlags(System.UInt32@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugThread100.GetThreadDisplayName(System.String@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugThread100.GetThreadProperties100(System.UInt32,Microsoft.VisualStudio.Debugger.Interop.THREADPROPERTIES100[])"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugThread100.SetFlags(System.UInt32)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugThread100.SetThreadDisplayName(System.String)"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.IDebugThread90"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugThread90.GetThreadProperties90(System.UInt32,Microsoft.VisualStudio.Debugger.Interop.THREADPROPERTIES90[])"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.IDebugThreadDisplayNameChangeEvent100"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugThreadDisplayNameChangeEvent100.GetThread(Microsoft.VisualStudio.Debugger.Interop.IDebugThread100@)"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.IDebugThreadFlagChangeEvent100"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugThreadFlagChangeEvent100.GetThread(Microsoft.VisualStudio.Debugger.Interop.IDebugThread100@)"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.IDebugThreadSuspendChangeEvent100"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugThreadSuspendChangeEvent100.GetThread(Microsoft.VisualStudio.Debugger.Interop.IDebugThread100@)"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.IDebugVirtualBaseClass"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugVirtualBaseClass.GetVirtualBaseInfo(System.Int32@,System.UInt32@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugVirtualBaseClass.IsVirtualBaseClass(System.Int32@)"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.IEnumDebugCodePaths90"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IEnumDebugCodePaths90.Clone(Microsoft.VisualStudio.Debugger.Interop.IEnumDebugCodePaths90@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IEnumDebugCodePaths90.GetCount(System.UInt32@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IEnumDebugCodePaths90.Next(System.UInt32,Microsoft.VisualStudio.Debugger.Interop.IDebugCodePath90[],System.UInt32@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IEnumDebugCodePaths90.Reset"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IEnumDebugCodePaths90.Skip(System.UInt32)"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.IJITDebuggingHost100"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IJITDebuggingHost100.JITAsLoggedInUser(Microsoft.VisualStudio.Debugger.Interop.CRASHING_PROGRAM_INFO100)"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.PROCESS_STARTUP_INFO"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.PROCESS_STARTUP_INFO.dwCreationFlags"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.PROCESS_STARTUP_INFO.dwFillAttribute"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.PROCESS_STARTUP_INFO.dwX"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.PROCESS_STARTUP_INFO.dwXCountChars"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.PROCESS_STARTUP_INFO.dwXSize"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.PROCESS_STARTUP_INFO.dwY"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.PROCESS_STARTUP_INFO.dwYCountChars"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.PROCESS_STARTUP_INFO.dwYSize"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.PROCESS_STARTUP_INFO.flags"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.PROCESS_STARTUP_INFO.hStdError"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.PROCESS_STARTUP_INFO.hStdInput"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.PROCESS_STARTUP_INFO.hStdOutput"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.PROCESS_STARTUP_INFO.lpDesktop"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.PROCESS_STARTUP_INFO.lpTitle"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.PROCESS_STARTUP_INFO.wShowWindow"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.THREADFLAG"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.THREADFLAG.THREADFLAG_None">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.THREADFLAG.THREADFLAG_Interesting">
      <summary />
    </member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.THREADPROPERTIES100"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.THREADPROPERTIES100.AffinityMask"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.THREADPROPERTIES100.bstrDisplayName"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.THREADPROPERTIES100.bstrLocation"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.THREADPROPERTIES100.bstrName"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.THREADPROPERTIES100.bstrPriority"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.THREADPROPERTIES100.DisplayNamePriority"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.THREADPROPERTIES100.dwFields"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.THREADPROPERTIES100.dwManagedThreadId"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.THREADPROPERTIES100.dwSuspendCount"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.THREADPROPERTIES100.dwThreadCategory"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.THREADPROPERTIES100.dwThreadId"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.THREADPROPERTIES100.dwThreadState"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.THREADPROPERTIES100.priorityId"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.THREADPROPERTIES90"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.THREADPROPERTIES90.bstrDisplayName"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.THREADPROPERTIES90.bstrLocation"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.THREADPROPERTIES90.bstrName"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.THREADPROPERTIES90.bstrPriority"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.THREADPROPERTIES90.DisplayNamePriority"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.THREADPROPERTIES90.dwFields"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.THREADPROPERTIES90.dwSuspendCount"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.THREADPROPERTIES90.dwThreadCategory"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.THREADPROPERTIES90.dwThreadId"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.THREADPROPERTIES90.dwThreadState"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.VsDebugPresentationExtension.EngineProvider">
      <summary>Class used to provide a debugger engine.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Debugger.VsDebugPresentationExtension.EngineProvider.#ctor(System.Guid,System.String)">
      <summary>Constructor for <see cref="T:Microsoft.VisualStudio.Debugger.VsDebugPresentationExtension.EngineProvider" />.</summary>
      <param name="engineGuid">A GUID that uniquely identifies a debugger engine.</param>
      <param name="engineName">The name of the debugger engine.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.Debugger.VsDebugPresentationExtension.EngineProvider.EngineGuid">
      <summary>Gets a GUID that uniquely identifies the debug engine from this provider.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Debugger.VsDebugPresentationExtension.EngineProvider.EngineName">
      <summary>Gets the name of the debugger engine from this provider.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Debugger.VsDebugPresentationExtension.IDumpExtension">
      <summary>Extends the Dump Summary Page to enable additional debug engines to be used with the dump file.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Debugger.VsDebugPresentationExtension.IDumpExtension.Engines">
      <summary>Gets a list of customer debugger engines against which a dump file can be launched.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Debugger.VsDebugPresentationExtension.IDumpExtension.SupportDumpFileFormat(System.String)">
      <summary>Tests whether or not the specified dump file is support by the current list of debugger engines.</summary>
      <returns>true if the debugger engines support debugging <paramref name="fileName" />. </returns>
      <param name="fileName">A dump file.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Debugger.VsDebugPresentationExtension.IExeProjectExtension">
      <summary>Extends the .exe project system to make additional debug engines and port suppliers available.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Debugger.VsDebugPresentationExtension.IExeProjectExtension.Engines">
      <summary>Gets a list of debugger engines an executable can be launched against.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Debugger.VsDebugPresentationExtension.IExeProjectExtension.PortSuppliers">
      <summary>Gets a list of available port suppliers against with an executable can be launched. </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Debugger.VsDebugPresentationExtension.IExeProjectExtension.RemoteMachineIsPortName(System.Guid)">
      <summary>Determines whether the bstrPortName member from the VsDebugTargetInfo2 struct should be populated with the remote machine name.</summary>
      <param name="portSupplierGuid">A GUID that uniquely identifies the port.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Debugger.VsDebugPresentationExtension.PortSupplierProvider"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.VsDebugPresentationExtension.PortSupplierProvider.#ctor(System.Guid,System.String)">
      <param name="portSupplierGuid">A GUID that identifies the port supplier</param>
      <param name="portSupplierName">The name of the port supplier.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.Debugger.VsDebugPresentationExtension.PortSupplierProvider.PortSupplierGuid">
      <summary>Gets a unique identifier for the port supplier.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.Debugger.VsDebugPresentationExtension.PortSupplierProvider.PortSupplierName">
      <summary>Gets the name of the port supplier.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Debugger.VsDebugPresentationExtension.Internal.IDataTip"></member>
    <member name="P:Microsoft.VisualStudio.Debugger.VsDebugPresentationExtension.Internal.IDataTip.Identity"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.VsDebugPresentationExtension.Internal.IDataTipListener"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.VsDebugPresentationExtension.Internal.IDataTipListener.DecorateTip(Microsoft.VisualStudio.Debugger.VsDebugPresentationExtension.Internal.IDataTip,System.Windows.FrameworkElement)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.VsDebugPresentationExtension.Internal.IDataTipListener.DecorateToolbar(Microsoft.VisualStudio.Debugger.VsDebugPresentationExtension.Internal.IDataTip,System.Windows.FrameworkElement)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.VsDebugPresentationExtension.Internal.IDataTipListener.LoadFromStorage(System.Collections.Generic.IDictionary{System.String,System.String})"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.VsDebugPresentationExtension.Internal.IDataTipListener.ModifyToolbarButtons(Microsoft.VisualStudio.Debugger.VsDebugPresentationExtension.Internal.IDataTip,System.Windows.Controls.Panel)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.VsDebugPresentationExtension.Internal.IDataTipListener.SaveToStorage(System.Collections.Generic.IDictionary{System.String,System.String})"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.VsDebugPresentationExtension.Internal.IDataTipListenerMetaData"></member>
    <member name="P:Microsoft.VisualStudio.Debugger.VsDebugPresentationExtension.Internal.IDataTipListenerMetaData.Name"></member>
  </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\VisualStudio\VS10RTM\VisualStudioIntegration\Common\Assemblies\v2.0\Microsoft.VisualStudio.ManagedInterfaces.9.0.xml ===
ï»¿<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>Microsoft.VisualStudio.ManagedInterfaces.9.0</name>
  </assembly>
  <members>
    <member name="T:Microsoft.VisualStudio.ManagedInterfaces.Publish.IFileAssociation">
      <summary>Represents an association between a file type and a specific program.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.ManagedInterfaces.Publish.IFileAssociation.DefaultIcon">
      <summary>Gets or sets the default icon that is associated with files of this type.</summary>
      <returns>The default icon that is associated with files of this type.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.ManagedInterfaces.Publish.IFileAssociation.Description">
      <summary>Gets or sets the description of the program that is used to open files of this type.</summary>
      <returns>The description of the program that is used to open files of this type.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.ManagedInterfaces.Publish.IFileAssociation.Extension">
      <summary>Gets the file name extension for the file type.</summary>
      <returns>The file name extension for the file type.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.ManagedInterfaces.Publish.IFileAssociation.Progid">
      <summary>Gets or sets the ProgID that identifies the program that is used to open files of this type.</summary>
      <returns>The ProgID that identifies the program that is used to open files of this type.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.ManagedInterfaces.Publish.IFileAssociationCollection">
      <summary>Represents a collection of file type associations.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.ManagedInterfaces.Publish.IFileAssociationCollection.Add(System.String,System.String,System.String,System.String)">
      <summary>Creates a file association and adds it to the collection.</summary>
      <param name="extension">The file name extension for the file type.</param>
      <param name="defaultIcon">The default icon that is associated with files of this type.</param>
      <param name="description">The description of the program used to open files of this type.</param>
      <param name="progid">The ProgID that identifies the program used to open files of this type.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="extension" /> is null or an invalid file name extension.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.ManagedInterfaces.Publish.IFileAssociationCollection.Clear">
      <summary>Removes all items from the collection.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.ManagedInterfaces.Publish.IFileAssociationCollection.GetFileAssociations">
      <summary>Returns the items in the collection as an array.</summary>
      <returns>The array of file associations.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.ManagedInterfaces.Publish.IFileAssociationCollection.Item(System.Object)">
      <summary>Gets the file association for a specified file name extension.</summary>
      <returns>The file association for the file name extension; or null if the file name extension is not found.</returns>
      <param name="key">The file name extension.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.ManagedInterfaces.Publish.IFileAssociationCollection.Remove(System.String)">
      <summary>Removes a file association from the collection.</summary>
      <param name="extension">The file name extension for the file type to remove.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="extension" /> is null.</exception>
    </member>
    <member name="T:Microsoft.VisualStudio.ManagedInterfaces.Publish.IPublishFile2">
      <summary>Defines the ClickOnce properties of one file in a deployment on computers that have Visual Studio 2008 Service Pack 1 or later versions.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.ManagedInterfaces.Publish.IPublishFile2.Group">
      <summary>Gets or sets the download group for this file.</summary>
      <returns>The download group for this file.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.ManagedInterfaces.Publish.IPublishFile2.IncludeHash">
      <summary>Gets or sets a value that indicates whether to include the hash of the file in the output manifest.</summary>
      <returns>true if the hash of the file is included in the output manifest; otherwise, false. The default value is true.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.ManagedInterfaces.Publish.IPublishFile2.IsAssembly">
      <summary>Gets a value that indicates whether the file is an assembly.</summary>
      <returns>true if the file is an assembly; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.ManagedInterfaces.Publish.IPublishFile2.IsDataFile">
      <summary>Gets a value that indicates whether the file is a data file.</summary>
      <returns>true if the file is a data file; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.ManagedInterfaces.Publish.IPublishFile2.IsOrphaned">
      <summary>Gets a value that indicates whether the file cannot be mapped to a file in the project.</summary>
      <returns>true if the file cannot be mapped to a file in the project; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.ManagedInterfaces.Publish.IPublishFile2.IsPrerequisite">
      <summary>Gets a value that indicates whether the file is a prerequisite for the deployment.</summary>
      <returns>true if the file is a prerequisite for the deployment; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.ManagedInterfaces.Publish.IPublishFile2.IsPublished">
      <summary>Gets a value that indicates whether the file will be deployed.</summary>
      <returns>true if the file will be deployed; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.ManagedInterfaces.Publish.IPublishFile2.IsReadOnly">
      <summary>Gets a value that indicates whether the file is required.</summary>
      <returns>true if the file is required; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.ManagedInterfaces.Publish.IPublishFile2.Name">
      <summary>Gets the local name of the file.</summary>
      <returns>The local name of the file.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.ManagedInterfaces.Publish.IPublishFile2.PublishStatus">
      <summary>Gets or sets a value that indicates how a file should be treated by the build system.</summary>
      <returns>A value that indicates how a file should be treated by the build system.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.ManagedInterfaces.Publish.IPublishFile2.Reset">
      <summary>Sets file properties to their default values.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.ManagedInterfaces.Publish.IPublishFile2.TargetPath">
      <summary>Gets or sets the target name of the file.</summary>
      <returns>The target name of the file.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.ManagedInterfaces.Publish.IPublishProperties2">
      <summary>Defines the ClickOnce properties of a published application.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.ManagedInterfaces.Publish.IPublishProperties2.ApplicationRevision">
      <summary>Gets or sets the revision number of the application.</summary>
      <returns>The revision number of the application.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.ManagedInterfaces.Publish.IPublishProperties2.ApplicationVersion">
      <summary>Gets or sets the version of the application.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.ManagedInterfaces.Publish.IPublishProperties2.AutorunEnabled">
      <summary>Gets or sets whether to create an autorun.ini file for this application.</summary>
      <returns>true if an autorun.ini file should be created for this application.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.ManagedInterfaces.Publish.IPublishProperties2.BootstrapperComponentsLocation">
      <summary>Gets or sets the way the bootstrapper should download components.</summary>
      <returns>
        <see cref="T:Microsoft.VisualStudio.ManagedInterfaces.Publish.ComponentsLocation" />.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.ManagedInterfaces.Publish.IPublishProperties2.BootstrapperDownloadUrl">
      <summary>Gets or sets the URL from which to download bootstrapper components of this application.</summary>
      <returns>The URL from which to download bootstrapper components of this application.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.ManagedInterfaces.Publish.IPublishProperties2.BootstrapperEnabled">
      <summary>Gets or sets whether the bootstrapper should be generated.</summary>
      <returns>true if the bootstrapper should be generated.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.ManagedInterfaces.Publish.IPublishProperties2.BootstrapperPackages">
      <summary>Gets the collection of bootstrapper packages.</summary>
      <returns>
        <see cref="T:Microsoft.VisualStudio.ManagedInterfaces.Publish.IBootstrapperPackageCollection" />.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.ManagedInterfaces.Publish.IPublishProperties2.CreateWebPageOnPublish">
      <summary>Gets or sets whether to generate a Web page when this application is published.</summary>
      <returns>true if a Web page should be created.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.ManagedInterfaces.Publish.IPublishProperties2.DisallowUrlActivation">
      <summary>Gets or sets whether to run the application after installation</summary>
      <returns>true if the application should be started after installation.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.ManagedInterfaces.Publish.IPublishProperties2.Install">
      <summary>Gets or sets whether to install the application on the user's machine.</summary>
      <returns>true to install the application on the user's machine.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.ManagedInterfaces.Publish.IPublishProperties2.InstallFrom">
      <summary>Gets or sets the type of install location.</summary>
      <returns>
        <see cref="T:Microsoft.VisualStudio.ManagedInterfaces.Publish.InstallFrom" />.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.ManagedInterfaces.Publish.IPublishProperties2.InstallUrl">
      <summary>Gets or sets the URL from which the user should install the application.</summary>
      <returns>The URL from which the user should install the application.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.ManagedInterfaces.Publish.IPublishProperties2.MapFileExtensions">
      <summary>Gets or sets whether to add ".deploy" as an extension to all deployed files.</summary>
      <returns>true to add ".deploy" as an extension to all deployed files.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.ManagedInterfaces.Publish.IPublishProperties2.MinimumRequiredVersion">
      <summary>Gets or sets the minimum version users can install.</summary>
      <returns>The minimum version users can install.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.ManagedInterfaces.Publish.IPublishProperties2.OpenBrowserOnPublish">
      <summary>Gets or sets whether to open the default browser after each publish.</summary>
      <returns>true to open the default browser every time the application is published.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.ManagedInterfaces.Publish.IPublishProperties2.ProductName">
      <summary>Gets and sets the name of the application.</summary>
      <returns>The name of the application that will be displayed on the installation program.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.ManagedInterfaces.Publish.IPublishProperties2.PublisherName">
      <summary>Gets or sets the name of the publisher.</summary>
      <returns>The name of the publisher that will be displayed in the installation program.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.ManagedInterfaces.Publish.IPublishProperties2.PublishFiles">
      <summary>Gets a collection of files that can be deployed.</summary>
      <returns>
        <see cref="T:Microsoft.VisualStudio.ManagedInterfaces.Publish.IPublishFileCollection" />.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.ManagedInterfaces.Publish.IPublishProperties2.PublishUrl">
      <summary>Gets or sets the URL to which the application will be deployed.</summary>
      <returns>The URL to which the application will be deployed.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.ManagedInterfaces.Publish.IPublishProperties2.SupportUrl">
      <summary>Gets or sets the URL to which users can go for support.</summary>
      <returns>The URL to which users can go for support.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.ManagedInterfaces.Publish.IPublishProperties2.TargetCulture">
      <summary>Gets or sets the culture for which the deployment will be generated.</summary>
      <returns>The culture for which the deployment will be generated.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.ManagedInterfaces.Publish.IPublishProperties2.TrustUrlParameters">
      <summary>Gets or sets whether to allow users to pass parameters to the application via the URL.</summary>
      <returns>true to allow users to pass parameters to the application via the URL.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.ManagedInterfaces.Publish.IPublishProperties2.UpdateEnabled">
      <summary>Gets or sets whether users are allowed to update their application.</summary>
      <returns>true if users are allowed to update their application.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.ManagedInterfaces.Publish.IPublishProperties2.UpdateInterval">
      <summary>Gets or sets the number of units for the application to wait before checking for updates.</summary>
      <returns>The number of units for the application to wait before checking for updates.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.ManagedInterfaces.Publish.IPublishProperties2.UpdateIntervalUnits">
      <summary>Gets or sets the units of time for the application to wait before checking for updates.</summary>
      <returns>
        <see cref="T:Microsoft.VisualStudio.ManagedInterfaces.Publish.UpdateIntervalUnits" />.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.ManagedInterfaces.Publish.IPublishProperties2.UpdateMode">
      <summary>Gets or sets the mode by which the application will check for updates.</summary>
      <returns>
        <see cref="T:Microsoft.VisualStudio.ManagedInterfaces.Publish.UpdateMode" />.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.ManagedInterfaces.Publish.IPublishProperties2.UpdatePeriodically">
      <summary>Gets or sets whether the application should check for updates.</summary>
      <returns>true if the application should check for updates.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.ManagedInterfaces.Publish.IPublishProperties2.UpdateRequired">
      <summary>Gets or sets whether update is required.</summary>
      <returns>true if update is required.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.ManagedInterfaces.Publish.IPublishProperties2.UpdateUrl">
      <summary>Gets or sets the URL to use to check for future updates.</summary>
      <returns>The URL to use to check for future updates.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.ManagedInterfaces.Publish.IPublishProperties2.UseApplicationTrust">
      <summary>Gets or sets if manifest trust info as well as publisher and product information is added to the application manifest</summary>
      <returns>true if trust information is added to the manifest.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.ManagedInterfaces.Publish.IPublishProperties2.VerifyUploadedFiles">
      <summary>Gets or sets whether the uploaded files will be validated after publish.</summary>
      <returns>true if uploaded files will be validated after publish.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.ManagedInterfaces.Publish.IPublishProperties2.WebPageFileName">
      <summary>Gets or sets the name of the web page that should be created or opened on publish.</summary>
      <returns>The name of the web page that should be created or opened on publish.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.ManagedInterfaces.Publish.IPublishProperties3">
      <summary>Defines the ClickOnce properties of a published application on computers that have Visual Studio 2008 Service Pack 1 or later versions.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.ManagedInterfaces.Publish.IPublishProperties3.ApplicationRevision">
      <summary>Gets or sets the revision number of the publish version of the application.</summary>
      <returns>The revision number of the publish version of the application.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.ManagedInterfaces.Publish.IPublishProperties3.ApplicationVersion">
      <summary>Gets or sets the publish version of the application.</summary>
      <returns>The publish version of the application.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.ManagedInterfaces.Publish.IPublishProperties3.AutorunEnabled">
      <summary>Gets or sets a value that indicates whether to create an autorun.inf file for this application.</summary>
      <returns>true to create an autorun.inf file for this application; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.ManagedInterfaces.Publish.IPublishProperties3.BootstrapperComponentsLocation">
      <summary>Gets or sets how the bootstrapping application will download components.</summary>
      <returns>One of the <see cref="T:Microsoft.VisualStudio.ManagedInterfaces.Publish.ComponentsLocation" /> values.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.ManagedInterfaces.Publish.IPublishProperties3.BootstrapperDownloadUrl">
      <summary>Gets or sets the uniform resource identifier (URI) from which to download the bootstrapping application components of this application.</summary>
      <returns>The URI from which to download the bootstrapping application components of this application.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.ManagedInterfaces.Publish.IPublishProperties3.BootstrapperEnabled">
      <summary>Gets or sets a value that indicates whether to generate the bootstrapping application.</summary>
      <returns>true to generate the bootstrapping application; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.ManagedInterfaces.Publish.IPublishProperties3.BootstrapperPackages">
      <summary>Gets the collection of packages for the bootstrapping application.</summary>
      <returns>The collection of packages for the bootstrapping application.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.ManagedInterfaces.Publish.IPublishProperties3.CreateDesktopShortcut">
      <summary>Gets or sets a value that indicates whether the installer adds a shortcut to the desktop.</summary>
      <returns>true if the installer adds a shortcut to the desktop; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.ManagedInterfaces.Publish.IPublishProperties3.CreateWebPageOnPublish">
      <summary>Gets or sets a value that indicates whether Visual StudioÂ generates a Web page for the application when the application is published.</summary>
      <returns>true if Visual StudioÂ generates a Web page for the application; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.ManagedInterfaces.Publish.IPublishProperties3.DisallowUrlActivation">
      <summary>Gets or sets a value that indicates whether to prevent an installed application from starting when the deployment uniform resource identifier (URI) is visited.</summary>
      <returns>true to prevent an installed application from starting when the deployment URI is visited; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.ManagedInterfaces.Publish.IPublishProperties3.ErrorReportUrl">
      <summary>Gets or sets the uniform resource identifier (URI) to which the installer will post information if the application installation fails.</summary>
      <returns>The URI to which the installer will post information if the application installation fails.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.ManagedInterfaces.Publish.IPublishProperties3.ExcludeDeploymentUrl">
      <summary>Gets or sets a value that indicates whether a deployment uniform resource identifier (URI) is included in the application manifest.</summary>
      <returns>true if a deployment URI is included in the application manifest; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.ManagedInterfaces.Publish.IPublishProperties3.FileAssociations">
      <summary>Gets the collection of file associations for this application.</summary>
      <returns>The collection of file associations for this application.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.ManagedInterfaces.Publish.IPublishProperties3.Install">
      <summary>Gets or sets a value that indicates whether the installer will install the application. </summary>
      <returns>true if the installer installs the application; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.ManagedInterfaces.Publish.IPublishProperties3.InstallFrom">
      <summary>Gets or sets the kind of location from which the application is installed.</summary>
      <returns>One of the <see cref="T:Microsoft.VisualStudio.ManagedInterfaces.Publish.InstallFrom" /> values.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.ManagedInterfaces.Publish.IPublishProperties3.InstallUrl">
      <summary>Gets or sets the uniform resource identifier (URI) from which the user will install the application.</summary>
      <returns>The URI from which the user will install the application.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.ManagedInterfaces.Publish.IPublishProperties3.MapFileExtensions">
      <summary>Gets or sets a value that indicates whether to add the .deploy file name extension to all deployed files.</summary>
      <returns>true to add the .deploy file name extension to all deployed files; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.ManagedInterfaces.Publish.IPublishProperties3.MinimumRequiredVersion">
      <summary>Gets or sets the minimum required version for this application for this deployment.</summary>
      <returns>The minimum required version for this application for this deployment.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.ManagedInterfaces.Publish.IPublishProperties3.OpenBrowserOnPublish">
      <summary>Gets or sets a value that indicates whether Visual StudioÂ opens the default browser when the application is published.</summary>
      <returns>true if Visual StudioÂ opens the default browser when the application is published; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.ManagedInterfaces.Publish.IPublishProperties3.ProductName">
      <summary>Gets or sets the name of the application.</summary>
      <returns>The name of the application.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.ManagedInterfaces.Publish.IPublishProperties3.PublisherName">
      <summary>Gets or sets the name of the publisher.</summary>
      <returns>The name of the publisher.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.ManagedInterfaces.Publish.IPublishProperties3.PublishFiles">
      <summary>Gets the collection of files in the project.</summary>
      <returns>The collection of files in the project.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.ManagedInterfaces.Publish.IPublishProperties3.PublishUrl">
      <summary>Gets or sets the uniform resource identifier (URI) to which the application is published.</summary>
      <returns>The URI to which the application is published.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.ManagedInterfaces.Publish.IPublishProperties3.SuiteName">
      <summary>Gets or sets the name of the product suite of which the application is a part.</summary>
      <returns>The name of the product suite of which the application is a part.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.ManagedInterfaces.Publish.IPublishProperties3.SupportUrl">
      <summary>Gets or sets the uniform resource identifier (URI) for support for the application.</summary>
      <returns>The URI for support for the application.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.ManagedInterfaces.Publish.IPublishProperties3.TargetCulture">
      <summary>Gets or sets the publish language Visual Studio uses to publish the application.</summary>
      <returns>The publish language of the application.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.ManagedInterfaces.Publish.IPublishProperties3.TrustUrlParameters">
      <summary>Gets or sets a value that indicates whether to allow uniform resource identifier (URI) parameters to be passed to application.</summary>
      <returns>true to allow URI parameters to be passed to application; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.ManagedInterfaces.Publish.IPublishProperties3.UpdateEnabled">
      <summary>Gets or sets a value that indicates whether users can update the application.</summary>
      <returns>true to let users update the application; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.ManagedInterfaces.Publish.IPublishProperties3.UpdateInterval">
      <summary>Gets or sets how long the application waits before it checks for updates.</summary>
      <returns>How long the application waits before it checks for updates, in units defined by the <see cref="P:Microsoft.VisualStudio.ManagedInterfaces.Publish.IPublishProperties3.UpdateIntervalUnits" /> property.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.ManagedInterfaces.Publish.IPublishProperties3.UpdateIntervalUnits">
      <summary>Gets or sets the units of time of the <see cref="P:Microsoft.VisualStudio.ManagedInterfaces.Publish.IPublishProperties3.UpdateInterval" /> property.</summary>
      <returns>One of the <see cref="T:Microsoft.VisualStudio.ManagedInterfaces.Publish.UpdateIntervalUnits" /> values.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.ManagedInterfaces.Publish.IPublishProperties3.UpdateMode">
      <summary>Gets or sets the strategy that the application uses to check for available updates.</summary>
      <returns>One of the <see cref="T:Microsoft.VisualStudio.ManagedInterfaces.Publish.UpdateMode" /> values.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.ManagedInterfaces.Publish.IPublishProperties3.UpdatePeriodically">
      <summary>Gets or sets a value that indicates whether the application checks for updates.</summary>
      <returns>true if the application checks for updates; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.ManagedInterfaces.Publish.IPublishProperties3.UpdateRequired">
      <summary>Gets or sets a value that indicates whether this version represents a required update.</summary>
      <returns>ture if this version represents a required update; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.ManagedInterfaces.Publish.IPublishProperties3.UpdateUrl">
      <summary>Gets or sets the uniform resource identifier (URI) for updates for the application.</summary>
      <returns>The URI for updates for the application.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.ManagedInterfaces.Publish.IPublishProperties3.UseApplicationTrust">
      <summary>Gets or sets a value that indicates whether manifest trust information, in addition to publisher and product information, is added to the application manifest.</summary>
      <returns>true to add manifest trust information to the application manifest; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.ManagedInterfaces.Publish.IPublishProperties3.VerifyUploadedFiles">
      <summary>Gets or sets a value that indicates whether Visual Studio verifies the uploaded files after they are published.</summary>
      <returns>true if Visual Studio verifies the uploaded files after they are published; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.ManagedInterfaces.Publish.IPublishProperties3.WebPageFileName">
      <summary>Gets or sets the name of the Web page that Visual Studio createsÂ when the application is published.</summary>
      <returns>The name of the Web page that Visual Studio creates when the application is published.</returns>
    </member>
  </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\VisualStudio\VS10RTM\PublicAssemblies\Microsoft.VisualStudio.QualityTools.UnitTestFramework.xml ===
ï»¿<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>Microsoft.VisualStudio.QualityTools.UnitTestFramework</name>
  </assembly>
  <members>
    <member name="T:Microsoft.VisualStudio.TestTools.UnitTesting.AfterAssemblyCleanupEventArgs">
      <summary>Provides data for the <see cref="E:Microsoft.VisualStudio.TestTools.UnitTesting.TestExecution.AfterAssemblyCleanup" /> event.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.UnitTesting.AfterAssemblyInitializeEventArgs">
      <summary>Provides data for the <see cref="E:Microsoft.VisualStudio.TestTools.UnitTesting.TestExecution.AfterAssemblyInitialize" /> event.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.AfterAssemblyInitializeEventArgs.IsAssemblyInitializeFailed">
      <summary>Gets the flag that indicates whether the AssemblyInitialize call provided by the user failed because of an exception.</summary>
      <returns>true if the AssemblyInitialize call failed; otherwise false.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.UnitTesting.AfterClassCleanupEventArgs">
      <summary>Provides data for the <see cref="E:Microsoft.VisualStudio.TestTools.UnitTesting.TestExecution.AfterClassCleanup" /> event.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.UnitTesting.AfterClassInitializeEventArgs">
      <summary>Provides data for the <see cref="E:Microsoft.VisualStudio.TestTools.UnitTesting.TestExecution.AfterClassInitialize" /> event.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.AfterClassInitializeEventArgs.IsClassInitializeFailed">
      <summary>Gets the flag that indicates whether the ClassInitialize call provided by the user failed because of an exception.</summary>
      <returns>true if the ClassInitialize call failed; otherwise false.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.UnitTesting.AfterTestCleanupEventArgs">
      <summary>Provides data for the <see cref="E:Microsoft.VisualStudio.TestTools.UnitTesting.TestExecution.AfterTestCleanup" /> event.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.UnitTesting.AfterTestInitializeEventArgs">
      <summary>Provides data for the <see cref="E:Microsoft.VisualStudio.TestTools.UnitTesting.TestExecution.AfterTestInitialize" /> event.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.AfterTestInitializeEventArgs.IsTestInitializeFailed">
      <summary>Gets the flag that indicates whether the TestInitialize call provided by the user failed because of an exception. </summary>
      <returns>true if the TestInitialize call failed; otherwise false.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssemblyCleanupAttribute">
      <summary>Identifies a method that contains code to be used after all tests in the assembly have run and to free resources obtained by the assembly. This class cannot be inherited. </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.AssemblyCleanupAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssemblyCleanupAttribute" /> class.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssemblyInitializeAttribute">
      <summary>Identifies a method that contains code to be used before all tests in the assembly have run and to allocate resources obtained by the assembly. This class cannot be inherited.  </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.AssemblyInitializeAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssemblyCleanupAttribute" /> class.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.UnitTesting.Assert">
      <summary>Verifies conditions in unit tests using true/false propositions.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreEqual(System.Double,System.Double,System.Double)">
      <summary>Verifies that two specified doubles are equal, or within the specified accuracy of each other. The assertion fails if they are not within the specified accuracy of each other.</summary>
      <param name="expected">The first double to compare. This is the double the unit test expects.</param>
      <param name="actual">The second double to compare. This is the double the unit test produced.</param>
      <param name="delta">The required accuracy. The assertion will fail only if <paramref name="expected" /> is different from <paramref name="actual" /> by more than <paramref name="delta" />.</param>
      <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
        <paramref name="expected" /> is different from <paramref name="actual" /> by more than <paramref name="delta" />.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreEqual(System.Double,System.Double,System.Double,System.String)">
      <summary>Verifies that two specified doubles are equal, or within the specified accuracy of each other. The assertion fails if they are not within the specified accuracy of each other. Displays a message if the assertion fails.</summary>
      <param name="expected">The first double to compare. This is the double the unit test expects.</param>
      <param name="actual">The second double to compare. This is the double the unit test produced.</param>
      <param name="delta">The required accuracy. The assertion will fail only if <paramref name="expected" /> is different from <paramref name="actual" /> by more than <paramref name="delta" />.</param>
      <param name="message">A message to display if the assertion fails. This message can be seen in the unit test results.</param>
      <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
        <paramref name="expected" /> is different from <paramref name="actual" /> by more than <paramref name="delta" />.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreEqual(System.Double,System.Double,System.Double,System.String,System.Object[])">
      <summary>Verifies that two specified doubles are equal, or within the specified accuracy of each other. The assertion fails if they are not within the specified accuracy of each other. Displays a message if the assertion fails, and applies the specified formatting to it.</summary>
      <param name="expected">The first double to compare. This is the double the unit tests expects.</param>
      <param name="actual">The second double to compare. This is the double the unit test produced.</param>
      <param name="delta">The required accuracy. The assertion will fail only if <paramref name="expected" /> is different from <paramref name="actual" /> by more than <paramref name="delta" />.</param>
      <param name="message">A message to display if the assertion fails. This message can be seen in the unit test results.</param>
      <param name="parameters">An array of parameters to use when formatting <paramref name="message" />.</param>
      <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
        <paramref name="expected" /> is different from <paramref name="actual" /> by more than <paramref name="delta" />.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreEqual(System.Object,System.Object)">
      <summary>Verifies that two specified objects are equal. The assertion fails if the objects are not equal.</summary>
      <param name="expected">The first object to compare. This is the object the unit test expects.</param>
      <param name="actual">The second object to compare. This is the object the unit test produced.</param>
      <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
        <paramref name="expected" /> is not equal to <paramref name="actual" />.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreEqual(System.Object,System.Object,System.String)">
      <summary>Verifies that two specified objects are equal. The assertion fails if the objects are not equal. Displays a message if the assertion fails.</summary>
      <param name="expected">The first object to compare. This is the object the unit test expects.</param>
      <param name="actual">The second object to compare. This is the object the unit test produced.</param>
      <param name="message">A message to display if the assertion fails. This message can be seen in the unit test results.</param>
      <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
        <paramref name="expected" /> is not equal to <paramref name="actual" />.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreEqual(System.Object,System.Object,System.String,System.Object[])">
      <summary>Verifies that two specified objects are equal. The assertion fails if the objects are not equal. Displays a message if the assertion fails, and applies the specified formatting to it.</summary>
      <param name="expected">The first object to compare. This is the object the unit test expects.</param>
      <param name="actual">The second object to compare. This is the object the unit test produced.</param>
      <param name="message">A message to display if the assertion fails. This message can be seen in the unit test results.</param>
      <param name="parameters">An array of parameters to use when formatting <paramref name="message" />.</param>
      <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
        <paramref name="expected" /> is not equal to <paramref name="actual" />.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreEqual(System.Single,System.Single,System.Single)">
      <summary>Verifies that two specified singles are equal, or within the specified accuracy of each other. The assertion fails if they are not within the specified accuracy of each other.</summary>
      <param name="expected">The first single to compare. This is the single the unit test expects.</param>
      <param name="actual">The second single to compare. This is the single the unit test produced.</param>
      <param name="delta">The required accuracy. The assertion will fail only if <paramref name="expected" /> is different from <paramref name="actual" /> by more than <paramref name="delta" />.</param>
      <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
        <paramref name="expected" /> is not equal to <paramref name="actual" />.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreEqual(System.Single,System.Single,System.Single,System.String)">
      <summary>Verifies that two specified singles are equal, or within the specified accuracy of each other. The assertion fails if they are not within the specified accuracy of each other. Displays a message if the assertion fails.</summary>
      <param name="expected">The first single to compare. This is the single the unit test expects.</param>
      <param name="actual">The second single to compare. This is the single the unit test produced.</param>
      <param name="delta">The required accuracy. The assertion will fail only if <paramref name="expected" /> is different from <paramref name="actual" /> by more than <paramref name="delta" />.</param>
      <param name="message">A message to display if the assertion fails. This message can be seen in the unit test results.</param>
      <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
        <paramref name="expected" /> is not equal to <paramref name="actual" />.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreEqual(System.Single,System.Single,System.Single,System.String,System.Object[])">
      <summary>Verifies that two specified singles are equal, or within the specified accuracy of each other. The assertion fails if they are not within the specified accuracy of each other. Displays a message if the assertion fails, and applies the specified formatting to it.</summary>
      <param name="expected">The first single to compare. This is the single the unit test expects.</param>
      <param name="actual">The second single to compare. This is the single the unit test produced.</param>
      <param name="delta">The required accuracy. The assertion will fail only if <paramref name="expected" /> is different from <paramref name="actual" /> by more than <paramref name="delta" />.</param>
      <param name="message">A message to display if the assertion fails. This message can be seen in the unit test results.</param>
      <param name="parameters">An array of parameters to use when formatting <paramref name="message" />.</param>
      <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
        <paramref name="expected" /> is different from <paramref name="actual" /> by more than <paramref name="delta" />.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreEqual(System.String,System.String,System.Boolean)">
      <summary>Verifies that two specified strings are equal, ignoring case or not as specified. The assertion fails if they are not equal.</summary>
      <param name="expected">The first string to compare. This is the string the unit test expects.</param>
      <param name="actual">The second string to compare. This is the string the unit test produced.</param>
      <param name="ignoreCase">A Boolean value that indicates a case-sensitive or insensitive comparison. true indicates a case-insensitive comparison.</param>
      <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
        <paramref name="expected" /> is not equal to <paramref name="actual" />.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreEqual(System.String,System.String,System.Boolean,System.Globalization.CultureInfo)">
      <summary>Verifies that two specified strings are equal, ignoring case or not as specified, and using the culture info specified. The assertion fails if they are not equal.</summary>
      <param name="expected">The first string to compare. This is the string the unit test expects.</param>
      <param name="actual">The second string to compare. This is the string the unit test produced.</param>
      <param name="ignoreCase">A Boolean value that indicates a case-sensitive or insensitive comparison. true indicates a case-insensitive comparison.</param>
      <param name="culture">A <see cref="T:System.Globalization.CultureInfo" /> object that supplies culture-specific comparison information.</param>
      <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
        <paramref name="expected" /> is not equal to <paramref name="actual" />.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreEqual(System.String,System.String,System.Boolean,System.Globalization.CultureInfo,System.String)">
      <summary>Verifies that two specified strings are equal, ignoring case or not as specified, and using the culture info specified. The assertion fails if they are not equal. Displays a message if the assertion fails.</summary>
      <param name="expected">The first string to compare. This is the string the unit test expects.</param>
      <param name="actual">The second string to compare. This is the string the unit test produced.</param>
      <param name="ignoreCase">A Boolean value that indicates a case-sensitive or insensitive comparison. true indicates a case-insensitive comparison.</param>
      <param name="culture">A <see cref="T:System.Globalization.CultureInfo" /> object that supplies culture-specific comparison information.</param>
      <param name="message">A message to display if the assertion fails. This message can be seen in the unit test results.</param>
      <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
        <paramref name="expected" /> is not equal to <paramref name="actual" />.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreEqual(System.String,System.String,System.Boolean,System.Globalization.CultureInfo,System.String,System.Object[])">
      <summary>Verifies that two specified strings are equal, ignoring case or not as specified, and using the culture info specified. The assertion fails if they are not equal. Displays a message if the assertion fails, and applies the specified formatting to it.</summary>
      <param name="expected">The first string to compare. This is the string the unit test expects.</param>
      <param name="actual">The second string to compare. This is the string the unit test produced.</param>
      <param name="ignoreCase">A Boolean value that indicates a case-sensitive or insensitive comparison. true indicates a case-insensitive comparison.</param>
      <param name="culture">A <see cref="T:System.Globalization.CultureInfo" /> object that supplies culture-specific comparison information.</param>
      <param name="message">A message to display if the assertion fails. This message can be seen in the unit test results.</param>
      <param name="parameters">An array of parameters to use when formatting <paramref name="message" />.</param>
      <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
        <paramref name="expected" /> is not equal to <paramref name="actual" />.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreEqual(System.String,System.String,System.Boolean,System.String)">
      <summary>Verifies that two specified strings are equal, ignoring case or not as specified. The assertion fails if they are not equal. Displays a message if the assertion fails.</summary>
      <param name="expected">The first string to compare. This is the string the unit test expects.</param>
      <param name="actual">The second string to compare. This is the string the unit test produced.</param>
      <param name="ignoreCase">A Boolean value that indicates a case-sensitive or insensitive comparison. true indicates a case-insensitive comparison.</param>
      <param name="message">A message to display if the assertion fails. This message can be seen in the unit test results.</param>
      <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
        <paramref name="expected" /> is not equal to <paramref name="actual" />.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreEqual(System.String,System.String,System.Boolean,System.String,System.Object[])">
      <summary>Verifies that two specified strings are equal, ignoring case or not as specified. The assertion fails if they are not equal. Displays a message if the assertion fails, and applies the specified formatting to it.</summary>
      <param name="expected">The first string to compare. This is the string the unit test expects.</param>
      <param name="actual">The second string to compare. This is the string the unit test produced.</param>
      <param name="ignoreCase">A Boolean value that indicates a case-sensitive or insensitive comparison. true indicates a case-insensitive comparison.</param>
      <param name="message">A message to display if the assertion fails. This message can be seen in the unit test results.</param>
      <param name="parameters">An array of parameters to use when formatting <paramref name="message" />.</param>
      <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
        <paramref name="expected" /> is not equal to <paramref name="actual" />.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreEqual``1(``0,``0)">
      <summary>Verifies that two specified generic type data are equal. The assertion fails if they are not equal.</summary>
      <param name="expected">The first generic type data to compare. This is the generic type data the unit test expects.</param>
      <param name="actual">The second generic type data to compare. This is the generic type data the unit test produced.</param>
      <typeparam name="T"></typeparam>
      <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
        <paramref name="expected" /> is not equal to <paramref name="actual" />.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreEqual``1(``0,``0,System.String)">
      <summary>Verifies that two specified generic type data are equal. The assertion fails if they are not equal. Displays a message if the assertion fails.</summary>
      <param name="expected">The first generic type data to compare. This is the generic type data the unit test expects.</param>
      <param name="actual">The second generic type data to compare. This is the generic type data the unit test produced.</param>
      <param name="message">A message to display if the assertion fails. This message can be seen in the unit test results.</param>
      <typeparam name="T"></typeparam>
      <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
        <paramref name="expected" /> is not equal to <paramref name="actual" />.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreEqual``1(``0,``0,System.String,System.Object[])">
      <summary>Verifies that two specified generic type data are equal. The assertion fails if they are not equal. Displays a message if the assertion fails, and applies the specified formatting to it.</summary>
      <param name="expected">The first generic type data to compare. This is the generic type data the unit test expects.</param>
      <param name="actual">The second generic type data to compare. This is the generic type data the unit test produced.</param>
      <param name="message">A message to display if the assertion fails. This message can be seen in the unit test results.</param>
      <param name="parameters">An array of parameters to use when formatting <paramref name="message" />.</param>
      <typeparam name="T"></typeparam>
      <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
        <paramref name="expected" /> is not equal to <paramref name="actual" />.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreNotEqual(System.Double,System.Double,System.Double)">
      <summary>Verifies that two specified doubles are not equal, and not within the specified accuracy of each other. The assertion fails if they are equal or within the specified accuracy of each other.</summary>
      <param name="notExpected">The first double to compare. This is the double the unit test expects not to match <paramref name="actual" />.</param>
      <param name="actual">The second double to compare. This is the double the unit test produced.</param>
      <param name="delta">The required inaccuracy. The assertion fails only if <paramref name="notExpected" /> is equal to <paramref name="actual" /> or different from it by less than <paramref name="delta" />.</param>
      <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
        <paramref name="notExpected" /> is equal to <paramref name="actual" /> or different from it by less than <paramref name="delta" />.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreNotEqual(System.Double,System.Double,System.Double,System.String)">
      <summary>Verifies that two specified doubles are not equal, and not within the specified accuracy of each other. The assertion fails if they are equal or within the specified accuracy of each other. Displays a message if the assertion fails.</summary>
      <param name="notExpected">The first double to compare. This is the double the unit test expects not to match <paramref name="actual" />.</param>
      <param name="actual">The second double to compare. This is the double the unit test produced.</param>
      <param name="delta">The required inaccuracy. The assertion fails only if <paramref name="notExpected" /> is equal to <paramref name="actual" /> or different from it by less than <paramref name="delta" />.</param>
      <param name="message">A message to display if the assertion fails. This message can be seen in the unit test results.</param>
      <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
        <paramref name="notExpected" /> is equal to <paramref name="actual" /> or different from it by less than <paramref name="delta" />.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreNotEqual(System.Double,System.Double,System.Double,System.String,System.Object[])">
      <summary>Verifies that two specified doubles are not equal, and not within the specified accuracy of each other. The assertion fails if they are equal or within the specified accuracy of each other. Displays a message if the assertion fails, and applies the specified formatting to it.</summary>
      <param name="notExpected">The first double to compare. This is the double the unit test expects not to match <paramref name="actual" />.</param>
      <param name="actual">The second double to compare. This is the double the unit test produced.</param>
      <param name="delta">The required inaccuracy. The assertion will fail only if <paramref name="notExpected" /> is equal to <paramref name="actual" /> or different from it by less than <paramref name="delta" />.</param>
      <param name="message">A message to display if the assertion fails. This message can be seen in the unit test results.</param>
      <param name="parameters">An array of parameters to use when formatting <paramref name="message" />.</param>
      <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
        <paramref name="notExpected" /> is equal to <paramref name="actual" /> or different from it by less than <paramref name="delta" />.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreNotEqual(System.Object,System.Object)">
      <summary>Verifies that two specified objects are not equal. The assertion fails if the objects are equal.</summary>
      <param name="notExpected">The first object to compare. This is the object the unit test expects not to match <paramref name="actual" />.</param>
      <param name="actual">The second object to compare. This is the object the unit test produced.</param>
      <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
        <paramref name="notExpected" /> is equal to <paramref name="actual" />.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreNotEqual(System.Object,System.Object,System.String)">
      <summary>Verifies that two specified objects are not equal. The assertion fails if the objects are equal. Displays a message if the assertion fails.</summary>
      <param name="notExpected">The first object to compare. This is the object the unit test expects not to match <paramref name="actual" />.</param>
      <param name="actual">The second object to compare. This is the object the unit test produced.</param>
      <param name="message">A message to display if the assertion fails. This message can be seen in the unit test results.</param>
      <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
        <paramref name="notExpected" /> is equal to <paramref name="actual" />.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreNotEqual(System.Object,System.Object,System.String,System.Object[])">
      <summary>Verifies that two specified objects are not equal. The assertion fails if the objects are equal. Displays a message if the assertion fails, and applies the specified formatting to it.</summary>
      <param name="notExpected">The first object to compare. This is the object the unit test expects not to match <paramref name="actual" />.</param>
      <param name="actual">The second object to compare. This is the object the unit test produced.</param>
      <param name="message">A message to display if the assertion fails. This message can be seen in the unit test results.</param>
      <param name="parameters">An array of parameters to use when formatting <paramref name="message" />.</param>
      <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
        <paramref name="notExpected" /> is equal to <paramref name="actual" />.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreNotEqual(System.Single,System.Single,System.Single)">
      <summary>Verifies that two specified singles are not equal, and not within the specified accuracy of each other. The assertion fails if they are equal or within the specified accuracy of each other.</summary>
      <param name="notExpected">The first single to compare. This is the single the unit test expects.</param>
      <param name="actual">The second single to compare. This is the single the unit test produced.</param>
      <param name="delta">The required inaccuracy. The assertion will fail only if <paramref name="notExpected" /> is equal to <paramref name="actual" /> or different from it by less than <paramref name="delta" />.</param>
      <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
        <paramref name="notExpected" /> is equal to <paramref name="actual" /> or different from it by less than <paramref name="delta" />.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreNotEqual(System.Single,System.Single,System.Single,System.String)">
      <summary>Verifies that two specified singles are not equal, and not within the specified accuracy of each other. The assertion fails if they are equal or within the specified accuracy of each other. Displays a message if the assertion fails.</summary>
      <param name="notExpected">The first single to compare. This is the single the unit test expects.</param>
      <param name="actual">The second single to compare. This is the single the unit test produced.</param>
      <param name="delta">The required inaccuracy. The assertion will fail only if <paramref name="notExpected" /> is equal to <paramref name="actual" /> or different from it by less than <paramref name="delta" />.</param>
      <param name="message">A message to display if the assertion fails. This message can be seen in the unit test results.</param>
      <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
        <paramref name="notExpected" /> is equal to <paramref name="actual" /> or different from it by less than <paramref name="delta" />.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreNotEqual(System.Single,System.Single,System.Single,System.String,System.Object[])">
      <summary>Verifies that two specified singles are not equal, and not within the specified accuracy of each other. The assertion fails if they are equal or within the specified accuracy of each other. Displays a message if the assertion fails, and applies the specified formatting to it.</summary>
      <param name="notExpected">The first single to compare. This is the single the unit test expects not to match <paramref name="actual" />.</param>
      <param name="actual">The second single to compare. This is the single the unit test produced.</param>
      <param name="delta">The required inaccuracy. The assertion will fail only if <paramref name="notExpected" /> is equal to <paramref name="actual" /> or different from it by less than <paramref name="delta" />.</param>
      <param name="message">A message to display if the assertion fails. This message can be seen in the unit test results.</param>
      <param name="parameters">An array of parameters to use when formatting <paramref name="message" />.</param>
      <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
        <paramref name="notExpected" /> is equal to <paramref name="actual" /> or different from it by less than <paramref name="delta" />.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreNotEqual(System.String,System.String,System.Boolean)">
      <summary>Verifies that two specified strings are not equal, ignoring case or not as specified. The assertion fails if they are equal.</summary>
      <param name="notExpected">The first string to compare. This is the string the unit test expects not to match <paramref name="actual" />.</param>
      <param name="actual">The second string to compare. This is the string the unit test produced.</param>
      <param name="ignoreCase">A Boolean value that indicates a case-sensitive or insensitive comparison. true indicates a case-insensitive comparison.</param>
      <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
        <paramref name="notExpected" /> is equal to <paramref name="actual" />.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreNotEqual(System.String,System.String,System.Boolean,System.Globalization.CultureInfo)">
      <summary>Verifies that two specified strings are not equal, ignoring case or not as specified, and using the culture info specified. The assertion fails if they are equal.</summary>
      <param name="notExpected">The first string to compare. This is the string the unit test expects not to match <paramref name="actual" />.</param>
      <param name="actual">The second string to compare. This is the string the unit test produced.</param>
      <param name="ignoreCase">A Boolean value that indicates a case-sensitive or insensitive comparison. true indicates a case-insensitive comparison.</param>
      <param name="culture">A <see cref="T:System.Globalization.CultureInfo" /> object that supplies culture-specific comparison information.</param>
      <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
        <paramref name="notExpected" /> is equal to <paramref name="actual" />.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreNotEqual(System.String,System.String,System.Boolean,System.Globalization.CultureInfo,System.String)">
      <summary>Verifies that two specified strings are not equal, ignoring case or not as specified, and using the culture info specified. The assertion fails if they are equal. Displays a message if the assertion fails.</summary>
      <param name="notExpected">The first string to compare. This is the string the unit test expects not to match <paramref name="actual" />.</param>
      <param name="actual">The second string to compare. This is the string the unit test produced.</param>
      <param name="ignoreCase">A Boolean value that indicates a case-sensitive or insensitive comparison. true indicates a case-insensitive comparison.</param>
      <param name="culture">A <see cref="T:System.Globalization.CultureInfo" /> object that supplies culture-specific comparison information.</param>
      <param name="message">A message to display if the assertion fails. This message can be seen in the unit test results.</param>
      <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
        <paramref name="notExpected" /> is equal to <paramref name="actual" />.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreNotEqual(System.String,System.String,System.Boolean,System.Globalization.CultureInfo,System.String,System.Object[])">
      <summary>Verifies that two specified strings are not equal, ignoring case or not as specified, and using the culture info specified. The assertion fails if they are equal. Displays a message if the assertion fails, and applies the specified formatting to it.</summary>
      <param name="notExpected">The first string to compare. This is the string the unit test expects not to match <paramref name="actual" />.</param>
      <param name="actual">The second string to compare. This is the string the unit test produced.</param>
      <param name="ignoreCase">A Boolean value that indicates a case-sensitive or insensitive comparison. true indicates a case-insensitive comparison.</param>
      <param name="culture">A <see cref="T:System.Globalization.CultureInfo" /> object that supplies culture-specific comparison information.</param>
      <param name="message">A message to display if the assertion fails. This message can be seen in the unit test results.</param>
      <param name="parameters">An array of parameters to use when formatting <paramref name="message" />.</param>
      <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
        <paramref name="notExpected" /> is equal to <paramref name="actual" />.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreNotEqual(System.String,System.String,System.Boolean,System.String)">
      <summary>Verifies that two specified strings are not equal, ignoring case or not as specified. The assertion fails if they are equal. Displays a message if the assertion fails.</summary>
      <param name="notExpected">The first string to compare. This is the string the unit test expects not to match <paramref name="actual" />.</param>
      <param name="actual">The second string to compare. This is the string the unit test produced.</param>
      <param name="ignoreCase">A Boolean value that indicates a case-sensitive or insensitive comparison. true indicates a case-insensitive comparison.</param>
      <param name="message">A message to display if the assertion fails. This message can be seen in the unit test results.</param>
      <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
        <paramref name="notExpected" /> is equal to <paramref name="actual" />.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreNotEqual(System.String,System.String,System.Boolean,System.String,System.Object[])">
      <summary>Verifies that two specified strings are not equal, ignoring case or not as specified. The assertion fails if they are equal. Displays a message if the assertion fails, and applies the specified formatting to it. </summary>
      <param name="notExpected">The first string to compare. This is the string the unit test expects not to match <paramref name="actual" />.</param>
      <param name="actual">The second string to compare. This is the string the unit test produced.</param>
      <param name="ignoreCase">A Boolean value that indicates a case-sensitive or insensitive comparison. true indicates a case-insensitive comparison.</param>
      <param name="message">A message to display if the assertion fails. This message can be seen in the unit test results.</param>
      <param name="parameters">An array of parameters to use when formatting <paramref name="message" />.</param>
      <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
        <paramref name="notExpected" /> is equal to <paramref name="actual" />.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreNotEqual``1(``0,``0)">
      <summary>Verifies that two specified generic type data are not equal. The assertion fails if they are equal.</summary>
      <param name="notExpected">The first generic type data to compare. This is the generic type data the unit test expects not to match <paramref name="actual" />.</param>
      <param name="actual">The second generic type data to compare. This is the generic type data the unit test produced.</param>
      <typeparam name="T"></typeparam>
      <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
        <paramref name="notExpected" /> is equal to <paramref name="actual" />.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreNotEqual``1(``0,``0,System.String)">
      <summary>Verifies that two specified generic type data are not equal. The assertion fails if they are equal. Displays a message if the assertion fails.</summary>
      <param name="notExpected">The first generic type data to compare. This is the generic type data the unit test expects not to match <paramref name="actual" />.</param>
      <param name="actual">The second generic type data to compare. This is the generic type data the unit test produced.</param>
      <param name="message">A message to display if the assertion fails. This message can be seen in the unit test results.</param>
      <typeparam name="T"></typeparam>
      <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
        <paramref name="notExpected" /> is equal to <paramref name="actual" />.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreNotEqual``1(``0,``0,System.String,System.Object[])">
      <summary>Verifies that two specified generic type data are not equal. The assertion fails if they are equal. Displays a message if the assertion fails, and applies the specified formatting to it.</summary>
      <param name="notExpected">The first generic type data to compare. This is the generic type data the unit test expects not to match <paramref name="actual" />.</param>
      <param name="actual">The second generic type data to compare. This is the generic type data the unit test produced.</param>
      <param name="message">A message to display if the assertion fails. This message can be seen in the unit test results.</param>
      <param name="parameters">An array of parameters to use when formatting <paramref name="message" />.</param>
      <typeparam name="T"></typeparam>
      <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
        <paramref name="notExpected" /> is equal to <paramref name="actual" />.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreNotSame(System.Object,System.Object)">
      <summary>Verifies that two specified object variables refer to different objects. The assertion fails if they refer to the same object.</summary>
      <param name="notExpected">The first object to compare. This is the object the unit test expects not to match <paramref name="actual" />.</param>
      <param name="actual">The second object to compare. This is the object the unit test produced.</param>
      <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
        <paramref name="notExpected" /> refers to the same object as <paramref name="actual" />.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreNotSame(System.Object,System.Object,System.String)">
      <summary>Verifies that two specified object variables refer to different objects. The assertion fails if they refer to the same object. Displays a message if the assertion fails. </summary>
      <param name="notExpected">The first object to compare. This is the object the unit test expects not to match <paramref name="actual" />.</param>
      <param name="actual">The second object to compare. This is the object the unit test produced.</param>
      <param name="message">A message to display if the assertion fails. This message can be seen in the unit test results.</param>
      <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
        <paramref name="notExpected" /> refers to the same object as <paramref name="actual" />.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreNotSame(System.Object,System.Object,System.String,System.Object[])">
      <summary>Verifies that two specified object variables refer to different objects. The assertion fails if they refer to the same object. Displays a message if the assertion fails, and applies the specified formatting to it.</summary>
      <param name="notExpected">The first object to compare. This is the object the unit test expects not to match <paramref name="actual" />.</param>
      <param name="actual">The second object to compare. This is the object the unit test produced.</param>
      <param name="message">A message to display if the assertion fails. This message can be seen in the unit test results.</param>
      <param name="parameters">An array of parameters to use when formatting <paramref name="message" />.</param>
      <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
        <paramref name="notExpected" /> refers to the same object as <paramref name="actual" />.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreSame(System.Object,System.Object)">
      <summary>Verifies that two specified object variables refer to the same object. The assertion fails if they refer to different objects.</summary>
      <param name="expected">The first object to compare. This is the object the unit test expects.</param>
      <param name="actual">The second object to compare. This is the object the unit test produced.</param>
      <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
        <paramref name="expected" /> does not refer to the same object as <paramref name="actual" />.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreSame(System.Object,System.Object,System.String)">
      <summary>Verifies that two specified object variables refer to the same object. The assertion fails if they refer to different objects. Displays a message if the assertion fails.</summary>
      <param name="expected">The first object to compare. This is the object the unit test expects.</param>
      <param name="actual">The second object to compare. This is the object the unit test produced.</param>
      <param name="message">A message to display if the assertion fails. This message can be seen in the unit test results.</param>
      <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
        <paramref name="expected" /> does not refer to the same object as <paramref name="actual" />.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreSame(System.Object,System.Object,System.String,System.Object[])">
      <summary>Verifies that two specified object variables refer to the same object. The assertion fails if they refer to different objects. Displays a message if the assertion fails, and applies the specified formatting to it.</summary>
      <param name="expected">The first object to compare. This is the object the unit test expects.</param>
      <param name="actual">The second object to compare. This is the object the unit test produced.</param>
      <param name="message">A message to display if the assertion fails. This message can be seen in the unit test results.</param>
      <param name="parameters">An array of parameters to use when formatting <paramref name="message" />.</param>
      <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
        <paramref name="expected" /> does not refer to the same object as <paramref name="actual" />.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.Equals(System.Object,System.Object)">
      <summary>Do not use this method. </summary>
      <param name="objA"></param>
      <param name="objB"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.Fail">
      <summary>Fails the assertion without checking any conditions.</summary>
      <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">Always thrown.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.Fail(System.String)">
      <summary>Fails the assertion without checking any conditions. Displays a message.</summary>
      <param name="message">A message to display. This message can be seen in the unit test results.</param>
      <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">Always thrown.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.Fail(System.String,System.Object[])">
      <summary>Fails the assertion without checking any conditions. Displays a message, and applies the specified formatting to it.</summary>
      <param name="message">A message to display. This message can be seen in the unit test results.</param>
      <param name="parameters">An array of parameters to use when formatting <paramref name="message" />.</param>
      <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">Always thrown.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.Inconclusive">
      <summary>Indicates that the assertion cannot be verified.</summary>
      <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertInconclusiveException">Always thrown.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.Inconclusive(System.String)">
      <summary>Indicates that the assertion can not be verified. Displays a message.</summary>
      <param name="message">A message to display. This message can be seen in the unit test results.</param>
      <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertInconclusiveException">Always thrown.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.Inconclusive(System.String,System.Object[])">
      <summary>Indicates that an assertion can not be verified. Displays a message, and applies the specified formatting to it.</summary>
      <param name="message">A message to display. This message can be seen in the unit test results.</param>
      <param name="parameters">An array of parameters to use when formatting <paramref name="message" />.</param>
      <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertInconclusiveException">Always thrown.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.IsFalse(System.Boolean)">
      <summary>Verifies that the specified condition is false. The assertion fails if the condition is true.</summary>
      <param name="condition">The condition to verify is false.</param>
      <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
        <paramref name="condition" /> evaluates to true.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.IsFalse(System.Boolean,System.String)">
      <summary>Verifies that the specified condition is false. The assertion fails if the condition is true. Displays a message if the assertion fails.</summary>
      <param name="condition">The condition to verify is false.</param>
      <param name="message">A message to display if the assertion fails. This message can be seen in the unit test results.</param>
      <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
        <paramref name="condition" /> evaluates to true.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.IsFalse(System.Boolean,System.String,System.Object[])">
      <summary>Verifies that the specified condition is false. The assertion fails if the condition is true. Displays a message if the assertion fails, and applies the specified formatting to it.</summary>
      <param name="condition">The condition to verify is false.</param>
      <param name="message">A message to display if the assertion fails. This message can be seen in the unit test results.</param>
      <param name="parameters">An array of parameters to use when formatting <paramref name="message" />.</param>
      <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
        <paramref name="condition" /> evaluates to true.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.IsInstanceOfType(System.Object,System.Type)">
      <summary>Verifies that the specified object is an instance of the specified type. The assertion fails if the type is not found in the inheritance hierarchy of the object.</summary>
      <param name="value">The object to verify is of <paramref name="expectedType" />.</param>
      <param name="expectedType">The type expected to be found in the inheritance hierarchy of <paramref name="value" />.</param>
      <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
        <paramref name="value" /> is null or <paramref name="expectedType" /> is not found in the inheritance hierarchy of <paramref name="value" />.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.IsInstanceOfType(System.Object,System.Type,System.String)">
      <summary>Verifies that the specified object is an instance of the specified type. The assertion fails if the type is not found in the inheritance hierarchy of the object. Displays a message if the assertion fails.</summary>
      <param name="value">The object to verify is of <paramref name="expectedType" />.</param>
      <param name="expectedType">The type expected to be found in the inheritance hierarchy of <paramref name="value" />.</param>
      <param name="message">A message to display if the assertion fails. This message can be seen in the unit test results.</param>
      <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
        <paramref name="value" /> is null or <paramref name="expectedType" /> is not found in the inheritance hierarchy of <paramref name="value" />.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.IsInstanceOfType(System.Object,System.Type,System.String,System.Object[])">
      <summary>Verifies that the specified object is an instance of the specified type. The assertion fails if the type is not found in the inheritance hierarchy of the object. Displays a message if the assertion fails, and applies the specified formatting to it.</summary>
      <param name="value">The object to verify is of <paramref name="expectedType" />.</param>
      <param name="expectedType">The type expected to be found in the inheritance hierarchy of <paramref name="value" />.</param>
      <param name="message">A message to display if the assertion fails. This message can be seen in the unit test results.</param>
      <param name="parameters">An array of parameters to use when formatting <paramref name="message" />.</param>
      <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
        <paramref name="value" /> is null or <paramref name="expectedType" /> is not found in the inheritance hierarchy of <paramref name="value" />.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.IsNotInstanceOfType(System.Object,System.Type)">
      <summary>Verifies that the specified object is not an instance of the specified type. The assertion fails if the type is found in the inheritance hierarchy of the object.</summary>
      <param name="value">The object to verify is not of <paramref name="wrongType" />.</param>
      <param name="wrongType">The type that should not be found in the inheritance hierarchy of <paramref name="value" />.</param>
      <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
        <paramref name="value" /> is not null and <paramref name="wrongType" /> is found in the inheritance hierarchy of <paramref name="value" />.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.IsNotInstanceOfType(System.Object,System.Type,System.String)">
      <summary>Verifies that the specified object is not an instance of the specified type. The assertion fails if the type is found in the inheritance hierarchy of the object. Displays a message if the assertion fails.</summary>
      <param name="value">The object to verify is not of <paramref name="wrongType" />.</param>
      <param name="wrongType">The type that should not be found in the inheritance hierarchy of <paramref name="value" />.</param>
      <param name="message">A message to display if the assertion fails. This message can be seen in the unit test results. </param>
      <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
        <paramref name="value" /> is not null and <paramref name="wrongType" /> is found in the inheritance hierarchy of <paramref name="value" />.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.IsNotInstanceOfType(System.Object,System.Type,System.String,System.Object[])">
      <summary>Verifies that the specified object is not an instance of the specified type. The assertion fails if the type is found in the inheritance hierarchy of the object. Displays a message if the assertion fails, and applies the specified formatting to it.</summary>
      <param name="value">The object to verify is not of <paramref name="wrongType" />.</param>
      <param name="wrongType">The type that should not be found in the inheritance hierarchy of <paramref name="value" />.</param>
      <param name="message">A message to display if the assertion fails. This message can be seen in the unit test results. </param>
      <param name="parameters">An array of parameters to use when formatting <paramref name="message" />.</param>
      <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
        <paramref name="value" /> is not null and <paramref name="wrongType" /> is found in the inheritance hierarchy of <paramref name="value" />.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.IsNotNull(System.Object)">
      <summary>Verifies that the specified object is not null. The assertion fails if it is null.</summary>
      <param name="value">The object to verify is not null.</param>
      <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
        <paramref name="value" /> is null.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.IsNotNull(System.Object,System.String)">
      <summary>Verifies that the specified object is not null. The assertion fails if it is null. Displays a message if the assertion fails.</summary>
      <param name="value">The object to verify is not null.</param>
      <param name="message">A message to display if the assertion fails. This message can be seen in the unit test results.</param>
      <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
        <paramref name="value" /> is null.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.IsNotNull(System.Object,System.String,System.Object[])">
      <summary>Verifies that the specified object is not null. The assertion fails if it is null. Displays a message if the assertion fails, and applies the specified formatting to it.</summary>
      <param name="value">The object to verify is not null.</param>
      <param name="message">A message to display if the assertion fails. This message can be seen in the unit test results.</param>
      <param name="parameters">An array of parameters to use when formatting <paramref name="message" />.</param>
      <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
        <paramref name="value" /> is null.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.IsNull(System.Object)">
      <summary>Verifies that the specified object is null. The assertion fails if it is not null.</summary>
      <param name="value">The object to verify is null.</param>
      <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
        <paramref name="value" /> is not null.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.IsNull(System.Object,System.String)">
      <summary>Verifies that the specified object is null. The assertion fails if it is not null. Displays a message if the assertion fails.</summary>
      <param name="value">The object to verify is null.</param>
      <param name="message">A message to display if the assertion fails. This message can be seen in the unit test results.</param>
      <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
        <paramref name="value" /> is not null.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.IsNull(System.Object,System.String,System.Object[])">
      <summary>Verifies that the specified object is null. The assertion fails if it is not null. Displays a message if the assertion fails, and applies the specified formatting to it.</summary>
      <param name="value">The object to verify is null.</param>
      <param name="message">A message to display if the assertion fails. This message can be seen in the unit test results.</param>
      <param name="parameters">An array of parameters to use when formatting <paramref name="message" />.</param>
      <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
        <paramref name="value" /> is not null.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.IsTrue(System.Boolean)">
      <summary>Verifies that the specified condition is true. The assertion fails if the condition is false.</summary>
      <param name="condition">The condition to verify is true.</param>
      <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
        <paramref name="condition" /> evaluates to false.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.IsTrue(System.Boolean,System.String)">
      <summary>Verifies that the specified condition is true. The assertion fails if the condition is false. Displays a message if the assertion fails.</summary>
      <param name="condition">The condition to verify is true.</param>
      <param name="message">A message to display if the assertion fails. This message can be seen in the unit test results.</param>
      <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
        <paramref name="condition" /> evaluates to false.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.IsTrue(System.Boolean,System.String,System.Object[])">
      <summary>Verifies that the specified condition is true. The assertion fails if the condition is false. Displays a message if the assertion fails, and applies the specified formatting to it.</summary>
      <param name="condition">The condition to verify is true.</param>
      <param name="message">A message to display if the assertion fails. This message can be seen in the unit test results.</param>
      <param name="parameters">An array of parameters to use when formatting <paramref name="message" />.</param>
      <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
        <paramref name="condition" /> evaluates to false.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.ReplaceNullChars(System.String)">
      <summary>In a string, replaces null characters ('\0') with "\\0".</summary>
      <returns>The converted string with null characters replaced by "\\0".</returns>
      <param name="input">The string in which to search for and replace null characters. </param>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
      <summary>Used to indicate failure for a test. </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException" /> class. </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException" /> class with serialized data.</summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
      <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="info" /> is null.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or HResult is zero (0).</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException" /> class that uses with a specified error message.</summary>
      <param name="msg">The message that describes the error.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException" /> class with a specified error message and a reference to the inner exception that is the cause of this exception.</summary>
      <param name="msg">The error message that explains the reason for the exception.</param>
      <param name="ex">The exception that is the cause of the current exception. If the <paramref name="ex" /> parameter is not null, the current exception is raised in a catch block that handles the inner exception.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertInconclusiveException">
      <summary>Used to indicate that a test is not yet implemented. </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.AssertInconclusiveException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertInconclusiveException" /> class. </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.AssertInconclusiveException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertInconclusiveException" /> class with serialized data. </summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
      <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="info" /> parameter is null.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.AssertInconclusiveException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertInconclusiveException" /> class with a specified error message. </summary>
      <param name="msg">The message that describes the error.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.AssertInconclusiveException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertInconclusiveException" /> class with a specified error message and a reference to the inner exception that is the cause of this exception.  </summary>
      <param name="msg">The error message that explains the reason for the exception.</param>
      <param name="ex">The exception that is the cause of the current exception. If the parameter is not null, the current exception is raised in a catch block that handles the inner exception. </param>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.UnitTesting.BaseShadow">
      <summary>This class is used by the publicize method to help test private types. </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.BaseShadow.#ctor(Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.BaseShadow" /> class. </summary>
      <param name="privateTarget">Object to store at initialization.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.BaseShadow.#ctor(Microsoft.VisualStudio.TestTools.UnitTesting.PrivateType)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.BaseShadow" /> class.</summary>
      <param name="type">Type to store at initialization.</param>
    </member>
    <member name="F:Microsoft.VisualStudio.TestTools.UnitTesting.BaseShadow.AttachShadowName">
      <summary>The name of the static method in derived classes.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.BaseShadow.Equals(System.Object)">
      <summary>Determines whether the specified Object is equal to the current Object.</summary>
      <returns>true if the specified Object is equal to the current Object; otherwise, false.</returns>
      <param name="obj">The Object to compare with the current Object.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.BaseShadow.GetHashCode">
      <summary>Returns the hash code for this instance.</summary>
      <returns>A 32-bit signed integer hash code.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.BaseShadow.GetShadowAttacher(System.Type)">
      <summary>Used for dynamically restoring of arrays of private types.</summary>
      <returns>The <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.BaseShadow.ElementConverter" /> delegate for the AttachShadow method.</returns>
      <param name="type">The type, potentially an array or pointer.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.BaseShadow.GetTargetObject(System.Object)">
      <summary>Static function that will be used with <see cref="M:Microsoft.VisualStudio.TestTools.UnitTesting.BaseShadow.TransferArray(System.Array,System.Type,Microsoft.VisualStudio.TestTools.UnitTesting.BaseShadow.ElementConverter)" /> for deep array copy with unshadowing the real target <see cref="T:System.Type" /> objects.</summary>
      <returns>If <paramref name="Source" /> is a shadow, returns the underlying target <see cref="T:System.Type" />; otherwise returns <paramref name="Source" />.</returns>
      <param name="source"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.BaseShadow.GetTargetType(System.Type)">
      <summary>Returns the target <see cref="T:System.Type" /> for a potential shadow class. </summary>
      <returns>Returns the target <see cref="T:System.Type" /> for a potential shadow class. If the passed type is not a shadow type, it returns the same type.</returns>
      <param name="type">The type to examine.</param>
    </member>
    <member name="F:Microsoft.VisualStudio.TestTools.UnitTesting.BaseShadow.m_privateObject">
      <summary>The <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject" /> stored in this instance.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.BaseShadow.MakeArrayType(System.Type,System.Int32)">
      <summary>Returns a <see cref="T:System.Type" /> object that represents an array of the specified type, with the specified number of dimensions.</summary>
      <returns>A <see cref="T:System.Type" /> object that represents an array of the specified type, with the specified number of dimensions.</returns>
      <param name="elementType">The element type for the array.</param>
      <param name="rank">The number of dimensions for the array.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.BaseShadow.MakeByRefType(System.Type)">
      <summary>Returns a <see cref="T:System.Type" /> object that represents the specified type when it is passed as a ref parameter.</summary>
      <returns>A <see cref="T:System.Type" /> object that represents the current type when it is passed as a ref parameter.</returns>
      <param name="elementType">The element type.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.BaseShadow.MakePointerType(System.Type)">
      <summary>Returns a <see cref="T:System.Type" /> object that represents a pointer to the specified type.</summary>
      <returns>A <see cref="T:System.Type" /> object that represents a pointer to the specified type.</returns>
      <param name="elementType">The element type.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.BaseShadow.Same(System.Object)">
      <summary>Dummy method used to transfer the arrays of the same <see cref="T:System.Type" />. This is the failsafe implementation of the <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.BaseShadow.ElementConverter" /> delegate used for arrays of the same type.</summary>
      <returns>Returns the <paramref name="source" /> object.</returns>
      <param name="source">The source object.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.BaseShadow.Target">
      <summary>Gets the target object.</summary>
      <returns>The stored object.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.BaseShadow.ToString">
      <summary>Returns a <see cref="T:System.String" /> that represents the current <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.BaseShadow" /> object.</summary>
      <returns>A <see cref="T:System.String" /> that represents the current <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.BaseShadow" /> object.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.BaseShadow.TransferArray(System.Array,System.Type,Microsoft.VisualStudio.TestTools.UnitTesting.BaseShadow.ElementConverter)">
      <summary>Performs a deep copy of an array of one <see cref="T:System.Type" /> into a similar array of different <see cref="T:System.Type" />.</summary>
      <returns>An array with the same characteristics (rank and dimension limitations) as the original array.</returns>
      <param name="source">The source array.</param>
      <param name="targetType">The type of the target array.</param>
      <param name="converter">The method which performs the conversion between the elements of the arrays.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.UnitTesting.BaseShadow.ElementConverter">
      <summary>Delegate used for deep copying of arrays. Converts the source element of an array into the target element.</summary>
      <returns>The target element of the deep copy.</returns>
      <param name="source">The source element to deep copy.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.UnitTesting.BeforeAssemblyCleanupEventArgs">
      <summary>Provides data for the <see cref="E:Microsoft.VisualStudio.TestTools.UnitTesting.TestExecution.BeforeAssemblyCleanup" /> event.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.UnitTesting.BeforeAssemblyInitializeEventArgs">
      <summary>Provides data for the <see cref="E:Microsoft.VisualStudio.TestTools.UnitTesting.TestExecution.BeforeAssemblyInitialize" /> event.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.UnitTesting.BeforeClassCleanupEventArgs">
      <summary>Provides data for the <see cref="E:Microsoft.VisualStudio.TestTools.UnitTesting.TestExecution.BeforeClassCleanup" /> event.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.UnitTesting.BeforeClassInitializeEventArgs">
      <summary>Provides data for the <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.BeforeClassInitializeEventArgs" /> event.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.UnitTesting.BeforeTestCleanupEventArgs">
      <summary>Provides data for the <see cref="E:Microsoft.VisualStudio.TestTools.UnitTesting.TestExecution.BeforeTestCleanup" /> event.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.UnitTesting.BeforeTestInitializeEventArgs">
      <summary>Provides data for the <see cref="E:Microsoft.VisualStudio.TestTools.UnitTesting.TestExecution.BeforeTestInitialize" /> event.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute">
      <summary>Identifies a method that contains code to be used after all the tests in the test class have run and to free resources obtained by the test class. This class cannot be inherited. </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute" /> class.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute">
      <summary>Identifies a method that contains code that must be used before any of the tests in the test class have run and to allocate resources to be used by the test class. This class cannot be inherited. </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute" /> class.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.UnitTesting.CollectionAssert">
      <summary>Verifies true/false propositions associated with collections in unit tests.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.CollectionAssert.AllItemsAreInstancesOfType(System.Collections.ICollection,System.Type)">
      <summary>Verifies that all elements in the specified collection are instances of the specified type. The assertion fails if for any element the type is not found in its inheritance hierarchy.</summary>
      <param name="collection">The collection to verify.</param>
      <param name="expectedType">The type expected to be found in the inheritance hierarchy of every element in <paramref name="collection" />.</param>
      <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">An element in <paramref name="collection" /> is null or <paramref name="expectedType" /> is not found in the inheritance hierarchy of all elements  in <paramref name="collection" />.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.CollectionAssert.AllItemsAreInstancesOfType(System.Collections.ICollection,System.Type,System.String)">
      <summary>Verifies that all elements in the specified collection are instances of the specified type. The assertion fails if there exists one element in the collection for which the specified type is not found in its inheritance hierarchy. Displays a message if the assertion fails.</summary>
      <param name="collection">The collection to verify.</param>
      <param name="expectedType">The type expected to be found in the inheritance hierarchy of every element in <paramref name="collection" />.</param>
      <param name="message">A message to display if the assertion fails. This message can be seen in the unit test results.</param>
      <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">An element in <paramref name="collection" /> is null or <paramref name="expectedType" /> is not found in the inheritance hierarchy of all elements in <paramref name="collection" />.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.CollectionAssert.AllItemsAreInstancesOfType(System.Collections.ICollection,System.Type,System.String,System.Object[])">
      <summary>Verifies that all elements in the specified collection are instances of the specified type. The assertion fails if there exists one element in the collection for which the specified type is not found in its inheritance hierarchy. Displays a message if the assertion fails, and applies the specified formatting to it.</summary>
      <param name="collection">The collection to verify.</param>
      <param name="expectedType">The type expected to be found in the inheritance hierarchy of every element in <paramref name="collection" />.</param>
      <param name="message">A message to display if the assertion fails. This message can be seen in the unit test results.</param>
      <param name="parameters">An array of parameters to use when formatting <paramref name="message" />.</param>
      <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">An element in <paramref name="collection" /> is null or <paramref name="expectedType" /> is not found in the inheritance hierarchy of all elements in <paramref name="collection" />.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.CollectionAssert.AllItemsAreNotNull(System.Collections.ICollection)">
      <summary>Verifies that all items in the specified collection are not null. The assertion fails if any element is null.</summary>
      <param name="collection">The collection in which to search for elements that are null.</param>
      <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">An element which is null is found in <paramref name="collection" />.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.CollectionAssert.AllItemsAreNotNull(System.Collections.ICollection,System.String)">
      <summary>Verifies that all items in the specified collection are not null. The assertion fails if any element is null. Displays a message if the assertion fails.</summary>
      <param name="collection">The collection in which to search for elements that are null.</param>
      <param name="message">A message to display if the assertion fails. This message can be seen in the unit test results.</param>
      <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">An element which is null is found in <paramref name="collection" />.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.CollectionAssert.AllItemsAreNotNull(System.Collections.ICollection,System.String,System.Object[])">
      <summary>Verifies that all items in the specified collection are not null. The assertion fails if any element is null. Displays a message if the assertion fails, and applies the specified formatting to it.</summary>
      <param name="collection">The collection in which to search for elements that are null.</param>
      <param name="message">A message to display if the assertion fails. This message can be seen in the unit test results.</param>
      <param name="parameters">An array of parameters to use when formatting <paramref name="message" />.</param>
      <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">An element which is null is found in <paramref name="collection" />.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.CollectionAssert.AllItemsAreUnique(System.Collections.ICollection)">
      <summary>Verifies that all items in the specified collection are unique. The assertion fails if any two elements in the collection are equal.</summary>
      <param name="collection">The collection in which to search for duplicate elements.</param>
      <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">Two or more equal elements are found in <paramref name="collection" />.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.CollectionAssert.AllItemsAreUnique(System.Collections.ICollection,System.String)">
      <summary>Verifies that all items in the specified collection are unique. The assertion fails if any two elements in the collection are equal. Displays a message if the assertion fails.</summary>
      <param name="collection">The collection in which to search for duplicate elements.</param>
      <param name="message">A message to display if the assertion fails. This message can be seen in the unit test results.</param>
      <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">Two or more equal elements are found in <paramref name="collection" />.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.CollectionAssert.AllItemsAreUnique(System.Collections.ICollection,System.String,System.Object[])">
      <summary>Verifies that all items in the specified collection are unique. The assertion fails if any two elements in the collection are equal. Displays a message if the assertion fails, and applies the specified formatting to it.</summary>
      <param name="collection">The collection in which to search for duplicate elements.</param>
      <param name="message">A message to display if the assertion fails. This message can be seen in the unit test results.</param>
      <param name="parameters">An array of parameters to use when formatting <paramref name="message" />.</param>
      <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">Two or more equal elements are found in <paramref name="collection" />.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.CollectionAssert.AreEqual(System.Collections.ICollection,System.Collections.ICollection)">
      <summary>Verifies that two specified collections are equal. The assertion fails if the collections are not equal.</summary>
      <param name="expected">The first collection to compare. This is the collection the unit test expects.</param>
      <param name="actual">The second collection to compare. This is the collection the unit test produced.</param>
      <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
        <paramref name="expected" /> is not equal to <paramref name="actual" />.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.CollectionAssert.AreEqual(System.Collections.ICollection,System.Collections.ICollection,System.Collections.IComparer)">
      <summary>Verifies that two specified collections are equal, using the specified method to compare the values of elements. The assertion fails if the collections are not equal.</summary>
      <param name="expected">The first collection to compare. This is the collection the unit test expects.</param>
      <param name="actual">The second collection to compare. This is the collection the unit test produced.</param>
      <param name="comparer">The compare implementation to use when comparing elements of the collection.</param>
      <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
        <paramref name="expected" /> is not equal to <paramref name="actual" />.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.CollectionAssert.AreEqual(System.Collections.ICollection,System.Collections.ICollection,System.Collections.IComparer,System.String)">
      <summary>Verifies that two specified collections are equal, using the specified method to compare the values of elements. The assertion fails if the collections are not equal. Displays a message if the assertion fails.</summary>
      <param name="expected">The first collection to compare. This is the collection the unit test expects.</param>
      <param name="actual">The second collection to compare. This is the collection the unit test produced.</param>
      <param name="comparer">The compare implementation to use when comparing elements of the collection.</param>
      <param name="message">A message to display if the assertion fails. This message can be seen in the unit test results.</param>
      <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
        <paramref name="expected" /> is not equal to <paramref name="actual" />.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.CollectionAssert.AreEqual(System.Collections.ICollection,System.Collections.ICollection,System.Collections.IComparer,System.String,System.Object[])">
      <summary>Verifies that two specified collections are equal, using the specified method to compare the values of elements. The assertion fails if the collections are not equal. Displays a message if the assertion fails, and applies the specified formatting to it.</summary>
      <param name="expected">The first collection to compare. This is the collection the unit test expects.</param>
      <param name="actual">The second collection to compare. This is the collection the unit test produced.</param>
      <param name="comparer">The compare implementation to use when comparing elements of the collection.</param>
      <param name="message">A message to display if the assertion fails. This message can be seen in the unit test results.</param>
      <param name="parameters">An array of parameters to use when formatting <paramref name="message" />.</param>
      <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
        <paramref name="expected" /> is not equal to <paramref name="actual" />.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.CollectionAssert.AreEqual(System.Collections.ICollection,System.Collections.ICollection,System.String)">
      <summary>Verifies that two specified collections are equal. The assertion fails if the collections are not equal. Displays a message if the assertion fails.</summary>
      <param name="expected">The first collection to compare. This is the collection the unit test expects.</param>
      <param name="actual">The second collection to compare. This is the collection the unit test produced.</param>
      <param name="message">A message to display if the assertion fails. This message can be seen in the unit test results.</param>
      <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
        <paramref name="expected" /> is not equal to <paramref name="actual" />.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.CollectionAssert.AreEqual(System.Collections.ICollection,System.Collections.ICollection,System.String,System.Object[])">
      <summary>Verifies that two specified collections are equal. The assertion fails if the collections are not equal. Displays a message if the assertion fails, and applies the specified formatting to it.</summary>
      <param name="expected">The first collection to compare. This is the collection the unit test expects.</param>
      <param name="actual">The second collection to compare. This is the collection the unit test produced.</param>
      <param name="message">A message to display if the assertion fails. This message can be seen in the unit test results.</param>
      <param name="parameters">An array of parameters to use when formatting <paramref name="message" />.</param>
      <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
        <paramref name="expected" /> is not equal to <paramref name="actual" />.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.CollectionAssert.AreEquivalent(System.Collections.ICollection,System.Collections.ICollection)">
      <summary>Verifies that two specified collections are equivalent. The assertion fails if the collections are not equivalent.</summary>
      <param name="expected">The first collection to compare. This contains the elements the unit test expects.</param>
      <param name="actual">The second collection to compare. This is the collection the unit test produced.</param>
      <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">An element was found in one of the collections but not in the other.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.CollectionAssert.AreEquivalent(System.Collections.ICollection,System.Collections.ICollection,System.String)">
      <summary>Verifies that two specified collections are equivalent. The assertion fails if the collections are not equivalent. Displays a message if the assertion fails.</summary>
      <param name="expected">The first collection to compare. This contains the elements the unit test expects.</param>
      <param name="actual">The second collection to compare. This is the collection the unit test produced.</param>
      <param name="message">A message to display if the assertion fails. This message can be seen in the unit test results.</param>
      <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">An element was found in one of the collections but not in the other.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.CollectionAssert.AreEquivalent(System.Collections.ICollection,System.Collections.ICollection,System.String,System.Object[])">
      <summary>Verifies that two specified collections are equivalent. The assertion fails if the collections are not equivalent. Displays a message if the assertion fails, and applies the specified formatting to it.</summary>
      <param name="expected">The first collection to compare. This contains the elements the unit test expects.</param>
      <param name="actual">The second collection to compare. This is the collection the unit test produced.</param>
      <param name="message">A message to display if the assertion fails. This message can be seen in the unit test results.</param>
      <param name="parameters">An array of parameters to use when formatting <paramref name="message" />.</param>
      <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">An element was found in one of the collections but not the other.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.CollectionAssert.AreNotEqual(System.Collections.ICollection,System.Collections.ICollection)">
      <summary>Verifies that two specified collections are not equal. The assertion fails if the collections are equal.</summary>
      <param name="notExpected">The first collection to compare. This is the collection that the unit test does not expect to match <paramref name="actual" />.</param>
      <param name="actual">The second collection to compare. This is the collection the unit test produced.</param>
      <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
        <paramref name="expected" /> is equal to <paramref name="actual" />.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.CollectionAssert.AreNotEqual(System.Collections.ICollection,System.Collections.ICollection,System.Collections.IComparer)">
      <summary>Verifies that two specified collections are not equal, using the specified method to compare the values of elements. The assertion fails if the collections are equal.</summary>
      <param name="notExpected">The first collection to compare. This is the collection that the unit test does not expect to match <paramref name="actual" />.</param>
      <param name="actual">The second collection to compare. This is the collection the unit test produced.</param>
      <param name="comparer">The compare implementation to use when comparing elements of the collection.</param>
      <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
        <paramref name="expected" /> is equal to <paramref name="actual" />.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.CollectionAssert.AreNotEqual(System.Collections.ICollection,System.Collections.ICollection,System.Collections.IComparer,System.String)">
      <summary>Verifies that two specified collections are not equal, using the specified method to compare the values of elements. The assertion fails if the collections are equal. Displays a message if the assertion fails.</summary>
      <param name="notExpected">The first collection to compare. This is the collection that the unit test does not expect to match <paramref name="actual" />.</param>
      <param name="actual">The second collection to compare. This is the collection the unit test produced.</param>
      <param name="comparer">The compare implementation to use when comparing elements of the collection.</param>
      <param name="message">A message to display if the assertion fails. This message can be seen in the unit test results.</param>
      <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
        <paramref name="expected" /> is equal to <paramref name="actual" />.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.CollectionAssert.AreNotEqual(System.Collections.ICollection,System.Collections.ICollection,System.Collections.IComparer,System.String,System.Object[])">
      <summary>Verifies that two specified collections are not equal, using the specified method to compare the values of elements. The assertion fails if the collections are equal. Displays a message if the assertion fails, and applies the specified formatting to it.</summary>
      <param name="notExpected">The first collection to compare. This is the collection that the unit test does not expect to match <paramref name="actual" />.</param>
      <param name="actual">The second collection to compare. This is the collection the unit test produced.</param>
      <param name="comparer">The compare implementation to use when comparing elements of the collection.</param>
      <param name="message">A message to display if the assertion fails. This message can be seen in the unit test results.</param>
      <param name="parameters">An array of parameters to use when formatting <paramref name="message" />.</param>
      <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
        <paramref name="expected" /> is equal to <paramref name="actual" />.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.CollectionAssert.AreNotEqual(System.Collections.ICollection,System.Collections.ICollection,System.String)">
      <summary>Verifies that two specified collections are not equal. The assertion fails if the collections are equal. Displays a message if the assertion fails.</summary>
      <param name="notExpected">The first collection to compare. This is the collection that the unit test does not expect to match <paramref name="actual" />.</param>
      <param name="actual">The second collection to compare. This is the collection the unit test produced.</param>
      <param name="message">A message to display if the assertion fails. This message can be seen in the unit test results.</param>
      <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
        <paramref name="expected" /> is equal to <paramref name="actual" />.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.CollectionAssert.AreNotEqual(System.Collections.ICollection,System.Collections.ICollection,System.String,System.Object[])">
      <summary>Verifies that two specified collections are not equal. The assertion fails if the collections are equal. Displays a message if the assertion fails, and applies the specified formatting to it.</summary>
      <param name="notExpected">The first collection to compare. This is the collection that the unit test does not expect to match <paramref name="actual" />.</param>
      <param name="actual">The second collection to compare. This is the collection the unit test produced.</param>
      <param name="message">A message to display if the assertion fails. This message can be seen in the unit test results.</param>
      <param name="parameters">An array of parameters to use when formatting <paramref name="message" />.</param>
      <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
        <paramref name="expected" /> is equal to <paramref name="actual" />.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.CollectionAssert.AreNotEquivalent(System.Collections.ICollection,System.Collections.ICollection)">
      <summary>Verifies that two specified collections are not equivalent. The assertion fails if the collections are equivalent.</summary>
      <param name="expected">The first collection to compare. This contains the elements the unit test expects to be different from the actual collection.</param>
      <param name="actual">The second collection to compare. This is the collection the unit test produced.</param>
      <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">The two collections contain the same elements, including the same number of duplicate occurrences of each element.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.CollectionAssert.AreNotEquivalent(System.Collections.ICollection,System.Collections.ICollection,System.String)">
      <summary>Verifies that two specified collections are not equivalent. The assertion fails if the collections are equivalent. Displays a message if the assertion fails.</summary>
      <param name="expected">The first collection to compare. This contains the elements the unit test expects to be different from the actual collection.</param>
      <param name="actual">The second collection to compare. This is the collection the unit test produced.</param>
      <param name="message">A message to display if the assertion fails. This message can be seen in the unit test results.</param>
      <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">The two collections contain the same elements, including the same number of duplicate occurrences of each element.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.CollectionAssert.AreNotEquivalent(System.Collections.ICollection,System.Collections.ICollection,System.String,System.Object[])">
      <summary>Verifies that two specified collections are not equivalent. The assertion fails if the collections are equivalent. Displays a message if the assertion fails, and applies the specified formatting to it.</summary>
      <param name="expected">The first collection to compare. This contains the elements the unit test expects to be different from the actual collection.</param>
      <param name="actual">The second collection to compare. This is the collection the unit test produced.</param>
      <param name="message">A message to display if the assertion fails. This message can be seen in the unit test results.</param>
      <param name="parameters">An array of parameters to use when formatting <paramref name="message" />.</param>
      <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">The two collections contain the same elements, including the same number of duplicate occurrences of each element.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.CollectionAssert.Contains(System.Collections.ICollection,System.Object)">
      <summary>Verifies that the specified collection contains the specified element. The assertion fails if the element is not found in the collection.</summary>
      <param name="collection">The collection in which to search for the element.</param>
      <param name="element">The element that is expected to be in the collection.</param>
      <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
        <paramref name="element" /> is not found in <paramref name="collection" />.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.CollectionAssert.Contains(System.Collections.ICollection,System.Object,System.String)">
      <summary>Verifies that the specified collection contains the specified element. The assertion fails if the element is not found in the collection. Displays a message if the assertion fails.</summary>
      <param name="collection">The collection in which to search for the element.</param>
      <param name="element">The element that is expected to be in the collection.</param>
      <param name="message">A message to display if the assertion fails. This message can be seen in the unit test results.</param>
      <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
        <paramref name="element" /> is not found in <paramref name="collection" />.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.CollectionAssert.Contains(System.Collections.ICollection,System.Object,System.String,System.Object[])">
      <summary>Verifies that the specified collection contains the specified element. The assertion fails if the element is not found in the collection. Displays a message if the assertion fails, and applies the specified formatting to it.</summary>
      <param name="collection">The collection in which to search for the element.</param>
      <param name="element">The element that is expected to be in the collection.</param>
      <param name="message">A message to display if the assertion fails. This message can be seen in the unit test results.</param>
      <param name="parameters">An array of parameters to use when formatting <paramref name="message" />.</param>
      <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
        <paramref name="element" /> is not found in <paramref name="collection" />.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.CollectionAssert.DoesNotContain(System.Collections.ICollection,System.Object)">
      <summary>Verifies that the specified collection does not contain the specified element. The assertion fails if the element is found in the collection.</summary>
      <param name="collection">The collection in which to search for the element.</param>
      <param name="element">The element that is not expected to be in the collection.</param>
      <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
        <paramref name="element" /> is found in <paramref name="collection" />.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.CollectionAssert.DoesNotContain(System.Collections.ICollection,System.Object,System.String)">
      <summary>Verifies that the specified collection does not contain the specified element. The assertion fails if the element is found in the collection. Displays a message if the assertion fails.</summary>
      <param name="collection">The collection in which to search for the element.</param>
      <param name="element">The element that is not expected to be in the collection.</param>
      <param name="message">A message to display if the assertion fails. This message can be seen in the unit test results.</param>
      <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
        <paramref name="element" /> is found in <paramref name="collection" />.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.CollectionAssert.DoesNotContain(System.Collections.ICollection,System.Object,System.String,System.Object[])">
      <summary>Verifies that the specified collection does not contain the specified element. The assertion fails if the element is found in the collection. Displays a message if the assertion fails, and applies the specified formatting to it.</summary>
      <param name="collection">The collection in which to search for the element.</param>
      <param name="element">The element that is not expected to be in the collection.</param>
      <param name="message">A message to display if the assertion fails. This message can be seen in the unit test results.</param>
      <param name="parameters">An array of parameters to use when formatting <paramref name="message" />.</param>
      <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
        <paramref name="element" /> is found in <paramref name="collection" />.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.CollectionAssert.IsNotSubsetOf(System.Collections.ICollection,System.Collections.ICollection)">
      <summary>Verifies that the first collection is not a subset of the second collection.</summary>
      <param name="subset">The collection not expected to be a subset of <paramref name="superset" />.</param>
      <param name="superset">The collection not expected to be a superset of <paramref name="subset" />.</param>
      <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">All elements in <paramref name="subset" /> are found in <paramref name="superset" />Â and are found in sufficient quantity.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.CollectionAssert.IsNotSubsetOf(System.Collections.ICollection,System.Collections.ICollection,System.String)">
      <summary>Verifies that the first collection is not a subset of the second collection. Displays a message if the assertion fails.</summary>
      <param name="subset">The collection not expected to be a subset of <paramref name="superset" />.</param>
      <param name="superset">The collection not expected to be a superset of <paramref name="subset" />.</param>
      <param name="message">A message to display if the assertion fails. This message can be seen in the unit test results.</param>
      <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">All elements in <paramref name="subset" /> are found in <paramref name="superset" />Â and are found in sufficient quantity.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.CollectionAssert.IsNotSubsetOf(System.Collections.ICollection,System.Collections.ICollection,System.String,System.Object[])">
      <summary>Verifies that the first collection is not a subset of the second collection. Displays a message if the assertion fails, and applies the specified formatting to it.</summary>
      <param name="subset">The collection not expected to be a subset of <paramref name="superset" />.</param>
      <param name="superset">The collection not expected to be a superset of <paramref name="subset" />.</param>
      <param name="message">A message to display if the assertion fails. This message can be seen in the unit test results.</param>
      <param name="parameters">An array of parameters to use when formatting <paramref name="message" />.</param>
      <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">All elements in <paramref name="subset" /> are found in <paramref name="superset" />Â and are found in sufficient quantity.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.CollectionAssert.IsSubsetOf(System.Collections.ICollection,System.Collections.ICollection)">
      <summary>Verifies that the first collection is a subset of the second collection.</summary>
      <param name="subset">The collection expected to be a subset of <paramref name="superset" />.</param>
      <param name="superset">The collection expected to be a superset of <paramref name="subset" />.</param>
      <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">An element in <paramref name="subset" /> is not found in <paramref name="superset" />Â or an element in <paramref name="subset" /> is not found in <paramref name="superset" /> in sufficient quantity.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.CollectionAssert.IsSubsetOf(System.Collections.ICollection,System.Collections.ICollection,System.String)">
      <summary>Verifies that the first collection is a subset of the second collection. Displays a message if the assertion fails.</summary>
      <param name="subset">The collection expected to be a subset of <paramref name="superset" />.</param>
      <param name="superset">The collection expected to be a superset of <paramref name="subset" />.</param>
      <param name="message">A message to display if the assertion fails. This message can be seen in the unit test results.</param>
      <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">An element in <paramref name="subset" /> is not found in <paramref name="superset" /> or an element in <paramref name="subset" /> is not found in <paramref name="superset" /> in sufficient quantity.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.CollectionAssert.IsSubsetOf(System.Collections.ICollection,System.Collections.ICollection,System.String,System.Object[])">
      <summary>Verifies that the first collection is a subset of the second collection. Displays a message if the assertion fails, and applies the specified formatting to it.</summary>
      <param name="subset">The collection expected to be a subset of <paramref name="superset" />.</param>
      <param name="superset">The collection expected to be a superset of <paramref name="subset" />.</param>
      <param name="message">A message to display if the assertion fails. This message can be seen in the unit test results.</param>
      <param name="parameters">An array of parameters to use when formatting <paramref name="message" />.</param>
      <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">An element in <paramref name="subset" /> is not found in <paramref name="superset" /> or an element in <paramref name="subset" /> is not found in <paramref name="superset" /> in sufficient quantity.</exception>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.UnitTesting.CssIterationAttribute">
      <summary>Represents the project iteration to which this test corresponds. This class cannot be inherited. </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.CssIterationAttribute.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.CssIterationAttribute" /> class. </summary>
      <param name="cssIteration">A string that identifies the corresponding project iteration.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.CssIterationAttribute.CssIteration">
      <summary>Gets the iteration identifier for the test.</summary>
      <returns>An iteration identifier.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.UnitTesting.CssProjectStructureAttribute">
      <summary>Represents the node in the team project hierarchy to which this test corresponds. </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.CssProjectStructureAttribute.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.CssProjectStructureAttribute" /> class. </summary>
      <param name="cssProjectStructure">A string that identifies the corresponding project feature.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.CssProjectStructureAttribute.CssProjectStructure">
      <summary>Gets the project feature identifier for the test.</summary>
      <returns>A project feature identifier.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.UnitTesting.DataAccessMethod">
      <summary>Specifies constants that indicate how data rows are accessed in data-driven testing. </summary>
    </member>
    <member name="F:Microsoft.VisualStudio.TestTools.UnitTesting.DataAccessMethod.Sequential">
      <summary>Rows are returned in a sequential order.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.TestTools.UnitTesting.DataAccessMethod.Random">
      <summary>Rows are returned in a random order.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.UnitTesting.DataSourceAttribute">
      <summary>Provides data source-specific information for data-driven testing. This class cannot be inherited.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.DataSourceAttribute.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.DataSourceAttribute" /> class.  This instance will be initialized with a data provider and connection string associated with the setting name.</summary>
      <param name="dataSourceSettingName">The name of a data source found in the &lt;microsoft.visualstudio.qualitytools&gt; section in the app.config file.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.DataSourceAttribute.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.DataSourceAttribute" /> class. This instance will be initialized with a connection string and table name.</summary>
      <param name="connectionString">Data provider-specific connection string. </param>
      <param name="tableName">The name of the data table.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.DataSourceAttribute.#ctor(System.String,System.String,System.String,Microsoft.VisualStudio.TestTools.UnitTesting.DataAccessMethod)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.DataSourceAttribute" /> class.  This instance will be initialized with a data provider, connection string, data table and data access method to access the data source.</summary>
      <param name="providerInvariantName">Invariant data provider name, such as System.Data.SqlClient.</param>
      <param name="connectionString">A data provider-specific connection string. </param>
      <param name="tableName">The name of the data table.</param>
      <param name="dataAccessMethod">Specifies the order to access data.  It takes a <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.DataAccessMethod" />.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.DataSourceAttribute.ConnectionString">
      <summary>Gets a value representing the connection string for the data source.</summary>
      <returns>The connection string used to access the data source.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.DataSourceAttribute.DataAccessMethod">
      <summary>Gets the method used to access the data source.</summary>
      <returns>One of the <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.DataAccessMethod" /> values. If the <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.DataSourceAttribute" /> is not initialized, this will return the default value <see cref="F:Microsoft.VisualStudio.TestTools.UnitTesting.DataAccessMethod.Random" />.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.DataSourceAttribute.DataSourceSettingName">
      <summary>Gets a value indicating the setting name used to identify data source connection information stored in a configuration file.</summary>
      <returns>The name of a data source found in the &lt;microsoft.visualstudio.qualitytools&gt; section in the app.config file.</returns>
    </member>
    <member name="F:Microsoft.VisualStudio.TestTools.UnitTesting.DataSourceAttribute.DefaultDataAccessMethod">
      <summary>Represents the default data access method. This field is read-only.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.TestTools.UnitTesting.DataSourceAttribute.DefaultProviderName">
      <summary>Represents the default data provider name. This field is read-only.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.DataSourceAttribute.ProviderInvariantName">
      <summary>Gets a value representing the data provider of the data source.</summary>
      <returns>The data provider name. If a data provider was not designated at object initialization, the default provider of System.Data.OleDb will be returned.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.DataSourceAttribute.TableName">
      <summary>Gets a value indicating the table name providing data.</summary>
      <returns>The table name providing data for the test.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.UnitTesting.DataSourceElement">
      <summary>Represents a data source element as an XML tag within a configuration file. </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.DataSourceElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.DataSourceElement" /> class.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.DataSourceElement.ConnectionString">
      <summary>Gets or sets the connection string setting element in the &lt;connectionStrings&gt; section in the app.config file.</summary>
      <returns>A connection string.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.DataSourceElement.DataAccessMethod">
      <summary>Gets or sets the data source access method element in the app.config file.</summary>
      <returns>The data source access method.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.DataSourceElement.DataTableName">
      <summary>Gets or sets the table name setting element in the app.config file.</summary>
      <returns>A table name.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.DataSourceElement.Name">
      <summary>Gets or sets the data source name setting element in the app.config file.</summary>
      <returns>A data source name.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.UnitTesting.DataSourceElementCollection">
      <summary>Represents an XML element that contains a collection of child <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.DataSourceElement" /> objects. </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.DataSourceElementCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.DataSourceElementCollection" /> class.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.DataSourceElementCollection.Add(Microsoft.VisualStudio.TestTools.UnitTesting.DataSourceElement)">
      <summary>Adds a data source element to <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.DataSourceElementCollection" />.</summary>
      <param name="element">The <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.DataSourceElement" /> to add to the collection.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.DataSourceElementCollection.Clear">
      <summary>Removes all data source element objects from the collection.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.DataSourceElementCollection.Item(System.Int32)">
      <summary>Gets or sets a <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.DataSourceElement" /> at the specified index location.</summary>
      <returns>A <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.DataSourceElement" /> object.</returns>
      <param name="index">The location of the <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.DataSourceElement" />.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.DataSourceElementCollection.Item(System.String)">
      <summary>Gets a <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.DataSourceElement" /> identified by name.</summary>
      <returns>A <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.DataSourceElement" /> object, or null if the <paramref name="name" /> key does not exist.</returns>
      <param name="name">The name of the <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.DataSourceElement" /> to return.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.DataSourceElementCollection.Remove(Microsoft.VisualStudio.TestTools.UnitTesting.DataSourceElement)">
      <summary>Removes a <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.DataSourceElement" /> from the collection.</summary>
      <param name="element">The element to remove from the collection.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.DataSourceElementCollection.Remove(System.String)">
      <summary>Removes a <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.DataSourceElement" /> from the collection.</summary>
      <param name="name">The name of the element to remove.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.UnitTesting.DeploymentItemAttribute">
      <summary>Used to specify deployment items such as files or directories for per-test deployment. This class cannot be inherited. </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.DeploymentItemAttribute.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.DeploymentItemAttribute" /> class. An object that is created with this constructor will be initialized with a path to a deployment item or directory.</summary>
      <param name="path">The relative or absolute path to the deployment item or directory to deploy. All items or directories will be deployed to the directory where the deployed test assemblies reside.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.DeploymentItemAttribute.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.DeploymentItemAttribute" /> class. An object that is created with this constructor will be initialized with a path to a deployment item and an output directory.</summary>
      <param name="path">The relative or absolute path to the deployment item or directory to deploy.</param>
      <param name="outputDirectory">The path to the output directory. This contains all items and directories identified by <paramref name="path" />. This directory will be relative to the directory that contains the deployed test assemblies.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.DeploymentItemAttribute.OutputDirectory">
      <summary>Gets a value that represents the path to the output directory.</summary>
      <returns>A value that represents the directory under the deployment directory that will contain the deployed files and directories.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.DeploymentItemAttribute.Path">
      <summary>Gets a value that represents the path to the deployment item.</summary>
      <returns>The path to the file or directory to deploy.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute">
      <summary>Used to specify the description of the test. This class cannot be inherited.  </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute" /> class.</summary>
      <param name="description">A short explanation of the test.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute.Description">
      <summary>Gets the description of the test.</summary>
      <returns>The test description.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.UnitTesting.ExpectedExceptionAttribute">
      <summary>Indicates that an exception is expected during test method execution. This class cannot be inherited. </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.ExpectedExceptionAttribute.#ctor(System.Type)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.ExpectedExceptionAttribute" /> class with an expected exception.</summary>
      <param name="exceptionType">An expected type of exception to be thrown by a method.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.ExpectedExceptionAttribute.#ctor(System.Type,System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.ExpectedExceptionAttribute" /> class with and expected exception type and a message that describes the exception.</summary>
      <param name="exceptionType">An expected type of exception to be thrown by a method.</param>
      <param name="noExceptionMessage"></param>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.ExpectedExceptionAttribute.AllowDerivedTypes"></member>
    <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.ExpectedExceptionAttribute.ExceptionType">
      <summary>Gets the expected exception type.</summary>
      <returns>A <see cref="T:System.Type" /> object.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.UnitTesting.ExpectedExceptionBaseAttribute">
      <summary>This is a base class for attributes that specify to expect an exception from a unit test.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.ExpectedExceptionBaseAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.ExpectedExceptionBaseAttribute" /> class.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.ExpectedExceptionBaseAttribute.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.ExpectedExceptionBaseAttribute" /> class.</summary>
      <param name="noExceptionMessage">If the test fails because an exception was not thrown, then this message is included in the test result.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.ExpectedExceptionBaseAttribute.NoExceptionMessage"></member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.ExpectedExceptionBaseAttribute.RethrowIfAssertException(System.Exception)"></member>
    <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.ExpectedExceptionBaseAttribute.TestContext"></member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.ExpectedExceptionBaseAttribute.Verify(System.Exception)">
      <param name="exception">The exception thrown by the unit test.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.UnitTesting.GenericParameterHelper">
      <summary>This class is a placeholder for use with generics. It helps you test generic types by letting you pass non-specific type arguments.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.GenericParameterHelper.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.GenericParameterHelper" /> class. This constructor initializes the <see cref="P:Microsoft.VisualStudio.TestTools.UnitTesting.GenericParameterHelper.Data" /> property to a random value.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.GenericParameterHelper.#ctor(System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.GenericParameterHelper" /> class. This constructor initializes the <see cref="P:Microsoft.VisualStudio.TestTools.UnitTesting.GenericParameterHelper.Data" /> property to a user specified value.</summary>
      <param name="data">The initial value for the <see cref="P:Microsoft.VisualStudio.TestTools.UnitTesting.GenericParameterHelper.Data" /> property.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.GenericParameterHelper.Clone">
      <summary>Creates a new <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.GenericParameterHelper" /> that is a copy of the current instance.</summary>
      <returns>A new <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.GenericParameterHelper" /> that is a copy of the current instance.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.GenericParameterHelper.CompareTo(System.Object)">
      <summary>Compares the current instance with another object of the same type and returns an integer that indicates whether the current instance precedes, follows, or occurs in the same position in the sort order as the other object.</summary>
      <returns>A 32-bit signed integer that indicates the relative order of the objects being compared. The return value has these meanings:Less than zeroThis instance is less than <paramref name="obj" />.ZeroThis instance is equal to <paramref name="obj" />.Greater than zeroThis instance is greater than <paramref name="obj" />.</returns>
      <param name="obj">A <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.GenericParameterHelper" /> to compare with the current instance.</param>
      <exception cref="NotSupportedException">
        <paramref name="obj" /> is not of type <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.GenericParameterHelper" />.</exception>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.GenericParameterHelper.Data">
      <summary>Gets or sets the Data property for this instance.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.GenericParameterHelper.Equals(System.Object)">
      <summary>Determines whether the specified <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.GenericParameterHelper" /> object is equal to the current <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.GenericParameterHelper" /> object.</summary>
      <returns>true if the specified <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.GenericParameterHelper" /> object is equal to the current <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.GenericParameterHelper" /> object; otherwise, false.</returns>
      <param name="obj">The <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.GenericParameterHelper" /> object to compare with the current <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.GenericParameterHelper" /> object.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.GenericParameterHelper.GetEnumerator">
      <summary>Returns an enumerator whose length is derived from the <see cref="P:Microsoft.VisualStudio.TestTools.UnitTesting.GenericParameterHelper.Data" /> property.</summary>
      <returns>An enumerator whose length is derived from the <see cref="P:Microsoft.VisualStudio.TestTools.UnitTesting.GenericParameterHelper.Data" /> property.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.GenericParameterHelper.GetHashCode">
      <summary>Returns the hash code for this <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.GenericParameterHelper" /> object.</summary>
      <returns>A 32-bit signed integer hash code for this <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.GenericParameterHelper" /> object.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.UnitTesting.HostTypeAttribute">
      <summary>Used to specify the type of host that this unit test will run in. This class cannot be inherited.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.HostTypeAttribute.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.HostTypeAttribute" /> class. This is instantiated with an argument that specifies the type of host that this unit test will run in.</summary>
      <param name="hostType">The type of host that this unit test will run in.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.HostTypeAttribute.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.HostTypeAttribute" /> class. This is instantiated with an argument that specifies the type of host that this unit test will run in, and custom data for the host adapter.</summary>
      <param name="hostType">The type of host that this unit test will run in.</param>
      <param name="hostData">Custom data for the host adapter.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.HostTypeAttribute.HostData">
      <summary>Gets custom data for the host adapter.</summary>
      <returns>Custom data for the host adapter.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.HostTypeAttribute.HostType">
      <summary>Gets a value that represents the type of host.</summary>
      <returns>A value that represents the type of host.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.UnitTesting.IgnoreAttribute">
      <summary>Indicates that a specific test should not be run.  This class cannot be inherited.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.IgnoreAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.IgnoreAttribute" /> class. </summary>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.UnitTesting.InternalTestFailureException">
      <summary>The exception that is thrown to indicate an internal failure for a test.  </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.InternalTestFailureException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.InternalTestFailureException" /> class without arguments.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.InternalTestFailureException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.InternalTestFailureException" /> class with serialized data. </summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
      <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="info" /> is null</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.InternalTestFailureException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.InternalTestFailureException" /> class with a specified error message. </summary>
      <param name="msg">The error message string.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.InternalTestFailureException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.InternalTestFailureException" /> class with a specified error message and a reference to the inner exception that is the cause of this exception. </summary>
      <param name="msg">The error message that explains the reason for the exception. </param>
      <param name="ex">The exception that is the cause of the current exception.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.UnitTesting.ITestMethodInvoker">
      <summary>Interface for invoking test method body.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.ITestMethodInvoker.Invoke(System.Object[])"></member>
    <member name="T:Microsoft.VisualStudio.TestTools.UnitTesting.OnTestStoppingEventArgs"></member>
    <member name="T:Microsoft.VisualStudio.TestTools.UnitTesting.OwnerAttribute">
      <summary>Used to specify the person responsible for maintaining, running, and/or debugging the test. This class cannot be inherited.  </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.OwnerAttribute.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.OwnerAttribute" /> class that uses an owner name.</summary>
      <param name="owner">The owner of the test.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.OwnerAttribute.Owner">
      <summary>Gets the owner of the test.</summary>
      <returns>The owner of the test.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.UnitTesting.PriorityAttribute">
      <summary>Used to specify the priority of a unit test.  This class cannot be inherited.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.PriorityAttribute.#ctor(System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.PriorityAttribute" /> class that has a priority value. </summary>
      <param name="priority">An integer that represents the priority value for the test.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.PriorityAttribute.Priority">
      <summary>Gets the priority value.</summary>
      <returns>An integer that represents the priority value for the test.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject">
      <summary>Allows test code to call methods and properties on the code under test that would be inaccessible because they are not public.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject.#ctor(System.Object)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject" /> class that creates the wrapper for the specified object.</summary>
      <param name="obj">The object to wrap.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="obj" /> is null</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject.#ctor(System.Object,Microsoft.VisualStudio.TestTools.UnitTesting.PrivateType)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject" /> class that creates the wrapper for the specified object. </summary>
      <param name="obj">The object to wrap.</param>
      <param name="type">The wrapped object type.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="type" /> is null</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject.#ctor(System.Object,System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject" /> class that creates the wrapper for the specified object.  </summary>
      <param name="obj">The object to wrap. This serves as starting point to reach the private members.</param>
      <param name="memberToAccess">The dereferencing string that points to the object to be retrieved. This takes the form of "objectX.objectY.objectZ".</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="memberToAccess" /> is a zero-length string</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="obj" /> is null or <paramref name="memberToAccess" /> is null</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject.#ctor(System.String,System.String,System.Object[])">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject" /> class. This creates the object of the specified type and wraps it in the private object.</summary>
      <param name="assemblyName">Name of the assembly that contains the type.</param>
      <param name="typeName">Fully qualified name of the type.</param>
      <param name="args">Arguments to pass to the constructor of the object.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="assemblyName" /> or <paramref name="typeName" /> is null.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject.#ctor(System.String,System.String,System.Type[],System.Object[])">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject" /> class. This creates an object of the specified type and wraps it in the private object.</summary>
      <param name="assemblyName">Name of the assembly that contains the type.</param>
      <param name="typeName">Fully qualified name of the type.</param>
      <param name="parameterTypes">An array of <see cref="T:System.Type" /> objects representing the number, order, and type of the parameters for constructing the object.</param>
      <param name="args">The arguments to define the object.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="assemblyName" /> or <paramref name="typeName" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="parameterTypes" /> is multidimensional.-or-A constructor cannot be found to match the parameters specified in <see cref="M:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject.#ctor(System.Type,System.Type[],System.Object[])" />. </exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject.#ctor(System.Type,System.Object[])">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject" /> class that creates the wrapper for the specified object.</summary>
      <param name="type">The wrapped object type.</param>
      <param name="args">The arguments to define the object.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="type" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="type" /> is not a RuntimeType.</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="type" /> cannot be a <see cref="T:System.Reflection.Emit.TypeBuilder" />.-or-Creation of <see cref="T:System.TypedReference" />, <see cref="T:System.ArgIterator" />, and <see cref="T:System.RuntimeArgumentHandle" /> types is not supported.</exception>
      <exception cref="T:System.Reflection.TargetInvocationException">The constructor being called throws an exception.</exception>
      <exception cref="T:System.Runtime.InteropServices.COMException">
        <paramref name="type" /> is a COM object but the class identifier used to obtain the type is invalid, or the identified class is not registered.</exception>
      <exception cref="T:System.TypeLoadException">
        <paramref name="type" /> is not a valid type.</exception>
      <exception cref="T:System.MissingMethodException">No matching public constructor was found to match the <paramref name="type" /> and <paramref name="args" />.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject.#ctor(System.Type,System.Type[],System.Object[])">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject" /> class. </summary>
      <param name="type">The wrapped object type.</param>
      <param name="parameterTypes">An array of <see cref="T:System.Type" /> objects representing the number, order, and type of the parameters for constructing the object.</param>
      <param name="args">The arguments to define the object.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="type" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="parameterTypes" /> is multidimensional.-or-A constructor cannot be found to match the parameters specified in <see cref="M:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject.#ctor(System.Type,System.Type[],System.Object[])" />. </exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject.Equals(System.Object)">
      <summary>Returns a value that indicates whether two private objects are encapsulating the same target object.</summary>
      <returns>true if the objects are equal; otherwise, false.</returns>
      <param name="obj">The object to compare.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject.GetArrayElement(System.String,System.Int32[])">
      <summary>Gets the array element by using an array of subscripts for each dimension.</summary>
      <returns>An object that represents the array element.</returns>
      <param name="name">The variable name of array to get.</param>
      <param name="indices">An array that represents the location of the element to get.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> is null.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject.GetArrayElement(System.String,System.Reflection.BindingFlags,System.Int32[])">
      <summary>Gets the array element by using an array of subscripts for each dimension.</summary>
      <returns>An object representing the array element.</returns>
      <param name="name">The variable name of array to get.</param>
      <param name="bindingFlags"></param>
      <param name="indices">An array representing the location of the element to get.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> is null.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject.GetField(System.String)">
      <summary>Gets a value from a named field, based on the name.</summary>
      <returns>The value set for the <paramref name="name" /> field.</returns>
      <param name="name">The name of the private field to get.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> is null or empty.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject.GetField(System.String,System.Reflection.BindingFlags)">
      <summary>Gets a value from a named field, based on the name and lookup mask.</summary>
      <returns>The value set for the <paramref name="name" /> field.</returns>
      <param name="name">The name of the private field to get.</param>
      <param name="bindingFlags"></param>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> is null or empty.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject.GetFieldOrProperty(System.String)">
      <summary>Gets a value of a wrapped field or property based on the name.</summary>
      <returns>The value set for the <paramref name="name" /> field or property.</returns>
      <param name="name">The name of the private field or property to get.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject.GetFieldOrProperty(System.String,System.Reflection.BindingFlags)">
      <summary>Gets a value of a wrapped field or property based on the name.</summary>
      <returns>The value set for the <paramref name="name" /> field or property.</returns>
      <param name="name">The name of the private field or property to get.</param>
      <param name="bindingFlags"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject.GetHashCode">
      <summary>Gets the hash code of the wrapped object.</summary>
      <returns>An integer that represents the hash code of the wrapped object.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject.GetProperty(System.String,System.Object[])">
      <summary>Gets a property for a wrapped object identified by name.</summary>
      <returns>An object that contains the value of the property identified by <paramref name="name" />.</returns>
      <param name="name">The name of property to get.</param>
      <param name="args">An array that contains the arguments to pass to the member to invoke.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> is null or empty.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject.GetProperty(System.String,System.Reflection.BindingFlags,System.Object[])">
      <summary>Gets a property for a wrapped object identified by name with binding flags.</summary>
      <returns>An object that contains the value of the property identified by <paramref name="name" />.</returns>
      <param name="name">The name of property to get.</param>
      <param name="bindingFlags"></param>
      <param name="args">An array that contains the arguments to pass to the member to invoke.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> is null or empty.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject.GetProperty(System.String,System.Reflection.BindingFlags,System.Type[],System.Object[])">
      <summary>Gets an indexed property for a wrapped object identified by name.</summary>
      <returns>An object that contains the value of the property identified by <paramref name="name" />.</returns>
      <param name="name">The name of property to get.</param>
      <param name="bindingFlags"></param>
      <param name="parameterTypes">An array of <see cref="T:System.Type" /> objects that represents the number, order, and type of the parameters for the indexed property to get.</param>
      <param name="args">An array that contains the arguments to pass to the member to invoke.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> is null or empty.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject.GetProperty(System.String,System.Type[],System.Object[])">
      <summary>Gets a property for a wrapped object identified by name.</summary>
      <returns>An object that contains the value of the property identified by <paramref name="name" />.</returns>
      <param name="name">The name of property to get.</param>
      <param name="parameterTypes">An array of <see cref="T:System.Type" /> objects representing the number, order, and type of the parameters for the indexed property to get.</param>
      <param name="args">An array that contains the arguments to pass to the member to invoke.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> is null or empty.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject.Invoke(System.String,System.Object[])">
      <summary>Used to access the members of the private object.</summary>
      <returns>An object that represents the return value of a private member.</returns>
      <param name="name">The name of the member to invoke.</param>
      <param name="args">Any arguments that the member requires.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject.Invoke(System.String,System.Object[],System.Globalization.CultureInfo)">
      <summary>Used to access the members of the private object.</summary>
      <returns>An object that represents the return value of the invoked member.</returns>
      <param name="name">The name of the member to invoke.</param>
      <param name="args">Any arguments that the member requires.</param>
      <param name="culture">The <see cref="T:System.Globalization.CultureInfo" /> object that represents the globalization locale to use, which might be necessary for locale-specific conversions, such as converting a numeric String to a Double.-or-null to use the current thread's <see cref="T:System.Globalization.CultureInfo" />.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject.Invoke(System.String,System.Reflection.BindingFlags,System.Object[])">
      <summary>Used to access the members of the private object.</summary>
      <returns>An object that represents the return value of a private member.</returns>
      <param name="name">The name of the member to invoke.</param>
      <param name="bindingFlags"></param>
      <param name="args">Any arguments that the member requires.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject.Invoke(System.String,System.Reflection.BindingFlags,System.Object[],System.Globalization.CultureInfo)">
      <summary>Used to access the members of the private object.</summary>
      <returns>An object representing the return value of the invoked member.</returns>
      <param name="name">The name of the member to invoke.</param>
      <param name="bindingFlags"></param>
      <param name="args">Any arguments that the member requires.</param>
      <param name="culture">The <see cref="T:System.Globalization.CultureInfo" /> object that represents the globalization locale to use, which might be necessary for locale-specific conversions, such as converting a numeric String to a Double.-or-null to use the current thread's <see cref="T:System.Globalization.CultureInfo" />.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject.Invoke(System.String,System.Reflection.BindingFlags,System.Type[],System.Object[])">
      <summary>Used to access the members of the private object.</summary>
      <returns>An object that represents the return value of the invoked member.</returns>
      <param name="name">The name of the member to invoke.</param>
      <param name="bindingFlags"></param>
      <param name="parameterTypes">An array of <see cref="T:System.Type" /> objects that represents the number, order, and type of the parameters for the method to access.-or-An empty array of the type <see cref="T:System.Type" /> (that is, Type[] types = new Type[0]) to get a method that takes no parameters.</param>
      <param name="args">Any arguments that the member requires.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject.Invoke(System.String,System.Reflection.BindingFlags,System.Type[],System.Object[],System.Globalization.CultureInfo)">
      <summary>Used to access the members of the private object.</summary>
      <returns>An object representing the return value of the invoked member.</returns>
      <param name="name">The name of the member to invoke.</param>
      <param name="bindingFlags"></param>
      <param name="parameterTypes">An array of <see cref="T:System.Type" /> objects that represents the number, order, and type of the parameters for the method to access.-or-An empty array of the type <see cref="T:System.Type" /> (that is, Type[] types = new Type[0]) to get a method that takes no parameters.</param>
      <param name="args">Any arguments that the member requires.</param>
      <param name="culture">The <see cref="T:System.Globalization.CultureInfo" /> object that represents the globalization locale to use, which might be necessary for locale-specific conversions, such as converting a numeric String to a Double.-or-null to use the current thread's <see cref="T:System.Globalization.CultureInfo" />.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject.Invoke(System.String,System.Reflection.BindingFlags,System.Type[],System.Object[],System.Globalization.CultureInfo,System.Type[])">
      <summary>Used to access generic members of a private object.</summary>
      <param name="name">The name of the member to invoke.</param>
      <param name="bindingFlags"></param>
      <param name="parameterTypes">An array of <see cref="T:System.Type" /> objects that represents the number, order, and type of the parameters for the method to access.-or-An empty array of the type <see cref="T:System.Type" /> (that is, Type[] types = new Type[0]) to get a method that takes no parameters.</param>
      <param name="args">Any arguments that the member requires.</param>
      <param name="culture">The <see cref="T:System.Globalization.CultureInfo" /> object that represents the globalization locale to use, which might be necessary for locale-specific conversions, such as converting a numeric String to a Double.-or-null to use the current thread's <see cref="T:System.Globalization.CultureInfo" />.</param>
      <param name="typeArguments">An array of type arguments to use when invoking a generic method.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject.Invoke(System.String,System.Type[],System.Object[])">
      <summary>Used to access the methods of the private object.</summary>
      <returns>An object that represents the return value of the invoked method.</returns>
      <param name="name">The name of the member to invoke.</param>
      <param name="parameterTypes">An array of <see cref="T:System.Type" /> objects that represents the number, order, and type of the parameters for the method to access.-or-An empty array of the type <see cref="T:System.Type" /> (that is, Type[] types = new Type[0]) to get a method that takes no parameters.</param>
      <param name="args">Any arguments that the member requires.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject.Invoke(System.String,System.Type[],System.Object[],System.Globalization.CultureInfo)">
      <summary>Used to access the members of the private object.</summary>
      <returns>An object representing the return value of the invoked member.</returns>
      <param name="name">The name of the member to invoke.</param>
      <param name="parameterTypes">An array of <see cref="T:System.Type" /> objects that represents the number, order, and type of the parameters for the method to access.-or-An empty array of the type <see cref="T:System.Type" /> (that is, Type[] types = new Type[0]) to get a method that takes no parameters.</param>
      <param name="args">Any arguments that the member requires.</param>
      <param name="culture">The <see cref="T:System.Globalization.CultureInfo" /> object that represents the globalization locale to use, which might be necessary for locale-specific conversions, such as converting a numeric String to a Double.-or-null to use the current thread's <see cref="T:System.Globalization.CultureInfo" />.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject.Invoke(System.String,System.Type[],System.Object[],System.Type[])">
      <summary>Used to access generic members of a private object. </summary>
      <param name="name">The name of the member to invoke.</param>
      <param name="parameterTypes">An array of <see cref="T:System.Type" /> objects that represents the number, order, and type of the parameters for the method to access.-or-An empty array of the type <see cref="T:System.Type" /> (that is, Type[] types = new Type[0]) to get a method that takes no parameters.</param>
      <param name="args">Any arguments that the member requires.</param>
      <param name="typeArguments">An array of type arguments to use when invoking a generic method.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject.RealType">
      <summary>Gets the type of the underlying object.</summary>
      <returns>A <see cref="T:System.Type" /> object.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject.SetArrayElement(System.String,System.Object,System.Int32[])">
      <summary>Sets the array element by using an array of subscripts for each dimension.</summary>
      <param name="name">The variable name of array to set.</param>
      <param name="value">The value to assign to the array element.</param>
      <param name="indices">An array that represents the location of the element to set.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject.SetArrayElement(System.String,System.Reflection.BindingFlags,System.Object,System.Int32[])">
      <summary>Sets the array element by using an array of subscripts for each dimension.</summary>
      <param name="name">The variable name of array to set.</param>
      <param name="bindingFlags"></param>
      <param name="value">The value to assign to the array element.</param>
      <param name="indices">An array that represents the location of the element to set.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject.SetField(System.String,System.Object)">
      <summary>Sets a value for the field of the wrapped object, identified by name.</summary>
      <param name="name">The name of the field to set a value.</param>
      <param name="value">The value to set.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> is null or empty.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject.SetField(System.String,System.Reflection.BindingFlags,System.Object)">
      <summary>Sets a value for the field of the wrapped object, identified by name.</summary>
      <param name="name">The name of the field to set a value.</param>
      <param name="bindingFlags"></param>
      <param name="value">The value to set.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> is null or empty.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject.SetFieldOrProperty(System.String,System.Object)">
      <summary>Sets a value of a wrapped field or property based on the name.</summary>
      <param name="name">The name of the private field or property to set.</param>
      <param name="value">The value to set for <paramref name="name" />.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject.SetFieldOrProperty(System.String,System.Reflection.BindingFlags,System.Object)">
      <summary>Sets a value of a wrapped field or property based on the name.</summary>
      <param name="name">The name of the private field or property to set.</param>
      <param name="bindingFlags"></param>
      <param name="value">The value to set for <paramref name="name" />.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject.SetProperty(System.String,System.Object,System.Object[])">
      <summary>Sets a property for a wrapped object identified by name.</summary>
      <param name="name">The name of property to invoke.</param>
      <param name="value">The value to set the property identified by <paramref name="name" />.</param>
      <param name="args">An array that contains the arguments to pass to the property to invoke.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> is null or empty.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject.SetProperty(System.String,System.Reflection.BindingFlags,System.Object,System.Object[])">
      <summary>Sets a property for a wrapped object identified by name with binding flags.</summary>
      <param name="name">The name of property to invoke.</param>
      <param name="bindingFlags"></param>
      <param name="value">The value to set the property identified by <paramref name="name" />.</param>
      <param name="args">An array that contains the arguments to pass to the property to invoke.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> is null or empty.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject.SetProperty(System.String,System.Reflection.BindingFlags,System.Object,System.Type[],System.Object[])">
      <summary>Sets an indexed property for a wrapped object identified by name.</summary>
      <param name="name">The name of property to invoke.</param>
      <param name="bindingFlags"></param>
      <param name="value">The value to set the property identified by <paramref name="name" />.</param>
      <param name="parameterTypes">An array of <see cref="T:System.Type" /> objects that represents the number, order, and type of the parameters for the indexed property to get.</param>
      <param name="args">An array that contains the arguments to pass to the property to invoke.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> is null or empty.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject.SetProperty(System.String,System.Type[],System.Object,System.Object[])">
      <summary>Sets an indexed property for a wrapped object identified by name.</summary>
      <param name="name">The name of property to invoke.</param>
      <param name="parameterTypes">An array of <see cref="T:System.Type" /> objects that represents the number, order, and type of the parameters for the indexed property to get.</param>
      <param name="value">The value to set the property identified by <paramref name="name" />.</param>
      <param name="args">An array that contains the arguments to pass to the property to invoke.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> is null or empty.</exception>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject.Target">
      <summary>Gets or sets the wrapped object.</summary>
      <returns>The wrapped object.</returns>
      <exception cref="T:System.ArgumentNullException">Try to set this property to null.</exception>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateType">
      <summary>Represents the type of a private class that gives access to private static implementations.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateType.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateType" /> class. </summary>
      <param name="assemblyName">assembly name</param>
      <param name="typeName">fully qualified name of the type</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="assemblyName" /> or <paramref name="typeName" /> is null or empty.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateType.#ctor(System.Type)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateType" /> class with the type information.</summary>
      <param name="type">The wrapped <see cref="T:System.Type" /> to create.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="type" /> is null.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateType.GetStaticArrayElement(System.String,System.Int32[])">
      <summary>Gets a static array element contained in the wrapped type.</summary>
      <returns>An object that represents an element of <paramref name="name" /> at the location specified with <paramref name="indices" />.</returns>
      <param name="name">The name of the array</param>
      <param name="indices">An array of subscripts for identifying the element to get.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateType.GetStaticArrayElement(System.String,System.Reflection.BindingFlags,System.Int32[])">
      <summary>Gets a static array element contained in the wrapped type.</summary>
      <returns>An object that represents an element of <paramref name="name" /> at the location specified with <paramref name="indices" />.</returns>
      <param name="name">The name of the array</param>
      <param name="bindingFlags"></param>
      <param name="indices">An array of subscripts for identifying the element to get.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateType.GetStaticField(System.String)">
      <summary>Gets a static field contained in the wrapped type.</summary>
      <returns>An object that represents the value of the static field.</returns>
      <param name="name">The name of the static field.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateType.GetStaticField(System.String,System.Reflection.BindingFlags)">
      <summary>Gets a static field contained in the wrapped type.</summary>
      <returns>An object that represents the value of the static field.</returns>
      <param name="name">The name of the static field.</param>
      <param name="bindingFlags"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateType.GetStaticFieldOrProperty(System.String)">
      <summary>Gets a value of a static field or property in a wrapped type based on the name.</summary>
      <returns>The value set for the <paramref name="name" /> field or property.</returns>
      <param name="name">The name of the static field or property to get.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateType.GetStaticFieldOrProperty(System.String,System.Reflection.BindingFlags)">
      <summary>Gets a value of a static field or property in a wrapped type based on the name.</summary>
      <returns>The value set for the <paramref name="name" /> field or property.</returns>
      <param name="name">The name of the static field or property to get.</param>
      <param name="bindingFlags"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateType.GetStaticProperty(System.String,System.Object[])">
      <summary>Gets a static property contained in the wrapped type.</summary>
      <returns>An object that represents the value of the static property.</returns>
      <param name="name">The name of the static property.</param>
      <param name="args">An array that contains the arguments to pass to the member to invoke.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateType.GetStaticProperty(System.String,System.Reflection.BindingFlags,System.Object[])">
      <summary>Gets a static property contained in the wrapped type.</summary>
      <returns>An object that represents the value of the static property.</returns>
      <param name="name">The name of the static property.</param>
      <param name="bindingFlags"></param>
      <param name="args">An array that contains the arguments to pass to the member to invoke.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateType.GetStaticProperty(System.String,System.Reflection.BindingFlags,System.Type[],System.Object[])">
      <summary>Gets a static indexed property contained in the wrapped type.</summary>
      <returns>An object that represents the value of the static indexed property.</returns>
      <param name="name">The name of the static property.</param>
      <param name="bindingFlags"></param>
      <param name="parameterTypes">An array of <see cref="T:System.Type" /> objects that represents the number, order, and type of the parameters for the indexed property to get.-or- An empty array of the type <see cref="T:System.Type" /> (that is, Type[] types = new Type[0]) to get a property that is not indexed.</param>
      <param name="args">An array that contains the arguments to pass to the member to invoke.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateType.InvokeStatic(System.String,System.Object[])">
      <summary>Invokes static methods on the <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateType" />.</summary>
      <returns>An object that represents the invoked static method's return value, if any.</returns>
      <param name="name">The name of the method to invoke.</param>
      <param name="args">Any array of arguments to pass</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> is null.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateType.InvokeStatic(System.String,System.Object[],System.Globalization.CultureInfo)">
      <summary>Invokes static methods on the <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateType" />.</summary>
      <returns>An object that represents the invoked static method's return value, if any.</returns>
      <param name="name">The name of the method to invoke.</param>
      <param name="args">Any array of arguments to pass</param>
      <param name="culture">The <see cref="T:System.Globalization.CultureInfo" /> object that represents the globalization locale to use, which might be necessary for locale-specific conversions, such as converting a numeric String to a Double.-or-null to use the current thread's <see cref="T:System.Globalization.CultureInfo" />.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> is null.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateType.InvokeStatic(System.String,System.Reflection.BindingFlags,System.Object[])">
      <summary>Invokes static methods on the <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateType" />.</summary>
      <returns>An object that represents the invoked static method's return value, if any.</returns>
      <param name="name">The name of the method to invoke.</param>
      <param name="bindingFlags"></param>
      <param name="args">Any array of arguments to pass</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> is null.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateType.InvokeStatic(System.String,System.Reflection.BindingFlags,System.Object[],System.Globalization.CultureInfo)">
      <summary>Invokes static methods on the <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateType" />.</summary>
      <returns>An object representing the invoked static method's return value, if any.</returns>
      <param name="name">The name of the method to invoke.</param>
      <param name="bindingFlags"></param>
      <param name="args">An array of arguments to pass.</param>
      <param name="culture">The <see cref="T:System.Globalization.CultureInfo" /> object that represents the globalization locale to use, which might be necessary for locale-specific conversions, such as converting a numeric String to a Double.-or-null to use the current thread's <see cref="T:System.Globalization.CultureInfo" />.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> is null.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateType.InvokeStatic(System.String,System.Reflection.BindingFlags,System.Type[],System.Object[])">
      <summary>Invokes static methods on the <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateType" />.</summary>
      <returns>An object that represents the invoked static method's return value, if any.</returns>
      <param name="name">The name of the method to invoke.</param>
      <param name="bindingFlags"></param>
      <param name="parameterTypes">An array of <see cref="T:System.Type" /> objects that represents the number, order, and type of the parameters for the method.-or- An empty array of the type Type, that is, Type[] types = new Type[0] to get a method that takes no parameters.</param>
      <param name="args">An array of arguments to pass.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> is null.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateType.InvokeStatic(System.String,System.Reflection.BindingFlags,System.Type[],System.Object[],System.Globalization.CultureInfo)">
      <summary>Invokes static methods on the <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateType" />.</summary>
      <returns>An object representing the invoked static method's return value, if any.</returns>
      <param name="name">The name of the method to invoke.</param>
      <param name="bindingFlags"></param>
      <param name="parameterTypes">An array of <see cref="T:System.Type" /> objects that represents the number, order, and type of the parameters for the method.-or- An empty array of the type Type, that is, Type[] types = new Type[0] to get a method that takes no parameters.</param>
      <param name="args">An array of arguments to pass.</param>
      <param name="culture">The <see cref="T:System.Globalization.CultureInfo" /> object that represents the globalization locale to use, which might be necessary for locale-specific conversions, such as converting a numeric String to a Double.-or-null to use the current thread's <see cref="T:System.Globalization.CultureInfo" />.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> is null.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateType.InvokeStatic(System.String,System.Reflection.BindingFlags,System.Type[],System.Object[],System.Globalization.CultureInfo,System.Type[])">
      <summary>Invokes static methods on the <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateType" />.</summary>
      <param name="name">The name of the method to invoke.</param>
      <param name="bindingFlags"></param>
      <param name="parameterTypes">An array of <see cref="T:System.Type" /> objects that represents the number, order, and type of the parameters for the method.-or- An empty array of the type Type, that is, Type[] types = new Type[0] to get a method that takes no parameters.</param>
      <param name="args">An array of arguments to pass.</param>
      <param name="culture">The <see cref="T:System.Globalization.CultureInfo" /> object that represents the globalization locale to use, which might be necessary for locale-specific conversions, such as converting a numeric String to a Double.-or-null to use the current thread's <see cref="T:System.Globalization.CultureInfo" />.</param>
      <param name="typeArguments">An array of type arguments to use when invoking a generic method.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateType.InvokeStatic(System.String,System.Type[],System.Object[])">
      <summary>Invokes static methods on the <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateType" />.</summary>
      <returns>An object that represents the invoked static method's return value, if any.</returns>
      <param name="name">The name of the method to invoke.</param>
      <param name="parameterTypes">An array of <see cref="T:System.Type" /> objects that represents the number, order, and type of the parameters for the method.-or- An empty array of the type Type, that is, Type[] types = new Type[0] to get a method that takes no parameters.</param>
      <param name="args">An array of arguments to pass</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> is null.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateType.InvokeStatic(System.String,System.Type[],System.Object[],System.Globalization.CultureInfo)">
      <summary>Invokes static methods on the <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateType" />.</summary>
      <returns>An object that represents the invoked static method's return value, if any.</returns>
      <param name="name">The name of the method to invoke.</param>
      <param name="parameterTypes">An array of <see cref="T:System.Type" /> objects that represents the number, order, and type of the parameters for the method.-or- An empty array of the type Type, that is, Type[] types = new Type[0] to get a method that takes no parameters.</param>
      <param name="args">An array of arguments to pass.</param>
      <param name="culture">The <see cref="T:System.Globalization.CultureInfo" /> object that represents the globalization locale to use, which might be necessary for locale-specific conversions, such as converting a numeric String to a Double.-or-null to use the current thread's <see cref="T:System.Globalization.CultureInfo" />.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> is null.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateType.InvokeStatic(System.String,System.Type[],System.Object[],System.Type[])">
      <summary>Invokes static methods on the <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateType" />.</summary>
      <param name="name">The name of the method to invoke.</param>
      <param name="parameterTypes">An array of <see cref="T:System.Type" /> objects that represents the number, order, and type of the parameters for the method.-or- An empty array of the type Type, that is, Type[] types = new Type[0] to get a method that takes no parameters.</param>
      <param name="args">An array of arguments to pass.</param>
      <param name="typeArguments">An array of type arguments to use when invoking a generic method.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateType.ReferencedType">
      <summary>Gets the <see cref="T:System.Type" /> representing the <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateType" />.</summary>
      <returns>A <see cref="T:System.Type" /> object.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateType.SetStaticArrayElement(System.String,System.Object,System.Int32[])">
      <summary>Sets a static array element contained in the wrapped type.</summary>
      <param name="name">The name of the array</param>
      <param name="value">The value to set the element identified by <paramref name="indices" />.</param>
      <param name="indices">An array of subscripts for identifying the element to set.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateType.SetStaticArrayElement(System.String,System.Reflection.BindingFlags,System.Object,System.Int32[])">
      <summary>Sets a static array element contained in the wrapped type.</summary>
      <param name="name">The name of the array</param>
      <param name="bindingFlags"></param>
      <param name="value">The value to set the element identified by <paramref name="indices" />.</param>
      <param name="indices">An array of subscripts for identifying the element to set.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateType.SetStaticField(System.String,System.Object)">
      <summary>Sets a static field contained in the wrapped type.</summary>
      <param name="name">The name of the static field.</param>
      <param name="value">The value to set to the static field.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateType.SetStaticField(System.String,System.Reflection.BindingFlags,System.Object)">
      <summary>Sets a static field contained in the wrapped type.</summary>
      <param name="name">The name of the static field.</param>
      <param name="bindingFlags"></param>
      <param name="value">The value to set to the static field.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateType.SetStaticFieldOrProperty(System.String,System.Object)">
      <summary>Sets a static field or property contained in the wrapped type.</summary>
      <param name="name">The name of the static field or property.</param>
      <param name="value">The value to set to the static field or property.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateType.SetStaticFieldOrProperty(System.String,System.Reflection.BindingFlags,System.Object)">
      <summary>Sets a static field or property contained in the wrapped type.</summary>
      <param name="name">The name of the static field or property.</param>
      <param name="bindingFlags"></param>
      <param name="value">The value to set to the static field or property.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateType.SetStaticProperty(System.String,System.Object,System.Object[])">
      <summary>Sets a static property contained in the wrapped type.</summary>
      <param name="name">The name of the static property.</param>
      <param name="value">The value to set the static property.</param>
      <param name="args">An array that contains the arguments to pass to the member to invoke.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateType.SetStaticProperty(System.String,System.Object,System.Type[],System.Object[])">
      <summary>Sets a static property contained in the wrapped type.</summary>
      <param name="name">The name of the static property.</param>
      <param name="value">The value to set the static property.</param>
      <param name="parameterTypes">An array of <see cref="T:System.Type" /> objects that represents the number, order, and type of the parameters for the indexed property to set.-or-An empty array of the type <see cref="T:System.Type" />, that is, Type[] types = new Type[0] to set a property that is not indexed.</param>
      <param name="args">An array that contains the arguments to pass to the member to invoke.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateType.SetStaticProperty(System.String,System.Reflection.BindingFlags,System.Object,System.Object[])">
      <summary>Sets a static property contained in the wrapped type.</summary>
      <param name="name">The name of the static property.</param>
      <param name="bindingFlags"></param>
      <param name="value">The value to set the static property.</param>
      <param name="args">An array that contains the arguments to pass to the member to invoke.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateType.SetStaticProperty(System.String,System.Reflection.BindingFlags,System.Object,System.Type[],System.Object[])">
      <summary>Sets a static property contained in the wrapped type.</summary>
      <param name="name">The name of the static property.</param>
      <param name="bindingFlags"></param>
      <param name="value">The value to set the static property.</param>
      <param name="parameterTypes">An array of <see cref="T:System.Type" /> objects that represents the number, order, and type of the parameters for the indexed property to set.-or- An empty array of the type <see cref="T:System.Type" />, that is, Type[] types = new Type[0] to set a property that is not indexed.</param>
      <param name="args">An array that contains the arguments to pass to the member to invoke.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.UnitTesting.ShadowingAttribute">
      <summary>Do not use this class. </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.ShadowingAttribute.#ctor(System.String)">
      <param name="fullNameOfSource"></param>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.ShadowingAttribute.FullNameOfSource"></member>
    <member name="T:Microsoft.VisualStudio.TestTools.UnitTesting.StringAssert">
      <summary>Verifies true/false propositions associated with strings in unit tests.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.StringAssert.Contains(System.String,System.String)">
      <summary>Verifies that the first string contains the second string.</summary>
      <param name="value">The string that is expected to contain <paramref name="substring" />.</param>
      <param name="substring">The string expected to occur within <paramref name="value" />.</param>
      <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
        <paramref name="substring" /> is not found in <paramref name="value" />.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.StringAssert.Contains(System.String,System.String,System.String)">
      <summary>Verifies that the first string contains the second string. Displays a message if the assertion fails.</summary>
      <param name="value">The string that is expected to contain <paramref name="substring" />.</param>
      <param name="substring">The string expected to occur within <paramref name="value" />.</param>
      <param name="message">A message to display if the assertion fails. This message can be seen in the unit test results.</param>
      <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
        <paramref name="substring" /> is not found in <paramref name="value" />.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.StringAssert.Contains(System.String,System.String,System.String,System.Object[])">
      <summary>Verifies that the first string contains the second string. Displays a message if the assertion fails, and applies the specified formatting to it.</summary>
      <param name="value">The string that is expected to contain <paramref name="substring" />.</param>
      <param name="substring">The string expected to occur within <paramref name="value" />.</param>
      <param name="message">A message to display if the assertion fails. This message can be seen in the unit test results.</param>
      <param name="parameters">An array of parameters to use when formatting <paramref name="message" />.</param>
      <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
        <paramref name="substring" /> is not found in <paramref name="value" />.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.StringAssert.DoesNotMatch(System.String,System.Text.RegularExpressions.Regex)">
      <summary>Verifies that the specified string does not match the regular expression.</summary>
      <param name="value">The string that is not expected to match <paramref name="pattern" />.</param>
      <param name="pattern">The regular expression that <paramref name="value" /> is not expected to match.</param>
      <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
        <paramref name="value" /> matches <paramref name="pattern" />.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.StringAssert.DoesNotMatch(System.String,System.Text.RegularExpressions.Regex,System.String)">
      <summary>Verifies that the specified string does not match the regular expression. Displays a message if the assertion fails.</summary>
      <param name="value">The string that is not expected to match <paramref name="pattern" />.</param>
      <param name="pattern">The regular expression that <paramref name="value" /> is not expected to match.</param>
      <param name="message">A message to display if the assertion fails. This message can be seen in the unit test results.</param>
      <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
        <paramref name="value" /> matches <paramref name="pattern" />.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.StringAssert.DoesNotMatch(System.String,System.Text.RegularExpressions.Regex,System.String,System.Object[])">
      <summary>Verifies that the specified string does not match the regular expression. Displays a message if the assertion fails, and applies the specified formatting to it.</summary>
      <param name="value">The string that is not expected to match <paramref name="pattern" />.</param>
      <param name="pattern">The regular expression that <paramref name="value" /> is not expected to match.</param>
      <param name="message">A message to display if the assertion fails. This message can be seen in the unit test results.</param>
      <param name="parameters">An array of parameters to use when formatting <paramref name="message" />.</param>
      <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
        <paramref name="value" /> matches <paramref name="pattern" />.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.StringAssert.EndsWith(System.String,System.String)">
      <summary>Verifies that the first string ends with the second string.</summary>
      <param name="value">The string that is expected to end with <paramref name="substring" />.</param>
      <param name="substring">The string expected to be a suffix of <paramref name="value" />.</param>
      <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
        <paramref name="value" /> does not end with <paramref name="substring" />.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.StringAssert.EndsWith(System.String,System.String,System.String)">
      <summary>Verifies that the first string ends with the second string. Displays a message if the assertion fails.</summary>
      <param name="value">The string that is expected to end with <paramref name="substring" />.</param>
      <param name="substring">The string expected to be a suffix of <paramref name="value" />.</param>
      <param name="message">A message to display if the assertion fails. This message can be seen in the unit test results.</param>
      <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
        <paramref name="value" /> does not end with <paramref name="substring" />.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.StringAssert.EndsWith(System.String,System.String,System.String,System.Object[])">
      <summary>Verifies that the first string ends with the second string. Displays a message if the assertion fails, and applies the specified formatting to it.</summary>
      <param name="value">The string that is expected to end with <paramref name="substring" />.</param>
      <param name="substring">The string expected to be a suffix of <paramref name="value" />.</param>
      <param name="message">A message to display if the assertion fails. This message can be seen in the unit test results.</param>
      <param name="parameters">An array of parameters to use when formatting <paramref name="message" />.</param>
      <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
        <paramref name="value" /> does not end with <paramref name="substring" />.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.StringAssert.Matches(System.String,System.Text.RegularExpressions.Regex)">
      <summary>Verifies that the specified string matches the regular expression.</summary>
      <param name="value">The string that is expected to match <paramref name="pattern" />.</param>
      <param name="pattern">The regular expression that <paramref name="value" /> is expected to match.</param>
      <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
        <paramref name="value" /> does not match <paramref name="pattern" />.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.StringAssert.Matches(System.String,System.Text.RegularExpressions.Regex,System.String)">
      <summary>Verifies that the specified string matches the regular expression. Displays a message if the assertion fails.</summary>
      <param name="value">The string that is expected to match <paramref name="pattern" />.</param>
      <param name="pattern">The regular expression that <paramref name="value" /> is expected to match.</param>
      <param name="message">A message to display if the assertion fails. This message can be seen in the unit test results.</param>
      <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
        <paramref name="value" /> does not match <paramref name="pattern" />.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.StringAssert.Matches(System.String,System.Text.RegularExpressions.Regex,System.String,System.Object[])">
      <summary>Verifies that the specified string matches the regular expression. Displays a message if the assertion fails, and applies the specified formatting to it.</summary>
      <param name="value">The string that is expected to match <paramref name="pattern" />.</param>
      <param name="pattern">The regular expression that <paramref name="value" /> is expected to match.</param>
      <param name="message">A message to display if the assertion fails. This message can be seen in the unit test results.</param>
      <param name="parameters">An array of parameters to use when formatting <paramref name="message" />.</param>
      <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
        <paramref name="value" /> does not match <paramref name="pattern" />.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.StringAssert.StartsWith(System.String,System.String)">
      <summary>Verifies that the first string begins with the second string.</summary>
      <param name="value">The string that is expected to begin with <paramref name="substring" />.</param>
      <param name="substring">The string expected to be a prefix of <paramref name="value" />.</param>
      <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
        <paramref name="value" /> does not begin with <paramref name="substring" />.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.StringAssert.StartsWith(System.String,System.String,System.String)">
      <summary>Verifies that the first string begins with the second string. Displays a message if the assertion fails.</summary>
      <param name="value">The string that is expected to begin with <paramref name="substring" />.</param>
      <param name="substring">The string expected to be a prefix of <paramref name="value" />.</param>
      <param name="message">A message to display if the assertion fails. This message can be seen in the unit test results.</param>
      <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
        <paramref name="value" /> does not begin with <paramref name="substring" />.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.StringAssert.StartsWith(System.String,System.String,System.String,System.Object[])">
      <summary>Verifies that the first string begins with the second string. Displays a message if the assertion fails, and applies the specified formatting to it.</summary>
      <param name="value">The string that is expected to begin with <paramref name="substring" />.</param>
      <param name="substring">The string expected to be a prefix of <paramref name="value" />.</param>
      <param name="message">A message to display if the assertion fails. This message can be seen in the unit test results.</param>
      <param name="parameters">An array of parameters to use when formatting <paramref name="message" />.</param>
      <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
        <paramref name="value" /> does not begin with <paramref name="substring" />.</exception>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute">
      <summary>Class used to specify the category of a unit test.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute" /> class by applying the supplied category to the test.</summary>
      <param name="testCategory">The test category to be applied.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute.TestCategories"></member>
    <member name="T:Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryBaseAttribute"></member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryBaseAttribute.#ctor"></member>
    <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryBaseAttribute.TestCategories"></member>
    <member name="T:Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute">
      <summary>Used to identify classes that contain test methods. This class cannot be inherited. </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute" /> class.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.UnitTesting.TestClassExtensionAttribute">
      <summary>Activates a class so that it is recognized as a Unit Test extension class.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.TestClassExtensionAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.TestClassExtensionAttribute" /> class.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.TestClassExtensionAttribute.ExtensionId">
      <summary>Gets the unique ID of the extension.</summary>
      <returns>The unique ID of the extension.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.TestClassExtensionAttribute.GetClientSide">
      <summary>Gets the TestTypeExtensionClientSide object.</summary>
      <returns>The TestTypeExtensionClientSide object.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.TestClassExtensionAttribute.GetExecution">
      <summary>Method to get the <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.TestExtensionExecution" /> object.</summary>
      <returns>The <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.TestExtensionExecution" /> object.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute">
      <summary>Identifies a method that contains code that must be used after the test has run and to free resources obtained by all the tests in the test class. This class cannot be inherited.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute" /> class. </summary>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.UnitTesting.TestConfiguration">
      <summary>Provides access to a <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.TestConfigurationSection" /> that represents the microsoft.visualstudio.testtools section in an app.config file. </summary>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.TestConfiguration.ConfigurationSection">
      <summary>Gets a <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.TestConfigurationSection" /> object.</summary>
      <returns>A <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.TestConfigurationSection" /> object.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.UnitTesting.TestConfigurationSection">
      <summary>Provides access to data source configuration data. </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.TestConfigurationSection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.TestConfigurationSection" /> class. </summary>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.TestConfigurationSection.DataSources">
      <summary>Gets a <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.DataSourceElementCollection" /> that contains data source configuration information.</summary>
      <returns>A <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.DataSourceElementCollection" />.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.UnitTesting.TestContext">
      <summary>Used to store information that is provided to unit tests.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.TestContext.#ctor">
      <summary>Initializes a new instance of an object that derives from the <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.TestContext" /> class.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.TestContext.AddResultFile(System.String)">
      <summary>When overridden in a derived class, adds a file name to the list in TestResult.ResultFileNames.</summary>
      <param name="fileName">The file name to add.</param>
    </member>
    <member name="F:Microsoft.VisualStudio.TestTools.UnitTesting.TestContext.AspNetDevelopmentServerPrefix">
      <summary>Represents the prefix for ASP.NET Development Server.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.TestContext.BeginTimer(System.String)">
      <summary>When overridden in a derived class, begins a timer with the specified name. </summary>
      <param name="timerName">The name of the timer to begin.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.TestContext.CurrentTestOutcome">
      <summary>You can use this property in a TestCleanup method to determine the outcome of a test that has run. </summary>
      <returns>A <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.UnitTestOutcome" /> that states the outcome of a test that has run.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.TestContext.DataConnection">
      <summary>When overridden in a derived class, gets the current data connection when the test is used for data driven testing.</summary>
      <returns>A <see cref="T:System.Data.Common.DbConnection" /> object.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.TestContext.DataRow">
      <summary>When overridden in a derived class, gets the current data row when test is used for data driven testing.</summary>
      <returns>A <see cref="T:System.Data.DataRow" /> object.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.TestContext.DeploymentDirectory"></member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.TestContext.EndTimer(System.String)">
      <summary>When overridden in a derived class, ends a timer with the specified name</summary>
      <param name="timerName">The name of the timer to end.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.TestContext.FullyQualifiedTestClassName"></member>
    <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.TestContext.Properties">
      <summary>When overridden in a derived class, gets the test properties.</summary>
      <returns>An <see cref="T:System.Collections.IDictionary" /> object that contains key/value pairs that represent the test properties.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.TestContext.RequestedPage">
      <summary>Gets the requested page.</summary>
      <returns>A <see cref="T:System.Web.UI.Page" /> object.</returns>
      <exception cref="T:System.InvalidCastException">An invalid value type is associated with the <see cref="P:Microsoft.VisualStudio.TestTools.UnitTesting.TestContext.RequestedPage" /> property of the test context.</exception>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.TestContext.ResultsDirectory"></member>
    <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.TestContext.TestDeploymentDir">
      <summary>Gets the path to the test deployment directory.</summary>
      <returns>The path to the test deployment directory.</returns>
      <exception cref="T:System.InvalidCastException">An invalid value type is associated with the <see cref="P:Microsoft.VisualStudio.TestTools.UnitTesting.TestContext.TestDeploymentDir" /> property of the test context.</exception>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.TestContext.TestDir">
      <summary>Gets the path to the test directory.</summary>
      <returns>The path to the test directory.</returns>
      <exception cref="T:System.InvalidCastException">An invalid value type is associated with the <see cref="P:Microsoft.VisualStudio.TestTools.UnitTesting.TestContext.TestDir" />  property of the test context.</exception>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.TestContext.TestLogsDir">
      <summary>Gets the path to the test log directory.</summary>
      <returns>The path to the test log directory.</returns>
      <exception cref="T:System.InvalidCastException">An invalid value type is associated with the <see cref="P:Microsoft.VisualStudio.TestTools.UnitTesting.TestContext.TestLogsDir" />   property of the test context.</exception>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.TestContext.TestName">
      <summary>Gets the test name.</summary>
      <returns>The test name.</returns>
      <exception cref="T:System.InvalidCastException">An invalid value type is associated with the <see cref="P:Microsoft.VisualStudio.TestTools.UnitTesting.TestContext.TestName" />    property of the test context.</exception>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.TestContext.TestResultsDirectory"></member>
    <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.TestContext.TestRunDirectory"></member>
    <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.TestContext.TestRunResultsDirectory"></member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.TestContext.WriteLine(System.String,System.Object[])">
      <summary>When overridden in a derived class, used to write trace messages while the test is running.</summary>
      <param name="format">The string that contains the trace message.</param>
      <param name="args">Arguments to add to the trace message.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.UnitTesting.TestExecution">
      <summary>This class represents events related to executing tests.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.TestExecution.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.TestExecution" /> class.</summary>
    </member>
    <member name="E:Microsoft.VisualStudio.TestTools.UnitTesting.TestExecution.AfterAssemblyCleanup">
      <summary>Occurs after the assembly finishes cleanup.</summary>
    </member>
    <member name="E:Microsoft.VisualStudio.TestTools.UnitTesting.TestExecution.AfterAssemblyInitialize">
      <summary>Occurs after the assembly initializes.</summary>
    </member>
    <member name="E:Microsoft.VisualStudio.TestTools.UnitTesting.TestExecution.AfterClassCleanup">
      <summary>Occurs after the class finishes cleanup.</summary>
    </member>
    <member name="E:Microsoft.VisualStudio.TestTools.UnitTesting.TestExecution.AfterClassInitialize">
      <summary>Occurs after the class initializes.</summary>
    </member>
    <member name="E:Microsoft.VisualStudio.TestTools.UnitTesting.TestExecution.AfterTestCleanup">
      <summary>Occurs after the test finishes cleanup.</summary>
    </member>
    <member name="E:Microsoft.VisualStudio.TestTools.UnitTesting.TestExecution.AfterTestInitialize">
      <summary>Occurs after the test initializes.</summary>
    </member>
    <member name="E:Microsoft.VisualStudio.TestTools.UnitTesting.TestExecution.BeforeAssemblyCleanup">
      <summary>Occurs before the assembly starts cleanup.</summary>
    </member>
    <member name="E:Microsoft.VisualStudio.TestTools.UnitTesting.TestExecution.BeforeAssemblyInitialize">
      <summary>Occurs before the assembly starts initialization.</summary>
    </member>
    <member name="E:Microsoft.VisualStudio.TestTools.UnitTesting.TestExecution.BeforeClassCleanup">
      <summary>Occurs before the class starts cleanup.</summary>
    </member>
    <member name="E:Microsoft.VisualStudio.TestTools.UnitTesting.TestExecution.BeforeClassInitialize">
      <summary>Occurs before the class starts initialization.</summary>
    </member>
    <member name="E:Microsoft.VisualStudio.TestTools.UnitTesting.TestExecution.BeforeTestCleanup">
      <summary>Occurs before the test starts cleanup.</summary>
    </member>
    <member name="E:Microsoft.VisualStudio.TestTools.UnitTesting.TestExecution.BeforeTestInitialize">
      <summary>Occurs before the test starts initialization.</summary>
    </member>
    <member name="E:Microsoft.VisualStudio.TestTools.UnitTesting.TestExecution.OnTestStopping"></member>
    <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.TestExecution.RunContext">
      <summary>Gets the context of this test run.</summary>
      <returns>The context of this test run.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.UnitTesting.TestExecutionEventArgs">
      <summary>Base class for events in the <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.TestExecution" /> class.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.TestExecutionEventArgs.Instance">
      <summary>Gets the instance of test class. Defined only in test methods.</summary>
      <returns>The instance of test class. Defined only in test methods.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.TestExecutionEventArgs.MethodInfo">
      <summary>Gets the method called.</summary>
      <returns>The method called.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.TestExecutionEventArgs.TestContext">
      <summary>Gets the user's test context. </summary>
      <returns>The user's test context.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.UnitTesting.TestExtensionExecution">
      <summary>This class enables the customized execution of tests.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.TestExtensionExecution.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.TestExtensionExecution" /> class.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.TestExtensionExecution.CreateTestMethodInvoker(Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodInvokerContext)">
      <summary>Creates the Test Method Invoker.</summary>
      <returns>Returns the test method invoker as defined by the <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.ITestMethodInvoker" /> interface.</returns>
      <param name="context">The context.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.TestExtensionExecution.Dispose">
      <summary>Releases all resources used by the <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.TestExtensionExecution" />.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.TestExtensionExecution.Initialize(Microsoft.VisualStudio.TestTools.UnitTesting.TestExecution)">
      <summary>Before execution starts, this method is called to enable subscription to the Unit Test Events.</summary>
      <param name="execution">The <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.TestExecution" />.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute">
      <summary>Identifies the method to run before the test to allocate and configure resources needed by all tests in the test class. This class cannot be inherited.  </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute" /> class.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute">
      <summary>Used to identify test methods. This class cannot be inherited. </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute" /> class. </summary>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodInvokerContext">
      <summary>Passed to the Unit Test Adapter to the TestExtensionExecution.CreateMethodInvoker.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodInvokerContext.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodInvokerContext" /> class.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodInvokerContext.InnerInvoker">
      <summary>Gets the <see cref="M:Microsoft.VisualStudio.TestTools.UnitTesting.ITestMethodInvoker.Invoke" /> method of the test method invoker.</summary>
      <returns>The <see cref="M:Microsoft.VisualStudio.TestTools.UnitTesting.ITestMethodInvoker.Invoke" /> method of the test method invoker.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodInvokerContext.TestContext">
      <summary>Gets the test context.</summary>
      <returns>The test context.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodInvokerContext.TestMethodInfo">
      <summary>Gets the <see cref="T:System.Reflection.MethodInfo" /> of the test method.</summary>
      <returns>The <see cref="T:System.Reflection.MethodInfo" /> of the test method.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodInvokerResult">
      <summary>The result returned by ITestMethodInvoker.<see cref="M:Microsoft.VisualStudio.TestTools.UnitTesting.ITestMethodInvoker.Invoke" />.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodInvokerResult.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodInvokerResult" /> class.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodInvokerResult.Exception">
      <summary>Gets or sets the <see cref="T:System.Exception" /> thrown in the invoker.</summary>
      <returns>The <see cref="T:System.Exception" /> thrown in the invoker.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodInvokerResult.ExtensionResult">
      <summary>Gets or sets the Unit Test Extension custom result.</summary>
      <returns>The Unit Test Extension custom result.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute">
      <summary>Establishes a test specific property on a method. This class cannot be inherited. </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute" /> class with values for the <see cref="P:Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute.Name" /> and <see cref="P:Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute.Value" /> properties. </summary>
      <param name="name">The name of the test property.</param>
      <param name="value">The value of the test property.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute.Name">
      <summary>Gets the name of the test property.</summary>
      <returns>The name of the test property.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute.Value">
      <summary>Gets the value of the test property.</summary>
      <returns>The value of the test property.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.UnitTesting.TestTimeout">
      <summary>Enumeration for timeouts, that can be used with the <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.TimeoutAttribute" /> class.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.TestTools.UnitTesting.TestTimeout.Infinite">
      <summary>The maximum time-out amount.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.UnitTesting.TimeoutAttribute">
      <summary>Used to specify the time-out period of a unit test.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.TimeoutAttribute.#ctor(Microsoft.VisualStudio.TestTools.UnitTesting.TestTimeout)"></member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.TimeoutAttribute.#ctor(System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.TimeoutAttribute" /> class.</summary>
      <param name="timeout">The time-out period of a unit test. This is measured in milliseconds.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.TimeoutAttribute.Timeout">
      <summary>Gets the time-out period for a unit test.</summary>
      <returns>The time-out period for a unit test. This is measured in milliseconds.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.UnitTesting.UnitTestAssertException">
      <summary>This is the base class for unit test exceptions.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.UnitTestAssertException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.UnitTestAssertException" /> class. </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.UnitTestAssertException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.UnitTestAssertException" /> class with serialized data.</summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
      <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0).</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.UnitTestAssertException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.UnitTestAssertException" /> class with a specified error. </summary>
      <param name="msg">The error message that explains the reason for the exception.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.UnitTestAssertException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.UnitTestAssertException" /> class with a specified error message and a reference to the inner exception that caused this exception. </summary>
      <param name="msg">The error message that explains the reason for the exception.</param>
      <param name="ex">The exception that is the cause of the current exception. If the <paramref name="ex" /> parameter is not null, the current exception is raised in a catch block that handles the inner exception.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.UnitTestAssertException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.</summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
      <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null.</exception>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.UnitTestAssertException.Message">
      <summary>Gets a message that describes the current exception.</summary>
      <returns>A message describing the exception.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.UnitTesting.UnitTestOutcome">
      <summary>Use UnitTestOutcome to programmatically determine the outcome of a test that has run or is currently running. </summary>
    </member>
    <member name="F:Microsoft.VisualStudio.TestTools.UnitTesting.UnitTestOutcome.Failed">
      <summary>The test failed.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.TestTools.UnitTesting.UnitTestOutcome.Inconclusive">
      <summary>An Assert.<see cref="M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.Inconclusive" /> was raised. </summary>
    </member>
    <member name="F:Microsoft.VisualStudio.TestTools.UnitTesting.UnitTestOutcome.Passed">
      <summary>The test passed.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.TestTools.UnitTesting.UnitTestOutcome.InProgress">
      <summary>The test is currently running.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.TestTools.UnitTesting.UnitTestOutcome.Error">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.TestTools.UnitTesting.UnitTestOutcome.Timeout">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.TestTools.UnitTesting.UnitTestOutcome.Aborted">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.TestTools.UnitTesting.UnitTestOutcome.Unknown">
      <summary>The outcome of the test is unknown. </summary>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.UnitTesting.WebServiceHelper">
      <summary>Contains helper methods for Web service testing. </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.WebServiceHelper.TryUrlRedirection(System.Web.Services.Protocols.WebClientProtocol,Microsoft.VisualStudio.TestTools.UnitTesting.TestContext,System.String)">
      <summary>Redirects a Web service object to the ASP.NET Development Server instead of what is defined in the Web reference.</summary>
      <returns>true if a redirect occurred; otherwise, false.</returns>
      <param name="client">An instance of the Web service type being tested.</param>
      <param name="context">The <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.TestContext" /> for this unit test.</param>
      <param name="identifier">A unique string that identifies an ASP.NET Development Server instance. This matches the name parameter of an <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.Web.AspNetDevelopmentServerAttribute" /> on the test method.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.UnitTesting.WorkItemAttribute">
      <summary>Used to specify a work item associated with a test.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.WorkItemAttribute.#ctor(System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.WorkItemAttribute" /> class with an identification number.</summary>
      <param name="id">The ID of the work item.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.WorkItemAttribute.Id">
      <summary>Gets the ID of the work item.</summary>
      <returns>The work item ID.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.UnitTesting.Web.AspNetDevelopmentServerAttribute">
      <summary>Specifies the settings that must be used for the ASP.NET Development Server for the test. This is primarily used for Web service unit tests.   </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.Web.AspNetDevelopmentServerAttribute.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.Web.AspNetDevelopmentServerAttribute" /> class with the server name and the path to the Web application.</summary>
      <param name="name">The name of the ASP.NET Development Server. This name must be unique for all <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.Web.AspNetDevelopmentServerAttribute" /> specified on a single test.</param>
      <param name="pathToWebApp">The path to the Web application. This can also include environmental variables.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.Web.AspNetDevelopmentServerAttribute.#ctor(System.String,System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.Web.AspNetDevelopmentServerAttribute" /> class with the server name, the path to the Web application, and the Web application root.</summary>
      <param name="name">The name of the server.</param>
      <param name="pathToWebApp">The path to the Web application. This can also include environment variables like %TEMPDIR%\website1.</param>
      <param name="webAppRoot">The Web application root.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.Web.AspNetDevelopmentServerAttribute.Name">
      <summary>Gets the name of the ASP.NET Development Server.</summary>
      <returns>The name of the ASP.NET Development Server.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.Web.AspNetDevelopmentServerAttribute.PathToWebApp">
      <summary>Gets the path to the Web application.</summary>
      <returns>The path to the Web application.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.Web.AspNetDevelopmentServerAttribute.WebAppRoot">
      <summary>Gets the Web application root.</summary>
      <returns>The Web application root.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.UnitTesting.Web.AspNetDevelopmentServerHostAttribute">
      <summary>Specifies the settings to use when an ASP.NET Development Server is the host server for the test. This is used for ASP.NET unit tests.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.Web.AspNetDevelopmentServerHostAttribute.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.Web.AspNetDevelopmentServerHostAttribute" /> class with the full path name.</summary>
      <param name="pathToWebApp">The full path of the Web application. The path can include environment variables like %TEMPDIR%\website1.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.Web.AspNetDevelopmentServerHostAttribute.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.Web.AspNetDevelopmentServerHostAttribute" /> class with the full path name and the Web application root.</summary>
      <param name="pathToWebApp">The full path of the Web application. The path can include environment variables like %TEMPDIR%\website1.</param>
      <param name="webAppRoot">The Web application root.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.Web.AspNetDevelopmentServerHostAttribute.PathToWebApp">
      <summary>Gets the path of the Web application.</summary>
      <returns>The path of the Web application.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.Web.AspNetDevelopmentServerHostAttribute.WebAppRoot">
      <summary>Gets the Web application root.</summary>
      <returns>The Web application root.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.UnitTesting.Web.CredentialAttribute">
      <summary>Specifies the user name and password for ASP.NET sites that require basic authentication or Windows authentication. This class cannot be inherited.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.Web.CredentialAttribute.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.Web.CredentialAttribute" /> class with a user name and password needed to access the test Web site.</summary>
      <param name="userName">The user to authenticate.</param>
      <param name="password">The associated password for the user.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.Web.CredentialAttribute.#ctor(System.String,System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.Web.CredentialAttribute" /> class with a user name, password and domain needed to access the test Web site.</summary>
      <param name="userName">The user to authenticate.</param>
      <param name="password">The associated password for the user.</param>
      <param name="domain">The domain of the user.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.Web.CredentialAttribute.Domain">
      <summary>Gets the user's domain.</summary>
      <returns>The name of the user's domain.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.Web.CredentialAttribute.Password">
      <summary>Gets the user's password.</summary>
      <returns>The user's password.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.Web.CredentialAttribute.UserName">
      <summary>Gets the user's user name.</summary>
      <returns>The user's user name.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.UnitTesting.Web.UrlToTestAttribute">
      <summary>Specifies the URL that should be requested to give context to the test. This class cannot be inherited. </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.Web.UrlToTestAttribute.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.Web.UrlToTestAttribute" /> class.</summary>
      <param name="urlToTest">The URL to give context to the test.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.Web.UrlToTestAttribute.UrlToTest">
      <summary>Gets the URL that gives context to the test.</summary>
      <returns>A URL string.</returns>
    </member>
  </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\VisualStudio\VS10RTM\VisualStudioIntegration\Common\Assemblies\v2.0\Microsoft.VisualStudio.ManagedInterfaces.xml ===
ï»¿<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>Microsoft.VisualStudio.ManagedInterfaces</name>
  </assembly>
  <members>
    <member name="T:Microsoft.VisualStudio.ManagedInterfaces.ProjectDesigner.IVsProjectDesignerPage">
      <summary>An optional interface which may be implemented by property pages hosted inside the Project Designer. Implementing this interface allows the page to participate in advanced scenarios supported by the Project Designer (for instance, automatic Undo and Redo functionality). However, <see cref="T:Microsoft.VisualStudio.OLE.Interop.IPropertyPage" /> (or <see cref="T:Microsoft.VisualStudio.OLE.Interop.IPropertyPage2" />) is still required.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.ManagedInterfaces.ProjectDesigner.IVsProjectDesignerPage.FinishPendingValidations">
      <summary>Completes all pending validations before continuing.</summary>
      <returns>true to continue, false to cancel the action that triggered the validation.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.ManagedInterfaces.ProjectDesigner.IVsProjectDesignerPage.GetProperty(System.String)">
      <summary>Gets the current value for the given property.  </summary>
      <returns>The value of the property.</returns>
      <param name="propertyName">Â The name of the property to get.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.ManagedInterfaces.ProjectDesigner.IVsProjectDesignerPage.GetPropertyMultipleValues(System.String,System.Object[]@,System.Object[]@)">
      <summary>Gets the current values for the given property for each of the supplied configurations. </summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />, otherwise an error code.</returns>
      <param name="propertyName">The name of the property to get.</param>
      <param name="objects">[out] Returns an array of configurations that may be affected.</param>
      <param name="values">[out] Returns an array of values for each of the configurations.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.ManagedInterfaces.ProjectDesigner.IVsProjectDesignerPage.OnActivated(System.Boolean)">
      <summary>Raised when the property page is activated or deactivated as the active designer.</summary>
      <param name="activated">true if the page has been activated, false if it has been deactivated.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.ManagedInterfaces.ProjectDesigner.IVsProjectDesignerPage.SetProperty(System.String,System.Object)">
      <summary>Sets the given value for the given property.  </summary>
      <param name="propertyName">The name of the property.</param>
      <param name="value">The value to set.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.ManagedInterfaces.ProjectDesigner.IVsProjectDesignerPage.SetPropertyMultipleValues(System.String,System.Object[],System.Object[])">
      <summary>Sets the given values for the given properties, one for each of the supplied configurations.  </summary>
      <param name="propertyName">The name of the property.</param>
      <param name="objects">The configurations in which to set the property.</param>
      <param name="values">The values to set.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.ManagedInterfaces.ProjectDesigner.IVsProjectDesignerPage.SetSite(Microsoft.VisualStudio.ManagedInterfaces.ProjectDesigner.IVsProjectDesignerPageSite)">
      <summary>Notifies the property page of the <see cref="T:Microsoft.VisualStudio.ManagedInterfaces.ProjectDesigner.IVsProjDesignerPageSite" /> site.</summary>
      <param name="site">
        <see cref="T:Microsoft.VisualStudio.ManagedInterfaces.ProjectDesigner.IVsProjectDesignerPageSite" />.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.ManagedInterfaces.ProjectDesigner.IVsProjectDesignerPage.SupportsMultipleValueUndo(System.String)">
      <summary>Determines the given property supports getting and setting multiple values at the same time.</summary>
      <returns>true if the given property supports getting and setting multiple values at the same time.</returns>
      <param name="propertyName">The name of the property.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.ManagedInterfaces.ProjectDesigner.IVsProjectDesignerPageSite">
      <summary>An interface which is implemented (in addition to <see cref="T:Microsoft.VisualStudio.OLE.Interop.IPropertyPageSite" />) by the Project Designer on sites that host property pages. It is necessary for some advanced scenarios supported by the Project Designer (for instance, automatic Undo and Redo), but it is not necessary to use this interface in order to be hosted as a property page in the Project Designer. </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.ManagedInterfaces.ProjectDesigner.IVsProjectDesignerPageSite.GetTransaction(System.String)">
      <summary>Gets a transaction to group multiple property changes into a single undo/redo unit.  </summary>
      <returns>
        <see cref="T:System.ComponentModel.Design.DesignerTransaction" />.</returns>
      <param name="description">The description of the transaction.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.ManagedInterfaces.ProjectDesigner.IVsProjectDesignerPageSite.OnPropertyChanged(System.String,System.ComponentModel.PropertyDescriptor,System.Object,System.Object)">
      <summary>Raised after a property on the property page has changed.</summary>
      <param name="propertyName">The name of the property whose value has changed.</param>
      <param name="propertyDescriptor">A <see cref="T:System.ComponentModel.PropertyDescriptor" /> that applies to the property.</param>
      <param name="oldValue">The previous value of the property.</param>
      <param name="newValue">The new value of the property.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.ManagedInterfaces.ProjectDesigner.IVsProjectDesignerPageSite.OnPropertyChanging(System.String,System.ComponentModel.PropertyDescriptor)">
      <summary>Raised before a property value is changed.</summary>
      <param name="propertyName">The name of the property to be changed.</param>
      <param name="propertyDescriptor">A <see cref="T:System.ComponentModel.PropertyDescriptor" /> that applies to the property.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.ManagedInterfaces.Publish.ComponentsLocation">
      <summary>Specifies the location from which packages should be downloaded at install time.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.ManagedInterfaces.Publish.ComponentsLocation.HomeSite">
      <summary>The component vendor's site.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.ManagedInterfaces.Publish.ComponentsLocation.Relative">
      <summary>The same location as the bootstrapper.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.ManagedInterfaces.Publish.ComponentsLocation.Absolute">
      <summary>An absolute path specified by <see cref="P:Microsoft.VisualStudio.ManagedInterfaces.Publish.IPublishProperties.BootstrapperDownloadUrl" />.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.ManagedInterfaces.Publish.IBootstrapperPackage">
      <summary>An interface defining a bootstrapper package.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.ManagedInterfaces.Publish.IBootstrapperPackage.Install">
      <summary>Gets or sets whether or not this package should be installed.</summary>
      <returns>true if the package should be installed.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.ManagedInterfaces.Publish.IBootstrapperPackage.Name">
      <summary>Gets the name of the package.</summary>
      <returns>The name of the package.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.ManagedInterfaces.Publish.IBootstrapperPackage.ProductCode">
      <summary>Gets the unique identifier of the package.</summary>
      <returns>The unique identifier of the package.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.ManagedInterfaces.Publish.IBootstrapperPackageCollection">
      <summary>A collection of <see cref="T:Microsoft.VisualStudio.ManagedInterfaces.Publish.IBootstrapperPackage" /> objects.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.ManagedInterfaces.Publish.IBootstrapperPackageCollection.Count">
      <summary>Gets the number of items contained by the collection.</summary>
      <returns>The number of items contained by the collection.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.ManagedInterfaces.Publish.IBootstrapperPackageCollection.Item(System.Object)">
      <summary>Gets an <see cref="T:Microsoft.VisualStudio.ManagedInterfaces.Publish.IBootstrapperPackage" /> interface given its product code.</summary>
      <returns>A bootstrapper package.</returns>
      <param name="key">The <see cref="P:Microsoft.VisualStudio.ManagedInterfaces.Publish.IBootstrapperPackage.ProductCode" /> of the bootstrapper package.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.ManagedInterfaces.Publish.InstallFrom">
      <summary>This enumeration describes possible installation sources.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.ManagedInterfaces.Publish.InstallFrom.Web">
      <summary>Installation source is a website.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.ManagedInterfaces.Publish.InstallFrom.Unc">
      <summary>Installation source is a UNC path.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.ManagedInterfaces.Publish.InstallFrom.Disk">
      <summary>Installation source is disk.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.ManagedInterfaces.Publish.IPublishFile">
      <summary>A wrapper for a COM publishing interface.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.ManagedInterfaces.Publish.IPublishFile.Group">
      <summary>Gets and sets the published group.</summary>
      <returns>The published group.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.ManagedInterfaces.Publish.IPublishFile.IsAssembly">
      <summary>Gets whether or not the interface's file is an assembly.</summary>
      <returns>true if the file is an assembly, otherwise false.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.ManagedInterfaces.Publish.IPublishFile.IsDataFile">
      <summary>Gets whether or not the file is a data file.</summary>
      <returns>true if the file is a data file, otherwise false.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.ManagedInterfaces.Publish.IPublishFile.IsOrphaned">
      <summary>Gets whether or not the file cannot be mapped to an item in the project.</summary>
      <returns>true if the file cannot be mapped to an item in the project; false if it can be mapped.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.ManagedInterfaces.Publish.IPublishFile.IsPrerequisite">
      <summary>Gets whether or not the file is a prerequisite for deployment.</summary>
      <returns>true if the file is a prerequisite for deployment, otherwise false.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.ManagedInterfaces.Publish.IPublishFile.IsPublished">
      <summary>Gets whether or not the file is to be deployed.</summary>
      <returns>true if the file should be deployed, otherwise false.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.ManagedInterfaces.Publish.IPublishFile.IsReadOnly">
      <summary>Gets whether or not the file is read-only.</summary>
      <returns>true if the file is read-only, otherwise false.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.ManagedInterfaces.Publish.IPublishFile.Name">
      <summary>Gets the name of the file.</summary>
      <returns>The name of the file.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.ManagedInterfaces.Publish.IPublishFile.PublishStatus">
      <summary>Gets or sets the current status of the file.</summary>
      <returns>The current <see cref="T:Microsoft.VisualStudio.ManagedInterfaces.Publish.PublishStatus" /> value.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.ManagedInterfaces.Publish.IPublishFile.Reset">
      <summary>Returns this file to the default state.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.ManagedInterfaces.Publish.IPublishFile.TargetPath">
      <summary>Gets or sets the target path of this file.</summary>
      <returns>The target path of this file.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.ManagedInterfaces.Publish.IPublishFileCollection">
      <summary>An interface defining a collection of objects implementing <see cref="T:Microsoft.VisualStudio.ManagedInterfaces.Publish.IPublishFile" />.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.ManagedInterfaces.Publish.IPublishFileCollection.Count">
      <summary>Gets the number of files in the collection.</summary>
      <returns>The number of files in the collection.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.ManagedInterfaces.Publish.IPublishFileCollection.Item(System.Object)">
      <summary>Gets the file with the specified name.</summary>
      <returns>
        <see cref="T:Microsoft.VisualStudio.ManagedInterfaces.Publish.IPublishFile" />.</returns>
      <param name="key">The name of the file.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.ManagedInterfaces.Publish.IPublishProperties">
      <summary>Defines the properties of a published application.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.ManagedInterfaces.Publish.IPublishProperties.ApplicationRevision">
      <summary>Gets or sets the revision number of the application.</summary>
      <returns>The revision number of the application.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.ManagedInterfaces.Publish.IPublishProperties.ApplicationVersion">
      <summary>Gets or sets the version of the application.</summary>
      <returns>The version of the application.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.ManagedInterfaces.Publish.IPublishProperties.AutorunEnabled">
      <summary>Gets or sets whether to create an autorun.ini file for this application.</summary>
      <returns>true if an autorun.ini file should be created for this application.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.ManagedInterfaces.Publish.IPublishProperties.BootstrapperComponentsLocation">
      <summary>Gets or sets the way the bootstrapper should download components.</summary>
      <returns>
        <see cref="T:Microsoft.VisualStudio.ManagedInterfaces.Publish.ComponentsLocation" />.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.ManagedInterfaces.Publish.IPublishProperties.BootstrapperDownloadUrl">
      <summary>Gets or sets the URL from which to download bootstrapper components of this application.</summary>
      <returns>The URL from which to download bootstrapper components of this application.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.ManagedInterfaces.Publish.IPublishProperties.BootstrapperEnabled">
      <summary>Gets or sets whether the bootstrapper should be generated.</summary>
      <returns>true if the bootstrapper should be generated.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.ManagedInterfaces.Publish.IPublishProperties.BootstrapperPackages">
      <summary>Gets the collection of bootstrapper packages.</summary>
      <returns>
        <see cref="T:Microsoft.VisualStudio.ManagedInterfaces.Publish.IBootstrapperPackageCollection" />.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.ManagedInterfaces.Publish.IPublishProperties.CreateWebPageOnPublish">
      <summary>Gets or sets whether to generate a Web page when this application is published.</summary>
      <returns>true if a Web page should be created.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.ManagedInterfaces.Publish.IPublishProperties.DisallowUrlActivation">
      <summary>Gets or sets whether to run the application after installation</summary>
      <returns>true if the application should be started after installation.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.ManagedInterfaces.Publish.IPublishProperties.Install">
      <summary>Gets or sets whether to install the application on the user's machine.</summary>
      <returns>true to install the application on the user's machine.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.ManagedInterfaces.Publish.IPublishProperties.InstallFrom">
      <summary>Gets or sets the type of install location.</summary>
      <returns>
        <see cref="T:Microsoft.VisualStudio.ManagedInterfaces.Publish.InstallFrom" />.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.ManagedInterfaces.Publish.IPublishProperties.InstallUrl">
      <summary>Gets or sets the URL from which the user should install the application.</summary>
      <returns>The URL from which the user should install the application.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.ManagedInterfaces.Publish.IPublishProperties.MapFileExtensions">
      <summary>Gets or sets whether to add ".deploy" as an extension to all deployed files.</summary>
      <returns>true to add ".deploy" as an extension to all deployed files.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.ManagedInterfaces.Publish.IPublishProperties.MinimumRequiredVersion">
      <summary>Gets or sets the minimum version users can install.</summary>
      <returns>The minimum version users can install.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.ManagedInterfaces.Publish.IPublishProperties.OpenBrowserOnPublish">
      <summary>Gets or sets whether to open the default browser after each publish.</summary>
      <returns>true to open the default browser every time the application is published.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.ManagedInterfaces.Publish.IPublishProperties.ProductName">
      <summary>Gets and sets the name of the application.</summary>
      <returns>The name of the application that will be displayed on the installation program.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.ManagedInterfaces.Publish.IPublishProperties.PublisherName">
      <summary>Gets or sets the name of the publisher.</summary>
      <returns>The name of the publisher that will be displayed in the installation program.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.ManagedInterfaces.Publish.IPublishProperties.PublishFiles">
      <summary>Gets a collection of files that can be deployed.</summary>
      <returns>
        <see cref="T:Microsoft.VisualStudio.ManagedInterfaces.Publish.IPublishFileCollection" />.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.ManagedInterfaces.Publish.IPublishProperties.PublishUrl">
      <summary>Gets or sets the URL to which the application will be deployed.</summary>
      <returns>The URL to which the application will be deployed.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.ManagedInterfaces.Publish.IPublishProperties.SupportUrl">
      <summary>Gets or sets the URL to which users can go for support.</summary>
      <returns>The URL to which users can go for support.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.ManagedInterfaces.Publish.IPublishProperties.TargetCulture">
      <summary>Gets or sets the culture for which the deployment will be generated.</summary>
      <returns>The culture for which the deployment will be generated.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.ManagedInterfaces.Publish.IPublishProperties.TrustUrlParameters">
      <summary>Gets or sets whether to allow users to pass parameters to the application via the URL.</summary>
      <returns>true to allow users to pass parameters to the application via the URL.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.ManagedInterfaces.Publish.IPublishProperties.UpdateEnabled">
      <summary>Gets or sets whether users are allowed to update their application.</summary>
      <returns>true if users are allowed to update their application.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.ManagedInterfaces.Publish.IPublishProperties.UpdateInterval">
      <summary>Gets or sets the number of units for the application to wait before checking for updates.</summary>
      <returns>The number of units for the application to wait before checking for updates.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.ManagedInterfaces.Publish.IPublishProperties.UpdateIntervalUnits">
      <summary>Gets or sets the units of time for the application to wait before checking for updates.</summary>
      <returns>
        <see cref="T:Microsoft.VisualStudio.ManagedInterfaces.Publish.UpdateIntervalUnits" />.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.ManagedInterfaces.Publish.IPublishProperties.UpdateMode">
      <summary>Gets or sets the mode by which the application will check for updates.</summary>
      <returns>
        <see cref="T:Microsoft.VisualStudio.ManagedInterfaces.Publish.UpdateMode" />.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.ManagedInterfaces.Publish.IPublishProperties.UpdatePeriodically">
      <summary>Gets or sets whether the application should check for updates.</summary>
      <returns>true if the application should check for updates.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.ManagedInterfaces.Publish.IPublishProperties.UpdateRequired">
      <summary>Gets or sets whether update is required.</summary>
      <returns>true if update is required.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.ManagedInterfaces.Publish.IPublishProperties.UpdateUrl">
      <summary>Gets or sets the URL to use to check for future updates.</summary>
      <returns>The URL to use to check for future updates.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.ManagedInterfaces.Publish.IPublishProperties.VerifyUploadedFiles">
      <summary>Gets or sets whether the uploaded files will be validated after publish.</summary>
      <returns>true if uploaded files will be validated after publish.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.ManagedInterfaces.Publish.IPublishProperties.WebPageFileName">
      <summary>Gets or sets the name of the web page that should be created or opened on publish.</summary>
      <returns>The name of the web page that should be created or opened on publish.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.ManagedInterfaces.Publish.PublishStatus">
      <summary>An enumeration of possible publish statuses.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.ManagedInterfaces.Publish.PublishStatus.Auto">
      <summary>Auto</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.ManagedInterfaces.Publish.PublishStatus.Include">
      <summary>Include</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.ManagedInterfaces.Publish.PublishStatus.Exclude">
      <summary>Exclude</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.ManagedInterfaces.Publish.PublishStatus.DataFile">
      <summary>DataFile</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.ManagedInterfaces.Publish.PublishStatus.Prerequisite">
      <summary>Prerequisite</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.ManagedInterfaces.Publish.UpdateIntervalUnits">
      <summary>An enumeration with values that describe the frequency of updates.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.ManagedInterfaces.Publish.UpdateIntervalUnits.Hours">
      <summary>Specifies that publishing updates should occur in hours.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.ManagedInterfaces.Publish.UpdateIntervalUnits.Days">
      <summary>Specifies that publishing updates should occur in days.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.ManagedInterfaces.Publish.UpdateIntervalUnits.Weeks">
      <summary>Specifies that publishing updates should occur in weeks.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.ManagedInterfaces.Publish.UpdateMode">
      <summary>An enumeration that describes valid publishing update modes.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.ManagedInterfaces.Publish.UpdateMode.Foreground">
      <summary>Foreground</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.ManagedInterfaces.Publish.UpdateMode.Background">
      <summary>Background</summary>
    </member>
  </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\VisualStudio\VS10RTM\VisualStudioIntegration\Common\Assemblies\v2.0\Microsoft.VisualStudio.Designer.Interfaces.xml ===
ï»¿<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>Microsoft.VisualStudio.Designer.Interfaces</name>
  </assembly>
  <members>
    <member name="T:Microsoft.VisualStudio.Designer.Interfaces._PROPERTYGRIDOPTION"></member>
    <member name="F:Microsoft.VisualStudio.Designer.Interfaces._PROPERTYGRIDOPTION.PGOPT_HOTCOMMANDS">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Designer.Interfaces._PROPERTYGRIDOPTION.PGOPT_HELP">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Designer.Interfaces._PROPERTYGRIDOPTION.PGOPT_TOOLBAR">
      <summary />
    </member>
    <member name="T:Microsoft.VisualStudio.Designer.Interfaces._PROPERTYGRIDSORT"></member>
    <member name="F:Microsoft.VisualStudio.Designer.Interfaces._PROPERTYGRIDSORT.PGSORT_NOSORT">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Designer.Interfaces._PROPERTYGRIDSORT.PGSORT_ALPHABETICAL">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Designer.Interfaces._PROPERTYGRIDSORT.PGSORT_CATEGORIZED">
      <summary />
    </member>
    <member name="T:Microsoft.VisualStudio.Designer.Interfaces.IVSMDCodeDomCreator"></member>
    <member name="M:Microsoft.VisualStudio.Designer.Interfaces.IVSMDCodeDomCreator.CreateCodeDomProvider(System.Object,System.Int32)">
      <param name="pHier"></param>
      <param name="itemid"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.Designer.Interfaces.IVSMDCodeDomProvider"></member>
    <member name="P:Microsoft.VisualStudio.Designer.Interfaces.IVSMDCodeDomProvider.CodeDomProvider"></member>
    <member name="T:Microsoft.VisualStudio.Designer.Interfaces.IVSMDDesigner"></member>
    <member name="P:Microsoft.VisualStudio.Designer.Interfaces.IVSMDDesigner.CommandGuid"></member>
    <member name="M:Microsoft.VisualStudio.Designer.Interfaces.IVSMDDesigner.Dispose"></member>
    <member name="M:Microsoft.VisualStudio.Designer.Interfaces.IVSMDDesigner.Flush"></member>
    <member name="M:Microsoft.VisualStudio.Designer.Interfaces.IVSMDDesigner.GetLoadError"></member>
    <member name="P:Microsoft.VisualStudio.Designer.Interfaces.IVSMDDesigner.SelectionContainer"></member>
    <member name="P:Microsoft.VisualStudio.Designer.Interfaces.IVSMDDesigner.View"></member>
    <member name="T:Microsoft.VisualStudio.Designer.Interfaces.IVSMDDesignerLoader"></member>
    <member name="M:Microsoft.VisualStudio.Designer.Interfaces.IVSMDDesignerLoader.Dispose"></member>
    <member name="M:Microsoft.VisualStudio.Designer.Interfaces.IVSMDDesignerLoader.GetEditorCaption(System.Int32)"></member>
    <member name="M:Microsoft.VisualStudio.Designer.Interfaces.IVSMDDesignerLoader.Initialize(System.Object,System.Object,System.Int32,System.Object)"></member>
    <member name="M:Microsoft.VisualStudio.Designer.Interfaces.IVSMDDesignerLoader.SetBaseEditorCaption(System.String)"></member>
    <member name="T:Microsoft.VisualStudio.Designer.Interfaces.IVSMDDesignerService"></member>
    <member name="M:Microsoft.VisualStudio.Designer.Interfaces.IVSMDDesignerService.CreateDesigner(System.Object,System.Object)"></member>
    <member name="M:Microsoft.VisualStudio.Designer.Interfaces.IVSMDDesignerService.CreateDesignerForClass(System.Object,System.String)"></member>
    <member name="M:Microsoft.VisualStudio.Designer.Interfaces.IVSMDDesignerService.CreateDesignerLoader(System.String)"></member>
    <member name="P:Microsoft.VisualStudio.Designer.Interfaces.IVSMDDesignerService.DesignViewAttribute"></member>
    <member name="M:Microsoft.VisualStudio.Designer.Interfaces.IVSMDDesignerService.GetDesignerLoaderClassForFile(System.String)"></member>
    <member name="M:Microsoft.VisualStudio.Designer.Interfaces.IVSMDDesignerService.RegisterDesignViewAttribute(System.Object,System.Int32,System.Int32,System.String)"></member>
    <member name="T:Microsoft.VisualStudio.Designer.Interfaces.IVSMDPerPropertyBrowsing"></member>
    <member name="M:Microsoft.VisualStudio.Designer.Interfaces.IVSMDPerPropertyBrowsing.GetPropertyAttributes(System.Int32,System.UInt32@,System.IntPtr,System.IntPtr)"></member>
    <member name="T:Microsoft.VisualStudio.Designer.Interfaces.IVSMDPropertyBrowser"></member>
    <member name="M:Microsoft.VisualStudio.Designer.Interfaces.IVSMDPropertyBrowser.CreatePropertyGrid"></member>
    <member name="M:Microsoft.VisualStudio.Designer.Interfaces.IVSMDPropertyBrowser.Refresh"></member>
    <member name="P:Microsoft.VisualStudio.Designer.Interfaces.IVSMDPropertyBrowser.WindowGlyphResourceID"></member>
    <member name="T:Microsoft.VisualStudio.Designer.Interfaces.IVSMDPropertyGrid"></member>
    <member name="P:Microsoft.VisualStudio.Designer.Interfaces.IVSMDPropertyGrid.CommandsVisible"></member>
    <member name="M:Microsoft.VisualStudio.Designer.Interfaces.IVSMDPropertyGrid.Dispose"></member>
    <member name="M:Microsoft.VisualStudio.Designer.Interfaces.IVSMDPropertyGrid.GetOption(Microsoft.VisualStudio.Designer.Interfaces._PROPERTYGRIDOPTION)"></member>
    <member name="P:Microsoft.VisualStudio.Designer.Interfaces.IVSMDPropertyGrid.GridSort"></member>
    <member name="P:Microsoft.VisualStudio.Designer.Interfaces.IVSMDPropertyGrid.Handle"></member>
    <member name="M:Microsoft.VisualStudio.Designer.Interfaces.IVSMDPropertyGrid.Refresh"></member>
    <member name="P:Microsoft.VisualStudio.Designer.Interfaces.IVSMDPropertyGrid.SelectedPropertyName"></member>
    <member name="M:Microsoft.VisualStudio.Designer.Interfaces.IVSMDPropertyGrid.SetOption(Microsoft.VisualStudio.Designer.Interfaces._PROPERTYGRIDOPTION,System.Object)"></member>
    <member name="M:Microsoft.VisualStudio.Designer.Interfaces.IVSMDPropertyGrid.SetSelectedObjects(System.Int32,System.Int32)"></member>
  </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\VisualStudio\VS10RTM\PublicAssemblies\Microsoft.VisualStudio.QualityTools.WebTestFramework.xml ===
ï»¿<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>Microsoft.VisualStudio.QualityTools.WebTestFramework</name>
  </assembly>
  <members>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.AlwaysExecuteRecorderPluginAttribute">
      <summary>Attribute to indicate that the recorder plug-in should always be executed.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.AlwaysExecuteRecorderPluginAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.AlwaysExecuteRecorderPluginAttribute" /> class.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.BaseEnumStringConverter`1">
      <summary>Helper class that helps with conversions between enum values and strings.</summary>
      <typeparam name="T"></typeparam>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.BaseEnumStringConverter`1.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.BaseEnumStringConverter`1" /> class.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.BaseEnumStringConverter`1.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Gets a value indicating whether this converter can convert an object in the given source type to a string using the specified context.</summary>
      <returns>true if this converter can perform the conversion; otherwise, false.</returns>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
      <param name="sourceType">A <see cref="T:System.Type" /> that represents the type you want to convert from.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.BaseEnumStringConverter`1.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Returns whether this converter can convert the object to the specified type.</summary>
      <returns>true if this converter can perform the conversion; otherwise, false.</returns>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
      <param name="destinationType">A <see cref="T:System.Type" /> that represents the type you want to convert to.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.BaseEnumStringConverter`1.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Converts the specified object to the type of this converter, using the specified context and culture information.</summary>
      <returns>An <see cref="T:System.Object" /> that represents the converted value.</returns>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
      <param name="culture">The <see cref="T:System.Globalization.CultureInfo" /> to use as the current culture.</param>
      <param name="value">The <see cref="T:System.Object" /> to convert.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.BaseEnumStringConverter`1.ConvertFromEnumToString(`0)">
      <summary>Converts the specified enum value to a string representative of this enum value.</summary>
      <returns>A string representation of the specified enum value.</returns>
      <param name="value">The enum value to convert.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.BaseEnumStringConverter`1.ConvertFromStringToEnum(System.String)">
      <summary>Converts the specified string to a corresponding enum value.</summary>
      <returns>The enum corresponding to the specified string value.</returns>
      <param name="value">The string value to convert.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.BaseEnumStringConverter`1.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Converts the specified value object to the specified type, using the specified context and culture information.</summary>
      <returns>An <see cref="T:System.Object" /> that represents the converted value.</returns>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
      <param name="culture">The <see cref="T:System.Globalization.CultureInfo" /> to use as the current culture.</param>
      <param name="value">The <see cref="T:System.Object" /> to convert.</param>
      <param name="destinationType">The <see cref="T:System.Type" /> to convert the <paramref name="value" /> parameter to.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.BaseEnumStringConverter`1.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Returns a collection of standard values for the data type this type converter is designed for when provided with a format context.</summary>
      <returns>A <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> that holds a standard set of valid values, or null if the data type does not support a standard set of values.</returns>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context that can be used to extract additional information about the environment from which this converter is invoked. This parameter or properties of this parameter can be null.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.BaseEnumStringConverter`1.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Returns whether the collection of standard values returned from <see cref="M:Microsoft.VisualStudio.TestTools.WebTesting.BaseEnumStringConverter`1.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" /> is an exclusive list of possible values, using the specified context.</summary>
      <returns>true if the <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> returned from <see cref="M:Microsoft.VisualStudio.TestTools.WebTesting.BaseEnumStringConverter`1.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" /> is an exhaustive list of possible values; false if other values are possible.</returns>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.BaseEnumStringConverter`1.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Returns whether this object supports a standard set of values that can be picked from a list, using the specified context.</summary>
      <returns>true if <see cref="M:Microsoft.VisualStudio.TestTools.WebTesting.BaseEnumStringConverter`1.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" /> should be called to find a common set of values the object supports; otherwise, false.</returns>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.BaseEnumStringConverter`1.PopulateStandardValues">
      <summary>Returns a string array with the string representation of all possible enum values.</summary>
      <returns>A string array with the string representation of all possible enum values.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.BinaryHttpBody"></member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.BinaryHttpBody.#ctor"></member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.BinaryHttpBody.Clone"></member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.BinaryHttpBody.ContentType"></member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.BinaryHttpBody.Data"></member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.BinaryHttpBody.WriteHttpBody(Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequest,System.IO.Stream)"></member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.Comment">
      <summary>Represents a comment that the test designer adds to a Web test.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.Comment.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.Comment" /> class.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.Comment.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.Comment" /> class using the specified string.</summary>
      <param name="commentText">A <see cref="T:System.String" /> that contains the text of the comment. </param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.Comment.Clone">
      <summary>Creates a new <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.Comment" /> that is a copy of the current <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.Comment" />.</summary>
      <returns>A new <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.Comment" /> that is a copy of the current <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.Comment" />.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.Comment.CommentText">
      <summary>Gets or sets the text of the comment. </summary>
      <returns>The text of the comment. </returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.ConditionalConstructType">
      <summary>Enumerates all possible conditional construct types.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.TestTools.WebTesting.ConditionalConstructType.Condition">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.TestTools.WebTesting.ConditionalConstructType.Loop">
      <summary />
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.ConditionalEventArgs">
      <summary>Class to contain <see cref="T:System.EventArgs" /> used for conditional loops and statements.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.ConditionalEventArgs.IsMet">
      <summary>Gets or sets whether the condition was met or not.</summary>
      <returns>true if the condition was met; otherwise, false. </returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.ConditionalEventArgs.Message">
      <summary>Gets or sets the message to appear when this rule is run in playback. This message is not shown during a load test.</summary>
      <returns>A message to appear when this rule is run in playback.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.ConditionalEventArgs.WebTest">
      <summary>Gets the Web test that contains the request that triggered this condition event.</summary>
      <returns>The Web test that triggered this condition event.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.ConditionalRule">
      <summary>Condition rules are executed in a conditional loop or statement. These rules are intended to decide whether the body of the loop or statement should be executed.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.ConditionalRule.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.ConditionalRule" /> class.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.ConditionalRule.CheckCondition(System.Object,Microsoft.VisualStudio.TestTools.WebTesting.ConditionalEventArgs)">
      <summary>Determines whether the condition was met or not.</summary>
      <param name="sender">The sender of the event.</param>
      <param name="e">The <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.ConditionalEventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.ConditionalRule.CleanUp(System.Object,Microsoft.VisualStudio.TestTools.WebTesting.ConditionalEventArgs)">
      <summary>Called after the loop or condition finished executing. This includes any requests in the body. Any cleanup code relevant to the conditional rule should be added to this method.</summary>
      <param name="sender">The sender of the event.</param>
      <param name="e">The <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.ConditionalEventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.ConditionalRule.Initialize(System.Object,Microsoft.VisualStudio.TestTools.WebTesting.ConditionalEventArgs)">
      <summary>Called before the first <see cref="M:Microsoft.VisualStudio.TestTools.WebTesting.ConditionalRule.CheckCondition(System.Object,Microsoft.VisualStudio.TestTools.WebTesting.ConditionalEventArgs)" /> call is made. Any initialization code relevant to the conditional rule should be added to this method.</summary>
      <param name="sender">The sender of the event.</param>
      <param name="e">The <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.ConditionalEventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.ConditionalRule.StringRepresentation">
      <summary>Converts the rule to a string to be displayed in the tree.</summary>
      <returns>A string representation of the rule.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.ConditionalRuleException">
      <summary>A <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.ConditionalRuleException" /> is thrown when an exception occurs while executing one of the three methods of a conditional rule. The three methods are <see cref="M:Microsoft.VisualStudio.TestTools.WebTesting.ConditionalRule.Initialize(System.Object,Microsoft.VisualStudio.TestTools.WebTesting.ConditionalEventArgs)" />, <see cref="M:Microsoft.VisualStudio.TestTools.WebTesting.ConditionalRule.CheckCondition(System.Object,Microsoft.VisualStudio.TestTools.WebTesting.ConditionalEventArgs)" />, and <see cref="M:Microsoft.VisualStudio.TestTools.WebTesting.ConditionalRule.CleanUp(System.Object,Microsoft.VisualStudio.TestTools.WebTesting.ConditionalEventArgs)" />.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.ConditionalRuleException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.ConditionalRuleException" /> class.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.ConditionalRuleException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.ConditionalRuleException" /> class. Used in remoting scenarios when an exception is propagated from the server to the client.</summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> to use for serialization and deserialization.</param>
      <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> to describe the source and destination of the serialized stream.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.ConditionalRuleException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.ConditionalRuleException" /> class with the specified message.</summary>
      <param name="message">The message to use for initialization.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.ConditionalRuleException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.ConditionalRuleException" /> class with the specified message an inner exception.</summary>
      <param name="message">The message.</param>
      <param name="innerException">The inner exception data.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.ConditionalRuleReference">
      <summary>Base class for a reference to a particular conditional rule.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.ConditionalRuleReference.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.ConditionalRuleReference" /> class.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.ConditionalRuleReference.#ctor(Microsoft.VisualStudio.TestTools.WebTesting.ConditionalRuleReference)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.ConditionalRuleReference" /> class by copying the specified <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.ConditionalRuleReference" />.</summary>
      <param name="copy">The <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.ConditionalRuleReference" /> to copy to create the new <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.ConditionalRuleReference" />.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.ConditionalRuleReference.#ctor(System.Type)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.ConditionalRuleReference" /> class with the specified type.</summary>
      <param name="type">The type to use for initialization.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.ConditionalRuleReferenceCollection">
      <summary>Represents a strongly typed container for web-test conditional rule references.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.ConditionalRuleReferenceCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.ConditionalRuleReferenceCollection" /> class.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.ConditionalRuleType">
      <summary>Enumerates all possible condition rule types.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.TestTools.WebTesting.ConditionalRuleType.AnyConditional">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.TestTools.WebTesting.ConditionalRuleType.ConditionOnly">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.TestTools.WebTesting.ConditionalRuleType.LoopOnly">
      <summary />
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.ConditionConditionalRuleReference">
      <summary>Reference to a conditional rule that will be used in a condition.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.ConditionConditionalRuleReference.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.ConditionConditionalRuleReference" /> class.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.ConditionConditionalRuleReference.#ctor(Microsoft.VisualStudio.TestTools.WebTesting.ConditionConditionalRuleReference)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.ConditionConditionalRuleReference" /> class by copying the specified <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.ConditionConditionalRuleReference" />.</summary>
      <param name="copy">The <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.ConditionConditionalRuleReference" /> to copy to create the new <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.ConditionConditionalRuleReference" />.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.ConditionConditionalRuleReference.#ctor(System.Type)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.ConditionConditionalRuleReference" /> class with the specified type.</summary>
      <param name="type">The type to use for initialization.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.ConditionConditionalRuleReference.Clone">
      <summary>Creates a new <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.ConditionConditionalRuleReference" /> that is a copy of the current instance.</summary>
      <returns>A new <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.ConditionConditionalRuleReference" /> that is a copy of the current instance.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.ConnectionFailedWebTestException">
      <summary>An exception that is thrown by the test engine for connection failure errors during a Web test.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.ConnectionFailedWebTestException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.ConnectionFailedWebTestException" /> class.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.ConnectionFailedWebTestException.#ctor(System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.ConnectionFailedWebTestException" /> class with a reference to the inner exception that is the cause of this exception.</summary>
      <param name="innerException">The exception that is the cause of the current exception.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.ConnectionFailedWebTestException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.ConnectionFailedWebTestException" /> class with serialized data, for use in remoting scenarios.</summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown. </param>
      <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.ConnectionFailedWebTestException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.ConnectionFailedWebTestException" /> class with a specified error message.</summary>
      <param name="message">A message that describes the error. </param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.ConnectionFailedWebTestException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.ConnectionFailedWebTestException" /> class with a specified error message and a reference to the inner exception that is the cause of this exception.</summary>
      <param name="message">A message that describes the error.</param>
      <param name="innerException">The exception that is the cause of the current exception.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.ContextParameter">
      <summary>The <see cref="N:Microsoft.VisualStudio.TestTools.WebTesting" /><see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.ContextParameter" /> class encapsulates a single parameter in the WebTest context that has a name and value. A <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.ContextParameter" /> object is typically one of many <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.ContextParameter" /> objects in the WebTest.Context property which is a collection of <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.ContextParameter" /> objects.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.ContextParameter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.ContextParameter" /> class with an empty <see cref="P:Microsoft.VisualStudio.TestTools.WebTesting.ContextParameter.Name" /> and <see cref="P:Microsoft.VisualStudio.TestTools.WebTesting.ContextParameter.Value" />.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.ContextParameter.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.ContextParameter" /> class with the specified <see cref="P:Microsoft.VisualStudio.TestTools.WebTesting.ContextParameter.Name" /> and <see cref="P:Microsoft.VisualStudio.TestTools.WebTesting.ContextParameter.Value" />.</summary>
      <param name="parameterName">The name of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.ContextParameter" />.</param>
      <param name="parameterValue">The value of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.ContextParameter" />.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.ContextParameter.Clone">
      <summary>Creates a new <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.ContextParameter" /> that is a copy of the current instance.</summary>
      <returns>A new <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.ContextParameter" /> that is a copy of the current instance.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.ContextParameter.Name">
      <summary>Gets or sets the name of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.ContextParameter" />.</summary>
      <returns>The name of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.ContextParameter" />.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.ContextParameter.Value">
      <summary>Gets or sets the value of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.ContextParameter" />.</summary>
      <returns>The value of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.ContextParameter" />.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.ContextParameterCollection">
      <summary>Contains a strongly typed collection of <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.ContextParameter" /> objects.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.ContextParameterCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.ContextParameterCollection" /> class.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.CssIterationAttribute">
      <summary>Represents the project iteration to which this test corresponds. This class cannot be inherited.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.CssIterationAttribute.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.CssIterationAttribute" /> class. </summary>
      <param name="cssIteration">A string that identifies the corresponding project iteration.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.CssIterationAttribute.CssIteration">
      <summary>Gets the iteration identifier for the test.</summary>
      <returns>An iteration identifier. </returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.CssProjectStructureAttribute">
      <summary>Represents the node in the team project hierarchy to which this test corresponds.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.CssProjectStructureAttribute.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.CssProjectStructureAttribute" /> class. </summary>
      <param name="cssProjectStructure">A string that identifies the corresponding project feature.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.CssProjectStructureAttribute.CssProjectStructure">
      <summary>Gets the project feature identifier for the test.</summary>
      <returns>A project feature identifier.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.DataBindingAccessMethod">
      <summary>Enumeration for the access method that is used for data binding.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.TestTools.WebTesting.DataBindingAccessMethod.Random">
      <summary>Randomly selects data from the data source for the duration of the test.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.TestTools.WebTesting.DataBindingAccessMethod.Sequential">
      <summary>Sequentially selects data from the data source for the duration of the test. If necessary, starts at the first row of the data source again.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.TestTools.WebTesting.DataBindingAccessMethod.Unique">
      <summary>Sequentially selects each element in the data source only one time and ends the test when the data is exhausted. For example, if the data source has ten rows, then the load test will have ten test iterations executed and then stop, even if there is time left in the test duration. Additionally, if there are other tests in the load test not using the unique data binding option, the load test will continue to run those tests although the unique tests have ended.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.TestTools.WebTesting.DataBindingAccessMethod.DoNotMoveCursor">
      <summary />
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.DataBindingAttribute">
      <summary>Contains information that defines data binding properties for a Web test. This class cannot be inherited.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.DataBindingAttribute.#ctor(System.String,System.String,System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.DataBindingAttribute" /> class.</summary>
      <param name="dataSourceName">The name of the data source to bind.</param>
      <param name="tableName">The name of the table that contains the data to bind.</param>
      <param name="columnName">The name of the column that contains data to bind.</param>
      <param name="contextVariableName">The name of the variable that represents the data-bound value.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.DataBindingAttribute.ColumnName">
      <summary>Gets the name of the column that contains data to bind.</summary>
      <returns>A column name.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.DataBindingAttribute.ContextVariableName">
      <summary>Gets the name of the variable that represents the data-bound value.</summary>
      <returns>The name of the variable that represents the data-bound value.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.DataBindingAttribute.DataSourceName">
      <summary>Gets the name of the data source to bind.</summary>
      <returns>A data source name. </returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.DataBindingAttribute.TableName">
      <summary>Gets the name of the table that contains the data to bind. </summary>
      <returns>A table name. </returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.DataBindingSelectColumns"></member>
    <member name="F:Microsoft.VisualStudio.TestTools.WebTesting.DataBindingSelectColumns.SelectAllColumns">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.TestTools.WebTesting.DataBindingSelectColumns.SelectOnlyBoundColumns">
      <summary />
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.DataSource">
      <summary>Defines a data source for a Web test. </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.DataSource.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.DataSource" /> class. </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.DataSource.Clone">
      <summary>Creates a new instance of the data source. </summary>
      <returns>A new instance of the data source.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.DataSource.Connection">
      <summary>Gets the connection string that is used to connect to the data source. The format for the connection string is the same as for the ConnectionString property of the System.Data.OleDbConnection class.</summary>
      <returns>The connection string that is used to connect to the data source.</returns>
    </member>
    <member name="F:Microsoft.VisualStudio.TestTools.WebTesting.DataSource.CsvProvider">
      <summary>Specifies a .csv file as a data source for a Web test. </summary>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.DataSource.Name">
      <summary>Gets or sets the name for the data source that uniquely identifies the data source from other data sources in the Web test.</summary>
      <returns>The name for the data source.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.DataSource.Provider">
      <summary>Gets the provider-invariant name for this data source. Example: System.Data.OleDb.</summary>
      <returns>The provider-invariant name for this data source.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.DataSource.SetConnection(System.String,System.String)">
      <summary>Sets the provider and connection string for the data source.</summary>
      <param name="provider">The <see cref="P:Microsoft.VisualStudio.TestTools.WebTesting.DataSource.Provider" /> name for the data source. </param>
      <param name="connection">The <see cref="P:Microsoft.VisualStudio.TestTools.WebTesting.DataSource.Connection" /> string to set for this data source. </param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.DataSource.SetConnection(System.String,System.String,System.String)">
      <summary>Sets the provider and connection string and enables a different string that you can use as a display value.</summary>
      <param name="provider">The <see cref="P:Microsoft.VisualStudio.TestTools.WebTesting.DataSource.Provider" /> name for the data source.</param>
      <param name="connection">The <see cref="P:Microsoft.VisualStudio.TestTools.WebTesting.DataSource.Connection" /> string to set for this data source.</param>
      <param name="connectionDisplayValue">The connection string value to be displayed in the editor. This value should be the same as the connection string with security value stripped out.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.DataSource.Tables">
      <summary>A <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.DataSourceTableCollection" /> object that contains a <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.DataSourceTable" /> object for each table in the data source that can be used by the Web test.</summary>
      <returns>A <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.DataSourceTableCollection" /> object.</returns>
    </member>
    <member name="F:Microsoft.VisualStudio.TestTools.WebTesting.DataSource.XmlProvider">
      <summary>Specifies an XML data source for a Web test.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.DataSourceAttribute">
      <summary>Contains information that describes a data source for a Web test. This class cannot be inherited. </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.DataSourceAttribute.#ctor(System.String,System.String,Microsoft.VisualStudio.TestTools.WebTesting.DataBindingAccessMethod,System.String)">
      <summary>Initializes an instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.DataSourceAttribute" /> class using a single table and the defined access method.</summary>
      <param name="dataSourceName">The name of the data source.</param>
      <param name="connectionString">The connection string to access the data source.</param>
      <param name="accessMethod">The mode for accessing data from the data source.</param>
      <param name="tableName">The table name within the data source that contain information to be accessed.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.DataSourceAttribute.#ctor(System.String,System.String,Microsoft.VisualStudio.TestTools.WebTesting.DataBindingAccessMethod,System.String[])">
      <summary>Initializes an instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.DataSourceAttribute" /> class using an array of table names.</summary>
      <param name="dataSourceName">The name of the data source.</param>
      <param name="connectionString">The connection string to access the data source.</param>
      <param name="accessMethod">The mode for accessing data from the data source.</param>
      <param name="tableNames">The table names within the data source that contain information to be accessed.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.DataSourceAttribute.#ctor(System.String,System.String,System.String)">
      <summary>Initializes an instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.DataSourceAttribute" /> class using a single table.</summary>
      <param name="dataSourceName">The name of the data source.</param>
      <param name="connectionString">The connection string to access the data source.</param>
      <param name="tableName">The table name within the data source that contain information to be accessed.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.DataSourceAttribute.#ctor(System.String,System.String,System.String,Microsoft.VisualStudio.TestTools.WebTesting.DataBindingAccessMethod,Microsoft.VisualStudio.TestTools.WebTesting.DataBindingSelectColumns,System.String)"></member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.DataSourceAttribute.#ctor(System.String,System.String,System.String,Microsoft.VisualStudio.TestTools.WebTesting.DataBindingAccessMethod,Microsoft.VisualStudio.TestTools.WebTesting.DataBindingSelectColumns,System.String[])"></member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.DataSourceAttribute.#ctor(System.String,System.String,System.String,Microsoft.VisualStudio.TestTools.WebTesting.DataBindingAccessMethod,System.String)">
      <summary>Initializes an instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.DataSourceAttribute" /> class using a single table, the defined access method, and the name of the data source provider.</summary>
      <param name="dataSourceName">The name of the data source.</param>
      <param name="providerName">The name of the data source provider.</param>
      <param name="connectionString">The connection string to access the data source.</param>
      <param name="accessMethod">The mode for accessing data from the data source.</param>
      <param name="tableName">The table name within the data source that contain information to be accessed.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.DataSourceAttribute.#ctor(System.String,System.String,System.String,Microsoft.VisualStudio.TestTools.WebTesting.DataBindingAccessMethod,System.String[])">
      <summary>Initializes an instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.DataSourceAttribute" /> class using an array of table names, the defined access method, and the name of the data source provider.</summary>
      <param name="dataSourceName">The name of the data source.</param>
      <param name="providerName">The name of the data source provider.</param>
      <param name="connectionString">The connection string to access the data source.</param>
      <param name="accessMethod">The mode for accessing data from the data source.</param>
      <param name="tableNames">The table names within the data source that contain information to be accessed.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.DataSourceAttribute.#ctor(System.String,System.String,System.String,System.String)">
      <summary>Initializes an instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.DataSourceAttribute" /> class using a single table and the name of the data source provider.</summary>
      <param name="dataSourceName">The name of the data source.</param>
      <param name="providerName">The name of the data source provider. </param>
      <param name="connectionString">The connection string to access the data source.</param>
      <param name="tableName">The table name within the data source that contain information to be accessed.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.DataSourceAttribute.#ctor(System.String,System.String,System.String,System.String[])">
      <summary>Initializes an instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.DataSourceAttribute" /> class using an array of table names and the name of the data source provider.</summary>
      <param name="dataSourceName">The name of the data source.</param>
      <param name="providerName">The name of the data source provider.</param>
      <param name="connectionString">The connection string to access the data source.</param>
      <param name="tableNames">The table names within the data source that contain information to be accessed.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.DataSourceAttribute.#ctor(System.String,System.String,System.String[])">
      <summary>Initializes an instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.DataSourceAttribute" /> class.</summary>
      <param name="dataSourceName">The name of the data source.</param>
      <param name="connectionString">The connection string to access the data source.</param>
      <param name="tableNames">The table names, within the data source, that contain information to be accessed.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.DataSourceAttribute.AccessMethod">
      <summary>Gets the method by which data will be accessed in the data source.</summary>
      <returns>A <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.DataBindingAccessMethod" /> enumeration.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.DataSourceAttribute.ConnectionString">
      <summary>Gets the connection for the data source.</summary>
      <returns>A connection string.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.DataSourceAttribute.DataSourceName">
      <summary>Gets the name of the data source.</summary>
      <returns>A data source name.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.DataSourceAttribute.DataSourceProviderName">
      <summary>Gets the name of the data source provider. </summary>
      <returns>The name of the data source provider.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.DataSourceAttribute.SelectColumns"></member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.DataSourceAttribute.TableNames">
      <summary>Gets the table names in the data source that contains data to be accessed.</summary>
      <returns>An array of table names.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.DataSourceCollection">
      <summary>Contains a strongly typed collection of <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.DataSourceCollection" /> objects.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.DataSourceCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.DataSourceCollection" /> class.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.DataSourceTable">
      <summary>An object that represents a table in a data source that you can use in a Web test.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.DataSourceTable.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.DataSourceTable" /> class.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.DataSourceTable.AccessMethod">
      <summary>Gets or sets the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.DataBindingAccessMethod" /> enumeration value: either Sequential, Random, or Unique.</summary>
      <returns>The <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.DataBindingAccessMethod" /> enumeration value</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.DataSourceTable.Clone">
      <summary>Creates a new <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.DataSourceTable" /> that is a copy of the current instance.</summary>
      <returns>A new <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.DataSourceTable" /> that is a copy of the current instance.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.DataSourceTable.Name">
      <summary>Gets or sets the name for the data source table. This name must be unique throughout the data source.</summary>
      <returns>The name for the data source table.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.DataSourceTable.SelectColumns"></member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.DataSourceTableCollection">
      <summary>Contains a strongly typed collection of <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.DataSourceTableCollection" /> objects.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.DataSourceTableCollection.#ctor">
      <summary>Initializes an instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.DataSourceTableCollection" /> class.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.DeclarativeWebTest">
      <summary>Represents a declarative, XML-based Web test. </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.DeclarativeWebTest.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.DeclarativeWebTest" /> class.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.DeclarativeWebTest.Clone">
      <summary>Creates a new <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.DeclarativeWebTest" /> that is a copy of the current instance.</summary>
      <returns>A new <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.DeclarativeWebTest" /> that is a copy of the current instance.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.DeclarativeWebTest.ConditionalRuleReferences"></member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.DeclarativeWebTest.ContextParameters">
      <summary>Gets the set of context parameters associated with this Web test.</summary>
      <returns>A collection of context parameters. </returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.DeclarativeWebTest.Description">
      <summary>Gets or sets a textual description of this Web test. </summary>
      <returns>A description of this Web test. </returns>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.DeclarativeWebTest.GetExtractionRuleVariables"></member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.DeclarativeWebTest.GetItem(System.Int32)"></member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.DeclarativeWebTest.GetRequestEnumerator">
      <returns>An enumerator.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.DeclarativeWebTest.InitializeDataBinding"></member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.DeclarativeWebTest.InsertItemAt(System.Int32,Microsoft.VisualStudio.TestTools.WebTesting.WebTestItem)"></member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.DeclarativeWebTest.Items">
      <summary>Gets or sets the set of items that are contained in this Web test. Items are transactions, requests, comments, and included Web tests.</summary>
      <returns>A collection of items. </returns>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.DeclarativeWebTest.RemoveItemAt(System.Int32)"></member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.DeclarativeWebTest.RequestItems"></member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.DeclarativeWebTestSerializer">
      <summary>Loads the contents of a .webtest file into an instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.DeclarativeWebTest" /> class.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.DeclarativeWebTestSerializer.Open(System.IO.Stream)">
      <param name="stream"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.DeclarativeWebTestSerializer.Open(System.String)">
      <summary>Opens a Web test file. </summary>
      <returns>A declarative Web test. </returns>
      <param name="fileName">The path to and name of a Web test file.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.DeclarativeWebTestSerializer.Save(Microsoft.VisualStudio.TestTools.WebTesting.DeclarativeWebTest,System.IO.Stream)">
      <summary>Saves a Web test to a stream. </summary>
      <param name="declarativeWebTest">A declarative Web test.</param>
      <param name="stream"></param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.DeclarativeWebTestSerializer.Save(Microsoft.VisualStudio.TestTools.WebTesting.DeclarativeWebTest,System.String)">
      <summary>Saves a Web test file. </summary>
      <param name="declarativeWebTest">A declarative Web test. </param>
      <param name="fileName">The path to and name of a Web test file.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.DeploymentItemAttribute">
      <summary>Used to specify deployment items such as a file or directory for per-test-deployment. This class cannot be inherited.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.DeploymentItemAttribute.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.DeploymentItemAttribute" /> class. Use the <paramref name="path" /> parameter to specify the path to a file or directory to deploy.  </summary>
      <param name="path">The relative or absolute path to the deployment item or directory to deploy. All items or directories will be deployed to the directory where the deployed test assemblies reside.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.DeploymentItemAttribute.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.DeploymentItemAttribute" /> class. Use the <paramref name="path" /> parameter to specify the path to a file or directory to deploy, and the <paramref name="outputDirectory" /> parameter to specify the path to the output directory.  </summary>
      <param name="path">The relative or absolute path to the deployment item or directory to deploy.</param>
      <param name="outputDirectory">The path to the output directory. This contains all items and directories identified by <paramref name="path" />. This directory will be relative to the directory that contains the deployed test assemblies.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.DeploymentItemAttribute.OutputDirectory">
      <summary>Gets a value representing the path to the output directory.</summary>
      <returns>A value representing the directory under the deployment directory that will contain the deployed files and directories.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.DeploymentItemAttribute.Path">
      <summary>Gets a value that represents the path to the deployment item.</summary>
      <returns>The path to the file or directory to deploy.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.ExtractHtmlSelectTag">
      <summary>An extraction rule used to extract the selected option from an HTML select tag.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.ExtractHtmlSelectTag.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.ExtractHtmlSelectTag" /> class.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.ExtractHtmlSelectTag.Extract(System.Object,Microsoft.VisualStudio.TestTools.WebTesting.ExtractionEventArgs)">
      <summary>Extracts the selected option of a particular HTML select tag.</summary>
      <param name="sender">The sender of the event.</param>
      <param name="e">The <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.ExtractionEventArgs" /> that contains the event data.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.ExtractHtmlSelectTag.Index">
      <summary>Gets or sets the index.</summary>
      <returns>The index.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.ExtractHtmlSelectTag.SelectTagName">
      <summary>Gets or sets the select tag name.</summary>
      <returns>The select tag name.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.ExtractHtmlTagInnerText">
      <summary>Extraction rule used to extract the inner text from an HTML tag</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.ExtractHtmlTagInnerText.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.ExtractHtmlTagInnerText" /> class.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.ExtractHtmlTagInnerText.AttributeName">
      <summary>Gets or sets the attribute name.</summary>
      <returns>The attribute name.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.ExtractHtmlTagInnerText.AttributeValue">
      <summary>Gets or sets the attribute value.</summary>
      <returns>The attribute value.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.ExtractHtmlTagInnerText.CollapseWhiteSpace">
      <summary>Gets or sets the indicator of whether to collapse white space.</summary>
      <returns>true to collapse white space; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.ExtractHtmlTagInnerText.Extract(System.Object,Microsoft.VisualStudio.TestTools.WebTesting.ExtractionEventArgs)">
      <summary>Extracts the Inner Text of a particular HTML tag.</summary>
      <param name="sender">The sender of the event.</param>
      <param name="e">The <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.ExtractionEventArgs" /> that contains the event data.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.ExtractHtmlTagInnerText.HasClosingTags">
      <summary>Gets or sets the indicator of whether to include closing tags.</summary>
      <returns>true to include closing tags; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.ExtractHtmlTagInnerText.Index">
      <summary>Gets or sets the index.</summary>
      <returns>The index.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.ExtractHtmlTagInnerText.RemoveInnerTags">
      <summary>Gets or sets the indicator of whether to remove the inner tags.</summary>
      <returns>true to remove the inner tags; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.ExtractHtmlTagInnerText.TagName">
      <summary>Gets or sets the tag name.</summary>
      <returns>The tag name.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.ExtractionEventArgs">
      <summary>Provides data for the <see cref="E:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequest.ExtractValues" /> event. </summary>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.ExtractionEventArgs.Message">
      <summary>Gets or sets a message that is associated with the results of the <see cref="E:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequest.ExtractValues" /> event.</summary>
      <returns>A message that is associated with the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.ExtractionEventArgs" />.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.ExtractionEventArgs.Request">
      <summary>Gets the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequest" /> object that generated the response.</summary>
      <returns>A <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequest" /> object.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.ExtractionEventArgs.Response">
      <summary>Gets the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResponse" /> object from which to extract values into the context.</summary>
      <returns>A <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResponse" /> object.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.ExtractionEventArgs.Success">
      <summary>Gets or sets a value that indicates whether the extraction rule succeeded.</summary>
      <returns>true if it did succeed; otherwise, false. The default is true.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.ExtractionEventArgs.WebTest">
      <summary>Gets the Web test that contains the request that triggered the extraction event.</summary>
      <returns>A <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTest" /> object.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.ExtractionRule">
      <summary>Base class used to define rules for obtaining data from a Web response that is generated by a Web test. </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.ExtractionRule.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.ExtractionRule" /> class. </summary>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.ExtractionRule.ContextParameterName">
      <summary>Gets or sets the context name of the extracted property.</summary>
      <returns>The context name of the extracted property.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.ExtractionRule.Extract(System.Object,Microsoft.VisualStudio.TestTools.WebTesting.ExtractionEventArgs)">
      <summary>When overridden in a derived class, this method extracts information from a <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.HtmlDocument" /> and places it into the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestContext" />.</summary>
      <param name="sender">The source of the event.</param>
      <param name="e">An <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.ExtractionEventArgs" /> that contains the event data.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.ExtractionRule.RuleDescription">
      <summary>This method is no longer used. Use the <see cref="T:System.ComponentModel.DisplayNameAttribute" /> on the class to set a description for this rule.</summary>
      <returns>The rule description.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.ExtractionRule.RuleName">
      <summary>This method is no longer used. Use the <see cref="T:System.ComponentModel.DisplayNameAttribute" /> on the class to set a display name for this rule.</summary>
      <returns>The rule name.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.ExtractionRuleReference">
      <summary>The <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.ExtractionRuleReference" /> class encapsulates the metadata about an <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.ExtractionRule" /> and the parameter values to use when an instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.ExtractionRule" /> is created when the Web test that uses the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.ExtractionRule" /> is run.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.ExtractionRuleReference.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.ExtractionRuleReference" /> class.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.ExtractionRuleReference.#ctor(System.Type)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.ExtractionRuleReference" /> class using the <see cref="T:System.Type" /> of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.ExtractionRule" /> implementation as a parameter.</summary>
      <param name="type">The <see cref="T:System.Type" /> of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.ExtractionRule" /> implementation.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.ExtractionRuleReference.Clone">
      <summary>Returns a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.ExtractionRuleReference" /> object.</summary>
      <returns>An <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.ExtractionRuleReference" /> object.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.ExtractionRuleReference.ContextParameterName">
      <summary>Gets or sets the name of the context parameter in the Web test's context.</summary>
      <returns>The name of the context parameter in the Web test's context.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.ExtractionRuleReferenceCollection">
      <summary>Contains a strongly typed collection of <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.ExtractionRuleReferenceCollection" /> objects.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.ExtractionRuleReferenceCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.ExtractionRuleReferenceCollection" /> class.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.FileUploadParameter">
      <summary>Represents a file upload form post parameter.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.FileUploadParameter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.FileUploadParameter" /> class.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.FileUploadParameter.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.FileUploadParameter" /> class with values for the inherited Name and UrlEncode properties in addition to the <see cref="P:Microsoft.VisualStudio.TestTools.WebTesting.FileUploadParameter.FileName" /> property.</summary>
      <param name="name">The parameter name.</param>
      <param name="fileName">The name of the file to upload.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.FileUploadParameter.#ctor(System.String,System.String,System.String)"></member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.FileUploadParameter.#ctor(System.String,System.String,System.String,System.Boolean)"></member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.FileUploadParameter.Clone">
      <summary>Performs a MemberwiseClone on this instance.</summary>
      <returns>A <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.FileUploadParameter" /> object.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.FileUploadParameter.ContentType">
      <summary>Gets or sets the content type header.</summary>
      <returns>The content type header. The default value is "application/octet-stream".</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.FileUploadParameter.FileName">
      <summary>Gets or sets the file name to upload.</summary>
      <returns>The file name to upload.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.FileUploadParameter.GenerateUniqueName"></member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.ForLoopComparisonOperator">
      <summary>Enumerates all possible numerical comparison operators for the for loop conditional rule.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.TestTools.WebTesting.ForLoopComparisonOperator.LessThan">
      <summary>Represents a less than comparison.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.TestTools.WebTesting.ForLoopComparisonOperator.LessThanOrEqual">
      <summary>Represents a less than or equal comparison.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.TestTools.WebTesting.ForLoopComparisonOperator.GreaterThan">
      <summary>Represents a greater than comparison.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.TestTools.WebTesting.ForLoopComparisonOperator.GreaterThanOrEqual">
      <summary>Represents a greater than or equal comparison.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.ForLoopComparisonOperatorConverter">
      <summary>Helper class that helps with conversions between enum values and strings.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.ForLoopComparisonOperatorConverter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.ForLoopComparisonOperatorConverter" /> class.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.ForLoopComparisonOperatorConverter.ConvertFromEnumToString(Microsoft.VisualStudio.TestTools.WebTesting.ForLoopComparisonOperator)">
      <summary>Converts the specified enum value to a string representative of this enum value.</summary>
      <returns>A string representation of the specified enum value.</returns>
      <param name="value">The enum value to convert.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.ForLoopComparisonOperatorConverter.ConvertFromStringToEnum(System.String)">
      <summary>Converts the specified string to a corresponding enum value.</summary>
      <returns>The enum corresponding to the specified string value.</returns>
      <param name="value">The string value to convert.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.ForLoopComparisonOperatorConverter.PopulateStandardValues">
      <summary>Returns a string array with the string representation of all possible enum values.</summary>
      <returns>A string array with the string representation of all possible enum values.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.FormPostHttpBody">
      <summary>Represents an HTML form post body with a collection of form parameters.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.FormPostHttpBody.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.FormPostHttpBody" /> class.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.FormPostHttpBody.Clone">
      <summary>Returns a deep copy of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.FormPostHttpBody" />.</summary>
      <returns>A deep copy of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.FormPostHttpBody" />.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.FormPostHttpBody.ContentType">
      <summary>Gets a value that indicates the content type of the data being sent.</summary>
      <returns>A value representing the content type.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.FormPostHttpBody.FormPostParameters">
      <summary>Gets the list of FormPostParameters included in this <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.FormPostHttpBody" />.</summary>
      <returns>A <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.FormPostParameterCollection" /> collection that contains each <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.FormPostParameter" /> associated with this <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.FormPostHttpBody" />.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.FormPostHttpBody.WriteHttpBody(Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequest,System.IO.Stream)">
      <summary>Writes the HTTP body stream.</summary>
      <param name="request">Used to define the encoding of non-ASCII characters.</param>
      <param name="bodyStream">The stream to add the form post HTTP body.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.FormPostParameter">
      <summary>Represents an HTML form POST parameter.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.FormPostParameter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.FormPostParameter" /> object.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.FormPostParameter.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.FormPostParameter" /> object with a name/value pair.</summary>
      <param name="name">The form post parameter name.</param>
      <param name="value">The form post parameter value.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.FormPostParameter.#ctor(System.String,System.String,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.FormPostParameter" /> object with a form post parameter name/value pair and a Boolean value that indicates whether the FormPost Parameter is URL encoded.</summary>
      <param name="name">The form post parameter name.</param>
      <param name="value">The form post parameter value.</param>
      <param name="urlEncode">true if this <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.FormPostParameter" /> is URL encoded; otherwise, false.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.FormPostParameter.Clone">
      <summary>Creates a clone of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.FormPostParameter" /> object.</summary>
      <returns>A <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.FormPostParameter" /> object.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.FormPostParameterCollection">
      <summary>Represents a strongly typed container for form post parameters.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.FormPostParameterCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.FormPostParameterCollection" /> class.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.FormPostParameterCollection.Add(System.String,System.String)">
      <summary>Adds a <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.FormPostParameter" /> created from a parameter name and value.</summary>
      <param name="parameterName">The name of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.FormPostParameter" /> to be created and then added to the collection.</param>
      <param name="parameterValue">The value of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.FormPostParameter" /> to be created and then added to the collection.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.FormPostParameterCollection.Add(System.String,System.String,System.Boolean)">
      <summary>Adds a <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.FormPostParameter" /> created from a parameter name and value and a value that indicates whether the form post parameter is URL encoded.</summary>
      <param name="parameterName">The name of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.FormPostParameter" /> to be created and then added to the collection.</param>
      <param name="parameterValue">The value of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.FormPostParameter" /> to be created and then added to the collection.</param>
      <param name="urlEncode">true if the form post parameter is URL encoded; otherwise, false.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.FormPostParameterCollection.Contains(System.String)">
      <summary>Gets a value that indicates whether a <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.FormPostParameter" /> occurs in this collection.</summary>
      <returns>true if the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.FormPostParameter" /> exists in this collection; otherwise, false.</returns>
      <param name="parameterName">The name of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.FormPostParameter" /> to look for in this collection.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.HtmlAttribute">
      <summary>Represents an HTML attribute.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.HtmlAttribute.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.HtmlAttribute" /> class.</summary>
      <param name="name">The name of the HTML attribute.</param>
      <param name="value">The value of the HTML attribute.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.HtmlAttribute.Name">
      <summary>Gets the attribute name set by the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.HtmlAttribute" /> constructor.</summary>
      <returns>The name of the attribute.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.HtmlAttribute.Value">
      <summary>Gets the attribute value set by the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.HtmlAttribute" /> constructor.</summary>
      <returns>The value of the attribute.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.HtmlAttributeWithOffsets">
      <summary>Extends the basic <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.HtmlAttribute" /> and tracks the beginning and ending offsets within an HTML document.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.HtmlAttributeWithOffsets.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.HtmlAttributeWithOffsets" /> class.</summary>
      <param name="name">The name of the HTML attribute.</param>
      <param name="value">The value of the HTML attribute.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.HtmlAttributeWithOffsets.BeginOffset">
      <summary>Gets or sets the first character offset of an HTML attribute within an HTML document.</summary>
      <returns>A value that represents an HTML attribute offset.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.HtmlAttributeWithOffsets.EndOffset">
      <summary>Gets or sets the last character offset of an HTML attribute within an HTML document.</summary>
      <returns>A value that represents an HTML attribute offset.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.HtmlDocument">
      <summary>Provides access to the set of HTML tags in an HTML response body.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.HtmlDocument.#ctor(System.Uri,System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.HtmlDocument" /> class. This constructor takes a string and uses it as the document.</summary>
      <param name="documentLocation">A URI representing the document location.</param>
      <param name="documentContent">The contents of the document.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.HtmlDocument.DependentRequestUrls">
      <summary>Gets the URLs for dependent requests found in the HTML document.</summary>
      <returns>An <see cref="T:System.Collections.Generic.ICollection`1" /> containing strings representing the dependent requests found in the HTML document.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.HtmlDocument.GetFilteredHtmlTags(System.String[])">
      <summary>Parses <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.HtmlDocument" /> and returns an iterator with all the HTML tags found that match the tags that are contained in the <paramref name="tagFilter" /> array.</summary>
      <returns>A <see cref="T:System.Collections.Generic.IEnumerable`1" /> object.</returns>
      <param name="tagFilter">An array that contains HTML tags to be used as a filter for the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.HtmlDocument" />.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.HtmlDocument.HtmlTags">
      <summary>Gets all the tags that are available in the document.</summary>
      <returns>An <see cref="T:System.Collections.Generic.IEnumerable`1" /> object that contains HTML tags.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.HtmlDocument.SetParserOffsetTracking(System.Boolean)">
      <summary>Sets the parser mode for tracking tag and attribute value offsets.</summary>
      <param name="flag">true for tracking tag and attribute value offsets; otherwise, false.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.HtmlTag">
      <summary>The <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.HtmlTag" /> object is the foundation of the HTML document and holds the parsed structure of the document.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.HtmlTag.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.HtmlTag" /> class.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.HtmlTag.AddAttribute(Microsoft.VisualStudio.TestTools.WebTesting.HtmlAttribute)">
      <summary>Adds an attribute to the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.HtmlTag" /> collection.</summary>
      <param name="attribute">The <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.HtmlAttribute" /> to add to the collection.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.HtmlTag.Attributes">
      <summary>Gets a collection of attributes associated with the HTML tag.</summary>
      <returns>A <see cref="T:System.Collections.Generic.IList`1" /> object.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.HtmlTag.GetAttributeValue(System.String)">
      <summary>Gets the value of a specified attribute.</summary>
      <returns>A <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.HtmlAttribute" /> object. </returns>
      <param name="attributeName">The name of the attribute. Used as the key to look up the attribute value.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.HtmlTag.GetAttributeValueAsString(System.String)">
      <summary>Gets the value of a specified attribute in string format.</summary>
      <returns>An attribute value in a string format.</returns>
      <param name="attributeName">The name of the attribute. Used as the key to look up the attribute value.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.HtmlTag.Name">
      <summary>Gets or sets the name of the tag.</summary>
      <returns>The tag name.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.HtmlTagInnerText">
      <summary>This class represents the inner text of an html tag. It contains the beginning and ending offset of the inner text location in the whole document.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.HtmlTagInnerText.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.HtmlTagInnerText" /> class.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.HtmlTagInnerText.#ctor(System.String,System.Int32,System.Int32,System.Boolean,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.HtmlTagInnerText" /> class using the specified values.</summary>
      <param name="documentContent">The document content.</param>
      <param name="beginOffset">The beginning offset of the inner text within the document.</param>
      <param name="endOffset">The ending offset of the inner text within the document.</param>
      <param name="removeInnerTags">true to remove the inner HTML tags; otherwise, false.</param>
      <param name="collapseWhiteSpace">true to collapse whitespace within the inner text; otherwise, false.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.HtmlTagInnerText.BeginOffset">
      <summary>Gets the beginning offset of the inner text within the document.</summary>
      <returns>The beginning offset of the inner text within the document.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.HtmlTagInnerText.CollapseWhiteSpace">
      <summary>Gets or sets the indicator of whether to collapse white space.</summary>
      <returns>true to collapse white space; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.HtmlTagInnerText.DocumentContent">
      <summary>Gets the complete document.</summary>
      <returns>The complete document.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.HtmlTagInnerText.EndOffset">
      <summary>Gets the ending offset of the inner text within the document.</summary>
      <returns>The ending offset of the inner text within the document.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.HtmlTagInnerText.RemoveInnerTags">
      <summary>Gets or sets the indicator of whether to remove the inner tags.</summary>
      <returns>true to remove the inner tags; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.HtmlTagInnerText.Value">
      <summary>Gets a string that contains the inner text represented by this object.</summary>
      <returns>A string that contains the inner text.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.HtmlTagInnerTextParser">
      <summary>A specialized parser used to extract the inner text from HTML tags located in an HTML document.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.HtmlTagInnerTextParser.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.HtmlTagInnerTextParser" /> class by using the specified HTML document text.</summary>
      <param name="documentContent">The HTML document text for this <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.HtmlTagInnerTextParser" /> object.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.HtmlTagInnerTextParser.GetInnerTextForHtmlTags(System.String,System.Boolean,System.Boolean,System.Boolean)">
      <summary>Returns an enumerable list of all the inner text that matches the specified parameters.</summary>
      <returns>An enumerable list of the inner text of the matching tags.</returns>
      <param name="tagName">The name of the tag to search for.</param>
      <param name="hasClosingTag">Specifies if this tag has a closing tag.</param>
      <param name="removeInnerTags">true to filter out HTML tags from the inner text; otherwise, false.</param>
      <param name="collapseWhiteSpace">true to collapse the extra white space in the HTML document; otherwise, false.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.HtmlTagInnerTextParser.GetInnerTextForHtmlTags(System.String,System.Boolean,System.Boolean,System.Boolean,System.Int32,System.Int32)">
      <summary>Returns an enumerable list of all the inner text that matches the specified parameters.</summary>
      <returns>An enumerable list of the inner text of the matching tags.</returns>
      <param name="tagName">The name of the tag to search for.</param>
      <param name="hasClosingTag">Specifies if this tag has a closing tag.</param>
      <param name="removeInnerTags">true to filter out HTML tags from the inner text; otherwise, false.</param>
      <param name="collapseWhiteSpace">true to collapse the extra white space in the HTML document; otherwise, false.</param>
      <param name="beginParseOffset">The start offset for parsing the HTML document.</param>
      <param name="endParseOffset">The end offset for the parsing the HTML document.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.HtmlTagInnerTextParser.GetInnerTextForHtmlTags(System.String,System.String,System.String,System.Boolean,System.Boolean,System.Boolean)">
      <summary>Returns an enumerable list of all the inner text that matches the specified parameters.</summary>
      <returns>An enumerable list of the inner text of the matching tags.</returns>
      <param name="tagName">The name of the tag to search for.</param>
      <param name="attributeName">The name of the attribute to match.</param>
      <param name="attributeValue">The value of the attribute to match.</param>
      <param name="hasClosingTag">Specifies if this tag has a closing tag.</param>
      <param name="removeInnerTags">true to filter out HTML tags from the inner text; otherwise, false.</param>
      <param name="collapseWhiteSpace">true to collapse the extra white space in the HTML document; otherwise, false.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.HtmlTagInnerTextParser.GetInnerTextForHtmlTags(System.String,System.String,System.String,System.Boolean,System.Boolean,System.Boolean,System.Int32,System.Int32)">
      <summary>Returns an enumerable list of all the inner text that matches the specified parameters.</summary>
      <returns>An enumerable list of the inner text of the matching tags.</returns>
      <param name="tagName">The name of the tag to search for.</param>
      <param name="attributeName">The name of the attribute to match.</param>
      <param name="attributeValue">The value of the attribute to match.</param>
      <param name="hasClosingTag">Specifies if this tag has a closing tag.</param>
      <param name="removeInnerTags">true to filter out HTML tags from the inner text; otherwise, false.</param>
      <param name="collapseWhiteSpace">true to collapse the extra white space in the HTML document; otherwise, false.</param>
      <param name="beginParseOffset">The start offset for parsing the HTML document.</param>
      <param name="endParseOffset">The end offset for the parsing the HTML document.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.HtmlTagWithOffsets">
      <summary>Extends the basic <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.HtmlTag" /> by tracking the beginning and ending tag offsets within the HTML document. </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.HtmlTagWithOffsets.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.HtmlTagWithOffsets" /> class. </summary>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.HtmlTagWithOffsets.BeginOffset">
      <summary>Gets or set the offset for an open bracket of <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.HtmlTag" /> within a HTML document.</summary>
      <returns>The offset for a tag for an open bracket of <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.HtmlTag" />.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.HtmlTagWithOffsets.EndOffset">
      <summary>Gets or set the offset for an <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.HtmlTag" /> close bracket within a HTML document.</summary>
      <returns>The offset for a close bracket for <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.HtmlTag" />.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.IBinaryHttpBodyEditorPlugin"></member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.IBinaryHttpBodyEditorPlugin.CreateEditor(System.String,System.Byte[])"></member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.IBinaryHttpBodyEditorPlugin.GetNewValue"></member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.IBinaryHttpBodyEditorPlugin.SupportsContentType(System.String)"></member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.IHttpBody">
      <summary>Provides a common interface for accessing an HTTP body. </summary>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.IHttpBody.ContentType">
      <summary>Gets a value that represents the content-type of the body.</summary>
      <returns>The body content-type.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.IHttpBody.WriteHttpBody(Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequest,System.IO.Stream)">
      <summary>Creates a stream that contains the HTTP body.</summary>
      <param name="request">Used to define the encoding of non-ASCII characters.</param>
      <param name="bodyStream">The stream to add the form post HTTP body.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.IncludeCodedWebTestAttribute">
      <summary>Contains information that defines a coded Web test that is included in another Web test.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.IncludeCodedWebTestAttribute.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.IncludeCodedWebTestAttribute" /> class.</summary>
      <param name="fullClassName">The full class name of the coded Web test attribute.</param>
      <param name="path">The path of the coded Web test attribute.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.IncludeCodedWebTestAttribute.FullClassName">
      <summary>Gets or sets the full class name of the coded Web test attribute.</summary>
      <returns>The full class name of the coded Web test attribute.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.IncludeCodedWebTestAttribute.Path">
      <summary>Gets or sets the path of the coded Web test attribute.</summary>
      <returns>The path of the coded Web test attribute.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.IncludeDeclarativeWebTestAttribute">
      <summary>Contains information that defines a coded Web test that is included in another Web test.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.IncludeDeclarativeWebTestAttribute.#ctor(System.String,System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.IncludeDeclarativeWebTestAttribute" /> class.</summary>
      <param name="name">The name of the Declarative Web Test Attribute.</param>
      <param name="path">The path of the Declarative Web Test Attribute.</param>
      <param name="testId">The Test ID of the Declarative Web Test Attribute.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.IncludeDeclarativeWebTestAttribute.Name">
      <summary>Gets or sets the name of the Declarative Web Test Attribute.</summary>
      <returns>The name of the Declarative Web Test Attribute.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.IncludeDeclarativeWebTestAttribute.Path">
      <summary>Gets or sets the path of the Declarative Web Test Attribute.</summary>
      <returns>The path of the Declarative Web Test Attribute.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.IncludeDeclarativeWebTestAttribute.TestId">
      <summary>Gets or sets the Test ID of the Declarative Web Test Attribute.</summary>
      <returns>The Test ID of the Declarative Web Test Attribute.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.IncludedWebTest">
      <summary>Represents a Web test that is included in another Web test.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.IncludedWebTest.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.IncludedWebTest" /> class.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.IncludedWebTest.Clone">
      <summary>Creates a new <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.IncludedWebTest" /> that is a copy of the current instance.</summary>
      <returns>A new <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.IncludedWebTest" /> that is a copy of the current instance.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.IncludedWebTest.InheritWebTestSettings">
      <summary>Gets or sets a value that indicates whether the included Web test inherits settings from the parent Web test.</summary>
      <returns>A value that indicates whether the included Web test inherits settings from the parent Web test.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.IncludedWebTest.IsCodedWebTest">
      <summary>Gets or sets a value that indicates whether the included Web test is a coded Web test.</summary>
      <returns>A value that indicates whether the included Web test is a coded Web test.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.IncludedWebTest.Name">
      <summary>Gets or sets the name of the included Web test.</summary>
      <returns>The name of the included Web test.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.IncludedWebTest.Path">
      <summary>Gets or sets the file path of the included Web test.</summary>
      <returns>The file path of the included Web test.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.IncludedWebTest.TestId">
      <summary>Gets or sets a string value that contains the TestId of the included Web test.</summary>
      <returns>A GUID value that indicates the TestId of the included Web test. </returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.IStringHttpBodyEditorPlugin"></member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.IStringHttpBodyEditorPlugin.CreateEditor(System.String,System.String)"></member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.IStringHttpBodyEditorPlugin.GetNewValue"></member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.IStringHttpBodyEditorPlugin.SupportsContentType(System.String)"></member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.LoopConditionalRuleReference">
      <summary>Class to contain a reference to a particular conditional rule that will be used in a loop.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.LoopConditionalRuleReference.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.LoopConditionalRuleReference" /> class.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.LoopConditionalRuleReference.#ctor(Microsoft.VisualStudio.TestTools.WebTesting.LoopConditionalRuleReference)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.LoopConditionalRuleReference" /> class by creating a copy of the specified <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.LoopConditionalRuleReference" />.</summary>
      <param name="copy">The <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.LoopConditionalRuleReference" /> to use to create the new <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.LoopConditionalRuleReference" />.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.LoopConditionalRuleReference.#ctor(System.Type)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.LoopConditionalRuleReference" /> class with the specified type.</summary>
      <param name="type">The type to use for initialization.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.LoopConditionalRuleReference.AdvanceDataCursors">
      <summary>Gets or sets the indicator of whether the data cursor should advance or not.</summary>
      <returns>true to advance the data cursor; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.LoopConditionalRuleReference.Clone">
      <summary>Creates a new <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.LoopConditionalRuleReference" /> that is a copy of the current instance.</summary>
      <returns>A new <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.LoopConditionalRuleReference" /> that is a copy of this instance.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.LoopConditionalRuleReference.MaxIterations">
      <summary>Gets or sets the maximum iterations for the loop.</summary>
      <returns>The maximum iterations for the loop.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.NumericalComparisonOperator">
      <summary>Enumerates the numerical comparison operators that are available.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.TestTools.WebTesting.NumericalComparisonOperator.Equality">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.TestTools.WebTesting.NumericalComparisonOperator.Inequality">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.TestTools.WebTesting.NumericalComparisonOperator.LessThan">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.TestTools.WebTesting.NumericalComparisonOperator.LessThanOrEqual">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.TestTools.WebTesting.NumericalComparisonOperator.GreaterThan">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.TestTools.WebTesting.NumericalComparisonOperator.GreaterThanOrEqual">
      <summary />
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.NumericalComparisonOperatorConverter">
      <summary>Helper class that helps with conversions between enum values and strings.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.NumericalComparisonOperatorConverter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.NumericalComparisonOperatorConverter" /> class.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.NumericalComparisonOperatorConverter.ConvertFromEnumToString(Microsoft.VisualStudio.TestTools.WebTesting.NumericalComparisonOperator)">
      <summary>Converts the specified enum value to a string representative of this enum value.</summary>
      <returns>A string representation of the specified enum value.</returns>
      <param name="value">The enum value to convert.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.NumericalComparisonOperatorConverter.ConvertFromStringToEnum(System.String)">
      <summary>Converts the specified string to a corresponding enum value.</summary>
      <returns>The enum corresponding to the specified string value.</returns>
      <param name="value">The string value to convert.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.NumericalComparisonOperatorConverter.PopulateStandardValues">
      <summary>Returns a string array with the string representation of all possible enum values.</summary>
      <returns>A string array with the string representation of all possible enum values.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.Outcome">
      <summary>Describes the outcome of a Web test.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.TestTools.WebTesting.Outcome.Pass">
      <summary>Indicates that the Web test passed.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.TestTools.WebTesting.Outcome.Fail">
      <summary>Indicates that the Web test failed.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.OutcomeConverter">
      <summary>Helper class that helps with conversions between enum values and strings.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.OutcomeConverter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.OutcomeConverter" /> class.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.OutcomeConverter.ConvertFromEnumToString(Microsoft.VisualStudio.TestTools.WebTesting.Outcome)">
      <summary>Converts the specified enum value to a string representative of this enum value.</summary>
      <returns>A string representation of the specified enum value.</returns>
      <param name="value">The enum value to convert.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.OutcomeConverter.ConvertFromStringToEnum(System.String)">
      <summary>Converts the specified string to a corresponding enum value.</summary>
      <returns>The enum corresponding to the specified string value.</returns>
      <param name="value">The string value to convert.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.OutcomeConverter.PopulateStandardValues">
      <summary>Returns a string array with the string representation of all possible enum values.</summary>
      <returns>A string array with the string representation of all possible enum values.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.OwnerAttribute">
      <summary>Used to specify the person responsible for maintaining, running, and/or debugging the test. This class cannot be inherited.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.OwnerAttribute.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.OwnerAttribute" /> class that uses an owner name. </summary>
      <param name="owner">The owner of the test.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.OwnerAttribute.Owner">
      <summary>Gets the owner of the test.</summary>
      <returns>The owner of the test.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.Parameter">
      <summary>Represents an HTTP parameter base class. </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.Parameter.#ctor">
      <summary>This class is abstract and cannot be instantiated.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.Parameter.Clone">
      <summary>When overridden in a derived class, creates a cloned copy of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.Parameter" /> instance. </summary>
      <returns>An object derived from <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.Parameter" />.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.Parameter.Name">
      <summary>Gets or sets the parameter name.</summary>
      <returns>The parameter name.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.Parameter.UrlEncode">
      <summary>Gets or sets a value that indicates whether the <see cref="P:Microsoft.VisualStudio.TestTools.WebTesting.Parameter.Name" /> and <see cref="P:Microsoft.VisualStudio.TestTools.WebTesting.Parameter.Value" /> will be URL encoded.</summary>
      <returns>true if <see cref="P:Microsoft.VisualStudio.TestTools.WebTesting.Parameter.Name" /> and <see cref="P:Microsoft.VisualStudio.TestTools.WebTesting.Parameter.Value" /> will be URL encoded; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.Parameter.Value">
      <summary>Gets or sets the string value of the parameter.</summary>
      <returns>The string value of the parameter.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.PluginOrRuleProperty">
      <summary>The <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.PluginOrRuleProperty" /> class is a multi-purpose class used to encapsulate the name and value of a single property for either a rule, such as an <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.ExtractionRule" /> or <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.ValidationRule" />, or a plug-in, such as a <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestPlugin" /> or a <see cref="T:Microsoft.VisualStudio.TestTools.LoadTesting.ILoadTestPlugin" />.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.PluginOrRuleProperty.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.PluginOrRuleProperty" /> class.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.PluginOrRuleProperty.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.PluginOrRuleProperty" /> class with the specified name and value.</summary>
      <param name="name">The name of the property.</param>
      <param name="value">The value of the property.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.PluginOrRuleProperty.Clone">
      <summary>Creates a new <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.PluginOrRuleProperty" /> object that is a copy of the current instance.</summary>
      <returns>A new <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.PluginOrRuleProperty" /> object that is a copy of the current instance.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.PluginOrRuleProperty.Name">
      <summary>Gets or sets the property name.</summary>
      <returns>The property name</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.PluginOrRuleProperty.Value">
      <summary>Gets or sets the property value.</summary>
      <returns>The property value.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.PostPageEventArgs">
      <summary>Provides data for the <see cref="E:Microsoft.VisualStudio.TestTools.WebTesting.WebTest.PostPage" /> event.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.PostPageEventArgs.PageOutcome">
      <summary>Gets a value that indicates the outcome of the page request and response. </summary>
      <returns>A value of either <see cref="F:Microsoft.VisualStudio.TestTools.WebTesting.Outcome.Pass" /> or <see cref="F:Microsoft.VisualStudio.TestTools.WebTesting.Outcome.Fail" /> that indicates the outcome of the page request and response. </returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.PostPageEventArgs.PageStatistics">
      <summary>Gets a WebTestPageStatistics object that contains statistics about the execution of the page.</summary>
      <returns>A WebTestPageStatistics object that contains statistics about the execution of the page.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.PostRequestEventArgs">
      <summary>Provides data for the <see cref="E:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequest.PostRequest" /> and <see cref="E:Microsoft.VisualStudio.TestTools.WebTesting.WebTest.PostRequest" /> events.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.PostRequestEventArgs.Request">
      <summary>Gets the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequest" /> that is the source of the <see cref="E:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequest.PostRequest" /> event.</summary>
      <returns>A <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequest" /> object.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.PostRequestEventArgs.Response">
      <summary>Gets the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResponse" /> that is generated by the request.</summary>
      <returns>A <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResponse" /> object.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.PostRequestEventArgs.ResponseExists">
      <summary>Gets a value that indicates whether a response exists.</summary>
      <returns>true if a response exists; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.PostRequestEventArgs.WebTest">
      <summary>Gets the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTest" /> that contains the request.</summary>
      <returns>A <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTest" /> object.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.PostTransactionEventArgs">
      <summary>Provides data for the <see cref="E:Microsoft.VisualStudio.TestTools.WebTesting.WebTest.PostTransaction" /> event.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.PostTransactionEventArgs.Duration">
      <summary>Gets the duration of the transaction from the time that it starts until it is completed.</summary>
      <returns>The duration of the transaction.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.PostTransactionEventArgs.TransactionName">
      <summary>Gets the name of the transaction that is starting. </summary>
      <returns>The name of the transaction that is starting. </returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.PostTransactionEventArgs.WebTest">
      <summary>Gets the Web test that contains the transaction.</summary>
      <returns>The Web test that contains the transaction.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.PostWebTestEventArgs">
      <summary>Provides data for the <see cref="E:Microsoft.VisualStudio.TestTools.WebTesting.WebTest.PostWebTest" /> event.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.PostWebTestEventArgs.WebTest">
      <summary>Gets the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTest" /> object that completed and caused the <see cref="E:Microsoft.VisualStudio.TestTools.WebTesting.WebTest.PostWebTest" /> event.</summary>
      <returns>A <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTest" /> object.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.PostWebTestRecordingEventArgs">
      <summary>Event arguments used for pre and post Web test recording callouts.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.PostWebTestRecordingEventArgs.IsRecordingForNewWebTest">
      <summary>Gets the indication of whether this Web test is a new Web test, or an insert into an existing Web test.</summary>
      <returns>true if the Web test recorder was started to create a new Web test; false if the Web test recorder was started to insert a recording in an existing Web test.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.PostWebTestRecordingEventArgs.RecordedWebTest">
      <summary>Gets a reference to the Web test after the recording.</summary>
      <returns>A reference to the Web test after the recording.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.PostWebTestRecordingEventArgs.RecordedWebTestDeploymentItems">
      <summary>Items added to this collection will be added as deployment items to the Web test.</summary>
      <returns>A collection of deployment items.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.PostWebTestRecordingEventArgs.RecordedWebTestModified">
      <summary>Gets or sets the indication that <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRecorderPlugin" /> modified the contents of the <see cref="P:Microsoft.VisualStudio.TestTools.WebTesting.PostWebTestRecordingEventArgs.RecordedWebTest" /> in the event handler.</summary>
      <returns>true if the <see cref="P:Microsoft.VisualStudio.TestTools.WebTesting.PostWebTestRecordingEventArgs.RecordedWebTest" /> was modified in the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRecorderPlugin" /> event handler; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.PostWebTestRecordingEventArgs.RecordedWebTestResult">
      <summary>Gets a reference to the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResultIteration" /> object that contains all details of the HTTP requests and responses that occurred during the recording session.</summary>
      <returns>A reference to a <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResultIteration" /> object.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.PrePageEventArgs">
      <summary>Provides data for the <see cref="E:Microsoft.VisualStudio.TestTools.WebTesting.WebTest.PrePage" /> event.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.PrePageEventArgs.Request">
      <summary>Gets the original WebTestRequest for the page that was defined by the declarative or coded Web test.</summary>
      <returns>The original WebTestRequest for the page that was defined by the declarative or coded Web test.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.PrePageEventArgs.WebTest">
      <summary>Gets the Web test that contains the request.</summary>
      <returns>The Web test that contains the request.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.PreRequestDataBindingEventArgs"></member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.PreRequestDataBindingEventArgs.Request"></member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.PreRequestDataBindingEventArgs.WebTest"></member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.PreRequestEventArgs">
      <summary>Provides data for the <see cref="E:Microsoft.VisualStudio.TestTools.WebTesting.WebTest.PreRequest" /> event.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.PreRequestEventArgs.Instruction">
      <summary>Gets or sets the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestExecutionInstruction" /> for this request.  This enables an upcoming request to be skipped.</summary>
      <returns>A <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestExecutionInstruction" /> object.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.PreRequestEventArgs.Request">
      <summary>Gets the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequest" /> that caused the <see cref="E:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequest.PreRequest" /> event.</summary>
      <returns>A <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequest" /> object.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.PreRequestEventArgs.WebTest">
      <summary>Gets the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTest" /> that contains the request.</summary>
      <returns>A <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTest" /> object.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.PreTransactionEventArgs">
      <summary>Provides data for the <see cref="E:Microsoft.VisualStudio.TestTools.WebTesting.WebTest.PreTransaction" /> event.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.PreTransactionEventArgs.TransactionName">
      <summary>Gets the name of the transaction that is starting.</summary>
      <returns>A string that contains the name of the transaction that is starting.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.PreTransactionEventArgs.WebTest">
      <summary>Gets the Web test that contains the transaction.</summary>
      <returns>The Web test that contains the transaction. </returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.PreWebTestEventArgs">
      <summary>Provides data for the <see cref="E:Microsoft.VisualStudio.TestTools.WebTesting.WebTest.PreWebTest" /> event.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.PreWebTestEventArgs.WebTest">
      <summary>Gets the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTest" /> object that is about to start and caused the <see cref="E:Microsoft.VisualStudio.TestTools.WebTesting.WebTest.PreWebTest" /> event.</summary>
      <returns>A <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTest" /> object.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.PriorityAttribute">
      <summary>Used to specify the priority of a unit test. This class cannot be inherited.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.PriorityAttribute.#ctor(System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.PriorityAttribute" /> class that has a priority value.  </summary>
      <param name="priority">An integer that represents the priority value for the test.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.PriorityAttribute.Priority">
      <summary>Gets the priority value.</summary>
      <returns>An integer that represents the priority value for the test.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.PropertyCollection">
      <summary>Represents a strongly-typed container for Web test rule properties.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.PropertyCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.PropertyCollection" /> class.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.PropertyCollection.Add(System.String,System.String)">
      <summary>Adds a <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.PluginOrRuleProperty" /> to the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.PropertyCollection" />.</summary>
      <param name="propertyName">The property name to add.</param>
      <param name="propertyValue">The value to add.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.PropertyCollection.Item(System.String)">
      <summary>Gets or sets the first property value stored with the specified property name.</summary>
      <returns>The first property value stored with the specified property name.</returns>
      <param name="propertyName"> The property name.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.QueryStringParameter">
      <summary>Represents an HTTP querystring parameter. </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.QueryStringParameter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.QueryStringParameter" /> class with default value for UrlEncode. </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.QueryStringParameter.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.QueryStringParameter" /> class with the specified name and value. </summary>
      <param name="parameterName">The parameter name to set.</param>
      <param name="parameterValue">The parameter value to set.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.QueryStringParameter.#ctor(System.String,System.String,System.Boolean,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.QueryStringParameter" /> class with values for the Name, Value, UrlEncode and <see cref="P:Microsoft.VisualStudio.TestTools.WebTesting.QueryStringParameter.UseToGroupResults" /> properties.</summary>
      <param name="parameterName">The parameter name to set.</param>
      <param name="parameterValue">The parameter value to set.</param>
      <param name="urlEncode">Indicates whether to URL encode the querystring parameter name and value.</param>
      <param name="useToGroupResults">Indicates whether to use this parameter to group results. The parameter is used if it changes the content of the page. The grouped results enable the user to have separate results captured for each value of the querystring parameter instead of a single set of results for the page.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.QueryStringParameter.Clone">
      <summary>Performs a <see cref="M:System.Object.MemberwiseClone" /> clone of this <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.QueryStringParameter" /> instance.</summary>
      <returns>A <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.QueryStringParameter" /> object.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.QueryStringParameter.UseToGroupResults">
      <summary>Gets or sets a value that indicates whether this parameter should be used to uniquely identify a request.</summary>
      <returns>true if this parameter is used to identify a request; otherwise, false. The default value is false.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.QueryStringParameterCollection">
      <summary>Represents a strongly typed container for query string parameters. </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.QueryStringParameterCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.QueryStringParameterCollection" /> class.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.QueryStringParameterCollection.Add(System.String,System.String)">
      <summary>Adds a <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.QueryStringParameter" /> created from a parameter name and value. </summary>
      <param name="parameterName">The name of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.QueryStringParameter" /> to be created and then added to the collection.</param>
      <param name="parameterValue">The value of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.QueryStringParameter" /> to be created and then added to the collection.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.QueryStringParameterCollection.Add(System.String,System.String,System.Boolean,System.Boolean)">
      <summary>Adds a <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.QueryStringParameter" /> created from a parameter name and value.</summary>
      <param name="parameterName">The name of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.QueryStringParameter" /> to be created and then added to the collection.</param>
      <param name="parameterValue">The value of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.QueryStringParameter" /> to be created and then added to the collection.</param>
      <param name="urlEncode">true if the query string parameter is URL encoded; otherwise, false.</param>
      <param name="useToGroupResults">Indicates whether to use this parameter to group results. The parameter is used if it changes the content of the page. This parameter enables the user to have separate results captured for each value of the querystring parameter instead of a single set of results for the page.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.QueryStringParameterCollection.Contains(System.String)">
      <summary>Gets a value that indicates whether a <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.QueryStringParameter" /> exists in this collection.</summary>
      <returns>true if the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.QueryStringParameter" /> exists in this collection; otherwise, false.</returns>
      <param name="parameterName">The name of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.QueryStringParameter" /> to look for in this collection.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.RequestBodyEditorPluginReference"></member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.RequestBodyEditorPluginReference.#ctor"></member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.RequestBodyEditorPluginReference.Clone"></member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.RequestBodyEditorPluginReference.CreateInstance"></member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.RequestType">
      <summary>Enumerates the request types that are available.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.TestTools.WebTesting.RequestType.TopLevel">
      <summary>A top-level request type.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.TestTools.WebTesting.RequestType.Dependent">
      <summary>A dependent request type.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.RuleExecutionOrder">
      <summary>Enumerates the possible order-of-execution for validation rules.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.TestTools.WebTesting.RuleExecutionOrder.BeforeDependents">
      <summary>Test is to be executed before dependent tests.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.TestTools.WebTesting.RuleExecutionOrder.AfterDependents">
      <summary>Test is to be executed after dependent tests.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.TestTools.WebTesting.RuleExecutionOrder.BeforeAndAfterDependents">
      <summary>Test is to be executed both before and after dependent tests.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.StringComparisonOperator">
      <summary>Enumerates the string comparison operators that are available.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.TestTools.WebTesting.StringComparisonOperator.Equality">
      <summary>Indicates that two strings are equal.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.TestTools.WebTesting.StringComparisonOperator.Inequality">
      <summary>Indicates that two strings are not equal.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.StringComparisonOperatorConverter">
      <summary>Helper class that helps with conversions between enum values and strings.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.StringComparisonOperatorConverter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.StringComparisonOperatorConverter" /> class.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.StringComparisonOperatorConverter.ConvertFromEnumToString(Microsoft.VisualStudio.TestTools.WebTesting.StringComparisonOperator)">
      <summary>Converts the specified enum value to a string representative of this enum value.</summary>
      <returns>A string representation of the specified enum value.</returns>
      <param name="value">The enum value to convert.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.StringComparisonOperatorConverter.ConvertFromStringToEnum(System.String)">
      <summary>Converts the specified string to a corresponding enum value.</summary>
      <returns>The enum corresponding to the specified string value.</returns>
      <param name="value">The string value to convert.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.StringComparisonOperatorConverter.PopulateStandardValues">
      <summary>Returns a string array with the string representation of all possible enum values.</summary>
      <returns>A string array with the string representation of all possible enum values.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.StringHttpBody">
      <summary>Represents an HTTP body in string form used for SOAP support. </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.StringHttpBody.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.StringHttpBody" /> class.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.StringHttpBody.BodyString">
      <summary>Gets or sets the string that contains the HTTP body contents.</summary>
      <returns>A value that represents the HTTP body. The default value is an empty string.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.StringHttpBody.Clone">
      <summary>Creates a shallow copy of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.StringHttpBody" /> object.</summary>
      <returns>A <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.StringHttpBody" /> object.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.StringHttpBody.ContentType">
      <summary>Gets a value representing the content-type of the body.</summary>
      <returns>The body content-type.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.StringHttpBody.InsertByteOrderMark"></member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.StringHttpBody.WriteHttpBody(Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequest,System.IO.Stream)">
      <summary>Creates a stream that contains the HTTP body.</summary>
      <param name="request">Used to define the encoding of non-ASCII characters.</param>
      <param name="bodyStream">The stream to add the form post HTTP body.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.TestDescriptionAttribute">
      <summary>Used to specify the description of the test. This class cannot be inherited. </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.TestDescriptionAttribute.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.TestDescriptionAttribute" /> class. </summary>
      <param name="testDescription">A short description of the test.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.TestDescriptionAttribute.TestDescription">
      <summary>Gets the description of the test.</summary>
      <returns>The test description.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.ThreadedWebTest">
      <summary>Represents a base class for a coded Web test that uses a single thread per Web test iteration. </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.ThreadedWebTest.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.ThreadedWebTest" /> class.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.ThreadedWebTest.GetRequestEnumerator">
      <summary>This method returns the next request to be submitted in a Web test for Web tests that extend the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.ThreadedWebTest" /> class. </summary>
      <returns>The next request to be submitted.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.ThreadedWebTest.Run">
      <summary>When overridden in a derived class, runs the user's coded Web test.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.ThreadedWebTest.Send(Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequest)">
      <summary>Sends a <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequest" /> to be run by the Web test engine.</summary>
      <param name="request">A <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequest" /> to be run.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.ThreadedWebTest.Stop"></member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.TimeoutAttribute">
      <summary>Use this attribute to specify the time-out period of a Web test. </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.TimeoutAttribute.#ctor(System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.TimeoutAttribute" /> class. </summary>
      <param name="timeout">The time-out period of a test, measured in milliseconds.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.TimeoutAttribute.Timeout">
      <summary>Gets the time-out period for a test.</summary>
      <returns>The time-out period for a test, measured in milliseconds.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.TransactionTimer">
      <summary>Represents a timed transaction in a Web test. This portion of the Web test may include Web test requests, calls to included Web tests, or other Web test transactions.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.TransactionTimer.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.TransactionTimer" /> class.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.TransactionTimer.Clone">
      <summary>Creates a copy of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.TransactionTimer" />.</summary>
      <returns>A copy of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.TransactionTimer" />.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.TransactionTimer.Items">
      <summary>Gets the list of Web test items that are included in the timed transaction.</summary>
      <returns>The collection of Web test items.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.TransactionTimer.Name">
      <summary>Gets or sets the name given to the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.TransactionTimer" />. This name is displayed in the Web test editor, or displayed in a Coded web test in the Web test and load test results.</summary>
      <returns>The name of the transaction timer.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.TransactionTimer.RuntimeClone"></member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.ValidationEventArgs">
      <summary>Provides data for the <see cref="E:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequest.ValidateResponse" /> event.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.ValidationEventArgs.IsValid">
      <summary>Gets or sets a value indicating whether the request passes validation.</summary>
      <returns>true if the request passes validation; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.ValidationEventArgs.Message">
      <summary>Gets or sets a message that describes validation attempts.</summary>
      <returns>Gets a value that indicates whether or not validation occurred or a message describing a thrown Exception.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.ValidationEventArgs.Request">
      <summary>Gets the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequest" /> that generated the response that is validated.</summary>
      <returns>A <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequest" /> object.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.ValidationEventArgs.RequestDuration"></member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.ValidationEventArgs.Response">
      <summary>Gets the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResponse" /> being validated.</summary>
      <returns>A <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResponse" /> object.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.ValidationEventArgs.ValidationLevel">
      <summary>Gets the current validation level.</summary>
      <returns>A <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.ValidationLevel" /> enumeration.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.ValidationEventArgs.WebTest">
      <summary>Gets the Web test that contains the request that triggered the validation event.</summary>
      <returns>A <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTest" /> object.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.ValidationLevel">
      <summary>Used to identify the importance of a validation rule that is run in a load test.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.TestTools.WebTesting.ValidationLevel.Low">
      <summary>Load test invokes validation rules with a Low setting. This equals 0.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.TestTools.WebTesting.ValidationLevel.Medium">
      <summary>Load test invokes validation rules with a Low or Medium setting. This equals 1.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.TestTools.WebTesting.ValidationLevel.High">
      <summary>Load test invokes all validation rules. This equals 2.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.ValidationRule">
      <summary>Verifies that requests return valid HTTP responses and that the contents of the response match the expected results. This class must be inherited.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.ValidationRule.#ctor">
      <summary>This class must be inherited. It cannot be instantiated.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.ValidationRule.RuleDescription">
      <summary>Gets the description displayed in the user interface when a rule is selected.</summary>
      <returns>The description displayed in the user interface when a rule is selected.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.ValidationRule.RuleName">
      <summary>When overridden in a derived class, gets the name displayed in the user interface when a rule is selected or shown in the editor.</summary>
      <returns>The name of the validation rule.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.ValidationRule.Validate(System.Object,Microsoft.VisualStudio.TestTools.WebTesting.ValidationEventArgs)">
      <summary>When overridden in a derived class, this validates both the request and response.</summary>
      <param name="sender">The source of the event.</param>
      <param name="e">A  <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.ValidationEventArgs" /> that contains the event data.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.ValidationRuleReference">
      <summary>The <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.ValidationRuleReference" /> class encapsulates the metadata about an <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.ValidationRule" /> and the parameter values to use when an instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.ValidationRule" /> is created when the Web test that uses the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.ValidationRule" /> is run.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.ValidationRuleReference.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.ValidationRuleReference" /> class.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.ValidationRuleReference.#ctor(System.Type)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.ValidationRuleReference" /> class using the <see cref="T:System.Type" /> of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.ValidationRule" /> implementation as a parameter.</summary>
      <param name="type">The <see cref="T:System.Type" /> of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.ValidationRule" /> implementation.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.ValidationRuleReference.Clone">
      <summary>Returns a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.ValidationRuleReference" /> object.</summary>
      <returns>A <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.ValidationRuleReference" /> object.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.ValidationRuleReference.ValidationLevel">
      <summary>Gets or sets the validation level as defined by the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.ValidationLevel" /> enum.</summary>
      <returns>The validation level.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.ValidationRuleReferenceCollection">
      <summary>Represents a serializable, strongly typed container for Web test validation rules.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.ValidationRuleReferenceCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.ValidationRuleReferenceCollection" /> class.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTest">
      <summary>Base class for all Web tests. Coded Web tests that are written in C# derive directly from this class.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTest.#ctor">
      <summary>Initializes a new instance of a class derived from <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTest" /> class.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTest.AddCommentToResult(System.String)">
      <summary>Adds a comment to the Web test result following the most recently completed Web test request, transaction, or included Web test.</summary>
      <param name="comment">A string that contains the comment text. </param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTest.AddDataSource(System.String,System.String,Microsoft.VisualStudio.TestTools.WebTesting.DataBindingAccessMethod,System.String[])">
      <summary>Adds a data source to the data collection that is contained by the Web test.</summary>
      <param name="dataSourceName">The name of the data source.</param>
      <param name="connectionString">The provider dependent connection string for the data source.</param>
      <param name="accessMethod">The access method that is used to get information from the data source. This uses a <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.DataBindingAccessMethod" /> enumeration. </param>
      <param name="tableNames">Table names found in the data source that contains data to be accessed.</param>
      <exception cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestException">
        <paramref name="dataSourceName" /> already exists as a data source.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTest.AddDataSource(System.String,System.String,System.String,Microsoft.VisualStudio.TestTools.WebTesting.DataBindingAccessMethod,Microsoft.VisualStudio.TestTools.WebTesting.DataBindingSelectColumns,System.String[])"></member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTest.AddDataSource(System.String,System.String,System.String,Microsoft.VisualStudio.TestTools.WebTesting.DataBindingAccessMethod,System.String[])">
      <summary>Adds a data source to the data collection that is contained by the Web test.</summary>
      <param name="dataSourceName">The name of the data source.</param>
      <param name="providerName"></param>
      <param name="connectionString">The provider dependent connection string for the data source.</param>
      <param name="accessMethod">The access method that is used to get information from the data source. This uses a <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.DataBindingAccessMethod" /> enumeration.</param>
      <param name="tableNames">Table names found in the data source that contains data to be accessed.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTest.AddDataSourceBinding(System.String,System.String,System.String,System.String)">
      <summary>Defines a binding relationship and adds it to the data source binding collection for the Web test.</summary>
      <param name="dataSourceName">The name of the data source.</param>
      <param name="tableName">The name of a table in the data source.</param>
      <param name="columnName">The name of a column within the table to be used for binding.</param>
      <param name="contextName">The variable name representing the binding.</param>
      <exception cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestException">
        <paramref name="dataSourceName" /> does not represent a data source found in the internal Web test data source collection.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTest.BeginCondition(Microsoft.VisualStudio.TestTools.WebTesting.ConditionalRule)"></member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTest.BeginLoop(Microsoft.VisualStudio.TestTools.WebTesting.ConditionalRule,System.Int32,System.Boolean)"></member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTest.BeginTransaction(System.String)">
      <summary>Starts a transaction timer with the specified name.</summary>
      <param name="transactionName">The name of a transaction timer.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="transactionName" /> is null.</exception>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTest.Context">
      <summary>Gets or sets an object that contains context variables that are available to the Web test at run time.</summary>
      <returns>A <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestContext" /> object.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTest.DataSources">
      <summary>Gets the collection of data sources defined for the Web test.</summary>
      <returns>The collection of data sources defined for the Web test.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTest.EndCondition(Microsoft.VisualStudio.TestTools.WebTesting.ConditionalRule)"></member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTest.EndLoop(Microsoft.VisualStudio.TestTools.WebTesting.ConditionalRule)"></member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTest.EndTransaction(System.String)">
      <summary>Ends a transaction timer with the specified name.</summary>
      <param name="transactionName">The name of a transaction timer.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="transactionName" /> is null.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTest.EndTransaction(System.String,System.Boolean)">
      <summary>Ends the specified transaction.</summary>
      <param name="transactionName">The name of the transaction to end.</param>
      <param name="isForIncludedWebTest">true indicates that the named transaction is a transaction that was automatically created to measure the duration of the included Web test.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTest.ExecuteConditionalRule(Microsoft.VisualStudio.TestTools.WebTesting.ConditionalRule)"></member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTest.GetDataTableRowCount(System.String,System.String)"></member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTest.GetEnumerator">
      <summary>Gets an Enumerator that enumerates the items in the Web test.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTest.GetRequestEnumerator">
      <summary>When overridden in a derived class, returns an <see cref="T:System.Collections.Generic.IEnumerator`1" /> interface supporting a simple iteration over a generic collection of <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequest" />.</summary>
      <returns>An <see cref="T:System.Collections.Generic.IEnumerator`1" /> that contains <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequest" /> objects.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTest.Guid">
      <summary>Gets or sets a Globally Unique Identifier that uniquely identifies each instance of a <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTest" />.</summary>
      <returns>A <see cref="T:System.Guid" /> object.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTest.IncludeWebTest(Microsoft.VisualStudio.TestTools.WebTesting.WebTest)">
      <summary>Calls a coded Web test from within a coded Web test.</summary>
      <param name="childWebTest">The WebTest object to call from the current coded Web test.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTest.IncludeWebTest(Microsoft.VisualStudio.TestTools.WebTesting.WebTest,System.Boolean)">
      <summary>Calls a coded Web test from within a coded Web test.</summary>
      <param name="childWebTest">The WebTest object to call from the current coded Web test.</param>
      <param name="inheritWebTestSettings">If true, the included Web test inherits the values of the properties from the parent Web test.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTest.IncludeWebTest(System.String)">
      <summary>Calls a coded Web test from within a coded Web test.</summary>
      <param name="webTestName">The name of the declarative Web test to include.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTest.IncludeWebTest(System.String,System.Boolean)">
      <summary>Calls a coded Web test from within a coded Web test.</summary>
      <param name="webTestName">The name of the declarative Web test to include.</param>
      <param name="inheritWebTestSettings">If true, the included Web test inherits the values of the properties from the parent Web test.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTest.InheritFromWebTest">
      <summary>Gets the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTest" /> object for the parent Web test when this Web test is included in another Web test and is inheriting properties from the parent Web test. </summary>
      <returns>Returns a <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTest" /> object if this Web test is not included in another Web test and inherits from that parent Web test.Returns NULL if this Web test is not included in another Web test or does not inherit from a parent Web test.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTest.InitializeDataBinding">
      <summary>Adds data source and data binding information from attributes to the current instance.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTest.InternalSetOutcome(Microsoft.VisualStudio.TestTools.WebTesting.Outcome)"></member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTest.LastRequestOutcome"></member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTest.LastResponse">
      <summary>Gets the last response received for a top-level request in this Web test.</summary>
      <returns>A <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResponse" /> object.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTest.MoveDataTableCursor(System.String,System.String)">
      <summary>Advances the cursor in the data table to the next record.</summary>
      <param name="dataSourceName">The data source name.</param>
      <param name="dataTableName">A table found in the data source.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="dataSourceName" /> does not represent a data source found in the internal Web test data source collection.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="dataTableName" /> does not represent a table found in <paramref name="dataSourceName" />.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTest.MoveDataTableCursor(System.String,System.String,System.Int32)"></member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTest.Name">
      <summary>Gets the name of the test case.</summary>
      <returns>The user-defined name if one exists; otherwise, this defaults to the derived class name.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTest.Outcome">
      <summary>Gets or sets the Pass or Fail outcome of the Web test.</summary>
      <returns>The outcome of the Web test. </returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTest.Password">
      <summary>Gets and sets the password used for authentication.</summary>
      <returns>The password used for authentication. The default value is an empty string.</returns>
    </member>
    <member name="E:Microsoft.VisualStudio.TestTools.WebTesting.WebTest.PostPage"></member>
    <member name="E:Microsoft.VisualStudio.TestTools.WebTesting.WebTest.PostRequest">
      <summary>Occurs after each request this Web test runs.</summary>
    </member>
    <member name="E:Microsoft.VisualStudio.TestTools.WebTesting.WebTest.PostTransaction"></member>
    <member name="E:Microsoft.VisualStudio.TestTools.WebTesting.WebTest.PostWebTest">
      <summary>Occurs after the Web test runs.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTest.PreAuthenticate">
      <summary>Gets or sets a value that indicates whether to pre-authenticate all requests within the Web test.</summary>
      <returns>true if all requests are pre-authenticated; otherwise, false. The default value is true.</returns>
    </member>
    <member name="E:Microsoft.VisualStudio.TestTools.WebTesting.WebTest.PrePage"></member>
    <member name="E:Microsoft.VisualStudio.TestTools.WebTesting.WebTest.PreRequest">
      <summary>Occurs before each request this Web test runs.</summary>
    </member>
    <member name="E:Microsoft.VisualStudio.TestTools.WebTesting.WebTest.PreRequestDataBinding"></member>
    <member name="E:Microsoft.VisualStudio.TestTools.WebTesting.WebTest.PreTransaction"></member>
    <member name="E:Microsoft.VisualStudio.TestTools.WebTesting.WebTest.PreWebTest">
      <summary>Occurs before the Web test runs.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTest.Proxy">
      <summary>Gets or sets a value representing a proxy server for the Web test to use.</summary>
      <returns>A string representation of a proxy server location and port. The default value is an empty string.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTest.RegisterDataSourceInLoop(Microsoft.VisualStudio.TestTools.WebTesting.ConditionalRule,System.String,System.String)"></member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTest.ReloadDataTable(System.String,System.String)"></member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTest.RequestBodyCaptureLimit">
      <summary>Gets or sets the limit, in bytes, that is used for capturing request data.</summary>
      <returns>The limit that is used for capturing request data. The default value is 750,000 bytes.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTest.ResponseBodyCaptureLimit">
      <summary>Gets or sets the limit, in bytes, that is used for capturing response data.</summary>
      <returns>The limit that is used for capturing response data. The default value is 1,500,000 bytes.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTest.Stop">
      <summary>Stops the current Web test.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTest.StopOnError">
      <summary>Gets or sets the indication of whether the test should stop running when an error occurs. </summary>
      <returns>true will stop the test after an error occurs, false will allow the test to continue after an error.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTest.UserName">
      <summary>Gets and sets the user name used for authentication.</summary>
      <returns>The user name used for authentication. The default value is an empty string.</returns>
    </member>
    <member name="E:Microsoft.VisualStudio.TestTools.WebTesting.WebTest.ValidateResponse">
      <summary>Occurs when the response to a Web test request has been received and is ready to be validated.</summary>
    </member>
    <member name="E:Microsoft.VisualStudio.TestTools.WebTesting.WebTest.ValidateResponseOnPageComplete"></member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTest.ValidationRuleReferences">
      <summary>Gets the collection of references to Web test-level validation rules.</summary>
      <returns>The collection of references to Web test-level validation rules.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTest.WebProxy">
      <summary>Gets or sets the Web proxy for this Web test to use.</summary>
      <returns>A <see cref="T:System.Net.IWebProxy" /> object.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTest.WebTestPluginReferences">
      <summary>Gets the collection of references to Web test plug-ins.</summary>
      <returns>The collection of references to Web test plug-ins.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestBaseCollection`1">
      <summary>An abstract base class used to store a variety of Web tests.</summary>
      <typeparam name="T"></typeparam>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestBaseCollection`1.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestBaseCollection`1" /> class.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestBaseCollection`1.AddRange(System.Collections.Generic.IEnumerable{`0})">
      <summary>Adds the elements of the specified collection to the end of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestBaseCollection`1" />.</summary>
      <param name="items">The collection whose elements should be added to the end of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestBaseCollection`1" />. The collection itself cannot be null, but it can contain elements that are null, if type T is a reference type.</param>
      <exception cref="ArgumentNullException">
        <paramref name="items" /> is null.</exception>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestCondition">
      <summary>This class represents the conditional statement constructs. It contains a collection of web test items that are executed if the conditional rule is met.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestCondition.#ctor(Microsoft.VisualStudio.TestTools.WebTesting.ConditionalRule)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestCondition" /> class by using the specified <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.ConditionalRule" />.</summary>
      <param name="conditionalRule">The conditional rule to use for initialization.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestCondition.#ctor(Microsoft.VisualStudio.TestTools.WebTesting.ConditionConditionalRuleReference)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestCondition" /> class by using the specified <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.ConditionalRuleReference" />.</summary>
      <param name="conditionalRuleReference">The conditional rule reference to use for initialization.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestCondition.#ctor(Microsoft.VisualStudio.TestTools.WebTesting.WebTestCondition)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestCondition" /> class by copying the specified <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestCondition" />.</summary>
      <param name="copy">The <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestCondition" /> to copy.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestCondition.Clone">
      <summary>Creates a new <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestCondition" /> object that is a copy of the current instance.</summary>
      <returns>A new <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestCondition" /> object that is a copy of the current instance.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestCondition.ConditionConditionalRuleReference">
      <summary>Gets the conditional rule reference for this <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestCondition" />.</summary>
      <returns>The conditional rule reference for this <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestCondition" />.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestCondition.ElseItems"></member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestCondition.RuntimeClone">
      <summary>Creates a new <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestCondition" /> object that is a copy of the current instance at runtime.</summary>
      <returns>A new <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestCondition" /> object that is a copy of the current instance.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestCondition.ToString">
      <summary>Returns a <see cref="T:System.String" /> that represents the current <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestCondition" />.</summary>
      <returns>A <see cref="T:System.String" /> that represents the current <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestCondition" />.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestCondition.ToString(System.String)">
      <summary>Returns a <see cref="T:System.String" /> that represents the current <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestCondition" /> based on the specified conditional rule text.</summary>
      <returns>A <see cref="T:System.String" /> that represents the current <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestCondition" />.</returns>
      <param name="conditionalRuleText">The conditional rule text to return, or the <see cref="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRuleBase.DisplayName" /> if <paramref name="conditionalRuleText" /> is null.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestConditionalConstruct">
      <summary>Base class for the conditional loop and the conditional statement constructs.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestConditionalConstruct.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestConditionalConstruct" /> class.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestConditionalConstruct.#ctor(Microsoft.VisualStudio.TestTools.WebTesting.WebTestConditionalConstruct)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestConditionalConstruct" /> class by copying the specified <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestConditionalConstruct" />.</summary>
      <param name="copy">The <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestConditionalConstruct" /> to copy.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestConditionalConstruct.ConditionalRuleReference">
      <summary>Gets or sets the reference to a conditional rule.</summary>
      <returns>The reference to a conditional rule.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestConditionalConstruct.ExecuteCheckConditionalRule(Microsoft.VisualStudio.TestTools.WebTesting.WebTest)">
      <summary>Executes the conditional rule.</summary>
      <returns>true if the condition was met; otherwise, false.</returns>
      <param name="webTest">The <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTest" /> to execute.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestConditionalConstruct.ExecuteCleanUpConditionalRule(Microsoft.VisualStudio.TestTools.WebTesting.WebTest)">
      <summary>Performs clean up after the conditional rule was checked.</summary>
      <param name="webTest">The <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTest" /> that was executed.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestConditionalConstruct.ExecuteInitializeConditionalRule(Microsoft.VisualStudio.TestTools.WebTesting.WebTest)">
      <summary>Initializes the conditional rule.</summary>
      <param name="webTest">The <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTest" /> to be executed.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestConditionalConstruct.GetConditionalRuleText">
      <summary>Returns the text description of the conditional rule.</summary>
      <returns>The text description of the conditional rule.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestConditionalConstruct.Initialize(Microsoft.VisualStudio.TestTools.WebTesting.ConditionalRuleReference)">
      <summary>Initializes a new referenced conditional rule.</summary>
      <param name="conditionalRuleReference">The reference to the conditional rule to initialize.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestConditionalConstruct.Initialize(Microsoft.VisualStudio.TestTools.WebTesting.WebTestConditionalConstruct,Microsoft.VisualStudio.TestTools.WebTesting.ConditionalRuleReference)">
      <summary>Initializes a new referenced conditional rule by copying the specified <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.ConditionalRuleReference" />.</summary>
      <param name="copy">The <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestConditionalConstruct" /> to initialize.</param>
      <param name="ruleCopy">The <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.ConditionalRuleReference" /> to copy to create the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestConditionalConstruct" />.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestConditionalConstruct.Items">
      <summary>Gets the collection of <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestItem" /> objects.</summary>
      <returns>The collection of <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestItem" /> objects.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestConditionalConstruct.ToString(System.String)">
      <summary>Returns a <see cref="T:System.String" /> that represents the current <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestConditionalConstruct" />.</summary>
      <returns>A <see cref="T:System.String" /> that represents the current <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestConditionalConstruct" />.</returns>
      <param name="conditionalRuleText">The conditional rule text to return, or the <see cref="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRuleBase.DisplayName" /> if <paramref name="conditionalRuleText" /> is null.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestConditionalConstruct.UniqueStringId">
      <summary>Gets or sets the unique string ID.</summary>
      <returns>The unique string ID.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestContext">
      <summary>Represents the context available to a <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTest" />.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestContext.Add(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
      <summary>Adds a <see cref="T:System.Collections.Generic.KeyValuePair`2" /> object to the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestContext" />.</summary>
      <param name="keyValuePair">The object to add.</param>
      <exception cref="T:System.ArgumentNullException">key of the <paramref name="keyValuePair" /> is null.</exception>
      <exception cref="T:System.ArgumentException">An element with the same key already occurs in the collection.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestContext.Add(System.String,System.Object)">
      <summary>Adds an element with the provided key and value to the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestContext" />.</summary>
      <param name="key">The key to an object.</param>
      <param name="value">A value that corresponds to the <paramref name="key" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> is null.</exception>
      <exception cref="T:System.ArgumentException">An element with the same <paramref name="key" /> already occurs in the collection.</exception>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestContext.AgentCount">
      <summary>Gets the total number of agents used in the current test run.</summary>
      <returns>The number of agents used in the current test run.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestContext.AgentId">
      <summary>Gets the zero-based index for the current agent.</summary>
      <returns>The index value of the current agent.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestContext.AgentName">
      <summary>Gets the name of the agent computer on which the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTest" /> is running.</summary>
      <returns>The agent computer name.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestContext.Clear">
      <summary>Removes all the elements from the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestContext" />.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestContext.Contains(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
      <summary>Determines whether the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestContext" /> contains the specified key/value pair.</summary>
      <returns>true if the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestContext" /> contains the specific <see cref="T:System.Collections.Generic.KeyValuePair`2" /> object; otherwise, false.</returns>
      <param name="keyValuePair">An object </param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestContext.ContainsKey(System.String)">
      <summary>Determines whether the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestContext" /> contains an element with the specified key.</summary>
      <returns>true if the key occurs in the collection; otherwise, false.</returns>
      <param name="key">The key to look up in collection.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestContext.ControllerName">
      <summary>Gets the name of the test controller computer.</summary>
      <returns>The name of the test controller computer.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestContext.CookieContainer">
      <summary>Gets or sets the cookies used by previous requests in the Web test.</summary>
      <returns>A <see cref="T:System.Net.CookieContainer" /> object.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestContext.CopyTo(System.Collections.Generic.KeyValuePair{System.String,System.Object}[],System.Int32)">
      <summary>Copies the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestContext" /> elements to an array of <see cref="T:System.Collections.Generic.KeyValuePair`2" /> objects</summary>
      <param name="keyValuePairArray">The name of the array objects where the copy resides.</param>
      <param name="index">The starting index location where the array of objects is copied.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestContext.Count">
      <summary>Gets the number of key/value pair elements in the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestContext" />.</summary>
      <returns>The number of key/value pairs in the collection.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestContext.GetEnumerator">
      <summary>Returns an <see cref="T:System.Collections.Generic.IEnumerator`1" /> that contains the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestContext" /> elements.</summary>
      <returns>An <see cref="T:System.Collections.Generic.IEnumerator`1" /> object.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestContext.IsNewUser">
      <summary>Gets a value that indicates whether the Web test is being run in the context of a new user of the target Web site.</summary>
      <returns>true if the Web test is being run in the context of a new user; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestContext.IsReadOnly">
      <summary>Gets a value that indicates whether the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestContext" /> is read-only.</summary>
      <returns>The value is always false.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestContext.Item(System.String)">
      <summary>Gets or sets the value associated with the specified key from the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestContext" /> object.</summary>
      <returns>A <see cref="T:System.Object" /> that contains the value associated with <paramref name="key" />.</returns>
      <param name="key">A string that corresponds to a key in the collection.</param>
      <exception cref="T:System.Collections.Generic.KeyNotFoundException">
        <paramref name="key" /> not found. </exception>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestContext.Keys">
      <summary>Gets a collection of all the keys in the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestContext" />.</summary>
      <returns>An <see cref="T:System.Collections.ICollection" /> object that contains a collection of key strings.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestContext.LastRequestOutcome"></member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestContext.LastResponse">
      <summary>Gets or sets the last <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResponse" />.</summary>
      <returns>The last <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResponse" />.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestContext.Remove(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
      <summary>Removes a <see cref="T:System.Collections.Generic.KeyValuePair`2" /> from the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestContext" />.</summary>
      <returns>true if the element is successfully removed; otherwise, false. This also returns false if the key is not found.</returns>
      <param name="keyValuePair">A <see cref="T:System.Collections.Generic.KeyValuePair`2" /> object to remove from the collection.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestContext.Remove(System.String)">
      <summary>Removes the element with the specified key from the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestContext" />.</summary>
      <returns>true if the element is successfully removed; otherwise, false. This also returns false if the <paramref name="key" /> is not found.</returns>
      <param name="key">The key to remove from the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestContext" />. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> is null.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestContext.System#Collections#IEnumerable#GetEnumerator"></member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestContext.TryGetValue(System.String,System.Object@)">
      <summary>Gets the value associated with the specified key.</summary>
      <returns>true if it contains an element with the specified key; otherwise, false.</returns>
      <param name="key">The key to find.</param>
      <param name="value">The referenced object that retrieves the value of the key, if it is found; otherwise, it retrieves the default value for the type of the <paramref name="value" /> parameter. This parameter can be passed uninitialized.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> is null.</exception>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestContext.ValidationLevel">
      <summary>Gets the validation level for the current test run.</summary>
      <returns>A <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.ValidationLevel" /> enumeration.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestContext.Values">
      <summary>Gets a collection of all the values in the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestContext" />.</summary>
      <returns>An <see cref="T:System.Collections.ICollection" /> object that contains a collection of value objects.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestContext.WebTestIteration">
      <summary>Gets the iteration number of this Web test variation.</summary>
      <returns>A value that represents the iteration number of this Web test variation.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestContext.WebTestUserId">
      <summary>Gets a value that uniquely identifies a simulated virtual user when you run the Web test in a load test.</summary>
      <returns>A virtual user identification number.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestCorrelationResult">
      <summary>Class to contain the result of a correlation applied when running a Web test in correlation mode.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestCorrelationResult.BindingRequestUrl">
      <summary>Gets the binding request URL.</summary>
      <returns>The binding request URL.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestCorrelationResult.ExtractingRequestUrl">
      <summary>Gets the extracting request URL.</summary>
      <returns>The extracting request URL.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestCorrelationResult.ParameterName">
      <summary>Gets the parameter name.</summary>
      <returns>The parameter name.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestCorrelationResult.UniqueContextParameterName">
      <summary>Gets the unique context parameter name.</summary>
      <returns>The unique context parameter name.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestEmptyTableException">
      <summary>Represents an Exception that occurs when data binding is being performed on an empty table.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestEmptyTableException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestEmptyTableException" /> class.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestEmptyTableException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestEmptyTableException" /> class with serialized data.</summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
      <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination. </param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestEmptyTableException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestEmptyTableException" /> class with a specified error message.</summary>
      <param name="message">The message that describes the error.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestEmptyTableException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestEmptyTableException" /> class with a specified error message and a reference to the inner exception that is the cause of this exception.</summary>
      <param name="message">The error message that explains the reason for the exception.</param>
      <param name="innerException">The exception that is the cause of the current exception, or null if no inner exception is specified.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestEndOfDataException">
      <summary>The exception that is thrown when data binding is being performed on a table with the <see cref="F:Microsoft.VisualStudio.TestTools.WebTesting.DataBindingAccessMethod.Unique" /><see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.DataBindingAccessMethod" /> when there are no more rows of data in the table.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestEndOfDataException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestEndOfDataException" /> class. </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestEndOfDataException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestEndOfDataException" /> class for remoting scenarios.</summary>
      <param name="info">Holds the serialized object data about the exception being thrown.</param>
      <param name="context">Contains contextual information about the source or destination.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="info" /> is null.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestEndOfDataException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestEndOfDataException" /> class with an error message.</summary>
      <param name="message">The message that describes the error.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestEndOfDataException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestEndOfDataException" /> class with an error message and a reference to the inner <see cref="T:System.Exception" /> that caused this exception.</summary>
      <param name="message">The error message that explains the reason for the exception.</param>
      <param name="innerException">The exception that is the cause of the current exception.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestError">
      <summary>Class to encapsulate errors that occur during Web test execution.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestError.ErrorSubtype">
      <summary>Gets or sets the error subtype string.</summary>
      <returns>The error subtype.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestError.ErrorText">
      <summary>Gets or sets a string that describes the error.</summary>
      <returns>A string that describes the error.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestError.ErrorType">
      <summary>Gets or sets the type of error that occurred.</summary>
      <returns>The type of error that occurred.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestError.ErrorTypeString"></member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestError.ExceptionText">
      <summary>Gets or sets the exception text, which is the string returned by the ToString() method of the exception.</summary>
      <returns>The exception text.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestError.StackTrace">
      <summary>Gets or sets the stack trace for the error.</summary>
      <returns>The stack trace for the error.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestError.TimeOfError">
      <summary>Gets or sets the time the error occurred.</summary>
      <returns>The time the error occurred.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestErrorType">
      <summary>Enumerates the types of errors that can be included in a WebTestError object.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.TestTools.WebTesting.WebTestErrorType.TestError">
      <summary>A test error.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.TestTools.WebTesting.WebTestErrorType.Exception">
      <summary>An exception error.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.TestTools.WebTesting.WebTestErrorType.HttpError">
      <summary>An HTTP error.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.TestTools.WebTesting.WebTestErrorType.ValidationRuleError">
      <summary>A <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.ValidationRule" /> error.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.TestTools.WebTesting.WebTestErrorType.ExtractionRuleError">
      <summary>An <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.ExtractionRule" /> error.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.TestTools.WebTesting.WebTestErrorType.ConditionalRuleError">
      <summary>A <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.ConditionalRule" /> error.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.TestTools.WebTesting.WebTestErrorType.Timeout">
      <summary>A time-out error.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.TestTools.WebTesting.WebTestErrorType.DataCollectionError">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.TestTools.WebTesting.WebTestErrorType.DataCollectionWarning">
      <summary />
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestException">
      <summary>The exception that is thrown by the test engine for errors that occur while a test is running.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestException" /> class. </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestException" /> class for remoting scenarios. </summary>
      <param name="info">Holds the serialized object data about the exception being thrown.</param>
      <param name="context">Contains contextual information about the source or the destination.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="info" /> is null.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestException" /> class with an error message. </summary>
      <param name="message">The message that describes the error.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestException" /> class with an error message and a reference to the inner <see cref="T:System.Exception" /> that caused this exception.</summary>
      <param name="message">The error message that explains the reason for the exception.</param>
      <param name="innerException">The exception that is the cause of the current exception.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestExecutionInstruction">
      <summary>Used to denote how to handle an operation.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.TestTools.WebTesting.WebTestExecutionInstruction.Execute">
      <summary>An operation is to be run.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.TestTools.WebTesting.WebTestExecutionInstruction.Skip">
      <summary>An operation is to be skipped.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestItem">
      <summary>Base class for <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequest" />.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestItem.Clone">
      <summary>When it is overridden in a derived class, it creates a copy of the calling object. </summary>
      <returns>A copy of the object.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestItem.ItemId">
      <summary>Zero-based sequence number of the item within the web test.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestItem.RuntimeClone"></member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestItemCollection">
      <summary>Represents a strongly typed container for Web test items. </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestItemCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestItemCollection" /> class.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestLoop">
      <summary>Class to represent conditional loop constructs that contains a collection of Web test items that are executed as long as the conditional rule is met.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestLoop.#ctor(Microsoft.VisualStudio.TestTools.WebTesting.ConditionalRule,System.Int32,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestLoop" /> class by using the specified parameters.</summary>
      <param name="conditionalRule">The conditional rule.</param>
      <param name="maxIterations">The maximum number of iterations for this loop.</param>
      <param name="advanceDataSources">true to advance the data cursors in the data set; false to not advance the data cursors in the data set.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestLoop.#ctor(Microsoft.VisualStudio.TestTools.WebTesting.LoopConditionalRuleReference)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestLoop" /> class by using the specified <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.LoopConditionalRuleReference" />.</summary>
      <param name="conditionalRuleReference">The <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.LoopConditionalRuleReference" /> to use to initialize this <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestLoop" />.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestLoop.#ctor(Microsoft.VisualStudio.TestTools.WebTesting.WebTestLoop)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestLoop" /> class by copying the specified <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestLoop" />.</summary>
      <param name="copy">The <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestLoop" /> to copy.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestLoop.Clone">
      <summary>Creates a new <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestLoop" /> that is a copy of the current instance.</summary>
      <returns>A new <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestLoop" /> that is a copy of the current instance.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestLoop.CurrentIterationNumber">
      <summary>Gets the current iteration number.</summary>
      <returns>The current iteration number.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestLoop.ExecuteCheckConditionalRule(Microsoft.VisualStudio.TestTools.WebTesting.WebTest)">
      <returns>true if the condition was met; otherwise, false.</returns>
      <param name="webTest">The <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTest" /> to execute.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestLoop.ExecuteInitializeConditionalRule(Microsoft.VisualStudio.TestTools.WebTesting.WebTest)">
      <summary>Initializes the conditional rule.</summary>
      <param name="webTest">The <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTest" /> to be executed.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestLoop.LoopConditionalRuleReference">
      <summary>Gets the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.LoopConditionalRuleReference" />.</summary>
      <returns>The <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.LoopConditionalRuleReference" />.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestLoop.RegisterDataSource(System.String,System.String)">
      <summary>Registers the specified data source and data table.</summary>
      <param name="dataSourceName">The name of the data source.</param>
      <param name="dataTableName">The name of the data table.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestLoop.RuntimeClone">
      <summary>Creates a new <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestLoop" /> that is a copy of the current instance at runtime.</summary>
      <returns>A new <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestLoop" /> that is a copy of the current instance.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestLoop.ToString">
      <summary>Returns a <see cref="T:System.String" /> that represents the current <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestLoop" />.</summary>
      <returns>A <see cref="T:System.String" /> that represents the current <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestLoop" />.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestLoop.ToString(System.String)">
      <summary>Returns a <see cref="T:System.String" /> that represents the current <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestLoop" />.</summary>
      <returns>A <see cref="T:System.String" /> that represents the current <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestLoop" />.</returns>
      <param name="conditionalRuleText">The conditional rule text to return, or the <see cref="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRuleBase.DisplayName" /> if <paramref name="conditionalRuleText" /> is null.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestPageStatistics">
      <summary>Contains statistics about the execution of the page.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestPageStatistics.PageTime">
      <summary>Gets the response time for the entire page from the time that the first request was issued to the time that the last byte for all dependent requests was received. </summary>
      <returns>A <see cref="T:System.TimeSpan" /> data type that represents the entire response time for the page. </returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestPageStatistics.StartTime">
      <summary>Gets the time the page started.</summary>
      <returns>A <see cref="T:System.DateTime" /> value type that represents the time that the page started. </returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestPageStatistics.TotalContentLength">
      <summary>Gets the total content length of all responses for the page, including redirects and dependents.</summary>
      <returns>The total content length of all the responses for the page. </returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestPlugin">
      <summary>Provides a means to run code and access a <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTest" /> before and after the Web test is run. This class must be inherited. </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestPlugin.#ctor">
      <summary>This class must be inherited.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestPlugin.PostPage(System.Object,Microsoft.VisualStudio.TestTools.WebTesting.PostPageEventArgs)">
      <summary>When overridden in a derived class, represents the method that will handle the event associated with the completion of a Web page.</summary>
      <param name="sender">The source of the event.</param>
      <param name="e">A PostPageEventArgs that contains the event data.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestPlugin.PostRequest(System.Object,Microsoft.VisualStudio.TestTools.WebTesting.PostRequestEventArgs)">
      <summary>When overridden in a derived class, represents the method that will handle the event associated with the completion of an HTTP request.</summary>
      <param name="sender">The source of the event.</param>
      <param name="e">A PostRequestEventArgs that contains the event data.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestPlugin.PostTransaction(System.Object,Microsoft.VisualStudio.TestTools.WebTesting.PostTransactionEventArgs)">
      <summary>When overridden in a derived class, represents the method that will handle the event associated with the completion of a transaction that is defined in the Web test.</summary>
      <param name="sender">The source of the event.</param>
      <param name="e">A PostTransactionEventArgs that contains the event data.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestPlugin.PostWebTest(System.Object,Microsoft.VisualStudio.TestTools.WebTesting.PostWebTestEventArgs)">
      <summary>When overridden in a derived class, represents the method that will handle the event associated with the end of a Web test.</summary>
      <param name="sender">The source of the event.</param>
      <param name="e">A <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.PostWebTestEventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestPlugin.PrePage(System.Object,Microsoft.VisualStudio.TestTools.WebTesting.PrePageEventArgs)">
      <summary>When overridden in a derived class, represents the method that will handle the event associated with the start of a Web page.</summary>
      <param name="sender">The source of the event.</param>
      <param name="e">A PrePageEventArgs that contains the event data.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestPlugin.PreRequest(System.Object,Microsoft.VisualStudio.TestTools.WebTesting.PreRequestEventArgs)">
      <summary>When overridden in a derived class, represents the method that will handle the event associated with the start of an HTTP request.</summary>
      <param name="sender">The source of the event.</param>
      <param name="e">A PreRequestEventArgs that contains the event data.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestPlugin.PreRequestDataBinding(System.Object,Microsoft.VisualStudio.TestTools.WebTesting.PreRequestDataBindingEventArgs)"></member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestPlugin.PreTransaction(System.Object,Microsoft.VisualStudio.TestTools.WebTesting.PreTransactionEventArgs)">
      <summary>When overridden in a derived class, represents the method that will handle the event associated with the start of a transaction that is defined in the Web test.</summary>
      <param name="sender">The source of the event.</param>
      <param name="e">A PreTransactionEventArgs that contains the event data.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestPlugin.PreWebTest(System.Object,Microsoft.VisualStudio.TestTools.WebTesting.PreWebTestEventArgs)">
      <summary>When overridden in a derived class, represents the method that will handle the event associated with the start of a Web test.</summary>
      <param name="sender">The source of the event.</param>
      <param name="e">A <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.PostWebTestEventArgs" /> that contains the event data.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestPluginReference">
      <summary>The <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestPluginReference" /> class encapsulates the metadata about a <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequestPlugin" /> and the parameter values to use when an instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequestPlugin" /> is created when the Web test that uses the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequestPlugin" /> is run.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestPluginReference.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestPluginReference" /> class.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestPluginReference.Clone">
      <summary>Creates a new <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestPluginReference" /> that is a copy of the current instance.</summary>
      <returns>A new <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestPluginReference" /> that is a copy of the current instance.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestPluginReference.CreateInstance">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestPluginReference" /> class.</summary>
      <returns>A new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestPluginReference" /> class.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestPluginReferenceCollection">
      <summary>Represents a serializable strongly typed container for Web test plug-in references.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestPluginReferenceCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestPluginReferenceCollection" /> class.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRecorderPlugin">
      <summary>Plug-in interface for a Web test recorder.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRecorderPlugin.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRecorderPlugin" /> class.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRecorderPlugin.PostWebTestDynamicParameterDetection(System.Object,Microsoft.VisualStudio.TestTools.WebTesting.PostWebTestRecordingEventArgs)">
      <param name="sender">The source of the event.</param>
      <param name="e">A <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.PostWebTestRecordingEventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRecorderPlugin.PostWebTestRecording(System.Object,Microsoft.VisualStudio.TestTools.WebTesting.PostWebTestRecordingEventArgs)">
      <param name="sender">The source of the event.</param>
      <param name="e">A <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.PostWebTestRecordingEventArgs" /> that contains the event data.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRecorderPluginReference"></member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRecorderPluginReference.#ctor"></member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRecorderPluginReference.AlwaysExecute"></member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRecorderPluginReference.Clone"></member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRecorderPluginReference.CreateInstance"></member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRecorderUtilities"></member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRecorderUtilities.ParseFileUploadFields(Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequest)">
      <param name="request"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequest">
      <summary>Represents an HTTP request that will be sent to a Web server. </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequest.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequest" /> class using a URL string.</summary>
      <param name="url">The location of the resource being tested by the Web test.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequest.#ctor(System.Uri)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequest" /> class using a <see cref="T:System.Uri" /> object.</summary>
      <param name="requestUri">The <see cref="T:System.Uri" /> object that contains information about the resource being tested.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequest.Body">
      <summary>Gets or sets the body of this request.</summary>
      <returns>An <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.IHttpBody" /> object. </returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequest.BodyBytes">
      <summary>Gets the bytes associated with the body.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequest.Cache">
      <summary>Gets or sets a value that indicates whether to simulate browser caching for the request.</summary>
      <returns>true to simulate browser caching; otherwise, false. This has a default value of false.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequest.ClientCertificates">
      <summary>Gets or sets a reference to allow users to authenticate using X.509 SSL certificates.</summary>
      <returns>A <see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" /> collection.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequest.Clone">
      <summary>Makes a deep copy of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequest" /> object.</summary>
      <returns>A <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequest" /> object.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequest.ContentLength">
      <summary>Gets the length (in bytes) of the request body.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequest.ContentType">
      <summary>Gets the content type of the request.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequest.Cookies">
      <summary>Gets a collection of cookies.</summary>
      <returns>A <see cref="T:System.Net.CookieCollection" /> collection.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequest.CorrelationExtractionRuleReferences">
      <summary>Gets the collection of references to extraction rules that are used to correlate dynamic parameters.</summary>
      <returns>The collection of references to extraction rules.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequest.DependentRequests">
      <summary>Gets the collection of dependent requests.</summary>
      <returns>A <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequestCollection" /> collection. </returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequest.EncodeRedirectedUrl"></member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequest.Encoding">
      <summary>Gets or sets the <see cref="T:System.Text.Encoding" /> format.</summary>
      <returns>Gets an <see cref="T:System.Text.Encoding" /> object. The default format is UTF-8.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequest.ExpectedHttpStatusCode">
      <summary>Gets or sets the HTTP status code that is expected for this request.</summary>
      <returns>The HTTP status code.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequest.ExpectedResponseUrl">
      <summary>Gets or sets the expected URL of the response. When a redirect is expected, this URL might differ from the request URL.</summary>
      <returns>The expected URL of the response.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequest.ExtractionRuleReferences">
      <summary>Gets the collection of references to extraction rules that are defined for the request.</summary>
      <returns>The collection of references to extraction rules that are defined for the request.</returns>
    </member>
    <member name="E:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequest.ExtractValues">
      <summary>Occurs after the <see cref="E:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequest.ValidateResponse" /> event.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequest.FollowRedirects">
      <summary>Gets or sets a value that indicates whether to automatically follow redirects.</summary>
      <returns>true if redirects are followed; otherwise, false. The default is true.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequest.HasCookies">
      <summary>Gets a value that indicates whether the request has cookies.</summary>
      <returns>true if the request has cookies; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequest.HasDependentRequests">
      <summary>Gets a value that indicates whether the request has dependent requests.</summary>
      <returns>true if the request has dependent requests; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequest.HasHeaders">
      <summary>Gets a value that indicates whether the request has HTTP headers.</summary>
      <returns>true if the request has HTTP headers; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequest.HasQueryStringParameters">
      <summary>Gets a value that indicates whether the request has querystring parameters.</summary>
      <returns>true if the request has querystring parameters; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequest.Headers">
      <summary>Gets the collection of HTTP headers for the request.</summary>
      <returns>A <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequestHeaderCollection" /> collection.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequest.InternalSetOutcome(Microsoft.VisualStudio.TestTools.WebTesting.Outcome)">
      <param name="outcome"></param>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequest.IsRedirectFollow">
      <summary>Gets a value that indicates whether the request was created as the result of following a redirect.</summary>
      <returns>true if the request was created by a redirect; otherwise, false. The default value is false.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequest.Method">
      <summary>Gets or sets the method to use for the request.</summary>
      <returns>The method that is used for the request. The default value is "GET".</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequest.Outcome">
      <summary>Gets or sets the Pass or Fail outcome of the Web test request.</summary>
      <returns>The outcome of the Web test request.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequest.ParseDependentRequests">
      <summary>Gets or sets a value that indicates whether to automatically fetch dependent requests found in the response body.</summary>
      <returns>true if dependent requests are fetched; otherwise, false. The default value is true.</returns>
    </member>
    <member name="E:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequest.PostRequest">
      <summary>Occurs after the <see cref="E:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequest.ValidateResponse" /> and the <see cref="E:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequest.ExtractValues" /> events.</summary>
    </member>
    <member name="E:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequest.PreRequest">
      <summary>Occurs before the request is sent. </summary>
    </member>
    <member name="E:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequest.PreRequestDataBinding"></member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequest.QueryStringParameters">
      <summary>Gets the list of query string parameters for the request.</summary>
      <returns>A <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.QueryStringParameterCollection" /> collection.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequest.RecordedCookies">
      <summary>Gets the cookies recorded with the request.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequest.RecordResult">
      <summary>Gets or sets a value that indicates whether individual statistics and result data are tracked for this request.</summary>
      <returns>true if statistics and result data are tracked; otherwise, false. The default value is true.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequest.ReportingName">
      <summary>Gets or sets the reporting name for a request.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequest.ResponseTimeGoal">
      <summary>Gets or sets the response time goal for a particular page.</summary>
      <returns>A value that represents the response time goal for a particular page. This is measured in seconds. The default value is zero seconds which means there is no goal for this page.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequest.SendChunked">
      <summary>Gets or sets a value that indicates whether the user can send a chunked request body.</summary>
      <returns>true if chunked requests are sent; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequest.ThinkTime">
      <summary>Gets or sets a value that represents the think time to wait after the response is received.</summary>
      <returns>A think time value. The default value is 0.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequest.Timeout">
      <summary>Gets or sets a value that indicates the amount of time to wait for this request before timing out.</summary>
      <returns>The time to wait before timing out. The default value is 0.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequest.Url">
      <summary>Gets or sets the URL to the resource used for the request.</summary>
      <returns>A URL value.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequest.UrlWithQueryString">
      <summary>Gets the URL to the resource that is used for the request, including the query string.</summary>
      <returns>The URL to the resource that is used for the request.</returns>
    </member>
    <member name="E:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequest.ValidateResponse">
      <summary>Occurs immediately after the response is received.</summary>
    </member>
    <member name="E:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequest.ValidateResponseOnPageComplete">
      <summary>This event is raised after the page is fully loaded.Â  This is used to check that the response was valid.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequest.ValidationRuleReferences">
      <summary>Gets the collection of references to validation rules that are defined for the request.</summary>
      <returns>The collection of references to validation rules that are defined for the request.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequest.Version">
      <summary>Gets or sets the HTTP version of the request.</summary>
      <returns>The HTTP version of the request. The default value is "1.1".</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequest.WebTestRequestPluginReferences">
      <summary>Gets the collection of references to the Web test request plug-ins that are defined on the request.</summary>
      <returns>The collection of references to the Web test request plug-ins that are defined on the request.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequestCollection">
      <summary>A strongly typed container for Web test request headers. </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequestCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequestCollection" /> class.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequestHeader">
      <summary>Represents an HTTP header. </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequestHeader.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequestHeader" /> class.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequestHeader.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequestHeader" /> class with values for the <see cref="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequestHeader.Name" /> and <see cref="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequestHeader.Value" /> properties.</summary>
      <param name="name">The name of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequestHeader" />. </param>
      <param name="value">The value of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequestHeader" />. </param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequestHeader.Clone">
      <summary>Creates of a copy of the current instance.</summary>
      <returns>A <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequestHeader" /> object.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequestHeader.Name">
      <summary>Gets or sets the name of the request header.</summary>
      <returns>The name of the request header.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequestHeader.Value">
      <summary>Gets or sets the value of the request header.</summary>
      <returns>The value of the request header.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequestHeaderCollection">
      <summary>A serializable strongly typed container for Web test request headers.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequestHeaderCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequestHeaderCollection" /> class. </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequestHeaderCollection.Add(System.String,System.String)">
      <summary>Adds a <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequestHeaderCollection" /> created from a parameter name and value.</summary>
      <param name="name">The name of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequestHeader" /> to be created and then added to the collection.</param>
      <param name="value">The value of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequestHeader" /> to be created and then added to the collection.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequestHeaderCollection.Contains(System.String)">
      <summary>Returns a value that indicates whether a <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequestHeader" /> occurs in this collection.</summary>
      <returns>true if the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequestHeader" /> occurs in this collection; otherwise, false.</returns>
      <param name="headerName">The name of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequestHeader" /> to look for in this collection.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequestHeaderCollection.Remove(System.String)">
      <summary>Removes the first occurrence of a header with the specified header name.</summary>
      <returns>true if a <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequestHeader" /> was removed; otherwise, false.Remarks</returns>
      <param name="headerName">The name of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequestHeader" /> to remove from this collection.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequestPlugin">
      <summary>Receives notifications before and after a request is processed. </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequestPlugin.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequestPlugin" /> class.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequestPlugin.PostRequest(System.Object,Microsoft.VisualStudio.TestTools.WebTesting.PostRequestEventArgs)">
      <summary>When overridden in a derived class, this method is run each time a request finishes before dependent requests are run. This allows the callback to get runtime information about the request.</summary>
      <param name="sender">The object that fired the event.</param>
      <param name="e">A <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.PostRequestEventArgs" /> object.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequestPlugin.PreRequest(System.Object,Microsoft.VisualStudio.TestTools.WebTesting.PreRequestEventArgs)">
      <summary>When overridden in a derived class, this method allows outside code to affect the request. </summary>
      <param name="sender">The object that fired the event.</param>
      <param name="e">A <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.PreRequestEventArgs" /> object.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequestPlugin.PreRequestDataBinding(System.Object,Microsoft.VisualStudio.TestTools.WebTesting.PreRequestDataBindingEventArgs)"></member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequestPluginConverter">
      <summary>Class to convert webtests from Visual Studio 2005. Not intended for use by user written code.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequestPluginConverter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequestPluginConverter" /> class.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequestPluginConverter.ClassName">
      <summary>Gets or sets the class name.</summary>
      <returns>The class name.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequestPluginConverter.PostRequest(System.Object,Microsoft.VisualStudio.TestTools.WebTesting.PostRequestEventArgs)">
      <summary>Represents the method that will handle the event associated with the completion of an HTTP request.</summary>
      <param name="sender">The source of the event.</param>
      <param name="e">A <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.PostRequestEventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequestPluginConverter.PreRequest(System.Object,Microsoft.VisualStudio.TestTools.WebTesting.PreRequestEventArgs)">
      <summary>Represents the method that will handle the event associated with the start of an HTTP request.</summary>
      <param name="sender">The source of the event.</param>
      <param name="e">A <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.PreRequestEventArgs" /> that contains the event data.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequestPluginConverter.WebTestRequestPlugin">
      <summary>Gets the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequestPlugin" />.</summary>
      <returns>The <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequestPlugin" />.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequestPluginReference">
      <summary>The <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequestPluginReference" /> class encapsulates the metadata about a <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequestPlugin" /> and the parameter values to use when an instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequestPlugin" /> is created when the Web test that uses the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequestPlugin" /> is run.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequestPluginReference.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequestPluginReference" /> class.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequestPluginReference.Clone">
      <summary>Creates a new <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequestPluginReference" /> that is a copy of the current instance.</summary>
      <returns>A new <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequestPluginReference" /> that is a copy of the current instance.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequestPluginReference.CreateInstance">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequestPluginReference" /> class.</summary>
      <returns>A new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequestPluginReference" /> class.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequestPluginReferenceCollection">
      <summary>Represents a strongly typed container for Web test request plug-in references.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequestPluginReferenceCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequestPluginReferenceCollection" /> class.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequestResult">
      <summary>Class to contain all result information for a completed Web test request.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequestResult.ConditionalRuleResult">
      <summary>Gets or sets the conditional rule result.</summary>
      <returns>The conditional rule result.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequestResult.DependantResults">
      <summary>Gets the list of dependant results.</summary>
      <returns>The list of dependant results.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequestResult.Errors">
      <summary>Gets the list of errors.</summary>
      <returns>The list of errors.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequestResult.ExtractionRuleResults">
      <summary>Gets the list of extraction rule results.</summary>
      <returns>The list of extraction rule results.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequestResult.GetDependantResult(System.String)">
      <summary>Returns the dependent result for the specified URL, or null if no dependent result could be found at that URL.</summary>
      <returns>The dependent result for the specified URL, or null if no dependent result could be found at that URL.</returns>
      <param name="url">The URL to evaluate.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequestResult.IsSkippedRequest">
      <summary>Gets or sets the Boolean indicator of whether this request will be skipped.</summary>
      <returns>true if this request will be skipped; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequestResult.Request">
      <summary>Gets or sets the Web test request.</summary>
      <returns>The Web test request.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequestResult.Response">
      <summary>Gets or sets the Web test response.</summary>
      <returns>The Web test response.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequestResult.ValidationRuleResults">
      <summary>Gets or sets the validation rule results.</summary>
      <returns>The validation rule results.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequestStatistics">
      <summary>Used to track key information that is gathered when the request is run.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequestStatistics.ContentLength">
      <summary>Gets or sets the length of the response.</summary>
      <returns>The length of the response. This is measured in bytes. </returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequestStatistics.MillisecondsToFirstByte">
      <summary>Gets the number of milliseconds elapsed between <see cref="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequestStatistics.StartTime" /> and <see cref="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequestStatistics.TimeOfFirstByte" />.</summary>
      <returns>The number of milliseconds elapsed between <see cref="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequestStatistics.StartTime" /> and <see cref="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequestStatistics.TimeOfFirstByte" />.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequestStatistics.MillisecondsToLastByte">
      <summary>Gets the number of milliseconds elapsed between <see cref="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequestStatistics.StartTime" /> and <see cref="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequestStatistics.TimeOfLastByte" />.</summary>
      <returns>The number of milliseconds elapsed between <see cref="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequestStatistics.StartTime" /> and <see cref="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequestStatistics.TimeOfLastByte" />.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequestStatistics.StartTime">
      <summary>Gets or sets the time the request was sent to the server.</summary>
      <returns>A <see cref="T:System.DateTime" /> object.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequestStatistics.TimeOfFirstByte">
      <summary>Gets or sets the time the first byte of the response was received.</summary>
      <returns>A <see cref="T:System.DateTime" /> object.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequestStatistics.TimeOfLastByte">
      <summary>Gets or sets the time the last byte of the response was received.</summary>
      <returns>A <see cref="T:System.DateTime" /> object.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResponse">
      <summary>Represents an HTTP response. </summary>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResponse.BodyBytes">
      <summary>Gets the raw bytes of the HTTP response body.</summary>
      <returns>A byte array representing the HTTP response body.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResponse.BodyString">
      <summary>Gets a string version of the response body for responses with text, HTML, or XML content types.</summary>
      <returns>The response body. This returns null if there is not a body or the content type is not text, HTML, or XML.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResponse.CharacterSet">
      <summary>Gets the character set that is specified in the response headers.</summary>
      <returns>A string that contains the character set of the response.</returns>
      <exception cref="T:System.ObjectDisposedException">The current instance has been disposed.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResponse.Clone"></member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResponse.ContentEncoding">
      <summary>Gets the method that is used to encode the body of the response.</summary>
      <returns>A string describing the method that is used to encode the body of the response.</returns>
      <exception cref="T:System.ObjectDisposedException">The current instance has been disposed.</exception>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResponse.ContentLength">
      <summary>Gets the length of the content that is returned by the request.</summary>
      <returns>The number of bytes returned by the request. Content length does not include header information.</returns>
      <exception cref="T:System.ObjectDisposedException">The current instance has been disposed.</exception>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResponse.ContentType">
      <summary>Gets the MIME type of the response body.</summary>
      <returns>A MIME type.</returns>
      <exception cref="T:System.ObjectDisposedException">The current instance has been disposed.</exception>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResponse.Cookies">
      <summary>Gets the cookies associated with the response.</summary>
      <returns>A <see cref="T:System.Net.CookieCollection" /> collection.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResponse.Headers">
      <summary>Gets the headers associated with the response from the server.</summary>
      <returns>A <see cref="T:System.Net.WebHeaderCollection" /> collection.</returns>
      <exception cref="T:System.ObjectDisposedException">The current instance has been disposed.</exception>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResponse.HtmlDocument">
      <summary>Gets the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.HtmlDocument" /> created by parsing the response body of a response with HTML or XHTML content type.</summary>
      <returns>A <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.HtmlDocument" /> object. This returns null if this is not an HTML response.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResponse.IsBodyEmpty">
      <summary>Gets a value indicating whether the response body is empty.</summary>
      <returns>true if the body is empty or null; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResponse.IsHtml">
      <summary>Gets a value indicating whether the response body is an HTML document.</summary>
      <returns>true if the response body is an HTML document; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResponse.IsText">
      <summary>Gets a value indicating whether the response body is a text document.</summary>
      <returns>true if the response body is a text document; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResponse.IsXml">
      <summary>Gets a value that indicates whether the response is XML.</summary>
      <returns>true if the response content type is "text/xml", "application/xml", or "application/xhtml+xml"; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResponse.LastModified">
      <summary>Gets the last date and time that the contents of the response were modified.</summary>
      <returns>A <see cref="T:System.DateTime" /> object.</returns>
      <exception cref="T:System.ObjectDisposedException">The current instance has been disposed.</exception>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResponse.Method">
      <summary>Gets the method that is used to return the response.</summary>
      <returns>A string that contains the HTTP method that is used to return the response.</returns>
      <exception cref="T:System.ObjectDisposedException">The current instance has been disposed. </exception>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResponse.ProtocolVersion">
      <summary>Gets the version of the HTTP protocol that is used in the response.</summary>
      <returns>A <see cref="T:System.Version" /> that contains the HTTP protocol version of the response.</returns>
      <exception cref="T:System.ObjectDisposedException">The current instance has been disposed. </exception>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResponse.ResponseUri">
      <summary>Gets the URI of the Internet resource that responded to the request.</summary>
      <returns>A <see cref="T:System.Uri" /> that contains the URI of the Internet resource that responded to the request.</returns>
      <exception cref="T:System.ObjectDisposedException">The current instance has been disposed. </exception>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResponse.Server">
      <summary>Gets the name of the server that sent the response.</summary>
      <returns>A string that contains the name of the server that sent the response.</returns>
      <exception cref="T:System.ObjectDisposedException">The current instance has been disposed. </exception>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResponse.Statistics">
      <summary>Gets detailed information gathered during the execution of the request.</summary>
      <returns>A <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRequestStatistics" /> object.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResponse.StatusCode">
      <summary>Gets the status of the response.</summary>
      <returns>A <see cref="T:System.Net.HttpStatusCode" /> value.</returns>
      <exception cref="T:System.ObjectDisposedException">The current instance has been disposed. </exception>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResponse.StatusDescription">
      <summary>Gets the status description returned with the response.</summary>
      <returns>A string describing the status of the response.</returns>
      <exception cref="T:System.ObjectDisposedException">The current instance has been disposed. </exception>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResponse.XmlDocument">
      <summary>Gets a <see cref="T:System.Xml.XmlDocument" /> representing the response body if the content type indicated the response was XML.</summary>
      <returns>A <see cref="T:System.Xml.XmlDocument" /> object. Returns null if this is not an XML response.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResponseCode">
      <summary>Enumerates the HTTP response codes defined in RFC 2616 for HTTP 1.1.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResponseCode.None">
      <summary>HTTP Response code 0.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResponseCode.Continue">
      <summary>HTTP Response code 100.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResponseCode.SwitchingProtocols">
      <summary>HTTP Response code 101.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResponseCode.Ok">
      <summary>HTTP Response code 200.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResponseCode.Created">
      <summary>HTTP Response code 201.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResponseCode.Accepted">
      <summary>HTTP Response code 202.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResponseCode.NonAuthoritativeInformation">
      <summary>HTTP Response code 203.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResponseCode.NoContent">
      <summary>HTTP Response code 204.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResponseCode.ResetContent">
      <summary>HTTP Response code 205.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResponseCode.PartialContent">
      <summary>HTTP Response code 206.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResponseCode.MultipleChoices">
      <summary>HTTP Response code 300.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResponseCode.Moved">
      <summary>HTTP Response code 301.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResponseCode.Redirect">
      <summary>HTTP Response code 302.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResponseCode.RedirectMethod">
      <summary>HTTP Response code 303.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResponseCode.NotModified">
      <summary>HTTP Response code 304.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResponseCode.UseProxy">
      <summary>HTTP Response code 305.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResponseCode.Unused">
      <summary>HTTP Response code 306.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResponseCode.TemporaryRedirect">
      <summary>HTTP Response code 307.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResponseCode.BadRequest">
      <summary>HTTP Response code 400.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResponseCode.Unauthorized">
      <summary>HTTP Response code 401.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResponseCode.PaymentRequired">
      <summary>HTTP Response code 402.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResponseCode.Forbidden">
      <summary>HTTP Response code 403.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResponseCode.NotFound">
      <summary>HTTP Response code 404.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResponseCode.MethodNotAllowed">
      <summary>HTTP Response code 405.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResponseCode.NotAcceptable">
      <summary>HTTP Response code 406.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResponseCode.ProxyAuthenticationRequired">
      <summary>HTTP Response code 407.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResponseCode.RequestTimeout">
      <summary>HTTP Response code 408.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResponseCode.Conflict">
      <summary>HTTP Response code 409.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResponseCode.Gone">
      <summary>HTTP Response code 410.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResponseCode.LengthRequired">
      <summary>HTTP Response code 411.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResponseCode.PreconditionFailed">
      <summary>HTTP Response code 412.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResponseCode.RequestEntityTooLarge">
      <summary>HTTP Response code 413.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResponseCode.RequestUriTooLong">
      <summary>HTTP Response code 414.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResponseCode.UnsupportedMediaType">
      <summary>HTTP Response code 415.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResponseCode.RequestedRangeNotSatisfied">
      <summary>HTTP Response code 416.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResponseCode.ExpectationFailed">
      <summary>HTTP Response code 417.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResponseCode.InternalServerError">
      <summary>HTTP Response code 500.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResponseCode.NotImplemented">
      <summary>HTTP Response code 501.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResponseCode.BadGateway">
      <summary>HTTP Response code 502.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResponseCode.ServiceUnavailable">
      <summary>HTTP Response code 503.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResponseCode.GatewayTimeout">
      <summary>HTTP Response code 504.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResponseCode.HttpVersionNotSupported">
      <summary>HTTP Response code 505.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResponseCodeConverter">
      <summary>Helper class that helps with conversions between enum values and strings.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResponseCodeConverter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResponseCodeConverter" /> class.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResponseCodeConverter.ConvertFromEnumToString(Microsoft.VisualStudio.TestTools.WebTesting.WebTestResponseCode)">
      <summary>Converts the specified enum value to a string representative of this enum value.</summary>
      <returns>A string representation of the specified enum value.</returns>
      <param name="value">The enum value to convert.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResponseCodeConverter.ConvertFromStringToEnum(System.String)">
      <summary>Converts the specified string to a corresponding enum value.</summary>
      <returns>The enum corresponding to the specified string value.</returns>
      <param name="value">The string value to convert.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResponseCodeConverter.PopulateStandardValues">
      <summary>Returns a string array with the string representation of all possible enum values.</summary>
      <returns>A string array with the string representation of all possible enum values.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResultComment"></member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResultComment.Clone">
      <summary>Creates a new <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResultComment" /> that is a copy of the current instance.</summary>
      <returns>A new <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResultComment" /> that is a copy of the current instance.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResultComment.Comment">
      <summary>Gets or sets a text comment.</summary>
      <returns>A text comment.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResultComment.GetRequestSize"></member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResultComment.GetResponseSize"></member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResultComment.Passed">
      <summary>Gets the Boolean indicator of whether the Web test passed.</summary>
      <returns>The Boolean indicator of whether the Web test passed.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResultCondition">
      <summary>Class to contain the Web test result condition.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResultCondition.Clone">
      <summary>Creates a new <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResultCondition" /> that is a copy of the current instance.</summary>
      <returns>A new <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResultCondition" /> that is a copy of the current instance.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResultCondition.ConditionStringRepresentation">
      <summary>Gets or sets the text representation of the condition.</summary>
      <returns>The text representation of the condition.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResultCondition.ErrorOccurred">
      <summary>Gets or sets the Boolean indicator of whether an error occurred.</summary>
      <returns>The Boolean indicator of whether an error occurred.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResultCondition.IsConditionalRuleMet">
      <summary>Returns a Boolean indicator of whether the conditional rule was met.</summary>
      <returns>true if the conditional rule was met; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResultCondition.Passed">
      <summary>Gets the Boolean indicator of whether the Web test passed.</summary>
      <returns>The Boolean indicator of whether the Web test passed.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResultCondition.RequestResult">
      <summary>Gets the request result of the Web test.</summary>
      <returns>The request result of the Web test.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResultCondition.StopCondition"></member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResultCondition.UniqueStringId">
      <summary>Gets or sets the unique string ID for this <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResultCondition" />.</summary>
      <returns>The unique string ID for this <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResultCondition" />.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResultDetails">
      <summary>Class to contain the result details of Web tests.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResultDetails.CorrelationResults">
      <summary>Gets the list of correlation results.</summary>
      <returns>The list of correlation results.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResultDetails.GetWebTestRequestResults">
      <summary>Retrieves the list of <see cref="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResultDetails.GetWebTestRequestResults" />.</summary>
      <returns>A list of <see cref="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResultDetails.GetWebTestRequestResults" />.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResultDetails.TestName"></member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResultDetails.WebTestIterations">
      <summary>Gets the list of Web test iterations.</summary>
      <returns>The list of Web test iterations.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResultDetailsSerializer"></member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResultDetailsSerializer.#ctor"></member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResultDetailsSerializer.Deserialize(System.String)"></member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResultDetailsSerializer.Serialize(Microsoft.VisualStudio.TestTools.WebTesting.WebTestResultDetails,System.String)"></member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResultGroup"></member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResultGroup.AddNonExecutedChildren(System.Collections.Generic.List{Microsoft.VisualStudio.TestTools.WebTesting.WebTestResultUnit},Microsoft.VisualStudio.TestTools.WebTesting.WebTestItemCollection,Microsoft.VisualStudio.TestTools.WebTesting.WebTestResultStatus)">
      <param name="children"></param>
      <param name="itemCollection"></param>
      <param name="resultStatus"></param>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResultGroup.Children"></member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResultGroup.GetItem(System.Int32)">
      <summary>Retrieves the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResultUnit" /> at the specified index from the collection.</summary>
      <returns>The <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResultUnit" /> at the specified index.</returns>
      <param name="itemId">The specified index.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResultGroup.GetRequestSize"></member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResultGroup.GetResponseSize"></member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResultGroup.Passed"></member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResultIteration"></member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResultIteration.Clone">
      <summary>Creates a new object that is a copy of the current instance.</summary>
      <returns>A new object that is a copy of the current instance.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResultIteration.IterationNumber">
      <summary>Gets or sets the iteration number.</summary>
      <returns>The iteration number.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResultLoop">
      <summary>Class to contain the loop result of a Web test.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResultLoop.Clone">
      <summary>Creates a new object that is a copy of the current instance.</summary>
      <returns>A new object that is a copy of the current instance.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResultLoop.LoopStringRepresentation">
      <summary>Gets or sets the string representation of the loop.</summary>
      <returns>The string representation of the loop.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResultLoop.NumberOfIterations">
      <summary>Gets or sets the number of iterations.</summary>
      <returns>The number of iterations.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResultLoop.UniqueStringId">
      <summary>Gets or sets the unique string ID.</summary>
      <returns>The unique string ID.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResultLoopIteration">
      <summary>Class to contain the result of a Web test loop iteration.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResultLoopIteration.Clone">
      <summary>Creates a new object that is a copy of the current instance.</summary>
      <returns>A new object that is a copy of the current instance.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResultLoopIteration.ErrorOccurred">
      <summary>Gets or sets a Boolean indicator of whether an error occurred.</summary>
      <returns>true if an error occurred; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResultLoopIteration.IsConditionalRuleMet">
      <summary>Returns true if the conditional rule was met; otherwise, false.</summary>
      <returns>true if the conditional rule was met; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResultLoopIteration.IterationNumber">
      <summary>Gets or sets the iteration number.</summary>
      <returns>The iteration number.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResultLoopIteration.Passed">
      <summary>Gets a Boolean indicator of whether the Web test passed.</summary>
      <returns>true if the Web test passed; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResultLoopIteration.RequestResult">
      <summary>Gets or sets the request result.</summary>
      <returns>The request result.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResultLoopIteration.StopLoopIteration">
      <summary>Gets or sets the iteration to stop the loop.</summary>
      <returns>The iteration to stop the loop.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResultLoopIteration.UniqueStringId">
      <summary>Gets or sets the unique string ID.</summary>
      <returns>The unique string ID.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResultPage"></member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResultPage.Clone">
      <summary>Creates a new object that is a copy of the current instance.</summary>
      <returns>A new object that is a copy of the current instance.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResultPage.GetRequestSize"></member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResultPage.GetResponseSize"></member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResultPage.Passed">
      <summary>Gets the Boolean indicator of whether the Web test passed.</summary>
      <returns>true if the Web test passed; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResultPage.RedirectedPages">
      <summary>Gets or sets the list of redirected pages.</summary>
      <returns>The list of redirected pages.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResultPage.RequestResult">
      <summary>Gets or sets the result of the request.</summary>
      <returns>The result of the request.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResultStatus">
      <summary>Enumeration for the result status of all WebTestResult classes.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResultStatus.Completed">
      <summary>The Web test completed.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResultStatus.TemplateResult">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResultStatus.Skipped">
      <summary>The Web test was skipped.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResultStatus.ConditionallySkipped">
      <summary>The Web test was conditionally skipped.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResultTransaction"></member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResultTransaction.Clone">
      <summary>Creates a new object that is a copy of the current instance.</summary>
      <returns>A new object that is a copy of the current instance.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResultTransaction.IsIncludedTest"></member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResultTransaction.Name"></member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResultTransaction.ResponseTime">
      <summary>Gets or sets the response time.</summary>
      <returns>The response time.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResultUnit"></member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResultUnit.Clone">
      <summary>Creates a new object that is a copy of the current instance.</summary>
      <returns>A new object that is a copy of the current instance.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResultUnit.DeclarativeWebTestItemId"></member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResultUnit.GetRequestSize"></member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResultUnit.GetResponseSize"></member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResultUnit.IsCompleted"></member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResultUnit.IsSkipped"></member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResultUnit.Passed"></member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResultUnit.ResultStatus"></member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResultUnit.SourceWebTestId"></member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRuleBase">
      <summary>An abstract base class extended by rule and reference classes in the <see cref="N:Microsoft.VisualStudio.TestTools.WebTesting" /> namespace.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRuleBase.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRuleBase" /> class.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRuleBase.#ctor(Microsoft.VisualStudio.TestTools.WebTesting.WebTestRuleBase)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRuleBase" /> class by copying the specified <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRuleBase" />.</summary>
      <param name="copy">The <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRuleBase" /> to copy to create the new <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRuleBase" />.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRuleBase.#ctor(System.Type)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRuleBase" /> class with the specified type.</summary>
      <param name="type">The type to use for initialization.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRuleBase.Clone">
      <summary>Creates a new <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRuleBase" /> that is a copy of the current instance.</summary>
      <returns>A new <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRuleBase" /> that is a copy of the current instance.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRuleBase.Description">
      <summary>Gets or sets the description of the rule or plug-in.</summary>
      <returns>The description of the rule or plug-in.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRuleBase.DisplayName">
      <summary>Gets or sets the name of the rule or plug-in to be displayed in the Web test editor.</summary>
      <returns>The name of the rule or plug-in.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRuleBase.ExecutionOrder"></member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRuleBase.Properties">
      <summary>Gets or sets a collection of <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.PluginOrRuleProperty" /> objects with one member for each property defined by the rule or plug-in implementation.</summary>
      <returns>A collection of <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.PluginOrRuleProperty" /> objects.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WebTestRuleBase.Type">
      <summary>Gets or sets the <see cref="T:System.Type" /> object representing the type of the rule or plug-in.</summary>
      <returns>The <see cref="T:System.Type" /> object representing the type of the rule or plug-in.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestStoppedException">
      <summary>The <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestStoppedException" /> is thrown when data binding is being performed on a table with a unique <see cref="P:Microsoft.VisualStudio.TestTools.WebTesting.DataSourceTable.AccessMethod" /> when there are no more rows of data in the table.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestStoppedException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestStoppedException" /> class.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestStoppedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestStoppedException" /> class for remoting scenarios.</summary>
      <param name="info">Holds the serialized object data about the exception being thrown.</param>
      <param name="context">Contains contextual information about the source or the destination.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="info" /> is null.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestStoppedException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestStoppedException" /> class with the specified error message.</summary>
      <param name="message">The message that describes the error.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WebTestStoppedException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestStoppedException" /> class with an error message and a reference to the inner <see cref="T:System.Exception" /> that caused this exception.</summary>
      <param name="message">The error message that explains the reason for the exception.</param>
      <param name="innerException">The exception that is the cause of the current exception.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.WorkItemAttribute">
      <summary>Use this attribute to specify a work item that is associated with a test.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.WorkItemAttribute.#ctor(System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WorkItemAttribute" /> class with an identification number. </summary>
      <param name="id">The ID of the work item. </param>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.WorkItemAttribute.Id">
      <summary>Gets the ID of the work item.</summary>
      <returns>The ID of the work item.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ConditionalRuleTypeAttribute">
      <summary>Attribute that represents the conditional rule type attribute. This attribute specifies the conditional rule type for which the conditional rule applies.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ConditionalRuleTypeAttribute.#ctor(Microsoft.VisualStudio.TestTools.WebTesting.ConditionalRuleType)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ConditionalRuleTypeAttribute" /> class to the specified conditional rule type.</summary>
      <param name="conditionalRuleType">The conditional rule type to use for initialization.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ConditionalRuleTypeAttribute.ConditionalRuleType">
      <summary>Gets the conditional rule type.</summary>
      <returns>The conditional rule type.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ContextParameterExistenceRule">
      <summary>Class to contain a condition rule that checks whether a context parameter exists.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ContextParameterExistenceRule.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ContextParameterExistenceRule" /> class.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ContextParameterExistenceRule.CheckCondition(System.Object,Microsoft.VisualStudio.TestTools.WebTesting.ConditionalEventArgs)">
      <summary>Determines whether the condition was met or not.</summary>
      <param name="sender">The sender of the event.</param>
      <param name="e">The <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.ConditionalEventArgs" /> that contains the event data.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ContextParameterExistenceRule.CheckForExistence">
      <summary>Gets or sets the Boolean indicator of whether the context parameter exists.</summary>
      <returns>The Boolean indicator of whether the context parameter exists.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ContextParameterExistenceRule.ContextParameterName">
      <summary>Gets or sets the context parameter name.</summary>
      <returns>The context parameter name.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ContextParameterExistenceRule.StringRepresentation">
      <summary>Converts the rule to a string to be displayed in the tree.</summary>
      <returns>A string representation of the rule.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.Rules.CookieComparisonRule">
      <summary>Class to contain a conditional rule that checks the value of a cookie.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.Rules.CookieComparisonRule.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.Rules.CookieComparisonRule" /> class.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.Rules.CookieComparisonRule.CheckCondition(System.Object,Microsoft.VisualStudio.TestTools.WebTesting.ConditionalEventArgs)">
      <summary>Determines whether the condition was met or not.</summary>
      <param name="sender">The sender of the event.</param>
      <param name="e">The <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.ConditionalEventArgs" /> that contains the event data.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.Rules.CookieComparisonRule.ComparisonOperator">
      <summary>Gets or sets the comparison operator.</summary>
      <returns>The comparison operator.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.Rules.CookieComparisonRule.CookieDomainName">
      <summary>Gets or sets the cookie domain name.</summary>
      <returns>The cookie domain name.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.Rules.CookieComparisonRule.CookieName">
      <summary>Gets or sets the cookie name.</summary>
      <returns>The cookie name.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.Rules.CookieComparisonRule.CookiePath">
      <summary>Gets or sets the cookie path.</summary>
      <returns>The cookie path.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.Rules.CookieComparisonRule.CookieValue">
      <summary>Gets or sets the cookie value.</summary>
      <returns>The cookie value.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.Rules.CookieComparisonRule.IgnoreCase">
      <summary>Gets or sets the Boolean indicator of whether to ignore case.</summary>
      <returns>true to ignore case; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.Rules.CookieComparisonRule.StringRepresentation">
      <summary>Converts the rule to a string to be displayed in the tree.</summary>
      <returns>A string representation of the rule.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.Rules.CookieComparisonRule.UseRegularExpression">
      <summary>Gets or sets the Boolean value of whether to use regular expressions.</summary>
      <returns>The Boolean value of whether to use regular expressions.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.Rules.CookieComparisonRule.Webpage">
      <summary>Gets or sets the Web page.</summary>
      <returns>The Web page.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.Rules.CookieExistenceRule">
      <summary>Class to contain a conditional rule that checks for the existence of a cookie.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.Rules.CookieExistenceRule.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.Rules.CookieExistenceRule" /> class.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.Rules.CookieExistenceRule.CheckCondition(System.Object,Microsoft.VisualStudio.TestTools.WebTesting.ConditionalEventArgs)">
      <summary>Determines whether the condition was met or not.</summary>
      <param name="sender">The sender of the event.</param>
      <param name="e">The <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.ConditionalEventArgs" /> that contains the event data.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.Rules.CookieExistenceRule.CheckForExistence">
      <summary>Gets or sets the Boolean indicator of whether the cookie exists.</summary>
      <returns>true if the cookie exists; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.Rules.CookieExistenceRule.CookieDomainName">
      <summary>Gets or sets the cookie domain name.</summary>
      <returns>The cookie domain name.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.Rules.CookieExistenceRule.CookieName">
      <summary>Gets or sets the cookie name.</summary>
      <returns>The cookie name.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.Rules.CookieExistenceRule.CookiePath">
      <summary>Gets or sets the cookie path.</summary>
      <returns>The cookie path.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.Rules.CookieExistenceRule.StringRepresentation">
      <summary>Converts the rule to a string to be displayed in the tree.</summary>
      <returns>A string representation of the rule.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.Rules.CookieExistenceRule.Webpage">
      <summary>Gets or sets the Web page.</summary>
      <returns>The Web page.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.Rules.CountingLoopRule">
      <summary>Class to contain a conditional rule which is used to execute a loop a particular number of times.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.Rules.CountingLoopRule.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.Rules.CountingLoopRule" /> class.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.Rules.CountingLoopRule.CheckCondition(System.Object,Microsoft.VisualStudio.TestTools.WebTesting.ConditionalEventArgs)">
      <summary>Determines whether the condition was met or not.</summary>
      <param name="sender">The sender of the event.</param>
      <param name="e">The <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.ConditionalEventArgs" /> that contains the event data.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.Rules.CountingLoopRule.ContextParameterName">
      <summary>Gets or sets the context parameter name.</summary>
      <returns>The context parameter name.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.Rules.CountingLoopRule.Initialize(System.Object,Microsoft.VisualStudio.TestTools.WebTesting.ConditionalEventArgs)">
      <summary>Initializes a <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.Rules.CountingLoopRule" />.</summary>
      <param name="sender">The sender of the event.</param>
      <param name="e">The <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.ConditionalEventArgs" /> that contains the event data.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.Rules.CountingLoopRule.IterationsCount">
      <summary>Gets or sets the number of iterations.</summary>
      <returns>The number of iterations.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.Rules.CountingLoopRule.StringRepresentation">
      <summary>Converts the rule to a string to be displayed in the tree.</summary>
      <returns>A string representation of the rule.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractAttributeValue">
      <summary>Extract the value of an attribute from a specified HTML tag.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractAttributeValue.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractAttributeValue" /> class.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractAttributeValue.AttributeName">
      <summary>Gets or sets a value that represents the name of the attribute that has the value to extract.</summary>
      <returns>The name of an attribute.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractAttributeValue.Extract(System.Object,Microsoft.VisualStudio.TestTools.WebTesting.ExtractionEventArgs)">
      <summary>Extracts the value of an attribute if a match is found.</summary>
      <param name="sender">The object raising the event.</param>
      <param name="e">An <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.ExtractionEventArgs" /> that contains the request, response, and context event data.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractAttributeValue.HtmlDecode">
      <summary>Gets or sets a value that indicates whether the extracted value should be HTML decoded before the value is placed in the Web test context.</summary>
      <returns>true if extracted value should be HTML decoded before the value is placed in the Web test context; otherwise false.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractAttributeValue.Index"></member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractAttributeValue.MatchAttributeName">
      <summary>Gets or sets an additional attribute name that must be found in the HTML tag that contains the attribute value to extract. Used in conjunction with <see cref="P:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractAttributeValue.MatchAttributeValue" />.</summary>
      <returns>An attribute name.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractAttributeValue.MatchAttributeValue">
      <summary>Gets or sets the value of an additional attribute that must be found in the HTML tag that contains the attribute value to extract. Used in conjunction with <see cref="P:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractAttributeValue.MatchAttributeName" />.</summary>
      <returns>An attribute value.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractAttributeValue.Required">
      <summary>Gets or sets a value that indicates whether the extraction rule should fail if the value to be extracted is not found in the response.</summary>
      <returns>true if the extraction rule should fail because the value to be extracted is not found in the response; otherwise false.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractAttributeValue.TagName">
      <summary>Gets or sets the name of the tag that contains the attribute you want to extract.</summary>
      <returns>The name of a tag contains the attribute value to extract.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractFormField">
      <summary>Extracts the value of a form field attribute and adds it to the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestContext" />.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractFormField.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractFormField" /> class.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractFormField.Extract(System.Object,Microsoft.VisualStudio.TestTools.WebTesting.ExtractionEventArgs)">
      <summary>Extracts the form field name and value that matches the <see cref="P:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractFormField.Name" /> property.</summary>
      <param name="sender">The object raising the event.</param>
      <param name="e">An <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.ExtractionEventArgs" /> that contains the request, response, and context event data.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractFormField.HtmlDecode">
      <summary>Gets or sets a value that indicates whether the extracted value should be HTML decoded before the value is placed in the Web test context.</summary>
      <returns>true if extracted value should be HTML decoded before the value is placed in the Web test context; otherwise false.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractFormField.Index"></member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractFormField.Name">
      <summary>Gets or sets the name of the field whose value is to be extracted.</summary>
      <returns>The name of the field to be extracted and its value.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractFormField.Required">
      <summary>Gets or sets a value that indicates whether the extraction rule should fail if the value to be extracted is not found in the response.</summary>
      <returns>true if the extraction rule should fail because the value to be extracted is not found in the response; otherwise false.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractHiddenFields">
      <summary>Extracts all hidden fields from the response and adds each value to the context.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractHiddenFields.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractHiddenFields" /> class.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractHiddenFields.ContextParameterName">
      <summary>Gets or sets the name of the extracted property.</summary>
      <returns>The name of the extracted property.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractHiddenFields.Extract(System.Object,Microsoft.VisualStudio.TestTools.WebTesting.ExtractionEventArgs)">
      <summary>Extracts all hidden fields found in the body of the response and adds the unique hidden fields to the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestContext" />.</summary>
      <param name="sender">The object raising the event.</param>
      <param name="e">An <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.ExtractionEventArgs" /> that contains the request, response, and context event data.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractHiddenFields.HtmlDecode">
      <summary>Gets or sets a value that indicates whether the extracted value should be HTML decoded before the value is placed in the Web test context.</summary>
      <returns>true if extracted value should be HTML decoded before the value is placed in the Web test context; otherwise false.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractHiddenFields.Required">
      <summary>Gets or sets a value that indicates whether the extraction rule should fail if the values to be extracted are not found in the response.</summary>
      <returns>true if the extraction rule should fail because the value to be extracted is not found in the response; otherwise false.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractHttpHeader">
      <summary>Used to extract an HTTP header value from the response and place the value of the header into the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestContext" />.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractHttpHeader.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractHttpHeader" /> class.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractHttpHeader.Extract(System.Object,Microsoft.VisualStudio.TestTools.WebTesting.ExtractionEventArgs)">
      <summary>Extracts the value of an HTTP header from the response and places the value and context parameter name into the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestContext" />.</summary>
      <param name="sender">The object that fired the event.</param>
      <param name="e">Contains request, response, and context information.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractHttpHeader.Header">
      <summary>Gets or sets a value representing the name of the header whose value is to be extracted.</summary>
      <returns>The name of a header.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractHttpHeader.Required">
      <summary>Gets or sets a value that indicates whether the request fails if the header does not exist.</summary>
      <returns>true if the header is required; otherwise, false. The default value is true.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractRegularExpression">
      <summary>Extracts text from the response that matches the regular expression pattern.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractRegularExpression.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractRegularExpression" /> class.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractRegularExpression.Extract(System.Object,Microsoft.VisualStudio.TestTools.WebTesting.ExtractionEventArgs)">
      <summary>Finds the text represented by the regular expression in the response and adds the value to the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestContext" />.</summary>
      <param name="sender">The object that fired the event.</param>
      <param name="e">Contains information about the request, response, and context event data.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractRegularExpression.HtmlDecode">
      <summary>Gets or sets a value that indicates whether the extracted value should be HTML decoded before the value is placed in the Web test context.</summary>
      <returns>true if extracted value should be HTML decoded before the value is placed in the Web test context; otherwise false.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractRegularExpression.IgnoreCase">
      <summary>Gets or sets a value that indicates whether matching is case-sensitive.</summary>
      <returns>true if matching is case-sensitive; otherwise, false. The default value is true.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractRegularExpression.Index">
      <summary>Gets or sets a value that represents an index value of an occurrence of a string that is located in the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.HtmlDocument" />.</summary>
      <returns>An index value of an occurrence of a string that is identified by <see cref="P:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractRegularExpression.RegularExpression" />.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractRegularExpression.RegularExpression">
      <summary>Gets or sets a regular expression which defines the string to extract.</summary>
      <returns>A regular expression which defines the string to extract.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractRegularExpression.Required">
      <summary>Gets or sets a value that indicates whether the extraction fails if the text represented by <see cref="P:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractRegularExpression.RegularExpression" /> does not exist in the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.HtmlDocument" />.</summary>
      <returns>true if the request fails if the text represented by <see cref="P:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractRegularExpression.RegularExpression" /> does not exist; otherwise, false. The default value is true.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText">
      <summary>Extract text from the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.HtmlDocument" /> based on delimiting start/end strings, matching regular expressions, and the occurrence of the text. The extracted text is added to the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestContext" />.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText" /> class.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText.EndsWith">
      <summary>Gets or sets a value that represents the string that delimits the end of the string to extract.</summary>
      <returns>A string that delimits the end of the string to extract.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText.Extract(System.Object,Microsoft.VisualStudio.TestTools.WebTesting.ExtractionEventArgs)">
      <summary>Finds the text delimited by the <see cref="P:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText.StartsWith" /> and <see cref="P:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText.EndsWith" /> properties and adds the text to the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestContext" />.</summary>
      <param name="sender">The object that fired the event.</param>
      <param name="e">Contains information about the request, response, and context.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText.ExtractRandomMatch">
      <summary>Indicates whether the extracted value is chosen randomly from all matches in the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.HtmlDocument" />.</summary>
      <returns>A Boolean value that indicates whether the extracted value is chosen randomly from all matches in the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.HtmlDocument" />.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText.HtmlDecode">
      <summary>Gets or sets a value that indicates whether the extracted value should be HTML decoded before the value is placed in the Web test context.</summary>
      <returns>true if extracted value should be HTML decoded before the value is placed in the Web test context; otherwise false.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText.IgnoreCase">
      <summary>Gets or sets a value that indicates whether matching is case-sensitive.</summary>
      <returns>true if matching is case-sensitive; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText.Index">
      <summary>Gets or sets the zero-based index of the string to match.</summary>
      <returns>The index of the string to match. The default value is zero.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText.Required">
      <summary>Gets or sets a value that indicates whether the request fails if the search text is not found.</summary>
      <returns>true if the extracted text is required; otherwise, false. The default is true.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText.StartsWith">
      <summary>Gets or sets a value representing the string which delimits the beginning of the string to extract.</summary>
      <returns>A string delimiting the beginning of the string to extract.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ExtractText.UseRegularExpression">
      <summary>Gets or sets a value that indicates whether the search strings are regular expressions.</summary>
      <returns>true if the search strings are regular expressions; otherwise, false. The default value is false.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ForLoopRule">
      <summary>Class to contain a conditional rule that represents an iteration statement, an initialization statement, a test expression, and an increment statement.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ForLoopRule.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ForLoopRule" /> class.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ForLoopRule.CheckCondition(System.Object,Microsoft.VisualStudio.TestTools.WebTesting.ConditionalEventArgs)">
      <summary>Determines whether the condition was met or not.</summary>
      <param name="sender">The sender of the event.</param>
      <param name="e">The <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.ConditionalEventArgs" /> that contains the event data.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ForLoopRule.ComparisonOperator">
      <summary>Gets or sets the comparison operator.</summary>
      <returns>The comparison operator.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ForLoopRule.ContextParameterName">
      <summary>Gets or sets the context parameter name.</summary>
      <returns>The context parameter name.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ForLoopRule.IncrementValue">
      <summary>Gets or sets the increment value.</summary>
      <returns>The increment value.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ForLoopRule.Initialize(System.Object,Microsoft.VisualStudio.TestTools.WebTesting.ConditionalEventArgs)">
      <summary>Initializes a <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.ConditionalEventArgs" />.</summary>
      <param name="sender">The sender of the event.</param>
      <param name="e">The <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.ConditionalEventArgs" /> that contains the event data.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ForLoopRule.InitialValue">
      <summary>Gets or sets the initial value.</summary>
      <returns>The initial value.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ForLoopRule.StringRepresentation">
      <summary>Converts the rule to a string to be displayed in the tree.</summary>
      <returns>A string representation of the rule.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ForLoopRule.TerminatingValue">
      <summary>Gets or sets the terminating value.</summary>
      <returns>The terminating value.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.Rules.IsContextParameterNameAttribute">
      <summary>Attribute to specify that a property represents a context parameter name.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.Rules.IsContextParameterNameAttribute.#ctor(System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.Rules.IsContextParameterNameAttribute" /> class with the specified value to indicate if the property is an added context parameter name.</summary>
      <param name="isAddedContextParameter">true to declare the property is a context parameter name; otherwise, false.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.Rules.IsContextParameterNameAttribute.IsAddedContextParameter">
      <summary>Gets a Boolean value which indicates that the property is an added context parameter name.</summary>
      <returns>true if the property is an added context parameter name; otherwise, false.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.Rules.LastRequestOutcomeRule">
      <summary>Class to contain a conditional rule that is compares the outcome of the last request. Applies only to condition statements.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.Rules.LastRequestOutcomeRule.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.Rules.LastRequestOutcomeRule" /> class.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.Rules.LastRequestOutcomeRule.CheckCondition(System.Object,Microsoft.VisualStudio.TestTools.WebTesting.ConditionalEventArgs)">
      <summary>Determines whether the condition was met or not. The condition is met if the outcome of the previous request matches the provided outcome.</summary>
      <param name="sender">The sender of the event.</param>
      <param name="e">The <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.ConditionalEventArgs" /> that contains the event data.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.Rules.LastRequestOutcomeRule.RequestOutcome"></member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.Rules.LastRequestOutcomeRule.StringRepresentation">
      <summary>Converts the rule to a string to be displayed in the tree.</summary>
      <returns>A string representation of the rule.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.Rules.LastResponseCodeRule">
      <summary>Class to contain a conditional rule that checks the response code of the last response. Applies only to condition statements.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.Rules.LastResponseCodeRule.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.Rules.LastResponseCodeRule" /> class.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.Rules.LastResponseCodeRule.CheckCondition(System.Object,Microsoft.VisualStudio.TestTools.WebTesting.ConditionalEventArgs)">
      <summary>Determines whether the condition was met or not. The condition is met if the status code of the previous response matches the provided status code.</summary>
      <param name="sender">The sender of the event.</param>
      <param name="e">The <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.ConditionalEventArgs" /> that contains the event data.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.Rules.LastResponseCodeRule.ComparisonOperator">
      <summary>Gets or sets the comparison operator.</summary>
      <returns>The comparison operator.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.Rules.LastResponseCodeRule.ResponseCode">
      <summary>Gets or sets the response code.</summary>
      <returns>The response code.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.Rules.LastResponseCodeRule.StringRepresentation">
      <summary>Converts the rule to a string to be displayed in the tree.</summary>
      <returns>A string representation of the rule.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.Rules.NumericalComparisonRule">
      <summary>Class to contain a conditional rule that consists of a numeric comparison.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.Rules.NumericalComparisonRule.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.Rules.NumericalComparisonRule" /> class.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.Rules.NumericalComparisonRule.CheckCondition(System.Object,Microsoft.VisualStudio.TestTools.WebTesting.ConditionalEventArgs)">
      <summary>Determines whether the condition was met or not. The condition is met if the content of the context parameter passes the comparison.</summary>
      <param name="sender">The sender of the event.</param>
      <param name="e">The <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.ConditionalEventArgs" /> that contains the event data.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.Rules.NumericalComparisonRule.ComparisonOperator">
      <summary>Gets or sets the comparison operator.</summary>
      <returns>The comparison operator.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.Rules.NumericalComparisonRule.ContextParameterName">
      <summary>Gets or sets the context parameter name.</summary>
      <returns>The context parameter name.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.Rules.NumericalComparisonRule.StringRepresentation">
      <summary>Converts the rule to a string to be displayed in the tree.</summary>
      <returns>A string representation of the rule.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.Rules.NumericalComparisonRule.Value">
      <summary>Gets or sets the value.</summary>
      <returns>The value.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ProbabilityRule">
      <summary>Class to contain a conditional rule which is based on the provided probability.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ProbabilityRule.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ProbabilityRule" /> class.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ProbabilityRule.CheckCondition(System.Object,Microsoft.VisualStudio.TestTools.WebTesting.ConditionalEventArgs)">
      <summary>Determines whether the condition was met or not.</summary>
      <param name="sender">The sender of the event.</param>
      <param name="e">The <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.ConditionalEventArgs" /> that contains the event data.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ProbabilityRule.ContextParameterName">
      <summary>Gets or sets the context parameter name.</summary>
      <returns>The context parameter name.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ProbabilityRule.Percentage">
      <summary>Gets or sets the probability percentage.</summary>
      <returns>The probability percentage.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ProbabilityRule.StringRepresentation">
      <summary>Converts the rule to a string to be displayed in the tree.</summary>
      <returns>A string representation of the rule.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.Rules.RuleExecutionOrderAttribute">
      <summary>Attribute to specify when a rule should be executed relative to the dependent requests of this rule.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.Rules.RuleExecutionOrderAttribute.#ctor(Microsoft.VisualStudio.TestTools.WebTesting.RuleExecutionOrder)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.Rules.RuleExecutionOrderAttribute" /> class with the specified value to indicate the rule execution order.</summary>
      <param name="executionOrder">The execution order for the rule.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.Rules.RuleExecutionOrderAttribute.ExecutionOrder">
      <summary>Gets the execution order for the current rule.</summary>
      <returns>The execution order for the current rule.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.Rules.RuleResult"></member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.Rules.RuleResult.Exception">
      <summary>Gets or sets the exception.</summary>
      <returns>The exception.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.Rules.RuleResult.Message">
      <summary>Gets or sets the message.</summary>
      <returns>The message.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.Rules.RuleResult.Name">
      <summary>Gets or sets the name.</summary>
      <returns>The name.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.Rules.RuleResult.RuleProperties">
      <summary>Gets or sets the collection of rule properties.</summary>
      <returns>The collection of rule properties.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.Rules.RuleResult.RuleType">
      <summary>Gets or sets the rule type.</summary>
      <returns>The rule type.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.Rules.RuleResult.Success">
      <summary>Gets or sets a Boolean value which indicates the success of the rule.</summary>
      <returns>true if the rule result was successful; otherwise, false.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.Rules.StringComparisonRule">
      <summary>Class to contain a conditional rule that consists of a string comparison.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.Rules.StringComparisonRule.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.Rules.StringComparisonRule" /> class.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.Rules.StringComparisonRule.CheckCondition(System.Object,Microsoft.VisualStudio.TestTools.WebTesting.ConditionalEventArgs)">
      <summary>Determines whether the condition was met or not.</summary>
      <param name="sender">The sender of the event.</param>
      <param name="e">The <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.ConditionalEventArgs" /> that contains the event data.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.Rules.StringComparisonRule.ComparisonOperator">
      <summary>Gets or sets the comparison operator.</summary>
      <returns>The comparison operator.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.Rules.StringComparisonRule.ContextParameterName">
      <summary>Gets or sets the context parameter name.</summary>
      <returns>The context parameter name.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.Rules.StringComparisonRule.IgnoreCase">
      <summary>Gets or sets a Boolean value to indicate whether to ignore case.</summary>
      <returns>true to ignore case; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.Rules.StringComparisonRule.StringRepresentation">
      <summary>Converts the rule to a string to be displayed in the tree.</summary>
      <returns>A string representation of the rule.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.Rules.StringComparisonRule.UseRegularExpression">
      <summary>Gets or sets a Boolean value to indicate whether to use regular expressions.</summary>
      <returns>true to use regular expressions; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.Rules.StringComparisonRule.Value">
      <summary>Gets or sets the value.</summary>
      <returns>The value.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ValidateFormField">
      <summary>Validates the name and value of a form field attribute.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ValidateFormField.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ValidateFormField" /> class.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ValidateFormField.ExpectedValue">
      <summary>Gets or sets the expected value of the form field.</summary>
      <returns>The expected value of the form field.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ValidateFormField.Name">
      <summary>Gets or sets the name of the field whose value is to be validated.</summary>
      <returns>The name of the field to be validated.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ValidateFormField.Validate(System.Object,Microsoft.VisualStudio.TestTools.WebTesting.ValidationEventArgs)">
      <summary>Validates the existence of a form field that contains a specific value.</summary>
      <param name="sender">The object raising the event.</param>
      <param name="e">A <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.ValidationEventArgs" /> object.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ValidateHtmlSelectTag"></member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ValidateHtmlSelectTag.#ctor"></member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ValidateHtmlSelectTag.ExpectedSelectedOption"></member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ValidateHtmlSelectTag.IgnoreCase"></member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ValidateHtmlSelectTag.Index"></member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ValidateHtmlSelectTag.SelectTagName"></member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ValidateHtmlSelectTag.Validate(System.Object,Microsoft.VisualStudio.TestTools.WebTesting.ValidationEventArgs)"></member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ValidateHtmlTagInnerText"></member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ValidateHtmlTagInnerText.#ctor"></member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ValidateHtmlTagInnerText.AttributeName"></member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ValidateHtmlTagInnerText.AttributeValue"></member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ValidateHtmlTagInnerText.CollapseWhiteSpace"></member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ValidateHtmlTagInnerText.ExpectedInnerText"></member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ValidateHtmlTagInnerText.HasClosingTags"></member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ValidateHtmlTagInnerText.IgnoreCase"></member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ValidateHtmlTagInnerText.Index"></member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ValidateHtmlTagInnerText.RemoveInnerTags"></member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ValidateHtmlTagInnerText.TagName"></member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ValidateHtmlTagInnerText.Validate(System.Object,Microsoft.VisualStudio.TestTools.WebTesting.ValidationEventArgs)"></member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ValidateResponseUrl">
      <summary>A validation rule validates that a redirect occurs during the run of the Web test if and only if the redirect was expected.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ValidateResponseUrl.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ValidateResponseUrl" /> class.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ValidateResponseUrl.Validate(System.Object,Microsoft.VisualStudio.TestTools.WebTesting.ValidationEventArgs)">
      <summary>Validate is called with the test case context and transaction context. These allow the rule to examine both the request and the response and make sure that the data matches the required values.</summary>
      <param name="sender">The source of the event.</param>
      <param name="e">A <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.ValidationEventArgs" /> that contains the event data.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ValidationRuleFindText">
      <summary>Validates that the specified text exists or does not exist in the text response.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ValidationRuleFindText.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ValidationRuleFindText" /> class.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ValidationRuleFindText.FindText">
      <summary>Gets or sets the string which is searched for in the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.WebTestResponse" />.</summary>
      <returns>The search string.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ValidationRuleFindText.IgnoreCase">
      <summary>Gets or sets a value indicating whether the match is case-sensitive.</summary>
      <returns>true if matching is case-insensitive; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ValidationRuleFindText.PassIfTextFound">
      <summary>Gets or sets a value that indicates whether to pass or fail the test if it is found or not.</summary>
      <returns>true if the test passes when the text is found; otherwise, false if the test passes when the text is not found. The default is true.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ValidationRuleFindText.UseRegularExpression">
      <summary>Gets or sets a value that indicates whether <see cref="P:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ValidationRuleFindText.FindText" /> is a regular expression.</summary>
      <returns>true if the search string is a regular expression; otherwise, false. The default value is false.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ValidationRuleFindText.Validate(System.Object,Microsoft.VisualStudio.TestTools.WebTesting.ValidationEventArgs)">
      <summary>Validates the existence of a string that is defined by <see cref="P:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ValidationRuleFindText.FindText" /> in the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.HtmlDocument" />.</summary>
      <param name="sender">The source of the event.</param>
      <param name="e">A <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.ValidationEventArgs" /> that contains the event data.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ValidationRuleRequestTime">
      <summary>Validates that the response for a request is returned within the specified period of time.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ValidationRuleRequestTime.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ValidationRuleRequestTime" /> class.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ValidationRuleRequestTime.MaxRequestTime">
      <summary>Gets or sets the maximum time the request is allowed to run.</summary>
      <returns>The maximum time the request is allowed to run. This is measured in milliseconds.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ValidationRuleRequestTime.Validate(System.Object,Microsoft.VisualStudio.TestTools.WebTesting.ValidationEventArgs)">
      <summary>Validates that the request time did not exceed the <see cref="P:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ValidationRuleRequestTime.MaxRequestTime" /> property.</summary>
      <param name="sender">The source of the event.</param>
      <param name="e">A <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.ValidationEventArgs" /> that contains the event data.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ValidationRuleRequiredAttributeValue">
      <summary>Validates that the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.HtmlDocument" /> provided by the response contains a tag that includes an attribute that has a specified value.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ValidationRuleRequiredAttributeValue.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ValidationRuleRequiredAttributeValue" /> class.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ValidationRuleRequiredAttributeValue.AttributeName">
      <summary>Gets or sets the name of the attribute to be validated.</summary>
      <returns>The name of the attribute to be validated.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ValidationRuleRequiredAttributeValue.ExpectedValue">
      <summary>Gets or sets the expected value of the attribute.</summary>
      <returns>The expected value of the attribute.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ValidationRuleRequiredAttributeValue.IgnoreCase">
      <summary>Gets or sets a value that indicates whether a case-insensitive comparison is performed.</summary>
      <returns>true if a case-insensitive comparison is performed; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ValidationRuleRequiredAttributeValue.Index"></member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ValidationRuleRequiredAttributeValue.MatchAttributeName">
      <summary>Gets or sets an additional attribute name that must be found in the HTML tag containing the attribute value to validate. Used in conjunction with <see cref="P:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ValidationRuleRequiredAttributeValue.MatchAttributeValue" />.</summary>
      <returns>An attribute name.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ValidationRuleRequiredAttributeValue.MatchAttributeValue">
      <summary>Gets or sets the value of an additional attribute that must be found in the HTML tag containing the attribute value to validate. Used in conjunction with <see cref="P:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ValidationRuleRequiredAttributeValue.MatchAttributeName" />.</summary>
      <returns>An attribute value.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ValidationRuleRequiredAttributeValue.TagName">
      <summary>Gets or sets the HTML tag that contains the attribute to be validated.</summary>
      <returns>The HTML tag that contains the attribute to be validated.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ValidationRuleRequiredAttributeValue.Validate(System.Object,Microsoft.VisualStudio.TestTools.WebTesting.ValidationEventArgs)">
      <summary>Validates the existence of an attribute value in a response.</summary>
      <param name="sender">The source of the event.</param>
      <param name="e">A <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.ValidationEventArgs" /> that contains the event data.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ValidationRuleRequiredTag">
      <summary>Validates the existence of a specified tag in the response.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ValidationRuleRequiredTag.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ValidationRuleRequiredTag" /> class.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ValidationRuleRequiredTag.MinOccurrences">
      <summary>Gets or sets the minimum number of times the HTML tag must exist in the HTML document for the validation rule to succeed.</summary>
      <returns>The minimum number of times the HTML tag must exist in the HTML document.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ValidationRuleRequiredTag.RequiredTagName">
      <summary>Gets or sets the name of the HTML tag that must exist in the HTML document for the validation rule to succeed.</summary>
      <returns>The name of the HTML tag that must exist in the HTML document.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ValidationRuleRequiredTag.Validate(System.Object,Microsoft.VisualStudio.TestTools.WebTesting.ValidationEventArgs)">
      <summary>Validates the existence and number of occurrences of an HTML tag in the response.</summary>
      <param name="sender">The source of the event.</param>
      <param name="e">A <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.ValidationEventArgs" /> that contains the event data. </param>
    </member>
    <member name="T:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ValidationRuleResponseTimeGoal">
      <summary>Used to check that the response time for a request is less than or equal to the response time goal specified in the request properties.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ValidationRuleResponseTimeGoal.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ValidationRuleResponseTimeGoal" /> class.</summary>
    </member>
    <member name="P:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ValidationRuleResponseTimeGoal.Tolerance">
      <summary>Gets or sets the tolerance for response times that are beyond their goal times.</summary>
      <returns>The tolerance value.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.TestTools.WebTesting.Rules.ValidationRuleResponseTimeGoal.Validate(System.Object,Microsoft.VisualStudio.TestTools.WebTesting.ValidationEventArgs)">
      <summary>Called with the test case context and the request context for the rule to examine both the request and the response to make sure that the data matches the specified values.</summary>
      <param name="sender">The sender of the event.</param>
      <param name="e">The <see cref="T:Microsoft.VisualStudio.TestTools.WebTesting.ConditionalEventArgs" /> that contains the event data.</param>
    </member>
  </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\VisualStudio\VS10RTM\VisualStudioIntegration\Common\Assemblies\v2.0\Microsoft.VisualStudio.ManagedInterfaces.WCF.xml ===
ï»¿<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>Microsoft.VisualStudio.ManagedInterfaces.WCF</name>
  </assembly>
  <members>
    <member name="T:Microsoft.VisualStudio.ManagedInterfaces9.IVsApplicationConfiguration">
      <summary>Provides an interface for use when working with configuration files.</summary>
    </member>
    <member name="E:Microsoft.VisualStudio.ManagedInterfaces9.IVsApplicationConfiguration.ConfigurationChanged">
      <summary>Occurs when a project's configuration has changed.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.ManagedInterfaces9.IVsApplicationConfiguration.FileExists">
      <summary>Returns a value indicating whether a configuration file exists on disk.</summary>
      <returns>true if the file exists; otherwise false.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.ManagedInterfaces9.IVsApplicationConfiguration.FilePath">
      <summary>Returns the path for a configuration file.</summary>
      <returns>A string that contains the full path for the configuration file.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.ManagedInterfaces9.IVsApplicationConfiguration.LoadConfiguration">
      <summary>Loads the configuration for a given hierarchy/itemid.</summary>
      <returns>A <see cref="T:System.Configuration.Configuration" /> object.</returns>
      <exception cref="T:System.Configuration.ConfigurationException">The configuration hierarchy is not in a loadable state.</exception>
    </member>
    <member name="M:Microsoft.VisualStudio.ManagedInterfaces9.IVsApplicationConfiguration.QueryEditConfiguration">
      <summary>Determines if a configuration file can be modified.</summary>
      <returns>true if the configuration file can be modified; otherwise false.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.ManagedInterfaces9.IVsApplicationConfigurationManager">
      <summary>Provides access to <see cref="T:Microsoft.VisualStudio.ManagedInterfaces9.IVsApplicationConfiguration" /> instances that correspond to the configuration hierarchy at a given level in a project.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.ManagedInterfaces9.IVsApplicationConfigurationManager.GetApplicationConfiguration(Microsoft.VisualStudio.Shell.Interop.IVsHierarchy,System.UInt32)">
      <summary>Returns an <see cref="T:Microsoft.VisualStudio.ManagedInterfaces9.IVsApplicationConfiguration" /> object that corresponds to the <see cref="T:System.Configuration.Configuration" /> object for a project at the level indicated by the <paramref name="hierarchy" /> and <paramref name="itemId" /> parameters.</summary>
      <returns>An <see cref="T:Microsoft.VisualStudio.ManagedInterfaces9.IVsApplicationConfiguration" /> object.</returns>
      <param name="hierarchy">The <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsHierarchy" /> of the project.</param>
      <param name="itemId">The constant <see cref="F:Microsoft.VisualStudio.VSConstants.VSITEMID_ROOT" /> which represents the root node of the project hierarchy.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.ManagedInterfaces9.IVsWCFReferenceGroupDetails">
      <summary>Provides access to configuration and code generation information for a Windows Communication Foundation (WCF) service reference returned from the Add Service Reference dialog box.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.ManagedInterfaces9.IVsWCFReferenceGroupDetails.GetGeneratedCode">
      <summary>Returns the <see cref="T:System.CodeDom.CodeCompileUnit" /> that contains code generated for a Windows Communication Foundation (WCF) service reference.</summary>
      <returns>A <see cref="T:System.CodeDom.CodeCompileUnit" /> that contains the code.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.ManagedInterfaces9.IVsWCFReferenceGroupDetails.GetGeneratedContractType(System.String,System.String)">
      <summary>Returns the name of a contract type in a Windows Communication Foundation (WCF) service reference.</summary>
      <returns>A <see cref="T:System.String" /> that contains the name of the contract type.</returns>
      <param name="name">A <see cref="T:System.String" /> that contains the name of a <see cref="T:System.Web.Services.Description.PortType" /> in a .wsdl file.</param>
      <param name="namespaceUrl">A <see cref="T:System.String" /> that contains the <see cref="P:System.Web.Services.Description.ServiceDescription.TargetNamespace" /> of the .wsdl file that conatins the definition of <paramref name="name" />..</param>
    </member>
    <member name="M:Microsoft.VisualStudio.ManagedInterfaces9.IVsWCFReferenceGroupDetails.GetGeneratedEndpointNameInConfiguration(System.ServiceModel.Description.ServiceEndpoint)">
      <summary>Returns the name of an endpoint configuration generated by <see cref="T:System.ServiceModel.Description.ServiceEndpoint" />.</summary>
      <returns>A <see cref="T:System.String" /> that contains the name of the endpoint configuration.</returns>
      <param name="endpoint">A <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> returned by the <see cref="M:Microsoft.VisualStudio.ManagedInterfaces9.IVsWCFReferenceGroupDetails.GetServiceEndpoints" /> method.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.ManagedInterfaces9.IVsWCFReferenceGroupDetails.GetServiceEndpoints">
      <summary>Returns an <see cref="T:System.Collections.IEnumerable" /> collection that contains the endpoints for a Windows Communication Foundation (WCF) service reference.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerable" /> collection that contains all the endpoints for a given WCF service reference.</returns>
    </member>
  </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\VisualStudio\VS10RTM\VisualStudioIntegration\Common\Assemblies\v2.0\Microsoft.VisualStudio.ProjectAggregator.xml ===
ï»¿<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>Microsoft.VisualStudio.ProjectAggregator</name>
  </assembly>
  <members>
    <member name="T:Microsoft.VisualStudio.ProjectAggregator.CProjectAggregator"></member>
    <member name="T:Microsoft.VisualStudio.ProjectAggregator.CProjectAggregatorClass"></member>
    <member name="M:Microsoft.VisualStudio.ProjectAggregator.CProjectAggregatorClass.#ctor"></member>
    <member name="M:Microsoft.VisualStudio.ProjectAggregator.CProjectAggregatorClass.SetInner(System.Object)">
      <param name="punkInner"></param>
    </member>
    <member name="T:Microsoft.VisualStudio.ProjectAggregator.IVSProjectAggregator"></member>
    <member name="M:Microsoft.VisualStudio.ProjectAggregator.IVSProjectAggregator.SetInner(System.Object)">
      <param name="punkInner"></param>
    </member>
  </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\VisualStudio\VS10RTM\VisualStudioIntegration\Common\Assemblies\v2.0\Microsoft.VisualStudio.Debugger.InteropA.xml ===
ï»¿<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>Microsoft.VisualStudio.Debugger.InteropA</name>
  </assembly>
  <members>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.AD_PROCESS_ID"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.AD_PROCESS_ID.dwProcessId"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.AD_PROCESS_ID.dwUnused"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.AD_PROCESS_ID.guidProcessId"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.AD_PROCESS_ID.ProcessIdType"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.BP_CONDITION"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.BP_CONDITION.bstrCondition"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.BP_CONDITION.bstrContext"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.BP_CONDITION.nRadix"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.BP_CONDITION.pThread"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.BP_CONDITION.styleCondition"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.BP_ERROR_RESOLUTION_INFO"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.BP_ERROR_RESOLUTION_INFO.bpResLocation"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.BP_ERROR_RESOLUTION_INFO.bstrMessage"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.BP_ERROR_RESOLUTION_INFO.dwFields"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.BP_ERROR_RESOLUTION_INFO.dwType"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.BP_ERROR_RESOLUTION_INFO.pProgram"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.BP_ERROR_RESOLUTION_INFO.pThread"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.BP_LOCATION"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.BP_LOCATION.bpLocationType"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.BP_LOCATION.unionmember1"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.BP_LOCATION.unionmember2"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.BP_LOCATION.unionmember3"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.BP_LOCATION.unionmember4"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.BP_LOCATION_CODE_ADDRESS"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.BP_LOCATION_CODE_ADDRESS.bstrAddress"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.BP_LOCATION_CODE_ADDRESS.bstrContext"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.BP_LOCATION_CODE_ADDRESS.bstrFunction"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.BP_LOCATION_CODE_ADDRESS.bstrModuleUrl"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.BP_LOCATION_CODE_CONTEXT"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.BP_LOCATION_CODE_CONTEXT.pCodeContext"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.BP_LOCATION_CODE_FILE_LINE"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.BP_LOCATION_CODE_FILE_LINE.bstrContext"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.BP_LOCATION_CODE_FILE_LINE.pDocPos"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.BP_LOCATION_CODE_FUNC_OFFSET"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.BP_LOCATION_CODE_FUNC_OFFSET.bstrContext"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.BP_LOCATION_CODE_FUNC_OFFSET.pFuncPos"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.BP_LOCATION_CODE_STRING"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.BP_LOCATION_CODE_STRING.bstrCodeExpr"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.BP_LOCATION_CODE_STRING.bstrContext"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.BP_LOCATION_DATA_STRING"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.BP_LOCATION_DATA_STRING.bstrContext"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.BP_LOCATION_DATA_STRING.bstrDataExpr"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.BP_LOCATION_DATA_STRING.dwNumElements"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.BP_LOCATION_DATA_STRING.pThread"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.BP_LOCATION_RESOLUTION"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.BP_LOCATION_RESOLUTION.pResolution"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.BP_PASSCOUNT"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.BP_PASSCOUNT.dwPassCount"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.BP_PASSCOUNT.stylePassCount"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.BP_REQUEST_INFO"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.BP_REQUEST_INFO.bpCondition"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.BP_REQUEST_INFO.bpLocation"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.BP_REQUEST_INFO.bpPassCount"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.BP_REQUEST_INFO.bstrProgramName"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.BP_REQUEST_INFO.bstrThreadName"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.BP_REQUEST_INFO.dwFields"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.BP_REQUEST_INFO.dwFlags"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.BP_REQUEST_INFO.guidLanguage"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.BP_REQUEST_INFO.pProgram"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.BP_REQUEST_INFO.pThread"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.BP_REQUEST_INFO2"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.BP_REQUEST_INFO2.bpCondition"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.BP_REQUEST_INFO2.bpLocation"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.BP_REQUEST_INFO2.bpPassCount"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.BP_REQUEST_INFO2.bstrConstraint"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.BP_REQUEST_INFO2.bstrProgramName"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.BP_REQUEST_INFO2.bstrThreadName"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.BP_REQUEST_INFO2.bstrTracepoint"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.BP_REQUEST_INFO2.dwFields"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.BP_REQUEST_INFO2.dwFlags"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.BP_REQUEST_INFO2.guidLanguage"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.BP_REQUEST_INFO2.guidVendor"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.BP_REQUEST_INFO2.pProgram"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.BP_REQUEST_INFO2.pThread"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.BP_RESOLUTION_CODE"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.BP_RESOLUTION_CODE.pCodeContext"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.BP_RESOLUTION_DATA"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.BP_RESOLUTION_DATA.bstrDataExpr"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.BP_RESOLUTION_DATA.bstrFunc"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.BP_RESOLUTION_DATA.bstrImage"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.BP_RESOLUTION_DATA.dwFlags"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.BP_RESOLUTION_INFO"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.BP_RESOLUTION_INFO.bpResLocation"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.BP_RESOLUTION_INFO.dwFields"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.BP_RESOLUTION_INFO.pProgram"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.BP_RESOLUTION_INFO.pThread"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.BP_RESOLUTION_LOCATION"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.BP_RESOLUTION_LOCATION.bpType"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.BP_RESOLUTION_LOCATION.unionmember1"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.BP_RESOLUTION_LOCATION.unionmember2"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.BP_RESOLUTION_LOCATION.unionmember3"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.BP_RESOLUTION_LOCATION.unionmember4"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.BSTR_ARRAY"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.BSTR_ARRAY.dwCount"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.BSTR_ARRAY.Members"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.BUILT_TYPE"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.BUILT_TYPE.guidModule"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.BUILT_TYPE.pUnderlyingField"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.BUILT_TYPE.ulAppDomainID"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.CHECKSUM_DATA"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.CHECKSUM_DATA.ByteCount"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.CHECKSUM_DATA.pBytes"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.CODE_PATH"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.CODE_PATH.bstrName"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.CODE_PATH.pCode"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.COMPUTER_INFO"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.COMPUTER_INFO.dwOperatingSystemVersion"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.COMPUTER_INFO.wProcessorArchitecture"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.COMPUTER_INFO.wSuiteMask"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.CONNECT_REASON"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.CONNECT_REASON.CONNECT_LOCAL">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.CONNECT_REASON.CONNECT_ATTACH">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.CONNECT_REASON.CONNECT_LAUNCH">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.CONNECT_REASON.CONNECT_WEB_AUTO_ATTACH">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.CONNECT_REASON.CONNECT_SQL_AUTO_ATTACH">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.CONNECT_REASON.CONNECT_CAUSALITY">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.CONNECT_REASON.CONNECT_DIAGNOSE_WEB_ERROR">
      <summary />
    </member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.CONNECTION_PROTOCOL"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.CONNECTION_PROTOCOL.CONNECTION_NONE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.CONNECTION_PROTOCOL.CONNECTION_UNKNOWN">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.CONNECTION_PROTOCOL.CONNECTION_LOCAL">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.CONNECTION_PROTOCOL.CONNECTION_PIPE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.CONNECTION_PROTOCOL.CONNECTION_TCPIP">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.CONNECTION_PROTOCOL.CONNECTION_HTTP">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.CONNECTION_PROTOCOL.CONNECTION_OTHER">
      <summary />
    </member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.CONST_GUID_ARRAY"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.CONST_GUID_ARRAY.dwCount"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.CONST_GUID_ARRAY.Members"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.CONSTRUCTOR_ENUM"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.CONSTRUCTOR_ENUM.crAll">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.CONSTRUCTOR_ENUM.crNonStatic">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.CONSTRUCTOR_ENUM.crStatic">
      <summary />
    </member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.ConstructorMatchOptions"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.ConstructorMatchOptions.crAll">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.ConstructorMatchOptions.crNonStatic">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.ConstructorMatchOptions.crStatic">
      <summary />
    </member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.CONTEXT_INFO"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.CONTEXT_INFO.bstrAddress"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.CONTEXT_INFO.bstrAddressAbsolute"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.CONTEXT_INFO.bstrAddressOffset"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.CONTEXT_INFO.bstrFunction"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.CONTEXT_INFO.bstrModuleUrl"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.CONTEXT_INFO.dwFields"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.CONTEXT_INFO.posFunctionOffset"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.CRASHING_PROGRAM_INFO"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.CRASHING_PROGRAM_INFO.dwProcessId"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.CRASHING_PROGRAM_INFO.guidEngine"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.CRASHING_PROGRAM_INFO.JitFlags"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.CRASHING_PROGRAM_INFO.programId"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.CRASHING_PROGRAM_INFO.pSetEventCallback"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.CRASHING_PROGRAM_INFO.szExceptionText"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.DEBUG_ADDRESS"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.DEBUG_ADDRESS.addr"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.DEBUG_ADDRESS.guidModule"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.DEBUG_ADDRESS.tokClass"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.DEBUG_ADDRESS.ulAppDomainID"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.DEBUG_ADDRESS_UNION"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.DEBUG_ADDRESS_UNION.dwKind"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.DEBUG_ADDRESS_UNION.unionmember"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.DEBUG_CUSTOM_VIEWER"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.DEBUG_CUSTOM_VIEWER.bstrDescription"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.DEBUG_CUSTOM_VIEWER.bstrMenuName"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.DEBUG_CUSTOM_VIEWER.bstrMetric"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.DEBUG_CUSTOM_VIEWER.dwID"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.DEBUG_CUSTOM_VIEWER.guidLang"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.DEBUG_CUSTOM_VIEWER.guidVendor"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.DEBUG_PROPERTY_INFO"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.DEBUG_PROPERTY_INFO.bstrFullName"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.DEBUG_PROPERTY_INFO.bstrName"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.DEBUG_PROPERTY_INFO.bstrType"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.DEBUG_PROPERTY_INFO.bstrValue"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.DEBUG_PROPERTY_INFO.dwAttrib"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.DEBUG_PROPERTY_INFO.dwFields"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.DEBUG_PROPERTY_INFO.pProperty"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.DEBUG_REFERENCE_INFO"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.DEBUG_REFERENCE_INFO.bstrName"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.DEBUG_REFERENCE_INFO.bstrType"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.DEBUG_REFERENCE_INFO.bstrValue"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.DEBUG_REFERENCE_INFO.dwAttrib"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.DEBUG_REFERENCE_INFO.dwFields"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.DEBUG_REFERENCE_INFO.dwRefType"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.DEBUG_REFERENCE_INFO.pReference"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.DisassemblyData"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.DisassemblyData.bstrAddress"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.DisassemblyData.bstrAddressOffset"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.DisassemblyData.bstrCodeBytes"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.DisassemblyData.bstrDocumentUrl"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.DisassemblyData.bstrOpcode"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.DisassemblyData.bstrOperands"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.DisassemblyData.bstrSymbol"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.DisassemblyData.dwByteOffset"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.DisassemblyData.dwFields"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.DisassemblyData.dwFlags"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.DisassemblyData.posBeg"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.DisassemblyData.posEnd"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.DisassemblyData.uCodeLocationId"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.EncUnavailableReason"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.EncUnavailableReason.ENCUN_NONE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.EncUnavailableReason.ENCUN_INTEROP">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.EncUnavailableReason.ENCUN_SQLCLR">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.EncUnavailableReason.ENCUN_MINIDUMP">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.EncUnavailableReason.ENCUN_EMBEDDED">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.EncUnavailableReason.ENCUN_ATTACH">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.EncUnavailableReason.ENCUN_WIN64">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.EncUnavailableReason.ENCUN_STOPONEMODE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.EncUnavailableReason.ENCUN_MODULENOTLOADED">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.EncUnavailableReason.ENCUN_MODULERELOADED">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.EncUnavailableReason.ENCUN_INRUNMODE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.EncUnavailableReason.ENCUN_NOTBUILT">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.EncUnavailableReason.ENCUN_REMOTE">
      <summary />
    </member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.enum_AD_PROCESS_ID"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_AD_PROCESS_ID.AD_PROCESS_ID_SYSTEM">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_AD_PROCESS_ID.AD_PROCESS_ID_GUID">
      <summary />
    </member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.enum_ADDRESS_KIND"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_ADDRESS_KIND.ADDRESS_KIND_NATIVE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_ADDRESS_KIND.ADDRESS_KIND_UNMANAGED_THIS_RELATIVE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_ADDRESS_KIND.ADDRESS_KIND_UNMANAGED_PHYSICAL">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_ADDRESS_KIND.ADDRESS_KIND_METADATA_METHOD">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_ADDRESS_KIND.ADDRESS_KIND_METADATA_FIELD">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_ADDRESS_KIND.ADDRESS_KIND_METADATA_LOCAL">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_ADDRESS_KIND.ADDRESS_KIND_METADATA_PARAM">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_ADDRESS_KIND.ADDRESS_KIND_METADATA_ARRAYELEM">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_ADDRESS_KIND.ADDRESS_KIND_METADATA_RETVAL">
      <summary />
    </member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.enum_ASSEMBLYFLAGS"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_ASSEMBLYFLAGS.ASMF_USERDIR">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_ASSEMBLYFLAGS.ASMF_SHAREDDIR">
      <summary />
    </member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.enum_ASSEMBLYLOCRESOLUTION"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_ASSEMBLYLOCRESOLUTION.ALR_NAME">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_ASSEMBLYLOCRESOLUTION.ALR_USERDIR">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_ASSEMBLYLOCRESOLUTION.ALR_SHAREDDIR">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_ASSEMBLYLOCRESOLUTION.ALR_REMOTEDIR">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_ASSEMBLYLOCRESOLUTION.ALR_ERROR">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_ASSEMBLYLOCRESOLUTION.ALR_BYTES">
      <summary />
    </member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.enum_ATTACH_REASON"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_ATTACH_REASON.ATTACH_REASON_LAUNCH">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_ATTACH_REASON.ATTACH_REASON_USER">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_ATTACH_REASON.ATTACH_REASON_AUTO">
      <summary />
    </member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.enum_BP_COND_STYLE"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_BP_COND_STYLE.BP_COND_NONE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_BP_COND_STYLE.BP_COND_WHEN_TRUE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_BP_COND_STYLE.BP_COND_WHEN_CHANGED">
      <summary />
    </member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.enum_BP_ERROR_TYPE"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_BP_ERROR_TYPE.BPET_NONE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_BP_ERROR_TYPE.BPET_TYPE_WARNING">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_BP_ERROR_TYPE.BPET_TYPE_ERROR">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_BP_ERROR_TYPE.BPET_SEV_HIGH">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_BP_ERROR_TYPE.BPET_SEV_GENERAL">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_BP_ERROR_TYPE.BPET_SEV_LOW">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_BP_ERROR_TYPE.BPET_TYPE_MASK">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_BP_ERROR_TYPE.BPET_SEV_MASK">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_BP_ERROR_TYPE.BPET_GENERAL_WARNING">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_BP_ERROR_TYPE.BPET_GENERAL_ERROR">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_BP_ERROR_TYPE.BPET_ALL">
      <summary />
    </member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.enum_BP_FLAGS"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_BP_FLAGS.BP_FLAG_NONE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_BP_FLAGS.BP_FLAG_MAP_DOCPOSITION">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_BP_FLAGS.BP_FLAG_DONT_STOP">
      <summary />
    </member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.enum_BP_LOCATION_TYPE"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_BP_LOCATION_TYPE.BPLT_NONE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_BP_LOCATION_TYPE.BPLT_FILE_LINE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_BP_LOCATION_TYPE.BPLT_FUNC_OFFSET">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_BP_LOCATION_TYPE.BPLT_CONTEXT">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_BP_LOCATION_TYPE.BPLT_STRING">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_BP_LOCATION_TYPE.BPLT_ADDRESS">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_BP_LOCATION_TYPE.BPLT_RESOLUTION">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_BP_LOCATION_TYPE.BPLT_CODE_FILE_LINE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_BP_LOCATION_TYPE.BPLT_CODE_FUNC_OFFSET">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_BP_LOCATION_TYPE.BPLT_CODE_CONTEXT">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_BP_LOCATION_TYPE.BPLT_CODE_STRING">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_BP_LOCATION_TYPE.BPLT_CODE_ADDRESS">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_BP_LOCATION_TYPE.BPLT_DATA_STRING">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_BP_LOCATION_TYPE.BPLT_TYPE_MASK">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_BP_LOCATION_TYPE.BPLT_LOCATION_TYPE_MASK">
      <summary />
    </member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.enum_BP_PASSCOUNT_STYLE"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_BP_PASSCOUNT_STYLE.BP_PASSCOUNT_NONE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_BP_PASSCOUNT_STYLE.BP_PASSCOUNT_EQUAL">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_BP_PASSCOUNT_STYLE.BP_PASSCOUNT_EQUAL_OR_GREATER">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_BP_PASSCOUNT_STYLE.BP_PASSCOUNT_MOD">
      <summary />
    </member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.enum_BP_RES_DATA_FLAGS"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_BP_RES_DATA_FLAGS.BP_RES_DATA_EMULATED">
      <summary />
    </member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.enum_BP_STATE"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_BP_STATE.BPS_NONE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_BP_STATE.BPS_DELETED">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_BP_STATE.BPS_DISABLED">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_BP_STATE.BPS_ENABLED">
      <summary />
    </member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.enum_BP_TYPE"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_BP_TYPE.BPT_NONE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_BP_TYPE.BPT_CODE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_BP_TYPE.BPT_DATA">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_BP_TYPE.BPT_SPECIAL">
      <summary />
    </member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.enum_BP_UNBOUND_REASON"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_BP_UNBOUND_REASON.BPUR_UNKNOWN">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_BP_UNBOUND_REASON.BPUR_CODE_UNLOADED">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_BP_UNBOUND_REASON.BPUR_BREAKPOINT_REBIND">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_BP_UNBOUND_REASON.BPUR_BREAKPOINT_ERROR">
      <summary />
    </member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.enum_BPERESI_FIELDS"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_BPERESI_FIELDS.BPERESI_BPRESLOCATION">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_BPERESI_FIELDS.BPERESI_PROGRAM">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_BPERESI_FIELDS.BPERESI_THREAD">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_BPERESI_FIELDS.BPERESI_MESSAGE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_BPERESI_FIELDS.BPERESI_TYPE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_BPERESI_FIELDS.BPERESI_ALLFIELDS">
      <summary />
    </member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.enum_BPREQI_FIELDS"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_BPREQI_FIELDS.BPREQI_BPLOCATION">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_BPREQI_FIELDS.BPREQI_LANGUAGE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_BPREQI_FIELDS.BPREQI_PROGRAM">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_BPREQI_FIELDS.BPREQI_PROGRAMNAME">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_BPREQI_FIELDS.BPREQI_THREAD">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_BPREQI_FIELDS.BPREQI_THREADNAME">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_BPREQI_FIELDS.BPREQI_PASSCOUNT">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_BPREQI_FIELDS.BPREQI_CONDITION">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_BPREQI_FIELDS.BPREQI_FLAGS">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_BPREQI_FIELDS.BPREQI_ALLOLDFIELDS">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_BPREQI_FIELDS.BPREQI_VENDOR">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_BPREQI_FIELDS.BPREQI_CONSTRAINT">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_BPREQI_FIELDS.BPREQI_TRACEPOINT">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_BPREQI_FIELDS.BPREQI_ALLFIELDS">
      <summary />
    </member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.enum_BPRESI_FIELDS"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_BPRESI_FIELDS.BPRESI_BPRESLOCATION">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_BPRESI_FIELDS.BPRESI_PROGRAM">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_BPRESI_FIELDS.BPRESI_THREAD">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_BPRESI_FIELDS.BPRESI_ALLFIELDS">
      <summary />
    </member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.enum_BrowsableKind"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_BrowsableKind.BrowsableKind_None">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_BrowsableKind.BrowsableKind_Collapsed">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_BrowsableKind.BrowsableKind_RootHidden">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_BrowsableKind.BrowsableKind_Never">
      <summary />
    </member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.enum_CANSTOP_REASON"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_CANSTOP_REASON.CANSTOP_ENTRYPOINT">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_CANSTOP_REASON.CANSTOP_STEPIN">
      <summary />
    </member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.enum_CONTEXT_COMPARE"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_CONTEXT_COMPARE.CONTEXT_EQUAL">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_CONTEXT_COMPARE.CONTEXT_LESS_THAN">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_CONTEXT_COMPARE.CONTEXT_GREATER_THAN">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_CONTEXT_COMPARE.CONTEXT_LESS_THAN_OR_EQUAL">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_CONTEXT_COMPARE.CONTEXT_GREATER_THAN_OR_EQUAL">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_CONTEXT_COMPARE.CONTEXT_SAME_SCOPE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_CONTEXT_COMPARE.CONTEXT_SAME_FUNCTION">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_CONTEXT_COMPARE.CONTEXT_SAME_MODULE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_CONTEXT_COMPARE.CONTEXT_SAME_PROCESS">
      <summary />
    </member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.enum_CONTEXT_INFO_FIELDS"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_CONTEXT_INFO_FIELDS.CIF_MODULEURL">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_CONTEXT_INFO_FIELDS.CIF_FUNCTION">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_CONTEXT_INFO_FIELDS.CIF_FUNCTIONOFFSET">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_CONTEXT_INFO_FIELDS.CIF_ADDRESS">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_CONTEXT_INFO_FIELDS.CIF_ADDRESSOFFSET">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_CONTEXT_INFO_FIELDS.CIF_ADDRESSABSOLUTE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_CONTEXT_INFO_FIELDS.CIF_ALLFIELDS">
      <summary />
    </member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.enum_DBG_ATTRIB_FLAGS"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_DBG_ATTRIB_FLAGS.DBG_ATTRIB_NONE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_DBG_ATTRIB_FLAGS.DBG_ATTRIB_ALL">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_DBG_ATTRIB_FLAGS.DBG_ATTRIB_OBJ_IS_EXPANDABLE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_DBG_ATTRIB_FLAGS.DBG_ATTRIB_OBJ_HAS_ID">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_DBG_ATTRIB_FLAGS.DBG_ATTRIB_OBJ_CAN_HAVE_ID">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_DBG_ATTRIB_FLAGS.DBG_ATTRIB_VALUE_READONLY">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_DBG_ATTRIB_FLAGS.DBG_ATTRIB_VALUE_ERROR">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_DBG_ATTRIB_FLAGS.DBG_ATTRIB_VALUE_SIDE_EFFECT">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_DBG_ATTRIB_FLAGS.DBG_ATTRIB_OVERLOADED_CONTAINER">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_DBG_ATTRIB_FLAGS.DBG_ATTRIB_VALUE_BOOLEAN">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_DBG_ATTRIB_FLAGS.DBG_ATTRIB_VALUE_BOOLEAN_TRUE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_DBG_ATTRIB_FLAGS.DBG_ATTRIB_VALUE_INVALID">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_DBG_ATTRIB_FLAGS.DBG_ATTRIB_VALUE_NAT">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_DBG_ATTRIB_FLAGS.DBG_ATTRIB_VALUE_AUTOEXPANDED">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_DBG_ATTRIB_FLAGS.DBG_ATTRIB_VALUE_TIMEOUT">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_DBG_ATTRIB_FLAGS.DBG_ATTRIB_VALUE_RAW_STRING">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_DBG_ATTRIB_FLAGS.DBG_ATTRIB_VALUE_CUSTOM_VIEWER">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_DBG_ATTRIB_FLAGS.DBG_ATTRIB_ACCESS_NONE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_DBG_ATTRIB_FLAGS.DBG_ATTRIB_ACCESS_PUBLIC">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_DBG_ATTRIB_FLAGS.DBG_ATTRIB_ACCESS_PRIVATE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_DBG_ATTRIB_FLAGS.DBG_ATTRIB_ACCESS_PROTECTED">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_DBG_ATTRIB_FLAGS.DBG_ATTRIB_ACCESS_FINAL">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_DBG_ATTRIB_FLAGS.DBG_ATTRIB_ACCESS_ALL">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_DBG_ATTRIB_FLAGS.DBG_ATTRIB_STORAGE_NONE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_DBG_ATTRIB_FLAGS.DBG_ATTRIB_STORAGE_GLOBAL">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_DBG_ATTRIB_FLAGS.DBG_ATTRIB_STORAGE_STATIC">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_DBG_ATTRIB_FLAGS.DBG_ATTRIB_STORAGE_REGISTER">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_DBG_ATTRIB_FLAGS.DBG_ATTRIB_STORAGE_ALL">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_DBG_ATTRIB_FLAGS.DBG_ATTRIB_TYPE_NONE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_DBG_ATTRIB_FLAGS.DBG_ATTRIB_TYPE_VIRTUAL">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_DBG_ATTRIB_FLAGS.DBG_ATTRIB_TYPE_CONSTANT">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_DBG_ATTRIB_FLAGS.DBG_ATTRIB_TYPE_SYNCHRONIZED">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_DBG_ATTRIB_FLAGS.DBG_ATTRIB_TYPE_VOLATILE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_DBG_ATTRIB_FLAGS.DBG_ATTRIB_TYPE_ALL">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_DBG_ATTRIB_FLAGS.DBG_ATTRIB_DATA">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_DBG_ATTRIB_FLAGS.DBG_ATTRIB_METHOD">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_DBG_ATTRIB_FLAGS.DBG_ATTRIB_PROPERTY">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_DBG_ATTRIB_FLAGS.DBG_ATTRIB_CLASS">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_DBG_ATTRIB_FLAGS.DBG_ATTRIB_BASECLASS">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_DBG_ATTRIB_FLAGS.DBG_ATTRIB_INTERFACE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_DBG_ATTRIB_FLAGS.DBG_ATTRIB_INNERCLASS">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_DBG_ATTRIB_FLAGS.DBG_ATTRIB_MOSTDERIVEDCLASS">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_DBG_ATTRIB_FLAGS.DBG_ATTRIB_CHILD_ALL">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_DBG_ATTRIB_FLAGS.DBG_ATTRIB_MULTI_CUSTOM_VIEWERS">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_DBG_ATTRIB_FLAGS.DBG_ATTRIB_EVENT">
      <summary />
    </member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.enum_DEBUG_REASON"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_DEBUG_REASON.DEBUG_REASON_ERROR">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_DEBUG_REASON.DEBUG_REASON_USER_LAUNCHED">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_DEBUG_REASON.DEBUG_REASON_USER_ATTACHED">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_DEBUG_REASON.DEBUG_REASON_AUTO_ATTACHED">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_DEBUG_REASON.DEBUG_REASON_CAUSALITY">
      <summary />
    </member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.enum_DEBUGPROP_INFO_FLAGS"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_DEBUGPROP_INFO_FLAGS.DEBUGPROP_INFO_FULLNAME">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_DEBUGPROP_INFO_FLAGS.DEBUGPROP_INFO_NAME">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_DEBUGPROP_INFO_FLAGS.DEBUGPROP_INFO_TYPE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_DEBUGPROP_INFO_FLAGS.DEBUGPROP_INFO_VALUE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_DEBUGPROP_INFO_FLAGS.DEBUGPROP_INFO_ATTRIB">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_DEBUGPROP_INFO_FLAGS.DEBUGPROP_INFO_PROP">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_DEBUGPROP_INFO_FLAGS.DEBUGPROP_INFO_VALUE_AUTOEXPAND">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_DEBUGPROP_INFO_FLAGS.DEBUGPROP_INFO_NOFUNCEVAL">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_DEBUGPROP_INFO_FLAGS.DEBUGPROP_INFO_VALUE_RAW">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_DEBUGPROP_INFO_FLAGS.DEBUGPROP_INFO_VALUE_NO_TOSTRING">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_DEBUGPROP_INFO_FLAGS.DEBUGPROP_INFO_NO_NONPUBLIC_MEMBERS">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_DEBUGPROP_INFO_FLAGS.DEBUGPROP_INFO_NONE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_DEBUGPROP_INFO_FLAGS.DEBUGPROP_INFO_STANDARD">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_DEBUGPROP_INFO_FLAGS.DEBUGPROP_INFO_ALL">
      <summary />
    </member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.enum_DEBUGREF_INFO_FLAGS"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_DEBUGREF_INFO_FLAGS.DEBUGREF_INFO_NAME">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_DEBUGREF_INFO_FLAGS.DEBUGREF_INFO_TYPE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_DEBUGREF_INFO_FLAGS.DEBUGREF_INFO_VALUE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_DEBUGREF_INFO_FLAGS.DEBUGREF_INFO_ATTRIB">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_DEBUGREF_INFO_FLAGS.DEBUGREF_INFO_REFTYPE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_DEBUGREF_INFO_FLAGS.DEBUGREF_INFO_REF">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_DEBUGREF_INFO_FLAGS.DEBUGREF_INFO_VALUE_AUTOEXPAND">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_DEBUGREF_INFO_FLAGS.DEBUGREF_INFO_NONE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_DEBUGREF_INFO_FLAGS.DEBUGREF_INFO_ALL">
      <summary />
    </member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.enum_DISASSEMBLY_FLAGS"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_DISASSEMBLY_FLAGS.DF_DOCUMENTCHANGE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_DISASSEMBLY_FLAGS.DF_DISABLED">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_DISASSEMBLY_FLAGS.DF_INSTRUCTION_ACTIVE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_DISASSEMBLY_FLAGS.DF_DATA">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_DISASSEMBLY_FLAGS.DF_HASSOURCE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_DISASSEMBLY_FLAGS.DF_DOCUMENT_CHECKSUM">
      <summary />
    </member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.enum_DISASSEMBLY_STREAM_FIELDS"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_DISASSEMBLY_STREAM_FIELDS.DSF_ADDRESS">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_DISASSEMBLY_STREAM_FIELDS.DSF_ADDRESSOFFSET">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_DISASSEMBLY_STREAM_FIELDS.DSF_CODEBYTES">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_DISASSEMBLY_STREAM_FIELDS.DSF_OPCODE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_DISASSEMBLY_STREAM_FIELDS.DSF_OPERANDS">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_DISASSEMBLY_STREAM_FIELDS.DSF_SYMBOL">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_DISASSEMBLY_STREAM_FIELDS.DSF_CODELOCATIONID">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_DISASSEMBLY_STREAM_FIELDS.DSF_POSITION">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_DISASSEMBLY_STREAM_FIELDS.DSF_DOCUMENTURL">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_DISASSEMBLY_STREAM_FIELDS.DSF_BYTEOFFSET">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_DISASSEMBLY_STREAM_FIELDS.DSF_FLAGS">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_DISASSEMBLY_STREAM_FIELDS.DSF_OPERANDS_SYMBOLS">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_DISASSEMBLY_STREAM_FIELDS.DSF_ALL">
      <summary />
    </member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.enum_DISASSEMBLY_STREAM_SCOPE"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_DISASSEMBLY_STREAM_SCOPE.DSS_HUGE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_DISASSEMBLY_STREAM_SCOPE.DSS_FUNCTION">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_DISASSEMBLY_STREAM_SCOPE.DSS_MODULE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_DISASSEMBLY_STREAM_SCOPE.DSS_ALL">
      <summary />
    </member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.enum_DisplayKind"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_DisplayKind.DisplayKind_Value">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_DisplayKind.DisplayKind_Name">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_DisplayKind.DisplayKind_Type">
      <summary />
    </member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.enum_DOCCONTEXT_COMPARE"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_DOCCONTEXT_COMPARE.DOCCONTEXT_EQUAL">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_DOCCONTEXT_COMPARE.DOCCONTEXT_LESS_THAN">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_DOCCONTEXT_COMPARE.DOCCONTEXT_GREATER_THAN">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_DOCCONTEXT_COMPARE.DOCCONTEXT_SAME_DOCUMENT">
      <summary />
    </member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.enum_DUMPTYPE"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_DUMPTYPE.DUMP_MINIDUMP">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_DUMPTYPE.DUMP_FULLDUMP">
      <summary />
    </member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.enum_dwTYPE_KIND"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_dwTYPE_KIND.TYPE_KIND_METADATA">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_dwTYPE_KIND.TYPE_KIND_PDB">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_dwTYPE_KIND.TYPE_KIND_BUILT">
      <summary />
    </member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.enum_EVALFLAGS"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_EVALFLAGS.EVAL_RETURNVALUE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_EVALFLAGS.EVAL_NOSIDEEFFECTS">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_EVALFLAGS.EVAL_ALLOWBPS">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_EVALFLAGS.EVAL_ALLOWERRORREPORT">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_EVALFLAGS.EVAL_FUNCTION_AS_ADDRESS">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_EVALFLAGS.EVAL_NOFUNCEVAL">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_EVALFLAGS.EVAL_NOEVENTS">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_EVALFLAGS.EVAL_DESIGN_TIME_EXPR_EVAL">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_EVALFLAGS.EVAL_ALLOW_IMPLICIT_VARS">
      <summary />
    </member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.enum_EVENTATTRIBUTES"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_EVENTATTRIBUTES.EVENT_ASYNCHRONOUS">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_EVENTATTRIBUTES.EVENT_SYNCHRONOUS">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_EVENTATTRIBUTES.EVENT_STOPPING">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_EVENTATTRIBUTES.EVENT_ASYNC_STOP">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_EVENTATTRIBUTES.EVENT_SYNC_STOP">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_EVENTATTRIBUTES.EVENT_IMMEDIATE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_EVENTATTRIBUTES.EVENT_EXPRESSION_EVALUATION">
      <summary />
    </member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.enum_EXCEPTION_STATE"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_EXCEPTION_STATE.EXCEPTION_NONE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_EXCEPTION_STATE.EXCEPTION_STOP_FIRST_CHANCE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_EXCEPTION_STATE.EXCEPTION_STOP_SECOND_CHANCE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_EXCEPTION_STATE.EXCEPTION_STOP_USER_FIRST_CHANCE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_EXCEPTION_STATE.EXCEPTION_STOP_USER_UNCAUGHT">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_EXCEPTION_STATE.EXCEPTION_STOP_FIRST_CHANCE_USE_PARENT">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_EXCEPTION_STATE.EXCEPTION_STOP_SECOND_CHANCE_USE_PARENT">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_EXCEPTION_STATE.EXCEPTION_STOP_USER_FIRST_CHANCE_USE_PARENT">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_EXCEPTION_STATE.EXCEPTION_STOP_USER_UNCAUGHT_USE_PARENT">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_EXCEPTION_STATE.EXCEPTION_STOP_ALL">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_EXCEPTION_STATE.EXCEPTION_CANNOT_BE_CONTINUED">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_EXCEPTION_STATE.EXCEPTION_CODE_SUPPORTED">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_EXCEPTION_STATE.EXCEPTION_CODE_DISPLAY_IN_HEX">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_EXCEPTION_STATE.EXCEPTION_JUST_MY_CODE_SUPPORTED">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_EXCEPTION_STATE.EXCEPTION_MANAGED_DEBUG_ASSISTANT">
      <summary />
    </member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.enum_FIELD_INFO_FIELDS"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_FIELD_INFO_FIELDS.FIF_FULLNAME">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_FIELD_INFO_FIELDS.FIF_NAME">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_FIELD_INFO_FIELDS.FIF_TYPE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_FIELD_INFO_FIELDS.FIF_MODIFIERS">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_FIELD_INFO_FIELDS.FIF_ALL">
      <summary />
    </member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.enum_FIELD_KIND"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_FIELD_KIND.FIELD_KIND_NONE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_FIELD_KIND.FIELD_KIND_TYPE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_FIELD_KIND.FIELD_KIND_SYMBOL">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_FIELD_KIND.FIELD_TYPE_PRIMITIVE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_FIELD_KIND.FIELD_TYPE_STRUCT">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_FIELD_KIND.FIELD_TYPE_CLASS">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_FIELD_KIND.FIELD_TYPE_INTERFACE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_FIELD_KIND.FIELD_TYPE_UNION">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_FIELD_KIND.FIELD_TYPE_ARRAY">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_FIELD_KIND.FIELD_TYPE_METHOD">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_FIELD_KIND.FIELD_TYPE_BLOCK">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_FIELD_KIND.FIELD_TYPE_POINTER">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_FIELD_KIND.FIELD_TYPE_ENUM">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_FIELD_KIND.FIELD_TYPE_LABEL">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_FIELD_KIND.FIELD_TYPE_TYPEDEF">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_FIELD_KIND.FIELD_TYPE_BITFIELD">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_FIELD_KIND.FIELD_TYPE_NAMESPACE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_FIELD_KIND.FIELD_TYPE_MODULE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_FIELD_KIND.FIELD_TYPE_DYNAMIC">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_FIELD_KIND.FIELD_TYPE_PROP">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_FIELD_KIND.FIELD_TYPE_INNERCLASS">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_FIELD_KIND.FIELD_TYPE_REFERENCE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_FIELD_KIND.FIELD_TYPE_EXTENDED">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_FIELD_KIND.FIELD_SYM_MEMBER">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_FIELD_KIND.FIELD_SYM_LOCAL">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_FIELD_KIND.FIELD_SYM_PARAM">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_FIELD_KIND.FIELD_SYM_THIS">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_FIELD_KIND.FIELD_SYM_GLOBAL">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_FIELD_KIND.FIELD_SYM_PROP_GETTER">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_FIELD_KIND.FIELD_SYM_PROP_SETTER">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_FIELD_KIND.FIELD_SYM_EXTENED">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_FIELD_KIND.FIELD_KIND_MASK">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_FIELD_KIND.FIELD_TYPE_MASK">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_FIELD_KIND.FIELD_SYM_MASK">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_FIELD_KIND.FIELD_KIND_ALL">
      <summary />
    </member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.enum_FIELD_KIND_EX"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_FIELD_KIND_EX.FIELD_KIND_EX_NONE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_FIELD_KIND_EX.FIELD_TYPE_EX_METHODVAR">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_FIELD_KIND_EX.FIELD_TYPE_EX_CLASSVAR">
      <summary />
    </member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.enum_FIELD_MODIFIERS"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_FIELD_MODIFIERS.FIELD_MOD_NONE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_FIELD_MODIFIERS.FIELD_MOD_ACCESS_NONE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_FIELD_MODIFIERS.FIELD_MOD_ACCESS_PUBLIC">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_FIELD_MODIFIERS.FIELD_MOD_ACCESS_PROTECTED">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_FIELD_MODIFIERS.FIELD_MOD_ACCESS_PRIVATE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_FIELD_MODIFIERS.FIELD_MOD_ACCESS_FRIEND">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_FIELD_MODIFIERS.FIELD_MOD_NOMODIFIERS">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_FIELD_MODIFIERS.FIELD_MOD_STATIC">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_FIELD_MODIFIERS.FIELD_MOD_CONSTANT">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_FIELD_MODIFIERS.FIELD_MOD_TRANSIENT">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_FIELD_MODIFIERS.FIELD_MOD_VOLATILE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_FIELD_MODIFIERS.FIELD_MOD_ABSTRACT">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_FIELD_MODIFIERS.FIELD_MOD_NATIVE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_FIELD_MODIFIERS.FIELD_MOD_SYNCHRONIZED">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_FIELD_MODIFIERS.FIELD_MOD_VIRTUAL">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_FIELD_MODIFIERS.FIELD_MOD_INTERFACE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_FIELD_MODIFIERS.FIELD_MOD_FINAL">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_FIELD_MODIFIERS.FIELD_MOD_SENTINEL">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_FIELD_MODIFIERS.FIELD_MOD_INNERCLASS">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_FIELD_MODIFIERS.FIELD_MOD_OPTIONAL">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_FIELD_MODIFIERS.FIELD_MOD_BYREF">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_FIELD_MODIFIERS.FIELD_MOD_HIDDEN">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_FIELD_MODIFIERS.FIELD_MOD_MARSHALASOBJECT">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_FIELD_MODIFIERS.FIELD_MOD_SPECIAL_NAME">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_FIELD_MODIFIERS.FIELD_MOD_HIDEBYSIG">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_FIELD_MODIFIERS.FIELD_MOD_NEWSLOT">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_FIELD_MODIFIERS.FIELD_MOD_WRITEONLY">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_FIELD_MODIFIERS.FIELD_MOD_ACCESS_MASK">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_FIELD_MODIFIERS.FIELD_MOD_MASK">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_FIELD_MODIFIERS.FIELD_MOD_ALL">
      <summary />
    </member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.enum_FRAMEINFO_FLAGS"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_FRAMEINFO_FLAGS.FIF_FUNCNAME">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_FRAMEINFO_FLAGS.FIF_RETURNTYPE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_FRAMEINFO_FLAGS.FIF_ARGS">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_FRAMEINFO_FLAGS.FIF_LANGUAGE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_FRAMEINFO_FLAGS.FIF_MODULE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_FRAMEINFO_FLAGS.FIF_STACKRANGE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_FRAMEINFO_FLAGS.FIF_FRAME">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_FRAMEINFO_FLAGS.FIF_DEBUGINFO">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_FRAMEINFO_FLAGS.FIF_STALECODE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_FRAMEINFO_FLAGS.FIF_FLAGS">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_FRAMEINFO_FLAGS.FIF_DEBUG_MODULEP">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_FRAMEINFO_FLAGS.FIF_FUNCNAME_FORMAT">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_FRAMEINFO_FLAGS.FIF_FUNCNAME_RETURNTYPE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_FRAMEINFO_FLAGS.FIF_FUNCNAME_ARGS">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_FRAMEINFO_FLAGS.FIF_FUNCNAME_LANGUAGE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_FRAMEINFO_FLAGS.FIF_FUNCNAME_MODULE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_FRAMEINFO_FLAGS.FIF_FUNCNAME_LINES">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_FRAMEINFO_FLAGS.FIF_FUNCNAME_OFFSET">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_FRAMEINFO_FLAGS.FIF_FUNCNAME_ARGS_TYPES">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_FRAMEINFO_FLAGS.FIF_FUNCNAME_ARGS_NAMES">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_FRAMEINFO_FLAGS.FIF_FUNCNAME_ARGS_VALUES">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_FRAMEINFO_FLAGS.FIF_FUNCNAME_ARGS_ALL">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_FRAMEINFO_FLAGS.FIF_ARGS_TYPES">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_FRAMEINFO_FLAGS.FIF_ARGS_NAMES">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_FRAMEINFO_FLAGS.FIF_ARGS_VALUES">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_FRAMEINFO_FLAGS.FIF_ARGS_ALL">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_FRAMEINFO_FLAGS.FIF_ARGS_NOFORMAT">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_FRAMEINFO_FLAGS.FIF_ARGS_NO_FUNC_EVAL">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_FRAMEINFO_FLAGS.FIF_FILTER_NON_USER_CODE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_FRAMEINFO_FLAGS.FIF_ARGS_NO_TOSTRING">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_FRAMEINFO_FLAGS.FIF_DESIGN_TIME_EXPR_EVAL">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_FRAMEINFO_FLAGS.FIF_FILTER_INCLUDE_ALL">
      <summary />
    </member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.enum_FRAMEINFO_FLAGS_VALUES"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_FRAMEINFO_FLAGS_VALUES.FIFV_ANNOTATEDFRAME">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_FRAMEINFO_FLAGS_VALUES.FIFV_NON_USER_CODE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_FRAMEINFO_FLAGS_VALUES.FIFV_CANINTERCEPT_EXCEPTION">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_FRAMEINFO_FLAGS_VALUES.FIFV_FUNCEVALFRAME">
      <summary />
    </member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.enum_GETASSEMBLY"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_GETASSEMBLY.GA_BYTES">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_GETASSEMBLY.GA_PDBBYTES">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_GETASSEMBLY.GA_NAME">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_GETASSEMBLY.GA_FLAGS">
      <summary />
    </member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.enum_GETHOSTNAME_TYPE"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_GETHOSTNAME_TYPE.GHN_FRIENDLY_NAME">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_GETHOSTNAME_TYPE.GHN_FILE_NAME">
      <summary />
    </member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.enum_GETNAME_TYPE"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_GETNAME_TYPE.GN_NAME">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_GETNAME_TYPE.GN_FILENAME">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_GETNAME_TYPE.GN_BASENAME">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_GETNAME_TYPE.GN_MONIKERNAME">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_GETNAME_TYPE.GN_URL">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_GETNAME_TYPE.GN_TITLE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_GETNAME_TYPE.GN_STARTPAGEURL">
      <summary />
    </member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.enum_INTERCEPT_EXCEPTION_ACTION"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_INTERCEPT_EXCEPTION_ACTION.IEA_INTERCEPT">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_INTERCEPT_EXCEPTION_ACTION.IEA_CANCEL_INTERCEPT">
      <summary />
    </member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.enum_JIT_FLAGS"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_JIT_FLAGS.JIT_FLAG_RPC">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_JIT_FLAGS.JIT_FLAG_NOCRASH">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_JIT_FLAGS.JIT_FLAG_DEBUGEXE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_JIT_FLAGS.JIT_FLAG_SELECT_ENGINES">
      <summary />
    </member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.enum_LAUNCH_FLAGS"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_LAUNCH_FLAGS.LAUNCH_DEBUG">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_LAUNCH_FLAGS.LAUNCH_NODEBUG">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_LAUNCH_FLAGS.LAUNCH_ENABLE_ENC">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_LAUNCH_FLAGS.LAUNCH_MERGE_ENV">
      <summary />
    </member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.enum_MACHINE_INFO_FIELDS"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_MACHINE_INFO_FIELDS.MCIF_NAME">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_MACHINE_INFO_FIELDS.MCIF_FLAGS">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_MACHINE_INFO_FIELDS.MCIF_ALL">
      <summary />
    </member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.enum_MACHINE_INFO_FLAGS"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_MACHINE_INFO_FLAGS.MCIFLAG_TERMINAL_SERVICES_AVAILABLE">
      <summary />
    </member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.enum_MESSAGETYPE"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_MESSAGETYPE.MT_OUTPUTSTRING">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_MESSAGETYPE.MT_MESSAGEBOX">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_MESSAGETYPE.MT_TYPE_MASK">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_MESSAGETYPE.MT_REASON_EXCEPTION">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_MESSAGETYPE.MT_REASON_TRACEPOINT">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_MESSAGETYPE.MT_REASON_MASK">
      <summary />
    </member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.enum_MODULE_FLAGS"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_MODULE_FLAGS.MODULE_FLAG_NONE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_MODULE_FLAGS.MODULE_FLAG_SYSTEM">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_MODULE_FLAGS.MODULE_FLAG_SYMBOLS">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_MODULE_FLAGS.MODULE_FLAG_64BIT">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_MODULE_FLAGS.MODULE_FLAG_OPTIMIZED">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_MODULE_FLAGS.MODULE_FLAG_UNOPTIMIZED">
      <summary />
    </member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.enum_MODULE_INFO_FIELDS"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_MODULE_INFO_FIELDS.MIF_NONE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_MODULE_INFO_FIELDS.MIF_NAME">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_MODULE_INFO_FIELDS.MIF_URL">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_MODULE_INFO_FIELDS.MIF_VERSION">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_MODULE_INFO_FIELDS.MIF_DEBUGMESSAGE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_MODULE_INFO_FIELDS.MIF_LOADADDRESS">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_MODULE_INFO_FIELDS.MIF_PREFFEREDADDRESS">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_MODULE_INFO_FIELDS.MIF_SIZE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_MODULE_INFO_FIELDS.MIF_LOADORDER">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_MODULE_INFO_FIELDS.MIF_TIMESTAMP">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_MODULE_INFO_FIELDS.MIF_URLSYMBOLLOCATION">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_MODULE_INFO_FIELDS.MIF_FLAGS">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_MODULE_INFO_FIELDS.MIF_ALLFIELDS">
      <summary />
    </member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.enum_MODULE_INFO_FLAGS"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_MODULE_INFO_FLAGS.MIF_SYMBOLS_LOADED">
      <summary />
    </member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.enum_OBJECT_TYPE"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_OBJECT_TYPE.OBJECT_TYPE_BOOLEAN">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_OBJECT_TYPE.OBJECT_TYPE_CHAR">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_OBJECT_TYPE.OBJECT_TYPE_I1">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_OBJECT_TYPE.OBJECT_TYPE_U1">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_OBJECT_TYPE.OBJECT_TYPE_I2">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_OBJECT_TYPE.OBJECT_TYPE_U2">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_OBJECT_TYPE.OBJECT_TYPE_I4">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_OBJECT_TYPE.OBJECT_TYPE_U4">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_OBJECT_TYPE.OBJECT_TYPE_I8">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_OBJECT_TYPE.OBJECT_TYPE_U8">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_OBJECT_TYPE.OBJECT_TYPE_R4">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_OBJECT_TYPE.OBJECT_TYPE_R8">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_OBJECT_TYPE.OBJECT_TYPE_OBJECT">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_OBJECT_TYPE.OBJECT_TYPE_NULL">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_OBJECT_TYPE.OBJECT_TYPE_CLASS">
      <summary />
    </member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.enum_PARSEFLAGS"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_PARSEFLAGS.PARSE_EXPRESSION">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_PARSEFLAGS.PARSE_FUNCTION_AS_ADDRESS">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_PARSEFLAGS.PARSE_DESIGN_TIME_EXPR_EVAL">
      <summary />
    </member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.enum_PENDING_BP_STATE"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_PENDING_BP_STATE.PBPS_NONE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_PENDING_BP_STATE.PBPS_DELETED">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_PENDING_BP_STATE.PBPS_DISABLED">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_PENDING_BP_STATE.PBPS_ENABLED">
      <summary />
    </member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.enum_PENDING_BP_STATE_FLAGS"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_PENDING_BP_STATE_FLAGS.PBPSF_NONE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_PENDING_BP_STATE_FLAGS.PBPSF_VIRTUALIZED">
      <summary />
    </member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.enum_PORT_SUPPLIER_DESCRIPTION_FLAGS"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_PORT_SUPPLIER_DESCRIPTION_FLAGS.PSDFLAG_SHOW_WARNING_ICON">
      <summary />
    </member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.enum_PROCESS_INFO_FIELDS"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_PROCESS_INFO_FIELDS.PIF_FILE_NAME">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_PROCESS_INFO_FIELDS.PIF_BASE_NAME">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_PROCESS_INFO_FIELDS.PIF_TITLE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_PROCESS_INFO_FIELDS.PIF_PROCESS_ID">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_PROCESS_INFO_FIELDS.PIF_SESSION_ID">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_PROCESS_INFO_FIELDS.PIF_ATTACHED_SESSION_NAME">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_PROCESS_INFO_FIELDS.PIF_CREATION_TIME">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_PROCESS_INFO_FIELDS.PIF_FLAGS">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_PROCESS_INFO_FIELDS.PIF_ALL">
      <summary />
    </member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.enum_PROCESS_INFO_FLAGS"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_PROCESS_INFO_FLAGS.PIFLAG_SYSTEM_PROCESS">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_PROCESS_INFO_FLAGS.PIFLAG_DEBUGGER_ATTACHED">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_PROCESS_INFO_FLAGS.PIFLAG_PROCESS_STOPPED">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_PROCESS_INFO_FLAGS.PIFLAG_PROCESS_RUNNING">
      <summary />
    </member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.enum_PROGRAM_DESTROY_FLAGS"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_PROGRAM_DESTROY_FLAGS.PROGRAM_DESTROY_CONTINUE_DEBUGGING">
      <summary />
    </member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.enum_PROVIDER_FIELDS"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_PROVIDER_FIELDS.PFIELD_PROGRAM_NODES">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_PROVIDER_FIELDS.PFIELD_IS_DEBUGGER_PRESENT">
      <summary />
    </member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.enum_PROVIDER_FLAGS"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_PROVIDER_FLAGS.PFLAG_NONE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_PROVIDER_FLAGS.PFLAG_REMOTE_PORT">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_PROVIDER_FLAGS.PFLAG_DEBUGGEE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_PROVIDER_FLAGS.PFLAG_ATTACHED_TO_DEBUGGEE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_PROVIDER_FLAGS.PFLAG_REASON_WATCH">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_PROVIDER_FLAGS.PFLAG_GET_PROGRAM_NODES">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_PROVIDER_FLAGS.PFLAG_GET_IS_DEBUGGER_PRESENT">
      <summary />
    </member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.enum_REFERENCE_COMPARE"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_REFERENCE_COMPARE.REF_COMPARE_EQUAL">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_REFERENCE_COMPARE.REF_COMPARE_LESS_THAN">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_REFERENCE_COMPARE.REF_COMPARE_GREATER_THAN">
      <summary />
    </member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.enum_REFERENCE_TYPE"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_REFERENCE_TYPE.REF_TYPE_WEAK">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_REFERENCE_TYPE.REF_TYPE_STRONG">
      <summary />
    </member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.enum_SEEK_START"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_SEEK_START.SEEK_START_BEGIN">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_SEEK_START.SEEK_START_END">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_SEEK_START.SEEK_START_CURRENT">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_SEEK_START.SEEK_START_CODECONTEXT">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_SEEK_START.SEEK_START_CODELOCID">
      <summary />
    </member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.enum_SESSION_FEATURES"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_SESSION_FEATURES.FEATURE_REMOTE_DEBUGGING">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_SESSION_FEATURES.FEATURE_CAUSALITY">
      <summary />
    </member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.enum_STEPKIND"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_STEPKIND.STEP_INTO">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_STEPKIND.STEP_OVER">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_STEPKIND.STEP_OUT">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_STEPKIND.STEP_BACKWARDS">
      <summary />
    </member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.enum_STEPUNIT"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_STEPUNIT.STEP_STATEMENT">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_STEPUNIT.STEP_LINE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_STEPUNIT.STEP_INSTRUCTION">
      <summary />
    </member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.enum_STOPPING_MODEL"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_STOPPING_MODEL.STOPPING_MODEL_STOP_ALL">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_STOPPING_MODEL.STOPPING_MODEL_STOP_ONE">
      <summary />
    </member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.enum_SYMBOL_SEARCH_INFO_FIELDS"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_SYMBOL_SEARCH_INFO_FIELDS.SSIF_NONE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_SYMBOL_SEARCH_INFO_FIELDS.SSIF_VERBOSE_SEARCH_INFO">
      <summary />
    </member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.enum_TEXT_POSITION_MAX"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_TEXT_POSITION_MAX.TEXT_POSITION_MAX_LINE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_TEXT_POSITION_MAX.TEXT_POSITION_MAX_COLUMN">
      <summary />
    </member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.enum_THREADPROPERTY_FIELDS"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_THREADPROPERTY_FIELDS.TPF_ID">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_THREADPROPERTY_FIELDS.TPF_SUSPENDCOUNT">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_THREADPROPERTY_FIELDS.TPF_STATE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_THREADPROPERTY_FIELDS.TPF_PRIORITY">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_THREADPROPERTY_FIELDS.TPF_NAME">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_THREADPROPERTY_FIELDS.TPF_LOCATION">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_THREADPROPERTY_FIELDS.TPF_ALLFIELDS">
      <summary />
    </member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.enum_THREADSTATE"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_THREADSTATE.THREADSTATE_RUNNING">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_THREADSTATE.THREADSTATE_STOPPED">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_THREADSTATE.THREADSTATE_FRESH">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_THREADSTATE.THREADSTATE_DEAD">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_THREADSTATE.THREADSTATE_FROZEN">
      <summary />
    </member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.enum_WATCHFOREVAL"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.enum_WATCHFOREVAL.WATCHFOREVAL_LEAF_PROGRAM">
      <summary />
    </member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.EXCEPTION_BOUNDARY_TYPE"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.EXCEPTION_BOUNDARY_TYPE.EXCEPTION_BOUNDARY_NONE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.EXCEPTION_BOUNDARY_TYPE.EXCEPTION_BOUNDARY_APPDOMAIN">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.EXCEPTION_BOUNDARY_TYPE.EXCEPTION_BOUNDARY_UNMANAGED">
      <summary />
    </member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.EXCEPTION_INFO"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.EXCEPTION_INFO.bstrExceptionName"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.EXCEPTION_INFO.bstrProgramName"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.EXCEPTION_INFO.dwCode"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.EXCEPTION_INFO.dwState"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.EXCEPTION_INFO.guidType"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.EXCEPTION_INFO.pProgram"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.FIELD_INFO"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.FIELD_INFO.bstrFullName"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.FIELD_INFO.bstrName"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.FIELD_INFO.bstrType"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.FIELD_INFO.dwFields"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.FIELD_INFO.dwModifiers"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.FRAMEINFO"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.FRAMEINFO.m_addrMax"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.FRAMEINFO.m_addrMin"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.FRAMEINFO.m_bstrArgs"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.FRAMEINFO.m_bstrFuncName"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.FRAMEINFO.m_bstrLanguage"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.FRAMEINFO.m_bstrModule"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.FRAMEINFO.m_bstrReturnType"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.FRAMEINFO.m_dwFlags"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.FRAMEINFO.m_dwValidFields"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.FRAMEINFO.m_fHasDebugInfo"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.FRAMEINFO.m_fStaleCode"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.FRAMEINFO.m_pFrame"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.FRAMEINFO.m_pModule"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.FUNC_EVAL_ABORT_RESULT"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.FUNC_EVAL_ABORT_RESULT.ABORT_SUCCEEDED">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.FUNC_EVAL_ABORT_RESULT.RUDE_ABORT_SUCCEEDED">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.FUNC_EVAL_ABORT_RESULT.ABORT_FAILED">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.FUNC_EVAL_ABORT_RESULT.ABORT_HUNG">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.FUNC_EVAL_ABORT_RESULT.PROCESS_TERMINATED">
      <summary />
    </member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.GUID_ARRAY"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.GUID_ARRAY.dwCount"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.GUID_ARRAY.Members"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.IDebugActivateDocumentEvent2"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugActivateDocumentEvent2.GetDocument(Microsoft.VisualStudio.Debugger.Interop.IDebugDocument2@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugActivateDocumentEvent2.GetDocumentContext(Microsoft.VisualStudio.Debugger.Interop.IDebugDocumentContext2@)"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.IDebugAddress"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugAddress.GetAddress(Microsoft.VisualStudio.Debugger.Interop.DEBUG_ADDRESS[])"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.IDebugAddress2"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugAddress2.GetAddress(Microsoft.VisualStudio.Debugger.Interop.DEBUG_ADDRESS[])"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugAddress2.GetProcessId(System.UInt32@)"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.IDebugAlias"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugAlias.Dispose"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugAlias.GetICorDebugValue(System.Object@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugAlias.GetName(System.String@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugAlias.GetObject(Microsoft.VisualStudio.Debugger.Interop.IDebugObject2@)"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.IDebugArrayField"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugArrayField.EnumFields(Microsoft.VisualStudio.Debugger.Interop.enum_FIELD_KIND,Microsoft.VisualStudio.Debugger.Interop.enum_FIELD_MODIFIERS,System.String,Microsoft.VisualStudio.Debugger.Interop.NAME_MATCH,Microsoft.VisualStudio.Debugger.Interop.IEnumDebugFields@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugArrayField.Equal(Microsoft.VisualStudio.Debugger.Interop.IDebugField)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugArrayField.GetAddress(Microsoft.VisualStudio.Debugger.Interop.IDebugAddress@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugArrayField.GetContainer(Microsoft.VisualStudio.Debugger.Interop.IDebugContainerField@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugArrayField.GetElementType(Microsoft.VisualStudio.Debugger.Interop.IDebugField@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugArrayField.GetExtendedInfo(System.Guid@,System.IntPtr[],System.UInt32@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugArrayField.GetInfo(Microsoft.VisualStudio.Debugger.Interop.enum_FIELD_INFO_FIELDS,Microsoft.VisualStudio.Debugger.Interop.FIELD_INFO[])"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugArrayField.GetKind(Microsoft.VisualStudio.Debugger.Interop.enum_FIELD_KIND[])"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugArrayField.GetNumberOfElements(System.UInt32@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugArrayField.GetRank(System.UInt32@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugArrayField.GetSize(System.UInt32@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugArrayField.GetType(Microsoft.VisualStudio.Debugger.Interop.IDebugField@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugArrayField.GetTypeInfo(Microsoft.VisualStudio.Debugger.Interop.TYPE_INFO[])"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.IDebugArrayObject"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugArrayObject.GetCount(System.UInt32@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugArrayObject.GetDimensions(System.UInt32,System.UInt32[])"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugArrayObject.GetElement(System.UInt32,Microsoft.VisualStudio.Debugger.Interop.IDebugObject@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugArrayObject.GetElements(Microsoft.VisualStudio.Debugger.Interop.IEnumDebugObjects@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugArrayObject.GetManagedDebugObject(Microsoft.VisualStudio.Debugger.Interop.IDebugManagedObject@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugArrayObject.GetMemoryContext(Microsoft.VisualStudio.Debugger.Interop.IDebugMemoryContext2@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugArrayObject.GetRank(System.UInt32@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugArrayObject.GetSize(System.UInt32@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugArrayObject.GetValue(System.Byte[],System.UInt32)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugArrayObject.IsEqual(Microsoft.VisualStudio.Debugger.Interop.IDebugObject,System.Int32@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugArrayObject.IsNullReference(System.Int32@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugArrayObject.IsProxy(System.Int32@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugArrayObject.IsReadOnly(System.Int32@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugArrayObject.SetReferenceValue(Microsoft.VisualStudio.Debugger.Interop.IDebugObject)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugArrayObject.SetValue(System.Byte[],System.UInt32)"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.IDebugArrayObject2"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugArrayObject2.GetBaseIndices(System.UInt32,System.UInt32[])"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugArrayObject2.GetCount(System.UInt32@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugArrayObject2.GetDimensions(System.UInt32,System.UInt32[])"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugArrayObject2.GetElement(System.UInt32,Microsoft.VisualStudio.Debugger.Interop.IDebugObject@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugArrayObject2.GetElements(Microsoft.VisualStudio.Debugger.Interop.IEnumDebugObjects@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugArrayObject2.GetManagedDebugObject(Microsoft.VisualStudio.Debugger.Interop.IDebugManagedObject@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugArrayObject2.GetMemoryContext(Microsoft.VisualStudio.Debugger.Interop.IDebugMemoryContext2@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugArrayObject2.GetRank(System.UInt32@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugArrayObject2.GetSize(System.UInt32@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugArrayObject2.GetValue(System.Byte[],System.UInt32)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugArrayObject2.HasBaseIndices(System.Int32@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugArrayObject2.IsEqual(Microsoft.VisualStudio.Debugger.Interop.IDebugObject,System.Int32@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugArrayObject2.IsNullReference(System.Int32@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugArrayObject2.IsProxy(System.Int32@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugArrayObject2.IsReadOnly(System.Int32@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugArrayObject2.SetReferenceValue(Microsoft.VisualStudio.Debugger.Interop.IDebugObject)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugArrayObject2.SetValue(System.Byte[],System.UInt32)"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.IDebugAttachCompleteEvent2"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.IDebugBeforeSymbolSearchEvent2"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugBeforeSymbolSearchEvent2.GetModuleName(System.String@)"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.IDebugBinder"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugBinder.Bind(Microsoft.VisualStudio.Debugger.Interop.IDebugObject,Microsoft.VisualStudio.Debugger.Interop.IDebugField,Microsoft.VisualStudio.Debugger.Interop.IDebugObject@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugBinder.GetFunctionObject(Microsoft.VisualStudio.Debugger.Interop.IDebugFunctionObject@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugBinder.GetMemoryContext(Microsoft.VisualStudio.Debugger.Interop.IDebugField,System.UInt32,Microsoft.VisualStudio.Debugger.Interop.IDebugMemoryContext2@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugBinder.ResolveDynamicType(Microsoft.VisualStudio.Debugger.Interop.IDebugDynamicField,Microsoft.VisualStudio.Debugger.Interop.IDebugField@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugBinder.ResolveRuntimeType(Microsoft.VisualStudio.Debugger.Interop.IDebugObject,Microsoft.VisualStudio.Debugger.Interop.IDebugField@)"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.IDebugBinder2"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugBinder2.GetExceptionObjectAndType(Microsoft.VisualStudio.Debugger.Interop.IDebugObject@,Microsoft.VisualStudio.Debugger.Interop.IDebugField@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugBinder2.GetMemoryObject(Microsoft.VisualStudio.Debugger.Interop.IDebugField,System.UInt32,Microsoft.VisualStudio.Debugger.Interop.IDebugObject@)"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.IDebugBinder3"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugBinder3.Bind(Microsoft.VisualStudio.Debugger.Interop.IDebugObject,Microsoft.VisualStudio.Debugger.Interop.IDebugField,Microsoft.VisualStudio.Debugger.Interop.IDebugObject@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugBinder3.FindAlias(System.String,Microsoft.VisualStudio.Debugger.Interop.IDebugAlias@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugBinder3.GetAllAliases(System.UInt32,Microsoft.VisualStudio.Debugger.Interop.IDebugAlias[],System.UInt32@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugBinder3.GetEEService(System.Guid,System.Guid,System.Guid,System.Object@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugBinder3.GetExceptionObjectAndType(Microsoft.VisualStudio.Debugger.Interop.IDebugObject@,Microsoft.VisualStudio.Debugger.Interop.IDebugField@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugBinder3.GetFunctionObject(Microsoft.VisualStudio.Debugger.Interop.IDebugFunctionObject@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugBinder3.GetMemoryContext(Microsoft.VisualStudio.Debugger.Interop.IDebugField,System.UInt32,Microsoft.VisualStudio.Debugger.Interop.IDebugMemoryContext2@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugBinder3.GetMemoryContext64(Microsoft.VisualStudio.Debugger.Interop.IDebugField,System.UInt64,Microsoft.VisualStudio.Debugger.Interop.IDebugMemoryContext2@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugBinder3.GetMemoryObject(Microsoft.VisualStudio.Debugger.Interop.IDebugField,System.UInt64,Microsoft.VisualStudio.Debugger.Interop.IDebugObject@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugBinder3.GetTypeArgumentCount(System.UInt32@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugBinder3.GetTypeArguments(System.UInt32,System.UInt32,Microsoft.VisualStudio.Debugger.Interop.IDebugField[],System.UInt32@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugBinder3.ResolveDynamicType(Microsoft.VisualStudio.Debugger.Interop.IDebugDynamicField,Microsoft.VisualStudio.Debugger.Interop.IDebugField@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugBinder3.ResolveRuntimeType(Microsoft.VisualStudio.Debugger.Interop.IDebugObject,Microsoft.VisualStudio.Debugger.Interop.IDebugField@)"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.IDebugBoundBreakpoint2"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugBoundBreakpoint2.Delete"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugBoundBreakpoint2.Enable(System.Int32)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugBoundBreakpoint2.GetBreakpointResolution(Microsoft.VisualStudio.Debugger.Interop.IDebugBreakpointResolution2@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugBoundBreakpoint2.GetHitCount(System.UInt32@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugBoundBreakpoint2.GetPendingBreakpoint(Microsoft.VisualStudio.Debugger.Interop.IDebugPendingBreakpoint2@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugBoundBreakpoint2.GetState(Microsoft.VisualStudio.Debugger.Interop.enum_BP_STATE[])"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugBoundBreakpoint2.SetCondition(Microsoft.VisualStudio.Debugger.Interop.BP_CONDITION)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugBoundBreakpoint2.SetHitCount(System.UInt32)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugBoundBreakpoint2.SetPassCount(Microsoft.VisualStudio.Debugger.Interop.BP_PASSCOUNT)"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.IDebugBoundBreakpoint3"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugBoundBreakpoint3.SetTracepoint(System.String,Microsoft.VisualStudio.Debugger.Interop.enum_BP_FLAGS)"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.IDebugBreakEvent2"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.IDebugBreakpointBoundEvent2"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugBreakpointBoundEvent2.EnumBoundBreakpoints(Microsoft.VisualStudio.Debugger.Interop.IEnumDebugBoundBreakpoints2@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugBreakpointBoundEvent2.GetPendingBreakpoint(Microsoft.VisualStudio.Debugger.Interop.IDebugPendingBreakpoint2@)"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.IDebugBreakpointChecksumRequest2"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugBreakpointChecksumRequest2.GetChecksum(System.Guid@,Microsoft.VisualStudio.Debugger.Interop.CHECKSUM_DATA[])"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugBreakpointChecksumRequest2.IsChecksumEnabled(System.Int32@)"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.IDebugBreakpointErrorEvent2"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugBreakpointErrorEvent2.GetErrorBreakpoint(Microsoft.VisualStudio.Debugger.Interop.IDebugErrorBreakpoint2@)"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.IDebugBreakpointEvent2"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugBreakpointEvent2.EnumBreakpoints(Microsoft.VisualStudio.Debugger.Interop.IEnumDebugBoundBreakpoints2@)"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.IDebugBreakpointRequest2"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugBreakpointRequest2.GetLocationType(Microsoft.VisualStudio.Debugger.Interop.enum_BP_LOCATION_TYPE[])"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugBreakpointRequest2.GetRequestInfo(Microsoft.VisualStudio.Debugger.Interop.enum_BPREQI_FIELDS,Microsoft.VisualStudio.Debugger.Interop.BP_REQUEST_INFO[])"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.IDebugBreakpointRequest3"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugBreakpointRequest3.GetLocationType(Microsoft.VisualStudio.Debugger.Interop.enum_BP_LOCATION_TYPE[])"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugBreakpointRequest3.GetRequestInfo(Microsoft.VisualStudio.Debugger.Interop.enum_BPREQI_FIELDS,Microsoft.VisualStudio.Debugger.Interop.BP_REQUEST_INFO[])"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugBreakpointRequest3.GetRequestInfo2(Microsoft.VisualStudio.Debugger.Interop.enum_BPREQI_FIELDS,Microsoft.VisualStudio.Debugger.Interop.BP_REQUEST_INFO2[])"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.IDebugBreakpointResolution2"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugBreakpointResolution2.GetBreakpointType(Microsoft.VisualStudio.Debugger.Interop.enum_BP_TYPE[])"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugBreakpointResolution2.GetResolutionInfo(Microsoft.VisualStudio.Debugger.Interop.enum_BPRESI_FIELDS,Microsoft.VisualStudio.Debugger.Interop.BP_RESOLUTION_INFO[])"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.IDebugBreakpointUnboundEvent2"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugBreakpointUnboundEvent2.GetBreakpoint(Microsoft.VisualStudio.Debugger.Interop.IDebugBoundBreakpoint2@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugBreakpointUnboundEvent2.GetReason(Microsoft.VisualStudio.Debugger.Interop.enum_BP_UNBOUND_REASON[])"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.IDebugCanStopEvent2"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugCanStopEvent2.CanStop(System.Int32)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugCanStopEvent2.GetCodeContext(Microsoft.VisualStudio.Debugger.Interop.IDebugCodeContext2@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugCanStopEvent2.GetDocumentContext(Microsoft.VisualStudio.Debugger.Interop.IDebugDocumentContext2@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugCanStopEvent2.GetReason(Microsoft.VisualStudio.Debugger.Interop.enum_CANSTOP_REASON[])"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.IDebugClassField"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugClassField.DoesInterfaceExist(System.String)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugClassField.EnumBaseClasses(Microsoft.VisualStudio.Debugger.Interop.IEnumDebugFields@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugClassField.EnumConstructors(Microsoft.VisualStudio.Debugger.Interop.CONSTRUCTOR_ENUM,Microsoft.VisualStudio.Debugger.Interop.IEnumDebugFields@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugClassField.EnumFields(Microsoft.VisualStudio.Debugger.Interop.enum_FIELD_KIND,Microsoft.VisualStudio.Debugger.Interop.enum_FIELD_MODIFIERS,System.String,Microsoft.VisualStudio.Debugger.Interop.NAME_MATCH,Microsoft.VisualStudio.Debugger.Interop.IEnumDebugFields@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugClassField.EnumInterfacesImplemented(Microsoft.VisualStudio.Debugger.Interop.IEnumDebugFields@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugClassField.EnumNestedClasses(Microsoft.VisualStudio.Debugger.Interop.IEnumDebugFields@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugClassField.EnumNestedEnums(Microsoft.VisualStudio.Debugger.Interop.IEnumDebugFields@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugClassField.Equal(Microsoft.VisualStudio.Debugger.Interop.IDebugField)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugClassField.GetAddress(Microsoft.VisualStudio.Debugger.Interop.IDebugAddress@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugClassField.GetContainer(Microsoft.VisualStudio.Debugger.Interop.IDebugContainerField@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugClassField.GetDefaultIndexer(System.String@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugClassField.GetEnclosingClass(Microsoft.VisualStudio.Debugger.Interop.IDebugClassField@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugClassField.GetExtendedInfo(System.Guid@,System.IntPtr[],System.UInt32@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugClassField.GetInfo(Microsoft.VisualStudio.Debugger.Interop.enum_FIELD_INFO_FIELDS,Microsoft.VisualStudio.Debugger.Interop.FIELD_INFO[])"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugClassField.GetKind(Microsoft.VisualStudio.Debugger.Interop.enum_FIELD_KIND[])"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugClassField.GetSize(System.UInt32@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugClassField.GetType(Microsoft.VisualStudio.Debugger.Interop.IDebugField@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugClassField.GetTypeInfo(Microsoft.VisualStudio.Debugger.Interop.TYPE_INFO[])"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.IDebugCodeContext2"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugCodeContext2.Add(System.UInt64,Microsoft.VisualStudio.Debugger.Interop.IDebugMemoryContext2@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugCodeContext2.Compare(Microsoft.VisualStudio.Debugger.Interop.enum_CONTEXT_COMPARE,Microsoft.VisualStudio.Debugger.Interop.IDebugMemoryContext2[],System.UInt32,System.UInt32@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugCodeContext2.GetDocumentContext(Microsoft.VisualStudio.Debugger.Interop.IDebugDocumentContext2@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugCodeContext2.GetInfo(Microsoft.VisualStudio.Debugger.Interop.enum_CONTEXT_INFO_FIELDS,Microsoft.VisualStudio.Debugger.Interop.CONTEXT_INFO[])"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugCodeContext2.GetLanguageInfo(System.String@,System.Guid@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugCodeContext2.GetName(System.String@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugCodeContext2.Subtract(System.UInt64,Microsoft.VisualStudio.Debugger.Interop.IDebugMemoryContext2@)"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.IDebugCodeContext3"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugCodeContext3.Add(System.UInt64,Microsoft.VisualStudio.Debugger.Interop.IDebugMemoryContext2@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugCodeContext3.Compare(Microsoft.VisualStudio.Debugger.Interop.enum_CONTEXT_COMPARE,Microsoft.VisualStudio.Debugger.Interop.IDebugMemoryContext2[],System.UInt32,System.UInt32@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugCodeContext3.GetDocumentContext(Microsoft.VisualStudio.Debugger.Interop.IDebugDocumentContext2@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugCodeContext3.GetInfo(Microsoft.VisualStudio.Debugger.Interop.enum_CONTEXT_INFO_FIELDS,Microsoft.VisualStudio.Debugger.Interop.CONTEXT_INFO[])"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugCodeContext3.GetLanguageInfo(System.String@,System.Guid@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugCodeContext3.GetModule(Microsoft.VisualStudio.Debugger.Interop.IDebugModule2@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugCodeContext3.GetName(System.String@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugCodeContext3.GetProcess(Microsoft.VisualStudio.Debugger.Interop.IDebugProcess2@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugCodeContext3.Subtract(System.UInt64,Microsoft.VisualStudio.Debugger.Interop.IDebugMemoryContext2@)"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.IDebugCOMPlusProgramNode2"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugCOMPlusProgramNode2.GetAppDomainId(System.UInt32@)"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.IDebugComPlusSymbolProvider"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugComPlusSymbolProvider.AreSymbolsLoaded(System.UInt32,System.Guid)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugComPlusSymbolProvider.CreateTypeFromPrimitive(System.UInt32,Microsoft.VisualStudio.Debugger.Interop.IDebugAddress,Microsoft.VisualStudio.Debugger.Interop.IDebugField@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugComPlusSymbolProvider.GetAddressesFromContext(Microsoft.VisualStudio.Debugger.Interop.IDebugDocumentContext2,System.Int32,Microsoft.VisualStudio.Debugger.Interop.IEnumDebugAddresses@,Microsoft.VisualStudio.Debugger.Interop.IEnumDebugAddresses@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugComPlusSymbolProvider.GetAddressesFromPosition(Microsoft.VisualStudio.Debugger.Interop.IDebugDocumentPosition2,System.Int32,Microsoft.VisualStudio.Debugger.Interop.IEnumDebugAddresses@,Microsoft.VisualStudio.Debugger.Interop.IEnumDebugAddresses@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugComPlusSymbolProvider.GetAddressesInModuleFromPosition(System.UInt32,System.Guid,Microsoft.VisualStudio.Debugger.Interop.IDebugDocumentPosition2,System.Int32,Microsoft.VisualStudio.Debugger.Interop.IEnumDebugAddresses@,Microsoft.VisualStudio.Debugger.Interop.IEnumDebugAddresses@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugComPlusSymbolProvider.GetArrayTypeFromAddress(Microsoft.VisualStudio.Debugger.Interop.IDebugAddress,System.Byte[],System.UInt32,Microsoft.VisualStudio.Debugger.Interop.IDebugField@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugComPlusSymbolProvider.GetAssemblyName(System.UInt32,System.Guid,System.String@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugComPlusSymbolProvider.GetAttributedClassesForLanguage(System.Guid,System.String,Microsoft.VisualStudio.Debugger.Interop.IEnumDebugFields@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugComPlusSymbolProvider.GetAttributedClassesinModule(System.UInt32,System.Guid,System.String,Microsoft.VisualStudio.Debugger.Interop.IEnumDebugFields@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugComPlusSymbolProvider.GetClassTypeByName(System.String,Microsoft.VisualStudio.Debugger.Interop.NAME_MATCH,Microsoft.VisualStudio.Debugger.Interop.IDebugClassField@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugComPlusSymbolProvider.GetContainerField(Microsoft.VisualStudio.Debugger.Interop.IDebugAddress,Microsoft.VisualStudio.Debugger.Interop.IDebugContainerField@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugComPlusSymbolProvider.GetContextFromAddress(Microsoft.VisualStudio.Debugger.Interop.IDebugAddress,Microsoft.VisualStudio.Debugger.Interop.IDebugDocumentContext2@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugComPlusSymbolProvider.GetEntryPoint(System.UInt32,System.Guid,Microsoft.VisualStudio.Debugger.Interop.IDebugAddress@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugComPlusSymbolProvider.GetField(Microsoft.VisualStudio.Debugger.Interop.IDebugAddress,Microsoft.VisualStudio.Debugger.Interop.IDebugAddress,Microsoft.VisualStudio.Debugger.Interop.IDebugField@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugComPlusSymbolProvider.GetFunctionLineOffset(Microsoft.VisualStudio.Debugger.Interop.IDebugAddress,System.UInt32,Microsoft.VisualStudio.Debugger.Interop.IDebugAddress@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugComPlusSymbolProvider.GetGlobalContainer(Microsoft.VisualStudio.Debugger.Interop.IDebugContainerField@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugComPlusSymbolProvider.GetLanguage(Microsoft.VisualStudio.Debugger.Interop.IDebugAddress,System.Guid@,System.Guid@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugComPlusSymbolProvider.GetLocalVariablelayout(System.UInt32,System.Guid,System.UInt32,System.Int32[],Microsoft.VisualStudio.OLE.Interop.IStream@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugComPlusSymbolProvider.GetMethodFieldsByName(System.String,Microsoft.VisualStudio.Debugger.Interop.NAME_MATCH,Microsoft.VisualStudio.Debugger.Interop.IEnumDebugFields@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugComPlusSymbolProvider.GetNameFromToken(System.Object,System.UInt32,System.String@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugComPlusSymbolProvider.GetNamespacesUsedAtAddress(Microsoft.VisualStudio.Debugger.Interop.IDebugAddress,Microsoft.VisualStudio.Debugger.Interop.IEnumDebugFields@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugComPlusSymbolProvider.GetNextAddress(Microsoft.VisualStudio.Debugger.Interop.IDebugAddress,System.Int32,Microsoft.VisualStudio.Debugger.Interop.IDebugAddress@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugComPlusSymbolProvider.GetSymAttribute(System.UInt32,System.Guid,System.Int32,System.String,System.UInt32,System.UInt32@,System.Byte[])"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugComPlusSymbolProvider.GetSymUnmanagedReader(System.UInt32,System.Guid,System.Object@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugComPlusSymbolProvider.GetTypeByName(System.String,Microsoft.VisualStudio.Debugger.Interop.NAME_MATCH,Microsoft.VisualStudio.Debugger.Interop.IDebugField@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugComPlusSymbolProvider.GetTypeFromAddress(Microsoft.VisualStudio.Debugger.Interop.IDebugAddress,Microsoft.VisualStudio.Debugger.Interop.IDebugField@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugComPlusSymbolProvider.Initialize(Microsoft.VisualStudio.Debugger.Interop.IDebugEngineSymbolProviderServices)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugComPlusSymbolProvider.IsFunctionDeleted(Microsoft.VisualStudio.Debugger.Interop.IDebugAddress)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugComPlusSymbolProvider.IsFunctionStale(Microsoft.VisualStudio.Debugger.Interop.IDebugAddress)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugComPlusSymbolProvider.IsHiddenCode(Microsoft.VisualStudio.Debugger.Interop.IDebugAddress)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugComPlusSymbolProvider.LoadSymbols(System.UInt32,System.Guid,System.UInt64,System.Object,System.String,System.String)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugComPlusSymbolProvider.LoadSymbolsFromStream(System.UInt32,System.Guid,System.UInt64,System.Object,Microsoft.VisualStudio.OLE.Interop.IStream)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugComPlusSymbolProvider.ReplaceSymbols(System.UInt32,System.Guid,Microsoft.VisualStudio.OLE.Interop.IStream)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugComPlusSymbolProvider.Uninitialize"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugComPlusSymbolProvider.UnloadSymbols(System.UInt32,System.Guid)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugComPlusSymbolProvider.UpdateSymbols(System.UInt32,System.Guid,Microsoft.VisualStudio.OLE.Interop.IStream)"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.IDebugComPlusSymbolProvider2"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugComPlusSymbolProvider2.AreSymbolsLoaded(System.UInt32,System.Guid)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugComPlusSymbolProvider2.CreateTypeFromPrimitive(System.UInt32,Microsoft.VisualStudio.Debugger.Interop.IDebugAddress,Microsoft.VisualStudio.Debugger.Interop.IDebugField@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugComPlusSymbolProvider2.FunctionHasLineInfo(Microsoft.VisualStudio.Debugger.Interop.IDebugAddress)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugComPlusSymbolProvider2.GetAddressesFromContext(Microsoft.VisualStudio.Debugger.Interop.IDebugDocumentContext2,System.Int32,Microsoft.VisualStudio.Debugger.Interop.IEnumDebugAddresses@,Microsoft.VisualStudio.Debugger.Interop.IEnumDebugAddresses@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugComPlusSymbolProvider2.GetAddressesFromPosition(Microsoft.VisualStudio.Debugger.Interop.IDebugDocumentPosition2,System.Int32,Microsoft.VisualStudio.Debugger.Interop.IEnumDebugAddresses@,Microsoft.VisualStudio.Debugger.Interop.IEnumDebugAddresses@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugComPlusSymbolProvider2.GetAddressesInModuleFromPosition(System.UInt32,System.Guid,Microsoft.VisualStudio.Debugger.Interop.IDebugDocumentPosition2,System.Int32,Microsoft.VisualStudio.Debugger.Interop.IEnumDebugAddresses@,Microsoft.VisualStudio.Debugger.Interop.IEnumDebugAddresses@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugComPlusSymbolProvider2.GetArrayTypeFromAddress(Microsoft.VisualStudio.Debugger.Interop.IDebugAddress,System.Byte[],System.UInt32,Microsoft.VisualStudio.Debugger.Interop.IDebugField@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugComPlusSymbolProvider2.GetAssemblyName(System.UInt32,System.Guid,System.String@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugComPlusSymbolProvider2.GetAttributedClassesForLanguage(System.Guid,System.String,Microsoft.VisualStudio.Debugger.Interop.IEnumDebugFields@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugComPlusSymbolProvider2.GetAttributedClassesinModule(System.UInt32,System.Guid,System.String,Microsoft.VisualStudio.Debugger.Interop.IEnumDebugFields@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugComPlusSymbolProvider2.GetClassTypeByName(System.String,Microsoft.VisualStudio.Debugger.Interop.NAME_MATCH,Microsoft.VisualStudio.Debugger.Interop.IDebugClassField@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugComPlusSymbolProvider2.GetContainerField(Microsoft.VisualStudio.Debugger.Interop.IDebugAddress,Microsoft.VisualStudio.Debugger.Interop.IDebugContainerField@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugComPlusSymbolProvider2.GetContextFromAddress(Microsoft.VisualStudio.Debugger.Interop.IDebugAddress,Microsoft.VisualStudio.Debugger.Interop.IDebugDocumentContext2@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugComPlusSymbolProvider2.GetEntryPoint(System.UInt32,System.Guid,Microsoft.VisualStudio.Debugger.Interop.IDebugAddress@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugComPlusSymbolProvider2.GetField(Microsoft.VisualStudio.Debugger.Interop.IDebugAddress,Microsoft.VisualStudio.Debugger.Interop.IDebugAddress,Microsoft.VisualStudio.Debugger.Interop.IDebugField@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugComPlusSymbolProvider2.GetFunctionLineOffset(Microsoft.VisualStudio.Debugger.Interop.IDebugAddress,System.UInt32,Microsoft.VisualStudio.Debugger.Interop.IDebugAddress@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugComPlusSymbolProvider2.GetGlobalContainer(Microsoft.VisualStudio.Debugger.Interop.IDebugContainerField@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugComPlusSymbolProvider2.GetLanguage(Microsoft.VisualStudio.Debugger.Interop.IDebugAddress,System.Guid@,System.Guid@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugComPlusSymbolProvider2.GetLocalVariablelayout(System.UInt32,System.Guid,System.UInt32,System.Int32[],Microsoft.VisualStudio.OLE.Interop.IStream@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugComPlusSymbolProvider2.GetMethodFieldsByName(System.String,Microsoft.VisualStudio.Debugger.Interop.NAME_MATCH,Microsoft.VisualStudio.Debugger.Interop.IEnumDebugFields@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugComPlusSymbolProvider2.GetNameFromToken(System.Object,System.UInt32,System.String@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugComPlusSymbolProvider2.GetNamespacesUsedAtAddress(Microsoft.VisualStudio.Debugger.Interop.IDebugAddress,Microsoft.VisualStudio.Debugger.Interop.IEnumDebugFields@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugComPlusSymbolProvider2.GetNextAddress(Microsoft.VisualStudio.Debugger.Interop.IDebugAddress,System.Int32,Microsoft.VisualStudio.Debugger.Interop.IDebugAddress@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugComPlusSymbolProvider2.GetSymAttribute(System.UInt32,System.Guid,System.Int32,System.String,System.UInt32,System.UInt32@,System.Byte[])"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugComPlusSymbolProvider2.GetSymUnmanagedReader(System.UInt32,System.Guid,System.Object@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugComPlusSymbolProvider2.GetTypeByName(System.String,Microsoft.VisualStudio.Debugger.Interop.NAME_MATCH,Microsoft.VisualStudio.Debugger.Interop.IDebugField@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugComPlusSymbolProvider2.GetTypeFromAddress(Microsoft.VisualStudio.Debugger.Interop.IDebugAddress,Microsoft.VisualStudio.Debugger.Interop.IDebugField@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugComPlusSymbolProvider2.GetTypeFromToken(System.UInt32,System.Guid,System.UInt32,Microsoft.VisualStudio.Debugger.Interop.IDebugField@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugComPlusSymbolProvider2.GetTypesByName(System.String,Microsoft.VisualStudio.Debugger.Interop.NAME_MATCH,Microsoft.VisualStudio.Debugger.Interop.IEnumDebugFields@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugComPlusSymbolProvider2.Initialize(Microsoft.VisualStudio.Debugger.Interop.IDebugEngineSymbolProviderServices)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugComPlusSymbolProvider2.IsAddressSequencePoint(Microsoft.VisualStudio.Debugger.Interop.IDebugAddress)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugComPlusSymbolProvider2.IsFunctionDeleted(Microsoft.VisualStudio.Debugger.Interop.IDebugAddress)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugComPlusSymbolProvider2.IsFunctionStale(Microsoft.VisualStudio.Debugger.Interop.IDebugAddress)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugComPlusSymbolProvider2.IsHiddenCode(Microsoft.VisualStudio.Debugger.Interop.IDebugAddress)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugComPlusSymbolProvider2.LoadSymbols(System.UInt32,System.Guid,System.UInt64,System.Object,System.String,System.String)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugComPlusSymbolProvider2.LoadSymbolsFromCallback(System.UInt32,System.Guid,System.Object,System.Object,System.String,System.String,System.Object)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugComPlusSymbolProvider2.LoadSymbolsFromStream(System.UInt32,System.Guid,System.UInt64,System.Object,Microsoft.VisualStudio.OLE.Interop.IStream)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugComPlusSymbolProvider2.LoadSymbolsFromStreamWithCorModule(System.UInt32,System.Guid,System.UInt64,System.Object,System.Object,Microsoft.VisualStudio.OLE.Interop.IStream)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugComPlusSymbolProvider2.LoadSymbolsWithCorModule(System.UInt32,System.Guid,System.UInt64,System.Object,System.Object,System.String,System.String)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugComPlusSymbolProvider2.ReplaceSymbols(System.UInt32,System.Guid,Microsoft.VisualStudio.OLE.Interop.IStream)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugComPlusSymbolProvider2.Uninitialize"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugComPlusSymbolProvider2.UnloadSymbols(System.UInt32,System.Guid)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugComPlusSymbolProvider2.UpdateSymbols(System.UInt32,System.Guid,Microsoft.VisualStudio.OLE.Interop.IStream)"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.IDebugContainerField"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugContainerField.EnumFields(Microsoft.VisualStudio.Debugger.Interop.enum_FIELD_KIND,Microsoft.VisualStudio.Debugger.Interop.enum_FIELD_MODIFIERS,System.String,Microsoft.VisualStudio.Debugger.Interop.NAME_MATCH,Microsoft.VisualStudio.Debugger.Interop.IEnumDebugFields@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugContainerField.Equal(Microsoft.VisualStudio.Debugger.Interop.IDebugField)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugContainerField.GetAddress(Microsoft.VisualStudio.Debugger.Interop.IDebugAddress@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugContainerField.GetContainer(Microsoft.VisualStudio.Debugger.Interop.IDebugContainerField@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugContainerField.GetExtendedInfo(System.Guid@,System.IntPtr[],System.UInt32@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugContainerField.GetInfo(Microsoft.VisualStudio.Debugger.Interop.enum_FIELD_INFO_FIELDS,Microsoft.VisualStudio.Debugger.Interop.FIELD_INFO[])"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugContainerField.GetKind(Microsoft.VisualStudio.Debugger.Interop.enum_FIELD_KIND[])"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugContainerField.GetSize(System.UInt32@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugContainerField.GetType(Microsoft.VisualStudio.Debugger.Interop.IDebugField@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugContainerField.GetTypeInfo(Microsoft.VisualStudio.Debugger.Interop.TYPE_INFO[])"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.IDebugCoreServer2"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugCoreServer2.EnumPorts(Microsoft.VisualStudio.Debugger.Interop.IEnumDebugPorts2@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugCoreServer2.EnumPortSuppliers(Microsoft.VisualStudio.Debugger.Interop.IEnumDebugPortSuppliers2@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugCoreServer2.GetMachineInfo(Microsoft.VisualStudio.Debugger.Interop.enum_MACHINE_INFO_FIELDS,Microsoft.VisualStudio.Debugger.Interop.MACHINE_INFO[])"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugCoreServer2.GetMachineName(System.String@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugCoreServer2.GetPort(System.Guid@,Microsoft.VisualStudio.Debugger.Interop.IDebugPort2@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugCoreServer2.GetPortSupplier(System.Guid@,Microsoft.VisualStudio.Debugger.Interop.IDebugPortSupplier2@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugCoreServer2.Unused"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.IDebugCoreServer3"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugCoreServer3.CreateInstanceInServer(System.String,System.UInt16,System.Guid@,System.Guid@,System.IntPtr@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugCoreServer3.DiagnoseWebDebuggingError(System.String)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugCoreServer3.DisableAutoAttach"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugCoreServer3.EnableAutoAttach(System.Guid[],System.UInt32,System.String,System.String@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugCoreServer3.EnumPorts(Microsoft.VisualStudio.Debugger.Interop.IEnumDebugPorts2@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugCoreServer3.EnumPortSuppliers(Microsoft.VisualStudio.Debugger.Interop.IEnumDebugPortSuppliers2@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugCoreServer3.GetConnectionProtocol(Microsoft.VisualStudio.Debugger.Interop.CONNECTION_PROTOCOL[])"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugCoreServer3.GetMachineInfo(Microsoft.VisualStudio.Debugger.Interop.enum_MACHINE_INFO_FIELDS,Microsoft.VisualStudio.Debugger.Interop.MACHINE_INFO[])"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugCoreServer3.GetMachineName(System.String@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugCoreServer3.GetPort(System.Guid@,Microsoft.VisualStudio.Debugger.Interop.IDebugPort2@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugCoreServer3.GetPortSupplier(System.Guid@,Microsoft.VisualStudio.Debugger.Interop.IDebugPortSupplier2@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugCoreServer3.GetServerFriendlyName(System.String@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugCoreServer3.GetServerName(System.String@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugCoreServer3.QueryIsLocal"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugCoreServer3.Unused"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.IDebugCustomAttribute"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugCustomAttribute.GetAttributeBytes(System.Byte[],System.UInt32@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugCustomAttribute.GetAttributeTypeField(Microsoft.VisualStudio.Debugger.Interop.IDebugClassField@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugCustomAttribute.GetName(System.String@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugCustomAttribute.GetParentField(Microsoft.VisualStudio.Debugger.Interop.IDebugField@)"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.IDebugCustomAttributeQuery"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugCustomAttributeQuery.GetCustomAttributeByName(System.String,System.Byte[],System.UInt32@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugCustomAttributeQuery.IsCustomAttributeDefined(System.String)"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.IDebugCustomAttributeQuery2"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugCustomAttributeQuery2.EnumCustomAttributes(Microsoft.VisualStudio.Debugger.Interop.IEnumDebugCustomAttributes@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugCustomAttributeQuery2.GetCustomAttributeByName(System.String,System.Byte[],System.UInt32@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugCustomAttributeQuery2.IsCustomAttributeDefined(System.String)"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.IDebugCustomViewer"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugCustomViewer.DisplayValue(System.IntPtr,System.UInt32,System.Object,Microsoft.VisualStudio.Debugger.Interop.IDebugProperty3)"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.IDebugDataGrid"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugDataGrid.GetGridInfo(System.UInt32@,System.UInt32@,System.String@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugDataGrid.GetGridPropertyInfo(System.UInt32,System.UInt32,System.UInt32,System.UInt32,System.UInt32,Microsoft.VisualStudio.Debugger.Interop.enum_DEBUGPROP_INFO_FLAGS,System.UInt32,Microsoft.VisualStudio.Debugger.Interop.DEBUG_PROPERTY_INFO[],System.UInt32@)"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.IDebugDefaultPort2"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugDefaultPort2.EnumProcesses(Microsoft.VisualStudio.Debugger.Interop.IEnumDebugProcesses2@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugDefaultPort2.GetPortId(System.Guid@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugDefaultPort2.GetPortName(System.String@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugDefaultPort2.GetPortNotify(Microsoft.VisualStudio.Debugger.Interop.IDebugPortNotify2@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugDefaultPort2.GetPortRequest(Microsoft.VisualStudio.Debugger.Interop.IDebugPortRequest2@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugDefaultPort2.GetPortSupplier(Microsoft.VisualStudio.Debugger.Interop.IDebugPortSupplier2@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugDefaultPort2.GetProcess(Microsoft.VisualStudio.Debugger.Interop.AD_PROCESS_ID,Microsoft.VisualStudio.Debugger.Interop.IDebugProcess2@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugDefaultPort2.GetServer(Microsoft.VisualStudio.Debugger.Interop.IDebugCoreServer3@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugDefaultPort2.QueryIsLocal"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.IDebugDisassemblyStream2"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugDisassemblyStream2.GetCodeContext(System.UInt64,Microsoft.VisualStudio.Debugger.Interop.IDebugCodeContext2@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugDisassemblyStream2.GetCodeLocationId(Microsoft.VisualStudio.Debugger.Interop.IDebugCodeContext2,System.UInt64@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugDisassemblyStream2.GetCurrentLocation(System.UInt64@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugDisassemblyStream2.GetDocument(System.String,Microsoft.VisualStudio.Debugger.Interop.IDebugDocument2@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugDisassemblyStream2.GetScope(Microsoft.VisualStudio.Debugger.Interop.enum_DISASSEMBLY_STREAM_SCOPE[])"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugDisassemblyStream2.GetSize(System.UInt64@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugDisassemblyStream2.Read(System.UInt32,Microsoft.VisualStudio.Debugger.Interop.enum_DISASSEMBLY_STREAM_FIELDS,System.UInt32@,Microsoft.VisualStudio.Debugger.Interop.DisassemblyData[])"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugDisassemblyStream2.Seek(Microsoft.VisualStudio.Debugger.Interop.enum_SEEK_START,Microsoft.VisualStudio.Debugger.Interop.IDebugCodeContext2,System.UInt64,System.Int64)"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.IDebugDocument2"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugDocument2.GetDocumentClassId(System.Guid@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugDocument2.GetName(Microsoft.VisualStudio.Debugger.Interop.enum_GETNAME_TYPE,System.String@)"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.IDebugDocumentChecksum2"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugDocumentChecksum2.GetChecksumAndAlgorithmId(System.Guid@,System.UInt32,System.Byte[],System.UInt32@)"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.IDebugDocumentContext2"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugDocumentContext2.Compare(Microsoft.VisualStudio.Debugger.Interop.enum_DOCCONTEXT_COMPARE,Microsoft.VisualStudio.Debugger.Interop.IDebugDocumentContext2[],System.UInt32,System.UInt32@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugDocumentContext2.EnumCodeContexts(Microsoft.VisualStudio.Debugger.Interop.IEnumDebugCodeContexts2@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugDocumentContext2.GetDocument(Microsoft.VisualStudio.Debugger.Interop.IDebugDocument2@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugDocumentContext2.GetLanguageInfo(System.String@,System.Guid@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugDocumentContext2.GetName(Microsoft.VisualStudio.Debugger.Interop.enum_GETNAME_TYPE,System.String@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugDocumentContext2.GetSourceRange(Microsoft.VisualStudio.Debugger.Interop.TEXT_POSITION[],Microsoft.VisualStudio.Debugger.Interop.TEXT_POSITION[])"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugDocumentContext2.GetStatementRange(Microsoft.VisualStudio.Debugger.Interop.TEXT_POSITION[],Microsoft.VisualStudio.Debugger.Interop.TEXT_POSITION[])"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugDocumentContext2.Seek(System.Int32,Microsoft.VisualStudio.Debugger.Interop.IDebugDocumentContext2@)"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.IDebugDocumentPosition2"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugDocumentPosition2.GetDocument(Microsoft.VisualStudio.Debugger.Interop.IDebugDocument2@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugDocumentPosition2.GetFileName(System.String@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugDocumentPosition2.GetRange(Microsoft.VisualStudio.Debugger.Interop.TEXT_POSITION[],Microsoft.VisualStudio.Debugger.Interop.TEXT_POSITION[])"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugDocumentPosition2.IsPositionInDocument(Microsoft.VisualStudio.Debugger.Interop.IDebugDocument2)"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.IDebugDocumentPositionOffset2"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugDocumentPositionOffset2.GetRange(System.UInt32@,System.UInt32@)"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.IDebugDocumentText2"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugDocumentText2.GetDocumentClassId(System.Guid@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugDocumentText2.GetName(Microsoft.VisualStudio.Debugger.Interop.enum_GETNAME_TYPE,System.String@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugDocumentText2.GetSize(System.UInt32@,System.UInt32@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugDocumentText2.GetText(Microsoft.VisualStudio.Debugger.Interop.TEXT_POSITION,System.UInt32,System.IntPtr,System.UInt32@)"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.IDebugDocumentTextEvents2"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugDocumentTextEvents2.onDestroy"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugDocumentTextEvents2.onInsertText(Microsoft.VisualStudio.Debugger.Interop.TEXT_POSITION,System.UInt32)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugDocumentTextEvents2.onRemoveText(Microsoft.VisualStudio.Debugger.Interop.TEXT_POSITION,System.UInt32)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugDocumentTextEvents2.onReplaceText(Microsoft.VisualStudio.Debugger.Interop.TEXT_POSITION,System.UInt32)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugDocumentTextEvents2.onUpdateDocumentAttributes(System.UInt32)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugDocumentTextEvents2.onUpdateTextAttributes(Microsoft.VisualStudio.Debugger.Interop.TEXT_POSITION,System.UInt32)"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.IDebugDynamicField"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugDynamicField.Equal(Microsoft.VisualStudio.Debugger.Interop.IDebugField)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugDynamicField.GetAddress(Microsoft.VisualStudio.Debugger.Interop.IDebugAddress@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugDynamicField.GetContainer(Microsoft.VisualStudio.Debugger.Interop.IDebugContainerField@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugDynamicField.GetExtendedInfo(System.Guid@,System.IntPtr[],System.UInt32@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugDynamicField.GetInfo(Microsoft.VisualStudio.Debugger.Interop.enum_FIELD_INFO_FIELDS,Microsoft.VisualStudio.Debugger.Interop.FIELD_INFO[])"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugDynamicField.GetKind(Microsoft.VisualStudio.Debugger.Interop.enum_FIELD_KIND[])"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugDynamicField.GetSize(System.UInt32@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugDynamicField.GetType(Microsoft.VisualStudio.Debugger.Interop.IDebugField@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugDynamicField.GetTypeInfo(Microsoft.VisualStudio.Debugger.Interop.TYPE_INFO[])"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.IDebugDynamicFieldCOMPlus"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugDynamicFieldCOMPlus.Equal(Microsoft.VisualStudio.Debugger.Interop.IDebugField)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugDynamicFieldCOMPlus.GetAddress(Microsoft.VisualStudio.Debugger.Interop.IDebugAddress@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugDynamicFieldCOMPlus.GetContainer(Microsoft.VisualStudio.Debugger.Interop.IDebugContainerField@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugDynamicFieldCOMPlus.GetExtendedInfo(System.Guid@,System.IntPtr[],System.UInt32@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugDynamicFieldCOMPlus.GetInfo(Microsoft.VisualStudio.Debugger.Interop.enum_FIELD_INFO_FIELDS,Microsoft.VisualStudio.Debugger.Interop.FIELD_INFO[])"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugDynamicFieldCOMPlus.GetKind(Microsoft.VisualStudio.Debugger.Interop.enum_FIELD_KIND[])"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugDynamicFieldCOMPlus.GetSize(System.UInt32@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugDynamicFieldCOMPlus.GetType(Microsoft.VisualStudio.Debugger.Interop.IDebugField@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugDynamicFieldCOMPlus.GetTypeFromPrimitive(System.UInt32,Microsoft.VisualStudio.Debugger.Interop.IDebugField@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugDynamicFieldCOMPlus.GetTypeFromTypeDef(System.UInt32,System.Guid,System.Int32,Microsoft.VisualStudio.Debugger.Interop.IDebugField@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugDynamicFieldCOMPlus.GetTypeInfo(Microsoft.VisualStudio.Debugger.Interop.TYPE_INFO[])"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.IDebugENCDocumentContextUpdate"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugENCDocumentContextUpdate.UpdateDocumentContext(Microsoft.VisualStudio.Debugger.Interop.IDebugCodeContext2,Microsoft.VisualStudio.Debugger.Interop.IDebugDocumentContext2)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugENCDocumentContextUpdate.UpdateStatementPosition(Microsoft.VisualStudio.Debugger.Interop.TEXT_POSITION,Microsoft.VisualStudio.Debugger.Interop.TEXT_POSITION)"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.IDebugEncNotify"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugEncNotify.NotifyEncEditAttemptedAtInvalidStopState"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugEncNotify.NotifyEncEditDisallowedByProject(System.Object)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugEncNotify.NotifyEncIsUnavailable(Microsoft.VisualStudio.Debugger.Interop.EncUnavailableReason,System.Int32)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugEncNotify.NotifyEncUpdateCurrentStatement"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.IDebugEngine2"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugEngine2.Attach(Microsoft.VisualStudio.Debugger.Interop.IDebugProgram2[],Microsoft.VisualStudio.Debugger.Interop.IDebugProgramNode2[],System.UInt32,Microsoft.VisualStudio.Debugger.Interop.IDebugEventCallback2,Microsoft.VisualStudio.Debugger.Interop.enum_ATTACH_REASON)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugEngine2.CauseBreak"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugEngine2.ContinueFromSynchronousEvent(Microsoft.VisualStudio.Debugger.Interop.IDebugEvent2)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugEngine2.CreatePendingBreakpoint(Microsoft.VisualStudio.Debugger.Interop.IDebugBreakpointRequest2,Microsoft.VisualStudio.Debugger.Interop.IDebugPendingBreakpoint2@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugEngine2.DestroyProgram(Microsoft.VisualStudio.Debugger.Interop.IDebugProgram2)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugEngine2.EnumPrograms(Microsoft.VisualStudio.Debugger.Interop.IEnumDebugPrograms2@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugEngine2.GetEngineId(System.Guid@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugEngine2.RemoveAllSetExceptions(System.Guid@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugEngine2.RemoveSetException(Microsoft.VisualStudio.Debugger.Interop.EXCEPTION_INFO[])"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugEngine2.SetException(Microsoft.VisualStudio.Debugger.Interop.EXCEPTION_INFO[])"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugEngine2.SetLocale(System.UInt16)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugEngine2.SetMetric(System.String,System.Object)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugEngine2.SetRegistryRoot(System.String)"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.IDebugEngine3"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugEngine3.Attach(Microsoft.VisualStudio.Debugger.Interop.IDebugProgram2[],Microsoft.VisualStudio.Debugger.Interop.IDebugProgramNode2[],System.UInt32,Microsoft.VisualStudio.Debugger.Interop.IDebugEventCallback2,Microsoft.VisualStudio.Debugger.Interop.enum_ATTACH_REASON)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugEngine3.CauseBreak"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugEngine3.ContinueFromSynchronousEvent(Microsoft.VisualStudio.Debugger.Interop.IDebugEvent2)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugEngine3.CreatePendingBreakpoint(Microsoft.VisualStudio.Debugger.Interop.IDebugBreakpointRequest2,Microsoft.VisualStudio.Debugger.Interop.IDebugPendingBreakpoint2@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugEngine3.DestroyProgram(Microsoft.VisualStudio.Debugger.Interop.IDebugProgram2)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugEngine3.EnumPrograms(Microsoft.VisualStudio.Debugger.Interop.IEnumDebugPrograms2@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugEngine3.GetEngineId(System.Guid@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugEngine3.LoadSymbols"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugEngine3.RemoveAllSetExceptions(System.Guid@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugEngine3.RemoveSetException(Microsoft.VisualStudio.Debugger.Interop.EXCEPTION_INFO[])"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugEngine3.SetAllExceptions(Microsoft.VisualStudio.Debugger.Interop.enum_EXCEPTION_STATE)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugEngine3.SetEngineGuid(System.Guid@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugEngine3.SetException(Microsoft.VisualStudio.Debugger.Interop.EXCEPTION_INFO[])"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugEngine3.SetJustMyCodeState(System.Int32,System.UInt32,Microsoft.VisualStudio.Debugger.Interop.JMC_CODE_SPEC[])"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugEngine3.SetLocale(System.UInt16)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugEngine3.SetMetric(System.String,System.Object)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugEngine3.SetRegistryRoot(System.String)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugEngine3.SetSymbolPath(System.String,System.String,System.UInt32)"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.IDebugEngineCreateEvent2"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugEngineCreateEvent2.GetEngine(Microsoft.VisualStudio.Debugger.Interop.IDebugEngine2@)"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.IDebugEngineJITSettings2"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugEngineJITSettings2.Enable"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugEngineJITSettings2.GetWrappedDebuggers(Microsoft.VisualStudio.Debugger.Interop.WRAPPED_DEBUGGER_ARRAY[])"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugEngineJITSettings2.QueryIsEnabled"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.IDebugEngineLaunch2"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugEngineLaunch2.CanTerminateProcess(Microsoft.VisualStudio.Debugger.Interop.IDebugProcess2)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugEngineLaunch2.LaunchSuspended(System.String,Microsoft.VisualStudio.Debugger.Interop.IDebugPort2,System.String,System.String,System.String,System.String,System.String,Microsoft.VisualStudio.Debugger.Interop.enum_LAUNCH_FLAGS,System.UInt32,System.UInt32,System.UInt32,Microsoft.VisualStudio.Debugger.Interop.IDebugEventCallback2,Microsoft.VisualStudio.Debugger.Interop.IDebugProcess2@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugEngineLaunch2.ResumeProcess(Microsoft.VisualStudio.Debugger.Interop.IDebugProcess2)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugEngineLaunch2.TerminateProcess(Microsoft.VisualStudio.Debugger.Interop.IDebugProcess2)"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.IDebugEngineProgram2"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugEngineProgram2.Stop"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugEngineProgram2.WatchForExpressionEvaluationOnThread(Microsoft.VisualStudio.Debugger.Interop.IDebugProgram2,System.UInt32,System.UInt32,Microsoft.VisualStudio.Debugger.Interop.IDebugEventCallback2,System.Int32)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugEngineProgram2.WatchForThreadStep(Microsoft.VisualStudio.Debugger.Interop.IDebugProgram2,System.UInt32,System.Int32,System.UInt32)"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.IDebugEngineSymbolProviderServices"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugEngineSymbolProviderServices.EnumCodeContexts(Microsoft.VisualStudio.Debugger.Interop.IDebugAddress[],System.UInt32,Microsoft.VisualStudio.Debugger.Interop.IEnumDebugCodeContexts2@)"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.IDebugEngineSymbolProviderServices2"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugEngineSymbolProviderServices2.EnumCodeContexts(Microsoft.VisualStudio.Debugger.Interop.IDebugAddress[],System.UInt32,Microsoft.VisualStudio.Debugger.Interop.IEnumDebugCodeContexts2@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugEngineSymbolProviderServices2.GetEngineProvidedDocumentPrefix(System.String@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugEngineSymbolProviderServices2.ResolveAssembly(System.UInt32,System.Guid,System.UInt32,Microsoft.VisualStudio.Debugger.Interop.RESOLVED_MODULES[])"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.IDebugEntryPointEvent2"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.IDebugEnumField"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugEnumField.EnumFields(Microsoft.VisualStudio.Debugger.Interop.enum_FIELD_KIND,Microsoft.VisualStudio.Debugger.Interop.enum_FIELD_MODIFIERS,System.String,Microsoft.VisualStudio.Debugger.Interop.NAME_MATCH,Microsoft.VisualStudio.Debugger.Interop.IEnumDebugFields@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugEnumField.Equal(Microsoft.VisualStudio.Debugger.Interop.IDebugField)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugEnumField.GetAddress(Microsoft.VisualStudio.Debugger.Interop.IDebugAddress@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugEnumField.GetContainer(Microsoft.VisualStudio.Debugger.Interop.IDebugContainerField@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugEnumField.GetExtendedInfo(System.Guid@,System.IntPtr[],System.UInt32@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugEnumField.GetInfo(Microsoft.VisualStudio.Debugger.Interop.enum_FIELD_INFO_FIELDS,Microsoft.VisualStudio.Debugger.Interop.FIELD_INFO[])"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugEnumField.GetKind(Microsoft.VisualStudio.Debugger.Interop.enum_FIELD_KIND[])"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugEnumField.GetSize(System.UInt32@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugEnumField.GetStringFromValue(System.UInt64,System.String@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugEnumField.GetType(Microsoft.VisualStudio.Debugger.Interop.IDebugField@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugEnumField.GetTypeInfo(Microsoft.VisualStudio.Debugger.Interop.TYPE_INFO[])"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugEnumField.GetUnderlyingSymbol(Microsoft.VisualStudio.Debugger.Interop.IDebugField@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugEnumField.GetValueFromString(System.String,System.UInt64@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugEnumField.GetValueFromStringCaseInsensitive(System.String,System.UInt64@)"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.IDebugErrorBreakpoint2"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugErrorBreakpoint2.GetBreakpointResolution(Microsoft.VisualStudio.Debugger.Interop.IDebugErrorBreakpointResolution2@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugErrorBreakpoint2.GetPendingBreakpoint(Microsoft.VisualStudio.Debugger.Interop.IDebugPendingBreakpoint2@)"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.IDebugErrorBreakpointResolution2"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugErrorBreakpointResolution2.GetBreakpointType(Microsoft.VisualStudio.Debugger.Interop.enum_BP_TYPE[])"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugErrorBreakpointResolution2.GetResolutionInfo(Microsoft.VisualStudio.Debugger.Interop.enum_BPERESI_FIELDS,Microsoft.VisualStudio.Debugger.Interop.BP_ERROR_RESOLUTION_INFO[])"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.IDebugErrorEvent2"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugErrorEvent2.GetErrorMessage(Microsoft.VisualStudio.Debugger.Interop.enum_MESSAGETYPE[],System.String@,System.Int32@,System.UInt32@,System.String@,System.UInt32@)"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.IDebugEvent2"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugEvent2.GetAttributes(System.UInt32@)"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.IDebugEventCallback2"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugEventCallback2.Event(Microsoft.VisualStudio.Debugger.Interop.IDebugEngine2,Microsoft.VisualStudio.Debugger.Interop.IDebugProcess2,Microsoft.VisualStudio.Debugger.Interop.IDebugProgram2,Microsoft.VisualStudio.Debugger.Interop.IDebugThread2,Microsoft.VisualStudio.Debugger.Interop.IDebugEvent2,System.Guid@,System.UInt32)"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.IDebugExceptionCallback2"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugExceptionCallback2.QueryStopOnException(Microsoft.VisualStudio.Debugger.Interop.IDebugProcess2,Microsoft.VisualStudio.Debugger.Interop.IDebugProgram2,Microsoft.VisualStudio.Debugger.Interop.IDebugThread2,Microsoft.VisualStudio.Debugger.Interop.IDebugExceptionEvent2)"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.IDebugExceptionEvent2"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugExceptionEvent2.CanPassToDebuggee"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugExceptionEvent2.GetException(Microsoft.VisualStudio.Debugger.Interop.EXCEPTION_INFO[])"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugExceptionEvent2.GetExceptionDescription(System.String@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugExceptionEvent2.PassToDebuggee(System.Int32)"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.IDebugExpression2"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugExpression2.Abort"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugExpression2.EvaluateAsync(Microsoft.VisualStudio.Debugger.Interop.enum_EVALFLAGS,Microsoft.VisualStudio.Debugger.Interop.IDebugEventCallback2)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugExpression2.EvaluateSync(Microsoft.VisualStudio.Debugger.Interop.enum_EVALFLAGS,System.UInt32,Microsoft.VisualStudio.Debugger.Interop.IDebugEventCallback2,Microsoft.VisualStudio.Debugger.Interop.IDebugProperty2@)"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.IDebugExpressionContext2"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugExpressionContext2.GetName(System.String@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugExpressionContext2.ParseText(System.String,Microsoft.VisualStudio.Debugger.Interop.enum_PARSEFLAGS,System.UInt32,Microsoft.VisualStudio.Debugger.Interop.IDebugExpression2@,System.String@,System.UInt32@)"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.IDebugExpressionEvaluationCompleteEvent2"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugExpressionEvaluationCompleteEvent2.GetExpression(Microsoft.VisualStudio.Debugger.Interop.IDebugExpression2@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugExpressionEvaluationCompleteEvent2.GetResult(Microsoft.VisualStudio.Debugger.Interop.IDebugProperty2@)"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.IDebugExpressionEvaluator"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugExpressionEvaluator.GetMethodLocationProperty(System.String,Microsoft.VisualStudio.Debugger.Interop.IDebugSymbolProvider,Microsoft.VisualStudio.Debugger.Interop.IDebugAddress,Microsoft.VisualStudio.Debugger.Interop.IDebugBinder,Microsoft.VisualStudio.Debugger.Interop.IDebugProperty2@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugExpressionEvaluator.GetMethodProperty(Microsoft.VisualStudio.Debugger.Interop.IDebugSymbolProvider,Microsoft.VisualStudio.Debugger.Interop.IDebugAddress,Microsoft.VisualStudio.Debugger.Interop.IDebugBinder,System.Int32,Microsoft.VisualStudio.Debugger.Interop.IDebugProperty2@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugExpressionEvaluator.Parse(System.String,Microsoft.VisualStudio.Debugger.Interop.enum_PARSEFLAGS,System.UInt32,System.String@,System.UInt32@,Microsoft.VisualStudio.Debugger.Interop.IDebugParsedExpression@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugExpressionEvaluator.SetLocale(System.UInt16)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugExpressionEvaluator.SetRegistryRoot(System.String)"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.IDebugExpressionEvaluator2"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugExpressionEvaluator2.GetMethodLocationProperty(System.String,Microsoft.VisualStudio.Debugger.Interop.IDebugSymbolProvider,Microsoft.VisualStudio.Debugger.Interop.IDebugAddress,Microsoft.VisualStudio.Debugger.Interop.IDebugBinder,Microsoft.VisualStudio.Debugger.Interop.IDebugProperty2@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugExpressionEvaluator2.GetMethodProperty(Microsoft.VisualStudio.Debugger.Interop.IDebugSymbolProvider,Microsoft.VisualStudio.Debugger.Interop.IDebugAddress,Microsoft.VisualStudio.Debugger.Interop.IDebugBinder,System.Int32,Microsoft.VisualStudio.Debugger.Interop.IDebugProperty2@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugExpressionEvaluator2.GetService(System.Guid,System.Object@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugExpressionEvaluator2.Parse(System.String,Microsoft.VisualStudio.Debugger.Interop.enum_PARSEFLAGS,System.UInt32,System.String@,System.UInt32@,Microsoft.VisualStudio.Debugger.Interop.IDebugParsedExpression@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugExpressionEvaluator2.PreloadModules(Microsoft.VisualStudio.Debugger.Interop.IDebugSymbolProvider)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugExpressionEvaluator2.SetCallback(Microsoft.VisualStudio.Debugger.Interop.IDebugSettingsCallback2)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugExpressionEvaluator2.SetCorPath(System.String)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugExpressionEvaluator2.SetIDebugIDECallback(Microsoft.VisualStudio.Debugger.Interop.IDebugIDECallback)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugExpressionEvaluator2.SetLocale(System.UInt16)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugExpressionEvaluator2.SetRegistryRoot(System.String)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugExpressionEvaluator2.Terminate"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.IDebugExpressionEvaluator3"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugExpressionEvaluator3.GetMethodLocationProperty(System.String,Microsoft.VisualStudio.Debugger.Interop.IDebugSymbolProvider,Microsoft.VisualStudio.Debugger.Interop.IDebugAddress,Microsoft.VisualStudio.Debugger.Interop.IDebugBinder,Microsoft.VisualStudio.Debugger.Interop.IDebugProperty2@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugExpressionEvaluator3.GetMethodProperty(Microsoft.VisualStudio.Debugger.Interop.IDebugSymbolProvider,Microsoft.VisualStudio.Debugger.Interop.IDebugAddress,Microsoft.VisualStudio.Debugger.Interop.IDebugBinder,System.Int32,Microsoft.VisualStudio.Debugger.Interop.IDebugProperty2@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugExpressionEvaluator3.GetService(System.Guid,System.Object@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugExpressionEvaluator3.Parse(System.String,Microsoft.VisualStudio.Debugger.Interop.enum_PARSEFLAGS,System.UInt32,System.String@,System.UInt32@,Microsoft.VisualStudio.Debugger.Interop.IDebugParsedExpression@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugExpressionEvaluator3.Parse2(System.String,Microsoft.VisualStudio.Debugger.Interop.enum_PARSEFLAGS,System.UInt32,Microsoft.VisualStudio.Debugger.Interop.IDebugSymbolProvider,Microsoft.VisualStudio.Debugger.Interop.IDebugAddress,System.String@,System.UInt32@,Microsoft.VisualStudio.Debugger.Interop.IDebugParsedExpression@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugExpressionEvaluator3.PreloadModules(Microsoft.VisualStudio.Debugger.Interop.IDebugSymbolProvider)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugExpressionEvaluator3.SetCallback(Microsoft.VisualStudio.Debugger.Interop.IDebugSettingsCallback2)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugExpressionEvaluator3.SetCorPath(System.String)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugExpressionEvaluator3.SetIDebugIDECallback(Microsoft.VisualStudio.Debugger.Interop.IDebugIDECallback)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugExpressionEvaluator3.SetLocale(System.UInt16)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugExpressionEvaluator3.SetRegistryRoot(System.String)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugExpressionEvaluator3.Terminate"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.IDebugExtendedField"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugExtendedField.Equal(Microsoft.VisualStudio.Debugger.Interop.IDebugField)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugExtendedField.GetAddress(Microsoft.VisualStudio.Debugger.Interop.IDebugAddress@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugExtendedField.GetContainer(Microsoft.VisualStudio.Debugger.Interop.IDebugContainerField@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugExtendedField.GetExtendedInfo(System.Guid@,System.IntPtr[],System.UInt32@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugExtendedField.GetExtendedKind(Microsoft.VisualStudio.Debugger.Interop.enum_FIELD_KIND_EX[])"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugExtendedField.GetInfo(Microsoft.VisualStudio.Debugger.Interop.enum_FIELD_INFO_FIELDS,Microsoft.VisualStudio.Debugger.Interop.FIELD_INFO[])"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugExtendedField.GetKind(Microsoft.VisualStudio.Debugger.Interop.enum_FIELD_KIND[])"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugExtendedField.GetSize(System.UInt32@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugExtendedField.GetType(Microsoft.VisualStudio.Debugger.Interop.IDebugField@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugExtendedField.GetTypeInfo(Microsoft.VisualStudio.Debugger.Interop.TYPE_INFO[])"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugExtendedField.IsClosedType"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.IDebugField"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugField.Equal(Microsoft.VisualStudio.Debugger.Interop.IDebugField)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugField.GetAddress(Microsoft.VisualStudio.Debugger.Interop.IDebugAddress@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugField.GetContainer(Microsoft.VisualStudio.Debugger.Interop.IDebugContainerField@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugField.GetExtendedInfo(System.Guid@,System.IntPtr[],System.UInt32@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugField.GetInfo(Microsoft.VisualStudio.Debugger.Interop.enum_FIELD_INFO_FIELDS,Microsoft.VisualStudio.Debugger.Interop.FIELD_INFO[])"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugField.GetKind(Microsoft.VisualStudio.Debugger.Interop.enum_FIELD_KIND[])"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugField.GetSize(System.UInt32@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugField.GetType(Microsoft.VisualStudio.Debugger.Interop.IDebugField@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugField.GetTypeInfo(Microsoft.VisualStudio.Debugger.Interop.TYPE_INFO[])"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.IDebugFirewallConfigurationCallback2"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugFirewallConfigurationCallback2.EnsureDCOMUnblocked"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.IDebugFuncEvalAbortedEvent2"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugFuncEvalAbortedEvent2.GetAbortResult(Microsoft.VisualStudio.Debugger.Interop.FUNC_EVAL_ABORT_RESULT[])"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugFuncEvalAbortedEvent2.GetFunctionName(System.String@)"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.IDebugFunctionObject"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugFunctionObject.CreateArrayObject(Microsoft.VisualStudio.Debugger.Interop.enum_OBJECT_TYPE,Microsoft.VisualStudio.Debugger.Interop.IDebugField,System.UInt32,System.UInt32[],System.UInt32[],Microsoft.VisualStudio.Debugger.Interop.IDebugObject@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugFunctionObject.CreateObject(Microsoft.VisualStudio.Debugger.Interop.IDebugFunctionObject,System.UInt32,Microsoft.VisualStudio.Debugger.Interop.IDebugObject[],Microsoft.VisualStudio.Debugger.Interop.IDebugObject@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugFunctionObject.CreateObjectNoConstructor(Microsoft.VisualStudio.Debugger.Interop.IDebugField,Microsoft.VisualStudio.Debugger.Interop.IDebugObject@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugFunctionObject.CreatePrimitiveObject(Microsoft.VisualStudio.Debugger.Interop.enum_OBJECT_TYPE,Microsoft.VisualStudio.Debugger.Interop.IDebugObject@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugFunctionObject.CreateStringObject(System.String,Microsoft.VisualStudio.Debugger.Interop.IDebugObject@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugFunctionObject.Evaluate(Microsoft.VisualStudio.Debugger.Interop.IDebugObject[],System.IntPtr,System.UInt32,Microsoft.VisualStudio.Debugger.Interop.IDebugObject@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugFunctionObject.GetManagedDebugObject(Microsoft.VisualStudio.Debugger.Interop.IDebugManagedObject@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugFunctionObject.GetMemoryContext(Microsoft.VisualStudio.Debugger.Interop.IDebugMemoryContext2@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugFunctionObject.GetSize(System.UInt32@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugFunctionObject.GetValue(System.Byte[],System.UInt32)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugFunctionObject.IsEqual(Microsoft.VisualStudio.Debugger.Interop.IDebugObject,System.Int32@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugFunctionObject.IsNullReference(System.Int32@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugFunctionObject.IsProxy(System.Int32@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugFunctionObject.IsReadOnly(System.Int32@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugFunctionObject.SetReferenceValue(Microsoft.VisualStudio.Debugger.Interop.IDebugObject)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugFunctionObject.SetValue(System.Byte[],System.UInt32)"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.IDebugFunctionObject2"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugFunctionObject2.CreateObject(Microsoft.VisualStudio.Debugger.Interop.IDebugFunctionObject,System.UInt32,Microsoft.VisualStudio.Debugger.Interop.IDebugObject[],System.UInt32,System.UInt32,Microsoft.VisualStudio.Debugger.Interop.IDebugObject@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugFunctionObject2.CreateStringObjectWithLength(System.String,System.UInt32,Microsoft.VisualStudio.Debugger.Interop.IDebugObject@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugFunctionObject2.Evaluate(Microsoft.VisualStudio.Debugger.Interop.IDebugObject[],System.IntPtr,System.UInt32,System.UInt32,Microsoft.VisualStudio.Debugger.Interop.IDebugObject@)"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.IDebugFunctionPosition2"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugFunctionPosition2.GetFunctionName(System.String@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugFunctionPosition2.GetOffset(Microsoft.VisualStudio.Debugger.Interop.TEXT_POSITION[])"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.IDebugGenericFieldDefinition"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugGenericFieldDefinition.ConstructInstantiation(System.UInt32,Microsoft.VisualStudio.Debugger.Interop.IDebugField[],Microsoft.VisualStudio.Debugger.Interop.IDebugField@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugGenericFieldDefinition.GetFormalTypeParams(System.UInt32,Microsoft.VisualStudio.Debugger.Interop.IDebugGenericParamField[],System.UInt32@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugGenericFieldDefinition.TypeParamCount(System.UInt32@)"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.IDebugGenericFieldInstance"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugGenericFieldInstance.GetTypeArguments(System.UInt32,Microsoft.VisualStudio.Debugger.Interop.IDebugField[],System.UInt32@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugGenericFieldInstance.TypeArgumentCount(System.UInt32@)"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.IDebugGenericParamField"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugGenericParamField.ConstraintCount(System.UInt32@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugGenericParamField.Equal(Microsoft.VisualStudio.Debugger.Interop.IDebugField)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugGenericParamField.GetAddress(Microsoft.VisualStudio.Debugger.Interop.IDebugAddress@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugGenericParamField.GetConstraints(System.UInt32,Microsoft.VisualStudio.Debugger.Interop.IDebugField[],System.UInt32@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugGenericParamField.GetContainer(Microsoft.VisualStudio.Debugger.Interop.IDebugContainerField@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugGenericParamField.GetExtendedInfo(System.Guid@,System.IntPtr[],System.UInt32@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugGenericParamField.GetFlags(System.UInt32@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugGenericParamField.GetIndex(System.UInt32@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugGenericParamField.GetInfo(Microsoft.VisualStudio.Debugger.Interop.enum_FIELD_INFO_FIELDS,Microsoft.VisualStudio.Debugger.Interop.FIELD_INFO[])"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugGenericParamField.GetKind(Microsoft.VisualStudio.Debugger.Interop.enum_FIELD_KIND[])"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugGenericParamField.GetNameOfFormalParam(System.String@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugGenericParamField.GetOwner(Microsoft.VisualStudio.Debugger.Interop.IDebugField@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugGenericParamField.GetSize(System.UInt32@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugGenericParamField.GetType(Microsoft.VisualStudio.Debugger.Interop.IDebugField@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugGenericParamField.GetTypeInfo(Microsoft.VisualStudio.Debugger.Interop.TYPE_INFO[])"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.IDebugIDECallback"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugIDECallback.DisplayMessage(System.String)"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.IDebugInterceptExceptionCompleteEvent2"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugInterceptExceptionCompleteEvent2.GetInterceptCookie(System.UInt64@)"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.IDebugJIT2"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugJIT2.JITDebug(Microsoft.VisualStudio.Debugger.Interop.CRASHING_PROGRAM_INFO)"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.IDebugLoadCompleteEvent2"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.IDebugLogicalThread2"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugLogicalThread2.EnumFrameInfo(Microsoft.VisualStudio.Debugger.Interop.enum_FRAMEINFO_FLAGS,System.UInt32,Microsoft.VisualStudio.Debugger.Interop.IEnumDebugFrameInfo2@)"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.IDebugManagedExceptionInfo2"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugManagedExceptionInfo2.GetExceptionBoundaryType(Microsoft.VisualStudio.Debugger.Interop.EXCEPTION_BOUNDARY_TYPE[])"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugManagedExceptionInfo2.GetExceptionMessage(System.String@)"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.IDebugManagedObject"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugManagedObject.GetManagedObject(System.Object@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugManagedObject.SetFromManagedObject(System.Object)"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.IDebugMemoryBytes2"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugMemoryBytes2.GetSize(System.UInt64@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugMemoryBytes2.ReadAt(Microsoft.VisualStudio.Debugger.Interop.IDebugMemoryContext2,System.UInt32,System.Byte[],System.UInt32@,System.UInt32@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugMemoryBytes2.WriteAt(Microsoft.VisualStudio.Debugger.Interop.IDebugMemoryContext2,System.UInt32,System.Byte[])"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.IDebugMemoryContext2"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugMemoryContext2.Add(System.UInt64,Microsoft.VisualStudio.Debugger.Interop.IDebugMemoryContext2@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugMemoryContext2.Compare(Microsoft.VisualStudio.Debugger.Interop.enum_CONTEXT_COMPARE,Microsoft.VisualStudio.Debugger.Interop.IDebugMemoryContext2[],System.UInt32,System.UInt32@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugMemoryContext2.GetInfo(Microsoft.VisualStudio.Debugger.Interop.enum_CONTEXT_INFO_FIELDS,Microsoft.VisualStudio.Debugger.Interop.CONTEXT_INFO[])"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugMemoryContext2.GetName(System.String@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugMemoryContext2.Subtract(System.UInt64,Microsoft.VisualStudio.Debugger.Interop.IDebugMemoryContext2@)"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.IDebugMessageEvent2"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugMessageEvent2.GetMessage(Microsoft.VisualStudio.Debugger.Interop.enum_MESSAGETYPE[],System.String@,System.UInt32@,System.String@,System.UInt32@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugMessageEvent2.SetResponse(System.UInt32)"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.IDebugMethodField"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugMethodField.EnumAllLocals(Microsoft.VisualStudio.Debugger.Interop.IDebugAddress,Microsoft.VisualStudio.Debugger.Interop.IEnumDebugFields@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugMethodField.EnumArguments(Microsoft.VisualStudio.Debugger.Interop.IEnumDebugFields@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugMethodField.EnumFields(Microsoft.VisualStudio.Debugger.Interop.enum_FIELD_KIND,Microsoft.VisualStudio.Debugger.Interop.enum_FIELD_MODIFIERS,System.String,Microsoft.VisualStudio.Debugger.Interop.NAME_MATCH,Microsoft.VisualStudio.Debugger.Interop.IEnumDebugFields@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugMethodField.EnumLocals(Microsoft.VisualStudio.Debugger.Interop.IDebugAddress,Microsoft.VisualStudio.Debugger.Interop.IEnumDebugFields@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugMethodField.EnumParameters(Microsoft.VisualStudio.Debugger.Interop.IEnumDebugFields@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugMethodField.EnumStaticLocals(Microsoft.VisualStudio.Debugger.Interop.IEnumDebugFields@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugMethodField.Equal(Microsoft.VisualStudio.Debugger.Interop.IDebugField)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugMethodField.GetAddress(Microsoft.VisualStudio.Debugger.Interop.IDebugAddress@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugMethodField.GetContainer(Microsoft.VisualStudio.Debugger.Interop.IDebugContainerField@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugMethodField.GetExtendedInfo(System.Guid@,System.IntPtr[],System.UInt32@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugMethodField.GetGlobalContainer(Microsoft.VisualStudio.Debugger.Interop.IDebugClassField@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugMethodField.GetInfo(Microsoft.VisualStudio.Debugger.Interop.enum_FIELD_INFO_FIELDS,Microsoft.VisualStudio.Debugger.Interop.FIELD_INFO[])"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugMethodField.GetKind(Microsoft.VisualStudio.Debugger.Interop.enum_FIELD_KIND[])"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugMethodField.GetSize(System.UInt32@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugMethodField.GetThis(Microsoft.VisualStudio.Debugger.Interop.IDebugClassField@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugMethodField.GetType(Microsoft.VisualStudio.Debugger.Interop.IDebugField@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugMethodField.GetTypeInfo(Microsoft.VisualStudio.Debugger.Interop.TYPE_INFO[])"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugMethodField.IsCustomAttributeDefined(System.String)"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.IDebugModOpt"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugModOpt.GetModOpts(System.UInt32,System.String[],System.UInt32@)"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.IDebugModule2"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugModule2.GetInfo(Microsoft.VisualStudio.Debugger.Interop.enum_MODULE_INFO_FIELDS,Microsoft.VisualStudio.Debugger.Interop.MODULE_INFO[])"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugModule2.ReloadSymbols_Deprecated(System.String,System.String@)"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.IDebugModule3"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugModule3.GetInfo(Microsoft.VisualStudio.Debugger.Interop.enum_MODULE_INFO_FIELDS,Microsoft.VisualStudio.Debugger.Interop.MODULE_INFO[])"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugModule3.GetSymbolInfo(Microsoft.VisualStudio.Debugger.Interop.enum_SYMBOL_SEARCH_INFO_FIELDS,Microsoft.VisualStudio.Debugger.Interop.MODULE_SYMBOL_SEARCH_INFO[])"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugModule3.IsUserCode(System.Int32@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugModule3.LoadSymbols"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugModule3.ReloadSymbols_Deprecated(System.String,System.String@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugModule3.SetJustMyCodeState(System.Int32)"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.IDebugModuleLoadEvent2"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugModuleLoadEvent2.GetModule(Microsoft.VisualStudio.Debugger.Interop.IDebugModule2@,System.String@,System.Int32@)"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.IDebugModuleManaged"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugModuleManaged.GetMvid(System.Guid@)"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.IDebugNativeExceptionInfo"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugNativeExceptionInfo.GetNativeException(Microsoft.VisualStudio.Debugger.Interop.NATIVE_EXCEPTION_INFO[])"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.IDebugNoSymbolsEvent2"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.IDebugObject"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugObject.GetManagedDebugObject(Microsoft.VisualStudio.Debugger.Interop.IDebugManagedObject@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugObject.GetMemoryContext(Microsoft.VisualStudio.Debugger.Interop.IDebugMemoryContext2@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugObject.GetSize(System.UInt32@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugObject.GetValue(System.Byte[],System.UInt32)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugObject.IsEqual(Microsoft.VisualStudio.Debugger.Interop.IDebugObject,System.Int32@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugObject.IsNullReference(System.Int32@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugObject.IsProxy(System.Int32@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugObject.IsReadOnly(System.Int32@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugObject.SetReferenceValue(Microsoft.VisualStudio.Debugger.Interop.IDebugObject)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugObject.SetValue(System.Byte[],System.UInt32)"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.IDebugObject2"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugObject2.CreateAlias(Microsoft.VisualStudio.Debugger.Interop.IDebugAlias@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugObject2.GetAlias(Microsoft.VisualStudio.Debugger.Interop.IDebugAlias@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugObject2.GetBackingFieldForProperty(Microsoft.VisualStudio.Debugger.Interop.IDebugObject2@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugObject2.GetField(Microsoft.VisualStudio.Debugger.Interop.IDebugField@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugObject2.GetICorDebugValue(System.Object@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugObject2.GetManagedDebugObject(Microsoft.VisualStudio.Debugger.Interop.IDebugManagedObject@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugObject2.GetMemoryContext(Microsoft.VisualStudio.Debugger.Interop.IDebugMemoryContext2@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugObject2.GetSize(System.UInt32@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugObject2.GetValue(System.Byte[],System.UInt32)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugObject2.IsEncOutdated(System.Int32@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugObject2.IsEqual(Microsoft.VisualStudio.Debugger.Interop.IDebugObject,System.Int32@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugObject2.IsNullReference(System.Int32@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugObject2.IsProxy(System.Int32@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugObject2.IsReadOnly(System.Int32@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugObject2.IsUserData(System.Int32@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugObject2.SetReferenceValue(Microsoft.VisualStudio.Debugger.Interop.IDebugObject)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugObject2.SetValue(System.Byte[],System.UInt32)"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.IDebugOutputStringEvent2"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugOutputStringEvent2.GetString(System.String@)"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.IDebugParsedExpression"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugParsedExpression.EvaluateSync(System.UInt32,System.UInt32,Microsoft.VisualStudio.Debugger.Interop.IDebugSymbolProvider,Microsoft.VisualStudio.Debugger.Interop.IDebugAddress,Microsoft.VisualStudio.Debugger.Interop.IDebugBinder,System.String,Microsoft.VisualStudio.Debugger.Interop.IDebugProperty2@)"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.IDebugPendingBreakpoint2"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugPendingBreakpoint2.Bind"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugPendingBreakpoint2.CanBind(Microsoft.VisualStudio.Debugger.Interop.IEnumDebugErrorBreakpoints2@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugPendingBreakpoint2.Delete"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugPendingBreakpoint2.Enable(System.Int32)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugPendingBreakpoint2.EnumBoundBreakpoints(Microsoft.VisualStudio.Debugger.Interop.IEnumDebugBoundBreakpoints2@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugPendingBreakpoint2.EnumErrorBreakpoints(Microsoft.VisualStudio.Debugger.Interop.enum_BP_ERROR_TYPE,Microsoft.VisualStudio.Debugger.Interop.IEnumDebugErrorBreakpoints2@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugPendingBreakpoint2.GetBreakpointRequest(Microsoft.VisualStudio.Debugger.Interop.IDebugBreakpointRequest2@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugPendingBreakpoint2.GetState(Microsoft.VisualStudio.Debugger.Interop.PENDING_BP_STATE_INFO[])"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugPendingBreakpoint2.SetCondition(Microsoft.VisualStudio.Debugger.Interop.BP_CONDITION)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugPendingBreakpoint2.SetPassCount(Microsoft.VisualStudio.Debugger.Interop.BP_PASSCOUNT)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugPendingBreakpoint2.Virtualize(System.Int32)"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.IDebugPendingBreakpoint3"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugPendingBreakpoint3.Bind"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugPendingBreakpoint3.CanBind(Microsoft.VisualStudio.Debugger.Interop.IEnumDebugErrorBreakpoints2@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugPendingBreakpoint3.Delete"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugPendingBreakpoint3.Enable(System.Int32)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugPendingBreakpoint3.EnumBoundBreakpoints(Microsoft.VisualStudio.Debugger.Interop.IEnumDebugBoundBreakpoints2@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugPendingBreakpoint3.EnumErrorBreakpoints(Microsoft.VisualStudio.Debugger.Interop.enum_BP_ERROR_TYPE,Microsoft.VisualStudio.Debugger.Interop.IEnumDebugErrorBreakpoints2@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugPendingBreakpoint3.GetBreakpointRequest(Microsoft.VisualStudio.Debugger.Interop.IDebugBreakpointRequest2@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugPendingBreakpoint3.GetErrorResolutionInfo(Microsoft.VisualStudio.Debugger.Interop.enum_BPERESI_FIELDS,Microsoft.VisualStudio.Debugger.Interop.BP_ERROR_RESOLUTION_INFO[])"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugPendingBreakpoint3.GetState(Microsoft.VisualStudio.Debugger.Interop.PENDING_BP_STATE_INFO[])"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugPendingBreakpoint3.SetCondition(Microsoft.VisualStudio.Debugger.Interop.BP_CONDITION)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugPendingBreakpoint3.SetPassCount(Microsoft.VisualStudio.Debugger.Interop.BP_PASSCOUNT)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugPendingBreakpoint3.Virtualize(System.Int32)"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.IDebugPointerField"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugPointerField.EnumFields(Microsoft.VisualStudio.Debugger.Interop.enum_FIELD_KIND,Microsoft.VisualStudio.Debugger.Interop.enum_FIELD_MODIFIERS,System.String,Microsoft.VisualStudio.Debugger.Interop.NAME_MATCH,Microsoft.VisualStudio.Debugger.Interop.IEnumDebugFields@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugPointerField.Equal(Microsoft.VisualStudio.Debugger.Interop.IDebugField)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugPointerField.GetAddress(Microsoft.VisualStudio.Debugger.Interop.IDebugAddress@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugPointerField.GetContainer(Microsoft.VisualStudio.Debugger.Interop.IDebugContainerField@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugPointerField.GetDereferencedField(Microsoft.VisualStudio.Debugger.Interop.IDebugField@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugPointerField.GetExtendedInfo(System.Guid@,System.IntPtr[],System.UInt32@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugPointerField.GetInfo(Microsoft.VisualStudio.Debugger.Interop.enum_FIELD_INFO_FIELDS,Microsoft.VisualStudio.Debugger.Interop.FIELD_INFO[])"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugPointerField.GetKind(Microsoft.VisualStudio.Debugger.Interop.enum_FIELD_KIND[])"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugPointerField.GetSize(System.UInt32@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugPointerField.GetType(Microsoft.VisualStudio.Debugger.Interop.IDebugField@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugPointerField.GetTypeInfo(Microsoft.VisualStudio.Debugger.Interop.TYPE_INFO[])"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.IDebugPointerObject"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugPointerObject.Dereference(System.UInt32,Microsoft.VisualStudio.Debugger.Interop.IDebugObject@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugPointerObject.GetBytes(System.UInt32,System.UInt32,System.Byte[],System.UInt32@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugPointerObject.GetManagedDebugObject(Microsoft.VisualStudio.Debugger.Interop.IDebugManagedObject@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugPointerObject.GetMemoryContext(Microsoft.VisualStudio.Debugger.Interop.IDebugMemoryContext2@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugPointerObject.GetSize(System.UInt32@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugPointerObject.GetValue(System.Byte[],System.UInt32)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugPointerObject.IsEqual(Microsoft.VisualStudio.Debugger.Interop.IDebugObject,System.Int32@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugPointerObject.IsNullReference(System.Int32@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugPointerObject.IsProxy(System.Int32@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugPointerObject.IsReadOnly(System.Int32@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugPointerObject.SetBytes(System.UInt32,System.UInt32,System.Byte[],System.UInt32@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugPointerObject.SetReferenceValue(Microsoft.VisualStudio.Debugger.Interop.IDebugObject)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugPointerObject.SetValue(System.Byte[],System.UInt32)"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.IDebugPointerObject3"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugPointerObject3.Dereference(System.UInt32,Microsoft.VisualStudio.Debugger.Interop.IDebugObject@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugPointerObject3.GetBytes(System.UInt32,System.UInt32,System.Byte[],System.UInt32@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugPointerObject3.GetManagedDebugObject(Microsoft.VisualStudio.Debugger.Interop.IDebugManagedObject@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugPointerObject3.GetMemoryContext(Microsoft.VisualStudio.Debugger.Interop.IDebugMemoryContext2@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugPointerObject3.GetPointerAddress(System.UInt64@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugPointerObject3.GetSize(System.UInt32@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugPointerObject3.GetValue(System.Byte[],System.UInt32)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugPointerObject3.IsEqual(Microsoft.VisualStudio.Debugger.Interop.IDebugObject,System.Int32@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugPointerObject3.IsNullReference(System.Int32@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugPointerObject3.IsProxy(System.Int32@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugPointerObject3.IsReadOnly(System.Int32@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugPointerObject3.SetBytes(System.UInt32,System.UInt32,System.Byte[],System.UInt32@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugPointerObject3.SetReferenceValue(Microsoft.VisualStudio.Debugger.Interop.IDebugObject)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugPointerObject3.SetValue(System.Byte[],System.UInt32)"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.IDebugPort2"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugPort2.EnumProcesses(Microsoft.VisualStudio.Debugger.Interop.IEnumDebugProcesses2@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugPort2.GetPortId(System.Guid@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugPort2.GetPortName(System.String@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugPort2.GetPortRequest(Microsoft.VisualStudio.Debugger.Interop.IDebugPortRequest2@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugPort2.GetPortSupplier(Microsoft.VisualStudio.Debugger.Interop.IDebugPortSupplier2@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugPort2.GetProcess(Microsoft.VisualStudio.Debugger.Interop.AD_PROCESS_ID,Microsoft.VisualStudio.Debugger.Interop.IDebugProcess2@)"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.IDebugPortEvents2"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugPortEvents2.Event(Microsoft.VisualStudio.Debugger.Interop.IDebugCoreServer2,Microsoft.VisualStudio.Debugger.Interop.IDebugPort2,Microsoft.VisualStudio.Debugger.Interop.IDebugProcess2,Microsoft.VisualStudio.Debugger.Interop.IDebugProgram2,Microsoft.VisualStudio.Debugger.Interop.IDebugEvent2,System.Guid@)"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.IDebugPortEventsEx2"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugPortEventsEx2.GetSession(Microsoft.VisualStudio.Debugger.Interop.IDebugSession2@)"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.IDebugPortEx2"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugPortEx2.CanTerminateProcess(Microsoft.VisualStudio.Debugger.Interop.IDebugProcess2)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugPortEx2.GetPortProcessId(System.UInt32@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugPortEx2.GetProgram(Microsoft.VisualStudio.Debugger.Interop.IDebugProgramNode2,Microsoft.VisualStudio.Debugger.Interop.IDebugProgram2@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugPortEx2.LaunchSuspended(System.String,System.String,System.String,System.String,System.UInt32,System.UInt32,System.UInt32,Microsoft.VisualStudio.Debugger.Interop.IDebugProcess2@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugPortEx2.ResumeProcess(Microsoft.VisualStudio.Debugger.Interop.IDebugProcess2)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugPortEx2.TerminateProcess(Microsoft.VisualStudio.Debugger.Interop.IDebugProcess2)"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.IDebugPortNotify2"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugPortNotify2.AddProgramNode(Microsoft.VisualStudio.Debugger.Interop.IDebugProgramNode2)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugPortNotify2.RemoveProgramNode(Microsoft.VisualStudio.Debugger.Interop.IDebugProgramNode2)"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.IDebugPortPicker"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugPortPicker.DisplayPortPicker(System.IntPtr,System.String@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugPortPicker.SetSite(Microsoft.VisualStudio.OLE.Interop.IServiceProvider)"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.IDebugPortRequest2"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugPortRequest2.GetPortName(System.String@)"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.IDebugPortSupplier2"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugPortSupplier2.AddPort(Microsoft.VisualStudio.Debugger.Interop.IDebugPortRequest2,Microsoft.VisualStudio.Debugger.Interop.IDebugPort2@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugPortSupplier2.CanAddPort"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugPortSupplier2.EnumPorts(Microsoft.VisualStudio.Debugger.Interop.IEnumDebugPorts2@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugPortSupplier2.GetPort(System.Guid@,Microsoft.VisualStudio.Debugger.Interop.IDebugPort2@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugPortSupplier2.GetPortSupplierId(System.Guid@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugPortSupplier2.GetPortSupplierName(System.String@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugPortSupplier2.RemovePort(Microsoft.VisualStudio.Debugger.Interop.IDebugPort2)"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.IDebugPortSupplier3"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugPortSupplier3.AddPort(Microsoft.VisualStudio.Debugger.Interop.IDebugPortRequest2,Microsoft.VisualStudio.Debugger.Interop.IDebugPort2@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugPortSupplier3.CanAddPort"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugPortSupplier3.CanPersistPorts"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugPortSupplier3.EnumPersistedPorts(Microsoft.VisualStudio.Debugger.Interop.BSTR_ARRAY,Microsoft.VisualStudio.Debugger.Interop.IEnumDebugPorts2@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugPortSupplier3.EnumPorts(Microsoft.VisualStudio.Debugger.Interop.IEnumDebugPorts2@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugPortSupplier3.GetPort(System.Guid@,Microsoft.VisualStudio.Debugger.Interop.IDebugPort2@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugPortSupplier3.GetPortSupplierId(System.Guid@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugPortSupplier3.GetPortSupplierName(System.String@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugPortSupplier3.RemovePort(Microsoft.VisualStudio.Debugger.Interop.IDebugPort2)"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.IDebugPortSupplierDescription2"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugPortSupplierDescription2.GetDescription(Microsoft.VisualStudio.Debugger.Interop.enum_PORT_SUPPLIER_DESCRIPTION_FLAGS[],System.String@)"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.IDebugPortSupplierEx2"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugPortSupplierEx2.SetServer(Microsoft.VisualStudio.Debugger.Interop.IDebugCoreServer2)"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.IDebugPortSupplierLocale2"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugPortSupplierLocale2.SetLocale(System.UInt16)"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.IDebugPrimitiveTypeField"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugPrimitiveTypeField.Equal(Microsoft.VisualStudio.Debugger.Interop.IDebugField)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugPrimitiveTypeField.GetAddress(Microsoft.VisualStudio.Debugger.Interop.IDebugAddress@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugPrimitiveTypeField.GetContainer(Microsoft.VisualStudio.Debugger.Interop.IDebugContainerField@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugPrimitiveTypeField.GetExtendedInfo(System.Guid@,System.IntPtr[],System.UInt32@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugPrimitiveTypeField.GetInfo(Microsoft.VisualStudio.Debugger.Interop.enum_FIELD_INFO_FIELDS,Microsoft.VisualStudio.Debugger.Interop.FIELD_INFO[])"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugPrimitiveTypeField.GetKind(Microsoft.VisualStudio.Debugger.Interop.enum_FIELD_KIND[])"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugPrimitiveTypeField.GetPrimitiveType(System.UInt32@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugPrimitiveTypeField.GetSize(System.UInt32@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugPrimitiveTypeField.GetType(Microsoft.VisualStudio.Debugger.Interop.IDebugField@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugPrimitiveTypeField.GetTypeInfo(Microsoft.VisualStudio.Debugger.Interop.TYPE_INFO[])"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.IDebugProcess2"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugProcess2.Attach(Microsoft.VisualStudio.Debugger.Interop.IDebugEventCallback2,System.Guid[],System.UInt32,System.Int32[])"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugProcess2.CanDetach"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugProcess2.CauseBreak"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugProcess2.Detach"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugProcess2.EnumPrograms(Microsoft.VisualStudio.Debugger.Interop.IEnumDebugPrograms2@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugProcess2.EnumThreads(Microsoft.VisualStudio.Debugger.Interop.IEnumDebugThreads2@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugProcess2.GetAttachedSessionName(System.String@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugProcess2.GetInfo(Microsoft.VisualStudio.Debugger.Interop.enum_PROCESS_INFO_FIELDS,Microsoft.VisualStudio.Debugger.Interop.PROCESS_INFO[])"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugProcess2.GetName(Microsoft.VisualStudio.Debugger.Interop.enum_GETNAME_TYPE,System.String@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugProcess2.GetPhysicalProcessId(Microsoft.VisualStudio.Debugger.Interop.AD_PROCESS_ID[])"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugProcess2.GetPort(Microsoft.VisualStudio.Debugger.Interop.IDebugPort2@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugProcess2.GetProcessId(System.Guid@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugProcess2.GetServer(Microsoft.VisualStudio.Debugger.Interop.IDebugCoreServer2@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugProcess2.Terminate"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.IDebugProcess3"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugProcess3.Attach(Microsoft.VisualStudio.Debugger.Interop.IDebugEventCallback2,System.Guid[],System.UInt32,System.Int32[])"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugProcess3.CanDetach"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugProcess3.CauseBreak"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugProcess3.Continue(Microsoft.VisualStudio.Debugger.Interop.IDebugThread2)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugProcess3.Detach"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugProcess3.DisableENC(Microsoft.VisualStudio.Debugger.Interop.EncUnavailableReason)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugProcess3.EnumPrograms(Microsoft.VisualStudio.Debugger.Interop.IEnumDebugPrograms2@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugProcess3.EnumThreads(Microsoft.VisualStudio.Debugger.Interop.IEnumDebugThreads2@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugProcess3.Execute(Microsoft.VisualStudio.Debugger.Interop.IDebugThread2)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugProcess3.GetAttachedSessionName(System.String@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugProcess3.GetDebugReason(Microsoft.VisualStudio.Debugger.Interop.enum_DEBUG_REASON[])"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugProcess3.GetENCAvailableState(Microsoft.VisualStudio.Debugger.Interop.EncUnavailableReason[])"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugProcess3.GetEngineFilter(Microsoft.VisualStudio.Debugger.Interop.GUID_ARRAY[])"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugProcess3.GetHostingProcessLanguage(System.Guid@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugProcess3.GetInfo(Microsoft.VisualStudio.Debugger.Interop.enum_PROCESS_INFO_FIELDS,Microsoft.VisualStudio.Debugger.Interop.PROCESS_INFO[])"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugProcess3.GetName(Microsoft.VisualStudio.Debugger.Interop.enum_GETNAME_TYPE,System.String@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugProcess3.GetPhysicalProcessId(Microsoft.VisualStudio.Debugger.Interop.AD_PROCESS_ID[])"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugProcess3.GetPort(Microsoft.VisualStudio.Debugger.Interop.IDebugPort2@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugProcess3.GetProcessId(System.Guid@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugProcess3.GetServer(Microsoft.VisualStudio.Debugger.Interop.IDebugCoreServer2@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugProcess3.SetHostingProcessLanguage(System.Guid@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugProcess3.Step(Microsoft.VisualStudio.Debugger.Interop.IDebugThread2,Microsoft.VisualStudio.Debugger.Interop.enum_STEPKIND,Microsoft.VisualStudio.Debugger.Interop.enum_STEPUNIT)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugProcess3.Terminate"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.IDebugProcessCreateEvent2"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.IDebugProcessDestroyEvent2"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.IDebugProcessEx2"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugProcessEx2.AddImplicitProgramNodes(System.Guid@,System.Guid[],System.UInt32)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugProcessEx2.Attach(Microsoft.VisualStudio.Debugger.Interop.IDebugSession2)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugProcessEx2.Detach(Microsoft.VisualStudio.Debugger.Interop.IDebugSession2)"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.IDebugProcessSecurity2"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugProcessSecurity2.GetUserName(System.String@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugProcessSecurity2.QueryCanSafelyAttach"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.IDebugProgram2"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugProgram2.Attach(Microsoft.VisualStudio.Debugger.Interop.IDebugEventCallback2)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugProgram2.CanDetach"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugProgram2.CauseBreak"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugProgram2.Continue(Microsoft.VisualStudio.Debugger.Interop.IDebugThread2)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugProgram2.Detach"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugProgram2.EnumCodeContexts(Microsoft.VisualStudio.Debugger.Interop.IDebugDocumentPosition2,Microsoft.VisualStudio.Debugger.Interop.IEnumDebugCodeContexts2@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugProgram2.EnumCodePaths(System.String,Microsoft.VisualStudio.Debugger.Interop.IDebugCodeContext2,Microsoft.VisualStudio.Debugger.Interop.IDebugStackFrame2,System.Int32,Microsoft.VisualStudio.Debugger.Interop.IEnumCodePaths2@,Microsoft.VisualStudio.Debugger.Interop.IDebugCodeContext2@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugProgram2.EnumModules(Microsoft.VisualStudio.Debugger.Interop.IEnumDebugModules2@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugProgram2.EnumThreads(Microsoft.VisualStudio.Debugger.Interop.IEnumDebugThreads2@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugProgram2.Execute"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugProgram2.GetDebugProperty(Microsoft.VisualStudio.Debugger.Interop.IDebugProperty2@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugProgram2.GetDisassemblyStream(Microsoft.VisualStudio.Debugger.Interop.enum_DISASSEMBLY_STREAM_SCOPE,Microsoft.VisualStudio.Debugger.Interop.IDebugCodeContext2,Microsoft.VisualStudio.Debugger.Interop.IDebugDisassemblyStream2@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugProgram2.GetENCUpdate(System.Object@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugProgram2.GetEngineInfo(System.String@,System.Guid@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugProgram2.GetMemoryBytes(Microsoft.VisualStudio.Debugger.Interop.IDebugMemoryBytes2@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugProgram2.GetName(System.String@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugProgram2.GetProcess(Microsoft.VisualStudio.Debugger.Interop.IDebugProcess2@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugProgram2.GetProgramId(System.Guid@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugProgram2.Step(Microsoft.VisualStudio.Debugger.Interop.IDebugThread2,Microsoft.VisualStudio.Debugger.Interop.enum_STEPKIND,Microsoft.VisualStudio.Debugger.Interop.enum_STEPUNIT)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugProgram2.Terminate"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugProgram2.WriteDump(Microsoft.VisualStudio.Debugger.Interop.enum_DUMPTYPE,System.String)"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.IDebugProgram3"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugProgram3.Attach(Microsoft.VisualStudio.Debugger.Interop.IDebugEventCallback2)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugProgram3.CanDetach"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugProgram3.CauseBreak"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugProgram3.Continue(Microsoft.VisualStudio.Debugger.Interop.IDebugThread2)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugProgram3.Detach"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugProgram3.EnumCodeContexts(Microsoft.VisualStudio.Debugger.Interop.IDebugDocumentPosition2,Microsoft.VisualStudio.Debugger.Interop.IEnumDebugCodeContexts2@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugProgram3.EnumCodePaths(System.String,Microsoft.VisualStudio.Debugger.Interop.IDebugCodeContext2,Microsoft.VisualStudio.Debugger.Interop.IDebugStackFrame2,System.Int32,Microsoft.VisualStudio.Debugger.Interop.IEnumCodePaths2@,Microsoft.VisualStudio.Debugger.Interop.IDebugCodeContext2@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugProgram3.EnumModules(Microsoft.VisualStudio.Debugger.Interop.IEnumDebugModules2@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugProgram3.EnumThreads(Microsoft.VisualStudio.Debugger.Interop.IEnumDebugThreads2@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugProgram3.Execute"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugProgram3.ExecuteOnThread(Microsoft.VisualStudio.Debugger.Interop.IDebugThread2)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugProgram3.GetDebugProperty(Microsoft.VisualStudio.Debugger.Interop.IDebugProperty2@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugProgram3.GetDisassemblyStream(Microsoft.VisualStudio.Debugger.Interop.enum_DISASSEMBLY_STREAM_SCOPE,Microsoft.VisualStudio.Debugger.Interop.IDebugCodeContext2,Microsoft.VisualStudio.Debugger.Interop.IDebugDisassemblyStream2@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugProgram3.GetENCUpdate(System.Object@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugProgram3.GetEngineInfo(System.String@,System.Guid@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugProgram3.GetMemoryBytes(Microsoft.VisualStudio.Debugger.Interop.IDebugMemoryBytes2@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugProgram3.GetName(System.String@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugProgram3.GetProcess(Microsoft.VisualStudio.Debugger.Interop.IDebugProcess2@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugProgram3.GetProgramId(System.Guid@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugProgram3.Step(Microsoft.VisualStudio.Debugger.Interop.IDebugThread2,Microsoft.VisualStudio.Debugger.Interop.enum_STEPKIND,Microsoft.VisualStudio.Debugger.Interop.enum_STEPUNIT)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugProgram3.Terminate"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugProgram3.WriteDump(Microsoft.VisualStudio.Debugger.Interop.enum_DUMPTYPE,System.String)"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.IDebugProgramCreateEvent2"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.IDebugProgramDestroyEvent2"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugProgramDestroyEvent2.GetExitCode(System.UInt32@)"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.IDebugProgramDestroyEventFlags2"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugProgramDestroyEventFlags2.GetFlags(Microsoft.VisualStudio.Debugger.Interop.enum_PROGRAM_DESTROY_FLAGS[])"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.IDebugProgramEngines2"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugProgramEngines2.EnumPossibleEngines(System.UInt32,System.Guid[],System.UInt32@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugProgramEngines2.SetEngine(System.Guid@)"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.IDebugProgramEx2"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugProgramEx2.Attach(Microsoft.VisualStudio.Debugger.Interop.IDebugEventCallback2,System.UInt32,Microsoft.VisualStudio.Debugger.Interop.IDebugSession2)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugProgramEx2.GetProgramNode(Microsoft.VisualStudio.Debugger.Interop.IDebugProgramNode2@)"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.IDebugProgramJIT2"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugProgramJIT2.GetJITCallback(Microsoft.VisualStudio.Debugger.Interop.IDebugSetJITEventCallback2@)"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.IDebugProgramNameChangedEvent2"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.IDebugProgramNode2"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugProgramNode2.Attach_V7(Microsoft.VisualStudio.Debugger.Interop.IDebugProgram2,Microsoft.VisualStudio.Debugger.Interop.IDebugEventCallback2,System.UInt32)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugProgramNode2.DetachDebugger_V7"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugProgramNode2.GetEngineInfo(System.String@,System.Guid@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugProgramNode2.GetHostMachineName_V7(System.String@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugProgramNode2.GetHostName(Microsoft.VisualStudio.Debugger.Interop.enum_GETHOSTNAME_TYPE,System.String@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugProgramNode2.GetHostPid(Microsoft.VisualStudio.Debugger.Interop.AD_PROCESS_ID[])"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugProgramNode2.GetProgramName(System.String@)"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.IDebugProgramNodeAttach2"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugProgramNodeAttach2.OnAttach(System.Guid@)"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.IDebugProgramProvider2"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugProgramProvider2.GetProviderProcessData(Microsoft.VisualStudio.Debugger.Interop.enum_PROVIDER_FLAGS,Microsoft.VisualStudio.Debugger.Interop.IDebugDefaultPort2,Microsoft.VisualStudio.Debugger.Interop.AD_PROCESS_ID,Microsoft.VisualStudio.Debugger.Interop.CONST_GUID_ARRAY,Microsoft.VisualStudio.Debugger.Interop.PROVIDER_PROCESS_DATA[])"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugProgramProvider2.GetProviderProgramNode(Microsoft.VisualStudio.Debugger.Interop.enum_PROVIDER_FLAGS,Microsoft.VisualStudio.Debugger.Interop.IDebugDefaultPort2,Microsoft.VisualStudio.Debugger.Interop.AD_PROCESS_ID,System.Guid@,System.UInt64,Microsoft.VisualStudio.Debugger.Interop.IDebugProgramNode2@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugProgramProvider2.SetLocale(System.UInt16)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugProgramProvider2.WatchForProviderEvents(Microsoft.VisualStudio.Debugger.Interop.enum_PROVIDER_FLAGS,Microsoft.VisualStudio.Debugger.Interop.IDebugDefaultPort2,Microsoft.VisualStudio.Debugger.Interop.AD_PROCESS_ID,Microsoft.VisualStudio.Debugger.Interop.CONST_GUID_ARRAY,System.Guid@,Microsoft.VisualStudio.Debugger.Interop.IDebugPortNotify2)"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.IDebugProgramPublisher2"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugProgramPublisher2.PublishProgram(Microsoft.VisualStudio.Debugger.Interop.CONST_GUID_ARRAY,System.String,System.Object)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugProgramPublisher2.PublishProgramNode(Microsoft.VisualStudio.Debugger.Interop.IDebugProgramNode2)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugProgramPublisher2.SetDebuggerPresent(System.Int32)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugProgramPublisher2.UnpublishProgram(System.Object)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugProgramPublisher2.UnpublishProgramNode(Microsoft.VisualStudio.Debugger.Interop.IDebugProgramNode2)"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.IDebugProperty2"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugProperty2.EnumChildren(Microsoft.VisualStudio.Debugger.Interop.enum_DEBUGPROP_INFO_FLAGS,System.UInt32,System.Guid@,Microsoft.VisualStudio.Debugger.Interop.enum_DBG_ATTRIB_FLAGS,System.String,System.UInt32,Microsoft.VisualStudio.Debugger.Interop.IEnumDebugPropertyInfo2@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugProperty2.GetDerivedMostProperty(Microsoft.VisualStudio.Debugger.Interop.IDebugProperty2@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugProperty2.GetExtendedInfo(System.Guid@,System.Object@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugProperty2.GetMemoryBytes(Microsoft.VisualStudio.Debugger.Interop.IDebugMemoryBytes2@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugProperty2.GetMemoryContext(Microsoft.VisualStudio.Debugger.Interop.IDebugMemoryContext2@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugProperty2.GetParent(Microsoft.VisualStudio.Debugger.Interop.IDebugProperty2@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugProperty2.GetPropertyInfo(Microsoft.VisualStudio.Debugger.Interop.enum_DEBUGPROP_INFO_FLAGS,System.UInt32,System.UInt32,Microsoft.VisualStudio.Debugger.Interop.IDebugReference2[],System.UInt32,Microsoft.VisualStudio.Debugger.Interop.DEBUG_PROPERTY_INFO[])"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugProperty2.GetReference(Microsoft.VisualStudio.Debugger.Interop.IDebugReference2@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugProperty2.GetSize(System.UInt32@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugProperty2.SetValueAsReference(Microsoft.VisualStudio.Debugger.Interop.IDebugReference2[],System.UInt32,Microsoft.VisualStudio.Debugger.Interop.IDebugReference2,System.UInt32)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugProperty2.SetValueAsString(System.String,System.UInt32,System.UInt32)"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.IDebugProperty3"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugProperty3.CreateObjectID"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugProperty3.DestroyObjectID"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugProperty3.EnumChildren(Microsoft.VisualStudio.Debugger.Interop.enum_DEBUGPROP_INFO_FLAGS,System.UInt32,System.Guid@,Microsoft.VisualStudio.Debugger.Interop.enum_DBG_ATTRIB_FLAGS,System.String,System.UInt32,Microsoft.VisualStudio.Debugger.Interop.IEnumDebugPropertyInfo2@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugProperty3.GetCustomViewerCount(System.UInt32@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugProperty3.GetCustomViewerList(System.UInt32,System.UInt32,Microsoft.VisualStudio.Debugger.Interop.DEBUG_CUSTOM_VIEWER[],System.UInt32@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugProperty3.GetDerivedMostProperty(Microsoft.VisualStudio.Debugger.Interop.IDebugProperty2@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugProperty3.GetExtendedInfo(System.Guid@,System.Object@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugProperty3.GetMemoryBytes(Microsoft.VisualStudio.Debugger.Interop.IDebugMemoryBytes2@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugProperty3.GetMemoryContext(Microsoft.VisualStudio.Debugger.Interop.IDebugMemoryContext2@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugProperty3.GetParent(Microsoft.VisualStudio.Debugger.Interop.IDebugProperty2@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugProperty3.GetPropertyInfo(Microsoft.VisualStudio.Debugger.Interop.enum_DEBUGPROP_INFO_FLAGS,System.UInt32,System.UInt32,Microsoft.VisualStudio.Debugger.Interop.IDebugReference2[],System.UInt32,Microsoft.VisualStudio.Debugger.Interop.DEBUG_PROPERTY_INFO[])"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugProperty3.GetReference(Microsoft.VisualStudio.Debugger.Interop.IDebugReference2@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugProperty3.GetSize(System.UInt32@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugProperty3.GetStringCharLength(System.UInt32@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugProperty3.GetStringChars(System.UInt32,System.UInt16[],System.UInt32@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugProperty3.SetValueAsReference(Microsoft.VisualStudio.Debugger.Interop.IDebugReference2[],System.UInt32,Microsoft.VisualStudio.Debugger.Interop.IDebugReference2,System.UInt32)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugProperty3.SetValueAsString(System.String,System.UInt32,System.UInt32)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugProperty3.SetValueAsStringWithError(System.String,System.UInt32,System.UInt32,System.String@)"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.IDebugPropertyClose2"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugPropertyClose2.Close"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugPropertyClose2.EnumChildren(Microsoft.VisualStudio.Debugger.Interop.enum_DEBUGPROP_INFO_FLAGS,System.UInt32,System.Guid@,Microsoft.VisualStudio.Debugger.Interop.enum_DBG_ATTRIB_FLAGS,System.String,System.UInt32,Microsoft.VisualStudio.Debugger.Interop.IEnumDebugPropertyInfo2@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugPropertyClose2.GetDerivedMostProperty(Microsoft.VisualStudio.Debugger.Interop.IDebugProperty2@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugPropertyClose2.GetExtendedInfo(System.Guid@,System.Object@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugPropertyClose2.GetMemoryBytes(Microsoft.VisualStudio.Debugger.Interop.IDebugMemoryBytes2@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugPropertyClose2.GetMemoryContext(Microsoft.VisualStudio.Debugger.Interop.IDebugMemoryContext2@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugPropertyClose2.GetParent(Microsoft.VisualStudio.Debugger.Interop.IDebugProperty2@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugPropertyClose2.GetPropertyInfo(Microsoft.VisualStudio.Debugger.Interop.enum_DEBUGPROP_INFO_FLAGS,System.UInt32,System.UInt32,Microsoft.VisualStudio.Debugger.Interop.IDebugReference2[],System.UInt32,Microsoft.VisualStudio.Debugger.Interop.DEBUG_PROPERTY_INFO[])"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugPropertyClose2.GetReference(Microsoft.VisualStudio.Debugger.Interop.IDebugReference2@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugPropertyClose2.GetSize(System.UInt32@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugPropertyClose2.SetValueAsReference(Microsoft.VisualStudio.Debugger.Interop.IDebugReference2[],System.UInt32,Microsoft.VisualStudio.Debugger.Interop.IDebugReference2,System.UInt32)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugPropertyClose2.SetValueAsString(System.String,System.UInt32,System.UInt32)"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.IDebugPropertyCreateEvent2"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugPropertyCreateEvent2.GetDebugProperty(Microsoft.VisualStudio.Debugger.Interop.IDebugProperty2@)"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.IDebugPropertyDestroyEvent2"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugPropertyDestroyEvent2.GetDebugProperty(Microsoft.VisualStudio.Debugger.Interop.IDebugProperty2@)"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.IDebugPropertyField"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugPropertyField.EnumFields(Microsoft.VisualStudio.Debugger.Interop.enum_FIELD_KIND,Microsoft.VisualStudio.Debugger.Interop.enum_FIELD_MODIFIERS,System.String,Microsoft.VisualStudio.Debugger.Interop.NAME_MATCH,Microsoft.VisualStudio.Debugger.Interop.IEnumDebugFields@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugPropertyField.Equal(Microsoft.VisualStudio.Debugger.Interop.IDebugField)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugPropertyField.GetAddress(Microsoft.VisualStudio.Debugger.Interop.IDebugAddress@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugPropertyField.GetContainer(Microsoft.VisualStudio.Debugger.Interop.IDebugContainerField@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugPropertyField.GetExtendedInfo(System.Guid@,System.IntPtr[],System.UInt32@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugPropertyField.GetInfo(Microsoft.VisualStudio.Debugger.Interop.enum_FIELD_INFO_FIELDS,Microsoft.VisualStudio.Debugger.Interop.FIELD_INFO[])"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugPropertyField.GetKind(Microsoft.VisualStudio.Debugger.Interop.enum_FIELD_KIND[])"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugPropertyField.GetPropertyGetter(Microsoft.VisualStudio.Debugger.Interop.IDebugMethodField@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugPropertyField.GetPropertySetter(Microsoft.VisualStudio.Debugger.Interop.IDebugMethodField@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugPropertyField.GetSize(System.UInt32@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugPropertyField.GetType(Microsoft.VisualStudio.Debugger.Interop.IDebugField@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugPropertyField.GetTypeInfo(Microsoft.VisualStudio.Debugger.Interop.TYPE_INFO[])"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.IDebugPropertySafetyWrapper"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugPropertySafetyWrapper.AfterPropertyCall"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugPropertySafetyWrapper.BeforePropertyCall"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugPropertySafetyWrapper.GetRawProperty(Microsoft.VisualStudio.Debugger.Interop.IDebugProperty3@)"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.IDebugProviderProgramNode2"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugProviderProgramNode2.UnmarshalDebuggeeInterface(System.Guid@,System.IntPtr@)"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.IDebugReference2"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugReference2.Compare(Microsoft.VisualStudio.Debugger.Interop.enum_REFERENCE_COMPARE,Microsoft.VisualStudio.Debugger.Interop.IDebugReference2)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugReference2.EnumChildren(Microsoft.VisualStudio.Debugger.Interop.enum_DEBUGREF_INFO_FLAGS,System.UInt32,Microsoft.VisualStudio.Debugger.Interop.enum_DBG_ATTRIB_FLAGS,System.String,System.UInt32,Microsoft.VisualStudio.Debugger.Interop.IEnumDebugReferenceInfo2@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugReference2.GetDerivedMostReference(Microsoft.VisualStudio.Debugger.Interop.IDebugReference2@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugReference2.GetMemoryBytes(Microsoft.VisualStudio.Debugger.Interop.IDebugMemoryBytes2@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugReference2.GetMemoryContext(Microsoft.VisualStudio.Debugger.Interop.IDebugMemoryContext2@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugReference2.GetParent(Microsoft.VisualStudio.Debugger.Interop.IDebugReference2@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugReference2.GetReferenceInfo(Microsoft.VisualStudio.Debugger.Interop.enum_DEBUGREF_INFO_FLAGS,System.UInt32,System.UInt32,Microsoft.VisualStudio.Debugger.Interop.IDebugReference2[],System.UInt32,Microsoft.VisualStudio.Debugger.Interop.DEBUG_REFERENCE_INFO[])"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugReference2.GetSize(System.UInt32@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugReference2.SetReferenceType(Microsoft.VisualStudio.Debugger.Interop.enum_REFERENCE_TYPE)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugReference2.SetValueAsReference(Microsoft.VisualStudio.Debugger.Interop.IDebugReference2[],System.UInt32,Microsoft.VisualStudio.Debugger.Interop.IDebugReference2,System.UInt32)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugReference2.SetValueAsString(System.String,System.UInt32,System.UInt32)"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.IDebugReturnValueEvent2"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugReturnValueEvent2.GetReturnValue(Microsoft.VisualStudio.Debugger.Interop.IDebugProperty2@)"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.IDebugSession2"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugSession2.__deprecated_GetSessionId(Microsoft.VisualStudio.Debugger.Interop.IDebugEventCallback2,System.Guid[],System.UInt32,System.String,System.String@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugSession2.__deprecated_RegisterSessionWithServer(System.String)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugSession2.CauseBreak"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugSession2.ClearAllSessionThreadStackFrames"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugSession2.ConnectToServer(System.String,Microsoft.VisualStudio.Debugger.Interop.IDebugCoreServer2@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugSession2.CreatePendingBreakpoint(Microsoft.VisualStudio.Debugger.Interop.IDebugBreakpointRequest2,Microsoft.VisualStudio.Debugger.Interop.IDebugPendingBreakpoint2@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugSession2.Detach"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugSession2.DisconnectServer(Microsoft.VisualStudio.Debugger.Interop.IDebugCoreServer2)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugSession2.EnumCodeContexts(Microsoft.VisualStudio.Debugger.Interop.IDebugProgram2,Microsoft.VisualStudio.Debugger.Interop.IDebugDocumentPosition2,Microsoft.VisualStudio.Debugger.Interop.IEnumDebugCodeContexts2@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugSession2.EnumDefaultExceptions(Microsoft.VisualStudio.Debugger.Interop.EXCEPTION_INFO[],Microsoft.VisualStudio.Debugger.Interop.IEnumDebugExceptionInfo2@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugSession2.EnumPendingBreakpoints(Microsoft.VisualStudio.Debugger.Interop.IDebugProgram2,System.String,Microsoft.VisualStudio.Debugger.Interop.IEnumDebugPendingBreakpoints2@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugSession2.EnumProcesses(Microsoft.VisualStudio.Debugger.Interop.IEnumDebugProcesses2@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugSession2.EnumSetExceptions(Microsoft.VisualStudio.Debugger.Interop.IDebugProgram2,System.String,System.Guid@,Microsoft.VisualStudio.Debugger.Interop.IEnumDebugExceptionInfo2@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugSession2.GetENCUpdate(Microsoft.VisualStudio.Debugger.Interop.IDebugProgram2,System.Object@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugSession2.GetName(System.String@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugSession2.GetStoppingModel(Microsoft.VisualStudio.Debugger.Interop.enum_STOPPING_MODEL[])"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugSession2.IsAlive"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugSession2.Launch(System.String,Microsoft.VisualStudio.Debugger.Interop.IDebugPort2,System.String,System.String,System.String,System.String,System.String,Microsoft.VisualStudio.Debugger.Interop.enum_LAUNCH_FLAGS,System.UInt32,System.UInt32,System.UInt32,System.Guid@,Microsoft.VisualStudio.Debugger.Interop.IDebugEventCallback2,System.Guid[],System.UInt32,Microsoft.VisualStudio.Debugger.Interop.IDebugProcess2@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugSession2.RegisterJITServer(System.Guid@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugSession2.RemoveAllSetExceptions(System.Guid@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugSession2.RemoveSetException(Microsoft.VisualStudio.Debugger.Interop.EXCEPTION_INFO[])"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugSession2.SetEngineMetric(System.Guid@,System.String,System.Object)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugSession2.SetException(Microsoft.VisualStudio.Debugger.Interop.EXCEPTION_INFO[])"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugSession2.SetLocale(System.UInt16)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugSession2.SetName(System.String)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugSession2.SetRegistryRoot(System.String)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugSession2.SetStoppingModel(Microsoft.VisualStudio.Debugger.Interop.enum_STOPPING_MODEL)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugSession2.ShutdownSession"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugSession2.Terminate(System.Int32)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugSession2.Unused"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.IDebugSession3"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugSession3.__deprecated_GetSessionId(Microsoft.VisualStudio.Debugger.Interop.IDebugEventCallback2,System.Guid[],System.UInt32,System.String,System.String@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugSession3.__deprecated_RegisterSessionWithServer(System.String)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugSession3.AddExceptionCallback(Microsoft.VisualStudio.Debugger.Interop.EXCEPTION_INFO[],Microsoft.VisualStudio.Debugger.Interop.IDebugExceptionCallback2)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugSession3.BlockingShutdownSession(System.UInt32)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugSession3.CauseBreak"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugSession3.ClearAllSessionThreadStackFrames"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugSession3.ConnectToServer(System.String,Microsoft.VisualStudio.Debugger.Interop.IDebugCoreServer2@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugSession3.ConnectToServerEx(System.String,Microsoft.VisualStudio.Debugger.Interop.CONNECT_REASON,Microsoft.VisualStudio.Debugger.Interop.IDebugCoreServer3@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugSession3.CreatePendingBreakpoint(Microsoft.VisualStudio.Debugger.Interop.IDebugBreakpointRequest2,Microsoft.VisualStudio.Debugger.Interop.IDebugPendingBreakpoint2@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugSession3.Detach"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugSession3.DisconnectServer(Microsoft.VisualStudio.Debugger.Interop.IDebugCoreServer2)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugSession3.EnumCodeContexts(Microsoft.VisualStudio.Debugger.Interop.IDebugProgram2,Microsoft.VisualStudio.Debugger.Interop.IDebugDocumentPosition2,Microsoft.VisualStudio.Debugger.Interop.IEnumDebugCodeContexts2@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugSession3.EnumDefaultExceptions(Microsoft.VisualStudio.Debugger.Interop.EXCEPTION_INFO[],Microsoft.VisualStudio.Debugger.Interop.IEnumDebugExceptionInfo2@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugSession3.EnumPendingBreakpoints(Microsoft.VisualStudio.Debugger.Interop.IDebugProgram2,System.String,Microsoft.VisualStudio.Debugger.Interop.IEnumDebugPendingBreakpoints2@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugSession3.EnumProcesses(Microsoft.VisualStudio.Debugger.Interop.IEnumDebugProcesses2@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugSession3.EnumSetExceptions(Microsoft.VisualStudio.Debugger.Interop.IDebugProgram2,System.String,System.Guid@,Microsoft.VisualStudio.Debugger.Interop.IEnumDebugExceptionInfo2@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugSession3.GetENCUpdate(Microsoft.VisualStudio.Debugger.Interop.IDebugProgram2,System.Object@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugSession3.GetName(System.String@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugSession3.GetRecentServerNames(Microsoft.VisualStudio.Debugger.Interop.BSTR_ARRAY[])"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugSession3.GetStateForAllExceptions(Microsoft.VisualStudio.Debugger.Interop.enum_EXCEPTION_STATE[])"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugSession3.GetStoppingModel(Microsoft.VisualStudio.Debugger.Interop.enum_STOPPING_MODEL[])"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugSession3.InitializeFeatures(Microsoft.VisualStudio.Debugger.Interop.enum_SESSION_FEATURES)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugSession3.IsAlive"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugSession3.Launch(System.String,Microsoft.VisualStudio.Debugger.Interop.IDebugPort2,System.String,System.String,System.String,System.String,System.String,Microsoft.VisualStudio.Debugger.Interop.enum_LAUNCH_FLAGS,System.UInt32,System.UInt32,System.UInt32,System.Guid@,Microsoft.VisualStudio.Debugger.Interop.IDebugEventCallback2,System.Guid[],System.UInt32,Microsoft.VisualStudio.Debugger.Interop.IDebugProcess2@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugSession3.LoadSymbols"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugSession3.RegisterCallback(Microsoft.VisualStudio.Debugger.Interop.IDebugEventCallback2)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugSession3.RegisterJITServer(System.Guid@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugSession3.RemoveAllSetExceptions(System.Guid@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugSession3.RemoveExceptionCallback(Microsoft.VisualStudio.Debugger.Interop.EXCEPTION_INFO[],Microsoft.VisualStudio.Debugger.Interop.IDebugExceptionCallback2)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugSession3.RemoveSetException(Microsoft.VisualStudio.Debugger.Interop.EXCEPTION_INFO[])"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugSession3.SetAllExceptions(Microsoft.VisualStudio.Debugger.Interop.enum_EXCEPTION_STATE)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugSession3.SetEngineMetric(System.Guid@,System.String,System.Object)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugSession3.SetException(Microsoft.VisualStudio.Debugger.Interop.EXCEPTION_INFO[])"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugSession3.SetJustMyCodeState(System.Int32,System.UInt32,Microsoft.VisualStudio.Debugger.Interop.JMC_CODE_SPEC[])"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugSession3.SetLocale(System.UInt16)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugSession3.SetMaxRecentServerNames(System.UInt32)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugSession3.SetName(System.String)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugSession3.SetRegistryRoot(System.String)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugSession3.SetStoppingModel(Microsoft.VisualStudio.Debugger.Interop.enum_STOPPING_MODEL)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugSession3.SetSymbolPath(System.String,System.String,System.UInt32)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugSession3.ShutdownSession"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugSession3.Terminate(System.Int32)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugSession3.Unused"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.IDebugSessionCreateEvent2"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.IDebugSessionDestroyEvent2"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.IDebugSetJITEventCallback2"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugSetJITEventCallback2.SetJITEvent"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.IDebugSettingsCallback2"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugSettingsCallback2.EnumEEs(System.UInt32,System.Guid[],System.Guid[],System.UInt32@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugSettingsCallback2.GetEELocalObject(System.Guid@,System.Guid@,System.String,System.Object@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugSettingsCallback2.GetEEMetricDword(System.Guid@,System.Guid@,System.String,System.UInt32@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugSettingsCallback2.GetEEMetricFile(System.Guid@,System.Guid@,System.String,System.String@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugSettingsCallback2.GetEEMetricGuid(System.Guid@,System.Guid@,System.String,System.Guid@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugSettingsCallback2.GetEEMetricString(System.Guid@,System.Guid@,System.String,System.String@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugSettingsCallback2.GetMetricDword(System.String,System.Guid@,System.String,System.UInt32@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugSettingsCallback2.GetMetricGuid(System.String,System.Guid@,System.String,System.Guid@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugSettingsCallback2.GetMetricString(System.String,System.Guid@,System.String,System.String@)"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.IDebugSourceServerModule"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugSourceServerModule.GetSourceServerData(System.UInt32@,System.IntPtr@)"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.IDebugStackFrame2"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugStackFrame2.EnumProperties(Microsoft.VisualStudio.Debugger.Interop.enum_DEBUGPROP_INFO_FLAGS,System.UInt32,System.Guid@,System.UInt32,System.UInt32@,Microsoft.VisualStudio.Debugger.Interop.IEnumDebugPropertyInfo2@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugStackFrame2.GetCodeContext(Microsoft.VisualStudio.Debugger.Interop.IDebugCodeContext2@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugStackFrame2.GetDebugProperty(Microsoft.VisualStudio.Debugger.Interop.IDebugProperty2@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugStackFrame2.GetDocumentContext(Microsoft.VisualStudio.Debugger.Interop.IDebugDocumentContext2@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugStackFrame2.GetExpressionContext(Microsoft.VisualStudio.Debugger.Interop.IDebugExpressionContext2@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugStackFrame2.GetInfo(Microsoft.VisualStudio.Debugger.Interop.enum_FRAMEINFO_FLAGS,System.UInt32,Microsoft.VisualStudio.Debugger.Interop.FRAMEINFO[])"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugStackFrame2.GetLanguageInfo(System.String@,System.Guid@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugStackFrame2.GetName(System.String@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugStackFrame2.GetPhysicalStackRange(System.UInt64@,System.UInt64@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugStackFrame2.GetThread(Microsoft.VisualStudio.Debugger.Interop.IDebugThread2@)"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.IDebugStackFrame3"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugStackFrame3.EnumProperties(Microsoft.VisualStudio.Debugger.Interop.enum_DEBUGPROP_INFO_FLAGS,System.UInt32,System.Guid@,System.UInt32,System.UInt32@,Microsoft.VisualStudio.Debugger.Interop.IEnumDebugPropertyInfo2@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugStackFrame3.GetCodeContext(Microsoft.VisualStudio.Debugger.Interop.IDebugCodeContext2@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugStackFrame3.GetDebugProperty(Microsoft.VisualStudio.Debugger.Interop.IDebugProperty2@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugStackFrame3.GetDocumentContext(Microsoft.VisualStudio.Debugger.Interop.IDebugDocumentContext2@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugStackFrame3.GetExpressionContext(Microsoft.VisualStudio.Debugger.Interop.IDebugExpressionContext2@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugStackFrame3.GetInfo(Microsoft.VisualStudio.Debugger.Interop.enum_FRAMEINFO_FLAGS,System.UInt32,Microsoft.VisualStudio.Debugger.Interop.FRAMEINFO[])"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugStackFrame3.GetLanguageInfo(System.String@,System.Guid@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugStackFrame3.GetName(System.String@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugStackFrame3.GetPhysicalStackRange(System.UInt64@,System.UInt64@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugStackFrame3.GetThread(Microsoft.VisualStudio.Debugger.Interop.IDebugThread2@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugStackFrame3.GetUnwindCodeContext(Microsoft.VisualStudio.Debugger.Interop.IDebugCodeContext2@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugStackFrame3.InterceptCurrentException(Microsoft.VisualStudio.Debugger.Interop.enum_INTERCEPT_EXCEPTION_ACTION,System.UInt64@)"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.IDebugStepCompleteEvent2"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.IDebugStopCompleteEvent2"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.IDebugSymbolProvider"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugSymbolProvider.GetAddressesFromContext(Microsoft.VisualStudio.Debugger.Interop.IDebugDocumentContext2,System.Int32,Microsoft.VisualStudio.Debugger.Interop.IEnumDebugAddresses@,Microsoft.VisualStudio.Debugger.Interop.IEnumDebugAddresses@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugSymbolProvider.GetAddressesFromPosition(Microsoft.VisualStudio.Debugger.Interop.IDebugDocumentPosition2,System.Int32,Microsoft.VisualStudio.Debugger.Interop.IEnumDebugAddresses@,Microsoft.VisualStudio.Debugger.Interop.IEnumDebugAddresses@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugSymbolProvider.GetClassTypeByName(System.String,Microsoft.VisualStudio.Debugger.Interop.NAME_MATCH,Microsoft.VisualStudio.Debugger.Interop.IDebugClassField@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugSymbolProvider.GetContainerField(Microsoft.VisualStudio.Debugger.Interop.IDebugAddress,Microsoft.VisualStudio.Debugger.Interop.IDebugContainerField@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugSymbolProvider.GetContextFromAddress(Microsoft.VisualStudio.Debugger.Interop.IDebugAddress,Microsoft.VisualStudio.Debugger.Interop.IDebugDocumentContext2@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugSymbolProvider.GetField(Microsoft.VisualStudio.Debugger.Interop.IDebugAddress,Microsoft.VisualStudio.Debugger.Interop.IDebugAddress,Microsoft.VisualStudio.Debugger.Interop.IDebugField@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugSymbolProvider.GetGlobalContainer(Microsoft.VisualStudio.Debugger.Interop.IDebugContainerField@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugSymbolProvider.GetLanguage(Microsoft.VisualStudio.Debugger.Interop.IDebugAddress,System.Guid@,System.Guid@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugSymbolProvider.GetMethodFieldsByName(System.String,Microsoft.VisualStudio.Debugger.Interop.NAME_MATCH,Microsoft.VisualStudio.Debugger.Interop.IEnumDebugFields@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugSymbolProvider.GetNamespacesUsedAtAddress(Microsoft.VisualStudio.Debugger.Interop.IDebugAddress,Microsoft.VisualStudio.Debugger.Interop.IEnumDebugFields@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugSymbolProvider.GetNextAddress(Microsoft.VisualStudio.Debugger.Interop.IDebugAddress,System.Int32,Microsoft.VisualStudio.Debugger.Interop.IDebugAddress@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugSymbolProvider.GetTypeByName(System.String,Microsoft.VisualStudio.Debugger.Interop.NAME_MATCH,Microsoft.VisualStudio.Debugger.Interop.IDebugField@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugSymbolProvider.Initialize(Microsoft.VisualStudio.Debugger.Interop.IDebugEngineSymbolProviderServices)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugSymbolProvider.Uninitialize"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.IDebugSymbolProviderDirect"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugSymbolProviderDirect.GetAppIDFromAddress(Microsoft.VisualStudio.Debugger.Interop.IDebugAddress,System.UInt32@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugSymbolProviderDirect.GetCurrentModulesInfo(System.UInt32@,System.Guid[],System.UInt32[],System.UInt32[],System.Object[])"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugSymbolProviderDirect.GetCurrentModulesState(System.UInt32@,System.UInt32@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugSymbolProviderDirect.GetMetaDataImport(System.Guid@,System.UInt32,System.Object@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugSymbolProviderDirect.GetMethodFromAddress(Microsoft.VisualStudio.Debugger.Interop.IDebugAddress,System.Guid@,System.UInt32@,System.Int32@,System.Int32@,System.UInt32@,System.UInt32@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugSymbolProviderDirect.GetSymUnmanagedReader(System.UInt32,System.Guid,System.Object@)"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.IDebugSymbolSearchEvent2"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugSymbolSearchEvent2.GetSymbolSearchInfo(Microsoft.VisualStudio.Debugger.Interop.IDebugModule3@,System.String@,Microsoft.VisualStudio.Debugger.Interop.enum_MODULE_INFO_FLAGS[])"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.IDebugThread2"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugThread2.CanSetNextStatement(Microsoft.VisualStudio.Debugger.Interop.IDebugStackFrame2,Microsoft.VisualStudio.Debugger.Interop.IDebugCodeContext2)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugThread2.EnumFrameInfo(Microsoft.VisualStudio.Debugger.Interop.enum_FRAMEINFO_FLAGS,System.UInt32,Microsoft.VisualStudio.Debugger.Interop.IEnumDebugFrameInfo2@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugThread2.GetLogicalThread(Microsoft.VisualStudio.Debugger.Interop.IDebugStackFrame2,Microsoft.VisualStudio.Debugger.Interop.IDebugLogicalThread2@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugThread2.GetName(System.String@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugThread2.GetProgram(Microsoft.VisualStudio.Debugger.Interop.IDebugProgram2@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugThread2.GetThreadId(System.UInt32@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugThread2.GetThreadProperties(Microsoft.VisualStudio.Debugger.Interop.enum_THREADPROPERTY_FIELDS,Microsoft.VisualStudio.Debugger.Interop.THREADPROPERTIES[])"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugThread2.Resume(System.UInt32@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugThread2.SetNextStatement(Microsoft.VisualStudio.Debugger.Interop.IDebugStackFrame2,Microsoft.VisualStudio.Debugger.Interop.IDebugCodeContext2)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugThread2.SetThreadName(System.String)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugThread2.Suspend(System.UInt32@)"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.IDebugThread3"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugThread3.CanRemapLeafFrame"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugThread3.CanSetNextStatement(Microsoft.VisualStudio.Debugger.Interop.IDebugStackFrame2,Microsoft.VisualStudio.Debugger.Interop.IDebugCodeContext2)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugThread3.EnumFrameInfo(Microsoft.VisualStudio.Debugger.Interop.enum_FRAMEINFO_FLAGS,System.UInt32,Microsoft.VisualStudio.Debugger.Interop.IEnumDebugFrameInfo2@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugThread3.GetLogicalThread(Microsoft.VisualStudio.Debugger.Interop.IDebugStackFrame2,Microsoft.VisualStudio.Debugger.Interop.IDebugLogicalThread2@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugThread3.GetName(System.String@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugThread3.GetProgram(Microsoft.VisualStudio.Debugger.Interop.IDebugProgram2@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugThread3.GetThreadId(System.UInt32@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugThread3.GetThreadProperties(Microsoft.VisualStudio.Debugger.Interop.enum_THREADPROPERTY_FIELDS,Microsoft.VisualStudio.Debugger.Interop.THREADPROPERTIES[])"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugThread3.IsCurrentException"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugThread3.RemapLeafFrame"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugThread3.Resume(System.UInt32@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugThread3.SetNextStatement(Microsoft.VisualStudio.Debugger.Interop.IDebugStackFrame2,Microsoft.VisualStudio.Debugger.Interop.IDebugCodeContext2)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugThread3.SetThreadName(System.String)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugThread3.Suspend(System.UInt32@)"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.IDebugThreadCreateEvent2"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.IDebugThreadDestroyEvent2"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugThreadDestroyEvent2.GetExitCode(System.UInt32@)"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.IDebugThreadNameChangedEvent2"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.IDebugTypeFieldBuilder"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugTypeFieldBuilder.CreatePointerToType(Microsoft.VisualStudio.Debugger.Interop.IDebugField,Microsoft.VisualStudio.Debugger.Interop.IDebugField@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugTypeFieldBuilder.CreatePrimitive(System.UInt32,Microsoft.VisualStudio.Debugger.Interop.IDebugField@)"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.IDebugTypeFieldBuilder2"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugTypeFieldBuilder2.CreateArrayOfType(Microsoft.VisualStudio.Debugger.Interop.IDebugField,System.UInt32,Microsoft.VisualStudio.Debugger.Interop.IDebugField@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugTypeFieldBuilder2.CreatePointerToType(Microsoft.VisualStudio.Debugger.Interop.IDebugField,Microsoft.VisualStudio.Debugger.Interop.IDebugField@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugTypeFieldBuilder2.CreatePrimitive(System.UInt32,Microsoft.VisualStudio.Debugger.Interop.IDebugField@)"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.IDebugWindowsComputerPort2"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugWindowsComputerPort2.GetComputerInfo(Microsoft.VisualStudio.Debugger.Interop.COMPUTER_INFO[])"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.IDebugWrappedJITDebugger2"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugWrappedJITDebugger2.GetName(System.String@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IDebugWrappedJITDebugger2.JITDebug(Microsoft.VisualStudio.Debugger.Interop.CRASHING_PROGRAM_INFO)"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.IEEAssemblyRef"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IEEAssemblyRef.GetCulture(System.String@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IEEAssemblyRef.GetName(System.String@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IEEAssemblyRef.GetPublicKey(System.String@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IEEAssemblyRef.GetVersion(System.UInt16@,System.UInt16@,System.UInt16@,System.UInt16@)"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.IEEAssemblyRefResolveComparer"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IEEAssemblyRefResolveComparer.CompareRef(System.UInt32,System.UInt32,System.UInt32,System.Int32@)"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.IEEDataStorage"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IEEDataStorage.GetData(System.UInt32,System.UInt32@,System.Byte[])"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IEEDataStorage.GetSize(System.UInt32@)"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.IEEHelperObject"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IEEHelperObject.GetAssembly(System.UInt32,Microsoft.VisualStudio.Debugger.Interop.enum_GETASSEMBLY,Microsoft.VisualStudio.Debugger.Interop.enum_ASSEMBLYFLAGS[],System.String@,Microsoft.VisualStudio.Debugger.Interop.IEEDataStorage@,Microsoft.VisualStudio.Debugger.Interop.IEEDataStorage@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IEEHelperObject.GetAssemblyRefForCookie(System.UInt32,Microsoft.VisualStudio.Debugger.Interop.IEEAssemblyRef@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IEEHelperObject.GetHostAssembly(Microsoft.VisualStudio.Debugger.Interop.enum_GETASSEMBLY,Microsoft.VisualStudio.Debugger.Interop.IEEDataStorage@,Microsoft.VisualStudio.Debugger.Interop.IEEDataStorage@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IEEHelperObject.GetTargetAssembly(System.String,System.UInt32@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IEEHelperObject.GetTargetClass(System.String,System.UInt32,System.UInt32@,System.UInt32@,System.UInt32@,System.UInt32@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IEEHelperObject.GetValueAttributeProps(System.UInt32,System.UInt32,System.String@,System.UInt32@,System.String@,System.String@,System.String@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IEEHelperObject.GetViewerAttributeProps(System.UInt32,System.UInt32,System.String@,System.UInt32@,System.String@,System.UInt32@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IEEHelperObject.GetVisualizerAttributeProps(System.UInt32,System.UInt32,System.String@,System.UInt32@,System.String@,System.UInt32@,System.String@,System.UInt32@,System.String@,System.UInt32@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IEEHelperObject.InitCache(Microsoft.VisualStudio.Debugger.Interop.IEEAssemblyRefResolveComparer)"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.IEEHostServices"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IEEHostServices.GetHostValue(System.String,System.String,System.Object@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IEEHostServices.SetHostValue(System.String,System.String,System.Object)"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.IEELocalObject"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IEELocalObject.SetCallback(Microsoft.VisualStudio.Debugger.Interop.IDebugSettingsCallback2)"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.IEEVisualizerDataProvider"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IEEVisualizerDataProvider.CanSetObjectForVisualizer(System.Int32@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IEEVisualizerDataProvider.GetNewObjectForVisualizer(Microsoft.VisualStudio.Debugger.Interop.IDebugObject@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IEEVisualizerDataProvider.GetObjectForVisualizer(Microsoft.VisualStudio.Debugger.Interop.IDebugObject@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IEEVisualizerDataProvider.SetObjectForVisualizer(Microsoft.VisualStudio.Debugger.Interop.IDebugObject,System.String@,Microsoft.VisualStudio.Debugger.Interop.IDebugObject@)"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.IEEVisualizerService"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IEEVisualizerService.CreateInlineProxy(Microsoft.VisualStudio.Debugger.Interop.IDebugObject@,System.Int32@,System.String@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IEEVisualizerService.GetBrowsableState(Microsoft.VisualStudio.Debugger.Interop.IDebugField,Microsoft.VisualStudio.Debugger.Interop.enum_BrowsableKind[])"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IEEVisualizerService.GetCustomViewerCount(System.UInt32@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IEEVisualizerService.GetCustomViewerList(System.UInt32,System.UInt32,Microsoft.VisualStudio.Debugger.Interop.DEBUG_CUSTOM_VIEWER[],System.UInt32@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IEEVisualizerService.GetPropertyProxy(System.UInt32,Microsoft.VisualStudio.Debugger.Interop.IPropertyProxyEESide@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IEEVisualizerService.GetValueDisplayStringCount(System.UInt32,Microsoft.VisualStudio.Debugger.Interop.IDebugField,System.UInt32@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IEEVisualizerService.GetValueDisplayStrings(Microsoft.VisualStudio.Debugger.Interop.enum_DisplayKind,Microsoft.VisualStudio.Debugger.Interop.IDebugField,System.UInt32,System.UInt32,System.String[],System.Int32[],System.UInt32@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IEEVisualizerService.PossiblyHasInlineProxy(System.Int32@)"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.IEEVisualizerServiceProvider"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IEEVisualizerServiceProvider.CreateVisualizerService(Microsoft.VisualStudio.Debugger.Interop.IDebugBinder,Microsoft.VisualStudio.Debugger.Interop.IDebugSymbolProvider,Microsoft.VisualStudio.Debugger.Interop.IDebugAddress,Microsoft.VisualStudio.Debugger.Interop.IEEVisualizerDataProvider,Microsoft.VisualStudio.Debugger.Interop.IEEVisualizerService@)"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.IEnumCodePaths2"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IEnumCodePaths2.Clone(Microsoft.VisualStudio.Debugger.Interop.IEnumCodePaths2@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IEnumCodePaths2.GetCount(System.UInt32@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IEnumCodePaths2.Next(System.UInt32,Microsoft.VisualStudio.Debugger.Interop.CODE_PATH[],System.UInt32@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IEnumCodePaths2.Reset"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IEnumCodePaths2.Skip(System.UInt32)"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.IEnumDebugAddresses"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IEnumDebugAddresses.Clone(Microsoft.VisualStudio.Debugger.Interop.IEnumDebugAddresses@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IEnumDebugAddresses.GetCount(System.UInt32@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IEnumDebugAddresses.Next(System.UInt32,Microsoft.VisualStudio.Debugger.Interop.IDebugAddress[],System.UInt32@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IEnumDebugAddresses.Reset"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IEnumDebugAddresses.Skip(System.UInt32)"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.IEnumDebugBoundBreakpoints2"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IEnumDebugBoundBreakpoints2.Clone(Microsoft.VisualStudio.Debugger.Interop.IEnumDebugBoundBreakpoints2@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IEnumDebugBoundBreakpoints2.GetCount(System.UInt32@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IEnumDebugBoundBreakpoints2.Next(System.UInt32,Microsoft.VisualStudio.Debugger.Interop.IDebugBoundBreakpoint2[],System.UInt32@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IEnumDebugBoundBreakpoints2.Reset"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IEnumDebugBoundBreakpoints2.Skip(System.UInt32)"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.IEnumDebugCodeContexts2"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IEnumDebugCodeContexts2.Clone(Microsoft.VisualStudio.Debugger.Interop.IEnumDebugCodeContexts2@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IEnumDebugCodeContexts2.GetCount(System.UInt32@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IEnumDebugCodeContexts2.Next(System.UInt32,Microsoft.VisualStudio.Debugger.Interop.IDebugCodeContext2[],System.UInt32@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IEnumDebugCodeContexts2.Reset"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IEnumDebugCodeContexts2.Skip(System.UInt32)"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.IEnumDebugCustomAttributes"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IEnumDebugCustomAttributes.Clone(Microsoft.VisualStudio.Debugger.Interop.IEnumDebugCustomAttributes@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IEnumDebugCustomAttributes.GetCount(System.UInt32@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IEnumDebugCustomAttributes.Next(System.UInt32,Microsoft.VisualStudio.Debugger.Interop.IDebugCustomAttribute[],System.UInt32@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IEnumDebugCustomAttributes.Reset"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IEnumDebugCustomAttributes.Skip(System.UInt32)"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.IEnumDebugErrorBreakpoints2"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IEnumDebugErrorBreakpoints2.Clone(Microsoft.VisualStudio.Debugger.Interop.IEnumDebugErrorBreakpoints2@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IEnumDebugErrorBreakpoints2.GetCount(System.UInt32@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IEnumDebugErrorBreakpoints2.Next(System.UInt32,Microsoft.VisualStudio.Debugger.Interop.IDebugErrorBreakpoint2[],System.UInt32@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IEnumDebugErrorBreakpoints2.Reset"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IEnumDebugErrorBreakpoints2.Skip(System.UInt32)"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.IEnumDebugExceptionInfo2"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IEnumDebugExceptionInfo2.Clone(Microsoft.VisualStudio.Debugger.Interop.IEnumDebugExceptionInfo2@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IEnumDebugExceptionInfo2.GetCount(System.UInt32@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IEnumDebugExceptionInfo2.Next(System.UInt32,Microsoft.VisualStudio.Debugger.Interop.EXCEPTION_INFO[],System.UInt32@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IEnumDebugExceptionInfo2.Reset"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IEnumDebugExceptionInfo2.Skip(System.UInt32)"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.IEnumDebugFields"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IEnumDebugFields.Clone(Microsoft.VisualStudio.Debugger.Interop.IEnumDebugFields@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IEnumDebugFields.GetCount(System.UInt32@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IEnumDebugFields.Next(System.UInt32,Microsoft.VisualStudio.Debugger.Interop.IDebugField[],System.UInt32@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IEnumDebugFields.Reset"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IEnumDebugFields.Skip(System.UInt32)"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.IEnumDebugFrameInfo2"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IEnumDebugFrameInfo2.Clone(Microsoft.VisualStudio.Debugger.Interop.IEnumDebugFrameInfo2@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IEnumDebugFrameInfo2.GetCount(System.UInt32@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IEnumDebugFrameInfo2.Next(System.UInt32,Microsoft.VisualStudio.Debugger.Interop.FRAMEINFO[],System.UInt32@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IEnumDebugFrameInfo2.Reset"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IEnumDebugFrameInfo2.Skip(System.UInt32)"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.IEnumDebugFrameInfoFilter2"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IEnumDebugFrameInfoFilter2.CanFilter(System.Int32@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IEnumDebugFrameInfoFilter2.Clone(Microsoft.VisualStudio.Debugger.Interop.IEnumDebugFrameInfo2@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IEnumDebugFrameInfoFilter2.GetCount(System.UInt32@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IEnumDebugFrameInfoFilter2.IsFiltered(System.Int32@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IEnumDebugFrameInfoFilter2.Next(System.UInt32,Microsoft.VisualStudio.Debugger.Interop.FRAMEINFO[],System.UInt32@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IEnumDebugFrameInfoFilter2.Reset"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IEnumDebugFrameInfoFilter2.Skip(System.UInt32)"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.IEnumDebugModules2"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IEnumDebugModules2.Clone(Microsoft.VisualStudio.Debugger.Interop.IEnumDebugModules2@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IEnumDebugModules2.GetCount(System.UInt32@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IEnumDebugModules2.Next(System.UInt32,Microsoft.VisualStudio.Debugger.Interop.IDebugModule2[],System.UInt32@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IEnumDebugModules2.Reset"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IEnumDebugModules2.Skip(System.UInt32)"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.IEnumDebugObjects"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IEnumDebugObjects.Clone(Microsoft.VisualStudio.Debugger.Interop.IEnumDebugObjects@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IEnumDebugObjects.GetCount(System.UInt32@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IEnumDebugObjects.Next(System.UInt32,Microsoft.VisualStudio.Debugger.Interop.IDebugObject[],System.UInt32@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IEnumDebugObjects.Reset"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IEnumDebugObjects.Skip(System.UInt32)"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.IEnumDebugPendingBreakpoints2"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IEnumDebugPendingBreakpoints2.Clone(Microsoft.VisualStudio.Debugger.Interop.IEnumDebugPendingBreakpoints2@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IEnumDebugPendingBreakpoints2.GetCount(System.UInt32@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IEnumDebugPendingBreakpoints2.Next(System.UInt32,Microsoft.VisualStudio.Debugger.Interop.IDebugPendingBreakpoint2[],System.UInt32@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IEnumDebugPendingBreakpoints2.Reset"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IEnumDebugPendingBreakpoints2.Skip(System.UInt32)"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.IEnumDebugPorts2"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IEnumDebugPorts2.Clone(Microsoft.VisualStudio.Debugger.Interop.IEnumDebugPorts2@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IEnumDebugPorts2.GetCount(System.UInt32@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IEnumDebugPorts2.Next(System.UInt32,Microsoft.VisualStudio.Debugger.Interop.IDebugPort2[],System.UInt32@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IEnumDebugPorts2.Reset"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IEnumDebugPorts2.Skip(System.UInt32)"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.IEnumDebugPortSuppliers2"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IEnumDebugPortSuppliers2.Clone(Microsoft.VisualStudio.Debugger.Interop.IEnumDebugPortSuppliers2@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IEnumDebugPortSuppliers2.GetCount(System.UInt32@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IEnumDebugPortSuppliers2.Next(System.UInt32,Microsoft.VisualStudio.Debugger.Interop.IDebugPortSupplier2[],System.UInt32@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IEnumDebugPortSuppliers2.Reset"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IEnumDebugPortSuppliers2.Skip(System.UInt32)"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.IEnumDebugProcesses2"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IEnumDebugProcesses2.Clone(Microsoft.VisualStudio.Debugger.Interop.IEnumDebugProcesses2@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IEnumDebugProcesses2.GetCount(System.UInt32@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IEnumDebugProcesses2.Next(System.UInt32,Microsoft.VisualStudio.Debugger.Interop.IDebugProcess2[],System.UInt32@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IEnumDebugProcesses2.Reset"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IEnumDebugProcesses2.Skip(System.UInt32)"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.IEnumDebugPrograms2"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IEnumDebugPrograms2.Clone(Microsoft.VisualStudio.Debugger.Interop.IEnumDebugPrograms2@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IEnumDebugPrograms2.GetCount(System.UInt32@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IEnumDebugPrograms2.Next(System.UInt32,Microsoft.VisualStudio.Debugger.Interop.IDebugProgram2[],System.UInt32@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IEnumDebugPrograms2.Reset"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IEnumDebugPrograms2.Skip(System.UInt32)"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.IEnumDebugPropertyInfo2"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IEnumDebugPropertyInfo2.Clone(Microsoft.VisualStudio.Debugger.Interop.IEnumDebugPropertyInfo2@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IEnumDebugPropertyInfo2.GetCount(System.UInt32@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IEnumDebugPropertyInfo2.Next(System.UInt32,Microsoft.VisualStudio.Debugger.Interop.DEBUG_PROPERTY_INFO[],System.UInt32@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IEnumDebugPropertyInfo2.Reset"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IEnumDebugPropertyInfo2.Skip(System.UInt32)"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.IEnumDebugReferenceInfo2"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IEnumDebugReferenceInfo2.Clone(Microsoft.VisualStudio.Debugger.Interop.IEnumDebugReferenceInfo2@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IEnumDebugReferenceInfo2.GetCount(System.UInt32@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IEnumDebugReferenceInfo2.Next(System.UInt32,Microsoft.VisualStudio.Debugger.Interop.DEBUG_REFERENCE_INFO[],System.UInt32@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IEnumDebugReferenceInfo2.Reset"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IEnumDebugReferenceInfo2.Skip(System.UInt32)"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.IEnumDebugStackFrames2"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IEnumDebugStackFrames2.Clone(Microsoft.VisualStudio.Debugger.Interop.IEnumDebugStackFrames2@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IEnumDebugStackFrames2.GetCount(System.UInt32@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IEnumDebugStackFrames2.GetIndex(Microsoft.VisualStudio.Debugger.Interop.IDebugStackFrame2,System.UInt32@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IEnumDebugStackFrames2.Next(System.UInt32,Microsoft.VisualStudio.Debugger.Interop.IDebugStackFrame2[],System.UInt32@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IEnumDebugStackFrames2.Reset"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IEnumDebugStackFrames2.Skip(System.UInt32)"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.IEnumDebugThreads2"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IEnumDebugThreads2.Clone(Microsoft.VisualStudio.Debugger.Interop.IEnumDebugThreads2@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IEnumDebugThreads2.GetCount(System.UInt32@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IEnumDebugThreads2.Next(System.UInt32,Microsoft.VisualStudio.Debugger.Interop.IDebugThread2[],System.UInt32@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IEnumDebugThreads2.Reset"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IEnumDebugThreads2.Skip(System.UInt32)"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.IJITDebuggingHost2"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IJITDebuggingHost2.JITAsLoggedInUser(Microsoft.VisualStudio.Debugger.Interop.CRASHING_PROGRAM_INFO)"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.IManagedViewerHost"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IManagedViewerHost.CreateViewer(System.UInt32,System.Object,Microsoft.VisualStudio.Debugger.Interop.IPropertyProxyEESide)"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.IPropertyProxyEESide"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IPropertyProxyEESide.CreateReplacementObject(Microsoft.VisualStudio.Debugger.Interop.IEEDataStorage,Microsoft.VisualStudio.Debugger.Interop.IEEDataStorage@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IPropertyProxyEESide.GetInitialData(Microsoft.VisualStudio.Debugger.Interop.IEEDataStorage@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IPropertyProxyEESide.GetManagedViewerCreationData(System.String@,Microsoft.VisualStudio.Debugger.Interop.IEEDataStorage@,Microsoft.VisualStudio.Debugger.Interop.IEEDataStorage@,System.String@,Microsoft.VisualStudio.Debugger.Interop.enum_ASSEMBLYLOCRESOLUTION[],System.Int32@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IPropertyProxyEESide.InitSourceDataProvider(Microsoft.VisualStudio.Debugger.Interop.IEEDataStorage@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IPropertyProxyEESide.InPlaceUpdateObject(Microsoft.VisualStudio.Debugger.Interop.IEEDataStorage,Microsoft.VisualStudio.Debugger.Interop.IEEDataStorage@)"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IPropertyProxyEESide.ResolveAssemblyReference(System.String,Microsoft.VisualStudio.Debugger.Interop.enum_GETASSEMBLY,Microsoft.VisualStudio.Debugger.Interop.IEEDataStorage@,Microsoft.VisualStudio.Debugger.Interop.IEEDataStorage@,System.String@,Microsoft.VisualStudio.Debugger.Interop.enum_ASSEMBLYLOCRESOLUTION[])"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.IPropertyProxyProvider"></member>
    <member name="M:Microsoft.VisualStudio.Debugger.Interop.IPropertyProxyProvider.GetPropertyProxy(System.UInt32,Microsoft.VisualStudio.Debugger.Interop.IPropertyProxyEESide@)"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.JMC_CODE_SPEC"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.JMC_CODE_SPEC.bstrModuleName"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.JMC_CODE_SPEC.fIsUserCode"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.MACHINE_INFO"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.MACHINE_INFO.bstrName"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.MACHINE_INFO.Fields"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.MACHINE_INFO.Flags"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.METADATA_ADDRESS_ARRAYELEM"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.METADATA_ADDRESS_ARRAYELEM.dwIndex"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.METADATA_ADDRESS_ARRAYELEM.tokMethod"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.METADATA_ADDRESS_FIELD"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.METADATA_ADDRESS_FIELD.tokField"></member>
    <member name="T:Microsoft.VisualStudio.Debugger.Interop.METADATA_ADDRESS_LOCAL"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.METADATA_ADDRESS_LOCAL.dwIndex"></member>
    <member name="F:Microsoft.VisualStudio.Debugger.Interop.METADATA_ADDRESS_LOCAL.pLocal"></member>
    <member name="F:Mi