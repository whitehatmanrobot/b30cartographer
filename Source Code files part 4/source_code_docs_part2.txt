d}\par\li180 None. \par\li0{\b Can Take Focus}\par\li180 Windows: No\line Maciontosh: No \par\li0{\b Windows Implementation}\par\li180 The control is created with the "STATIC" class and with the SS_LEFT, WS_CHILD, WS_GROUP styles.\line If the {\uldb Transparent}{\v ControlStyle_Transparent} style is set the control also has the WS_EX_TRANSPARENT style. \page #{\footnote ControlType_ScrollableText} ${\footnote ControlType ScrollableText} K{\footnote ScrollableText} +{\footnote ControlType:ScrollableText} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b ScrollableText Control \line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 This control displays a long text that can not fit on a page normally. A typical application for this control is displaying the license agreement.\line \par\li0{\b Property}\par\li180 There can be no property associated with this control.  \par\li0{\b Valid Style Bits}\par\li180 {\uldb Enabled}{\v ControlStyle_Enabled}\line {\uldb Sunken}{\v ControlStyle_Sunken}\line {\uldb Visible}{\v ControlStyle_Visible}\line \par\li0{\b Valid Control Attributes}\par\li180 {\uldb ClientRect}{\v ControlAttribute_ClientRect}\line {\uldb Enabled}{\v ControlAttribute_Enabled}\line {\uldb Height}{\v ControlAttribute_Height}\line {\uldb Help}{\v ControlAttribute_Help}\line {\uldb KeyInt}{\v ControlAttribute_KeyInt}\line {\uldb KeyString}{\v ControlAttribute_KeyString}\line {\uldb Position}{\v ControlAttribute_Position}\line {\uldb RefCount}{\v ControlAttribute_RefCount}\line {\uldb Sunken}{\v ControlAttribute_Sunken}\line {\uldb Text}{\v ControlAttribute_Text}\line {\uldb Visible}{\v ControlAttribute_Visible}\line {\uldb Width}{\v ControlAttribute_Width}\line {\uldb WindowHandle}{\v ControlAttribute_WindowHandle}\line {\uldb X}{\v ControlAttribute_X}\line {\uldb Y}{\v ControlAttribute_Y}\line \par\li0{\b Control Events Published}\par\li180 None. \par\li0{\b Can Take Focus}\par\li180 Windows: No\line Maciontosh: No \par\li0{\b Windows Implementation}\par\li180 The control is created using the "RICHEDIT" class with the ES_MULTILINE, WS_HSCROLL, WS_VSCROLL, ES_READONLY,  WS_TABSTOP, ES_AUTOHSCROLL, ES_AUTOVSCROLL, WS_CHILD and WS_GROUP styles. \line \page #{\footnote ControlType_SelectionTree} ${\footnote ControlType SelectionTree} K{\footnote SelectionTree} +{\footnote ControlType:SelectionTree} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b SelectionTree Control \line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 This special control is designed to present some of the information in the {\uldb Feature Table}{\v _msi_Feature_Table@msi.hlp} to the user and allow the user to change the selection state of some items.\line \par\li0{\b Property}\par\li180 String valued, the name of the directory property that will be set by the browse dialog.  \par\li0{\b Valid Style Bits}\par\li180 {\uldb Enabled}{\v ControlStyle_Enabled}\line {\uldb Indirect}{\v ControlStyle_Indirect}\line {\uldb Sunken}{\v ControlStyle_Sunken}\line {\uldb Visible}{\v ControlStyle_Visible}\line \par\li0{\b Valid Control Attributes}\par\li180 {\uldb ClientRect}{\v ControlAttribute_ClientRect}\line {\uldb Enabled}{\v ControlAttribute_Enabled}\line {\uldb Height}{\v ControlAttribute_Height}\line {\uldb Help}{\v ControlAttribute_Help}\line {\uldb Indirect}{\v ControlAttribute_Indirect}\line {\uldb IndirectPropertyName}{\v ControlAttribute_IndirectPropertyName}\line {\uldb KeyInt}{\v ControlAttribute_KeyInt}\line {\uldb KeyString}{\v ControlAttribute_KeyString}\line {\uldb OriginalValue}{\v ControlAttribute_OriginalValue}\line {\uldb Position}{\v ControlAttribute_Position}\line {\uldb PropertyName}{\v ControlAttribute_PropertyName}\line {\uldb PropertyValue}{\v ControlAttribute_PropertyValue}\line {\uldb RefCount}{\v ControlAttribute_RefCount}\line {\uldb Sunken}{\v ControlAttribute_Sunken}\line {\uldb Text}{\v ControlAttribute_Text}\line {\uldb Visible}{\v ControlAttribute_Visible}\line {\uldb Width}{\v ControlAttribute_Width}\line {\uldb WindowHandle}{\v ControlAttribute_WindowHandle}\line {\uldb X}{\v ControlAttribute_X}\line {\uldb Y}{\v ControlAttribute_Y}\line \line \par\li0{\b Control Events Published}\par\li180 {\uldb SelectionAction}{\v ControlEvent_SelectionAction}\line {\uldb SelectionBrowse}{\v ControlEvent_SelectionBrowse}\line {\uldb SelectionDescription}{\v ControlEvent_SelectionDescription}\line {\uldb SelectionIcon}{\v ControlEvent_SelectionIcon}\line {\uldb SelectionPath}{\v ControlEvent_SelectionPath}\line {\uldb SelectionPathOn}{\v ControlEvent_SelectionPathOn}\line {\uldb SelectionSize}{\v ControlEvent_SelectionSize}\line \par\li0{\b Can Take Focus}\par\li180 Windows: Yes\line Maciontosh: No \par\li0{\b Related Strings in the {\uldb UIText Table}{\v _msi_UIText_Table@msi.hlp}}\par\li180 {\b AbsentPath} The path displayed for an item in the absent state.   \line The following six strings are used to display the number of children selected and the size associated with the highlighted item.\line {\b SelChildCostPos}\line {\b SelChildCostNeg}\line {\b SelParentCostPosPos}\line {\b SelParentCostPosNeg}\line {\b SelParentCostNegPos}\line {\b SelParentCostNegNeg}\line The following strings are used to display the available selection options for an item in a popup menu.\line {\b MenuAbsent}\line {\b MenuLocal}\line {\b MenuCD}\line {\b MenuNetwork}\line The following strings are used to explain the present selection in the {\uldb SelectionDescription}{\v ControlEvent_SelectionDescription} control event.\line {\b SelAbsentAbsent}\line {\b SelAbsentLocal}\line {\b SelAbsentCD}\line {\b SelAbsentNetwork}\line {\b SelLocalAbsent}\line {\b SelLocalLocal}\line {\b SelLocalCD}\line {\b SelLocalNetwork}\line {\b SelCDAbsent}\line {\b SelNetworkAbsent}\line {\b SelCDLocal}\line {\b SelNetworkLocal}\line {\b SelCDCD}\line {\b SelNetworkNetwork}\line The following four localized strings are used in formatting the size of a file.\line {\b Bytes}\line {\b KB}\line {\b MB}\line {\b GB}\line \par\li0{\b Windows Implementation}\par\li180 This control is created with the WC_TREEVIEW class and the WS_BORDER, TVS_HASLINES, TVS_HASBUTTONS, TVS_LINESATROOT, TVS_DISABLEDRAGDROP, TVS_SHOWSELALWAYS, WS_CHILD, WS_TABSTOP, WS_GROUP styles. \par\li0{\b Note}\par\li180 The selection tree gets populated only if the DirectoryInitialize, CostInitialize and CostFinalize actions were all previously called. \line \page #{\footnote ControlType_VolumeCostList} ${\footnote ControlType VolumeCostList} K{\footnote VolumeCostList} +{\footnote ControlType:VolumeCostList} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b VolumeCostList Control \line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 This special control is designed to present some information to the user about the cost associated with  the selection on the different volumes. The control shows all the volumes in the  {\uldb VolumeCost}{\v MsiSelectionManager_GetVolumeCostTable} table, plus all volumes that are of the  types specified in the attribute bits. If the required disk space exceeds the available amount on some  drive, the volume is highlighted in the table. Clicking on a column header sorts the volumes according  to the chosen column.\line \par\li0{\b Property}\par\li180 There can be no property associated with this control.  \par\li0{\b Valid Style Bits}\par\li180 {\uldb CDROMVolume}{\v ControlStyle_CDROMVolume}\line {\uldb Enabled}{\v ControlStyle_Enabled}\line {\uldb FixedVolume}{\v ControlStyle_FixedVolume}\line {\uldb FloppyVolume}{\v ControlStyle_FloppyVolume}\line {\uldb RAMDiskVolume}{\v ControlStyle_RAMDiskVolume}\line {\uldb RemoteVolume}{\v ControlStyle_RemoteVolume}\line {\uldb RemovableVolume}{\v ControlStyle_RemovableVolume}\line {\uldb Sunken}{\v ControlStyle_Sunken}\line {\uldb Visible}{\v ControlStyle_Visible}\line \par\li0{\b Valid Control Attributes}\par\li180 {\uldb ClientRect}{\v ControlAttribute_ClientRect}\line {\uldb Enabled}{\v ControlAttribute_Enabled}\line {\uldb Height}{\v ControlAttribute_Height}\line {\uldb Help}{\v ControlAttribute_Help}\line {\uldb KeyInt}{\v ControlAttribute_KeyInt}\line {\uldb KeyString}{\v ControlAttribute_KeyString}\line {\uldb Position}{\v ControlAttribute_Position}\line {\uldb RefCount}{\v ControlAttribute_RefCount}\line {\uldb Sunken}{\v ControlAttribute_Sunken}\line {\uldb Text}{\v ControlAttribute_Text}\line {\uldb Visible}{\v ControlAttribute_Visible}\line {\uldb Width}{\v ControlAttribute_Width}\line {\uldb WindowHandle}{\v ControlAttribute_WindowHandle}\line {\uldb X}{\v ControlAttribute_X}\line {\uldb Y}{\v ControlAttribute_Y}\line \par\li0{\b Control Events Published}\par\li180 None.\line \par\li0{\b Can Take Focus}\par\li180 Windows: No\line Maciontosh: No \par\li0{\b Related Strings in the {\uldb UIText Table}{\v _msi_UIText_Table@msi.hlp}}\par\li180 The strings for the column headings in the table:\line {\b VolumeCostAvailable}\line {\b VolumeCostDifference}\line {\b VolumeCostRequired}\line {\b VolumeCostSize}\line {\b VolumeCostVolume}\line The following four localized strings are used in formatting the size of a file.\line {\b Bytes}\line {\b KB}\line {\b MB}\line {\b GB}\line \par\li0{\b Windows Implementation}\par\li180 This control is created with the WC_LISTVIEW class and the LVS_REPORT, WS_VSCROLL, WS_HSCROLL, LVS_SHAREIMAGELISTS, LVS_AUTOARRANGE, LVS_SINGLESEL, WS_BORDER, WS_CHILD, WS_TABSTOP, WS_GROUP styles. \line \page #{\footnote ControlStyle_Bitmap} ${\footnote ControlStyle Bitmap} K{\footnote Bitmap} +{\footnote ControlStyle:Bitmap} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b Bitmap Control Stylebit \line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 If this bit is set the controls text is replaced by a bitmap. The text entry in the database that normally would specify the text of the control is used as a foreign key to the {\uldb Binary Table}{\v _msi_Binary_Table@msi.hlp} to point to the binary data needed for the picture. Therefore such a control has no text associated with it, only the picture. This style bit should not be set at the same time as the {\uldb Icon}{\v ControlStyle_Icon}! \par\li0{\b Control Types That Can Have This Style}\par\li180 {\uldb CheckBox}{\v ControlType_CheckBox}\line {\uldb PushButton}{\v ControlType_PushButton}\line {\uldb RadioButtonGroup}{\v ControlType_RadioButtonGroup} \par\li0{\b Associated Control Attribute}\par\li180 {\uldb Bitmap}{\v ControlAttribute_Bitmap}\line \par\li0{\b Numeric Value}\par\li180 0x00040000 = 262144\line \page #{\footnote ControlStyle_Icon} ${\footnote ControlStyle Icon} K{\footnote Icon} +{\footnote ControlStyle:Icon} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b Icon Control Stylebit \line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 If this bit is set the controls text is replaced by a icon. The text entry in the database that normally would specify the text of the control is used as a foreign key to the {\uldb Binary Table}{\v _msi_Binary_Table@msi.hlp} to point to the binary data needed for the picture. Therefore such a control has no text associated with it, only the picture. This style bit should not be set at the same time as the {\uldb Bitmap}{\v ControlStyle_Bitmap}! \par\li0{\b Control Types That Can Have This Style}\par\li180 {\uldb CheckBox}{\v ControlType_CheckBox}\line {\uldb PushButton}{\v ControlType_PushButton}\line {\uldb RadioButtonGroup}{\v ControlType_RadioButtonGroup} \par\li0{\b Associated Control Attribute}\par\li180 {\uldb Icon}{\v ControlAttribute_Icon}\line \par\li0{\b Numeric Value}\par\li180 0x00080000 = 524288\line \page #{\footnote ControlStyle_IconSize} ${\footnote ControlStyle IconSize} K{\footnote IconSize} +{\footnote ControlStyle:IconSize} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b IconSize Control Stylebits \line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 An icon file can hold several different size images of the same icon. These two bits determine which size image of the icon is loaded. If neither bit is set, the first image is loaded. If only the lower bit is set, the first 16x16 image is loaded. If only the higher bit is set, the firts 32x32 image is loaded. If both bits are set, the first 48x48 image is loaded.\line If the {\uldb FixedSize}{\v ControlStyle_FixedSize} bit is set, these bits determine the size of the image displayed. \par\li0{\b Control Types That Can Have This Style}\par\li180 {\uldb CheckBox}{\v ControlType_CheckBox}\line {\uldb Icon}{\v ControlType_Icon}\line {\uldb PushButton}{\v ControlType_PushButton}\line {\uldb RadioButtonGroup}{\v ControlType_RadioButtonGroup} \par\li0{\b Associated Control Attribute}\par\li180 None\line \par\li0{\b Numeric Value}\par\li180 0x00200000 = 2097152\line 0x00400000 = 4194304\line \page #{\footnote ControlStyle_ImageHandle} ${\footnote ControlStyle ImageHandle} K{\footnote ImageHandle} +{\footnote ControlStyle:ImageHandle} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b ImageHandle Control Stylebits \line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 Controls that require an image normaly specify the name of the binary information in the text field and the binary data is looked up from the Binary table using this key. If this style bit is set, it means that the binary information is NOT comming from the Binary table, but instead the text field represents the handle to a bitmap or icon (in a string format) and this already loaded icon or bitmap must be used by the control.  Obviously these handles can not be authored previously, the actual value of the handle in the table has to be set by some action that is performed prior to creating the control.  A possible use is to have an action to find all the running applications and put their names and icons into the {\uldb ListView Table}{\v _msi_ListView_Table@msi.hlp}, and the control can display these names and icons,  Even if this bit is on, other stylebits governing the size and stretching of the image are still observed. I.e. if an action puts a handle of an image in the table, but other stylebits describe a different size, the image will be still stretched.  \par\li0{\b Control Types That Can Have This Style}\par\li180 {\uldb Bitmap}{\v ControlType_Bitmap}\line {\uldb CheckBox}{\v ControlType_CheckBox}\line {\uldb Icon}{\v ControlType_Icon}\line {\uldb ListView}{\v ControlType_ListView}\line {\uldb PushButton}{\v ControlType_PushButton}\line {\uldb RadioButtonGroup}{\v ControlType_RadioButtonGroup} \par\li0{\b Associated Control Attribute}\par\li180 None\line \par\li0{\b Numeric Value}\par\li180 0x00010000 = 65536\line \page #{\footnote ControlStyle_CDROMVolume} ${\footnote ControlStyle CDROMVolume} K{\footnote CDROMVolume} +{\footnote ControlStyle:CDROMVolume} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b CDROMVolume Control Stylebit \line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 If this bit is set the control lists CDROM volumes in its list of volumes. \par\li0{\b Control Types That Can Have This Style}\par\li180 {\uldb DirectoryCombo}{\v ControlType_DirectoryCombo}\line {\uldb VolumeCostList}{\v ControlType_VolumeCostList}\line {\uldb VolumeSelectCombo}{\v ControlType_VolumeSelectCombo}\line \par\li0{\b Associated Control Attribute}\par\li180 None\line \par\li0{\b Related Control Stylebits}\par\li180 {\uldb FixedVolume}{\v ControlStyle_FixedVolume}\line {\uldb FloppyVolume}{\v ControlStyle_FloppyVolume}\line {\uldb RAMDiskVolume}{\v ControlStyle_RAMDiskVolume}\line {\uldb RemoteVolume}{\v ControlStyle_RemoteVolume}\line {\uldb RemovableVolume}{\v ControlStyle_RemovableVolume}\line \par\li0{\b Numeric Value}\par\li180 0x00080000 = 524288\line \page #{\footnote ControlStyle_FixedVolume} ${\footnote ControlStyle FixedVolume} K{\footnote FixedVolume} +{\footnote ControlStyle:FixedVolume} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b FixedVolume Control Stylebit \line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 If this bit is set the control lists fixed internal harddrives in its list of volumes. \par\li0{\b Control Types That Can Have This Style}\par\li180 {\uldb DirectoryCombo}{\v ControlType_DirectoryCombo}\line {\uldb VolumeCostList}{\v ControlType_VolumeCostList}\line {\uldb VolumeSelectCombo}{\v ControlType_VolumeSelectCombo}\line \par\li0{\b Associated Control Attribute}\par\li180 None\line \par\li0{\b Related Control Stylebits}\par\li180 {\uldb CDROMVolume}{\v ControlStyle_CDROMVolume}\line {\uldb FloppyVolume}{\v ControlStyle_FloppyVolume}\line {\uldb RAMDiskVolume}{\v ControlStyle_RAMDiskVolume}\line {\uldb RemoteVolume}{\v ControlStyle_RemoteVolume}\line {\uldb RemovableVolume}{\v ControlStyle_RemovableVolume}\line \par\li0{\b Numeric Value}\par\li180 0x00020000 = 131072\line \page #{\footnote ControlStyle_FloppyVolume} ${\footnote ControlStyle FloppyVolume} K{\footnote FloppyVolume} +{\footnote ControlStyle:FloppyVolume} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b FloppyVolume Control Stylebit \line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 If this bit is set the control lists floppy drives in its list of volumes. \par\li0{\b Control Types That Can Have This Style}\par\li180 {\uldb DirectoryCombo}{\v ControlType_DirectoryCombo}\line {\uldb VolumeCostList}{\v ControlType_VolumeCostList}\line {\uldb VolumeSelectCombo}{\v ControlType_VolumeSelectCombo}\line \par\li0{\b Associated Control Attribute}\par\li180 None\line \par\li0{\b Related Control Stylebits}\par\li180 {\uldb CDROMVolume}{\v ControlStyle_CDROMVolume}\line {\uldb FixedVolume}{\v ControlStyle_FixedVolume}\line {\uldb RAMDiskVolume}{\v ControlStyle_RAMDiskVolume}\line {\uldb RemoteVolume}{\v ControlStyle_RemoteVolume}\line {\uldb RemovableVolume}{\v ControlStyle_RemovableVolume}\line \par\li0{\b Numeric Value}\par\li180 0x00200000 = 2097152\line \page #{\footnote ControlStyle_RAMDiskVolume} ${\footnote ControlStyle RAMDiskVolume} K{\footnote RAMDiskVolume} +{\footnote ControlStyle:RAMDiskVolume} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b RAMDiskVolume Control Stylebit \line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 If this bit is set the control lists RAM disks in its list of volumes. \par\li0{\b Control Types That Can Have This Style}\par\li180 {\uldb DirectoryCombo}{\v ControlType_DirectoryCombo}\line {\uldb VolumeCostList}{\v ControlType_VolumeCostList}\line {\uldb VolumeSelectCombo}{\v ControlType_VolumeSelectCombo}\line \par\li0{\b Associated Control Attribute}\par\li180 None\line \par\li0{\b Related Control Stylebits}\par\li180 {\uldb CDROMVolume}{\v ControlStyle_CDROMVolume}\line {\uldb FixedVolume}{\v ControlStyle_FixedVolume}\line {\uldb FloppyVolume}{\v ControlStyle_FloppyVolume}\line {\uldb RemoteVolume}{\v ControlStyle_RemoteVolume}\line {\uldb RemovableVolume}{\v ControlStyle_RemovableVolume}\line \par\li0{\b Numeric Value}\par\li180 0x00100000 = 1048567\line \page #{\footnote ControlStyle_RemoteVolume} ${\footnote ControlStyle RemoteVolume} K{\footnote RemoteVolume} +{\footnote ControlStyle:RemoteVolume} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b RemoteVolume Control Stylebit \line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 If this bit is set the control lists remote volumes in its list of volumes. \par\li0{\b Control Types That Can Have This Style}\par\li180 {\uldb DirectoryCombo}{\v ControlType_DirectoryCombo}\line {\uldb VolumeCostList}{\v ControlType_VolumeCostList}\line {\uldb VolumeSelectCombo}{\v ControlType_VolumeSelectCombo}\line \par\li0{\b Associated Control Attribute}\par\li180 None\line \par\li0{\b Related Control Stylebits}\par\li180 {\uldb CDROMVolume}{\v ControlStyle_CDROMVolume}\line {\uldb FixedVolume}{\v ControlStyle_FixedVolume}\line {\uldb FloppyVolume}{\v ControlStyle_FloppyVolume}\line {\uldb RAMDiskVolume}{\v ControlStyle_RAMDiskVolume}\line {\uldb RemovableVolume}{\v ControlStyle_RemovableVolume}\line \par\li0{\b Numeric Value}\par\li180 0x00040000 = 262144\line \page #{\footnote ControlStyle_RemovableVolume} ${\footnote ControlStyle RemovableVolume} K{\footnote RemovableVolume} +{\footnote ControlStyle:RemovableVolume} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b RemovableVolume Control Stylebit \line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 If this bit is set the control lists removable drives in its list of volumes. \par\li0{\b Control Types That Can Have This Style}\par\li180 {\uldb DirectoryCombo}{\v ControlType_DirectoryCombo}\line {\uldb VolumeCostList}{\v ControlType_VolumeCostList}\line {\uldb VolumeSelectCombo}{\v ControlType_VolumeSelectCombo}\line \par\li0{\b Associated Control Attribute}\par\li180 None\line \par\li0{\b Related Control Stylebits}\par\li180 {\uldb CDROMVolume}{\v ControlStyle_CDROMVolume}\line {\uldb FixedVolume}{\v ControlStyle_FixedVolume}\line {\uldb FloppyVolume}{\v ControlStyle_FloppyVolume}\line {\uldb RAMDiskVolume}{\v ControlStyle_RAMDiskVolume}\line {\uldb RemoteVolume}{\v ControlStyle_RemoteVolume}\line \par\li0{\b Numeric Value}\par\li180 0x00010000 = 65536\line \page #{\footnote ControlStyle_Enabled} ${\footnote ControlStyle Enabled} K{\footnote Enabled} +{\footnote ControlStyle:Enabled} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b Enabled Control Stylebit \line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 If this bit is set the control control is created enabled, otherwise disabled. The enabled/disabled state of the control can be changed later through the associated attribute or by the publisher of some event that the given control subscribes to.  \par\li0{\b Control Types That Can Have This Style}\par\li180 All controls. On some controls (like Bitmaps and Icons) this bit makes no visible difference. \par\li0{\b Associated Control Attribute}\par\li180 {\uldb Enabled}{\v ControlAttribute_Enabled}\line \par\li0{\b Numeric Value}\par\li180 0x00000002 = 2\line \page #{\footnote ControlStyle_FixedSize} ${\footnote ControlStyle FixedSize} K{\footnote FixedSize} +{\footnote ControlStyle:FixedSize} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b FixedSize Control Stylebit \line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 If this bit is set the picture on the button or a bitmap or an icon control is displayed in its "natural size". If the picture is smaller than the control, it is centered, if the picture is larger, it is chopped in case of bitmaps but it is shrunk in case of icons. If the bit is not set, the picture is stretched to fit the button or control rectangle. \line On CheckBoxes, PushButtons and RadioButtonGroups this bit has any effect only if the {\uldb Bitmap}{\v ControlStyle_Bitmap} or the {\uldb Icon}{\v ControlStyle_Icon} is set.\line On Icon controls and buttons associated with icons this bit is ignored if the {\uldb IconSize}{\v ControlStyle_IconSize} bits are not set! \par\li0{\b Control Types That Can Have This Style}\par\li180 {\uldb Bitmap}{\v ControlType_Bitmap}\line {\uldb CheckBox}{\v ControlType_CheckBox}\line {\uldb Icon}{\v ControlType_Icon}\line {\uldb PushButton}{\v ControlType_PushButton}\line {\uldb RadioButtonGroup}{\v ControlType_RadioButtonGroup} \par\li0{\b Associated Control Attribute}\par\li180 None.\line \par\li0{\b Numeric Value}\par\li180 0x00100000 = 1048576\line \page #{\footnote ControlStyle_HasBorder} ${\footnote ControlStyle HasBorder} K{\footnote HasBorder} +{\footnote ControlStyle:HasBorder} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b HasBorder Control Stylebit \line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 If this bit is set the {\uldb RadioButtonGroup}{\v ControlType_RadioButtonGroup} has a border displayed around it. If the style bit is not set, the border is not displayed and no text is displayed on the group either! \par\li0{\b Control Types That Can Have This Style}\par\li180 {\uldb RadioButtonGroup}{\v ControlType_RadioButtonGroup}\line \par\li0{\b Associated Control Attribute}\par\li180 {\uldb HasBorder}{\v ControlAttribute_HasBorder}.\line \par\li0{\b Numeric Value}\par\li180 0x01000000 = 16777216\line \page #{\footnote ControlStyle_Indirect} ${\footnote ControlStyle Indirect} K{\footnote Indirect} +{\footnote ControlStyle:Indirect} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b Indirect Control Stylebit \line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 If this bit is set on an active control, it means that the control changes the value of the property whose name is the value of the named property. Otherwise the named property is changed. \par\li0{\b Control Types That Can Have This Style}\par\li180 All active controls\line \par\li0{\b Associated Control Attribute}\par\li180 {\uldb Indirect}{\v ControlAttribute_Indirect}.\line \par\li0{\b Numeric Value}\par\li180 0x00000008 = 8\line \page #{\footnote ControlStyle_SplitPath} ${\footnote ControlStyle SplitPath} K{\footnote SplitPath} +{\footnote ControlStyle:SplitPath} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b SplitPath Control Stylebit \line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 If this bit is set the control splits the path into tail and body. The PathEdit displays only the tail of the path, the DirectoryCombo and DirectoryList controls show only the body of the path. If the bit is not set, the controls work on the entire path. \par\li0 {\b Control Types That Can Have This Style}\par\li180 {\uldb DirectoryCombo}{\v ControlType_DirectoryCombo}\line {\uldb DirectoryList}{\v ControlType_DirectoryList}\line {\uldb PathEdit}{\v ControlType_PathEdit}\line \par\li0{\b Associated Control Attribute}\par\li180 None\line \par\li0{\b Numeric Value}\par\li180 0x02000000 = 33554432\line \page #{\footnote ControlStyle_Integer} ${\footnote ControlStyle Integer} K{\footnote Integer} +{\footnote ControlStyle:Integer} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b Integer Control Stylebit \line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 If this bit is set on an active control, the associated property is integer valued. Otherwise the property is string valued. \par\li0{\b Control Types That Can Have This Style}\par\li180 {\uldb CheckBox}{\v ControlType_CheckBox}\line {\uldb ComboBox}{\v ControlType_ComboBox}\line {\uldb Edit}{\v ControlType_Edit}\line {\uldb ListBox}{\v ControlType_ListBox}\line {\uldb RadioButtonGroup}{\v ControlType_RadioButtonGroup}\line \par\li0{\b Associated Control Attribute}\par\li180 {\uldb Integer}{\v ControlAttribute_Integer}.\line \par\li0{\b Numeric Value}\par\li180 0x00000010 = 16\line \page #{\footnote ControlStyle_Progress95} ${\footnote ControlStyle Progress95} K{\footnote Progress95} +{\footnote ControlStyle:Progress95} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b Progress95 Control Stylebit \line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 If this bit is set on a progress bar, it is drawn with small disjoint rectangles in Windows 95 style. Otherwise the bar is drawn continuously. \par\li0{\b Control Types That Can Have This Style}\par\li180 {\uldb ProgressBar}{\v ControlType_ProgressBar}\line \par\li0{\b Associated Control Attribute}\par\li180 None.\line \par\li0{\b Numeric Value}\par\li180 0x00010000 = 65536\line \page #{\footnote ControlStyle_ComboList} ${\footnote ControlStyle ComboList} K{\footnote ComboList} +{\footnote ControlStyle:ComboList} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b ComboList Control Stylebit \line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 If this bit is set on a combobox, the edit field is replaced by a static text field, therefore the user can not enter a new value, can choose only one of the predefined values. Otherwise the combobox is drawn with an edit field. \par\li0{\b Control Types That Can Have This Style}\par\li180 {\uldb ComboBox}{\v ControlType_ComboBox}\line \par\li0{\b Associated Control Attribute}\par\li180 None.\line \par\li0{\b Numeric Value}\par\li180 0x00020000 = 131072\line \page #{\footnote ControlStyle_PushLike} ${\footnote ControlStyle PushLike} K{\footnote PushLike} +{\footnote ControlStyle:PushLike} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b PushLike Control Stylebit \line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 If this bit is set on a checkbox or a radiobuttongroup the button is drawn with the visual appearance of a push button, but it's logic stays the same. If the bit is not set the controls are drawn in their usual visual style. \par\li0{\b Control Types That Can Have This Style}\par\li180 {\uldb CheckBox}{\v ControlType_CheckBox}\line {\uldb RadioButtonGroup}{\v ControlType_RadioButtonGroup}\line \par\li0{\b Associated Control Attribute}\par\li180 {\uldb PushLike}{\v ControlAttribute_PushLike}.\line \par\li0{\b Numeric Value}\par\li180 0x00020000 = 131072\line \page #{\footnote ControlStyle_Sorted} ${\footnote ControlStyle Sorted} K{\footnote Sorted} +{\footnote ControlStyle:Sorted} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b Sorted Control Stylebit \line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 If this bit is set on a listbox or combobox, the items in the list are displayed in the order defined by the {\b Ordering} column of the corresponding table. If the bit is not set, the items are displayed in alphabetical order. \par\li0{\b Control Types That Can Have This Style}\par\li180 {\uldb ComboBox}{\v ControlType_ComboBox}\line {\uldb ListBox}{\v ControlType_ListBox}\line {\uldb ListView}{\v ControlType_ListView}\line \par\li0{\b Associated Control Attribute}\par\li180 None.\line \par\li0{\b Numeric Value}\par\li180 0x00010000 = 65536\line \page #{\footnote ControlStyle_Sunken} ${\footnote ControlStyle Sunken} K{\footnote Sunken} +{\footnote ControlStyle:Sunken} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b Sunken Control Stylebit \line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 If this bit is set on a control, it is displayed with a sunken, 3D look, if that is available on the system. Otherwise the control is displayed in its default visual style. The effect of this style bit is different on different versions of Windows. On most controls it has no visible effect. \par\li0{\b Control Types That Can Have This Style}\par\li180 All controls \par\li0{\b Associated Control Attribute}\par\li180 {\uldb Sunken}{\v ControlAttribute_Sunken}.\line \par\li0{\b Numeric Value}\par\li180 0x00000004 = 4\line \page #{\footnote ControlStyle_Transparent} ${\footnote ControlStyle Transparent} K{\footnote Transparent} +{\footnote ControlStyle:Transparent} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b Transparent Control Stylebit \line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 If this bit is set on a text control, it is displayed transparently, the background shows through the control where there are no characters. Otherwise the background is opaque. \par\li0{\b Control Types That Can Have This Style}\par\li180 {\uldb Text}{\v ControlType_Text} \par\li0{\b Associated Control Attribute}\par\li180 {\uldb Transparent}{\v ControlAttribute_Transparent}.\line \par\li0{\b Numeric Value}\par\li180 0x00010000 = 65536\line \page #{\footnote ControlStyle_Visible} ${\footnote ControlStyle Visible} K{\footnote Visible} +{\footnote ControlStyle:Visible} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b Visible Control Stylebit \line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 If this bit is set on a control, it is visible on the dialog. Otherwise it is hidden. The visible/hidden state of the control can be changed later through the associated attribute or by the publisher of some event that the given control subscribes to.  \par\li0{\b Control Types That Can Have This Style}\par\li180 All controls \par\li0{\b Associated Control Attribute}\par\li180 {\uldb Visible}{\v ControlAttribute_Visible}.\line \par\li0{\b Numeric Value}\par\li180 0x00000001 = 1\line \page #{\footnote ControlAttribute_Bitmap} ${\footnote ControlAttribute Bitmap} K{\footnote Bitmap} +{\footnote ControlAttribute:Bitmap} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b Bitmap Control Atribute \line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 This attribute tells if the text on the buttons is replaced by a bitmap. \par\li0{\b Type}\par\li180 Boolean. \par\li0{\b Access}\par\li180 Read only. \par\li0{\b Minimum Size of the Record}\par\li180 At least 1 field. \par\li0{\b Control Types That Have This Attribute}\par\li180 {\uldb CheckBox}{\v ControlType_CheckBox}\line {\uldb PushButton}{\v ControlType_PushButton}\line {\uldb RadioButtonGroup}{\v ControlType_RadioButtonGroup} \par\li0{\b Associated Control Stylebit}\par\li180 {\uldb Bitmap}{\v ControlStyle_Bitmap}. \par\li0{\b Related Control Attribute}\par\li180 {\uldb Icon}{\v ControlAttribute_Icon}\line \page #{\footnote ControlAttribute_Icon} ${\footnote ControlAttribute Icon} K{\footnote Icon} +{\footnote ControlAttribute:Icon} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b Icon Control Atribute \line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 This attribute tells if the text on the buttons is replaced by an icon. \par\li0{\b Type}\par\li180 Boolean. \par\li0{\b Access}\par\li180 Read only. \par\li0{\b Minimum Size of the Record}\par\li180 At least 1 field. \par\li0{\b Control Types That Have This Attribute}\par\li180 {\uldb CheckBox}{\v ControlType_CheckBox}\line {\uldb PushButton}{\v ControlType_PushButton}\line {\uldb RadioButtonGroup}{\v ControlType_RadioButtonGroup} \par\li0{\b Associated Control Stylebit}\par\li180 {\uldb Icon}{\v ControlStyle_Icon}. \par\li0{\b Related Control Attribute}\par\li180 {\uldb Bitmap}{\v ControlAttribute_Bitmap}\line \par\li0{\b Numeric Value}\par\li180 0x00080000 = 524288\line \page #{\footnote ControlAttribute_ClientRect} ${\footnote ControlAttribute ClientRect} K{\footnote ClientRect} +{\footnote ControlAttribute:ClientRect} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b ClientRect Control Atribute \line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 This attribute retrieves the coordinates of a window's client area. The client coordinates specify the upper-left and lower-right corners of the client area. The coordinates are relative to the upper left corner of the control's window. The four values are returned in the following order: left, top, right, bottom.   \par\li0{\b Type}\par\li180 Integer. \par\li0{\b Access}\par\li180 Read only. \par\li0{\b Minimum Size of the Record}\par\li180 At least 4 fields. \par\li0{\b Control Types That Have This Attribute}\par\li180 All controls. \par\li0{\b Associated Control Stylebit}\par\li180 None. \par\li0{\b Related Control Attributes}\par\li180 {\uldb Position}{\v ControlAttribute_Position}\line {\uldb Width}{\v ControlAttribute_Width}\line {\uldb Height}{\v ControlAttribute_Height}\line {\uldb X}{\v ControlAttribute_X}\line {\uldb Y}{\v ControlAttribute_Y}\line \page #{\footnote ControlAttribute_Default} ${\footnote ControlAttribute Default} K{\footnote Default} +{\footnote ControlAttribute:Default} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b Default Control Atribute \line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 This attribute describes if the given control is defined as the default control on the dialog. If it is the default, then hitting the Return key automaticaly activates this control. \par\li0{\b Type}\par\li180 Boolean. \par\li0{\b Access}\par\li180 Read and Write. \par\li0{\b Minimum Size of the Record}\par\li180 At least 1 field. \par\li0{\b Control Types That Have This Attribute}\par\li180 All controls. \line Although this attribute is defined for every control, it is only practical for controls that have a button-like behaviour. \par\li0{\b Associated Control Stylebit}\par\li180 None. \page #{\footnote ControlAttribute_Enabled} ${\footnote ControlAttribute Enabled} K{\footnote Enabled} +{\footnote ControlAttribute:Enabled} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b Enabled Control Atribute \line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 This attribute describes if the given control is enabled or disabled. Most controls have a gray disabled look. For some inert controls changeing this attribute results in no visible change. \par\li0{\b Type}\par\li180 Boolean. \par\li0{\b Access}\par\li180 Read and Write. \par\li0{\b Minimum Size of the Record}\par\li180 At least 1 field. \par\li0{\b Control Types That Have This Attribute}\par\li180 All controls. \line \par\li0{\b Associated Control Stylebit}\par\li180 {\uldb Enabled}{\v ControlStyle_Enabled}. \page #{\footnote ControlAttribute_HasBorder} ${\footnote ControlAttribute HasBorder} K{\footnote HasBorder} +{\footnote ControlAttribute:HasBorder} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b HasBorder Control Atribute \line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 This attribute describes if the radiobutton group has a border around it. If there is no border, then no text is shown on the top of the group, even if there is some text defined. \par\li0{\b Type}\par\li180 Boolean. \par\li0{\b Access}\par\li180 Read only. \par\li0{\b Minimum Size of the Record}\par\li180 At least 1 field. \par\li0{\b Control Types That Have This Attribute}\par\li180 {\uldb RadioButtonGroup}{\v ControlType_RadioButtonGroup} \line \par\li0{\b Associated Control Stylebit}\par\li180 {\uldb HasBorder}{\v ControlStyle_HasBorder}. \page #{\footnote ControlAttribute_Height} ${\footnote ControlAttribute Height} K{\footnote Height} +{\footnote ControlAttribute:Height} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b Height Control Atribute \line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 This attribute returns the height of the control in pixels. \par\li0{\b Type}\par\li180 Integer. \par\li0{\b Access}\par\li180 Read only. \par\li0{\b Minimum Size of the Record}\par\li180 At least 1 field. \par\li0{\b Control Types That Have This Attribute}\par\li180 Every control. \par\li0{\b Associated Control Stylebit}\par\li180 None. \par\li0{\b Related Control Attributes}\par\li180 {\uldb Position}{\v ControlAttribute_Position}\line {\uldb Width}{\v ControlAttribute_Width}\line {\uldb X}{\v ControlAttribute_X}\line {\uldb Y}{\v ControlAttribute_Y}\line {\uldb ClientRect}{\v ControlAttribute_ClientRect}\line \page #{\footnote ControlAttribute_Width} ${\footnote ControlAttribute Width} K{\footnote Width} +{\footnote ControlAttribute:Width} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b Width Control Atribute \line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 This attribute returns the width of the control in pixels. \par\li0{\b Type}\par\li180 Integer. \par\li0{\b Access}\par\li180 Read only. \par\li0{\b Minimum Size of the Record}\par\li180 At least 1 field. \par\li0{\b Control Types That Have This Attribute}\par\li180 Every control. \par\li0{\b Associated Control Stylebit}\par\li180 None. \par\li0{\b Related Control Attributes}\par\li180 {\uldb Position}{\v ControlAttribute_Position}\line {\uldb Height}{\v ControlAttribute_Height}\line {\uldb X}{\v ControlAttribute_X}\line {\uldb Y}{\v ControlAttribute_Y}\line {\uldb ClientRect}{\v ControlAttribute_ClientRect}\line \page #{\footnote ControlAttribute_X} ${\footnote ControlAttribute X} K{\footnote X} +{\footnote ControlAttribute:X} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b X Control Atribute \line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 This attribute returns the the x coordinate of the upper left corner of the control in pixels. \par\li0{\b Type}\par\li180 Integer. \par\li0{\b Access}\par\li180 Read only. \par\li0{\b Minimum Size of the Record}\par\li180 At least 1 field. \par\li0{\b Control Types That Have This Attribute}\par\li180 Every control. \par\li0{\b Associated Control Stylebit}\par\li180 None. \par\li0{\b Related Control Attributes}\par\li180 {\uldb Position}{\v ControlAttribute_Position}\line {\uldb Width}{\v ControlAttribute_Width}\line {\uldb Height}{\v ControlAttribute_Height}\line {\uldb Y}{\v ControlAttribute_Y}\line {\uldb ClientRect}{\v ControlAttribute_ClientRect}\line \page #{\footnote ControlAttribute_Y} ${\footnote ControlAttribute Y} K{\footnote Y} +{\footnote ControlAttribute:Y} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b Y Control Atribute \line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 This attribute returns the the y coordinate of the upper left corner of the control in pixels. \par\li0{\b Type}\par\li180 Integer. \par\li0{\b Access}\par\li180 Read only. \par\li0{\b Minimum Size of the Record}\par\li180 At least 1 field. \par\li0{\b Control Types That Have This Attribute}\par\li180 Every control. \par\li0{\b Associated Control Stylebit}\par\li180 None. \par\li0{\b Related Control Attributes}\par\li180 {\uldb Position}{\v ControlAttribute_Position}\line {\uldb Width}{\v ControlAttribute_Width}\line {\uldb Height}{\v ControlAttribute_Height}\line {\uldb X}{\v ControlAttribute_X}\line {\uldb ClientRect}{\v ControlAttribute_ClientRect}\line \page #{\footnote ControlAttribute_Help} ${\footnote ControlAttribute Help} K{\footnote Help} +{\footnote ControlAttribute:Help} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b Help Control Atribute \line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 This attribute is the help string used with the control for the context sensitive help. \par\li0{\b Type}\par\li180 String. \par\li0{\b Access}\par\li180 Read only. \par\li0{\b Minimum Size of the Record}\par\li180 At least 1 field. \par\li0{\b Control Types That Have This Attribute}\par\li180 Every control. \par\li0{\b Associated Control Stylebit}\par\li180 None. \page #{\footnote ControlAttribute_BillboardName} ${\footnote ControlAttribute BillboardName} K{\footnote BillboardName} +{\footnote ControlAttribute:BillboardName} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b BillboardName Control Atribute \line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 This attribute returns the name of the currently running billboard, or sets and displays a billboard by name. This attibute is used in preview mode. \par\li0{\b Type}\par\li180 String. \par\li0{\b Access}\par\li180 Read and Write. \par\li0{\b Minimum Size of the Record}\par\li180 At least 1 field. \par\li0{\b Control Types That Have This Attribute}\par\li180 {\uldb Billboard}{\v ControlType_Billboard}. \par\li0{\b Associated Control Stylebit}\par\li180 None. \page #{\footnote ControlAttribute_Text} ${\footnote ControlAttribute Text} K{\footnote Text} +{\footnote ControlAttribute:Text} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b Text Control Atribute \line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 This attribute is the text string used displayed in the control. On setting, if the field 0 of the record is not null, the record is formatted using FormatText. If the field 0 is null, the first field of the record defines the text. On getting the value is always returned in the first field. For some controls this text may not be visible. On Windows the accelerator key for a control is defined by placing a "&" in front of the desired character in this string. \par\li0{\b Type}\par\li180 String. \par\li0{\b Access}\par\li180 Read and Write. \par\li0{\b Minimum Size of the Record}\par\li180 At least 1 field. \par\li0{\b Control Types That Have This Attribute}\par\li180 Every control. \par\li0{\b Associated Control Stylebit}\par\li180 None. \page #{\footnote ControlAttribute_Indirect} ${\footnote ControlAttribute Indirect} K{\footnote Indirect} +{\footnote ControlAttribute:Indirect} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b Indirect Control Atribute \line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 This attribute determines for some active controls if the associated property is referenced indirectly. \par\li0{\b Type}\par\li180 Boolean. \par\li0{\b Access}\par\li180 Read only. \par\li0{\b Minimum Size of the Record}\par\li180 At least 1 field. \par\li0{\b Control Types That Have This Attribute}\par\li180 All active controls. \par\li0{\b Associated Control Stylebit}\par\li180 {\uldb Indirect}{\v ControlStyle_Indirect}. \page #{\footnote ControlAttribute_Integer} ${\footnote ControlAttribute Integer} K{\footnote Integer} +{\footnote ControlAttribute:Integer} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b Integer Control Atribute \line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 This attribute determines for some active controls if the associated property is integer valued. \par\li0{\b Type}\par\li180 Boolean. \par\li0{\b Access}\par\li180 Read only. \par\li0{\b Minimum Size of the Record}\par\li180 At least 1 field. \par\li0{\b Control Types That Have This Attribute}\par\li180 {\uldb CheckBox}{\v ControlType_CheckBox}\line {\uldb ComboBox}{\v ControlType_ComboBox}\line {\uldb Edit}{\v ControlType_Edit}\line {\uldb ListBox}{\v ControlType_ListBox}\line {\uldb RadioButtonGroup}{\v ControlType_RadioButtonGroup}\line \par\li0{\b Associated Control Stylebit}\par\li180 {\uldb Integer}{\v ControlStyle_Integer}. \page #{\footnote ControlAttribute_ItemsCount} ${\footnote ControlAttribute ItemsCount} K{\footnote ItemsCount} +{\footnote ControlAttribute:ItemsCount} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b ItemsCount Control Atribute \line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 This attribute returns the number of items in the control. These items represent the possible property values that the user can choose from. \par\li0{\b Type}\par\li180 Integer. \par\li0{\b Access}\par\li180 Read only. \par\li0{\b Minimum Size of the Record}\par\li180 At least 1 field. \par\li0{\b Control Types That Have This Attribute}\par\li180 {\uldb ComboBox}{\v ControlType_ComboBox}\line {\uldb ListBox}{\v ControlType_ListBox}\line {\uldb RadioButtonGroup}{\v ControlType_RadioButtonGroup}\line \par\li0{\b Associated Control Stylebit}\par\li180 None. \par\li0{\b Related Control Attributes}\par\li180 {\uldb ItemsHandle}{\v ControlAttribute_ItemsHandle}\line {\uldb ItemsHeight}{\v ControlAttribute_ItemsHeight}\line {\uldb ItemsText}{\v ControlAttribute_ItemsText}\line {\uldb ItemsValue}{\v ControlAttribute_ItemsValue}\line {\uldb ItemsWidth}{\v ControlAttribute_ItemsWidth}\line {\uldb ItemsX}{\v ControlAttribute_ItemsX}\line {\uldb ItemsY}{\v ControlAttribute_ItemsY}\line \page #{\footnote ControlAttribute_ItemsHandle} ${\footnote ControlAttribute ItemsHandle} K{\footnote ItemsHandle} +{\footnote ControlAttribute:ItemsHandle} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b ItemsHandle Control Atribute \line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 This attribute returns a list of the window handles to the individual buttons in a radiobuttongroup. This attribute is supported on Windows only. \par\li0{\b Type}\par\li180 Integer. \par\li0{\b Access}\par\li180 Read only. \par\li0{\b Minimum Size of the Record}\par\li180 At least the number of items. To ensure that the record is created with sufficient number of fields, one can call the {\uldb ItemsCount}{\v ControlAttribute_ItemsCount} control attribute first. The items are listed in a random order, but all Items* attributes will use the same order of items. \par\li0{\b Control Types That Have This Attribute}\par\li180 {\uldb RadioButtonGroup}{\v ControlType_RadioButtonGroup} Windows only!\line \par\li0{\b Associated Control Stylebit}\par\li180 None. \par\li0{\b Related Control Attributes}\par\li180 {\uldb ItemsCount}{\v ControlAttribute_ItemsCount}\line {\uldb ItemsHeight}{\v ControlAttribute_ItemsHeight}\line {\uldb ItemsText}{\v ControlAttribute_ItemsText}\line {\uldb ItemsValue}{\v ControlAttribute_ItemsValue}\line {\uldb ItemsWidth}{\v ControlAttribute_ItemsWidth}\line {\uldb ItemsX}{\v ControlAttribute_ItemsX}\line {\uldb ItemsY}{\v ControlAttribute_ItemsY}\line \page #{\footnote ControlAttribute_ItemsHeight} ${\footnote ControlAttribute ItemsHeight} K{\footnote ItemsHeight} +{\footnote ControlAttribute:ItemsHandle} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b ItemsHeight Control Atribute \line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 This attribute returns a list of the height in pixels of the windows for the individual buttons in a radiobuttongroup. \par\li0{\b Type}\par\li180 Integer. \par\li0{\b Access}\par\li180 Read only. \par\li0{\b Minimum Size of the Record}\par\li180 At least the number of items. To ensure that the record is created with sufficient number of field, one can call the {\uldb ItemsCount}{\v ControlAttribute_ItemsCount} control attribute first. The items are listed in a random order, but all Items* attributes will use the same order of items. \par\li0{\b Control Types That Have This Attribute}\par\li180 {\uldb RadioButtonGroup}{\v ControlType_RadioButtonGroup}\line \par\li0{\b Associated Control Stylebit}\par\li180 None. \par\li0{\b Related Control Attributes}\par\li180 {\uldb ItemsCount}{\v ControlAttribute_ItemsCount}\line {\uldb ItemsHandle}{\v ControlAttribute_ItemsHandle}\line {\uldb ItemsText}{\v ControlAttribute_ItemsText}\line {\uldb ItemsValue}{\v ControlAttribute_ItemsValue}\line {\uldb ItemsWidth}{\v ControlAttribute_ItemsWidth}\line {\uldb ItemsX}{\v ControlAttribute_ItemsX}\line {\uldb ItemsY}{\v ControlAttribute_ItemsY}\line \page #{\footnote ControlAttribute_ItemsWidth} ${\footnote ControlAttribute ItemsWidth} K{\footnote ItemsWidth} +{\footnote ControlAttribute:ItemsWidth} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b ItemsWidth Control Atribute \line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 This attribute returns a list of the width in pixels of the windows for the individual buttons in a radiobuttongroup. \par\li0{\b Type}\par\li180 Integer. \par\li0{\b Access}\par\li180 Read only. \par\li0{\b Minimum Size of the Record}\par\li180 At least the number of items. To ensure that the record is created with sufficient number of fields, one can call the {\uldb ItemsCount}{\v ControlAttribute_ItemsCount} control attribute first. The items are listed in a random order, but all Items* attributes will use the same order of items. \par\li0{\b Control Types That Have This Attribute}\par\li180 {\uldb RadioButtonGroup}{\v ControlType_RadioButtonGroup}\line \par\li0{\b Associated Control Stylebit}\par\li180 None. \par\li0{\b Related Control Attributes}\par\li180 {\uldb ItemsCount}{\v ControlAttribute_ItemsCount}\line {\uldb ItemsHandle}{\v ControlAttribute_ItemsHandle}\line {\uldb ItemsHeight}{\v ControlAttribute_ItemsHeight}\line {\uldb ItemsText}{\v ControlAttribute_ItemsText}\line {\uldb ItemsValue}{\v ControlAttribute_ItemsValue}\line {\uldb ItemsX}{\v ControlAttribute_ItemsX}\line {\uldb ItemsY}{\v ControlAttribute_ItemsY}\line \page #{\footnote ControlAttribute_ItemsX} ${\footnote ControlAttribute ItemsX} K{\footnote ItemsX} +{\footnote ControlAttribute:ItemsX} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b ItemsX Control Atribute \line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 This attribute returns a list of the x coordinates in pixels for the upper left corner of the windows for the individual buttons in a radiobuttongroup. \par\li0{\b Type}\par\li180 Integer. \par\li0{\b Access}\par\li180 Read only. \par\li0{\b Minimum Size of the Record}\par\li180 At least the number of items. To ensure that the record is created with sufficient number of fields, one can call the {\uldb ItemsCount}{\v ControlAttribute_ItemsCount} control attribute first. The items are listed in a random order, but all Items* attributes will use the same order of items. \par\li0{\b Control Types That Have This Attribute}\par\li180 {\uldb RadioButtonGroup}{\v ControlType_RadioButtonGroup}\line \par\li0{\b Associated Control Stylebit}\par\li180 None. \par\li0{\b Related Control Attributes}\par\li180 {\uldb ItemsCount}{\v ControlAttribute_ItemsCount}\line {\uldb ItemsHandle}{\v ControlAttribute_ItemsHandle}\line {\uldb ItemsHeight}{\v ControlAttribute_ItemsHeight}\line {\uldb ItemsText}{\v ControlAttribute_ItemsText}\line {\uldb ItemsValue}{\v ControlAttribute_ItemsValue}\line {\uldb ItemsWidth}{\v ControlAttribute_ItemsWidth}\line {\uldb ItemsY}{\v ControlAttribute_ItemsY}\line \page #{\footnote ControlAttribute_ItemsY} ${\footnote ControlAttribute ItemsY} K{\footnote ItemsY} +{\footnote ControlAttribute:ItemsY} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b ItemsY Control Atribute \line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 This attribute returns a list of the y coordinates in pixels for the upper left corner of the windows for the individual buttons in a radiobuttongroup. \par\li0{\b Type}\par\li180 Integer. \par\li0{\b Access}\par\li180 Read only. \par\li0{\b Minimum Size of the Record}\par\li180 At least the number of items. To ensure that the record is created with sufficient number of fields, one can call the {\uldb ItemsCount}{\v ControlAttribute_ItemsCount} control attribute first. The items are listed in a random order, but all Items* attributes will use the same order of items. \par\li0{\b Control Types That Have This Attribute}\par\li180 {\uldb RadioButtonGroup}{\v ControlType_RadioButtonGroup}\line \par\li0{\b Associated Control Stylebit}\par\li180 None. \par\li0{\b Related Control Attributes}\par\li180 {\uldb ItemsCount}{\v ControlAttribute_ItemsCount}\line {\uldb ItemsHandle}{\v ControlAttribute_ItemsHandle}\line {\uldb ItemsHeight}{\v ControlAttribute_ItemsHeight}\line {\uldb ItemsText}{\v ControlAttribute_ItemsText}\line {\uldb ItemsValue}{\v ControlAttribute_ItemsValue}\line {\uldb ItemsWidth}{\v ControlAttribute_ItemsWidth}\line {\uldb ItemsX}{\v ControlAttribute_ItemsX}\line \page #{\footnote ControlAttribute_ItemsText} ${\footnote ControlAttribute ItemsText} K{\footnote ItemsText} +{\footnote ControlAttribute:ItemsText} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b ItemsText Control Atribute \line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 This attribute returns a list of the visible text strings associated with the items in the control. \par\li0{\b Type}\par\li180 String. \par\li0{\b Access}\par\li180 Read only. \par\li0{\b Minimum Size of the Record}\par\li180 At least the number of items. To ensure that the record is created with sufficient number of fields, one can call the {\uldb ItemsCount}{\v ControlAttribute_ItemsCount} control attribute first. The items are listed in a random order, but all Items* attributes will use the same order of items. \par\li0{\b Control Types That Have This Attribute}\par\li180 {\uldb ComboBox}{\v ControlType_ComboBox}\line {\uldb ListBox}{\v ControlType_ListBox}\line {\uldb RadioButtonGroup}{\v ControlType_RadioButtonGroup}\line \par\li0{\b Associated Control Stylebit}\par\li180 None. \par\li0{\b Related Control Attributes}\par\li180 {\uldb ItemsCount}{\v ControlAttribute_ItemsCount}\line {\uldb ItemsHandle}{\v ControlAttribute_ItemsHandle}\line {\uldb ItemsHeight}{\v ControlAttribute_ItemsHeight}\line {\uldb ItemsValue}{\v ControlAttribute_ItemsValue}\line {\uldb ItemsWidth}{\v ControlAttribute_ItemsWidth}\line {\uldb ItemsX}{\v ControlAttribute_ItemsX}\line {\uldb ItemsY}{\v ControlAttribute_ItemsY}\line \page #{\footnote ControlAttribute_ItemsValue} ${\footnote ControlAttribute ItemsValue} K{\footnote ItemsValue} +{\footnote ControlAttribute:ItemsValue} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b ItemsValue Control Atribute \line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 This attribute returns a list of the property values associated with the items in the control. \par\li0{\b Type}\par\li180 String or Integer depending on the {\uldb Integer}{\v ControlStyle_Integer} stylebit of the control. \par\li0{\b Access}\par\li180 Read only. \par\li0{\b Minimum Size of the Record}\par\li180 At least the number of items. To ensure that the record is created with sufficient number of fields, one can call the {\uldb ItemsCount}{\v ControlAttribute_ItemsCount} control attribute first. The items are listed in a random order, but all Items* attributes will use the same order of items. \par\li0{\b Control Types That Have This Attribute}\par\li180 {\uldb ComboBox}{\v ControlType_ComboBox}\line {\uldb ListBox}{\v ControlType_ListBox}\line {\uldb RadioButtonGroup}{\v ControlType_RadioButtonGroup}\line \par\li0{\b Associated Control Stylebit}\par\li180 None. \par\li0{\b Related Control Attributes}\par\li180 {\uldb ItemsCount}{\v ControlAttribute_ItemsCount}\line {\uldb ItemsHandle}{\v ControlAttribute_ItemsHandle}\line {\uldb ItemsHeight}{\v ControlAttribute_ItemsHeight}\line {\uldb ItemsText}{\v ControlAttribute_ItemsText}\line {\uldb ItemsWidth}{\v ControlAttribute_ItemsWidth}\line {\uldb ItemsX}{\v ControlAttribute_ItemsX}\line {\uldb ItemsY}{\v ControlAttribute_ItemsY}\line \page #{\footnote ControlAttribute_KeyInt} ${\footnote ControlAttribute KeyInt} K{\footnote KeyInt} +{\footnote ControlAttribute:KeyInt} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b KeyInt Control Atribute \line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 This attribute returns the integer representation of the name of the control. The same information is available through the {\uldb IntegerValue}{\v MsiControl_IntegerValue} property of the Control object. \par\li0{\b Type}\par\li180 Integer \par\li0{\b Access}\par\li180 Read only. \par\li0{\b Minimum Size of the Record}\par\li180 At least 1. \par\li0{\b Control Types That Have This Attribute}\par\li180 Every control. \par\li0{\b Associated Control Stylebit}\par\li180 None. \par\li0{\b Related Control Attribute}\par\li180 {\uldb KeyString}{\v ControlAttribute_KeyString}\line \page #{\footnote ControlAttribute_KeyString} ${\footnote ControlAttribute KeyString} K{\footnote KeyString} +{\footnote ControlAttribute:KeyString} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b KeyString Control Atribute \line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 This attribute returns the string representation of the name of the control. The same information is available through the {\uldb StringValue}{\v MsiControl_StringValue} property of the Control object. \par\li0{\b Type}\par\li180 String \par\li0{\b Access}\par\li180 Read only. \par\li0{\b Minimum Size of the Record}\par\li180 At least 1. \par\li0{\b Control Types That Have This Attribute}\par\li180 Every control. \par\li0{\b Associated Control Stylebit}\par\li180 None. \par\li0{\b Related Control Attribute}\par\li180 {\uldb KeyInt}{\v ControlAttribute_KeyInt}\line \page #{\footnote ControlAttribute_Limit} ${\footnote ControlAttribute Limit} K{\footnote Limit} +{\footnote ControlAttribute:Limit} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b Limit Control Atribute \line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 This attribute determines the maximum number of characters the user can enter in the edit field. \par\li0{\b Type}\par\li180 Integer \par\li0{\b Access}\par\li180 Read only. \par\li0{\b Minimum Size of the Record}\par\li180 At least 1. \par\li0{\b Control Types That Have This Attribute}\par\li180 {\uldb ComboBox}{\v ControlType_ComboBox}\line {\uldb Edit}{\v ControlType_Edit} \par\li0{\b Associated Control Stylebit}\par\li180 None. \page #{\footnote ControlAttribute_Image} ${\footnote ControlAttribute Image} K{\footnote Image} +{\footnote ControlAttribute:Image} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b Image Control Atribute \line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 This attribute is the name of the image in the {\uldb Binary Table}{\v _msi_Binary_Table@msi.hlp}. If the image is set by the {\uldb ImageHandle}{\v ControlAttribute_ImageHandle} attribute, this attribute does not reflect the correct name anymore. \par\li0{\b Type}\par\li180 String \par\li0{\b Access}\par\li180 Read and Write. \par\li0{\b Minimum Size of the Record}\par\li180 At least 1. \par\li0{\b Control Types That Have This Attribute}\par\li180 {\uldb Bitmap}{\v ControlType_Bitmap}\line {\uldb Icon}{\v ControlType_Icon} \par\li0{\b Associated Control Stylebit}\par\li180 None. \par\li0{\b Related Control Attribute}\par\li180 {\uldb ImageHandle}{\v ControlAttribute_ImageHandle}\line \page #{\footnote ControlAttribute_ImageHandle} ${\footnote ControlAttribute ImageHandle} K{\footnote ImageHandle} +{\footnote ControlAttribute:ImageHandle} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b ImageHandle Control Atribute \line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 This attribute is the handle to the bitmap or icon displayed in the control. If the image is set by this attribute, the name of the image is not correct anymore and the {\uldb Image}{\v ControlAttribute_Image} attribute will return an incorrect value. \par\li0{\b Type}\par\li180 String \par\li0{\b Access}\par\li180 Read and Write. \par\li0{\b Minimum Size of the Record}\par\li180 At least 1. \par\li0{\b Control Types That Have This Attribute}\par\li180 {\uldb Bitmap}{\v ControlType_Bitmap}\line {\uldb Icon}{\v ControlType_Icon} \par\li0{\b Associated Control Stylebit}\par\li180 None. \par\li0{\b Related Control Attribute}\par\li180 {\uldb Image}{\v ControlAttribute_Image}\line \page #{\footnote ControlAttribute_OriginalValue} ${\footnote ControlAttribute OriginalValue} K{\footnote OriginalValue} +{\footnote ControlAttribute:OriginalValue} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b OriginalValue Control Atribute \line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 This attribute is normaly the value of the associated property at the moment of the control's creation. If the {\uldb Undo}{\v MsiControl_Undo} method is called on the control, it puts this value back to the property. \par\li0{\b Type}\par\li180 String or Integer depending on the {\uldb Integer}{\v ControlStyle_Integer} style of the control. \par\li0{\b Access}\par\li180 Read only. \par\li0{\b Minimum Size of the Record}\par\li180 At least 1. \par\li0{\b Control Types That Have This Attribute}\par\li180 Every active control. \par\li0{\b Associated Control Stylebit}\par\li180 None. \par\li0{\b Related Control Attributes}\par\li180 {\uldb IndirectPropertyName}{\v ControlAttribute_IndirectPropertyName}\line {\uldb PropertyName}{\v ControlAttribute_PropertyName}\line {\uldb PropertyValue}{\v ControlAttribute_PropertyValue}\line \page #{\footnote ControlAttribute_PropertyValue} ${\footnote ControlAttribute PropertyValue} K{\footnote PropertyValue} +{\footnote ControlAttribute:PropertyValue} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b PropertyValue Control Atribute \line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 This attribute is the present value of the associated property. If this attribute is changed, the control updates to show the new state. \par\li0{\b Type}\par\li180 String or Integer depending on the {\uldb Integer}{\v ControlStyle_Integer} style of the control. \par\li0{\b Access}\par\li180 Read and Write. \par\li0{\b Minimum Size of the Record}\par\li180 At least 1. \par\li0{\b Control Types That Have This Attribute}\par\li180 Every active control. \par\li0{\b Associated Control Stylebit}\par\li180 None. \par\li0{\b Related Control Attributes}\par\li180 {\uldb IndirectPropertyName}{\v ControlAttribute_IndirectPropertyName}\line {\uldb OriginalValue}{\v ControlAttribute_OriginalValue}\line {\uldb PropertyName}{\v ControlAttribute_PropertyName}\line \page #{\footnote ControlAttribute_PropertyName} ${\footnote ControlAttribute PropertyName} K{\footnote PropertyName} +{\footnote ControlAttribute:PropertyName} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b PropertyName Control Atribute \line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 In case of an active control this attribute is the name of the associated property. For inert controls this attribute returns Null.  \par\li0{\b Type}\par\li180 String \par\li0{\b Access}\par\li180 Read only. \par\li0{\b Minimum Size of the Record}\par\li180 At least 1. \par\li0{\b Control Types That Have This Attribute}\par\li180 Every control. \par\li0{\b Associated Control Stylebit}\par\li180 None. \par\li0{\b Related Control Attributes}\par\li180 {\uldb IndirectPropertyName}{\v ControlAttribute_IndirectPropertyName}\line {\uldb OriginalValue}{\v ControlAttribute_OriginalValue}\line {\uldb PropertyValue}{\v ControlAttribute_PropertyValue}\line \page #{\footnote ControlAttribute_IndirectPropertyName} ${\footnote ControlAttribute IndirectPropertyName} K{\footnote IndirectPropertyName} +{\footnote ControlAttribute:IndirectPropertyName} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b IndirectPropertyName Control Atribute \line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 In case of an active control this attribute is the name of the associated indirect property. For inert controls this attribute returns Null. \line An indirect property names an other property, and the control displays/changes the value of this second property.  \par\li0{\b Type}\par\li180 String \par\li0{\b Access}\par\li180 Read only. \par\li0{\b Minimum Size of the Record}\par\li180 At least 1. \par\li0{\b Control Types That Have This Attribute}\par\li180 Every control. \par\li0{\b Associated Control Stylebit}\par\li180 None. \par\li0{\b Related Control Attributes}\par\li180 {\uldb OriginalValue}{\v ControlAttribute_OriginalValue}\line {\uldb PropertyName}{\v ControlAttribute_PropertyName}\line {\uldb PropertyValue}{\v ControlAttribute_PropertyValue}\line \page #{\footnote ControlAttribute_Position} ${\footnote ControlAttribute Position} K{\footnote Position} +{\footnote ControlAttribute:Position} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b Position Control Atribute \line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 This attribute determines the position of the control on the dialog. The four fields are: left, top, width and height. The coordinates are in pixels and relative to the upper left corner of the dialog. \par\li0{\b Type}\par\li180 Integer \par\li0{\b Access}\par\li180 Read and Write. \par\li0{\b Minimum Size of the Record}\par\li180 At least 4. \par\li0{\b Control Types That Have This Attribute}\par\li180 Every control. \par\li0{\b Associated Control Stylebit}\par\li180 None. \par\li0{\b Related Control Attributes}\par\li180 {\uldb Width}{\v ControlAttribute_Width}\line {\uldb Height}{\v ControlAttribute_Height}\line {\uldb X}{\v ControlAttribute_X}\line {\uldb Y}{\v ControlAttribute_Y}\line {\uldb ClientRect}{\v ControlAttribute_ClientRect}\line \page #{\footnote ControlAttribute_Progress} ${\footnote ControlAttribute Progress} K{\footnote Progress} +{\footnote ControlAttribute:Progress} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b Progress Control Atribute \line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 This attribute measures how far the progress bar is filled up. The record contains two integers and a string. The first number is the progress, the second number is the range (the maximal possible number for the progress).\line On setting, the integers can be entered as integer fields or strings containing the integers.\line If the second number is missing it is assumed to be the default (1024). If the progress is larger than the range then it is changed to be the range. The third field is a string, the name of the action whose progress is displayed. \par\li0{\b Type}\par\li180 Integer \par\li0{\b Access}\par\li180 Read and Write. \par\li0{\b Minimum Size of the Record}\par\li180 At least 3. \par\li0{\b Control Types That Have This Attribute}\par\li180 {\uldb ProgressBar}{\v ControlType_ProgressBar} \par\li0{\b Associated Control Stylebit}\par\li180 None. \page #{\footnote ControlAttribute_PushLike} ${\footnote ControlAttribute PushLike} K{\footnote PushLike} +{\footnote ControlAttribute:PushLike} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b PushLike Control Atribute \line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 If this attribute is set on a checkbox or a radiobuttongroup the button is drawn with the visual appearance of a push button, but it's logic stays the same. If the bit is not set the controls are drawn in their usual visual style. \par\li0{\b Type}\par\li180 Boolean \par\li0{\b Access}\par\li180 Read only. \par\li0{\b Minimum Size of the Record}\par\li180 At least 1. \par\li0{\b Control Types That Have This Attribute}\par\li180 {\uldb CheckBox}{\v ControlType_CheckBox}\line {\uldb RadioButtonGroup}{\v ControlType_RadioButtonGroup} \par\li0{\b Associated Control Stylebit}\par\li180 {\uldb PushLike}{\v ControlStyle_PushLike} \page #{\footnote ControlAttribute_RefCount} ${\footnote ControlAttribute RefCount} K{\footnote RefCount} +{\footnote ControlAttribute:RefCount} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b RefCount Control Atribute \line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 This attribute gives the current reference count to the control. \par\li0{\b Type}\par\li180 Integer \par\li0{\b Access}\par\li180 Read only. \par\li0{\b Minimum Size of the Record}\par\li180 At least 1. \par\li0{\b Control Types That Have This Attribute}\par\li180 Every control \par\li0{\b Associated Control Stylebit}\par\li180 None. \page #{\footnote ControlAttribute_Sunken} ${\footnote ControlAttribute Sunken} K{\footnote Sunken} +{\footnote ControlAttribute:Sunken} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b Sunken Control Atribute \line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 If this attribute is set on a control, it is displayed with a sunken, 3D look, if that is available on the system. Otherwise the control is displayed in its default visual style. The effect of this attribute is different on different versions of Windows. On most controls it has no visible effect. \par\li0{\b Type}\par\li180 Boolean \par\li0{\b Access}\par\li180 Read only. \par\li0{\b Minimum Size of the Record}\par\li180 At least 1. \par\li0{\b Control Types That Have This Attribute}\par\li180 Every control \par\li0{\b Associated Control Stylebit}\par\li180 {\uldb Sunken}{\v ControlStyle_Sunken} \page #{\footnote ControlAttribute_Transparent} ${\footnote ControlAttribute Transparent} K{\footnote Transparent} +{\footnote ControlAttribute:Transparent} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b Transparent Control Atribute \line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 If this attribute is set on a text control, it is displayed transparently, the background shows through the control where there are no characters. Otherwise the background is opaque. \par\li0{\b Type}\par\li180 Boolean \par\li0{\b Access}\par\li180 Read only. \par\li0{\b Minimum Size of the Record}\par\li180 At least 1. \par\li0{\b Control Types That Have This Attribute}\par\li180 {\uldb Text}{\v ControlType_Text} \par\li0{\b Associated Control Stylebit}\par\li180 {\uldb Transparent}{\v ControlStyle_Transparent} \page #{\footnote ControlAttribute_Visible} ${\footnote ControlAttribute Visible} K{\footnote Visible} +{\footnote ControlAttribute:Visible} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b Visible Control Atribute \line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 If this attribute is set the control is visible, otherwise hidden. \par\li0{\b Type}\par\li180 Boolean \par\li0{\b Access}\par\li180 Read and Write. \par\li0{\b Minimum Size of the Record}\par\li180 At least 1. \par\li0{\b Control Types That Have This Attribute}\par\li180 Every control \par\li0{\b Associated Control Stylebit}\par\li180 {\uldb Visible}{\v ControlStyle_Visible} \page #{\footnote ControlAttribute_WindowHandle} ${\footnote ControlAttribute WindowHandle} K{\footnote WindowHandle} +{\footnote ControlAttribute:WindowHandle} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b WindowHandle Control Atribute \line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 This attribute returns the window handle to the control's window. Supported on Windows only. \par\li0{\b Type}\par\li180 Integer \par\li0{\b Access}\par\li180 Read only. \par\li0{\b Minimum Size of the Record}\par\li180 At least 1. \par\li0{\b Control Types That Have This Attribute}\par\li180 Every control. Windows only! \par\li0{\b Associated Control Stylebit}\par\li180 {\uldb Visible}{\v ControlStyle_Visible} \page #{\footnote DialogStyle_Browse} ${\footnote DialogStyle Browse} K{\footnote Browse} +{\footnote DialogStyle:Browse} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b Browse Dialog Stylebit \line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 Some description goes here!!! \par\li0{\b Associated Dialog Attribute}\par\li180 None\line \par\li0{\b Numeric Value}\par\li180 0x00020000 = 131072\line \page #{\footnote DialogStyle_Minimize} ${\footnote DialogStyle Minimize} K{\footnote Minimize} +{\footnote DialogStyle:Minimize} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b Minimize Dialog Stylebit \line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 If this bit is set the dialog can be minimized. On Windows the dialog's minimize button is enabled and the minimize item is enabled in the system menue. This bit is ignored for modeless dialogs, that can not be ever minimized. \par\li0{\b Associated Dialog Attribute}\par\li180 None\line \par\li0{\b Numeric Value}\par\li180 0x00000004 = 4\line \page #{\footnote DialogStyle_Modal} ${\footnote DialogStyle Modal} K{\footnote Modal} +{\footnote DialogStyle:Modal} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b Modal Dialog Stylebit \line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 If this bit is set the dialog is modal, other dialogs of the same application can not be put on top of it, and the dialog keeps the control while it is running. If this bit is not set, the dialog is modeless, other dialogs of the same application may be moved on top of it. After a modeless dialog is created and displayed, the Handler returns control to the Engine. The Engine calls the Handler through the {\uldb Message}{\v MsiHandler_Message} method periodiacly to update the dialog and to give the Handler a chance to process the messages. As soon as this is done, the control is returned to the Engine.  Note that there should be no modeless dialogs in a wizard sequence, since this will return control to the engine, ending the wizard sequence prematurely. \par\li0{\b Associated Dialog Attribute}\par\li180 {\uldb Modal}{\v DialogAttribute_Modal}\line \par\li0{\b Numeric Value}\par\li180 0x00000002 = 2\line \page #{\footnote DialogStyle_KeepModeless} ${\footnote DialogStyle KeepModeless} K{\footnote KeepModeless} +{\footnote DialogStyle:KeepModeless} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b KeepModeless Dialog Stylebit \line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 Normally (when this bit is not set), when a dialog is created through DoAction, all other (typically modeless) dialogs are destroyed. If this bit is set, the other dialogs stay alive when this dialog is created. \par\li0{\b Associated Dialog Attribute}\par\li180 {\uldb KeepModeless}{\v DialogAttribute_KeepModeless}\line \par\li0{\b Numeric Value}\par\li180 0x00000010 = 16\line \page #{\footnote DialogStyle_TrackDiskSpace} ${\footnote DialogStyle TrackDiskSpace} K{\footnote TrackDiskSpace} +{\footnote DialogStyle:TrackDiskSpace} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b TrackDiskSpace Dialog Stylebit \line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 If this bit is set, the dialog periodically calls SelectionManager::DetermineOutOfDiskSpace. If the property changes, it notifies the controls on the dialog. This style can be used if there is an control on the dialog indicating if we are out of disk space. If the user switches to an other application and adds/removes files or otherwise modifies the available disk space, we can still quickly catch the change using this style.\line \par\li0{\b Associated Dialog Attribute}\par\li180 None.\line \par\li0{\b Numeric Value}\par\li180 0x00000020 = 32\line \page #{\footnote DialogStyle_UseCustomPalette} ${\footnote DialogStyle UseCustomPalette} K{\footnote UseCustomPalette} +{\footnote DialogStyle:UseCustomPalette} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b UseCustomPalette Dialog Stylebit \line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 If this bit is set the pictures on the dialog will be created with the custom palette (one per dialog received from the first control created). If the bit is not set, the pictures are rendered using a default palette.\line Typically one would set this bit if the dialog contains a picture with a special palette, or several pictures sharing a custom palette. The bit should be unset if the dialog contains several pictures with different palettes. In this case the default will be most likely to give a satisfactory result for all pictures. \par\li0{\b Associated Dialog Attribute}\par\li180 {\uldb UseCustomPalette}{\v DialogAttribute_UseCustomPalette}\line \par\li0{\b Numeric Value}\par\li180 0x00000040 = 64\line \page #{\footnote DialogStyle_Visible} ${\footnote DialogStyle Visible} K{\footnote Visible} +{\footnote DialogStyle:Visible} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b Visible Dialog Stylebit \line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 If this bit is set the dialog is originaly created as visible, otherwise it is hidden. \par\li0{\b Associated Dialog Attribute}\par\li180 None\line \par\li0{\b Numeric Value}\par\li180 0x00000001 = 1\line \page #{\footnote DialogStyle_Error} ${\footnote DialogStyle Error} K{\footnote Error} +{\footnote DialogStyle:Error} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b Error Dialog Stylebit \line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 If this bit is set the dialog is an error dialog.\line There can be more than one dialog with this style. The ErrorDialog property determines which dialog is used as an error dialog. The selected dialog can be only one of those that have this style bit set.  The error dialog must have a static text control named ErrorText. This control receives the text of the error message. The dialog should also have the seven push buttons corresponding to the possible return values.  The error message determines which of these buttons are actualy displayed. The displayed buttons are rearranged so they are evenly distributed on the dialog. This rearrangement changes the X coordinate of the buttons, but not the other three coordinates.  Therefore it is advisable that no other control should be authored in the same horizontal region of the dialog as the buttons. If the error message specifies no button, the OK button is displayed.  The Default button, First active control and Cancel button values are ignored for an error dialog. The default button defined in the error message will be assigned to all three values. The effect of pushing these buttons have to be defined in the {\uldb ControlEvent Table}{\v _msi_ControlEvent_Table@msi.hlp} just like for all other buttons.  The title of the dialog is authored like for any other dialog. It can get overwritten by the error message if it specifies a header text after the button list.  \par\li0{\b Associated Dialog Attribute}\par\li180 {\uldb Error}{\v DialogAttribute_Error}\line \par\li0{\b Numeric Value}\par\li180 0x00010000 = 65536\line \page #{\footnote DialogAttribute_AddingControls} ${\footnote DialogAttribute AddingControls} K{\footnote AddingControls} +{\footnote DialogAttribute:AddingControls} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b AddingControls Dialog Atribute \line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 This attribute shows if the dialog is in the process of adding controls. As long as the dialog is in this phase most methods on the dialog are not available. This attribute is changed to False when {\uldb AddControl}{\v MsiDialog_AddControl} is called with Null signaling that all the controls are added. \par\li0{\b Type}\par\li180 Boolean \par\li0{\b Access}\par\li180 Read only. \par\li0{\b Minimum Size of the Record}\par\li180 At least 1. \page #{\footnote DialogAttribute_Argument} ${\footnote DialogAttribute Argument} K{\footnote Argument} +{\footnote DialogAttribute:Argument} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b Argument Dialog Atribute \line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 When the user dismisses a modal dialog in some way, the dialog internaly stores the name of the event and its argument that should take place next. This attribute returns the string representation of the event argument. \par\li0{\b Type}\par\li180 String \par\li0{\b Access}\par\li180 Read only. \par\li0{\b Minimum Size of the Record}\par\li180 At least 1. \par\li0{\b Related Dialog Attributes}\par\li180 {\uldb EventInt}{\v DialogAttribute_EventInt}\line {\uldb EventString}{\v DialogAttribute_EventString}\line \page #{\footnote DialogAttribute_EventInt} ${\footnote DialogAttribute EventInt} K{\footnote EventInt} +{\footnote DialogAttribute:EventInt} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b EventInt Dialog Atribute \line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 When the user dismisses a modal dialog in some way, the dialog internaly stores the name of the event and its argument that should take place next. This attribute returns the integer representation of the event name. \par\li0{\b Type}\par\li180 Integer \par\li0{\b Access}\par\li180 Read only. \par\li0{\b Minimum Size of the Record}\par\li180 At least 1. \par\li0{\b Related Dialog Attributes}\par\li180 {\uldb ArgumentInt}{\v DialogAttribute_Argument}\line {\uldb EventString}{\v DialogAttribute_EventString}\line \page #{\footnote DialogAttribute_EventString} ${\footnote DialogAttribute EventString} K{\footnote EventString} +{\footnote DialogAttribute:EventString} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b EventString Dialog Atribute \line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 When the user dismisses a modal dialog in some way, the dialog internaly stores the name of the event and its argument that should take place next. This attribute returns the string representation of the event name. \par\li0{\b Type}\par\li180 String \par\li0{\b Access}\par\li180 Read only. \par\li0{\b Minimum Size of the Record}\par\li180 At least 1. \par\li0{\b Related Dialog Attributes}\par\li180 {\uldb ArgumentInt}{\v DialogAttribute_Argument}\line {\uldb EventInt}{\v DialogAttribute_EventInt}\line \page #{\footnote DialogAttribute_ClientRect} ${\footnote DialogAttribute ClientRect} K{\footnote ClientRect} +{\footnote DialogAttribute:ClientRect} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b ClientRect Dialog Atribute \line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 This attribute retrieves the coordinates of the window's client area. The client coordinates specify the upper-left and lower-right corners of the client area. The coordinates are relative to the upper left corner of the dialog's window. The four values are returned in the following order: left, top, right, bottom.   \par\li0{\b Type}\par\li180 Integer \par\li0{\b Access}\par\li180 Read only. \par\li0{\b Minimum Size of the Record}\par\li180 At least 4. \par\li0{\b Related Dialog Attributes}\par\li180 {\uldb Position}{\v DialogAttribute_Position}\line {\uldb Width}{\v DialogAttribute_Width}\line {\uldb Height}{\v DialogAttribute_Height}\line {\uldb X}{\v DialogAttribute_X}\line {\uldb Y}{\v DialogAttribute_Y}\line {\uldb FullSize}{\v DialogAttribute_FullSize}\line \page #{\footnote DialogAttribute_Position} ${\footnote DialogAttribute Position} K{\footnote Position} +{\footnote DialogAttribute:Position} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b Position Dialog Atribute \line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 This attribute determines the position of the dialog on the screen. The four fields are: left, top, width and height. The coordinates are in pixels and relative to the upper left corner of the screen. \par\li0{\b Type}\par\li180 Integer \par\li0{\b Access}\par\li180 Read and Write. \par\li0{\b Minimum Size of the Record}\par\li180 At least 4. \par\li0{\b Related Dialog Attributes}\par\li180 {\uldb Width}{\v DialogAttribute_Width}\line {\uldb Height}{\v DialogAttribute_Height}\line {\uldb X}{\v DialogAttribute_X}\line {\uldb Y}{\v DialogAttribute_Y}\line {\uldb ClientRect}{\v DialogAttribute_ClientRect}\line {\uldb FullSize}{\v DialogAttribute_FullSize}\line \page #{\footnote DialogAttribute_FullSize} ${\footnote DialogAttribute FullSize} K{\footnote FullSize} +{\footnote DialogAttribute:FullSize} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b FullSize Dialog Atribute \line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 This attribute describes the full size of the dialog in pixels. This is the limit for the control placement. If the dialog is larger than the screen, this size describes the entire dialog, and it is larger than the size of the window visible on the screen. \par\li0{\b Type}\par\li180 Integer \par\li0{\b Access}\par\li180 Read only. \par\li0{\b Minimum Size of the Record}\par\li180 At least 2. \par\li0{\b Related Dialog Attributes}\par\li180 {\uldb Width}{\v DialogAttribute_Width}\line {\uldb Height}{\v DialogAttribute_Height}\line {\uldb Position}{\v DialogAttribute_Position}\line {\uldb X}{\v DialogAttribute_X}\line {\uldb Y}{\v DialogAttribute_Y}\line {\uldb ClientRect}{\v DialogAttribute_ClientRect}\line \page #{\footnote DialogAttribute_Width} ${\footnote DialogAttribute Width} K{\footnote Width} +{\footnote DialogAttribute:Width} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b Width Dialog Atribute \line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 This attribute returns the width of the dialog in pixels. \par\li0{\b Type}\par\li180 Integer \par\li0{\b Access}\par\li180 Read only. \par\li0{\b Minimum Size of the Record}\par\li180 At least 1. \par\li0{\b Related Dialog Attributes}\par\li180 {\uldb Position}{\v DialogAttribute_Position}\line {\uldb Height}{\v DialogAttribute_Height}\line {\uldb X}{\v DialogAttribute_X}\line {\uldb Y}{\v DialogAttribute_Y}\line {\uldb ClientRect}{\v DialogAttribute_ClientRect}\line {\uldb FullSize}{\v DialogAttribute_FullSize}\line \page #{\footnote DialogAttribute_Height} ${\footnote DialogAttribute Height} K{\footnote Height} +{\footnote DialogAttribute:Height} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b Height Dialog Atribute \line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 This attribute returns the height of the dialog in pixels. \par\li0{\b Type}\par\li180 Integer \par\li0{\b Access}\par\li180 Read only. \par\li0{\b Minimum Size of the Record}\par\li180 At least 1. \par\li0{\b Related Dialog Attributes}\par\li180 {\uldb Position}{\v DialogAttribute_Position}\line {\uldb Width}{\v DialogAttribute_Width}\line {\uldb X}{\v DialogAttribute_X}\line {\uldb Y}{\v DialogAttribute_Y}\line {\uldb ClientRect}{\v DialogAttribute_ClientRect}\line {\uldb FullSize}{\v DialogAttribute_FullSize}\line \page #{\footnote DialogAttribute_X} ${\footnote DialogAttribute X} K{\footnote X} +{\footnote DialogAttribute:X} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b X Dialog Atribute \line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 This attribute returns the x coordinate of the upper left corner of the dialog in pixels. \par\li0{\b Type}\par\li180 Integer \par\li0{\b Access}\par\li180 Read only. \par\li0{\b Minimum Size of the Record}\par\li180 At least 1. \par\li0{\b Related Dialog Attributes}\par\li180 {\uldb Position}{\v DialogAttribute_Position}\line {\uldb Width}{\v DialogAttribute_Width}\line {\uldb Height}{\v DialogAttribute_Height}\line {\uldb Y}{\v DialogAttribute_Y}\line {\uldb ClientRect}{\v DialogAttribute_ClientRect}\line {\uldb FullSize}{\v DialogAttribute_FullSize}\line \page #{\footnote DialogAttribute_Y} ${\footnote DialogAttribute Y} K{\footnote Y} +{\footnote DialogAttribute:Y} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b Y Dialog Atribute \line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 This attribute returns the y coordinate of the upper left corner of the dialog in pixels. \par\li0{\b Type}\par\li180 Integer \par\li0{\b Access}\par\li180 Read only. \par\li0{\b Minimum Size of the Record}\par\li180 At least 1. \par\li0{\b Related Dialog Attributes}\par\li180 {\uldb Position}{\v DialogAttribute_Position}\line {\uldb Width}{\v DialogAttribute_Width}\line {\uldb Height}{\v DialogAttribute_Height}\line {\uldb X}{\v DialogAttribute_X}\line {\uldb ClientRect}{\v DialogAttribute_ClientRect}\line {\uldb FullSize}{\v DialogAttribute_FullSize}\line \page #{\footnote DialogAttribute_ControlsCount} ${\footnote DialogAttribute ControlsCount} K{\footnote ControlsCount} +{\footnote DialogAttribute:ControlsCount} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b ControlsCount Dialog Atribute \line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 This attribute returns the number of controls existing on the dialog. \par\li0{\b Type}\par\li180 Integer \par\li0{\b Access}\par\li180 Read only. \par\li0{\b Minimum Size of the Record}\par\li180 At least 1. \par\li0{\b Related Dialog Attributes}\par\li180 {\uldb ControlsKeyInt}{\v DialogAttribute_ControlsKeyInt}\line {\uldb ControlsKeyString}{\v DialogAttribute_ControlsKeyString}\line {\uldb ControlsNext}{\v DialogAttribute_ControlsNext}\line {\uldb ControlsPrev}{\v DialogAttribute_ControlsPrev}\line {\uldb ControlsProperty}{\v DialogAttribute_ControlsProperty}\line \page #{\footnote DialogAttribute_ControlsKeyInt} ${\footnote DialogAttribute ControlsKeyInt} K{\footnote ControlsKeyInt} +{\footnote DialogAttribute:ControlsKeyInt} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b ControlsKeyInt Dialog Atribute \line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 This attribute returns the list of integer representation of the names of the controls existing on the dialog. The controls are listed in a random order, but all Controls* attributes list them in the same order. \par\li0{\b Type}\par\li180 Integer \par\li0{\b Access}\par\li180 Read only. \par\li0{\b Minimum Size of the Record}\par\li180 At least the number of controls on the dialog. To ensure that the record is created with a sufficient number of field, one may call the {\uldb ControlsCount}{\v DialogAttribute_ControlsCount} attribute first. \par\li0{\b Related Dialog Attributes}\par\li180 {\uldb ControlsCount}{\v DialogAttribute_ControlsCount}\line {\uldb ControlsKeyString}{\v DialogAttribute_ControlsKeyString}\line {\uldb ControlsNext}{\v DialogAttribute_ControlsNext}\line {\uldb ControlsPrev}{\v DialogAttribute_ControlsPrev}\line {\uldb ControlsProperty}{\v DialogAttribute_ControlsProperty}\line \page #{\footnote DialogAttribute_ControlsKeyString} ${\footnote DialogAttribute ControlsKeyString} K{\footnote ControlsKeyString} +{\footnote DialogAttribute:ControlsKeyString} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b ControlsKeyString Dialog Atribute \line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 This attribute returns the list of string representation of the names of the controls existing on the dialog. The controls are listed in a random order, but all Controls* attributes list them in the same order. \par\li0{\b Type}\par\li180 String \par\li0{\b Access}\par\li180 Read only. \par\li0{\b Minimum Size of the Record}\par\li180 At least the number of controls on the dialog. To ensure that the record is created with a sufficient number of field, one may call the {\uldb ControlsCount}{\v DialogAttribute_ControlsCount} attribute first. \par\li0{\b Related Dialog Attributes}\par\li180 {\uldb ControlsCount}{\v DialogAttribute_ControlsCount}\line {\uldb ControlsKeyInt}{\v DialogAttribute_ControlsKeyInt}\line {\uldb ControlsNext}{\v DialogAttribute_ControlsNext}\line {\uldb ControlsPrev}{\v DialogAttribute_ControlsPrev}\line {\uldb ControlsProperty}{\v DialogAttribute_ControlsProperty}\line \page #{\footnote DialogAttribute_ControlsNext} ${\footnote DialogAttribute ControlsNext} K{\footnote ControlsNext} +{\footnote DialogAttribute:ControlsNext} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b ControlsNext Dialog Atribute \line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 This attribute returns the list of the names of the controls next in tab order. The controls are listed in a random order, but all Controls* attributes list them in the same order. \par\li0{\b Type}\par\li180 String \par\li0{\b Access}\par\li180 Read only. \par\li0{\b Minimum Size of the Record}\par\li180 At least the number of controls on the dialog. To ensure that the record is created with a sufficient number of field, one may call the {\uldb ControlsCount}{\v DialogAttribute_ControlsCount} attribute first. \par\li0{\b Related Dialog Attributes}\par\li180 {\uldb ControlsCount}{\v DialogAttribute_ControlsCount}\line {\uldb ControlsKeyInt}{\v DialogAttribute_ControlsKeyInt}\line {\uldb ControlsKeyString}{\v DialogAttribute_ControlsKeyString}\line {\uldb ControlsPrev}{\v DialogAttribute_ControlsPrev}\line {\uldb ControlsProperty}{\v DialogAttribute_ControlsProperty}\line \page #{\footnote DialogAttribute_ControlsPrev} ${\footnote DialogAttribute ControlsPrev} K{\footnote ControlsPrev} +{\footnote DialogAttribute:ControlsPrev} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b ControlsPrev Dialog Atribute \line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 This attribute returns the list of the names of the controls previous in tab order. The controls are listed in a random order, but all Controls* attributes list them in the same order. \par\li0{\b Type}\par\li180 String \par\li0{\b Access}\par\li180 Read only. \par\li0{\b Minimum Size of the Record}\par\li180 At least the number of controls on the dialog. To ensure that the record is created with a sufficient number of field, one may call the {\uldb ControlsCount}{\v DialogAttribute_ControlsCount} attribute first. \par\li0{\b Related Dialog Attributes}\par\li180 {\uldb ControlsCount}{\v DialogAttribute_ControlsCount}\line {\uldb ControlsKeyInt}{\v DialogAttribute_ControlsKeyInt}\line {\uldb ControlsKeyString}{\v DialogAttribute_ControlsKeyString}\line {\uldb ControlsNext}{\v DialogAttribute_ControlsNext}\line {\uldb ControlsProperty}{\v DialogAttribute_ControlsProperty}\line \page #{\footnote DialogAttribute_ControlsProperty} ${\footnote DialogAttribute ControlsProperty} K{\footnote ControlsProperty} +{\footnote DialogAttribute:ControlsProperty} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b ControlsProperty Dialog Atribute \line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 This attribute returns the list of properties associated with the controls. The controls are listed in a random order, but all Controls* attributes list them in the same order. \par\li0{\b Type}\par\li180 String \par\li0{\b Access}\par\li180 Read only. \par\li0{\b Minimum Size of the Record}\par\li180 At least the number of controls on the dialog. To ensure that the record is created with a sufficient number of field, one may call the {\uldb ControlsCount}{\v DialogAttribute_ControlsCount} attribute first. \par\li0{\b Related Dialog Attributes}\par\li180 {\uldb ControlsCount}{\v DialogAttribute_ControlsCount}\line {\uldb ControlsKeyInt}{\v DialogAttribute_ControlsKeyInt}\line {\uldb ControlsKeyString}{\v DialogAttribute_ControlsKeyString}\line {\uldb ControlsNext}{\v DialogAttribute_ControlsNext}\line {\uldb ControlsPrev}{\v DialogAttribute_ControlsPrev}\line \page #{\footnote DialogAttribute_CurrentControl} ${\footnote DialogAttribute CurrentControl} K{\footnote CurrentControl} +{\footnote DialogAttribute:CurrentControl} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b CurrentControl Dialog Atribute \line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 The name of the control currently having the focus. \par\li0{\b Type}\par\li180 String \par\li0{\b Access}\par\li180 Read and Write. \par\li0{\b Minimum Size of the Record}\par\li180 At least 1. \page #{\footnote DialogAttribute_DefaultButton} ${\footnote DialogAttribute DefaultButton} K{\footnote DefaultButton} +{\footnote DialogAttribute:DefaultButton} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b DefaultButton Dialog Atribute \line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 The name of the default control (typically a button). If there is no default control, it returns an empty string. \par\li0{\b Type}\par\li180 String \par\li0{\b Access}\par\li180 Read and Write. \par\li0{\b Minimum Size of the Record}\par\li180 At least 1. \page #{\footnote DialogAttribute_Preview} ${\footnote DialogAttribute Preview} K{\footnote Preview} +{\footnote DialogAttribute:Preview} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b Preview Dialog Atribute \line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 A boolean value showing if the handler is in preview mode. \par\li0{\b Type}\par\li180 Boolean \par\li0{\b Access}\par\li180 Read only. \par\li0{\b Minimum Size of the Record}\par\li180 At least 1. \page #{\footnote DialogAttribute_Locked} ${\footnote DialogAttribute Locked} K{\footnote Locked} +{\footnote DialogAttribute:Locked} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b Locked Dialog Atribute \line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 An integer showing the ID of the control that locked the dialog from closing, because the control has an invalid value. 0 if the dialog is not locked. \par\li0{\b Type}\par\li180 Integer \par\li0{\b Access}\par\li180 Read and Write. \par\li0{\b Minimum Size of the Record}\par\li180 At least 1. \page #{\footnote DialogAttribute_InPlace} ${\footnote DialogAttribute InPlace} K{\footnote InPlace} +{\footnote DialogAttribute:InPlace} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b InPlace Dialog Atribute \line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 A Boolean value showing if the dialog has been moved by the Handler to its final position. \par\li0{\b Type}\par\li180 Boolean \par\li0{\b Access}\par\li180 Read and Write. \par\li0{\b Minimum Size of the Record}\par\li180 At least 1. \page #{\footnote DialogAttribute_HasControls} ${\footnote DialogAttribute HasControls} K{\footnote HasControls} +{\footnote DialogAttribute:HasControls} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b HasControls Dialog Atribute \line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 A boolean value showing if the dialog has controls. It is turned on only when all the controls are added. \par\li0{\b Type}\par\li180 Boolean \par\li0{\b Access}\par\li180 Read only. \par\li0{\b Minimum Size of the Record}\par\li180 At least 1. \page #{\footnote DialogAttribute_Text} ${\footnote DialogAttribute Text} K{\footnote Text} +{\footnote DialogAttribute:Text} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b Text Dialog Atribute \line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 The caption of the dialog. On setting if the field 0 of the record is not null, the record is formatted using FormatString; if the field 0 is null, the first field is the string to be set. On getting the text is always returned in field 1. \par\li0{\b Type}\par\li180 String \par\li0{\b Access}\par\li180 Read and Write. \par\li0{\b Minimum Size of the Record}\par\li180 At least 1. \page #{\footnote DialogAttribute_KeyInt} ${\footnote DialogAttribute KeyInt} K{\footnote KeyInt} +{\footnote DialogAttribute:KeyInt} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b KeyInt Dialog Atribute \line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 The integer representation of the name of the dialog. This information is also available through the {\uldb IntegerValue}{\v MsiDialog_IntegerValue} property of the dialog. \par\li0{\b Type}\par\li180 Integer \par\li0{\b Access}\par\li180 Read only. \par\li0{\b Minimum Size of the Record}\par\li180 At least 1.  \par\li0{\b Related Dialog Attribute}\par\li180 {\uldb KeyString}{\v DialogAttribute_KeyString}\line \page #{\footnote DialogAttribute_KeyString} ${\footnote DialogAttribute KeyString} K{\footnote KeyString} +{\footnote DialogAttribute:KeyString} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b KeyString Dialog Atribute \line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 The string representation of the name of the dialog. This information is also available through the {\uldb StringValue}{\v MsiDialog_StringValue} property of the dialog. \par\li0{\b Type}\par\li180 String \par\li0{\b Access}\par\li180 Read only. \par\li0{\b Minimum Size of the Record}\par\li180 At least 1.  \par\li0{\b Related Dialog Attribute}\par\li180 {\uldb KeyInt}{\v DialogAttribute_KeyInt}\line \page #{\footnote DialogAttribute_Modal} ${\footnote DialogAttribute Modal} K{\footnote Modal} +{\footnote DialogAttribute:Modal} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b Modal Dialog Atribute \line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 A boolean value showing whether the dialog is modal or modeless. Originaly set by the {\uldb Modal}{\v DialogStyle_Modal} style bit. \par\li0{\b Type}\par\li180 Boolean \par\li0{\b Access}\par\li180 Read and Write. \par\li0{\b Minimum Size of the Record}\par\li180 At least 1.  \page #{\footnote DialogAttribute_KeepModeless} ${\footnote DialogAttribute KeepModeless} K{\footnote KeepModeless} +{\footnote DialogAttribute:KeepModeless} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b KeepModeless Dialog Atribute \line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 A boolean value showing whether the dialog takes down the other (typically modeless) dialogs when created. Originaly set by the {\uldb KeepModeless}{\v DialogStyle_KeepModeless} style bit. \par\li0{\b Type}\par\li180 Boolean \par\li0{\b Access}\par\li180 Read only. \par\li0{\b Minimum Size of the Record}\par\li180 At least 1.  \page #{\footnote DialogAttribute_RefCount} ${\footnote DialogAttribute RefCount} K{\footnote RefCount} +{\footnote DialogAttribute:RefCount} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b RefCount Dialog Atribute \line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 The reference count of the dialog object. \par\li0{\b Type}\par\li180 Integer \par\li0{\b Access}\par\li180 Read only. \par\li0{\b Minimum Size of the Record}\par\li180 At least 1.  \page #{\footnote DialogAttribute_Running} ${\footnote DialogAttribute Running} K{\footnote Running} +{\footnote DialogAttribute:Running} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b Running Dialog Atribute \line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 A boolean value showing if the dialog is currently running (in the message loop) or about to run. \par\li0{\b Type}\par\li180 Boolean \par\li0{\b Access}\par\li180 Read and Write. \par\li0{\b Minimum Size of the Record}\par\li180 At least 1.  \page #{\footnote DialogAttribute_Showing} ${\footnote DialogAttribute Showing} K{\footnote Showing} +{\footnote DialogAttribute:Showing} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b Showing Dialog Atribute \line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 A boolean value whther the dialog is currently showing. \par\li0{\b Type}\par\li180 Boolean \par\li0{\b Access}\par\li180 Read and Write. \par\li0{\b Minimum Size of the Record}\par\li180 At least 1.  \page #{\footnote DialogAttribute_Error} ${\footnote DialogAttribute Error} K{\footnote Error} +{\footnote DialogAttribute:Error} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b Error Dialog Atribute \line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 A boolean value whther the dialog is an error dialog. \par\li0{\b Type}\par\li180 Boolean \par\li0{\b Access}\par\li180 Read only. \par\li0{\b Minimum Size of the Record}\par\li180 At least 1.  \page #{\footnote DialogAttribute_WindowHandle} ${\footnote DialogAttribute WindowHandle} K{\footnote WindowHandle} +{\footnote DialogAttribute:WindowHandle} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b WindowHandle Dialog Atribute \line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 The window handle of the dialog's window. \par\li0{\b Type}\par\li180 Integer \par\li0{\b Access}\par\li180 Read only. \par\li0{\b Minimum Size of the Record}\par\li180 At least 1.  \page #{\footnote DialogAttribute_Palette} ${\footnote DialogAttribute Palette} K{\footnote Palette} +{\footnote DialogAttribute:Palette} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b Palette Dialog Atribute \line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 The handle of the palette used by the controls on the dialog. \par\li0{\b Type}\par\li180 Integer \par\li0{\b Access}\par\li180 Read and Write. \par\li0{\b Minimum Size of the Record}\par\li180 At least 1.  \page #{\footnote DialogAttribute_UseCustomPalette} ${\footnote DialogAttribute UseCustomPalette} K{\footnote UseCustomPalette} +{\footnote DialogAttribute:UseCustomPalette} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b UseCustomPalette Dialog Atribute \line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 A flag showing if a custom palette is used to render the images on the dialog. \par\li0{\b Type}\par\li180 Boolean \par\li0{\b Access}\par\li180 Read only. \par\li0{\b Minimum Size of the Record}\par\li180 At least 1.  \par\li0{\b Related Dialog Style}\par\li180 {\uldb UseCustomPalette}{\v DialogStyle_UseCustomPalette}\line \page #{\footnote DialogAttribute_ToolTip} ${\footnote DialogAttribute ToolTip} K{\footnote ToolTip} +{\footnote DialogAttribute:ToolTip} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b ToolTip Dialog Atribute \line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 The window handle of the tool tip control. \par\li0{\b Type}\par\li180 Integer \par\li0{\b Access}\par\li180 Read only. \par\li0{\b Minimum Size of the Record}\par\li180 At least 1.  \page #{\footnote ControlEvent_SetProperty} ${\footnote ControlEvent SetProperty} K{\footnote SetProperty} +{\footnote ControlEvent:SetProperty} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b SetProperty ControlEvent \line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 The syntax for this event is different than for other controlevents! In place of the name of the event one puts the property in square brackets: [property_name]. The argument is the new value of the property. To unset the property, the argument must be \{\}. This is necessary, because the argument is a primary key in the table, so it can not be null. The argument will be formatted using the {\uldb FormatText}{\v MsiEngine_FormatText} method, therefor it can contain any expression that the method can handle. The property values are evaluated at the moment of the control event. \par\li0{\b Published By}\par\li180 {\uldb Handler}{\v MsiHandler_Object} \par\li0{\b Argument}\par\li180 The new value of the property. \{\} for null. \par\li0{\b Action on Subscribers}\par\li180 None. \par\li0{\b Action by Publisher When Subscriber Activated}\par\li180 None. \par\li0{\b Typical Use}\par\li180 A {\uldb PushButton}{\v ControlType_PushButton} control on a dialog linked to this event so it changes a property when the button is pushed.  \page #{\footnote ControlEvent_ActionData} ${\footnote ControlEvent ActionData} K{\footnote ActionData} +{\footnote ControlEvent:ActionData} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b ActionData ControlEvent \line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 The Handler uses this event to broadcast the latest action data. \par\li0{\b Published By}\par\li180 {\uldb Handler}{\v MsiHandler_Object} \par\li0{\b Argument}\par\li180 None. \par\li0{\b Action on Subscribers}\par\li180 The subscribers are hidden when a new action starts and they are shown when a new action data arrives from the engine. \par\li0{\b Action by Publisher When Subscriber Activated}\par\li180 None. \par\li0{\b Typical Use}\par\li180 A {\uldb Text}{\v ControlType_Text} control on a modeless dialog subscribes to this event using the {\uldb text}{\v ControlAttribute_Text} attribute to receive the latest data on the current action. (For example the names of the files copied during file copy).  \page #{\footnote ControlEvent_ActionProgress} ${\footnote ControlEvent ActionProgress} K{\footnote ActionProgress} +{\footnote ControlEvent:ActionProgress} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b ActionProgress ControlEvent \line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 The Handler uses this event to broadcast the progress information. The name is the actual name of the action not ActionProgress! In other words the control has to subscribe to the event by naming the Action whose progress is being indicated.  \par\li0{\b Published By}\par\li180 {\uldb Handler}{\v MsiHandler_Object} \par\li0{\b Argument}\par\li180 None. \par\li0{\b Action on Subscribers}\par\li180 The subscribers are hidden when a new action starts or and they are shown when a new progress data arrives from the engine. \par\li0{\b Action by Publisher When Subscriber Activated}\par\li180 None. \par\li0{\b Typical Use}\par\li180 A {\uldb ProgressBar}{\v ControlType_ProgressBar} control on a modeless dialog subscribes to this event using the {\uldb Progress}{\v ControlAttribute_Progress} attribute to receive the progress information.  \page #{\footnote ControlEvent_ActionText} ${\footnote ControlEvent ActionText} K{\footnote ActionText} +{\footnote ControlEvent:ActionText} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b ActionText ControlEvent \line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 The Handler uses this event to broadcast the name of the present action. \par\li0{\b Published By}\par\li180 {\uldb Handler}{\v MsiHandler_Object} \par\li0{\b Argument}\par\li180 None. \par\li0{\b Action on Subscribers}\par\li180 The subscribers are shown when a new progress data arrives from the engine. \par\li0{\b Action by Publisher When Subscriber Activated}\par\li180 None. \par\li0{\b Typical Use}\par\li180 A {\uldb Text}{\v ControlType_Text} control on a modeless dialog subscribes to this event using the {\uldb text}{\v ControlAttribute_Text} attribute to receive the name of the current action. \page #{\footnote ControlEvent_DirectoryComboPath} ${\footnote ControlEvent DirectoryComboPath} K{\footnote DirectoryComboPath} +{\footnote ControlEvent:DirectoryComboPath} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b DirectoryComboPath ControlEvent \line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 The DirectoryCombo control uses this event to broadcast the currently selected path. \par\li0{\b Published By}\par\li180 {\uldb DirectoryCombo}{\v ControlType_DirectoryCombo} \par\li0{\b Argument}\par\li180 None. \par\li0{\b Action on Subscribers}\par\li180 None. \par\li0{\b Action by Publisher When Subscriber Activated}\par\li180 None. \par\li0{\b Typical Use}\par\li180 A {\uldb Text}{\v ControlType_Text} control on the same modal dialog as the DirectoryCombo subscribes to this event to show the path currently selected by the DirectoryCombo. \page #{\footnote ControlEvent_DirectoryListPath} ${\footnote ControlEvent DirectoryListPath} K{\footnote DirectoryListPath} +{\footnote ControlEvent:DirectoryListPath} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b DirectoryListPath ControlEvent \line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 The DirectoryList control uses this event to broadcast the currently selected path. \par\li0{\b Published By}\par\li180 {\uldb DirectoryList}{\v ControlType_DirectoryList} \par\li0{\b Argument}\par\li180 None. \par\li0{\b Action on Subscribers}\par\li180 None. \par\li0{\b Action by Publisher When Subscriber Activated}\par\li180 None. \par\li0{\b Typical Use}\par\li180 A {\uldb Text}{\v ControlType_Text} control on the same modal dialog as the DirectoryList subscribes to this event to show the path currently selected by the DirectoryList. \page #{\footnote ControlEvent_DirectoryListNew} ${\footnote ControlEvent DirectoryListNew} K{\footnote DirectoryListNew} +{\footnote ControlEvent:DirectoryListNew} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b DirectoryListNew ControlEvent \line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 The DirectoryList control is notified through this event when a new folder must be created. \par\li0{\b Published By}\par\li180 {\uldb DirectoryList}{\v ControlType_DirectoryList} \par\li0{\b Argument}\par\li180 None. \par\li0{\b Action on Subscribers}\par\li180 None. \par\li0{\b Action by Publisher When Subscriber Activated}\par\li180 Creates a new (ghost) folder and selects its name field for editing. If a ghost folder already exists in the current folder, that that folder is selected and its name is opened for editing. \par\li0{\b Typical Use}\par\li180 A {\uldb PushButton}{\v ControlType_PushButton} control on the same modal dialog as the DirectoryList subscribes to this event to trigger the creation of a new folder. \page #{\footnote ControlEvent_DirectoryListUp} ${\footnote ControlEvent DirectoryListUp} K{\footnote DirectoryListUp} +{\footnote ControlEvent:DirectoryListUp} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b DirectoryListUp ControlEvent \line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 The DirectoryList control is notified through this event when the user wants to select the parent of the present directory. \par\li0{\b Published By}\par\li180 {\uldb DirectoryList}{\v ControlType_DirectoryList} \par\li0{\b Argument}\par\li180 None. \par\li0{\b Action on Subscribers}\par\li180 The subscribers are disabled if the current directory has no parent (it is a volume), otherwise they are enabled. \par\li0{\b Action by Publisher When Subscriber Activated}\par\li180 Changes the selection to the parent of the current directory. \par\li0{\b Typical Use}\par\li180 A {\uldb PushButton}{\v ControlType_PushButton} control on the same modal dialog as the DirectoryList subscribes to this event to trigger stepping up in the path. \page #{\footnote ControlEvent_DirectoryListOpen} ${\footnote ControlEvent DirectoryListOpen} K{\footnote DirectoryListOpen} +{\footnote ControlEvent:DirectoryListOpen} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b DirectoryListOpen ControlEvent \line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 The DirectoryList control is notified through this event when the user wants to open the selected directory. \par\li0{\b Published By}\par\li180 {\uldb DirectoryList}{\v ControlType_DirectoryList} \par\li0{\b Argument}\par\li180 None. \par\li0{\b Action on Subscribers}\par\li180 The subscribers are disabled if there is no folder selected currently. Otherwise they are enabled. \par\li0{\b Action by Publisher When Subscriber Activated}\par\li180 Changes the selection to the highlighted directory. \par\li0{\b Typical Use}\par\li180 A {\uldb PushButton}{\v ControlType_PushButton} control on the same modal dialog as the DirectoryList subscribes to this event to trigger stepping down in the path. \page #{\footnote ControlEvent_SelectionAction} ${\footnote ControlEvent SelectionAction} K{\footnote SelectionAction} +{\footnote ControlEvent:SelectionAction} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b SelectionAction ControlEvent \line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 The SelectionTree control publishes this event that contains a string describing the action selected for the highlighted item. The string is one of the "Sel*" strings from the {\uldb UIText Table}{\v _msi_UIText_Table@msi.hlp}. \par\li0{\b Published By}\par\li180 {\uldb SelectionTree}{\v ControlType_SelectionTree} \par\li0{\b Argument}\par\li180 None. \par\li0{\b Action on Subscribers}\par\li180 None. \par\li0{\b Action by Publisher When Subscriber Activated}\par\li180 None. \par\li0{\b Typical Use}\par\li180 A {\uldb Text}{\v ControlType_Text} control on the same modal dialog as the SelectionTree subscribes to this event to display the explanation of the currently selected action. \page #{\footnote ControlEvent_SelectionDescription} ${\footnote ControlEvent SelectionDescription} K{\footnote SelectionDescription} +{\footnote ControlEvent:SelectionDescription} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b SelectionDescription ControlEvent \line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 The SelectionTree control publishes this event that contains the describtion for the highlighted item. This string is the {\b Description} field of the {\uldb Feature Table}{\v _msi_Feature_Table@msi.hlp}. \par\li0{\b Published By}\par\li180 {\uldb SelectionTree}{\v ControlType_SelectionTree} \par\li0{\b Argument}\par\li180 None. \par\li0{\b Action on Subscribers}\par\li180 None. \par\li0{\b Action by Publisher When Subscriber Activated}\par\li180 None. \par\li0{\b Typical Use}\par\li180 A {\uldb Text}{\v ControlType_Text} control on the same modal dialog as the SelectionTree subscribes to this event to display the description of the highlighted item. \page #{\footnote ControlEvent_SelectionSize} ${\footnote ControlEvent SelectionSize} K{\footnote SelectionSize} +{\footnote ControlEvent:SelectionSize} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b SelectionSize ControlEvent \line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 The SelectionTree control publishes this event that contains the size for the highlighted item. If it is a parent item, it also contains the number of children selected. The string is one of the {\b SelChildCostPos},  {\b SelChildCostNeg}, {\b SelParentCostPosPos}, {\b SelParentCostPosNeg}, {\b SelParentCostNegPos} or {\b SelParentCostNegNeg} strings from the {\uldb UIText Table}{\v UIText_Table@msi.hlp}. \par\li0{\b Published By}\par\li180 {\uldb SelectionTree}{\v ControlType_SelectionTree} \par\li0{\b Argument}\par\li180 None. \par\li0{\b Action on Subscribers}\par\li180 None. \par\li0{\b Action by Publisher When Subscriber Activated}\par\li180 None. \par\li0{\b Typical Use}\par\li180 A {\uldb Text}{\v ControlType_Text} control on the same modal dialog as the SelectionTree subscribes to this event to display the size of the highlighted item. \page #{\footnote ControlEvent_SelectionPath} ${\footnote ControlEvent SelectionPath} K{\footnote SelectionPath} +{\footnote ControlEvent:SelectionPath} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b SelectionPath ControlEvent \line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 The SelectionTree control publishes this event that contains the path for the highlighted item. If the item is selected to run from source, this is the path of the source. If the item is selected to be absent, the string is the {\b AbsentPath} string from the {\uldb UIText Table}{\v UIText_Table@msi.hlp}. \par\li0{\b Published By}\par\li180 {\uldb SelectionTree}{\v ControlType_SelectionTree} \par\li0{\b Argument}\par\li180 None. \par\li0{\b Action on Subscribers}\par\li180 None. \par\li0{\b Action by Publisher When Subscriber Activated}\par\li180 None. \par\li0{\b Typical Use}\par\li180 A {\uldb Text}{\v ControlType_Text} control on the same modal dialog as the SelectionTree subscribes to this event to display the path of the highlighted item. \page #{\footnote ControlEvent_SelectionPathOn} ${\footnote ControlEvent SelectionPathOn} K{\footnote SelectionPathOn} +{\footnote ControlEvent:SelectionPathOn} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b SelectionPathOn ControlEvent \line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 The SelectionTree control publishes this event that is a boolean value whether there is a selection path associated with the currently selected feature. \par\li0{\b Published By}\par\li180 {\uldb SelectionTree}{\v ControlType_SelectionTree} \par\li0{\b Argument}\par\li180 None. \par\li0{\b Action on Subscribers}\par\li180 None. \par\li0{\b Action by Publisher When Subscriber Activated}\par\li180 None. \par\li0{\b Typical Use}\par\li180 A {\uldb Text}{\v ControlType_Text} control on the same modal dialog as the SelectionTree subscribes to this event as the caption of the selection path. This text control is turned visible or hidden depending on this event. \page #{\footnote ControlEvent_SelectionIcon} ${\footnote ControlEvent SelectionIcon} K{\footnote SelectionIcon} +{\footnote ControlEvent:SelectionIcon} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b SelectionIcon ControlEvent \line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 The SelectionTree control publishes this event that contains the handle to the icon indicating the selected action on the highlighted item.  \par\li0{\b Published By}\par\li180 {\uldb SelectionTree}{\v ControlType_SelectionTree} \par\li0{\b Argument}\par\li180 None. \par\li0{\b Action on Subscribers}\par\li180 None. \par\li0{\b Action by Publisher When Subscriber Activated}\par\li180 None. \par\li0{\b Typical Use}\par\li180 An {\uldb Icon}{\v ControlType_Icon} control on the same modal dialog as the SelectionTree subscribes to this event to display the icon corresponding to the highlighted item. \page #{\footnote ControlEvent_SelectionBrowse} ${\footnote ControlEvent SelectionBrowse} K{\footnote SelectionBrowse} +{\footnote ControlEvent:SelectionBrowse} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b SelectionBrowse ControlEvent \line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 The SelectionTree control publishes this event that makes possible for an other control (typicaly a button) to trigger the browse dialog for the currently highlighted item.  \par\li0{\b Published By}\par\li180 {\uldb SelectionTree}{\v ControlType_SelectionTree} \par\li0{\b Argument}\par\li180 The name of the dialog to be spawned. \par\li0{\b Action on Subscribers}\par\li180 The subscribers are disabled or enabled depending on if the path of the currently selected item can be modified by the user. \par\li0{\b Action by Publisher When Subscriber Activated}\par\li180 Spawns a browse dialog to modify the path. \par\li0{\b Typical Use}\par\li180 A {\uldb PushButton}{\v ControlType_PushButton} control on the same modal dialog as the SelectionTree subscribes to this event to trigger the browse dialog. \page #{\footnote ControlEvent_EndDialog} ${\footnote ControlEvent EndDialog} K{\footnote EndDialog} +{\footnote ControlEvent:EndDialog} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b EndDialog ControlEvent \line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 The Handler is notified through this event when a modal dialog has to be removed. \par\li0{\b Published By}\par\li180 {\uldb Handler}{\v MsiHandler_Object} \par\li0{\b Argument}\par\li180 On regular dialogs: "Return", "Exit", "Retry" or "Ignore".\line On error dialogs" "ErrorOk", "ErrorCancel", "ErrorAbort", "ErrorRetry", "ErrorIgnore", "ErrorYes" or "ErrorNo". \par\li0{\b Action on Subscribers}\par\li180 None. \par\li0{\b Action by Publisher When Subscriber Activated}\par\li180 In all cases the Handler removes the present dialog.\line If the argument is "Exit", the wizard sequence is closed, the control returns to the Engine with the UserExit value.\line If the argument is "Retry", the wizard sequence is closed, the control returns to the Engine with the Suspend value.\line If the argument is "Ignore", the wizard sequence is closed, the control returns to the Engine with the Finished value.\line The above three arguments can be used only on dialogs that are not children of some other dialog.\line If the argument is "Return", the control returns to the parent of the present dialog, if there is a parent. If there is no parent, the control returns to the Engine with the Success value.\line For buttons on an error dialog the possible values correspond to the return codes to the Engine. \par\li0{\b Typical Use}\par\li180 A {\uldb PushButton}{\v ControlType_PushButton} control on a modal dialog is tied to this event in the {\uldb ControlEvent}{\v ControlEvent_Table@msi.hlp} table to dismiss a dialog. \page #{\footnote ControlEvent_NewDialog} ${\footnote ControlEvent NewDialog} K{\footnote NewDialog} +{\footnote ControlEvent:NewDialog} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b NewDialog ControlEvent \line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 The Handler is notified through this event when a modal dialog transitions to an other one. \par\li0{\b Published By}\par\li180 {\uldb Handler}{\v MsiHandler_Object} \par\li0{\b Argument}\par\li180 A string, the name of the new dialog. \par\li0{\b Action on Subscribers}\par\li180 None. \par\li0{\b Action by Publisher When Subscriber Activated}\par\li180 The Handler removes the present dialog and creates the new one with the name indicated in the argument. \par\li0{\b Typical Use}\par\li180 A {\uldb PushButton}{\v ControlType_PushButton} control on a modal dialog is tied to this event in the {\uldb ControlEvent}{\v ControlEvent_Table@msi.hlp} table to signal a transition to the next or previous dialog of the same wizard sequence. \page #{\footnote ControlEvent_SpawnDialog} ${\footnote ControlEvent SpawnDialog} K{\footnote SpawnDialog} +{\footnote ControlEvent:SpawnDialog} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b SpawnDialog ControlEvent \line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 The Handler is notified through this event when a modal dialog wants to create a child. \par\li0{\b Published By}\par\li180 {\uldb Handler}{\v MsiHandler_Object} \par\li0{\b Argument}\par\li180 A string, the name of the new dialog. \par\li0{\b Action on Subscribers}\par\li180 None. \par\li0{\b Action by Publisher When Subscriber Activated}\par\li180 The Handler keeps the present dialog and creates the new one with the name indicated in the argument, placeing it on top of the old one. \par\li0{\b Typical Use}\par\li180 A {\uldb PushButton}{\v ControlType_PushButton} control on a modal dialog is tied to this event in the {\uldb ControlEvent}{\v ControlEvent_Table@msi.hlp} table to creat a child dialog, like a "Are you sure you want to cancel" dialog. \page #{\footnote ControlEvent_AddLocal} ${\footnote ControlEvent AddLocal} K{\footnote AddLocal} +{\footnote ControlEvent:AddLocal} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b AddLocal ControlEvent \line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 The SelectionManager is notified through this event when a feature or all features have to be selected as local. \par\li0{\b Published By}\par\li180 {\uldb Handler}{\v MsiHandler_Object} \par\li0{\b Argument}\par\li180 A string, either the name of the feature or "ALL" (this second option is case insensitive). \par\li0{\b Action on Subscribers}\par\li180 None. \par\li0{\b Action by Publisher When Subscriber Activated}\par\li180 The Handler keeps the present dialog running and calls the {\uldb ConfigureFeature}{\v MsiSelectionManager_ConfigureFeature} method of the Selection Manager. \par\li0{\b Typical Use}\par\li180 A {\uldb PushButton}{\v ControlType_PushButton} control on a modal dialog is tied to this event. \page #{\footnote ControlEvent_AddSource} ${\footnote ControlEvent AddSource} K{\footnote AddSource} +{\footnote ControlEvent:AddSource} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b AddSource ControlEvent \line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 The SelectionManager is notified through this event when a feature or all features have to be selected as source. \par\li0{\b Published By}\par\li180 {\uldb Handler}{\v MsiHandler_Object} \par\li0{\b Argument}\par\li180 A string, either the name of the feature or "ALL" (this second option is case insensitive). \par\li0{\b Action on Subscribers}\par\li180 None. \par\li0{\b Action by Publisher When Subscriber Activated}\par\li180 The Handler keeps the present dialog running and calls the {\uldb ConfigureFeature}{\v MsiSelectionManager_ConfigureFeature} method of the Selection Manager. \par\li0{\b Typical Use}\par\li180 A {\uldb PushButton}{\v ControlType_PushButton} control on a modal dialog is tied to this event. \page #{\footnote ControlEvent_Remove} ${\footnote ControlEvent Remove} K{\footnote Remove} +{\footnote ControlEvent:Remove} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b Remove ControlEvent \line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 The SelectionManager is notified through this event when a feature or all features have to be selected for removal. \par\li0{\b Published By}\par\li180 {\uldb Handler}{\v MsiHandler_Object} \par\li0{\b Argument}\par\li180 A string, either the name of the feature or "ALL" (this second option is case insensitive). \par\li0{\b Action on Subscribers}\par\li180 None. \par\li0{\b Action by Publisher When Subscriber Activated}\par\li180 The Handler keeps the present dialog running and calls the {\uldb ConfigureFeature}{\v MsiSelectionManager_ConfigureFeature} method of the Selection Manager. \par\li0{\b Typical Use}\par\li180 A {\uldb PushButton}{\v ControlType_PushButton} control on a modal dialog is tied to this event. \page #{\footnote ControlEvent_Reinstall} ${\footnote ControlEvent Reinstall} K{\footnote Reinstall ControlEvent} +{\footnote ControlEvent:Reinstall} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b Reinstall ControlEvent \line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 This ControlEvent allows the author to initiate a reinstall of some or all features, typically with the push  of a {\uldb PushButton}{\v ControlType_PushButton} control. \par\li0{\b Published By}\par\li180 {\uldb Handler}{\v MsiHandler_Object} \par\li0{\b Argument}\par\li180 A string, either the name of the feature or "ALL" (this second option is case insensitive). \par\li0{\b Action on Subscribers}\par\li180 None. \par\li0{\b Action by Publisher When Subscriber Activated}\par\li180 The Handler keeps the present dialog running and calls the  {\uldb ConfigureFeature}{\v MsiSelectionManager_ConfigureFeature} method of the Selection Manager. \par\li0{\b Typical Use}\par\li180 A {\uldb PushButton}{\v ControlType_PushButton} control on a modal dialog is tied to this event. Typically the same button  is also tied to a {\uldb ReinstallMode}{\v ControlEvent_ReinstallMode} control event immediately preceeding this one. \page #{\footnote ControlEvent_ReinstallMode} ${\footnote ControlEvent ReinstallMode} K{\footnote ReinstallMode ControlEvent} +{\footnote ControlEvent:ReinstallMode} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b ReinstallMode ControlEvent \line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 This ControlEvent allows the author to specify the validation mode(s) to be used during a reinstall. \par\li0{\b Published By}\par\li180 {\uldb Handler}{\v MsiHandler_Object} \par\li0{\b Argument}\par\li180 A string. For the list of possible values, see the   {\uldb SetReinstallMode}{\v MsiSelectionManager_SetReinstallMode} method. \par\li0{\b Action on Subscribers}\par\li180 None. \par\li0{\b Action by Publisher When Subscriber Activated}\par\li180 The Handler keeps the present dialog running and calls the   {\uldb SetReinstallMode}{\v MsiSelectionManager_SetReinstallMode} method of the Selection Manager. \par\li0{\b Typical Use}\par\li180 A {\uldb PushButton}{\v ControlType_PushButton} control on a modal dialog is tied to this event. Typically the  same button is also tied to a {\uldb Reinstall}{\v ControlEvent_Reinstall} control event immediately following this one. \page #{\footnote ControlEvent_CheckExistingPath} ${\footnote ControlEvent CheckExistingPath} K{\footnote CheckExistingPath} +{\footnote ControlEvent:CheckExistingPath} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b CheckExistingPath ControlEvent \line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 The Handler is notified through this event when the browse dialog has to be removed and it has to be verified that the selected path is writable.  If the path is writable, the event behaves like the EndDialog, Return event.  If the path is not writable, it displays an error dialog and returns control to the browse dialog. \par\li0{\b Published By}\par\li180 {\uldb Handler}{\v MsiHandler_Object} \par\li0{\b Argument}\par\li180 The name of the property containing the path. If the property is indirected, the property name is enclosed in square brackets. \par\li0{\b Action on Subscribers}\par\li180 None. \par\li0{\b Action by Publisher When Subscriber Activated}\par\li180 The Handler removes the present dialog and returns to the calling dialog if the path is writable, otherwise it stays on the present dialog. \par\li0{\b Typical Use}\par\li180 A {\uldb PushButton}{\v ControlType_PushButton} control on a browse dialog is tied to this event  in the {\uldb ControlEvent}{\v ControlEvent_Table@msi.hlp} table to check the selected path before returning to the selection dialog. \page #{\footnote ControlEvent_CheckExistingTargetPath} ${\footnote ControlEvent CheckExistingTargetPath} K{\footnote CheckExistingTargetPath} +{\footnote ControlEvent:CheckExistingTargetPath} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b CheckExistingTargetPath ControlEvent \line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 The Handler is notified through this event when it has to be verified that the selected path is writable.  If the path is not writable, it blocks further control events associated with the same control. \par\li0{\b Published By}\par\li180 {\uldb Handler}{\v MsiHandler_Object} \par\li0{\b Argument}\par\li180 The name of the property containing the path. If the property is indirected, the property name is enclosed in square brackets. \par\li0{\b Action on Subscribers}\par\li180 None. \par\li0{\b Action by Publisher When Subscriber Activated}\par\li180 The path is checked. \par\li0{\b Typical Use}\par\li180 A {\uldb PushButton}{\v ControlType_PushButton} control on a browse dialog is tied to this event  in the {\uldb ControlEvent}{\v ControlEvent_Table@msi.hlp} table to check the selected path before returning to the selection dialog. \page #{\footnote ControlEvent_CheckPath} ${\footnote ControlEvent CheckPath} K{\footnote CheckPath} +{\footnote ControlEvent:CheckPath} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b CheckPath ControlEvent \line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 The Handler is notified through this event when the browse dialog has to be removed and it has to be verified that the selected path is valid.  If the path is valid, the event behaves like the EndDialog, Return event.  If the path is not valid, it displays an error dialog and returns control to the browse dialog. \par\li0{\b Published By}\par\li180 {\uldb Handler}{\v MsiHandler_Object} \par\li0{\b Argument}\par\li180 The name of the property containing the path. If the property is indirected, the property name is enclosed in square brackets. \par\li0{\b Action on Subscribers}\par\li180 None. \par\li0{\b Action by Publisher When Subscriber Activated}\par\li180 The Handler removes the present dialog and returns to the calling dialog if the path is writable, otherwise it stays on the present dialog. \par\li0{\b Typical Use}\par\li180 A {\uldb PushButton}{\v ControlType_PushButton} control on a browse dialog is tied to this event  in the {\uldb ControlEvent}{\v ControlEvent_Table@msi.hlp} table to check the selected path before returning to the selection dialog. \page #{\footnote ControlEvent_CheckTargetPath} ${\footnote ControlEvent CheckTargetPath} K{\footnote CheckTargetPath} +{\footnote ControlEvent:CheckTargetPath} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b CheckTargetPath ControlEvent \line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 The Handler is notified through this event when it has to be verified that the selected path is valid.  If the path is not valid, it blocks further control events associated with the same control. \par\li0{\b Published By}\par\li180 {\uldb Handler}{\v MsiHandler_Object} \par\li0{\b Argument}\par\li180 The name of the property containing the path. If the property is indirected, the property name is enclosed in square brackets. \par\li0{\b Action on Subscribers}\par\li180 None. \par\li0{\b Action by Publisher When Subscriber Activated}\par\li180 The path is checked. \par\li0{\b Typical Use}\par\li180 A {\uldb PushButton}{\v ControlType_PushButton} control on a browse dialog is tied to this event  in the {\uldb ControlEvent}{\v ControlEvent_Table@msi.hlp} table to check the selected path before returning to the selection dialog. \page #{\footnote ControlEvent_SetPath} ${\footnote ControlEvent SetPath} K{\footnote SetPath} +{\footnote ControlEvent:SetPath} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b SetPath ControlEvent \line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 The Handler is notified through this event when the browse dialog has to be removed and it has to be verified that the selected path is valid and writeable. It also calls the DirectoryManager to set the target path.  If the path is valid, the event behaves like the EndDialog, Return event.  If the path is not valid, it displays an error dialog and returns control to the browse dialog. \par\li0{\b Published By}\par\li180 {\uldb Handler}{\v MsiHandler_Object} \par\li0{\b Argument}\par\li180 The name of the property containing the path. If the property is indirected, the property name is enclosed in square brackets. \par\li0{\b Action on Subscribers}\par\li180 None. \par\li0{\b Action by Publisher When Subscriber Activated}\par\li180 The Handler removes the present dialog and returns to the calling dialog if the path is writable, otherwise it stays on the present dialog. \par\li0{\b Typical Use}\par\li180 A {\uldb PushButton}{\v ControlType_PushButton} control on a browse dialog is tied to this event  in the {\uldb ControlEvent}{\v ControlEvent_Table@msi.hlp} table to check the selected path before returning to the selection dialog. \page #{\footnote ControlEvent_SetTargetPath} ${\footnote ControlEvent SetTargetPath} K{\footnote SetTargetPath} +{\footnote ControlEvent:SetTargetPath} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b SetTargetPath ControlEvent \line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 The Handler is notified through this event when it has to be verified that the selected path is valid and writeable. It also calls the DirectoryManager to set the target path.  If the path is not valid, it blocks further control events associated with the same control. \par\li0{\b Published By}\par\li180 {\uldb Handler}{\v MsiHandler_Object} \par\li0{\b Argument}\par\li180 The name of the property containing the path. If the property is indirected, the property name is enclosed in square brackets. \par\li0{\b Action on Subscribers}\par\li180 None. \par\li0{\b Action by Publisher When Subscriber Activated}\par\li180 The path is checked and set. \par\li0{\b Typical Use}\par\li180 A {\uldb PushButton}{\v ControlType_PushButton} control on a browse dialog is tied to this event  in the {\uldb ControlEvent}{\v ControlEvent_Table@msi.hlp} table to check the selected path before returning to the selection dialog. \page #{\footnote ControlEvent_SetInstallLevel} ${\footnote ControlEvent SetInstallLevel} K{\footnote SetInstallLevel} +{\footnote ControlEvent:SetInstallLevel} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b SetInstallLevel ControlEvent \line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 The handler calls the engine to set the installation level to the value specified in the argument \par\li0{\b Published By}\par\li180 {\uldb Handler}{\v MsiHandler_Object} \par\li0{\b Argument}\par\li180 An integer. The new value of the installation level. \par\li0{\b Action on Subscribers}\par\li180 None. \par\li0{\b Action by Publisher When Subscriber Activated}\par\li180 The handler calls the engine to change the installation level. \par\li0{\b Typical Use}\par\li180 A {\uldb PushButton}{\v ControlType_PushButton} control on a modal dialog is tied to this event in the {\uldb ControlEvent}{\v ControlEvent_Table@msi.hlp} table to change the installation level. \page #{\footnote ControlEvent_Reset} ${\footnote ControlEvent Reset} K{\footnote Reset} +{\footnote ControlEvent:Reset} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b Reset ControlEvent \line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 The dialog is reset. In other words all the controls on the dialog are called to undo the property changes they have performed. It should reset all the property values to what they were when the dialog was created. \line There is one case that is not handled properly. If there are at least two controls on the same dialog linked indirectly to the same property and at least one of them started with some other property originaly, this property value is sometimes reset to its second value. Since this case is very esoteric, it is not worth the special code to handle it. \par\li0{\b Published By}\par\li180 {\uldb Handler}{\v MsiHandler_Object} \par\li0{\b Argument}\par\li180 None. \par\li0{\b Action on Subscribers}\par\li180 None. \par\li0{\b Action by Publisher When Subscriber Activated}\par\li180 All the controls on the dialog are called to restore the original values of their properties. \par\li0{\b Typical Use}\par\li180 A {\uldb PushButton}{\v ControlType_PushButton} control on a modal dialog is tied to this event to allow reseting all the values on the dialog, canceling all the changes performed on the page. \page #{\footnote ControlEvent_ValidateProductID} ${\footnote ControlEvent ValidateProductID} K{\footnote ValidateProductID} +{\footnote ControlEvent:ValidateProductID} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b ValidateProductID ControlEvent \line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 This event calls the Engine to validate the Product ID. If the validation succeeds, the PIDTemplate property is removed. Otherwise this event puts up an error message. \par\li0{\b Published By}\par\li180 {\uldb Handler}{\v MsiHandler_Object} \par\li0{\b Argument}\par\li180 None. \par\li0{\b Action on Subscribers}\par\li180 None. \par\li0{\b Action by Publisher When Subscriber Activated}\par\li180 Calls the engine to validate the Product ID. \par\li0{\b Typical Use}\par\li180 A {\uldb PushButton}{\v ControlType_PushButton} control on a modal dialog is tied to this event to allow checking the user entry for the PID and move on to the next dialog if the entry is valid. \page #{\footnote DialogType_Standard} ${\footnote DialogType Standard} K{\footnote Standard} +{\footnote DialogType:Standard} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b Standard Dialog Type \line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 As the name suggests, this is the regular dialog type, used as modal dialogs in wizard sequences and modeless dialogs. \par\li0{\b Creation}\par\li180 Through the {\uldb DialogCreate}{\v MsiDialogHandler_DialogCreate} and {\uldb AddDialog}{\v MsiDialogHandler_AddDialog} methods of the Handler. \par\li0{\b Destruction}\par\li180 Through the {\uldb RemoveDialog}{\v MsiDialogHandler_RemoveDialog} method of the Handler. \page #{\footnote DialogType_Browse} ${\footnote DialogType Browse} K{\footnote Browse} +{\footnote DialogType:Browse} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b Browse Dialog Type \line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 MAC ONLY!\line Add info here!!! \par\li0{\b Creation}\par\li180 Info here!!! \par\li0{\b Destruction}\par\li180 Info here!!! \page #{\footnote SpecialDialog_FilesInUse} ${\footnote SpecialDialog FilesInUse} K{\footnote FilesInUse} +{\footnote SpecialDialog:FilesInUse} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b FilesInUse Dialog \line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 This is a dialog that can be authored to inform the user of any processes that are using files that need to be  overwritten or deleted.  This would give the user the opportunity to shut down the offending processes, thus  avoiding the necessity of rebooting the machine in order to complete the replacement or deletion of the "in-use"  file(s). \par\li0{\b Creation}\par\li180 This dialog is created as required by the {\uldb InstallValidate}{\v _msi_Action_InstallValidate@msi.hlp} action.  See that  topic for complete details. \par\li0{\b Destruction}\par\li180 Through the {\uldb RemoveDialog}{\v MsiDialogHandler_RemoveDialog} method of the Handler. \page #{\footnote SpecialDialog_Browse} ${\footnote SpecialDialog Browse} K{\footnote Browse} +{\footnote SpecialDialog:Browse} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b Browse Dialog \line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 This dialog is used to select a directory. The directory does not have to exist. \line The dialog typicaly contains the following controls:\line A {\uldb PathEdit control}{\v ControlType_PathEdit} to select the tail section of the path. This control can not loose focus if the entered tail is not valid on the present volume.\line A {\uldb DirectoryCombo control}{\v ControlType_DirectoryCombo} to show the presently selected path, except the last segment, that is displayed by the PathEdit control.\line A {\uldb DirectoryList control}{\v ControlType_DirectoryList} to show the folders below the directory currently displayed by the DirectoryCombo. This may also show a "phantom folder", a folder not yet created.\line The above three controls are tied to the same property (possibly indirectly). The property is the path being selected.\line The DirectoryCombo control specifies through its stylebits what volumetypes are displayed. On a typical Browse dialog probably all types should be turned on.\line The dialog typically also contains three {\uldb PushButton controls}{\v ControlType_PushButton}, that serve as DirectoryUp, NewFolder and Open buttons. The buttons subscribe to the {\uldb DirectoryListUp}{\v ControlEvent_DirectoryListUp}, {\uldb DirectoryListNew}{\v ControlEvent_DirectoryListNew} and {\uldb DirectoryListOpen}{\v ControlEvent_DirectoryListOpen} control events, respectively using the {\uldb ControlEvent Table}{\v ControlEvent_Table@msi.hlp}.\line If the dialog is designed to search for existing folders only, the NewFolder button may be omitted.\line The above buttons usually authored as picture buttons on Win95 and NT4. Since we do not support picture buttons on NT3.51, the author has to provide alternative buttons for the NT3.51 environment.\line When this dialog is authored, the "NewFolder" string must be defined in the {\uldb UIText Table}{\v UIText_Table@msi.hlp}.\line When this dialog is used to select a location for files to be written, the OK button should be linked to the {\uldb CheckPath controlevent}{\v ControlEvent_CheckPath} instead of the {\uldb EndDialog controlevent}{\v ControlEvent_EndDialog} with a Return argument. The argument of the CheckPath event is the name of the property, or if it indirected than the name of the property in square brackets. This control event first checks if the selected path is writable. If it is, the event behaves like EndDialog with the Return argument. Otherwise it puts up an error dialog and returns focus to the Browse dialog.\line \page #{\footnote SpecialDialog_Cancel} ${\footnote SpecialDialog Cancel} K{\footnote Cancel} +{\footnote SpecialDialog:Cancel} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b Cancel Dialog \line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 This is a modal dialog to confirm that the user indeed wants to terminate the installation. Typically contains a {\uldb Text control}{\v ControlType_Text} and two {\uldb PushButtons}{\v ControlType_PushButton}.  The two buttons give the choices to the user the change his/her mind and return to the last dialog or confirm the termination of the install. The two buttons in the {\uldb ControlEvent Table}{\v ControlEvent_Table@msi.hlp} are linked to the {\uldb EndDialog}{\v ControlEvent_EndDialog} controlevent with the Return and Exit arguments. The Return causes the Cancel dialog to be destroyed and the focus returns to the previous dialog. The Exit causes the Handler to return control to the Engine with the appropriate code indicating that the user wants to abort. The Engine on receiving this code shuts down and puts up the {\uldb UserExit Dialog}{\v SpecialDialog_UserExit}. \page #{\footnote SpecialDialog_DiskCost} ${\footnote SpecialDialog DiskCost} K{\footnote DiskCost} +{\footnote SpecialDialog:DiskCost} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b DiskCost Dialog \line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 This dialog is typically spawned when the OutOfDiskSpace property is set indicating that there is not enough disk space for the currently selected installation.\line This dialog or a variation of it may be also activated from the {\uldb Selection Dialog}{\v SpecialDialog_Selection}, to give the user an overview of the diskspace needed on the different volumes.\line The dialog is a modal dialog and normally contains a {\uldb VolumeCostList control}{\v ControlType_VolumeCostList} and a {\uldb PushButton}{\v ControlType_PushButton} that returns the user to the previous dialog. It can ofcourse, contain other controls like static text or pictures.\line \page #{\footnote SpecialDialog_Error} ${\footnote SpecialDialog Error} K{\footnote Error} +{\footnote SpecialDialog:Error} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b Error Dialog \line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 This modal dialog is used to display an error message. More than one error dialog is possible in one installation. The ErrorDialog property specifies which dialog is used as an error dialog. If this property is not set or does not point to a valid error dialog, the error messages will not be displayed, only logged, along with a warning about the missing error dialog.\line This dialog must have the {\uldb ErrorDialog}{\v DialogStyle_Error} style bit set. The dialog must have a {\uldb Text control}{\v ControlType_Text} named ErrorText. This control will display the text of the error message.\line The dialog is also authored with seven {\uldb PushButtons}{\v ControlType_PushButton}. These buttons must specify the {\uldb EndDialog}{\v ControlEvent_EndDialog} control event in the {\uldb ControlEvent Table}{\v ControlEvent_Table@msi.hlp} with the following arguments: ErrorAbort, ErrorCancel, ErrorIgnore, ErrorNo, ErrorOk, ErrorRetry, ErrorYes.\line The buttons should be authored approximately at the same position. When the dialog is created only a subset of these buttons will be created, depending on the message, and the X coordinate of the buttons will be modified so the displayed buttons are evenly spaced. The other three coordinates of the buttons are not changed. Since the buttons are rearranged, the author should make sure, that no other control is placed in the same horizontal reagon of the dialog as the buttons.\line The error message can consist of three segments. The first segment is the text of the error message. This part is required. The second part is a list of letters specifying what buttons must be created. The list is enclosed in curly braces. The letter codes are the first letters of the words abort, cancel, ignore, no, Ok, retry, yes. All the letter codes must be lower case except one, that designates the default button. If this list of codes is missing or empty, it is assumed to be \{O\}, i.e. putting up the OK button.\line The third part of the error message is optional. If it is present this string is used as the title for the dialog overwriting the title entered in the {\uldb Dialog Table}{\v _msi_Dialog_Table@msi.hlp}. If this part is present the second part must be present, too, to separate the part. (remember, the second part can be an empty list \{\}).\line In case of the error dialog the FirstControl, DefaultControl and CancelControl entries in the Dialog Table are ignored, and the default button specified by the message plays all three roles.\line \page #{\footnote SpecialDialog_Exit} ${\footnote SpecialDialog Exit} K{\footnote Exit} +{\footnote SpecialDialog:Exit} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b Exit Dialog \line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 This is a modal dialog that is displayed at the end of a successfull install. Typically contains only some text and an OK button. What is special about this dialog, that its name has to appear in the {\uldb AdminSequence Table}{\v _msi_AdminSequence_Table@msi.hlp} and {\uldb InstallSequence Table}{\v InstallSequence_Table@msi.hlp} with -1 as the sequence number. \page #{\footnote SpecialDialog_FatalError} ${\footnote SpecialDialog FatalError} K{\footnote FatalError} +{\footnote SpecialDialog:FatalError} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b FatalError Dialog \line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 This is a modal dialog that is displayed at the end of an install, if it terminated because of a fatal error. Typically contains only some text and an OK button. What is special about this dialog, that its name has to appear in the {\uldb AdminSequence Table}{\v _msi_AdminSequence_Table@msi.hlp} and {\uldb InstallSequence Table}{\v _msi_InstallSequence_Table@msi.hlp} with -3 as the sequence number. \page #{\footnote SpecialDialog_LicenseAgreement} ${\footnote SpecialDialog LicenseAgreement} K{\footnote LicenseAgreement} +{\footnote SpecialDialog:LicenseAgreement} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b LicenseAgreement Dialog \line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 This is a modal dialog that is used to display the license agreement to the user. Typically the text of the agreement is displayed in a {\uldb ScrollableText control}{\v ControlType_ScrollableText}. When the database can handle arbitrary length strings, the text (in RTF format) will be read from the text field of the control. For the time being the text is hardwired in the control.\line The dialog typically also contains a pair of radiobuttons that let the user accept or reject the agreement. For legal reasons it is advisable that neither of the buttons is selected initally, forcing the user to make an active choice. This can be achieved by not having an inital value for the property linked to the {\uldb RadioButtonGroup}{\v ControlType_RadioButtonGroup}. The author may also want to disable/enable the next button on this dialog, depending on the choice made. An other possible situation is, when the next button takes the user to different dialogs depending on the choice.\line \page #{\footnote SpecialDialog_Selection} ${\footnote SpecialDialog Selection} K{\footnote Selection} +{\footnote SpecialDialog:Selection} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b Selection Dialog \line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 This is modal dialog letting the user select individual selection items. The dialog contains a {\uldb SelectionTree control}{\v ControlType_SelectionTree} that displays the main information. This controls publishes several events that change the display on other controls of the dialog. Typically there are four {\uldb Text controls}{\v ControlType_Text} subscribing to the {\uldb SelectionAction}{\v ControlEvent_SelectionAction}, {\uldb SelectionDescription}{\v ControlEvent_SelectionDescription}, {\uldb SelectionSize}{\v ControlEvent_SelectionSize} and {\uldb SelectionPath}{\v ControlEvent_SelectionPath} events using the {\uldb Text controlattribute}{\v ControlAttribute_Text}.  There is also an {\uldb Icon control}{\v ControlType_Icon} that subscribes to the {\uldb SelectionIcon}{\v ControlEvent_SelectionIcon} event through the {\uldb ImageHandle attribute}{\v ControlAttribute_ImageHandle}. The above controls use the {\uldb EventMapping Table}{\v _msi_EventMapping_Table@msi.hlp} to specify these subscriptions.  There is also a {\uldb PushButton}{\v ControlType_PushButton} that subscribes to the {\uldb SelectionBrowse}{\v ControlEvent_SelectionBrowse} event using the {\uldb ControlEvent Table}{\v ControlEvent_Table@msi.hlp} and giving the name of the {\uldb Browse dialog}{\v SpecialDialog_Browse} as the argument.  When a SelectionTree control is authored, the AbsentPath, SelAbsentAbsent, SelAbsentLocal, SelAbsentCD, SelAbsentNetwork, SelLocalAbsent, SelLocalLocal, SelLocalCD, SelLocalNetwork, SelCDAbsent, SelNetworkAbsent, SelCDLocal, SelNetworkLocal, SelCDCD, SelNetworkNetwork, SelChildCostPos, SelChildCostNeg, SelParentCostPosPos, SelParentCostPosNeg, SelParentCostNegPos, SelParentCostNegNeg, MenuAbsent, MenuLocal, MenuCD, MenuNetwork strings must be specified in the {\uldb UIText table}{\v UIText_Table@msi.hlp}.  The selection tree gets populated only if the DirectoryInitialize, CostInitialize and CostFinalize actions were all previously called. \page #{\footnote SpecialDialog_UserExit} ${\footnote SpecialDialog UserExit} K{\footnote UserExit} +{\footnote SpecialDialog:UserExit} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b UserExit Dialog \line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 This is a modal dialog that is displayed at the end of an install, that was aborted by the user. Typically contains only some text and an OK button. What is special about this dialog, that its name has to appear in the {\uldb AdminSequence Table}{\v _msi_AdminSequence_Table@msi.hlp} and {\uldb InstallSequence Table}{\v _msi_InstallSequence_Table@msi.hlp} with -2 as the sequence number. \page
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\darwin\src\help\msitool.rtf ===
{\rtf1\ansi {\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}} {\colortbl;} \fs20 #{\footnote InstallerDevTools} ${\footnote Installer Tools} K{\footnote Tools} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b Installer Development Tools \par}\li180 THESE TOOLS AND INFORMATION ARE PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND,  EITHER EXPRESSED OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED  WARRANTIES OF MERCHANTABILITY AND/OR FITNESS FOR A PARTICULAR PURPOSE. {\uldb MsiDb}{\v MsiDb_Tool} - database import, export, merge, transform\line {\uldb MsiMsp}{\v MsiMsp_Tool} - patch package creation\line {\uldb MsiInfo}{\v MsiInfo_Tool} - summary information property manager, string pool validation\line {\uldb MsiMerg}{\v MsiMerge_Tool} - merges one database into another\line {\uldb MsiTran}{\v MsiTran_Tool} - generates and applies transforms\line {\uldb Orca}{\v Orca_Tool} - package editing/creation tool\line {\uldb MsiVal2}{\v MsiVal2_Tool} - command line ICE validation tool.\line {\uldb Msispy}{\v Msispy_Tool}  - installer registration browser\line {\uldb MsiZap}{\v MsiZap_Tool}  - failure cleanup utility\line {\uldb Makefile}{\v MsiTool_Mak} - makefile used to build custom actions and tools\line \page #{\footnote MsiDb_Tool} ${\footnote MsiDb Tool} K{\footnote MsiDb} +{\footnote Tool:MsiDb} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b MSIDB.EXE Tool To Modify A Database \par}\li180 The MSIDB.EXE tool uses the MSI database external API to import and export database tables and streams,  merge databases and apply transforms to databases.  It is essentially a UI and/or command line  processing layer on top of the MsiDatabaseImport and MsiDatabaseExport Windows Installer APIs.  If all required  parameters (mode, folder, database and table list) are specified on the command line,  the tool will not bring up any UI and will operate as silent command line-driven utility,  suitable for a build script. If the folder  containing the text archive files is not specified it will be prompted for; likewise the database will   be prompted for if not specified. Tables can be exported from a read only database. \par\fi-180\li180{\b Command Line Syntax} {\line\f1 MsiDb \{option\}...\{option\}... \{table\}...\{table\}} \line The following case-insensitive command line options are supported (slash delimiter may also be used). {\line\f1\b  -i   } Import text archive files from folder into specified database {\line\f1\b  -e   } Export selected tables into text archive files in specified folder {\line\f1\b  -c   } Creates a new database file (overwrites existing) and imports tables {\line\f1\b  -f   } Specifies the folder containing the text archive files for tables and streams {\line\f1\b  -d   } Fully-qualified path to the database {\line\f1\b  -m   } Fully-qualified path to the database to merge in {\line\f1\b  -t   } Fully-qualified path to the transform to apply {\line\f1\b  -j   } Name of storage to remove from the database. {\line\f1\b  -k   } Name of stream to remove from the database. {\line\f1\b  -x   } Name of stream to save to a disk file in the current directory. {\line\f1\b  -w   } Name of storage to save to a disk file in the current directory. {\line\f1\b  -a   } Name of file to add to the database (becomes a child stream). {\line\f1\b  -r   } Name of storage to add to the database (becomes a substorage). {\line\f1\b  -s   } Truncate table names to 8 chars on idt export. {\line\f1\b  -?   } Displays command line help dialog \line Table names for import are file names. Standard wild card specifications may be used. \line Table names for export are table names. Only the wildcard specification, "*", may be used. \line Multiple -m's, -a's, -r's, -t's, -j's, -k's, -w's, and -x's may be used (maximum of 10 each). \line The -m, -a, -r, -t, -j, -k, -w, and -x options are only available in silent command line mode. \par{\b Archive Table Naming} \line Only archive text files with the ".idt" extension may be imported. \line The table name is truncated to 8 characters if -s is used, and the extension ".idt" added. \line Tables names supplied by command for import are likewise converted. \line The name used for database table creation is maintained in the .idt file. \line Binary data streams are stored as separate files with extension ".ibd". \line Binary filename used is primary key data for the row containing the stream. \line\line Note:  When using long filenames with spaces, use quotes around them.  For example, for a  database that is in the 'My Documents' folder, specify it as "c:\\my documents". \page #{\footnote MsiMsp_Tool} ${\footnote MsiMsp Tool} K{\footnote MsiMsp} +{\footnote Tool:MsiMsp} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b MSIMSP.EXE Tool To Create Patch Packages \par}\li180 The MSIMSP.EXE tool is a wrapper for PatchWiz.dll.  The tool may be used to create a patch package by passing  in the path to a "Patch Creation Properties" file or PCP file, and the path to the patch package to create.  Additional options include creating a log file, and specifying a non-default temporary folder in which  the transforms, cabinets and assorted files used to create the patch package are left behind.  See msi.chm for  more info on setting up a Patch Creation Properties file, as well as meanings of error codes from PatchWiz.dll  and MSIMSP.EXE. \par\fi-180\li180{\b Command Line Syntax} {\line\f1 MsiMsp \{option\}...\{option\}...} \line The following case-insensitive command line options are supported (slash delimiter may also be used). {\line\f1\b  -s   } Required.  Followed by path to Patch Creation Properties file. {\line\f1\b  -p   } Required.  Followed by path to patch package to create. {\line\f1\b  -f   } Optional.  Followed by path to temporary folder. {\line\f1\b  -k   } Optional.  Fail if temporary folder already exists. {\line\f1\b  -l   } Optional.  Followed by path to log file describing patch creation process and errors. {\line\f1\b  -d   } Optional.  Will display dialog if and when patch creation has completed successfully. {\line\f1\b  -?   } Displays command line help dialog \line\line Note:  When using long filenames with spaces, use quotes around them.  For example, for a  Patch Creation Project that is in the 'My Documents' folder, specify it as "c:\\My Documents". \page #{\footnote MsiInfo_Tool} ${\footnote MsiInfo Tool} K{\footnote MsiInfo} +{\footnote Tool:MsiInfo} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b MSIINFO.EXE Tool To Modify A Database's Summary Properties \par}\li180 The MSIINFO.EXE tool uses the MSI database external API to edit or display the summary information of a  database. It is a command line tool. \par\fi-180\li180{\b Command Line Syntax} {\line\f1 MsiInfo \{database\} [[/B] /D]}\line Displays the Summary information of the database to the console\line \line The following case-insensitive command line options are supported (slash delimiter may also be used). {\line\f1\b  -B   }  Display information about every string in the string pool. {\line\f1\b  -D   }  Display information about the string pool. \line {\b Remarks}\line The -D option will examine the string pool for corruption and provide information about the codepage of the database.   Note that the codepage of the database is different from the codepage of the Summary Information stream (PID_CODEPAGE).  It will also check every string for characters that are invalid in the codepage of the database. The -B option is only  valid if -D is also used, and it must come before the -D option. \line {\line\f1 MsiInfo \{database\} \{option\} \{data\}.....}\line Sets the corresponding summary information property\line \line The following case-insensitive command line options are supported (slash delimiter may also be used). {\line\f1\b  -I   }  PID_DICTIONARY {\line\f1\b  -C   }  PID_CODEPAGE {\line\f1\b  -T   }  PID_TITLE {\line\f1\b  -J   }  PID_SUBJECT {\line\f1\b  -A   }  PID_AUTHOR {\line\f1\b  -K   }  PID_KEYWORDS {\line\f1\b  -O   }  PID_COMMENTS {\line\f1\b  -P   }  PID_TEMPLATE {\line\f1\b  -L   }  PID_LASTAUTHOR {\line\f1\b  -V   }  PID_REVNUMBER {\line\f1\b  -E   }  PID_EDITTIME {\line\f1\b  -S   }  PID_LASTPRINTED {\line\f1\b  -R   }  PID_CREATE_DTM {\line\f1\b  -Q   }  PID_LASTSAVE_DTM {\line\f1\b  -G   }  PID_PAGECOUNT {\line\f1\b  -W   }  PID_WORDCOUNT {\line\f1\b  -H   }  PID_CHARCOUNT {\line\f1\b       }  PID_THUMBNAIL     !! NOT SUPPORTED !! {\line\f1\b  -N   }  PID_APPNAME {\line\f1\b  -U   }  PID_SECURITY \line The data following the option is optional. If there is no data following the option, then the property is  removed. The database must not be a readOnly database.  The same properties can be specified again on the  command line, but only 20 switches can be used.  If the data for a particular option contains a space,  encapsulate it in quotes, such as /T "MY TITLE".  The quotation marks notify the command line parser to  ignore the space.  For the file time  properties, those being PID_EDITTIME, PID_LASTPRINTED, PID_CREATE_DTM,  and PID_LASTSAVE_DTM, use the following format "year/month/day hour:minute:second" which is required to  be "yyyy/mm/dd hh:mm:ss" (i.e. "1997/06/20 03:25:59). \page #{\footnote MsiTran_Tool} ${\footnote MsiTran Tool} K{\footnote MsiTran} +{\footnote Tool:MsiTran} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b MSITRAN.EXE Tool to Generate or Apply a Transform file \par}\li180 The {\i\b MSITRAN.EXE} tool can generate or apply a transform file.  It is a command line tool layered on the  MsiDatabaseGenerateTransform, MsiCreateTransformSummaryInfo, and MsiDatabaseApplyTransform Windows Installer API.\par {\b Command Line Syntax:} \line {\line\f1 Transform Generation: msitran -g \{base db\} \{ref db\} \{transform file name\} [\{error conditions / validation conditions\}]}  {\line\f1 Transform Application: msitran -a \{transform\} \{database\} [\{error conditions\}]} \line\line {\b Error Conditions:}\line The following errors may be suppressed when applying a transform.  To suppress an error, include the appropriate character in  the \{error conditions\} argument. Conditions specified with -g are placed in  the summary information of the transform, but are not used when  applying a transform with -a.\line \line {\f1 'a': }Add existing row.\line {\f1 'b': }Delete non-existing row.\line {\f1 'c': }Add existing table.\line {\f1 'd': }Delete non-existing table.\line {\f1 'e': }Modify existing row.\line {\f1 'f': }Change codepage.\line \line\line {\b Validation Conditions:}\line The following validation conditions may be used to indicate when a transform may be applied to a package.  These conditions may be specified with -g, but not -a.\line \line {\f1 'g': }Check upgrade code.\line {\f1 'l': }Check language.\line {\f1 'p': }Check platform.\line {\f1 'r': }Check product.\line {\f1 's': }Check major version only.\line {\f1 't': }Check major and minor versions only.\line {\f1 'u': }Check major, minor, and upgrade versions.\line {\f1 'v': }Applied database version < Base database version.\line {\f1 'w': }Applied database version <= Base database version.\line {\f1 'x': }Applied database version = Base database version.\line {\f1 'y': }Applied database version >= Base database version.\line {\f1 'z': }Applied database version > Base database version.\line \line\line {\b Generate transform without Summary Information Stream:}\line The conditions are ignored.\line {\f1 '@': }Suppress summary information stream generation.\line \page #{\footnote Orca_Tool} ${\footnote Orca Tool} K{\footnote Orca} +{\footnote Tool:Orca} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b ORCA.EXE Tool for package editing and creation \par}\li180 The {\i\b ORCA.EXE} tool can be used for creating and editing MSI packages and merge modules. The tool  also provides a graphical interface for validation, highlighting the particular entries where validation errors  and/or warnings occur.  \par {\b Command Line Syntax:} \line {\line\f1 orca [<options>] [<source file>]} \line \line The following are general command line options supported by ORCA {\line\f1\b -q} Quiet mode  {\line\f1\b -s <database>} Schema database ["orca.dat" - default] {\line\f1\b -?} Help dialog \line \line The following are Merge Module command line options {\line\f1\b -c} Commit merge to database if no errors. {\line\f1\b -m <module>} Merge Module to merge into database {\line\f1\b -f Feature[:Feature2]} Feature(s) to connect to Merge Module {\line\f1\b -r <directory id>} Directory entry for module root redirection {\line\f1\b -x <directory>} Extract files to source image under directory {\line\f1\b -g <language>} Language used to open module {\line\f1\b -l <log file>} File to use as log, append if already exists {\b Remarks:}\line If merging, -f, -m and <sourcefile> are all required. \line\line \page #{\footnote MsiVal2_Tool} ${\footnote MsiVal2 Tool} K{\footnote MsiVal2} +{\footnote Tool:MsiVal2} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b MSIVAL2.EXE Command line tool to run ICE validation. \par}\li180 The {\i\b MSIVAL2.EXE} tool can run a suite of ICE validators or an individual ICE.\par {\b Command Line Syntax:} {\line\f1 msival2 \{database\} \{CUB file\} [-f] [-l \{logfile\}] [-i \{ICE Id\}[:\{ICE Id\}...]]} \line \line The following case-insensitive command line options are supported (slash delimiter may also be used). {\line\f1\b  -F   }  Filter out informational messages from the displayed results. {\line\f1\b  -I   }  Run only the selected ICE(s).  {\line\f1\b  -L   }  Write results to the specified file.  {\b Remarks:}\line If the {\b -I(i)} option is used, the tool will run only the listed ICE validators, in the order specified.  Each ICE should be specified as it is listed in the CustomAction table of the CUB file. If the {\b -I(i)} option  is omitted, the tool runs the default set of ICEs defined by the author of the CUB file. The {\b -F} option will not display or log any ICE INFO messages. All other types of messages will be displayed. The file specified with the {\b -L} must not exist. If it does, it will not be overwritten. The {\b -F} option  will filter messages sent to the log as well. The results will still be visible on the screen. \page #{\footnote MsiMerge_Tool} ${\footnote MsiMerg Tool} K{\footnote MsiMerge; MsiMerg} +{\footnote Tool:MsiMerge} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b MSIMERG.EXE Tool to Merge a database into another \par}\li180 The {\i\b MSIMERG.EXE} tool can merge a database into another.  If MergeConflicts are reported, information  is placed in the _MergeErrors table.  Note, the _MergeErrors table may not always be created depending  on the error that occured (an error not related to the actual merge of the data).  It utilizes the external API,  in particular, MsiDatabaseMerge.  \par {\b Command Line Syntax} \line {\f1 msimerg \{base db\} \{ref db\}}\line \page #{\footnote MsiZap_Tool} ${\footnote MsiZap Tool} K{\footnote MsiZap} +{\footnote Tool:MsiZap} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b MSIZAP.EXE Tool to clean up Windows Installer information if a failure has occurred. \par}\li180 The {\i\b MSIZAP.EXE} tool can clean up Windows Installer information for a product or all products installed  on a machine  \par {\b Command Line Syntax} \line {\f1 msizap T[A!] \{product code\} }\line {\f1 msizap T[A!] <msi package>} \line {\f1 msizap *[A!] ALLPRODUCTS} \line {\f1 msizap PSA?!} \line \line {\b Option explanations} \line {\f1\b *} remove all Windows Installer folders and regkeys; adjust shared DLL counts; stop Windows Installer service \line {\f1\b T} remove all info for given product code \line {\f1\b P} remove In-Progress key \line {\f1\b S} remove Rollback Information \line {\f1\b A} for any specified removal, just change ACLs to Admin Full Control \line {\f1\b ?} verbose help \line {\f1\b !} force 'yes' response to any prompt \line {\b Remarks:}\line When using the T option with the Product Code, include the curly braces around the Product Code.\line \line {\b CAUTION: Products installed by the Windows Installer may fail to function after using MsiZap.} \page #{\footnote MsiTool_Mak} ${\footnote MsiTool Mak} K{\footnote makefile} +{\footnote Tool:Makefile} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b Makefile for Building Tools and Custom Actions \par}\li180 MSITOOL.MAK is a makefile that can be used to make tools and custom actions, using VC4.x or VC5.  See header of that file for documentation. It requires a set of values to be defined before  including this file. Typically we put those at the start of the CPP, ifdef'd to be skipped by the  C compiler. Likewise resources are added to the end of the CPP file. See samples for details.\line VCBIN may be defined to the directory where the VC tools are found, else the makefile uses MSVCDIR and MSDEVDIR,  and if those aren't defined, it does not specify a location, assuming the tools to be on the PATH.  A problem with the environment variables in VC5 is that if both are NOT on you path, the linker  can't find MSDIS100.DLL. If you copy that from MSDEVDIR to MSVCDIR, it works OK.  The other thing that you can do is to copy MSDIS100.DLL and RC.EXE and RCDLL.DLL to MSVCDIR, and set VCBIN to that. \page #{\footnote Msispy_Tool} ${\footnote Msispy User Interface} K{\footnote Msispy: } +{\footnote Tool:Msispy} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b MsiSpy: A Tool to Display Component-Level View of A System \par}\li180 \line {\i\b MsiSpy} provides a component level view of the products and features installed on a system,  using either an MSI Package, or the registry information. Msispy also displays the status of  each, and allows you to partially or completely re-install missing or damaged items. You  can also  re-configure any product or feature, selecting the install level, and specifying whether to install  it locally or run it from a network server. Please select a topic you would like more information on:\par {\uldb Menu Options}{\v Msispy_MenuOptions}\par {\uldb Context Menus}{\v Msispy_ContextMenus}\par {\uldb Command Line Options}{\v Msispy_CommandLine}\par {\uldb Setting Preferences}{\v Msispy_Preferences}\par {\uldb Msispy Automation Interface}{\v MsispyAutoOverview}\line \page #{\footnote Msispy_MenuOptions} ${\footnote Msispy_MenuOptions} K{\footnote Msispy: Menu Options} +{\footnote Msispy_MenuOptions} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b Menu Options \par}\li180 \par\li0{\b The File Menu}\par\li500\fi-320 {\b Open MSI Package} allows you to open an MSI package.\par {\b Open Local Database} uses the registry information to display information about all the  products installed on the computer.\par {\b Load Saved State} allows you to load a profile of the system previously saved by Msispy.\par {\b Save Current State} allows you to save a complete profile of the system onto a file. The  information is stored in an easy to read text format. This information should not be modified  directly.\par {\b Restore Saved State} (enabled only when a saved state is loaded) attempts to restore the system  to the configuration in the saved state. If more components have been added since the profile was  saved, they are left untouched. If some products or components have been damaged since the profile was  saved, Msispy attempts to restore them by attempting to re-install them from the original  source. If the source is not available, you are given the option to abort, retry or ignore.\par {\b Check Differences} (enabled only when a saved state is loaded) checks the differences between the  configuration in the saved state and the current system configuration. These differences are written  to a log file in a tab-separated table in simple text format. \par\li0\line{\b The View Menu}\par\li500\fi-320 {\b Refresh} refreshes the display by getting the displayed information again and redrawing it.\par {\b Prefences} allows you to change the Msispy mode and language. For more information, refer to  {\uldb Setting Preferences}{\v Msispy_Preferences}. \par\li0\line{\b The Help Menu}\par\li500\fi-320 {\b Overview} brings up the Msispy help file\par {\b About} brings up the product information box, with information about the registered user and the  version and product ID of the installed copy of Msispy. \line \par\li0\line {\uldb Context Menus}{\v Msispy_ContextMenus}\line {\uldb Command Line Options}{\v Msispy_CommandLine}\line \page #{\footnote Msispy_ContextMenus} ${\footnote Msispy ContextMenus} K{\footnote Msispy: Context Menus} +{\footnote Msispy_ContextMenus} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b Context Menus \par}\li180 \line When a product, feature or component is selected, clicking on the right mouse-button brings up the   context menus that allow you to perform operations on the selected item. \par\li0\line{\b Properties}\par\li500\fi-320 All context menus have a {\i\b Properties} option, that brings up a property sheet containing information  about the selected item. In addition to the {\b General} tab that contains the information, the property  sheets also contain a {\b File List} tab, that contains information about all the files needed by the  selected item. The list of files contains information about the file including the component that uses it,  the file name and size when it was installed, the location of the file. In this tab, the {\b Verify Files}  button allows you to check the current status of the files. This button brings up a window with the current  file information, including current size, creation, last access and modification dates. If the file is not  found, or if the file size is different, the file is marked broken with an icon to the its left.\par {\b Important:} If a saved state is in use, the verify files brings up information about the files {\i when the  state was saved, not the current file information}. \par\li0\line Additional context-menu choices cary depending on the item selected: \par\li0\line{\b Components}\par\li500\fi-320 The menu comprises:\par {\b Re-install Component} (enabled only if the component is broken), which allows you to re-install  the component from it's original install source. \par\li0\line{\b Installed Products (and their Features)}\par\li500\fi-320 The menu comprises:\par {\b Re-install}, which allows you to use one of the available re-install modes, including  options to re-install just the damaged or missing files. Other options allow you to force all  the files to be re-installed, the registry entries to be verified, and so on.\par {\b Configure}, which allows you to install the feature on your local machine, or run it  from a remote source. Some features may have components that need to be installed on the local  machine. Attempting to install such features to run from a remote location will lead to a mix  of some components being on the local system and the rest at the remote location.\par {\b Un-install}, which allows you to un-install the product or feature. If a feature with  sub-features is un-installed, all of its sub-features will be un-installed as well. If the last  installed feature in a product is un-installed, the entire product will be un-installed. \par\li0\line{\b Other Products (and their Features)}\par\li500\fi-320 If an MSI package for a product not installed on the local system  is in use,  the context menu has the following options:\par {\b Install Product}, which will install the product on the local system using the default options.\par {\b Advertise Product}, which will advertise the product on to the local system. This will  set all the registry entries needed for the product, but will not actually install any files  on the local system. The files will be transferred in when the component they belong to is used. \par\li0\line{\b Products in Saved States (and their Features)}\par\li500\fi-320 If a saved state is loaded, the menu always comprises:\par {\b Restore Saved State}, which has the same functionality as {\b Restore Saved State} described under   {\uldb Menu Options}{\v Msispy_MenuOptions}. \line \par\li0\line {\uldb Menu Options}{\v Msispy_MenuOptions}\line {\uldb Command Line Options}{\v Msispy_CommandLine}\line \page #{\footnote Msispy_CommandLine} ${\footnote Msispy_CommandLine} K{\footnote Msispy: Command Line Options} +{\footnote Msispy_CommandLine} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b Msispy Command Line Options \par}\li180 \par\li0\line{\b msispy [filename|/options filename(s)]}\par\li500\fi-320 \par\li180{\b /d\i<srcprof.msp> <destfile.log>}\par\li500\fi-320 Saves the differences between the current system configuration and the profile {\i <srcprof.msp>} into  {\i <destfile.log>} in a tab-separated table form. \par\li180{\b /s\i<destprof.msp>}\par\li500\fi-320 Saves the current system configuration to the profile {\i <destprof.msp>} \par\li180{\b /r\i<srcprof.msp>}\par\li500\fi-320 Restores the current system to the configuration in the profile {\i <srcprof.msp>} \par\li180{\b\i <srcprof.msp>}\par\li500\fi-320 Launches GUI version and loads the profile {\i <srcprof.msp>} \par\li180{\b\i without any command-line option}\par\li500\fi-320 Launches GUI version\line \par\li0\line {\uldb Menu Options}{\v Msispy_MenuOptions}\line {\uldb Context Menus}{\v Msispy_ContextMenus}\line \page #{\footnote Msispy_Preferences} ${\footnote Msispy Preferences} K{\footnote Msispy: Preferences, Setting} +{\footnote Msispy_Preferences} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b Setting Preferences \par}\li180 \line Msispy can be used in different modes, and in different languages. You can set your preferences  by selecting "Preferences" under the View Menu. \par\li0{\b Modes}\par\li180 Msispy can be used in the following modes:\line {\b Normal}: This is the default Msispy mode. In this mode, Msispy determines the status of a  component solely on the basis of the component key-file. This makes Msispy much faster, and in  most cases will present an accurate picture of the component status. All the features of Msispy  are available in this mode.\line {\b Diagnostic}: In this mode, Msispy will perform a complete check of all files to determine  component status, instead of relying on component key files. This mode will give a more accurate  picture of the component status, but will make the program significantly slower.  Msispy should not normally be used in this mode, especially if it is being used on a slow machine.\line {\b Restricted}: In this mode, the functionality of Msispy is limited to the Local Database only.  You will not be able to access MSI Packages or Msispy Saved States. Leads to a slight performance  gain. This mode is recommended if you are on slow machines and do not wish to take advantage of  all the Msispy features.\par If Msispy is unable to load the system interface DLL (default name msispyu.dll), it will start up in  the restricted mode. You will not be able to switch to any other mode, since the other modes need  the system interface DLL to function. To restore Msispy to it's full functionality, you may need to  perform a re-install from the original install source.\line \par\li0{\b Languages}\par\li180 Msispy can be used in many languages if the Msispy language support components are installed. A list  of all supported languages appears in the "Language" tab of the preferences property sheet. To  select a different language, click on the new language, and select OK. Msispy will switch to the  new language automatically, if the language resources for the new language can be loaded. If the  new language cannot be loaded, Msispy will load the closest match if available. If there is no  similar language available, default language will be loaded.\par \page #{\footnote MsispyAutoOverview} ${\footnote Msispy Automation Overview} K{\footnote Msispy Automation: } \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b Msispy Automation Interface \par}{\b Access to C++ Libraries}\par\li180 An {\uldb Msispy object}{\v HELPID_Msispy} must be initially created in order to load   the automation support that is required in order to access the {\uldb Msispy objects}{\v Msispy_Objects}  through OLE automation. This object provides wrappers to create the top level  objects and access their methods. These wrapper simply provide argument  translations to expose the Msispy functions in a manner consistent with BASIC  without changing the behavior of the methods. When possible, a pair of Get and  Set C++ methods will be exposed to BASIC as a single property. Where  appropriate, C++ methods taking an index argument will be exposed as an indexed  property. Many C++ methods return the result through an argument, as the return  value is used for the error return; however in BASIC errors are handled by  a separate mechanism, and the result is always passed in the return value. \par\fi0\li0{\b Creating the Msispy object}\par\li180 In order for OLE to access the automation, the DLL must be registered. This can  be done in one of two ways- (a) by installing Msispy on your system using MSI, or  (b) self-registering the DLL. The OLE ProgId used to create the Msispy object is  {\b Msispy.Automation}. \page #{\footnote Msispy_Objects} ${\footnote Msispy Objects} K{\footnote Msispy Automation:Objects} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b Msispy Automation Objects \par}\li180 {\uldb Msispy object}{\v HELPID_Msispy}\line {\uldb MsispyDatabase object}{\v HELPID_MsispyDatabase}\line {\uldb MsispyProfile object}{\v HELPID_MsispyProfile}\line {\uldb MsispyRegistry object}{\v HELPID_MsispyRegistry}\line \page #{\footnote HELPID_Msispy} ${\footnote Msispy Object} K{\footnote Msispy Automation: Objects} +{\footnote Class:Msispy} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b Msispy Object \par}\li180 An Msispy object must be initially created in order to load the automation  support that is required in order to access the Msispy automation functions through OLE automation. This object provides wrappers to create the top level  objects and access their methods. \par\li0{\b Methods}\par\li180 {\uldb CreateDatabase}{\v HELPID_Msispy_CreateDatabase}\line {\uldb CreateProfile}{\v HELPID_Msispy_CreateProfile}\line {\uldb CreateRegistry}{\v HELPID_Msispy_CreateRegistry}\line \page #{\footnote HELPID_Msispy_CreateDatabase} ${\footnote Msispy.CreateDatabase} +{\footnote Msispy:CreateDatabase} K{\footnote Msispy Automation: CreateDatabase} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b CreateDatabase Method \line\tx360\tab\fs18\b0{\uldb Msispy Object}{\v HELPID_Msispy} \tx3000\tab{\uldb Msispy Objects}{\v Msispy_Objects} \par}\li180 Returns a new {\uldb MsispyDatabase object}{\v HELPID_MsispyDatabase}. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .CreateDatabase()} \par{\i object}\line Required. The Msispy object. \page #{\footnote HELPID_Msispy_CreateProfile} ${\footnote Msispy.CreateProfile} +{\footnote Msispy:CreateProfile} K{\footnote Msispy Automation: CreateProfile} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b CreateProfile Method \line\tx360\tab\fs18\b0{\uldb Msispy Object}{\v HELPID_Msispy} \tx3000\tab{\uldb Msispy Objects}{\v Msispy_Objects} \par}\li180 Returns a new {\uldb MsispyProfile object}{\v HELPID_MsispyProfile}. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .CreateProfile()} \par{\i object}\line Required. The Msispy object. \page #{\footnote HELPID_Msispy_CreateRegistry} ${\footnote Msispy.CreateDatabase} +{\footnote Msispy:CreateDatabase} K{\footnote Msispy Automation: CreateRegistry} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b CreateRegistry Method \line\tx360\tab\fs18\b0{\uldb Msispy Object}{\v HELPID_Msispy} \tx3000\tab{\uldb Msispy Objects}{\v Msispy_Objects} \par}\li180 Returns a new {\uldb MsispyRegistry object}{\v HELPID_MsispyRegistry}. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .CreateRegistry()} \par{\i object}\line Required. The Msispy object. \page #{\footnote HELPID_MsispyDatabase} ${\footnote MsispyDatabase Object} K{\footnote Msispy Automation: MsispyDatabase Object} +{\footnote Class:MsispyDatabase} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b MsispyDatabase Object \line\fs18\b0\tx3000\tab{\uldb Msispy Objects}{\v Msispy_Objects} \par}\li180 The database object accesses a Microsoft Installer database.\par Before the MsispyDatabase object is released (by going out of scope or by setting the  object variable to Nothing), the {\uldb Close}{\v HELPID_MsispyDatabase_Close} method  must be called to release all handles. \par\li0{\b Properties}\par\li180 {\uldb GetProduct}{\v HELPID_MsispyDatabase_GetProduct}\line {\uldb GetFeatureFromProduct}{\v HELPID_MsispyDatabase_GetFeatureFromProduct}\line {\uldb GetProduct}{\v HELPID_MsispyDatabase_GetProduct}\line {\uldb GetFeatureFromProduct}{\v HELPID_MsispyDatabase_GetFeatureFromProduct}\line {\uldb GetComponent}{\v HELPID_MsispyDatabase_GetComponent}\line {\uldb GetComponentFromProduct}{\v HELPID_MsispyDatabase_GetComponentFromProduct}\line {\uldb GetComponentFromFeature}{\v HELPID_MsispyDatabase_GetComponentFromFeature}\line {\uldb GetComponentName}{\v HELPID_MsispyDatabase_GetComponentName}\line {\uldb GetProductInfo}{\v HELPID_MsispyDatabase_GetProductInfo}\line {\uldb GetFeatureInfo}{\v HELPID_MsispyDatabase_GetFeatureInfo}\line {\uldb QueryProductState}{\v HELPID_MsispyDatabase_QueryProductState}\line {\uldb QueryFeatureState}{\v HELPID_MsispyDatabase_QueryFeatureState}\line {\uldb QueryComponentState}{\v HELPID_MsispyDatabase_QueryComponentState}\line {\uldb GetFeatureUsage}{\v HELPID_MsispyDatabase_GetFeatureUsage}\line {\uldb GetClientFromComponent}{\v HELPID_MsispyDatabase_GetClientFromComponent}\line {\uldb GetFileFromComponent}{\v HELPID_MsispyDatabase_GetFileFromComponent}\line {\uldb GetFileInfo}{\v HELPID_MsispyDatabase_GetFileInfo}\line {\uldb GetComponentLocation}{\v HELPID_MsispyDatabase_GetComponentLocation}\line {\uldb GetComponentPath}{\v HELPID_MsispyDatabase_GetComponentPath}\line \par\li0{\b Methods}\par\li180 {\uldb Open}{\v HELPID_MsispyDatabase_Open}\line {\uldb Close}{\v HELPID_MsispyDatabase_Close}\line \page #{\footnote HELPID_MsispyDatabase_Open} ${\footnote MsispyDatabase.Open} +{\footnote MsispyDatabase.Open} K{\footnote Msispy Automation: Open} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b Open Method \line\tx360\tab\fs18\b0{\uldb MsispyDatabase Object}{\v HELPID_MsispyDatabase} \tx3000\tab{\uldb Msispy Objects}{\v Msispy_Objects} \par}\li180 Opens a database at the location specified. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .Open({\i databasePath})} \par{\i object}\line Required. The MsispyDatabase object. \par{\i\b databasePath}\line Required. The location of the database. \page #{\footnote HELPID_MsispyDatabase_Close} ${\footnote MsispyDatabase.Close} +{\footnote MsispyDatabase.Close} K{\footnote Msispy Automation: Close} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b Close Method \line\tx360\tab\fs18\b0{\uldb MsispyDatabase Object}{\v HELPID_MsispyDatabase} \tx3000\tab{\uldb Msispy Objects}{\v Msispy_Objects} \par}\li180 Closes a database, releasing the database handles. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .Close()} \par{\i object}\line Required. The MsispyDatabase object. \page #{\footnote HELPID_MsispyDatabase_GetProduct} ${\footnote MsispyDatabase.GetProduct} +{\footnote MsispyDatabase:GetProduct} K{\footnote Msispy Automation: GetProduct} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b GetProduct Property \line\tx360\tab\fs18\b0{\uldb MsispyDatabase Object}{\v HELPID_MsispyDatabase} \tx3000\tab{\uldb Msispy Objects}{\v Msispy_Objects} \par}\li180 Returns a string containing the product-code of a product in the database, or  a blank string if all the products in the database have been enumerated.  A 0-based index is used to enumerate the products one at a time. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .GetProduct({\i productIndex})} \par{\i object}\line Required. The MsispyDatabase object. \par{\i\b productIndex}\line Required. The 0-based index used for enumeration. \page #{\footnote HELPID_MsispyDatabase_GetFeatureFromProduct} ${\footnote MsispyDatabase.GetFeatureFromProduct} +{\footnote MsispyDatabase:GetFeatureFromProduct} K{\footnote Msispy Automation: GetFeatureFromProduct} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b GetFeatureFromProduct Property \line\tx360\tab\fs18\b0{\uldb MsispyDatabase Object}{\v HELPID_MsispyDatabase} \tx3000\tab{\uldb Msispy Objects}{\v Msispy_Objects} \par}\li180 Returns a string containing the name of a feature of the product, or a blank string   if all the features of the product have been enumerated. A 0-based index is used  to enumerate the features one at a time. The product being used must be in the  database, otherwise no features are enumerated. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .GetFeatureFromProduct({\i productCode, featureIndex})} \par{\i object}\line Required. The MsispyDatabase object. \par{\i\b productCode}\line Required. The product whose features are to be enumerated, must be in the database. \par{\i\b featureIndex}\line Required. The 0-based index used for enumeration. \page #{\footnote HELPID_MsispyDatabase_GetComponent} ${\footnote MsispyDatabase.GetComponent} +{\footnote MsispyDatabase:GetComponent} K{\footnote Msispy Automation: GetComponent} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b GetComponent Property \line\tx360\tab\fs18\b0{\uldb MsispyDatabase Object}{\v HELPID_MsispyDatabase} \tx3000\tab{\uldb Msispy Objects}{\v Msispy_Objects} \par}\li180 Returns a string containing the GUID of a component in the database, or  a blank string if all the components in the database have been enumerated.  A 0-based index is used to enumerate the components one at a time. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .GetComponent({\i componentIndex})} \par{\i object}\line Required. The MsispyDatabase object. \par{\i\b componentIndex}\line Required. The 0-based index used for enumeration. \page #{\footnote HELPID_MsispyDatabase_GetComponentFromProduct} ${\footnote MsispyDatabase.GetComponentFromProduct} +{\footnote MsispyDatabase:GetComponentFromProduct} K{\footnote Msispy Automation: GetComponentFromProduct} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b GetComponentFromProduct Property \line\tx360\tab\fs18\b0{\uldb MsispyDatabase Object}{\v HELPID_MsispyDatabase} \tx3000\tab{\uldb Msispy Objects}{\v Msispy_Objects} \par}\li180 Returns a string containing the GUID of a component of the product, or a blank string   if all the components of the product have been enumerated. A 0-based index is used  to enumerate the components one at a time. The product being used must be in the  database, otherwise no components are enumerated. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .GetComponentFromProduct({\i productCode, componentIndex})} \par{\i object}\line Required. The MsispyDatabase object. \par{\i\b productCode}\line Required. The product whose components are to be enumerated, must be in the database. \par{\i\b componentIndex}\line Required. The 0-based index used for enumeration. \page #{\footnote HELPID_MsispyDatabase_GetComponentFromFeature} ${\footnote MsispyDatabase.GetComponentFromFeature} +{\footnote MsispyDatabase:GetComponentFromFeature} K{\footnote Msispy Automation: GetComponentFromFeature} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b GetComponentFromFeature Property \line\tx360\tab\fs18\b0{\uldb MsispyDatabase Object}{\v HELPID_MsispyDatabase} \tx3000\tab{\uldb Msispy Objects}{\v Msispy_Objects} \par}\li180 Returns a string containing the GUID of a component of the feature, or a blank string   if all the components of the feature have been enumerated. A 0-based index is used  to enumerate the components one at a time. The product in use must be in the  database, otherwise no components are enumerated. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .GetComponentFromFeature({\i productCode, featureName, componentIndex})} \par{\i object}\line Required. The MsispyDatabase object. \par{\i\b productCode}\line Required. The product in use, must be in the database. \par{\i\b featureName}\line Required. The feature whose components are to be enumerated. \par{\i\b componentIndex}\line Required. The 0-based index used for enumeration. \page #{\footnote HELPID_MsispyDatabase_GetComponentName} ${\footnote MsispyDatabase.GetComponentName} +{\footnote MsispyDatabase:GetComponentName} K{\footnote Msispy Automation: GetComponentName} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b GetComponentName Property \line\tx360\tab\fs18\b0{\uldb MsispyDatabase Object}{\v HELPID_MsispyDatabase} \tx3000\tab{\uldb Msispy Objects}{\v Msispy_Objects} \par}\li180 Returns a string containing the name of a component whose GUID is passed in, or  a blank string if the required information could not be found. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .GetComponentName({\i componentGuid})} \par{\i object}\line Required. The MsispyDatabase object. \par{\i\b componentGuid}\line Required. The component whose name will be returned. \page #{\footnote HELPID_MsispyDatabase_GetProductInfo} ${\footnote MsispyDatabase.GetProductInfo} +{\footnote MsispyDatabase:GetProductInfo} K{\footnote Msispy Automation: GetProductInfo} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b GetProductInfo Property \line\tx360\tab\fs18\b0{\uldb MsispyDatabase Object}{\v HELPID_MsispyDatabase} \tx3000\tab{\uldb Msispy Objects}{\v Msispy_Objects} \par}\li180 Returns a string containing a specific property of a product, or  a blank string if the required information could not be found. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .GetProductInfo({\i productCode, productAttribute})} \par{\i object}\line Required. The MsispyDatabase object. \par{\i\b productCode}\line Required. The product about which information will be returned. \par{\i\b productAttribute}\line Required. The required property of the product (case-sensitive). Valid attributes are:\line \tab ProductName\line \tab ProductVersion\line \tab ProductCode\line \tab Manufacturer\line \tab SupportURL\line \tab SupportPhone\line \tab UserName\line \tab UserOrgName\line \tab ProductId\line \page #{\footnote HELPID_MsispyDatabase_GetFeatureInfo} ${\footnote MsispyDatabase.GetFeatureInfo} +{\footnote MsispyDatabase:GetFeatureInfo} K{\footnote Msispy Automation: GetFeatureInfo} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b GetFeatureInfo Property \line\tx360\tab\fs18\b0{\uldb MsispyDatabase Object}{\v HELPID_MsispyDatabase} \tx3000\tab{\uldb Msispy Objects}{\v Msispy_Objects} \par}\li180 Returns a string containing a specific property of a feature, or  a blank string if the required information could not be found. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .GetFeatureInfo({\i productCode, featureName, featureAttribute})} \par{\i object}\line Required. The MsispyDatabase object. \par{\i\b productCode}\line Required. The product to which the feature belongs. \par{\i\b featureName}\line Required. The feature about which information will be returned. \par{\i\b featureAttribute}\line Required. The required property of the feature (case-sensitive). Valid attributes are:\line \tab Feature\line \tab Feature_Parent\line \tab Title\line \tab Description\line \tab Display\line \tab Level\line \tab Directory_Configurable\line \tab RunFromSource\line \page #{\footnote HELPID_MsispyDatabase_QueryProductState} ${\footnote MsispyDatabase.QueryProductState} +{\footnote MsispyDatabase:QueryProductState} K{\footnote Msispy Automation: QueryProductState} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b QueryProductState Property \line\tx360\tab\fs18\b0{\uldb MsispyDatabase Object}{\v HELPID_MsispyDatabase} \tx3000\tab{\uldb Msispy Objects}{\v Msispy_Objects} \par}\li180 Returns a numeric value that represents the install-state of a product on the  local system. The value returned is one of the following:\line \tab -6: configuration data corrupt\line \tab -5: installation suspended or in progress\line \tab -4: run from source, source is unavailable\line \tab -3: return buffer overflow\line \tab -2: invalid function argument\line \tab -1: unrecognized product or feature\line \tab  0: broken\line \tab  1: advertised\line \tab  2: uninstalled\line \tab  3: installed on local drive\line \tab  4: run from source, CD or net\line \tab  5: use default, local or source\line \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .QueryProductState({\i productCode})} \par{\i object}\line Required. The MsispyDatabase object. \par{\i\b productCode}\line Required. The product about which information will be returned. \page #{\footnote HELPID_MsispyDatabase_QueryFeatureState} ${\footnote MsispyDatabase.QueryFeatureState} +{\footnote MsispyDatabase:QueryFeatureState} K{\footnote Msispy Automation: QueryFeatureState} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b QueryFeatureState Property \line\tx360\tab\fs18\b0{\uldb MsispyDatabase Object}{\v HELPID_MsispyDatabase} \tx3000\tab{\uldb Msispy Objects}{\v Msispy_Objects} \par}\li180 Returns a numeric value that represents the install-state of a feature on the  local system. The value returned is one of the following:\line \tab -6: configuration data corrupt\line \tab -5: installation suspended or in progress\line \tab -4: run from source, source is unavailable\line \tab -3: return buffer overflow\line \tab -2: invalid function argument\line \tab -1: unrecognized product or feature\line \tab  0: broken\line \tab  1: advertised\line \tab  2: uninstalled\line \tab  3: installed on local drive\line \tab  4: run from source, CD or net\line \tab  5: use default, local or source\line \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .QueryFeatureState({\i productCode, featureName})} \par{\i object}\line Required. The MsispyDatabase object. \par{\i\b productCode}\line Required. The product to which the feature belongs. \par{\i\b featureName}\line Required. The feature about which information will be returned. \page #{\footnote HELPID_MsispyDatabase_QueryComponentState} ${\footnote MsispyDatabase.QueryComponentState} +{\footnote MsispyDatabase:QueryComponentState} K{\footnote Msispy Automation: QueryComponentState} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b QueryComponentState Property \line\tx360\tab\fs18\b0{\uldb MsispyDatabase Object}{\v HELPID_MsispyDatabase} \tx3000\tab{\uldb Msispy Objects}{\v Msispy_Objects} \par}\li180 Returns a numeric value that represents the install-state of a component on the  local system. The value returned is one of the following:\line \tab -6: configuration data corrupt\line \tab -5: installation suspended or in progress\line \tab -4: run from source, source is unavailable\line \tab -3: return buffer overflow\line \tab -2: invalid function argument\line \tab -1: unrecognized product or feature\line \tab  0: broken\line \tab  1: advertised\line \tab  2: uninstalled\line \tab  3: installed on local drive\line \tab  4: run from source, CD or net\line \tab  5: use default, local or source\line \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .QueryComponentState({\i productCode, componentGuid})} \par{\i object}\line Required. The MsispyDatabase object. \par{\i\b productCode}\line Required. The product to which the component belongs. \par{\i\b componentGuid}\line Required. The component about which information will be returned. \page #{\footnote HELPID_MsispyDatabase_GetFeatureUsage} ${\footnote MsispyDatabase.GetFeatureUsage} +{\footnote MsispyDatabase:GetFeatureUsage} K{\footnote Msispy Automation: GetFeatureUsage} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b GetFeatureUsage Property \line\tx360\tab\fs18\b0{\uldb MsispyDatabase Object}{\v HELPID_MsispyDatabase} \tx3000\tab{\uldb Msispy Objects}{\v Msispy_Objects} \par}\li180 Returns the usage-count of a feature on the local system. Returns 0 if the  information could not be obtained. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .GetFeatureUsage({\i productCode, featureName})} \par{\i object}\line Required. The MsispyDatabase object. \par{\i\b productCode}\line Required. The product to which the feature belongs. \par{\i\b featureName}\line Required. The feature about which information will be returned. \page #{\footnote HELPID_MsispyDatabase_GetClientFromComponent} ${\footnote MsispyDatabase.GetClientFromComponent} +{\footnote MsispyDatabase:GetClientFromComponent} K{\footnote Msispy Automation: GetClientFromComponent} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b GetClientFromComponent Property \line\tx360\tab\fs18\b0{\uldb MsispyDatabase Object}{\v HELPID_MsispyDatabase} \tx3000\tab{\uldb Msispy Objects}{\v Msispy_Objects} \par}\li180 Returns a string containing product-code of a client-product of the component, or a blank   string if all the clients of the component have been enumerated. A 0-based index is used  to enumerate the clients one at a time. The component being used must be in the  database, otherwise no clients are enumerated. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .GetClientFromComponent({\i componentGuid, clientIndex})} \par{\i object}\line Required. The MsispyDatabase object. \par{\i\b componentGuid}\line Required. The component whose clients are to be enumerated, must be in the database. \par{\i\b clientIndex}\line Required. The 0-based index used for enumeration. \page #{\footnote HELPID_MsispyDatabase_GetFileFromComponent} ${\footnote MsispyDatabase.GetFileFromComponent} +{\footnote MsispyDatabase:GetFileFromComponent} K{\footnote Msispy Automation: GetFileFromComponent} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b GetFileFromComponent Property \line\tx360\tab\fs18\b0{\uldb MsispyDatabase Object}{\v HELPID_MsispyDatabase} \tx3000\tab{\uldb Msispy Objects}{\v Msispy_Objects} \par}\li180 Returns a string containing the name of a file used by the component, or a blank   string if all the files of the component have been enumerated. A 0-based index is used  to enumerate the files one at a time. The component being used must be in the  database, otherwise no files are enumerated. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .GetFileFromComponent({\i componentGuid, fileIndex})} \par{\i object}\line Required. The MsispyDatabase object. \par{\i\b componentGuid}\line Required. The component whose files are to be enumerated, must be in the database. \par{\i\b fileIndex}\line Required. The 0-based index used for enumeration. \page #{\footnote HELPID_MsispyDatabase_GetFileInfo} ${\footnote MsispyDatabase.GetFileInfo} +{\footnote MsispyDatabase:GetFileInfo} K{\footnote Msispy Automation: GetFileInfo} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b GetFileInfo Property \line\tx360\tab\fs18\b0{\uldb MsispyDatabase Object}{\v HELPID_MsispyDatabase} \tx3000\tab{\uldb Msispy Objects}{\v Msispy_Objects} \par}\li180 Returns a string containing a specific property of a file, or  a blank string if the required information could not be found. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .GetFileInfo({\i productCode, componentGuid, fileName, fileAttribute})} \par{\i object}\line Required. The MsispyDatabase object. \par{\i\b productCode}\line Required. The product to which the component belongs. \par{\i\b componentGuid}\line Required. The component to which the file belongs. \par{\i\b fileName}\line Required. The file about which information will be returned. \par{\i\b fileAttribute}\line Required. The required property of the file (case-sensitive). Valid attributes are:\line \tab FileTitle\line \tab FileSize\line \tab Version\line \tab Language\line \tab Attributes\line \tab Sequence\line \tab FileActualSize\line \tab FileCreated\line \tab FileModified\line \tab FileAccessed\line \tab FileStatus\line \page #{\footnote HELPID_MsispyDatabase_GetComponentLocation} ${\footnote MsispyDatabase.GetComponentLocation} +{\footnote MsispyDatabase:GetComponentLocation} K{\footnote Msispy Automation: GetComponentLocation} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b GetComponentLocation Property \line\tx360\tab\fs18\b0{\uldb MsispyDatabase Object}{\v HELPID_MsispyDatabase} \tx3000\tab{\uldb Msispy Objects}{\v Msispy_Objects} \par}\li180 Returns a string containing the full path to the keyfile of a component. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .GetComponentLocation({\i componentGuid})} \par{\i object}\line Required. The MsispyDatabase object. \par{\i\b componentGuid}\line Required. The component about which information will be returned. \page #{\footnote HELPID_MsispyDatabase_GetComponentPath} ${\footnote MsispyDatabase.GetComponentPath} +{\footnote MsispyDatabase:GetComponentPath} K{\footnote Msispy Automation: GetComponentPath} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b GetComponentPath Property \line\tx360\tab\fs18\b0{\uldb MsispyDatabase Object}{\v HELPID_MsispyDatabase} \tx3000\tab{\uldb Msispy Objects}{\v Msispy_Objects} \par}\li180 Returns a string containing the full path to the keyfile of a component. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .GetComponentPath({\i productCode, componentGuid})} \par{\i object}\line Required. The MsispyDatabase object. \par{\i\b productCode}\line Required. The product to which the component belongs. \par{\i\b componentGuid}\line Required. The component about which information will be returned. \page #{\footnote HELPID_MsispyProfile} ${\footnote MsispyProfile Object} K{\footnote Msispy Automation: MsispyProfile Object} +{\footnote Class:MsispyProfile} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b MsispyProfile Object \line\fs18\b0\tx3000\tab{\uldb Msispy Objects}{\v Msispy_Objects} \par}\li180 The profile object accesses a Msispy profile.\par Before the MsispyProfile object is released (by going out of scope or by setting the  object variable to Nothing), the {\uldb Close}{\v HELPID_MsispyProfile_Close} method  must be called to release all handles. \par\li0{\b Properties}\par\li180 {\uldb GetProduct}{\v HELPID_MsispyProfile_GetProduct}\line {\uldb GetFeatureFromProduct}{\v HELPID_MsispyProfile_GetFeatureFromProduct}\line {\uldb GetProduct}{\v HELPID_MsispyProfile_GetProduct}\line {\uldb GetFeatureFromProduct}{\v HELPID_MsispyProfile_GetFeatureFromProduct}\line {\uldb GetComponent}{\v HELPID_MsispyProfile_GetComponent}\line {\uldb GetComponentFromProduct}{\v HELPID_MsispyProfile_GetComponentFromProduct}\line {\uldb GetComponentFromFeature}{\v HELPID_MsispyProfile_GetComponentFromFeature}\line {\uldb GetComponentName}{\v HELPID_MsispyProfile_GetComponentName}\line {\uldb GetProductInfo}{\v HELPID_MsispyProfile_GetProductInfo}\line {\uldb GetFeatureInfo}{\v HELPID_MsispyProfile_GetFeatureInfo}\line {\uldb QueryProductState}{\v HELPID_MsispyProfile_QueryProductState}\line {\uldb QueryFeatureState}{\v HELPID_MsispyProfile_QueryFeatureState}\line {\uldb QueryComponentState}{\v HELPID_MsispyProfile_QueryComponentState}\line {\uldb GetFeatureUsage}{\v HELPID_MsispyProfile_GetFeatureUsage}\line {\uldb GetClientFromComponent}{\v HELPID_MsispyProfile_GetClientFromComponent}\line {\uldb GetFileFromComponent}{\v HELPID_MsispyProfile_GetFileFromComponent}\line {\uldb GetFileInfo}{\v HELPID_MsispyProfile_GetFileInfo}\line {\uldb GetComponentLocation}{\v HELPID_MsispyProfile_GetComponentLocation}\line {\uldb GetComponentPath}{\v HELPID_MsispyProfile_GetComponentPath}\line \par\li0{\b Methods}\par\li180 {\uldb Open}{\v HELPID_MsispyProfile_Open}\line {\uldb Close}{\v HELPID_MsispyProfile_Close}\line \page #{\footnote HELPID_MsispyProfile_Open} ${\footnote MsispyProfile.Open} +{\footnote MsispyProfile.Open} K{\footnote Msispy Automation: Open} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b Open Method \line\tx360\tab\fs18\b0{\uldb MsispyProfile Object}{\v HELPID_MsispyProfile} \tx3000\tab{\uldb Msispy Objects}{\v Msispy_Objects} \par}\li180 Opens a profile at the given location. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .Open({\i profilePath})} \par{\i object}\line Required. The MsispyProfile object. \par{\i\b profilePath}\line Required. The location of the profile. \page #{\footnote HELPID_MsispyProfile_Close} ${\footnote MsispyProfile.Close} +{\footnote MsispyProfile.Close} K{\footnote Msispy Automation: Close} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b Close Method \line\tx360\tab\fs18\b0{\uldb MsispyProfile Object}{\v HELPID_MsispyProfile} \tx3000\tab{\uldb Msispy Objects}{\v Msispy_Objects} \par}\li180 Closes an open profile. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .Close()} \par{\i object}\line Required. The MsispyProfile object. \page #{\footnote HELPID_MsispyProfile_GetProduct} ${\footnote MsispyProfile.GetProduct} +{\footnote MsispyProfile:GetProduct} K{\footnote Msispy Automation: GetProduct} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b GetProduct Property \line\tx360\tab\fs18\b0{\uldb MsispyProfile Object}{\v HELPID_MsispyProfile} \tx3000\tab{\uldb Msispy Objects}{\v Msispy_Objects} \par}\li180 Returns a string containing the product-code of a product in the profile, or  a blank string if all the products in the profile have been enumerated.  A 0-based index is used to enumerate the products one at a time. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .GetProduct({\i productIndex})} \par{\i object}\line Required. The MsispyProfile object. \par{\i\b productIndex}\line Required. The 0-based index used for enumeration. \page #{\footnote HELPID_MsispyProfile_GetFeatureFromProduct} ${\footnote MsispyProfile.GetFeatureFromProduct} +{\footnote MsispyProfile:GetFeatureFromProduct} K{\footnote Msispy Automation: GetFeatureFromProduct} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b GetFeatureFromProduct Property \line\tx360\tab\fs18\b0{\uldb MsispyProfile Object}{\v HELPID_MsispyProfile} \tx3000\tab{\uldb Msispy Objects}{\v Msispy_Objects} \par}\li180 Returns a string containing the name of a feature of the product, or a blank string   if all the features of the product have been enumerated. A 0-based index is used  to enumerate the features one at a time. The product being used must be in the  profile, otherwise no features are enumerated. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .GetFeatureFromProduct({\i productCode, featureIndex})} \par{\i object}\line Required. The MsispyProfile object. \par{\i\b productCode}\line Required. The product whose features are to be enumerated, must be in the profile. \par{\i\b featureIndex}\line Required. The 0-based index used for enumeration. \page #{\footnote HELPID_MsispyProfile_GetComponent} ${\footnote MsispyProfile.GetComponent} +{\footnote MsispyProfile:GetComponent} K{\footnote Msispy Automation: GetComponent} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b GetComponent Property \line\tx360\tab\fs18\b0{\uldb MsispyProfile Object}{\v HELPID_MsispyProfile} \tx3000\tab{\uldb Msispy Objects}{\v Msispy_Objects} \par}\li180 Returns a string containing the GUID of a component in the profile, or  a blank string if all the components in the profile have been enumerated.  A 0-based index is used to enumerate the components one at a time. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .GetComponent({\i componentIndex})} \par{\i object}\line Required. The MsispyProfile object. \par{\i\b componentIndex}\line Required. The 0-based index used for enumeration. \page #{\footnote HELPID_MsispyProfile_GetComponentFromProduct} ${\footnote MsispyProfile.GetComponentFromProduct} +{\footnote MsispyProfile:GetComponentFromProduct} K{\footnote Msispy Automation: GetComponentFromProduct} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b GetComponentFromProduct Property \line\tx360\tab\fs18\b0{\uldb MsispyProfile Object}{\v HELPID_MsispyProfile} \tx3000\tab{\uldb Msispy Objects}{\v Msispy_Objects} \par}\li180 Returns a string containing the GUID of a component of the product, or a blank string   if all the components of the product have been enumerated. A 0-based index is used  to enumerate the components one at a time. The product being used must be in the  profile, otherwise no components are enumerated. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .GetComponentFromProduct({\i productCode, componentIndex})} \par{\i object}\line Required. The MsispyProfile object. \par{\i\b productCode}\line Required. The product whose components are to be enumerated, must be in the profile. \par{\i\b componentIndex}\line Required. The 0-based index used for enumeration. \page #{\footnote HELPID_MsispyProfile_GetComponentFromFeature} ${\footnote MsispyProfile.GetComponentFromFeature} +{\footnote MsispyProfile:GetComponentFromFeature} K{\footnote Msispy Automation: GetComponentFromFeature} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b GetComponentFromFeature Property \line\tx360\tab\fs18\b0{\uldb MsispyProfile Object}{\v HELPID_MsispyProfile} \tx3000\tab{\uldb Msispy Objects}{\v Msispy_Objects} \par}\li180 Returns a string containing the GUID of a component of the feature, or a blank string   if all the components of the feature have been enumerated. A 0-based index is used  to enumerate the components one at a time. The product in use must be in the  profile, otherwise no components are enumerated. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .GetComponentFromFeature({\i productCode, featureName, componentIndex})} \par{\i object}\line Required. The MsispyProfile object. \par{\i\b productCode}\line Required. The product in use, must be in the profile. \par{\i\b featureName}\line Required. The feature whose components are to be enumerated. \par{\i\b componentIndex}\line Required. The 0-based index used for enumeration. \page #{\footnote HELPID_MsispyProfile_GetComponentName} ${\footnote MsispyProfile.GetComponentName} +{\footnote MsispyProfile:GetComponentName} K{\footnote Msispy Automation: GetComponentName} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b GetComponentName Property \line\tx360\tab\fs18\b0{\uldb MsispyProfile Object}{\v HELPID_MsispyProfile} \tx3000\tab{\uldb Msispy Objects}{\v Msispy_Objects} \par}\li180 Returns a string containing the name of a component whose GUID is passed in, or  a blank string if the required information could not be found. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .GetComponentName({\i componentGuid})} \par{\i object}\line Required. The MsispyProfile object. \par{\i\b componentGuid}\line Required. The component whose name will be returned. \page #{\footnote HELPID_MsispyProfile_GetProductInfo} ${\footnote MsispyProfile.GetProductInfo} +{\footnote MsispyProfile:GetProductInfo} K{\footnote Msispy Automation: GetProductInfo} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b GetProductInfo Property \line\tx360\tab\fs18\b0{\uldb MsispyProfile Object}{\v HELPID_MsispyProfile} \tx3000\tab{\uldb Msispy Objects}{\v Msispy_Objects} \par}\li180 Returns a string containing a specific property of a product, or  a blank string if the required information could not be found. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .GetProductInfo({\i productCode, productAttribute})} \par{\i object}\line Required. The MsispyProfile object. \par{\i\b productCode}\line Required. The product about which information will be returned. \par{\i\b productAttribute}\line Required. The required property of the product (case-sensitive). Valid attributes are:\line \tab ProductName\line \tab ProductVersion\line \tab ProductCode\line \tab Manufacturer\line \tab SupportURL\line \tab SupportPhone\line \tab UserName\line \tab UserOrgName\line \tab ProductId\line \page #{\footnote HELPID_MsispyProfile_GetFeatureInfo} ${\footnote MsispyProfile.GetFeatureInfo} +{\footnote MsispyProfile:GetFeatureInfo} K{\footnote Msispy Automation: GetFeatureInfo} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b GetFeatureInfo Property \line\tx360\tab\fs18\b0{\uldb MsispyProfile Object}{\v HELPID_MsispyProfile} \tx3000\tab{\uldb Msispy Objects}{\v Msispy_Objects} \par}\li180 Returns a string containing a specific property of a feature, or  a blank string if the required information could not be found. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .GetFeatureInfo({\i productCode, featureName, featureAttribute})} \par{\i object}\line Required. The MsispyProfile object. \par{\i\b productCode}\line Required. The product to which the feature belongs. \par{\i\b featureName}\line Required. The feature about which information will be returned. \par{\i\b featureAttribute}\line Required. The required property of the feature (case-sensitive). Valid attributes are:\line \tab Feature\line \tab Feature_Parent\line \tab Title\line \tab Description\line \tab Display\line \tab Level\line \tab Directory_Configurable\line \tab RunFromSource\line \page #{\footnote HELPID_MsispyProfile_QueryProductState} ${\footnote MsispyProfile.QueryProductState} +{\footnote MsispyProfile:QueryProductState} K{\footnote Msispy Automation: QueryProductState} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b QueryProductState Property \line\tx360\tab\fs18\b0{\uldb MsispyProfile Object}{\v HELPID_MsispyProfile} \tx3000\tab{\uldb Msispy Objects}{\v Msispy_Objects} \par}\li180 Returns a numeric value that represents the install-state of a product on the  local system. The value returned is one of the following:\line \tab -6: configuration data corrupt\line \tab -5: installation suspended or in progress\line \tab -4: run from source, source is unavailable\line \tab -3: return buffer overflow\line \tab -2: invalid function argument\line \tab -1: unrecognized product or feature\line \tab  0: broken\line \tab  1: advertised\line \tab  2: uninstalled\line \tab  3: installed on local drive\line \tab  4: run from source, CD or net\line \tab  5: use default, local or source\line \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .QueryProductState({\i productCode})} \par{\i object}\line Required. The MsispyProfile object. \par{\i\b productCode}\line Required. The product about which information will be returned. \page #{\footnote HELPID_MsispyProfile_QueryFeatureState} ${\footnote MsispyProfile.QueryFeatureState} +{\footnote MsispyProfile:QueryFeatureState} K{\footnote Msispy Automation: QueryFeatureState} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b QueryFeatureState Property \line\tx360\tab\fs18\b0{\uldb MsispyProfile Object}{\v HELPID_MsispyProfile} \tx3000\tab{\uldb Msispy Objects}{\v Msispy_Objects} \par}\li180 Returns a numeric value that represents the install-state of a feature on the  local system. The value returned is one of the following:\line \tab -6: configuration data corrupt\line \tab -5: installation suspended or in progress\line \tab -4: run from source, source is unavailable\line \tab -3: return buffer overflow\line \tab -2: invalid function argument\line \tab -1: unrecognized product or feature\line \tab  0: broken\line \tab  1: advertised\line \tab  2: uninstalled\line \tab  3: installed on local drive\line \tab  4: run from source, CD or net\line \tab  5: use default, local or source\line \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .QueryFeatureState({\i productCode, featureName})} \par{\i object}\line Required. The MsispyProfile object. \par{\i\b productCode}\line Required. The product to which the feature belongs. \par{\i\b featureName}\line Required. The feature about which information will be returned. \page #{\footnote HELPID_MsispyProfile_QueryComponentState} ${\footnote MsispyProfile.QueryComponentState} +{\footnote MsispyProfile:QueryComponentState} K{\footnote Msispy Automation: QueryComponentState} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b QueryComponentState Property \line\tx360\tab\fs18\b0{\uldb MsispyProfile Object}{\v HELPID_MsispyProfile} \tx3000\tab{\uldb Msispy Objects}{\v Msispy_Objects} \par}\li180 Returns a numeric value that represents the install-state of a component on the  local system. The value returned is one of the following:\line \tab -6: configuration data corrupt\line \tab -5: installation suspended or in progress\line \tab -4: run from source, source is unavailable\line \tab -3: return buffer overflow\line \tab -2: invalid function argument\line \tab -1: unrecognized product or feature\line \tab  0: broken\line \tab  1: advertised\line \tab  2: uninstalled\line \tab  3: installed on local drive\line \tab  4: run from source, CD or net\line \tab  5: use default, local or source\line \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .QueryComponentState({\i productCode, componentGuid})} \par{\i object}\line Required. The MsispyProfile object. \par{\i\b componentGuid}\line Required. The component about which information will be returned. \page #{\footnote HELPID_MsispyProfile_GetFeatureUsage} ${\footnote MsispyProfile.GetFeatureUsage} +{\footnote MsispyProfile:GetFeatureUsage} K{\footnote Msispy Automation: GetFeatureUsage} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b GetFeatureUsage Property \line\tx360\tab\fs18\b0{\uldb MsispyProfile Object}{\v HELPID_MsispyProfile} \tx3000\tab{\uldb Msispy Objects}{\v Msispy_Objects} \par}\li180 Returns the usage-count of a feature on the local system. Returns 0 if the  information could not be obtained. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .GetFeatureUsage({\i productCode, featureName})} \par{\i object}\line Required. The MsispyProfile object. \par{\i\b productCode}\line Required. The product to which the feature belongs. \par{\i\b featureName}\line Required. The feature about which information will be returned. \page #{\footnote HELPID_MsispyProfile_GetClientFromComponent} ${\footnote MsispyProfile.GetClientFromComponent} +{\footnote MsispyProfile:GetClientFromComponent} K{\footnote Msispy Automation: GetClientFromComponent} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b GetClientFromComponent Property \line\tx360\tab\fs18\b0{\uldb MsispyProfile Object}{\v HELPID_MsispyProfile} \tx3000\tab{\uldb Msispy Objects}{\v Msispy_Objects} \par}\li180 Returns a string containing product-code of a client-product of the component, or a blank   string if all the clients of the component have been enumerated. A 0-based index is used  to enumerate the clients one at a time. The component being used must be in the  profile, otherwise no clients are enumerated. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .GetClientFromComponent({\i componentGuid, clientIndex})} \par{\i object}\line Required. The MsispyProfile object. \par{\i\b componentGuid}\line Required. The component whose clients are to be enumerated, must be in the profile. \par{\i\b clientIndex}\line Required. The 0-based index used for enumeration. \page #{\footnote HELPID_MsispyProfile_GetFileFromComponent} ${\footnote MsispyProfile.GetFileFromComponent} +{\footnote MsispyProfile:GetFileFromComponent} K{\footnote Msispy Automation: GetFileFromComponent} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b GetFileFromComponent Property \line\tx360\tab\fs18\b0{\uldb MsispyProfile Object}{\v HELPID_MsispyProfile} \tx3000\tab{\uldb Msispy Objects}{\v Msispy_Objects} \par}\li180 Returns a string containing the name of a file used by the component, or a blank   string if all the files of the component have been enumerated. A 0-based index is used  to enumerate the files one at a time. The component being used must be in the  profile, otherwise no files are enumerated. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .GetFileFromComponent({\i componentGuid, fileIndex})} \par{\i object}\line Required. The MsispyProfile object. \par{\i\b componentGuid}\line Required. The component whose files are to be enumerated, must be in the profile. \par{\i\b fileIndex}\line Required. The 0-based index used for enumeration. \page #{\footnote HELPID_MsispyProfile_GetFileInfo} ${\footnote MsispyProfile.GetFileInfo} +{\footnote MsispyProfile:GetFileInfo} K{\footnote Msispy Automation: GetFileInfo} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b GetFileInfo Property \line\tx360\tab\fs18\b0{\uldb MsispyProfile Object}{\v HELPID_MsispyProfile} \tx3000\tab{\uldb Msispy Objects}{\v Msispy_Objects} \par}\li180 Returns a string containing a specific property of a file, or  a blank string if the required information could not be found. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .GetFileInfo({\i productCode, componentGuid, fileName, fileAttribute})} \par{\i object}\line Required. The MsispyProfile object. \par{\i\b productCode}\line Required. The product to which the component belongs. \par{\i\b componentGuid}\line Required. The component to which the file belongs. \par{\i\b fileName}\line Required. The file about which information will be returned. \par{\i\b fileAttribute}\line Required. The required property of the file (case-sensitive). Valid attributes are:\line \tab FileTitle\line \tab FileSize\line \tab Version\line \tab Language\line \tab Attributes\line \tab Sequence\line \tab FileActualSize\line \tab FileCreated\line \tab FileModified\line \tab FileAccessed\line \tab FileStatus\line \page #{\footnote HELPID_MsispyProfile_GetComponentLocation} ${\footnote MsispyProfile.GetComponentLocation} +{\footnote MsispyProfile:GetComponentLocation} K{\footnote Msispy Automation: GetComponentLocation} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b GetComponentLocation Property \line\tx360\tab\fs18\b0{\uldb MsispyProfile Object}{\v HELPID_MsispyProfile} \tx3000\tab{\uldb Msispy Objects}{\v Msispy_Objects} \par}\li180 Returns a string containing the full path to the keyfile of a component. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .GetComponentLocation({\i componentGuid})} \par{\i object}\line Required. The MsispyProfile object. \par{\i\b componentGuid}\line Required. The component about which information will be returned. \page #{\footnote HELPID_MsispyProfile_GetComponentPath} ${\footnote MsispyProfile.GetComponentPath} +{\footnote MsispyProfile:GetComponentPath} K{\footnote Msispy Automation: GetComponentPath} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b GetComponentPath Property \line\tx360\tab\fs18\b0{\uldb MsispyProfile Object}{\v HELPID_MsispyProfile} \tx3000\tab{\uldb Msispy Objects}{\v Msispy_Objects} \par}\li180 Returns a string containing the full path to the keyfile of a component. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .GetComponentPath({\i productCode, componentGuid})} \par{\i object}\line Required. The MsispyDatabase object. \par{\i\b productCode}\line Required. The product to which the component belongs. \par{\i\b componentGuid}\line Required. The component about which information will be returned. \page #{\footnote HELPID_MsispyRegistry} ${\footnote MsispyRegistry Object} K{\footnote Msispy Automation: MsispyRegistry Object} +{\footnote Class:MsispyRegistry} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b MsispyRegistry Object \line\fs18\b0\tx3000\tab{\uldb Msispy Objects}{\v Msispy_Objects} \par}\li180 The registry object accesses the local registry on a machine to obtain information  about products installed by MSI.\par Before the MsispyRegistry object is released (by going out of scope or by setting the  object variable to Nothing), the {\uldb Close}{\v HELPID_MsispyRegistry_Close} method  must be called to release all handles. \par\li0{\b Properties}\par\li180 {\uldb GetProduct}{\v HELPID_MsispyRegistry_GetProduct}\line {\uldb GetFeatureFromProduct}{\v HELPID_MsispyRegistry_GetFeatureFromProduct}\line {\uldb GetProduct}{\v HELPID_MsispyRegistry_GetProduct}\line {\uldb GetFeatureFromProduct}{\v HELPID_MsispyRegistry_GetFeatureFromProduct}\line {\uldb GetComponent}{\v HELPID_MsispyRegistry_GetComponent}\line {\uldb GetComponentFromProduct}{\v HELPID_MsispyRegistry_GetComponentFromProduct}\line {\uldb GetComponentFromFeature}{\v HELPID_MsispyRegistry_GetComponentFromFeature}\line {\uldb GetComponentName}{\v HELPID_MsispyRegistry_GetComponentName}\line {\uldb GetProductInfo}{\v HELPID_MsispyRegistry_GetProductInfo}\line {\uldb GetFeatureInfo}{\v HELPID_MsispyRegistry_GetFeatureInfo}\line {\uldb QueryProductState}{\v HELPID_MsispyRegistry_QueryProductState}\line {\uldb QueryFeatureState}{\v HELPID_MsispyRegistry_QueryFeatureState}\line {\uldb QueryComponentState}{\v HELPID_MsispyRegistry_QueryComponentState}\line {\uldb GetFeatureUsage}{\v HELPID_MsispyRegistry_GetFeatureUsage}\line {\uldb GetClientFromComponent}{\v HELPID_MsispyRegistry_GetClientFromComponent}\line {\uldb GetFileFromComponent}{\v HELPID_MsispyRegistry_GetFileFromComponent}\line {\uldb GetFileInfo}{\v HELPID_MsispyRegistry_GetFileInfo}\line {\uldb GetComponentLocation}{\v HELPID_MsispyRegistry_GetComponentLocation}\line {\uldb GetComponentPath}{\v HELPID_MsispyRegistry_GetComponentPath}\line \par\li0{\b Methods}\par\li180 {\uldb Open}{\v HELPID_MsispyRegistry_Open}\line {\uldb Close}{\v HELPID_MsispyRegistry_Close}\line \page #{\footnote HELPID_MsispyRegistry_Open} ${\footnote MsispyRegistry.Open} +{\footnote MsispyRegistry.Open} K{\footnote Msispy Automation: Open} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b Open Method \line\tx360\tab\fs18\b0{\uldb MsispyRegistry Object}{\v HELPID_MsispyRegistry} \tx3000\tab{\uldb Msispy Objects}{\v Msispy_Objects} \par}\li180 Opens a registry object. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .Open()} \par{\i object}\line Required. The MsispyRegistry object. \page #{\footnote HELPID_MsispyRegistry_Close} ${\footnote MsispyRegistry.Close} +{\footnote MsispyRegistry.Close} K{\footnote Msispy Automation: Close} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b Close Method \line\tx360\tab\fs18\b0{\uldb MsispyRegistry Object}{\v HELPID_MsispyRegistry} \tx3000\tab{\uldb Msispy Objects}{\v Msispy_Objects} \par}\li180 Closes a registry object. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .Close()} \par{\i object}\line Required. The MsispyRegistry object. \page #{\footnote HELPID_MsispyRegistry_GetProduct} ${\footnote MsispyRegistry.GetProduct} +{\footnote MsispyRegistry:GetProduct} K{\footnote Msispy Automation: GetProduct} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b GetProduct Property \line\tx360\tab\fs18\b0{\uldb MsispyRegistry Object}{\v HELPID_MsispyRegistry} \tx3000\tab{\uldb Msispy Objects}{\v Msispy_Objects} \par}\li180 Returns a string containing the product-code of a product in the registry, or  a blank string if all the products in the registry have been enumerated.  A 0-based index is used to enumerate the products one at a time. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .GetProduct({\i productIndex})} \par{\i object}\line Required. The MsispyRegistry object. \par{\i\b productIndex}\line Required. The 0-based index used for enumeration. \page #{\footnote HELPID_MsispyRegistry_GetFeatureFromProduct} ${\footnote MsispyRegistry.GetFeatureFromProduct} +{\footnote MsispyRegistry:GetFeatureFromProduct} K{\footnote Msispy Automation: GetFeatureFromProduct} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b GetFeatureFromProduct Property \line\tx360\tab\fs18\b0{\uldb MsispyRegistry Object}{\v HELPID_MsispyRegistry} \tx3000\tab{\uldb Msispy Objects}{\v Msispy_Objects} \par}\li180 Returns a string containing the name of a feature of the product, or a blank string   if all the features of the product have been enumerated. A 0-based index is used  to enumerate the features one at a time. The product being used must be in the  registry, otherwise no features are enumerated. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .GetFeatureFromProduct({\i productCode, featureIndex})} \par{\i object}\line Required. The MsispyRegistry object. \par{\i\b productCode}\line Required. The product whose features are to be enumerated, must be in the registry. \par{\i\b featureIndex}\line Required. The 0-based index used for enumeration. \page #{\footnote HELPID_MsispyRegistry_GetComponent} ${\footnote MsispyRegistry.GetComponent} +{\footnote MsispyRegistry:GetComponent} K{\footnote Msispy Automation: GetComponent} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b GetComponent Property \line\tx360\tab\fs18\b0{\uldb MsispyRegistry Object}{\v HELPID_MsispyRegistry} \tx3000\tab{\uldb Msispy Objects}{\v Msispy_Objects} \par}\li180 Returns a string containing the GUID of a component in the registry, or  a blank string if all the components in the registry have been enumerated.  A 0-based index is used to enumerate the components one at a time. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .GetComponent({\i componentIndex})} \par{\i object}\line Required. The MsispyRegistry object. \par{\i\b componentIndex}\line Required. The 0-based index used for enumeration. \page #{\footnote HELPID_MsispyRegistry_GetComponentFromProduct} ${\footnote MsispyRegistry.GetComponentFromProduct} +{\footnote MsispyRegistry:GetComponentFromProduct} K{\footnote Msispy Automation: GetComponentFromProduct} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b GetComponentFromProduct Property \line\tx360\tab\fs18\b0{\uldb MsispyRegistry Object}{\v HELPID_MsispyRegistry} \tx3000\tab{\uldb Msispy Objects}{\v Msispy_Objects} \par}\li180 Returns a string containing the GUID of a component of the product, or a blank string   if all the components of the product have been enumerated. A 0-based index is used  to enumerate the components one at a time. The product being used must be in the  registry, otherwise no components are enumerated. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .GetComponentFromProduct({\i productCode, componentIndex})} \par{\i object}\line Required. The MsispyRegistry object. \par{\i\b productCode}\line Required. The product whose components are to be enumerated, must be in the registry. \par{\i\b componentIndex}\line Required. The 0-based index used for enumeration. \page #{\footnote HELPID_MsispyRegistry_GetComponentFromFeature} ${\footnote MsispyRegistry.GetComponentFromFeature} +{\footnote MsispyRegistry:GetComponentFromFeature} K{\footnote Msispy Automation: GetComponentFromFeature} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b GetComponentFromFeature Property \line\tx360\tab\fs18\b0{\uldb MsispyRegistry Object}{\v HELPID_MsispyRegistry} \tx3000\tab{\uldb Msispy Objects}{\v Msispy_Objects} \par}\li180 Returns a string containing the GUID of a component of the feature, or a blank string   if all the components of the feature have been enumerated. A 0-based index is used  to enumerate the components one at a time. The product in use must be in the  registry, otherwise no components are enumerated. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .GetComponentFromFeature({\i productCode, featureName, componentIndex})} \par{\i object}\line Required. The MsispyRegistry object. \par{\i\b productCode}\line Required. The product in use, must be in the registry. \par{\i\b featureName}\line Required. The feature whose components are to be enumerated. \par{\i\b componentIndex}\line Required. The 0-based index used for enumeration. \page #{\footnote HELPID_MsispyRegistry_GetComponentName} ${\footnote MsispyRegistry.GetComponentName} +{\footnote MsispyRegistry:GetComponentName} K{\footnote Msispy Automation: GetComponentName} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b GetComponentName Property \line\tx360\tab\fs18\b0{\uldb MsispyRegistry Object}{\v HELPID_MsispyRegistry} \tx3000\tab{\uldb Msispy Objects}{\v Msispy_Objects} \par}\li180 Returns a string containing the name of a component whose GUID is passed in, or  a blank string if the required information could not be found. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .GetComponentName({\i componentGuid})} \par{\i object}\line Required. The MsispyRegistry object. \par{\i\b componentGuid}\line Required. The component whose name will be returned. \page #{\footnote HELPID_MsispyRegistry_GetProductInfo} ${\footnote MsispyRegistry.GetProductInfo} +{\footnote MsispyRegistry:GetProductInfo} K{\footnote Msispy Automation: GetProductInfo} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b GetProductInfo Property \line\tx360\tab\fs18\b0{\uldb MsispyRegistry Object}{\v HELPID_MsispyRegistry} \tx3000\tab{\uldb Msispy Objects}{\v Msispy_Objects} \par}\li180 Returns a string containing a specific property of a product, or  a blank string if the required information could not be found. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .GetProductInfo({\i productCode, productAttribute})} \par{\i object}\line Required. The MsispyRegistry object. \par{\i\b productCode}\line Required. The product about which information will be returned. \par{\i\b productAttribute}\line Required. The required property of the product (case-sensitive). Valid attributes are:\line \tab ProductName\line \tab ProductVersion\line \tab ProductCode\line \tab Manufacturer\line \tab SupportURL\line \tab SupportPhone\line \tab UserName\line \tab UserOrgName\line \tab ProductId\line \page #{\footnote HELPID_MsispyRegistry_GetFeatureInfo} ${\footnote MsispyRegistry.GetFeatureInfo} +{\footnote MsispyRegistry:GetFeatureInfo} K{\footnote Msispy Automation: GetFeatureInfo} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b GetFeatureInfo Property \line\tx360\tab\fs18\b0{\uldb MsispyRegistry Object}{\v HELPID_MsispyRegistry} \tx3000\tab{\uldb Msispy Objects}{\v Msispy_Objects} \par}\li180 Returns a string containing a specific property of a feature, or  a blank string if the required information could not be found. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .GetFeatureInfo({\i productCode, featureName, featureAttribute})} \par{\i object}\line Required. The MsispyRegistry object. \par{\i\b productCode}\line Required. The product to which the feature belongs. \par{\i\b featureName}\line Required. The feature about which information will be returned. \par{\i\b featureAttribute}\line Required. The required property of the feature (case-sensitive). Valid attributes are:\line \tab Feature\line \tab Feature_Parent\line \tab Title\line \tab Description\line \tab Display\line \tab Level\line \tab Directory_Configurable\line \tab RunFromSource\line \page #{\footnote HELPID_MsispyRegistry_QueryProductState} ${\footnote MsispyRegistry.QueryProductState} +{\footnote MsispyRegistry:QueryProductState} K{\footnote Msispy Automation: QueryProductState} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b QueryProductState Property \line\tx360\tab\fs18\b0{\uldb MsispyRegistry Object}{\v HELPID_MsispyRegistry} \tx3000\tab{\uldb Msispy Objects}{\v Msispy_Objects} \par}\li180 Returns a numeric value that represents the install-state of a product on the  local system. The value returned is one of the following:\line \tab -6: configuration data corrupt\line \tab -5: installation suspended or in progress\line \tab -4: run from source, source is unavailable\line \tab -3: return buffer overflow\line \tab -2: invalid function argument\line \tab -1: unrecognized product or feature\line \tab  0: broken\line \tab  1: advertised\line \tab  2: uninstalled\line \tab  3: installed on local drive\line \tab  4: run from source, CD or net\line \tab  5: use default, local or source\line \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .QueryProductState({\i productCode})} \par{\i object}\line Required. The MsispyRegistry object. \par{\i\b productCode}\line Required. The product about which information will be returned. \page #{\footnote HELPID_MsispyRegistry_QueryFeatureState} ${\footnote MsispyRegistry.QueryFeatureState} +{\footnote MsispyRegistry:QueryFeatureState} K{\footnote Msispy Automation: QueryFeatureState} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b QueryFeatureState Property \line\tx360\tab\fs18\b0{\uldb MsispyRegistry Object}{\v HELPID_MsispyRegistry} \tx3000\tab{\uldb Msispy Objects}{\v Msispy_Objects} \par}\li180 Returns a numeric value that represents the install-state of a feature on the  local system. The value returned is one of the following:\line \tab -6: configuration data corrupt\line \tab -5: installation suspended or in progress\line \tab -4: run from source, source is unavailable\line \tab -3: return buffer overflow\line \tab -2: invalid function argument\line \tab -1: unrecognized product or feature\line \tab  0: broken\line \tab  1: advertised\line \tab  2: uninstalled\line \tab  3: installed on local drive\line \tab  4: run from source, CD or net\line \tab  5: use default, local or source\line \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .QueryFeatureState({\i productCode, featureName})} \par{\i object}\line Required. The MsispyRegistry object. \par{\i\b productCode}\line Required. The product to which the feature belongs. \par{\i\b featureName}\line Required. The feature about which information will be returned. \page #{\footnote HELPID_MsispyRegistry_QueryComponentState} ${\footnote MsispyRegistry.QueryComponentState} +{\footnote MsispyRegistry:QueryComponentState} K{\footnote Msispy Automation: QueryComponentState} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b QueryComponentState Property \line\tx360\tab\fs18\b0{\uldb MsispyRegistry Object}{\v HELPID_MsispyRegistry} \tx3000\tab{\uldb Msispy Objects}{\v Msispy_Objects} \par}\li180 Returns a numeric value that represents the install-state of a component on the  local system. The value returned is one of the following:\line \tab -6: configuration data corrupt\line \tab -5: installation suspended or in progress\line \tab -4: run from source, source is unavailable\line \tab -3: return buffer overflow\line \tab -2: invalid function argument\line \tab -1: unrecognized product or feature\line \tab  0: broken\line \tab  1: advertised\line \tab  2: uninstalled\line \tab  3: installed on local drive\line \tab  4: run from source, CD or net\line \tab  5: use default, local or source\line \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .QueryComponentState({\i productCode, componentGuid})} \par{\i object}\line Required. The MsispyRegistry object. \par{\i\b productCode}\line Required. The product to which the component belongs. \par{\i\b componentGuid}\line Required. The component about which information will be returned. \page #{\footnote HELPID_MsispyRegistry_GetFeatureUsage} ${\footnote MsispyRegistry.GetFeatureUsage} +{\footnote MsispyRegistry:GetFeatureUsage} K{\footnote Msispy Automation: GetFeatureUsage} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b GetFeatureUsage Property \line\tx360\tab\fs18\b0{\uldb MsispyRegistry Object}{\v HELPID_MsispyRegistry} \tx3000\tab{\uldb Msispy Objects}{\v Msispy_Objects} \par}\li180 Returns the usage-count of a feature on the local system. Returns 0 if the  information could not be obtained. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .GetFeatureUsage({\i productCode, featureName})} \par{\i object}\line Required. The MsispyRegistry object. \par{\i\b productCode}\line Required. The product to which the feature belongs. \par{\i\b featureName}\line Required. The feature about which information will be returned. \page #{\footnote HELPID_MsispyRegistry_GetClientFromComponent} ${\footnote MsispyRegistry.GetClientFromComponent} +{\footnote MsispyRegistry:GetClientFromComponent} K{\footnote Msispy Automation: GetClientFromComponent} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b GetClientFromComponent Property \line\tx360\tab\fs18\b0{\uldb MsispyRegistry Object}{\v HELPID_MsispyRegistry} \tx3000\tab{\uldb Msispy Objects}{\v Msispy_Objects} \par}\li180 Returns a string containing product-code of a client-product of the component, or a blank   string if all the clients of the component have been enumerated. A 0-based index is used  to enumerate the clients one at a time. The component being used must be in the  registry, otherwise no clients are enumerated. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .GetClientFromComponent({\i componentGuid, clientIndex})} \par{\i object}\line Required. The MsispyRegistry object. \par{\i\b componentGuid}\line Required. The component whose clients are to be enumerated, must be in the registry. \par{\i\b clientIndex}\line Required. The 0-based index used for enumeration. \page #{\footnote HELPID_MsispyRegistry_GetFileFromComponent} ${\footnote MsispyRegistry.GetFileFromComponent} +{\footnote MsispyRegistry:GetFileFromComponent} K{\footnote Msispy Automation: GetFileFromComponent} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b GetFileFromComponent Property \line\tx360\tab\fs18\b0{\uldb MsispyRegistry Object}{\v HELPID_MsispyRegistry} \tx3000\tab{\uldb Msispy Objects}{\v Msispy_Objects} \par}\li180 Returns a string containing the name of a file used by the component, or a blank   string if all the files of the component have been enumerated. A 0-based index is used  to enumerate the files one at a time. The component being used must be in the  registry, otherwise no files are enumerated. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .GetFileFromComponent({\i componentGuid, fileIndex})} \par{\i object}\line Required. The MsispyRegistry object. \par{\i\b componentGuid}\line Required. The component whose files are to be enumerated, must be in the registry. \par{\i\b fileIndex}\line Required. The 0-based index used for enumeration. \page #{\footnote HELPID_MsispyRegistry_GetFileInfo} ${\footnote MsispyRegistry.GetFileInfo} +{\footnote MsispyRegistry:GetFileInfo} K{\footnote Msispy Automation: GetFileInfo} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b GetFileInfo Property \line\tx360\tab\fs18\b0{\uldb MsispyRegistry Object}{\v HELPID_MsispyRegistry} \tx3000\tab{\uldb Msispy Objects}{\v Msispy_Objects} \par}\li180 Returns a string containing a specific property of a file, or  a blank string if the required information could not be found. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .GetFileInfo({\i productCode, componentGuid, fileName, fileAttribute})} \par{\i object}\line Required. The MsispyRegistry object. \par{\i\b productCode}\line Required. The product to which the component belongs. \par{\i\b componentGuid}\line Required. The component to which the file belongs. \par{\i\b fileName}\line Required. The file about which information will be returned. \par{\i\b fileAttribute}\line Required. The required property of the file (case-sensitive). Valid attributes are:\line \tab FileTitle\line \tab FileSize\line \tab Version\line \tab Language\line \tab Attributes\line \tab Sequence\line \tab FileActualSize\line \tab FileCreated\line \tab FileModified\line \tab FileAccessed\line \tab FileStatus\line \page #{\footnote HELPID_MsispyRegistry_GetComponentLocation} ${\footnote MsispyRegistry.GetComponentLocation} +{\footnote MsispyRegistry:GetComponentLocation} K{\footnote Msispy Automation: GetComponentLocation} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b GetComponentLocation Property \line\tx360\tab\fs18\b0{\uldb MsispyRegistry Object}{\v HELPID_MsispyRegistry} \tx3000\tab{\uldb Msispy Objects}{\v Msispy_Objects} \par}\li180 Returns a string containing the full path to the keyfile of a component. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .GetComponentLocation({\i componentGuid})} \par{\i object}\line Required. The MsispyRegistry object. \par{\i\b componentGuid}\line Required. The component about which information will be returned. \page #{\footnote HELPID_MsispyRegistry_GetComponentPath} ${\footnote MsispyRegistry.GetComponentPath} +{\footnote MsispyRegistry:GetComponentPath} K{\footnote Msispy Automation: GetComponentPath} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b GetComponentPath Property \line\tx360\tab\fs18\b0{\uldb MsispyRegistry Object}{\v HELPID_MsispyRegistry} \tx3000\tab{\uldb Msispy Objects}{\v Msispy_Objects} \par}\li180 Returns a string containing the full path to the keyfile of a component. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .GetComponentPath({\i productCode, componentGuid})} \par{\i object}\line Required. The MsispyDatabase object. \par{\i\b productCode}\line Required. The product to which the component belongs. \par{\i\b componentGuid}\line Required. The component about which information will be returned. \page
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\darwin\src\help\objects.rtf ===
{\rtf1\ansi {\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}} {\colortbl;} \fs20 #{\footnote Msi_Objects} ${\footnote Msi Objects} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b Microsoft Installer Objects \par}\li180 {\uldb MsiAuto object}{\v MsiAuto_Object}\line {\uldb MsiConfigurationManager object}{\v MsiConfigurationManager_Object}\line {\uldb MsiControl object}{\v MsiControl_Object}\line {\uldb MsiCursor object}{\v MsiCursor_Object}\line {\uldb MsiData object}{\v MsiData_Object}\line {\uldb MsiDatabase object}{\v MsiDatabase_Object}\line {\uldb MsiDialog object}{\v MsiDialog_Object}\line {\uldb MsiDialogHandler object}{\v MsiDialogHandler_Object}\line {\uldb MsiDirectoryManager object}{\v MsiDirectoryManager_Object}\line {\uldb MsiEngine object}{\v MsiEngine_Object}\line {\uldb MsiEvent object}{\v MsiEvent_Object}\line {\uldb MsiFileCopy object}{\v MsiFileCopy_Object}\line {\uldb MsiFilePatch object}{\v MsiFilePatch_Object}\line {\uldb MsiHandler object}{\v MsiHandler_Object}\line {\uldb MsiMalloc object}{\v MsiMalloc_Object}\line {\uldb MsiMessage object}{\v MsiMessage_Object}\line {\uldb MsiPath object}{\v MsiPath_Object}\line {\uldb MsiRecord object}{\v MsiRecord_Object}\line {\uldb MsiRegKey object}{\v MsiRegKey_Object}\line {\uldb MsiSelectionManager object}{\v MsiSelectionManager_Object}\line {\uldb MsiServices object}{\v MsiServices_Object}\line {\uldb MsiServer object}{\v MsiServer_Object}\line {\uldb MsiStorage object}{\v MsiStorage_Object}\line {\uldb MsiStream object}{\v MsiStream_Object}\line {\uldb MsiString object}{\v MsiString_Object}\line {\uldb MsiSummaryInfo object}{\v MsiSummaryInfo_Object}\line {\uldb MsiTable object}{\v MsiTable_Object}\line {\uldb MsiView object}{\v MsiView_Object}\line {\uldb MsiVolume object}{\v MsiVolume_Object}\line {\uldb Methods common to all objects}{\v MsiBase_Object}\line \page #{\footnote Object_Hierarchy} ${\footnote Object Hierarchy} K{\footnote Hierarchy} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b Microsoft Installer Object Hierarchy \par}\li180 All objects are derived ultimately from a common base class.  C++ objects are COM classes derived from the IUnknown interface.  Automation objects (except MsiAuto) are wrappers for C++ COM pointers, are derived from  an internal class, CAutoBase, and are exposed as IDispatch interfaces. Where multiple  interfaces are implemented by the same object, they are joined by a plus sign, "+".  Objects derived from a base class are shown as indented under that base object. \par\tx200\li240\fi-180 {\b Objects Created from Module Class Factories} {\line\uldb MsiAuto}{\v MsiAuto_Object} {\line\uldb MsiServices}{\v MsiServices_Object} {\line\uldb MsiMessage}{\v MsiMessage_Object} {\line\tab\uldb MsiHandler}{\v MsiHandler_Object} {\line\tab\uldb MsiEngine}{\v MsiEngine_Object}  + {\uldb MsiSelectionManager}{\v MsiSelectionManager_Object}  + {\uldb MsiDirectoryManager}{\v MsiDirectoryManager_Object} {\line\uldb MsiConfigurationManager}{\v MsiConfigurationManager_Object} {\line\uldb MsiServer object}{\v MsiServer_Object} \par\tx200\li240\fi-180 {\b Objects Created by Methods of Other Objects} \line{\uldb MsiData}{\v MsiData_Object} \line\tab{\uldb MsiString}{\v MsiString_Object} \line\tab {\uldb MsiTable}{\v MsiTable_Object} \line\tab{\uldb MsiStream}{\v MsiStream_Object} \line\tab{\uldb MsiDialog}{\v MsiDialog_Object}  + {\uldb MsiEvent}{\v MsiEvent_Object} \line\tab{\uldb MsiControl}{\v MsiControl_Object} \line{\uldb MsiMalloc}{\v MsiMalloc_Object} \line{\uldb MsiRecord}{\v MsiRecord_Object} \line{\uldb MsiVolume}{\v MsiVolume_Object} \line{\uldb MsiPath}{\v MsiPath_Object} \line{\uldb MsiFileCopy}{\v MsiFileCopy_Object} \line{\uldb MsiFilePatch}{\v MsiFilePatch_Object} \line{\uldb MsiRegKey}{\v MsiRegKey_Object} \line{\uldb MsiDatabase}{\v MsiDatabase_Object} \line{\uldb MsiView}{\v MsiView_Object} \line{\uldb MsiCursor}{\v MsiCursor_Object} \line{\uldb MsiStorage}{\v MsiStorage_Object} \line{\uldb MsiSummaryInfo}{\v MsiSummaryInfo_Object} \page #{\footnote MsiBase_Object} ${\footnote MsiBase Object} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b Methods and Properties Common to all Objects \par}\li180 These methods are inherited into all automation classes, and are provided  to allow querying of the underlying COM interfaces associated with each object.  A common need is to be able to convert an {\uldb MsiData object}{\v MsiData_Object}  stored in a record or database to its derived object type. \par\li0{\b Properties}\par\li180 {\uldb HasInterface}{\v MsiBase_HasInterface}\line {\uldb RefCount}{\v MsiBase_RefCount} \par\li0{\b Methods}\par\li180 {\uldb GetInterface}{\v MsiBase_GetInterface} \par\fi0\li0{\b Remarks}\par\li180 These items don't apply to the MsiAuto object. \page #{\footnote MsiBase_HasInterface} ${\footnote MsiBase.HasInterface} +{\footnote MsiBase:HasInterface} K{\footnote HasInterface} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b HasInterface Property \line\tx360\tab\fs18\b0{\uldb MsiBase Object}{\v MsiBase_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 A boolean indicating whether the underlying COM object supports the indicated interface. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .HasInterface({\i iid})} \par{\i object}\line Required. The MsiBase object. \par{\i\b iid}\line Required. Integer representing the interface ID to be queried, {\f1 iidMsi???}.    Constants are defined in the type library for the Installer interfaces. \par\fi0\li0{\b Remarks}\par\li180 This property doesn't apply to the MsiAuto object. \page #{\footnote MsiBase_RefCount} ${\footnote MsiBase.RefCount} +{\footnote MsiBase:RefCount} K{\footnote RefCount} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b RefCount Property \line\tx360\tab\fs18\b0{\uldb MsiBase Object}{\v MsiBase_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 The reference count of the underlying COM object. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .RefCount} \par{\i object}\line Required. The MsiBase object. \par\fi0\li0{\b Remarks}\par\li180 This the reference count of the C++ implementation object,  not of the automation IDispatch wrapper object. The automation wrapper  will account for one reference count, unless the underlying object is null,  in which case the reference count will be zero. The preceeding happens  when an null MsiData object is accessed from a database cursor. \page #{\footnote MsiBase_GetInterface} ${\footnote MsiBase.GetInterface} +{\footnote MsiBase:GetInterface} K{\footnote GetInterface} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b GetInterface Method \line\tx360\tab\fs18\b0{\uldb MsiBase Object}{\v MsiBase_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 Returns a new object containing the requested interface,  by requesting the interface from the underlying COM object.  An error will be generated if the interface cannot be obtained. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .GetInterface({\i iid})} \par{\i object}\line Required. The MsiBase object. \par{\i\b iid}\line Required. Integer representing the interface ID to be queried, {\f1 iidMsi???}.    Constants are defined in the type library for the Installer interfaces. \par\fi0\li0{\b Remarks}\par\li180 This method doesn't apply to the MsiAuto object. \page #{\footnote MsiAuto_Object} ${\footnote MsiAuto Object} K{\footnote MsiAuto} +{\footnote Class:MsiAuto} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b MsiAuto Object \par}\li180 An MsiAuto object must be initially created in order to load the automation  support that is required in order to access the Microsoft Installer components  through OLE automation. This object provides wrappers to create the top level  objects and access their methods. \par\li0{\b Methods}\par\li180 {\uldb CreateServices}{\v MsiAuto_CreateServices}\line {\uldb CreateEngine}{\v MsiAuto_CreateEngine}\line {\uldb CreateHandler}{\v MsiAuto_CreateHandler}\line {\uldb CreateMessageHandler}{\v MsiAuto_CreateMessageHandler}\line {\uldb CreateConfigurationManager}{\v MsiAuto_CreateConfigurationManager}\line {\uldb OpcodeName}{\v MsiAuto_OpcodeName}\line {\uldb ShowAsserts}{\v MsiAuto_ShowAsserts}\line {\uldb SetDBCSSimulation}{\v MsiAuto_SetDBCSSimulation}\line {\uldb AssertNoObjects}{\v MsiAuto_AssertNoObjects}\line {\uldb SetRefTracking}{\v MsiAuto_SetRefTracking}\line \page #{\footnote MsiAuto_CreateServices} ${\footnote MsiAuto.CreateServices} +{\footnote MsiAuto:CreateServices} K{\footnote CreateServices} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b CreateServices Method \line\tx360\tab\fs18\b0{\uldb MsiAuto Object}{\v MsiAuto_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 This methods loads the Msi (kernel) library and creates a MsiServices object. If  no parameter is supplied, the method attempts to load "Msi.DLL" from the  current directory. \page #{\footnote MsiAuto_CreateEngine} ${\footnote MsiAuto.CreateEngine} +{\footnote MsiAuto:CreateEngine} K{\footnote CreateEngine} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b CreateEngine Method \line\tx360\tab\fs18\b0{\uldb MsiAuto Object}{\v MsiAuto_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 This methods loads the Msi (kernel) library and creates a MsiEngine object.       If no engine parameter is supplied, the method   attempts to load "Msi.DLL" from the current directory. \page #{\footnote MsiAuto_CreateHandler} ${\footnote MsiAuto.CreateHandler} +{\footnote MsiAuto:CreateHandler} K{\footnote CreateHandler} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b CreateHandler Method \line\tx360\tab\fs18\b0{\uldb MsiAuto Object}{\v MsiAuto_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 This methods loads the message handler library and creates a MsiHandler  object. The kernel library (msi.dll) should be loaded first.  If no handler library parameter is supplied, the method attempts to load  "MsiHnd.DLL" from the current directory. \page #{\footnote MsiAuto_CreateMessageHandler} ${\footnote MsiAuto.CreateMessageHandler} +{\footnote MsiAuto:CreateMessageHandler} K{\footnote CreateMessageHandler} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b CreateMessageHandler Method \line\tx360\tab\fs18\b0{\uldb MsiAuto Object}{\v MsiAuto_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 This methods loads the given library and creates a MsiMessage  object. The kernel library (msi.dll) should be loaded first.  If no handler library parameter is supplied, the method uses the registered  kernel DLL. \page #{\footnote MsiAuto_CreateConfigurationManager} ${\footnote MsiAuto.CreateConfigurationManager} +{\footnote MsiAuto:CreateConfigurationManager} K{\footnote CreateConfigurationManager} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b CreateConfigurationManager Method \line\tx360\tab\fs18\b0{\uldb MsiAuto Object}{\v MsiAuto_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 This methods creates an MsiConfigurationManager object. Currently this is   stored in the kernel library. See {\uldb CreateEngine}{\v MsiAuto_CreateEngine}  for more information. \page #{\footnote MsiAuto_CreateExecutor} ${\footnote MsiAuto.CreateExecutor} +{\footnote MsiAuto:CreateExecutor} K{\footnote CreateExecutor} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b CreateExecutor Method \line\tx360\tab\fs18\b0{\uldb MsiAuto Object}{\v MsiAuto_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 This methods creates an {\uldb MsiExecute}{\v MsiExecute_Object} object.  Currently this is stored in the kernel library.  See {\uldb CreateEngine}{\v MsiAuto_CreateEngine} for more information. \page #{\footnote MsiAuto_OpcodeName} ${\footnote MsiAuto.OpcodeName} +{\footnote MsiAuto:OpcodeName} K{\footnote OpcodeName} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b OpcodeName Property \line\tx360\tab\fs18\b0{\uldb MsiAuto Object}{\v MsiAuto_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \par}\li180 The enumerated name for the numeric opcode value. Read-only. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .OpcodeName({\i opcode})} \par{\i object}\line Required. The MsiAuto object. \par{\i\b opcode}\line Required. The numeric value of the opcode. \par\fi0\li0{\b Remarks}\par\li180 The enumeration is generated from the "opcodes.h" header file.  Undefined opcodes will cause an error to be generated. \page #{\footnote MsiAuto_ShowAsserts} ${\footnote MsiAuto.ShowAsserts} +{\footnote MsiAuto:ShowAsserts} K{\footnote ShowAsserts} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b ShowAsserts Method \line\tx360\tab\fs18\b0{\uldb MsiAuto Object}{\v MsiAuto_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \par}\li180 \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .ShowAsserts({\i Flag})} \par{\i object}\line Required. The MsiAuto object. \par{\i\b Flag}\line Required. Should be False to hide asserts and True to show asserts. \par\fi0\li0{\b Remarks}\par\li180 This method sets an internal flag in each of the standard Installer component DLLs  to control display of assert messages,  and will be functional only for component objects that have already been created.  NOTE: Only available in DEBUG components, which support the IMsiDebug interface. \page #{\footnote MsiAuto_SetDBCSSimulation} ${\footnote MsiAuto.SetDBCSSimulation} +{\footnote MsiAuto:SetDBCSSimulation} K{\footnote SetDBCSSimulation} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b SetDBCSSimulation Method \line\tx360\tab\fs18\b0{\uldb MsiAuto Object}{\v MsiAuto_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \par}\li180 \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .SetDBCSSimulation({\i leadByte})} \par{\i object}\line Required. The MsiAuto object. \par{\i\b leadByte}\line Required. The numeric value of a character that will be recognized by the  MsiString object implementation as the lead byte of a double-byte sequence. \par\fi0\li0{\b Remarks}\par\li180 This method is exposed to facilitate testing of the DBCS string handling  on a non-DBCS system.  NOTE: Only available in DEBUG components, which support the IMsiDebug interface \page #{\footnote MsiAuto_AssertNoObjects} ${\footnote MsiAuto.AssertNoObjects} +{\footnote MsiAuto:AssertNoObjects} K{\footnote AssertNoObjects} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b AssertNoObjects Method \line\tx360\tab\fs18\b0{\uldb MsiAuto Object}{\v MsiAuto_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \par}\li180 \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .AssertNoObjects} \par{\i object}\line Required. The MsiAuto object. \par\fi0\li0{\b Remarks}\par\li180 This asserts that none of the objects being reference tracked are still allocated.  It is for debugging purposes from VB in order to help track down reference counting problems.  See {\uldb Reference Tracking}{\v Coding_RefTracking}   for more information on reference tracking in Darwin.  NOTE: Only available in DEBUG components, which support the IMsiDebug interface \page #{\footnote MsiAuto_SetRefTracking} ${\footnote MsiAuto.SetRefTracking} +{\footnote MsiAuto:SetRefTracking} K{\footnote SetRefTracking} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b SetRefTracking Method \line\tx360\tab\fs18\b0{\uldb MsiAuto Object}{\v MsiAuto_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \par}\li180 \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .SetRefTracking({\i iid}, {\i fTrack})} \par{\i object}\line Required. The MsiAuto object. \par{\i\b iid}\line Required. The iid of the class you wish to turn reference tracking on or off. \par{\i\b fTrack}\line Required. True or false indicating whether to turn tracking on or off. \par\fi0\li0{\b Remarks}\par\li180 This allows you to turn reference tracking on or off for objects created after this point.   It does not affect objects already created when the call is made. See {\uldb Reference Tracking}{\v Coding_RefTracking}   for more information on reference tracking in Darwin.  NOTE: Only available in DEBUG components, which support the IMsiDebug interface \page #{\footnote MsiMessage_Object} ${\footnote MsiMessage Object} K{\footnote MsiMessage} +{\footnote Class:MsiMessage} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b MsiMessage Object \line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 The MsiMessage object is an independent object that supports simple UI:  error handling and progress indications. It is a base class of MsiEngine  and MsiHandler, which support more extensive UI control. Objects supporting  this interface can be passed to the install server to receive notifications. \par\li0{\b Methods}\par\li180 {\uldb Message}{\v MsiMessage_Message}\line \page #{\footnote MsiMessage_Message} ${\footnote MsiMessage.Message} +{\footnote MsiMessage:Message} K{\footnote Message} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b Message Method \line\tx360\tab\fs18\b0{\uldb MsiMessage Object}{\v MsiMessage_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 Accepts a message type and parameters and returns a result code. This is  called by installer components to request UI handling and to provide progress notifications.  It is implemented by UI handlers, and also by MsiEngine which intercepts it to supply  formatting strings and logging services. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .Message({\i kind, record})} \par{\i object}\line Required. The MsiMessage object, or a derived object such as MsiHandler or MsiEngine \par{\i\b kind}\line Required. The message type, one of imtEnum, described below, combined with button styles where appropriate \par{\i\b record}\line Required. An MsiRecord object containing message-specific field. \par\pard{\b Message Types}\par\li180 {\f1 imtOutOfMemory  } out of memory, may be called recursively\line {\f1 imtError        } error message,   (1) is imsg/idbg error code\line {\f1 imtWarning      } warning message, (1) is imsg/idbg code, not fatal\line {\f1 imtUser         } user request,    (1) is imsg/idbg code\line {\f1 imtInfo         } informative message for log, not to be displayed\line {\f1 imtDiagnostic   } debug notification, displayed only if no log\line {\f1 imtCommonData   } info for UI: (1)=message type (2,...) arguments\line       {\b imtCommonData message types:}\line {\f1 (1)=1     (2)=}language id\line {\f1 (1)=2     (2)=}dialog caption\line {\f1 (1)=3     (2)=}boolean, show/hide cancel button\line {\f1 imtActionStart  } start of action, (1) action name, (2) description\line {\f1 imtActionData   } data associated with individual action item\line {\f1 imtProgress     } progress gauge info, (1) units so far, (2) total {\f1 imtActionDone   } end of actions, dismiss modeless progress dialog\line \par\pard{\b MessageBox Button Styles} - identical to Win32 definitions\par\li180 {\f1 imtOk               }  MB_OK  (default)\line {\f1 imtOkCancel         }  MB_OKCANCEL\line {\f1 imtAbortRetryIgnore }  MB_ABORTRETRYIGNORE\line {\f1 imtYesNoCancel      }  MB_YESNOCANCEL\line {\f1 imtYesNo            }  MB_YESNO\line {\f1 imtRetryCancel      }  MB_RETRYCANCEL \par\pard{\b MessageBox Icon Type}- identical to Win32 definitions, default is none\par\li180 {\f1 imtIconError        }  MB_ICONERROR\line {\f1 imtIconQuestion     }  MB_ICONQUESTION\line {\f1 imtIconWarning      }  MB_ICONWARNING\line {\f1 imtIconInfo         }  MB_ICONINFORMATION \par\pard{\b Default Button} - identical to Win32 definitions, default is first\par\li180 {\f1 imtDefault1         }  MB_DEFBUTTON1\line {\f1 imtDefault2         }  MB_DEFBUTTON2\line {\f1 imtDefault3         }  MB_DEFBUTTON3 \par\pard{\b Return Codes} - mapped to Win32 button events\par\li180 {\f1 imsError  = -1  } error in message handler {\f1 imsNone   =  0  } no action taken\line {\f1 imsOk     =  1  } IDOK\line {\f1 imsCancel =  2  } IDCANCEL\line {\f1 imsAbort  =  3  } IDABORT\line {\f1 imsRetry  =  4  } IDRETRY\line {\f1 imsIgnore =  5  } IDIGNORE\line {\f1 imsYes    =  6  } IDYES\line {\f1 imsNo     =  7  } IDNO\line \page #{\footnote MsiEngine_Object} ${\footnote MsiEngine Object} K{\footnote MsiEngine} +{\footnote Class:MsiEngine} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b MsiEngine Object \line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 The MsiEngine object controls the installation process.  It relies on an MsiServices object to perform all of the operating system functions.  It opens the install database, which contains the installation tables and data.  It defers all error handling and user interactions to the MsiHandler object.  The MsiEngine object is associated with a standard set of action functions,  each which performs particular operations on data from one or more tables.  Additional custom actions may be added for particular product installations.  The basic engine function is a sequencer which fetches sequential records from  a designated "sequence" table (such as {\uldb InstallSequence}{\v _msi_InstallSequence_Table@msi.hlp}),  evaluates any specified condition expression and executes the designated action. Actions not  recognized by the engine are deferred to the MsiHandler object for processing. \par\li0{\b Properties}\par\li180 {\uldb ConfigurationServer}{\v MsiEngine_ConfigurationServer}\line {\uldb Database}{\v MsiEngine_Database}\line {\uldb DirectoryManager}{\v MsiEngine_DirectoryManager}\line {\uldb Handler}{\v MsiEngine_Handler}\line {\uldb Property}{\v MsiEngine_Property}\line {\uldb SelectionManager}{\v MsiEngine_SelectionManager}\line {\uldb Services}{\v MsiEngine_Services}\line \par\li0{\b Methods}\par\li180 {\uldb DoAction}{\v MsiEngine_DoAction}\line {\uldb EvaluateCondition}{\v MsiEngine_EvaluateCondition}\line {\uldb FormatText}{\v MsiEngine_FormatText}\line {\uldb Initialize}{\v MsiEngine_Initialize}\line {\uldb Message}{\v MsiEngine_Message}\line {\uldb OpenView}{\v MsiEngine_OpenView}\line {\uldb Terminate}{\v MsiEngine_Terminate}\line {\uldb ResolveFolderProperty}{\v MsiEngine_ResolveFolderProperty}\line {\uldb Sequence}{\v MsiEngine_Sequence}\line {\uldb ExecuteRecord}{\v MsiEngine_ExecuteRecord}\line {\uldb ValidateProductID}{\v MsiEngine_ValidateProductID}\line {\uldb GetMode}{\v MsiEngine_GetMode}\line {\uldb SetMode}{\v MsiEngine_SetMode}\line \par\fi0\li0{\b Engine Initialization Processing}\par\li500\fi-320 The following methods and properties are normally call by the loader: \line Initialize method - initializes components and database using values passed in arguments. \line DoAction method - commences installation by calling a top level action, typically "Install". \line Terminate method - releases all data and references held by the engine. \page #{\footnote MsiEngine_Services} ${\footnote MsiEngine.Services} +{\footnote MsiEngine:Services} K{\footnote SERVICES} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b Services Property \line\tx360\tab\fs18\b0{\uldb MsiEngine Object}{\v MsiEngine_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 The {\uldb MsiServices}{\v MsiServices_Object} object used by  the engine, obtained from the MsiServer object when the engine was created. Read-only. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .Services} \par{\i object}\line Required. The MsiEngine object. \page #{\footnote MsiEngine_ConfigurationServer} ${\footnote MsiEngine.ConfigurationServer} +{\footnote MsiEngine:ConfigurationServer} K{\footnote SERVICES} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b ConfigurationServer Property \line\tx360\tab\fs18\b0{\uldb MsiEngine Object}{\v MsiEngine_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 The MsiServer object used by the engine, created when the engine object  was created. Read-only. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .ConfigurationServer} \par{\i object}\line Required. The MsiEngine object. \page #{\footnote MsiEngine_Handler} ${\footnote MsiEngine.Handler} +{\footnote MsiEngine:Handler} K{\footnote HANDLER} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b Handler Property \line\tx360\tab\fs18\b0{\uldb MsiEngine Object}{\v MsiEngine_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 The MsiHandler object used by the engine. This is initially set by the  {\uldb Initialize}{\v MsiEngine_Initialize} method of MsiEngine, to  either the default handler in the engine, or the the external handler  component, depending upon the UI level supplied to Initialize. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .Handler} \par{\i object}\line Required. The MsiEngine object. \page #{\footnote MsiEngine_Database} ${\footnote MsiEngine.Database} +{\footnote MsiEngine:Database} K{\footnote DATABASE} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b Database Property \line\tx360\tab\fs18\b0{\uldb MsiEngine Object}{\v MsiEngine_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 The name of the primary MsiDatabase object used by the engine.  This is set during the {\uldb Initialize}{\v MsiEngine_Initialize} method of MsiEngine. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .Database} \par{\i object}\line Required. The MsiEngine object. \page #{\footnote MsiEngine_Property} ${\footnote MsiEngine.Property} +{\footnote MsiEngine:Property} K{\footnote Property} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b Property Property \line\tx360\tab\fs18\b0{\uldb MsiEngine Object}{\v MsiEngine_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 The string value of a named Installer property, as maintained by the MsiEngine  object in the in-memory Property table, or if prefixed with a percent sign ({\f1\b %}),  the value of a system environment variable for the current process.  Either string or integer values may be supplied.  A non-existent property or environment variable is equivalent to its value being null.  Read-write. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .Property({\i name})} \par{\i object}\line Required. The MsiEngine object. \par{\i\b name}\line Required. The case-sensitive name of a property, or  a case-insensitive name of an environment variable prefixed by a percent sign. \par\fi0\li0{\b Remarks}\par\li180 For a list of common properties, see {\uldb Property Summary}{\v Property_Contents}. \page #{\footnote MsiEngine_SelectionManager} ${\footnote MsiEngine.SelectionManager} +{\footnote MsiEngine:SelectionManager} K{\footnote SelectionManager} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b SelectionManager Property \line\tx360\tab\fs18\b0{\uldb MsiEngine Object}{\v MsiEngine_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 The {\uldb MsiSelectionManager}{\v MsiSelectionManager_Object} object associated with the engine. Read-only. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .SelectionManager} \par{\i object}\line Required. The MsiEngine object. \page #{\footnote MsiEngine_DirectoryManager} ${\footnote MsiEngine.DirectoryManager} +{\footnote MsiEngine:DirectoryManager} K{\footnote DirectoryManager} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b DirectoryManager Property \line\tx360\tab\fs18\b0{\uldb MsiEngine Object}{\v MsiEngine_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 The {\uldb MsiDirectoryManager}{\v MsiDirectoryManager_Object} object associated with the engine. Read-only. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .DirectoryManager} \par{\i object}\line Required. The MsiEngine object. \page #{\footnote MsiEngine_FormatText} ${\footnote MsiEngine.FormatText} +{\footnote MsiEngine:FormatText} K{\footnote FormatText} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b FormatText Method \line\tx360\tab\fs18\b0{\uldb MsiEngine Object}{\v MsiEngine_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 Takes a string and returns a string where the property names are resolved.\line If a substring of the form [propertyname] is encountered, it is replaced by the value of the property.\line The square brackets can be iterated, the property names are resolved from inside out.\line If a substring of the form [%environmentvariable] is found, the value of the environment variable is substituted. \line If a substring of the form [#filekey] is found, it is replaced by the full path of the file, with the value {\i filekey} used as a key into the {\b File} table. \line If a substring of the form [$componentkey] is found, it is replaced by the install directory of the component, with the value {\i componentkey} used as a key into the {\b Component} table taking into account the Component.Action column state. If the component is selected to be installed locally it is replaced by the target directory, if the component is selected for run from source it is replaced by the source directory, and if the component is not selected or missing it is replaced by a null string.\line If a substring of the form [\char] is found, it is replaced by the character without any further processing. Only the first character after the backslash is kept, everything else is removed.  If a part of the string is enclosed in \{ \}, and contains no square brackets, it is left unchanged, including the curly braces.\line If a part of the string is enclosed in \{ \}, and contains one or more property name; if all the properties are found, the text (with the resolved substitutions) is displayed without the curly braces. If any of the properties is not found, all the text in the braces, and the braces themselves are removed.\line \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .FormatText({\i text})} \par{\i object}\line Required. The MsiEngine object. \par{\i\b text}\line Required. The string to be formatted \par\fi0\li0{\b Remarks}\par\li180 If some square brackets or curly braces have no matching pair, they will be left in the text. \page #{\footnote MsiEngine_EvaluateCondition} ${\footnote MsiEngine.EvaluateCondition} +{\footnote MsiEngine:EvaluateCondition} K{\footnote EvaluateCondition} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b EvaluateCondition Method \line\tx360\tab\fs18\b0{\uldb MsiEngine Object}{\v MsiEngine_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 Evaluates an logical expression containing symbols and values,  and returns an integer of the enumeration iecEnum, as described below. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .EvaluateCondition({\i condition})} \par{\i object}\line Required. The MsiEngine object. \par{\i\b condition}\line Required. A string containing the logical expression. \par\fi0\li0{\b Expression Syntax}\par\li180  value ::= symbol | literal | integer\line  comparison-operator ::= {\b <} | {\b >} | {\b <=} | {\b >=} | {\b =} | {\b <>}\line  term ::= value | value comparison-operator value | {\b (} expression {\b )}|\line  boolean-factor ::= term | {\b NOT} term\line  boolean-term ::= boolean-factor | boolean-factor {\b AND} term\line  expression ::= boolean-term | boolean-term {\b OR} expression\line  symbol ::= property | %environment-variable | $component-action | ?component-state  | &feature-action | !feature-state\line \par\fi0\li180 All symbol names and values are case-sensitive,  except that environment variable names are case-insensitive.\line Operators are case-insensitive.\line Literal text must be enclosed in double quotes.\line Floating point numeric values are not supported.\line Operators and precedence: same as BASIC and SQL languages.\line Arithmetic operators are not supported.\line Supported operators: Or And Not Xor Eqv Imp < <= = <> >= > () .\line Non-existent property values are treated as empty strings.\line Comparison of an integer with a string or property value that cannot be converted to an  integer is always iecFalse, except for the comparison operator '<>' which returns iecTrue.\line Parentheses may be used to override operator precedence.\line For string comparisons, a tilde '{\f1\b ~}' prefixed to the operator will  perform a case-insensitive compare. \par\fi0\li0{\b Symbol Types}\par\li180 \trowd\trgaph108\trleft200\cellx2400\cellx3600\cellx8000 \intbl{\ul Symbol Type\cell Prefix\cell Value\cell }\row \intbl Installer property\cell (none)\cell value of property (Property table)\cell\row \intbl Environment variable\cell {\f1\b %}\cell value of environment variable\cell\row \intbl Component table key\cell {\f1\b &}\cell action state of the component\cell\row \intbl Component table key\cell {\f1\b !}\cell installed state of the component\cell\row \intbl Feature table key\cell {\f1\b &}\cell action state of the feature\cell\row \intbl Feature table key\cell {\f1\b !}\cell installed state of the feature\cell\row \par\fi0\li0{\b Return Values}\par\li180 {\f1 iecFalse = 0 } - expression evaluates to False\line {\f1 iecTrue  = 1 } - expression evaluates to True\line {\f1 iecNone  = 2 } - expression not present, caller decides interpretation\line {\f1 iecError = 3 } - syntax error in expression, cannot be evaluated \par\fi0\li0{\b Logical Operators}, high to low precedence\par\li180 {\f1\b Not } - prefix unary operator, inverts state of following term\line {\f1\b And } - True if both terms True\line {\f1\b Or  } - True if either or both terms True\line {\f1\b Xor } - True if either but not both terms True\line {\f1\b Eqv } - True if both terms True or both False\line {\f1\b Imp } - True if left term False or right term True \par\fi0\li0{\b Comparison Operators}, can occur only between two values\par\li180 {\f1\b =   } - True if left value is equal to right value\line {\f1\b <>  } - True if left value is not equal to right value\line {\f1\b >   } - True if left value is greater than right value\line {\f1\b >=  } - True if left value is greater than or equal to right value\line {\f1\b <   } - True if left value is less than right value\line {\f1\b <=  } - True if left value is less than or equal to right value \par\fi0\li0{\b Substring Operators}, when present between two string values\par\li180 {\f1\b ><  } - True if left string contains the right string\line {\f1\b <<  } - True if left string starts with the right string\line {\f1\b >>  } - True if left string ends with the right string \par\fi0\li0{\b Bitwise Numeric Operators}, when present between two integer values\par\li180 {\f1\b ><  } - Bitwise AND, True if left and right integers have any bits in common {\f1\b <<  } - True if the high 16-bits of left integer equals the right integer\line {\f1\b >>  } - True if the low 16-bits of the left integer equals the right integer \par\fi0\li0{\b Feature and Component State Values}\par\li180 {\f1 0 (iisAbsent)} - feature or component not present\line {\f1 1 (iisLocal) } - feature or component on local machine\line {\f1 2 (iecSource } - feature or component run from source\line {\f1 (null value) } - no action to be taken on feature or component\line {\ul Note}: these states are not set until the {\uldb SetInstallLevel}{\v MsiSelectionManager_SetInstallLevel}  method is called, either directly or by the {\uldb CostFinalize}{\v Action_CostFinalize@msi.hlp} action.  Therefore, state checking is generally only useful in conditional expression in an action sequence table. \page #{\footnote MsiEngine_Initialize} ${\footnote MsiEngine.Initialize} +{\footnote MsiEngine:Initialize} K{\footnote Initialize} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b Initialize Method \line\tx360\tab\fs18\b0{\uldb MsiEngine Object}{\v MsiEngine_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 Validates and opens the database, initializes the engine, handler, Property table.  Fails if the database is incompatible or does not contain Property and Error tables.  Returns an integer enumeration indicating the result. If an error occurs, the  handler is not initialized and cannot display the error; therefore the responsibility  of the caller to handle the error. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .Initialize({\i database, uiLevel, commandLine})} \par{\i object}\line Required. The MsiEngine object. \par{\i\b database}\line Required. Name or path to the database file. The engine interprets this string  and attempts to create the corresponding MsiDatabase object. The MsiDatabase object  must contain the {\uldb Error}{\v _msi_Error_Table@msi.hlp} table, and the  {\uldb Property}{\v _msi_Property_Table@msi.hlp} table. The Property table must contain the  {\uldb ProductVersion}{\v Property_ProductVersion}, {\uldb ProductLanguage}{\v Property_ProductLanguage}, and {\uldb ProductCode}{\v Property_ProductCode}  properties for the initialization to succeed. To facilitate component testing, if  an empty string is supplied, a temporary database will be created containing an empty  Property table. \par{\i\b uiLevel}\line Optional. The interaction level of the UI, one of the following: {\line\f1 iuiFull    = 0  } default, full interactive UI {\line\f1 iuiReduced = 1  } progress and errors, no modeless dialogs (wizards) {\line\f1 iuiBasic   = 2  } progress and errors using engine default handler {\line\f1 iuiNone    = 3  } no UI\line \par{\i\b commandLine}\line Optional. String containing property definitions, normally launcher command line.  These properties will override those in the resources of the launcher EXE,  The property name will be forced to upper case; the value is case-sensitive.  All externally settable properties are named entirely with  upper case letters. White space around the equals sign is optional.  Spaces within the value text are preserved if the value is quoted.  In addition to the property=value syntax, a selected set of letter options are interpreted. \par\fi0\li0{\b Operations performed by MsiEngine.Initialize}\par\li180  1. Loads property table if in UI preview mode. Goto step 15.\line  2. If a database wasn't passed in via the  database parameter, attempts to locate DATABASE= on the command-line  and use this as the database. If neither the database parameter is set  nor DATABASE= specifed on the command-line, creates a temporary database  and property table.\line  3. Evaluates the {\b\i uiLevel} argument and displays a startup window  if not totally quiet.\line  4. Copies the database to the TEMP folder if running from a floppy     or other removable media.\line  5. Reads and validates the SummaryInformation stream (_SummaryInformation table if ODBC database).\line  6. Checks database version against the engine and services objects.\line  7. Authenticates the database (if enabled)  8. Determines which language to use. The language is chosen using the   following steps, until a language is found:\line       a. If a language is advertised for the product then it is used. If the   database doesn't support this language then ieiLanguageUnsupported is returned.\line       b. If a language is specified on the command-line for the product then it is   used. If the database doesn't support this language then ieiLanguageUnsupported   is returned.\line       c. If a language supported by the database is the same as the user's   default language then it is used.\line       d. If a language supported by the database is the primary language of   the user's default language then it is used.\line       e. If the primary language of a language supported by the database is   the primary language of the user's default language then it is used.\line       f. If there is only one language supported by the database for which   the system has locale information then it is used.\line       g. The user is presented with a choice of language for which the system   has locale information. The chosen language is used.\line       h. An error, ieiLanguageUnsupported, is returned.\line  9. Opens the database, read-only unless PID_SECURITY property is set to 0.\line 10. Applies language transform if a language other than the base language is chosen.\line 11. Initializes database transforms, if transforms have been advertised or the  TRANSFORMS property is set\line 12. Loads Property table from the opened database.\line 13. Loads Error table and caches message headers from that table.\line 14. Adds user registration properties from the registry.\line 15. Processes property settings from the string passed in the {\b\i commandLine} argument.\line 16. Sets the operating system and hardware properties using  {\uldb MsiServices.SetPlatformProperties}{\v MsiServices_SetPlatformProperties}.\line 17. Creates an MsiExecute object to execute operations, directly or via script.\line 18. Initializes the log if {\uldb LOGFILE}{\v Property_LOGFILE} property is set.\line 19. Set the UI interaction level, creates instance of MsiHandler if full UI.\line 20. Initializes the MsiHandler object, supplying this engine object.\line 21. Checks whether an install is in progress and performs the following steps if one is:\line       a. If the install was started by a different user then it's silently rolled back\line   b. Otherwise, if it's the same user, but a different product then the user is  given the option to either roll back the partial install or exit\line       c. Otherwise, if it's the same user, same product, but has different  in-progress properties, then the user is given the option to either roll  back the partial install or exit\line   d. Otherwise, if it's the same user and same product then the previously   started install is resumed.\line \par\fi0\li0{\b Return Values}\par\li180 {\f1 ieiSuccess             =  0  } initialization complete\line {\f1 ieiAlreadyInitialized  =  2  } this engine object is already initialized\line {\f1 ieiCommandLineOption   =  3  } invalid command line syntax\line {\f1 ieiDatabaseOpenFailed  =  5  } database could not be opened\line {\f1 ieiDatabaseInvalid     =  6  } incompatible database\line {\f1 ieiInstallerVersion    =  7  } installer version does not support database format\line {\f1 ieiSourceAbsent        =  8  } couldn't resolve the source\line {\f1 ieiHandlerInitFailed   = 10  } could not initialize handler interface\line {\f1 ieiLogOpenFailure      = 11  } could not open logfile in requested mode\line {\f1 ieiLanguageUnsupported = 12  } no acceptable language could be found\line {\f1 ieiPlatformUnsupported = 13  } no acceptable platform could be found {\f1 ieiTransformFailed     = 14  } database transform failed to merge\line {\f1 ieiSignatureRejected   = 15  } digital signature rejected\line {\f1 ieiDatabaseCopyFailed  = 16  } could not copy database to temp dir\line {\f1 ieiPatchPackageOpenFailed  = 17 } could not open patch package\line {\f1 ieiPatchPackageInvalid     = 18 } patch package invalid\line {\f1 ieiTransformNotFound       = 19 } transform file not found\line {\f1 ieiPatchPackageUnsupported = 20 } patch package unsupported (unsupported patching engine?)\line {\f1 ieiPackageRejected         = 21 } package cannot be run because of security reasons\line {\f1 ieiProductUnknown          = 22 } attempt to uninstall a product you haven't installed\line {\f1 ieiDiffUserAfterReboot     = 23 } different user attempting to complete install after reboot\line {\f1 ieiProductAlreadyInstalled = 24 } product has been installed already w/ a different package\line {\f1 ieiTSRemoteInstallDisallowed = 25 } can't do installations from a remote session on Hydra\line \page #{\footnote MsiEngine_SetMode} ${\footnote MsiEngine.SetMode} +{\footnote MsiEngine:SetMode} K{\footnote SetMode} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b SetMode Method \line\tx360\tab\fs18\b0{\uldb MsiEngine Object}{\v MsiEngine_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 Sets a particular mode to the on or off state. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .SetMode({\i mode, state})} \par{\i object}\line Required. The MsiEngine object. \par{\i\b mode}\line The mode to turn on or off. Possible values are any iefEnum value from engine.h.\line \par{\i\b state}\line Boolean. True to turn mode on, false to turn mode off. \page #{\footnote MsiEngine_GetMode} ${\footnote MsiEngine.GetMode} +{\footnote MsiEngine:GetMode} K{\footnote GetMode} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b GetMode Method \line\tx360\tab\fs18\b0{\uldb MsiEngine Object}{\v MsiEngine_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 Gets the current mode bits.  The return is a bit flag.  Values are defined as iefEnum in engine.h. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .GetMode()} \par{\i object}\line Required. The MsiEngine object. \par{\i\b state}\line \page #{\footnote MsiEngine_Terminate} ${\footnote MsiEngine.Terminate} +{\footnote MsiEngine:Terminate} K{\footnote Terminate} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b Terminate Method \line\tx360\tab\fs18\b0{\uldb MsiEngine Object}{\v MsiEngine_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 Terminates the engine operations and releases references and data.  This method must be called before the engine is released.  After this method, the engine is returned to the uninitialized state,  and the {\uldb Initialize}{\v MsiEngine_Initialize} method may be called again. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .Terminate({\i state})} \par{\i object}\line Required. The MsiEngine object. \par{\i\b state}\line The return status of the last executed action. See the  {\uldb DoAction}{\v MsiEngine_DoAction} method  for possible values. This value is passed to the server  to determine  how to handle rollback and the in-progress information for the install.  See {\uldb InstallFinalize}{\v MsiConfigurationManager_InstallFinalize}  for more information. \par\fi0\li0{\b Return Values}\par\li180 Returns the given state, or iesSuspend if the install was suspended. \page #{\footnote MsiEngine_DoAction} ${\footnote MsiEngine.DoAction} +{\footnote MsiEngine:DoAction} K{\footnote DoAction} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b DoAction Method \line\tx360\tab\fs18\b0{\uldb MsiEngine Object}{\v MsiEngine_Object} \tx2400\tab{\uldb Msi Objects}{\v Msi_Objects} \tx4100\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \tx6300\tab{\uldb Msi Actions}{\v _msi_Installation_Database_Actions_List@msi.hlp} \par}\li180 Executes the action function corresponding to the name supplied.  If the name is not recognized by the engine as a build-in action or  as a custom action in the CustomAction table, the name is   passed to the DoAction method of the MsiHandler object,  which may either invoke a function or a dialog.  If a null action name is supplied, the engine uses the upper-cased value  of the ACTION property as the action to perform. If no property value is  defined, the default action is performed, currently defined as "INSTALL".  This method returns an integer enumeration as described below. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .DoAction({\i action})} \par{\i object}\line Required. The MsiEngine object. \par{\i\b action}\line Required. The string name of the action to execute, case-sensitive. \par\fi0\li0{\b Return Values}\par\li180 {\f1 iesNoAction       = 0  } action not invoked, most-likely does not exist.\line {\f1 iesSuccess        = 1  } IDOK, completed actions successfully.\line {\f1 iesUserExit       = 2  } IDCANCEL, user terminated prematurely.\line {\f1 iesFailure        = 3  } IDABORT, unrecoverable error occurred.\line {\f1 iesSuspend        = 4  } IDRETRY, sequence suspended, to be resumed later.\line {\f1 iesFinished       = 5  } IDIGNORE, skip remainin actions, not an error\line {\f1 iesWrongState     = 6  } calling sequence error, not in initialized state.\line {\f1 iesBadActionData  = 7  } from Sequence(), invalid Action table record data. \page #{\footnote MsiEngine_Sequence} ${\footnote MsiEngine.Sequence} +{\footnote MsiEngine:Sequence} K{\footnote Sequence} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b Sequence Method \line\tx360\tab\fs18\b0{\uldb MsiEngine Object}{\v MsiEngine_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 Opens a query on the specified table, ordering the actions by the numbers in the  'Sequence' column.  For each row fetched, the {\uldb DoAction}{MsiDatabase_DoAction}  method is called, provided that any supplied condition expression does not evaluate to False.  Returns an enumeration iesEnum, as described in the {\uldb DoAction}{\v MsiEngine_DoAction} method. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .Sequence({\i table})} \par{\i object}\line Required. The MsiEngine object. \par{\i\b table}\line Required. The string name of the table to use for sequencing. \par\fi0\li0{\b Remarks}\par\li180 This method is meant to be called internally by top-level actions. \page #{\footnote MsiEngine_Message} ${\footnote MsiEngine.Message} +{\footnote MsiEngine:Message} K{\footnote Message} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b Message Method \line\tx360\tab\fs18\b0{\uldb MsiEngine Object}{\v MsiEngine_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 Performs any enabled logging operations and defers exection  to the {\uldb Message}{\v MsiHandler_Message} method of the MsiHandler  object associated with the engine. Logging may be selectively enabled  for the various message types.  See {uldb MsiMessage.Message}{\v MsiMessage_Message}  for message types and return codes. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .Message({\i kind, record})} \par{\i object}\line Required. The MsiEngine object. \par{\i\b kind}\line Required. The message type, one of imtEnum, as described in {\uldb MsiMessage.Message}{\v MsiMessage_Message} \par{\i\b record}\line Required. An MsiRecord object containing message-specific field. \par\pard{\b Processing by Message Types}\par\li180 {\f1 imtOutOfMemory  } logged if '{\f1 m}' in LOGMODE, passed to handler\line {\f1 imtError        } logged if '{\f1 e}' in LOGMODE, passed to handler\line {\f1 imtWarning      } logged if '{\f1 w}' in LOGMODE, passed to handler\line {\f1 imtUser         } logged if '{\f1 u}' in LOGMODE, passed to handler\line {\f1 imtInfo         } logged if '{\f1 i}' in LOGMODE, not passed to handler\line {\f1 imtDiagnostic   } logged if '{\f1 d}' in LOGMODE, not passed to handler if log enabled\line {\f1 imtCommonData      } logged if '{\f1 c}' in LOGMODE, passed to handler to cache\line {\f1 imtActionStart  } logged if '{\f1 a}' in LOGMODE, passed to handler for progress display\line {\f1 imtActionData   } logged if '{\f1 r}' in LOGMODE, passed to handler for progress display\line {\f1 imtProgress     } never logged, passed to handler progress gauge {\f1 imtActionDone   } never logged, passed to handler to remove progress dialog \page #{\footnote MsiEngine_OpenView} ${\footnote MsiEngine.OpenView} +{\footnote MsiEngine:OpenView} K{\footnote OpenView} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b OpenView Method \line\tx360\tab\fs18\b0{\uldb MsiEngine Object}{\v MsiEngine_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 Simply a wrapper which defers to the {\uldb OpenView}{\v MsiDatabase_OpenView}  method of the current MsiDatabase object associated with the engine. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .OpenViewSQL({\i sql, intent})} \par{\i object}\line Required. The MsiEngine object. \par{\i\b sql}\line Required. The SQL query string. \par{\i\b intent}\line Required. The combination of operations intended on the MsiView object. \page #{\footnote MsiEngine_ExecuteRecord} ${\footnote MsiEngine.ExecuteRecord} +{\footnote MsiEngine:ExecuteRecord} K{\footnote ExecuteRecord} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b OpenView Method \line\tx360\tab\fs18\b0{\uldb MsiEngine Object}{\v MsiEngine_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 Either executes or spools and operation, depending on the current mode of execution.  If the {\uldb EXECUTEMODE}{\v Property_EXECUTEMODE} property indicates direct  execution, the operation is executed immediately.  Otherwise, the operation is added  to the current script. If no script has been created yet, a script is created  and the {\uldb ixoHeader}{\v Operation_ixoHeader},  {\uldb ixoProductInfo}{\v Operation_ixoProductInfo},  {\uldb ixoDialogInfo}{\v Operation_ixoDialogInfo} and  {\uldb ixoRollbackInfo}{\v Operation_ixoRollbackInfo}  operations are added before this operation. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .ExecuteRecord({\i opcode, params})} \par{\i object}\line Required. The MsiEngine object. \par{\i\b opcode}\line Required. The {\uldb opcode}{\v Server_ScriptOpcodes} of the operation to execute. \par{\i\b params}\line Required. An MsiRecord object containing the arguments for this operation. \page #{\footnote MsiEngine_ResolveFolderProperty} ${\footnote MsiEngine.ResolveFolderProperty} +{\footnote MsiEngine:ResolveFolderProperty} K{\footnote ResolveFolderProperty} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b ResolveFolderProperty Method \line\tx360\tab\fs18\b0{\uldb MsiEngine Object}{\v MsiEngine_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 This method insures that the designated property contains a full path to a folder.  If the property does not exist, it is create with the folder of the database  passed to the {\uldb Initialize}{\v MsiEngine_Initialize} method.  If a partial path is supplied, i.e. not commencing with a drive letter or UNC path,  the partial path is prefixed with the database folder. Partial paths beginning with  a dot or double dot are not supported. The method returns a boolean indicating  whether the property was initially defined or not. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .ResolveFolderProperty({\i property})} \par{\i object}\line Required. The MsiEngine object. \par{\i\b property}\line Required. Name of the property to be resolved.   \page #{\footnote MsiEngine_ValidateProductID} ${\footnote MsiEngine.ValidateProductID} +{\footnote MsiEngine:ValidateProductID} K{\footnote ValidateProductID} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b ValidateProductID Method \line\tx360\tab\fs18\b0{\uldb MsiEngine Object}{\v MsiEngine_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 This method returns a boolean value indicating if the Product ID is valid. In maintenance mode or if the {\uldb PIDTemplate}{\v Property_PIDTemplate} property is missing the method always returns true.  Otherwise it compares the content of the PIDTemplate property and the {\uldb PRODUCTID}{\v Property_PRODUCTID} property. It also supplies the random digits and verifies the checksum. For a description of the syntax of the template, see the {\uldb MaskedEdit}{\v ControlType_MaskedEdit} control description.  The PRODUCTID property should initially contain the part of the PID that is entered by the user. If the entry is validated, the PIDTemplate property is removed, and the PRODUCTID property is set to the complete validated value. Otherwise both  properties remain unchanged. If there is a CCP digit in the template, the value of that digit is stored in the {\uldb CCPTrigger}{\v Property_CCPTrigger} property.  This method is called from the CostInitialize action, in order to validate the PID if possible before the wizard sequence. If it fails, the user is asked for the input by the UI. The UI calls this method again to validate the entry and blocks further steps untill a valid entry is received.  The method is also called from the InstallValidate action, where it blocks the installation if the validation failed. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .ValidateProductID()} \par{\i object}\line Required. The MsiEngine object. \page #{\footnote MsiCostAdjuster_Object} ${\footnote MsiCostAdjuster Object} K{\footnote MsiCostAdjuster} +{\footnote Class:MsiCostAdjuster} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b MsiCostAdjuster Object class \line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 MsiCostAdjuster objects are created by special costing actions, which are responsible for both the  implementation and exposure of the object through the MsiCostAdjuster interface.  For this reason, these  objects cannot be created or accessed via automation.\line  \line See the {\uldb CostInitialize}{\v _msi_Action_CostInitialize@msi.hlp} and  {\uldb RegisterCostAdjuster}{\v MsiSelectionManager_RegisterCostAdjuster} topics for details on the  creation and usage of MsiCostAdjuster objects. \par\li0{\b Methods}\par\li180 {\uldb GetDynamicCost}{\v MsiCostAdjuster_GetDynamicCost}\line \page #{\footnote MsiCostAdjuster_GetDynamicCost} ${\footnote MsiCostAdjuster.GetDynamicCost} +{\footnote MsiCostAdjuster:GetDynamicCost} K{\footnote GetDynamicCost} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b GetDynamicCost method \line\tx360\tab\fs18\b0{\uldb MsiCostAdjuster Object}{\v MsiCostAdjuster_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 The GetDynamicCost method is responsible for calculating the total disk space cost associated with a  specified {\uldb Component}{\v _msi_Component_Table@msi.hlp} table entry, and returning the result.  Note that  because the actual implementation of each type of MsiCostAdjuster object is supplied by various  Installer actions, the actual calculations performed by GetDynamicCost are implementation-specific. \par\li0{\b Syntax}\par\li500\fi-320 IMsiRecord* piRec = {\i object}->{\b GetDynamicCost}(ristrComponent, riDestPath,iDynamicCost); \par{\i object}\line Required. The MsiCostAdjuster object. \par{\i\b IMsiString& ristrComponent}\line Required. A reference to the string name of the component in the {\uldb Component}{\v _msi_Component_Table@msi.hlp} table  that needs to be dynamically recosted.\line \par{\i\b IMsiPath& riDestPath}\line Required. a reference to a path object that represents the directory path associated with the component.\line \par{\i\b int& iDynamicCost}\line Required. a reference through which the dynamic cost as calculated by GetDynamicCost is returned to the caller.\line \par\fi0\li0{\b Remarks}\par\li180 For each MsiCostAdjuster object that is registered with the {\uldb Selection Manager}{\v MsiSelectionManager_Object}  using the {\uldb RegisterCostAdjuster}{\v MsiSelectionManager_RegisterCostAdjuster} method, the GetDynamicCost  method of that object will be called whenever the disk space cost associated with a specified  component needs to be re-calculated.  For instance, when the {\uldb CostFinalize}{\v Action_CostFinalize@msi.hlp}  action is executed, every component needs to be initialized, so all MsiCostAdjuster objects will be called  once for each entry in the {\uldb Component}{\v _msi_Component_Table@msi.hlp} table. Later, if the directory and/or  selection state associated with any component changes (i.e. through UI user interaction), the affected  component(s) will be recosted, causing all MsiCostAdjuster objects to be called again.\line  \line  See the {\uldb CostInitialize}{\v _msi_Action_CostInitialize@msi.hlp} topic for a complete discussion of costing. \page #{\footnote MsiSelectionManager_Object} ${\footnote MsiSelectionManager Object} K{\footnote MsiSelectionManager} +{\footnote Class:MsiSelectionManager} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b MsiSelectionManager Object \line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 The MsiSelectionManager object, associated with the MsiEngine object, manages the in-memory   Feature,Component and VolumeCost tables. It loads the Feature and Compnent tables from the database and adds  temporary columns used in the UI selection and costing actions. The VolumeCost table  is temporary and contains the accumulated disk cost. Other objects, such as MsiHandler, that need to make changes in the 'Select'  state of records within the Feature Table will do so via the Selection Manager.  For instance, the Handler can get a read-only reference to the loaded Feature Table via  the FeatureTable property, and can use a cursor to read values at will from any records  and columns in the table.  However, to alter the 'Select' state of a Feature Table record,  a selection request must be made through the Selection Manager's ConfigureFeature interface.  This is because the Selection Manager must handle the dynamic costing and updating of the  'Select' condition of each Feature record as the selection states of parent and child  Feature records change. During standard installations, the Selection Manager will normally be initialized by executing the  {\uldb CostInitialize}{\v _msi_Action_CostInitialize@msi.hlp}  action. \par\li0{\b Properties}\par\li180 {\uldb FeatureTable}{\v MsiSelectionManager_FeatureTable}\line {\uldb ComponentTable}{\v MsiSelectionManager_ComponentTable}\line \par\li0{\b Methods}\par\li180 {\uldb ConfigureFeature}{\v MsiSelectionManager_ConfigureFeature}\line {\uldb FreeSelectionTables}{\v MsiSelectionManager_FreeSelectionTables}\line {\uldb GetFeatureValidStates}{\v MsiSelectionManager_GetFeatureValidStates}\line {\uldb GetFeatureCost}{\v MsiSelectionManager_GetFeatureCost}\line {\uldb GetDescendentFeatureCost}{\v MsiSelectionManager_GetDescendentFeatureCost}\line {\uldb GetVolumeCostTable}{\v MsiSelectionManager_GetVolumeCostTable}\line {\uldb InitializeDynamicCost}{\v MsiSelectionManager_InitializeDynamicCost}\line {\uldb InitializeComponents}{\v MsiSelectionManager_InitializeComponents}\line {\uldb LoadSelectionTables}{\v MsiSelectionManager_LoadSelectionTables}\line {\uldb ProcessConditionTable}{\v MsiSelectionManager_ProcessConditionTable}\line {\uldb RecostDirectory}{\v MsiSelectionManager_RecostDirectory}\line {\uldb RegisterCostAdjuster}{\v MsiSelectionManager_RegisterCostAdjuster}\line {\uldb SetFeatureHandle}{\v MsiSelectionManager_SetFeatureHandle}\line {\uldb SetInstallLevel}{\v MsiSelectionManager_SetInstallLevel}\line {\uldb SetComponent}{\v MsiSelectionManager_SetComponent}\line \page #{\footnote MsiSelectionManager_SetReinstallMode} ${\footnote MsiSelectionManager.SetReinstallMode} +{\footnote MsiSelectionManager:SetReinstallMode} K{\footnote SetReinstallMode} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b SetReinstallMode Method \line\tx360\tab\fs18\b0{\uldb MsiSelectionManager Object}{\v MsiSelectionManager_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 Allows the caller to specify the validation mode(s) to be used during a reinstall.  SetReinstallMode should  normally be used in conjunction with a call to {\uldb ConfigureFeature}{\v MsiSelectionManager_ConfigureFeature},  to specify the feature or features to be reinstalled. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .SetReinstallMode(istrMode)} \par{\i object}\line Required. The MsiSelectionManager object. \par{\i istrMode}\line Required. A string containing letters that specify the type of reinstall to perform.  The letters accepted by  SetReinstallMode are identical to those specified for the {\uldb REINSTALLMODE}{\v Property_REINSTALLMODE} property. \par\fi0\li0{\b Remarks}\par\li180 The {\uldb SetInstallLevel}{\v MsiSelectionManager_SetInstallLevel} method must be called before  calling SetReinstallMode. \page #{\footnote MsiSelectionManager_FeatureTable} ${\footnote MsiSelectionManager.FeatureTable} +{\footnote MsiSelectionManager:FeatureTable} K{\footnote FeatureTable} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b FeatureTable Property \line\tx360\tab\fs18\b0{\uldb MsiSelectionManager Object}{\v MsiSelectionManager_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 Returns the loaded {\uldb Feature}{\v _msi_Feature_Table@msi.hlp} table as an MsiTable object.  Returns an object set to Nothing if table is not loaded. Read only. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .FeatureTable} \par{\i object}\line Required. The MsiSelectionManager object. \page #{\footnote MsiSelectionManager_ComponentTable} ${\footnote MsiSelectionManager.ComponentTable} +{\footnote MsiSelectionManager:ComponentTable} K{\footnote ComponentTable} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b ComponentTable Property \line\tx360\tab\fs18\b0{\uldb MsiSelectionManager Object}{\v MsiSelectionManager_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 Returns the loaded {\uldb Component}{\v _msi_Component_Table@msi.hlp} table as an MsiTable object.  Returns an object set to Nothing if table is not loaded. Read only. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .ComponentTable} \par{\i object}\line Required. The MsiSelectionManager object. \page #{\footnote MsiSelectionManager_GetVolumeCostTable} ${\footnote MsiSelectionManager.GetVolumeCostTable} +{\footnote MsiSelectionManager:GetVolumeCostTable} K{\footnote GetVolumeCostTable;VolumeCost table} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b GetVolumeCostTable method \line\tx360\tab\fs18\b0{\uldb MsiSelectionManager Object}{\v MsiSelectionManager_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 Returns the loaded VolumeCost table as an MsiTable object.  Returns an object set to Nothing if table is not loaded. Read only. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .GetVolumeCostTable()} \par{\i object}\line Required. The MsiSelectionManager object. \par\fi0\li0{\b Remarks}\par\li180 The VolumeCost table is a temporary table that is created in-memory by the  {\uldb SelectionManager}{\v MsiSelectionManager_Object}.  The purpose of this table is to track the  total disk space cost of the current install, on a volume by volume basis.  The VolumeCost table  consists of two columns:  \par {\i\b VolumeObject}\line Primary key, containing a pointer to an IMsiVolume object.\line \par {\i\b VolumeCost}\line Long integer specifying the total disk space cost attributed to this volume for the current install.\line \line \line Note: the value in the VolumeCost column will be accurate only after the {\uldb CostFinalize}{\v Action_CostFinalize@msi.hlp}  action has been executed.  See the {\uldb CostInitialize}{\v _msi_Action_CostInitialize@msi.hlp} topic for a complete  discussion of costing. \page #{\footnote MsiSelectionManager_GetFeatureValidStates} ${\footnote MsiSelectionManager.GetFeatureValidStates} +{\footnote MsiSelectionManager:GetFeatureValidStates} K{\footnote GetFeatureValidStates} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b GetFeatureValidStates method \line\tx360\tab\fs18\b0{\uldb MsiSelectionManager Object}{\v MsiSelectionManager_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 This method returns as the function result an integer representing bit flags, with each relevant bit  representing a 'valid' installation state for the specified feature. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .GetFeatureValidStates({\i feature})} \par{\i object}\line Required. The MsiSelectionManager object. \par{\i\b feature}\line Required. String name of feature item whose valid installation states are to be retrieved. \par\fi0\li0{\b Remarks}\par\li180 The return value is composed of bit flags, as follows:\line \line Bit 0: if set, 'iisLocal' is a valid state.\line Bit 1: if set, 'iisSource' is a valid state.\line The GetFeatureValidStates method determines state validity by querying all the components that  are linked to the specified feature (without taking into account the current installed state  of any component). If any of these components has a value of 'irsOptional' in the RunFromSource  column, or if at least one component is marked 'irstLocalOnly' AND at least one other component  is marked 'irsSourceOnly', then both 'iisLocal' and 'iisSource' are both valid states for the  feature.  If ALL components are set to 'irsLocalOnly', then 'iisLocal' is the only valid state.  If ALL components are set to 'irsSourceOnly', then 'iisSource' is the only valid state.\line \page #{\footnote MsiSelectionManager_GetDescendentFeatureCost} ${\footnote MsiSelectionManager.GetDescendentFeatureCost} +{\footnote MsiSelectionManager:GetDescendentFeatureCost} K{\footnote GetDescendentFeatureCost} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b GetDescendentFeatureCost method \line\tx360\tab\fs18\b0{\uldb MsiSelectionManager Object}{\v MsiSelectionManager_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 This method returns as the function result the total amount of disk space (in units of 512 bytes) required by the specified  feature, AND all that feature's children.  For each feature, the total cost is made up of the disk costs attributed  to every component linked to the feature. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .GetDescendentFeatureCost({\i feature,iAction})} \par{\i object}\line Required. The MsiSelectionManager object. \par{\i\b feature}\line Required. String name of feature item whose cost is to be retrieved. \par{\i\b iAction}\line Required. Specifies the action state to use when determining the feature cost.  For instance, if  'iisLocal' is specified, GetDescendentFeatureCost will return the disk space that would be required  were the specified feature and all its children to be installed locally.  The following enum values are acceptable: \line\line  {\b \f1 iisAbsent  = 0} - cost if feature and all subfeatures were to be removed.\line  {\b \f1 iisLocal   = 1} - cost if feature and all subfeatures were to be installed locally.\line  {\b \f1 iisSource  = 2} - cost if feature and all subfeatures were to be installed to run from the source media.\line  {\b \f1 iisCurrent = 4} - cost if feature and all subfeatures were to be installed in their current action state.\line \page #{\footnote MsiSelectionManager_GetAncestryFeatureCost} ${\footnote MsiSelectionManager.GetAncestryFeatureCost} +{\footnote MsiSelectionManager:GetAncestryFeatureCost} K{\footnote GetAncestryFeatureCost} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b GetAncestryFeatureCost method \line\tx360\tab\fs18\b0{\uldb MsiSelectionManager Object}{\v MsiSelectionManager_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 This method returns as the function result the total amount of disk space (in units of 512 bytes) required by the specified  feature, AND that of all the feature's parents (up to the root of the Feature table).  For each feature, the total cost  is made up of the disk costs attributed to every component linked to the feature. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .GetAncestryFeatureCost({\i feature, iAction})} \par{\i object}\line Required. The MsiSelectionManager object. \par{\i\b feature}\line Required. String name of feature item whose cost is to be retrieved. \par{\i\b iAction}\line Required. Specifies the action state (iisLocal, iisSource, or iisAbsent) to use when determining the feature cost.  For  instance, if iisLocal is specified, GetAncestryFeatureCost will return the disk space that would be required were  the specified feature and all its parent features to be installed locally. \page #{\footnote MsiSelectionManager_GetFeatureCost} ${\footnote MsiSelectionManager.GetFeatureCost} +{\footnote MsiSelectionManager:GetFeatureCost} K{\footnote GetFeatureCost} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b GetFeatureCost method \line\tx360\tab\fs18\b0{\uldb MsiSelectionManager Object}{\v MsiSelectionManager_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 This method returns as the function result the total amount of disk space (in units of 512 bytes) required by the specified  feature, NOT including that feature's children or parents.  This total cost is made up of the disk costs attributed  to every component linked to the feature. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .GetFeatureCost({\i feature,iAction})} \par{\i object}\line Required. The MsiSelectionManager object. \par{\i\b feature}\line Required. String name of feature item whose cost is to be retrieved. \par{\i\b iAction}\line Required. Specifies the action state (iisLocal, iisSource, or iisAbsent) to use when determining the feature cost.  For  instance, if iisAbsent is specified, GetFeatureCost will return the disk space freed up (i.e. a negative number) were the  feature to be removed. \page #{\footnote MsiSelectionManager_RecostDirectory} ${\footnote MsiSelectionManager.RecostDirectory} +{\footnote MsiSelectionManager:RecostDirectory} K{\footnote RecostDirectory} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b RecostDirectory method \line\tx360\tab\fs18\b0{\uldb MsiSelectionManager Object}{\v MsiSelectionManager_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 The RecostDirectory method must be called whenever the path associated with a directory in the  {\uldb Directory}{\v _msi_Directory_Table@msi.hlp} table changes.  In response, this method prompts each selection that  references the changed directory to recalculate its dynamic cost.\line \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .RecostDirectory({\i directoryName, oldPath})} \par{\i object}\line Required. The MsiSelectionManager object. \par{\i\b directoryName}\line Required. String name of directory item in the {\uldb Directory}{\v _msi_Directory_Table@msi.hlp} that has changed. \par{\i\b oldPath}\line Required. An MsiPath object that represents the directory item's path before the change. \par\fi0\li0{\b Remarks}\par\li180 The RecostDirectory method should be called only after the  {\uldb InitializeDynamicCost}{\v MsiSelectionManager_InitializeDynamicCost} method has been called  (this is normally done by the {\uldb CostFinalize}{\v Action_CostFinalize@msi.hlp} action). RecostDirectory  will typically be called only by the {\uldb DirectoryManager}{\v MsiDirectoryManager_Object}.\line  \line  See the {\uldb CostInitialize}{\v _msi_Action_CostInitialize@msi.hlp} topic for a complete discussion of costing. \page #{\footnote MsiSelectionManager_LoadSelectionTables} ${\footnote MsiSelectionManager.LoadSelectionTables} +{\footnote MsiSelectionManager:LoadSelectionTables} K{\footnote LoadSelectionTables} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b LoadSelectionTables Method \line\tx360\tab\fs18\b0{\uldb MsiSelectionManager Object}{\v MsiSelectionManager_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 Loads the {\uldb Feature}{\v _msi_Feature_Table@msi.hlp} and {\uldb Component}{\v _msi_Component_Table@msi.hlp} tables into memory and adds temporary columns used during costing and UI selection. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .LoadSelectionTables()} \par{\i object}\line Required. The MsiSelectionManager object. \par\fi0\li0{\b Remarks}\par\li180 LoadSelectionTable must be called before calling any other SelectionManager method. \page #{\footnote MsiSelectionManager_InitializeDynamicCost} ${\footnote MsiSelectionManager.InitializeDynamicCost} +{\footnote MsiSelectionManager:InitializeDynamicCost} K{\footnote InitializeDynamicCost} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b InitializeDynamicCost Interface Function \line\tx360\tab\fs18\b0{\uldb MsiSelectionManager Object}{\v MsiSelectionManager_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 Initializes the DynamicCost column of each record in the {\uldb Component}{\v _msi_Component_Table@msi.hlp} table.  InitializeDynamicCost does this by making a call to the  {\uldb GetDynamicCost}{\v MsiCostAdjuster_GetDynamicCost} method of each  {\uldb MsiCostAdjuster}{\v MsiCostAdjuster_Object} object that has been registered with the   {\uldb Selection Manager}{\v MsiSelectionManager_Object}, for each component in the  {\uldb Component}{\v _msi_Component_Table@msi.hlp} table.\line \line Note: InitializeDynamicCost is not available via automation - it is only available through the  IMsiSelectionManager C++ interface.  This is because dynamic cost calculations can only be performed by  registered MsiCostAdjuster objects, and these objects can only be created and registered from C++  (using the {\uldb RegisterCostAdjuster}{\v MsiSelectionManager_RegisterCostAdjuster} method). \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .InitializeDynamicCost()} \par{\i object}\line Required. The MsiSelectionManager object. \par\fi0\li0{\b Remarks}\par\li180 InitializeDynamicCost must be called only after the {\uldb Selection Manager}{\v MsiSelectionManager_Object}  has been initialized (which is typically done by the {\uldb CostInitialize}{\v _msi_Action_CostInitialize@msi.hlp}  action), and then only after any actions that register dynamic MsiCostAdjuster objects have been executed. \page #{\footnote MsiSelectionManager_RegisterCostAdjuster} ${\footnote MsiSelectionManager.RegisterCostAdjuster} +{\footnote MsiSelectionManager:RegisterCostAdjuster} K{\footnote RegisterCostAdjuster} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b RegisterCostAdjuster Interface Function \line\tx360\tab\fs18\b0{\uldb MsiSelectionManager Object}{\v MsiSelectionManager_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 Registers a dynamic {\uldb MsiCostAdjuster}{\v MsiCostAdjuster_Object} object with the  {\uldb Selection Manager}{\v MsiSelectionManager_Object}.  This object will then be called (through  the {\uldb GetDynamicCost}{\v MsiCostAdjuster_GetDynamicCost} method) whenever the dynamic cost of  a component needs to be recalculated.  For example, the {\uldb FileCost}{\v _msi_Action_FileCost@msi.hlp} action  creates and registers a special "file costing" version of the MsiCostAdjuster interface object.  Then,  when called by the {\uldb Selection Manager}{\v MsiSelectionManager_Object}, this object is responsible  for calculating the actual disk space costs for all the files in the {\uldb File}{\v _msi_File_Table@msi.hlp} table that  reference the specified component.\line \line Note: RegisterCostAdjuster is not available via automation - it is only available through the  IMsiSelectionManager C++ interface.  This is because there is no way to create MsiCostAdjuster objects  directly via automation - each different type of object exposed through the MsiCostAdjuster interface  is implemented and created internally by the appropriate Installer action. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .InitializeDynamicCost()} \par{\i object}\line Required. The MsiSelectionManager object. \par\fi0\li0{\b Remarks}\par\li180 RegisterCostAdjuster must be called only after the {\uldb Selection Manager}{\v MsiSelectionManager_Object}  has been initialized (which is typically done by the {\uldb CostInitialize}{\v _msi_Action_CostInitialize@msi.hlp}  action). \page #{\footnote MsiSelectionManager_FreeSelectionTables} ${\footnote MsiSelectionManager.FreeSelectionTables} +{\footnote MsiSelectionManager:FreeSelectionTables} K{\footnote FreeSelectionTables} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b FreeSelectionTables Method \line\tx360\tab\fs18\b0{\uldb MsiSelectionManager Object}{\v MsiSelectionManager_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 Frees the in-memory Feature and Component tables, along with the temporary computational and state columns.  The final Installed state column will be written to persistent storage. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .FreeSelectionTables()} \par{\i object}\line Required. The MsiSelectionManager object. \par\fi0\li0{\b Remarks}\par\li180 The return value for FreeSelectionTables is a boolean that indicates whether any components remain in an  installed state.  If ALL components are absent (i.e. the updated 'Installed' column of the  {\uldb Component}{\v _msi_Component_Table@msi.hlp} table contains either a NULL value, iisAbsent, or issReleased for all  components), false will be returned. \page #{\footnote MsiSelectionManager_SetFeatureHandle} ${\footnote MsiSelectionManager.SetFeatureHandle} +{\footnote MsiSelectionManager:SetFeatureHandle} K{\footnote SetFeatureHandle} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b SetFeatureHandle Method \line\tx360\tab\fs18\b0{\uldb MsiSelectionManager Object}{\v MsiSelectionManager_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 Stores an external handle to a Feature item, for use by UI display. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .SetFeatureHandle({\i feature, handle})} \par{\i object}\line Required. The MsiSelectionManager object. \par{\i\b feature}\line Required. String name of feature item, primary key of Feature table. \par{\i\b handle}\line Required. Integer handle value to store in designated Feature table row. \par\fi0\li0{\b Remarks}\par\li180 \page #{\footnote MsiSelectionManager_ProcessConditionTable} ${\footnote MsiSelectionManager.ProcessConditionTable} +{\footnote MsiSelectionManager:ProcessConditionTable} K{\footnote ProcessConditionTable} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b ProcessConditionTable Method \line\tx360\tab\fs18\b0{\uldb MsiSelectionManager Object}{\v MsiSelectionManager_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 The ProcessConditionTable method loads the {\uldb Condition Table}{\v _msi_Condition_Table@msi.hlp}, and  evaluates each conditional expression.  For those expressions that evaluate to iecTrue, the  value in the 'Level' column of the appropriate {\uldb Feature Table}{\v _msi_Feature_Table@msi.hlp}  entry will be set to the value specified in the {\uldb Condition Table}{\v _msi_Condition_Table@msi.hlp}. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .ProcessConditionTable()} \par{\i object}\line Required. The MsiSelectionManager object. \par\fi0\li0{\b Remarks}\par\li180 The {\uldb LoadSelectionTables}{\v MsiSelectionManager_LoadSelectionTables} method must be executed prior  to executing ProcessConditionTable.  In addition, after executing ProcessConditionTable, the  {\uldb SetInstallLevel}{\v MsiSelectionManager_SetInstallLevel} method should be called to update  the {\uldb Feature Table}{\v _msi_Feature_Table@msi.hlp} 'select' and 'Installed' states. \page #{\footnote MsiSelectionManager_InitializeComponents} ${\footnote MsiSelectionManager.InitializeComponents} +{\footnote MsiSelectionManager:InitializeComponents} K{\footnote InitializeComponents} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b InitializeComponents Method \line\tx360\tab\fs18\b0{\uldb MsiSelectionManager Object}{\v MsiSelectionManager_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 The InitializeComponents method initializes all components in the {\uldb Component}{\v _msi_Component_Table@msi.hlp} table,  evaluating the expression in the 'Condition' column of that table (all components for which this  conditional evaluates to iecFalse will be permanently disabled).  Note: InitializeComponents does not change  the 'Action' state of any component. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .InitializeComponents()} \par{\i object}\line Required. The MsiSelectionManager object. \par\fi0\li0{\b Remarks}\par\li180 The {\uldb LoadSelectionTables}{\v MsiSelectionManager_LoadSelectionTables} method must be executed prior  to executing InitializeComponents.  In addition, after executing InitializeComponents, the  {\uldb SetInstallLevel}{\v MsiSelectionManager_SetInstallLevel} method should be called - this will update  the 'Action' state of each component, based upon the state of the feature(s) in the   {\uldb Feature}{\v _msi_Feature_Table@msi.hlp} table that are linked to a particular component. \page #{\footnote MsiSelectionManager_SetInstallLevel} ${\footnote MsiSelectionManager.SetInstallLevel} +{\footnote MsiSelectionManager:SetInstallLevel} K{\footnote SetInstallLevel} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b SetInstallLevel Method \line\tx360\tab\fs18\b0{\uldb MsiSelectionManager Object}{\v MsiSelectionManager_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 This method sets the Install Level for the current installation to a specified value, and recalculates  the 'Select' and 'Installed' states for all features in the Feature table, and sets the 'Action' state  of each component in the {\uldb Component}{\v _msi_Component_Table@msi.hlp} table, based on the new level. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .SetInstallLevel({\i installLevel})} \par{\i object}\line Required. The MsiSelectionManager object. \par{\i installLevel}\line Required. The requested new install level. \par\fi0\li0{\b Remarks}\par\li180 The {\uldb InitializeComponents}{\v MsiSelectionManager_InitializeComponents} method must be executed prior  to executing SetInstallLevel. If 0 is passed for the installLevel parameter, the current install level will not be changed, but  all features will still be updated based on the current install level.  This functionality   could be used, for example, by the Handler module to reset all selections back to their initial  default states, at any point in the UI selection process. \page #{\footnote MsiSelectionManager_ConfigureFeature} ${\footnote MsiSelectionManager_ConfigureFeature} +{\footnote MsiSelectionManager:ConfigureFeature} K{\footnote ConfigureFeature} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b ConfigureFeature Method \line\tx360\tab\fs18\b0{\uldb MsiSelectionManager Object}{\v MsiSelectionManager_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 This method is used to request a change in the 'Select' state of a record in the  {\uldb Feature}{\v _msi_Feature_Table@msi.hlp} table, and of that feature's child records.  In turn, the 'Action' state of all the components linked to the changed Feature  records will also be updated appropriately, based on the new feature 'Select' state.  ConfigureFeature can also be used to configure all features at once, by specifying the  keyword 'ALL' instead of a specific feature name. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .ConfigureFeature({\i strFeature, iisState})} \par{\i object}\line Required. The MsiSelectionManager object. \par{\i\b strFeature}\line Required. A string specifying the name of the feature to be configured.  Alternatively, the reserved word "ALL"  (case insensitive) can be used, indicating that all features should be configured to the state specified by  iisState parameter.  For example, if 'iisAbsent' is specified in the iisState parameter, and "ALL" is specified in the  strFeature parameter, the entire product will be removed. \par{\i\b state}\line Required. Requested selection state, one of the following values:\line {\f1 Null (empty)  }:  Requests that no action is to be taken for this item.\line {\f1 iisAbsent    = 0}:  item is to be removed.\line {\f1 iisLocal     = 1}:  item is to be installed locally.\line {\f1 iisSource    = 2}:  item is to be installed from run from the source media.\line {\f1 iisReinstall = 3}:  if the feature is installed, reinstall in the same state.\line \par\fi0\li0{\b Remarks}\par\li180 The {\uldb SetInstallLevel}{\v MsiSelectionManager_SetInstallLevel} method must be called before  calling ConfigureFeature.  Also, note that if 'iisReinstall' is specified, the  {\uldb SetReinstallMode}{\v MsiSelectionManager_SetReinstallMode} method should be called first. When ConfigureFeature is called, the SelectionManager will attempt to set the 'Action' state of  each component tied to the specified feature to the specified state, as best as possible.  However, there are common situations when the request cannot be fully honored.  For example,  suppose a feature is tied to two components, Component A and Component B (via the   {\uldb FeatureComponents}{\v _msi_FeatureComponents_Table@msi.hlp} table, of course).  Also suppose that Component A is  authored with a 'RunFromSource' option of 'irsLocalOnly', and Component B is 'irsSourceOnly'.  In this case,  if ConfigureFeature is called with a requested state of either 'iisLocal' or 'iisSource', there is no way that  the request can be fully honored for both components.  However, both components will be turned 'ON', with  component A set to iisLocal, and component B set to iisSource.  \par If more than one feature is linked to a single component (a common scenario), the final 'Action' state of  that component will be determined as follows: if at least one feature calls for the component to be installed  locally, it will be installed 'iisLocal'; else, if at least one feature calls for the component to be run from  the source media, it will be installed 'iisSource', else, if at least one feature calls for the removal of  the component, the action state will be 'iisAbsent'. \page #{\footnote MsiSelectionManager_SetComponent} ${\footnote MsiSelectionManager.SetComponent} +{\footnote MsiSelectionManager:SetComponent} K{\footnote SetComponent} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b SetComponent Method \line\tx360\tab\fs18\b0{\uldb MsiSelectionManager Object}{\v MsiSelectionManager_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 This method is used to request a change in the 'Action' state of a record in the  {\uldb Component}{\v _msi_Component_Table@msi.hlp} table.  \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .SetComponent({\i component, state})} \par{\i object}\line Required. The MsiSelectionManager object. \par{\i\b component}\line Required. String name of component item, primary key of Component table. \par{\i\b state}\line Required. Requested action state, one of the following values:\line {\f1 Null (empty)  }:  Requests that no action is to be taken for this item.\line {\f1 iisAbsent    = 0}:  item is to be removed.\line {\f1 iisLocal     = 1}:  item is to be installed locally.\line {\f1 iisSource    = 2}:  item is to be installed from run from the source media.\line {\f1 iisReinstall = 3}: if installed, the item is to be reinstalled in the same state.\line \par\fi0\li0{\b Remarks}\par\li180 The {\uldb InitializeComponents}{\v MsiSelectionManager_InitializeComponents} method must be called before  calling SetComponent.  Also, note that if 'iisReinstall' is specified, the  {\uldb SetReinstallMode}{\v MsiSelectionManager_SetReinstallMode} method should be called first. \page #{\footnote MsiDirectoryManager_Object} ${\footnote MsiDirectoryManager Object} K{\footnote MsiDirectoryManager} +{\footnote Class:MsiDirectoryManager} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b MsiDirectoryManager Object \line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 The MsiDirectoryManager object, associated with the MsiEngine object,  manages the in-memory Directory table. It loads the table from the database  and stores references to MsiPath objects for each entry in temporary  columns.  The source  and target path objects may be retrieved from the table and target path  objects may be reset to different paths.  Changing the value of a target  path object updates any duplicates or children of that path  appropriately. \par\li0{\b Properties}\par\li180 {\uldb DirectoryTable}{\v MsiDirectoryManager_DirectoryTable}\line \par\li0{\b Methods}\par\li180 {\uldb LoadDirectoryTable}{\v MsiDirectoryManager_LoadDirectoryTable}\line {\uldb FreeDirectoryTable}{\v MsiDirectoryManager_FreeDirectoryTable}\line {\uldb CreateTargetPaths}{\v MsiDirectoryManager_CreateTargetPaths}\line {\uldb CreateSourcePaths}{\v MsiDirectoryManager_CreateSourcePaths}\line {\uldb GetTargetPath}{\v MsiDirectoryManager_GetTargetPath}\line {\uldb SetTargetPath}{\v MsiDirectoryManager_SetTargetPath}\line {\uldb GetSourcePath}{\v MsiDirectoryManager_GetSourcePath}\line \page #{\footnote MsiDirectoryManager_DirectoryTable} ${\footnote MsiDirectoryManager.DirectoryTable} +{\footnote MsiDirectoryManager:DirectoryTable} K{\footnote DirectoryTable} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b DirectoryTable Property \line\tx360\tab\fs18\b0{\uldb MsiDirectoryManager Object}{\v MsiDirectoryManager_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 Returns the loaded Directory table as an MsiTable object.  Returns an object set to Nothing if table is not loaded. Read only. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .DirectoryTable} \par{\i object}\line Required. The MsiDirectoryManager object. \page #{\footnote MsiDirectoryManager_LoadDirectoryTable} ${\footnote MsiDirectoryManager.LoadDirectoryTable} +{\footnote MsiDirectoryManager:LoadDirectoryTable} K{\footnote LoadDirectoryTable} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b LoadDirectoryTable Method \line\tx360\tab\fs18\b0{\uldb MsiDirectoryManager Object}{\v MsiDirectoryManager_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 Loads the {\uldb Directory table}{\v _msi_Directory_Table@msi.hlp} into memory and adds temporary columns to hold the path objects. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .LoadDirectoryTable()} \par{\i object}\line Required. The MsiDirectoryManager object. \par\fi0\li0{\b Remarks}\par\li180 !!Additional notes!!  \page #{\footnote MsiDirectoryManager_FreeDirectoryTable} ${\footnote MsiDirectoryManager.FreeDirectoryTable} +{\footnote MsiDirectoryManager:FreeDirectoryTable} K{\footnote FreeDirectoryTable} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b FreeDirectoryTable Method \line\tx360\tab\fs18\b0{\uldb MsiDirectoryManager Object}{\v MsiDirectoryManager_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 Frees the in-memory directory table along the the temporary columns holding the path objects.  There is no persistent information to be written to the database. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .FreeDirectoryTable({\i name, path})} \par{\i object}\line Required. The MsiDirectoryManager object. \page #{\footnote MsiDirectoryManager_CreateTargetPaths} ${\footnote MsiDirectoryManager.CreateTargetPaths} +{\footnote MsiDirectoryManager:CreateTargetPaths} K{\footnote CreateTargetPaths} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b CreateTargetPaths Method \line\tx360\tab\fs18\b0{\uldb MsiDirectoryManager Object}{\v MsiDirectoryManager_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 Creates the path objects for each target directory and puts the object  references in the temporary column added for the target path objects.  When not in Admin mode, defines properties for each target directory.  Target paths are resolved for each entry in the table in the  following way: \line\line Admin mode:\par\li500 {\b Roots:} If no property is defined and the entry is a root of the table,  an error will occur. \line\line {\b Non-roots:} If the entry is not a root, the path  is resolved to be the value of  DefaultDir appended to the path resolved  for the Directory_Parent entry. \par\li180 Non-Admin mode:\par\li500 {\b Properties:} If a property by the name of the Directory value  is defined, the path is resolved to its value. \line\line {\b Roots:} If no property is defined and the entry is a root of the table,  the path is resolved to the value of the {\uldb ROOTDRIVE}{\v Property_ROOTDRIVE}  property. \line\line {\b Non-roots:} If no property is defined and the entry is not a root, the path  is resolved to be the value of  DefaultDir appended to the path resolved  for the Directory_Parent entry. \line \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .CreateTargetPaths()} \par{\i object}\line Required. The MsiDirectoryManager object. \page #{\footnote MsiDirectoryManager_CreateSourcePaths} ${\footnote MsiDirectoryManager.CreateSourcePaths} +{\footnote MsiDirectoryManager:CreateSourcePaths} K{\footnote CreateSourcePaths} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b CreateSourcePaths Method \line\tx360\tab\fs18\b0{\uldb MsiDirectoryManager Object}{\v MsiDirectoryManager_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 Creates the path objects for each source directory and puts the object  references in the temporary column added for the source path objects.  The source paths are resolved for each entry in the Directory table  in the following way: \line\line {\b Roots:} The value in the DefaultDir field is  assumed to be the name of the property defining the full path of the  directory.  If the property is not defined, the value of the  {\i defaultPath} argument is used.  If this argument is an empty string,  an error will occur. \line\line {\b Non-roots:} The path of a non-root is resolved to be the value of  DefaultDir appended to the path resolved  for the Directory_Parent entry.  \line \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .CreateSourcePaths({\i defaultPath})} \par{\i object}\line Required. The MsiDirectoryManager object. \par{\i defaultPath}\line Required. The default path used for source roots when the properties  for those roots are undefined.  If an empty string is passed,  an error will occur when a source root property is undefined. \par\fi0\li0{\b Remarks}\par\li180 During a cabinet install, this method only validates the value of the  {\uldb SOURCEDIR}{\v Property_SOURCEDIR} property. \page #{\footnote MsiDirectoryManager_GetTargetPath} ${\footnote MsiDirectoryManager.GetTargetPath} +{\footnote MsiDirectoryManager:GetTargetPath} K{\footnote GetTargetPath} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b GetTargetPath Method \line\tx360\tab\fs18\b0{\uldb MsiDirectoryManager Object}{\v MsiDirectoryManager_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 Returns the MsiPath object associated with the named target directory.  If the name does not exist or if the target path objects have not been created, an empty object is returned. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .GetTargetPath({\i name})} \par{\i object}\line Required. The MsiDirectoryManager object. \par{\i\b name}\line Required. Unique name associated with directory row, primary key. \par\fi0\li0{\b Remarks}\par\li180 \page #{\footnote MsiDirectoryManager_SetTargetPath} ${\footnote MsiDirectoryManager.SetTargetPath} +{\footnote MsiDirectoryManager:SetTargetPath} K{\footnote SetTargetPath} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b SetTargetPath Method \line\tx360\tab\fs18\b0{\uldb MsiDirectoryManager Object}{\v MsiDirectoryManager_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 Changes the path specification for the MsiPath object associated  with a named target directory in the in-memory Directory table.  Also, the path specifications of all other path objects in the table  that are either  children of or equivalent to the changed path are updated to reflect  the change.  The properties for each affected path are also updated.  In addition, {\uldb RecostDirectory}{\v MsiSelectionManager_RecostDirectory}  is called for each affected path. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .SetTargetPath({\i name, path})} \par{\i object}\line Required. The MsiDirectoryManager object. \par{\i\b name}\line Required. Unique name associated with directory row, primary key. \par{\i\b path}\line Required. The complete path specification for the directory. \par\fi0\li0{\b Remarks}\par\li180 If an error occurs in this method, all updated paths and properties are reverted to  their previous values, and RecostDirectory is called again for each updated path.  Therefore, it is safe to treat errors returned by this  method as non-fatal. \page #{\footnote MsiDirectoryManager_GetSourcePath} ${\footnote MsiDirectoryManager.GetSourcePath} +{\footnote MsiDirectoryManager:GetSourcePath} K{\footnote GetSourcePath} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b GetSourcePath Method \line\tx360\tab\fs18\b0{\uldb MsiDirectoryManager Object}{\v MsiDirectoryManager_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 See {\uldb MsiGetSourcePath}{\v _msi_MsiGetSourcePath@msi.hlp}. The 'name' parameter  in this method is equivalent to the 'szFolder' parameter in MsiGetSourcePath. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .GetSourcePath({\i name})} \par{\i object}\line Required. The MsiDirectoryManager object. \par{\i\b name}\line Required. Unique name associated with directory row, primary key. \par\fi0\li0{\b Remarks}\par\li180 {\uldb LoadDirectoryTable}{\v MsiDirectoryManager_LoadDirectoryTable}  must be called with {\i addSourcePath} set to true before  this method is called. \line\line During a cabinet install, this method always returns an MsiPath object representing  the path defined by the {\uldb SOURCEDIR}{\v Property_SOURCEDIR} property. \page #{\footnote MsiHandler_Object} ${\footnote MsiHandler Object} K{\footnote MsiHandler} +{\footnote Class:MsiHandler} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b MsiHandler Object \line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 MsiHandler is the class handling the messages sent by the engine. The handler has no interface in the  direction of the dialogs, since a generic dialog has no need of talking to the handler. The handler in  response to the actions and messages received from the engine starts wizard sequences, puts up individual  modal or modeless dialogs, posts progress messages, shows error messages and performs custom actions. After creating the Handler object, it must be initialized before any other method or property is used.  This initialization happens through the Initialize method of the Engine.  If any method or property is attempted on an uninitialized Handler object it will assert.  Before initialization the Handler object has no access to the Engine or Services,  therefore it can not create or send a reasonable error message.  At the end of its life a Handler object has to be terminated before it is destroyed.  This termination is performed through the Terminate method of the Engine. \par\li0{\b Methods}\par\li180 {\uldb Break}{\v MsiHandler_Break}\line {\uldb DoAction}{\v MsiHandler_DoAction}\line {\uldb Message}{\v MsiHandler_Message}\line \page #{\footnote MsiDialogHandler_Object} ${\footnote MsiDialogHandler Object} K{\footnote MsiDialogHandler} +{\footnote Class:MsiDialogHandler} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b MsiDialogHandler Object \line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 MsiDialogHandler is the interface of the Handler which creates and deletes dialogs. To get this interface, use the {\uldb GetInterface}{\v MsiBase_GetInterface} method on an existing {\uldb MsiHandler}{\v MsiHandler_Object}. After creating the Handler object, it must be initialized before any other method or property is used.  This initialization happens through the Initialize method of the Engine.  If any method or property is attempted on an uninitialized Handler object it will assert.  Before initialization the Handler object has no access to the Engine or Services,  therefore it can not create or send a reasonable error message.  At the end of its life a Handler object has to be terminated before it is destroyed.  This termination is performed through the Terminate method of the Engine. \par\li0{\b Properties}\par\li180 {\uldb Dialog}{\v MsiDialogHandler_Dialog}\line {\uldb DialogFromWindow}{\v MsiDialogHandler_DialogFromWindow}\line \par\li0{\b Methods}\par\li180 {\uldb AddDialog}{\v MsiDialogHandler_AddDialog}\line {\uldb DialogCreate}{\v MsiDialogHandler_DialogCreate}\line {\uldb RemoveDialog}{\v MsiDialogHandler_RemoveDialog}\line \page #{\footnote MsiHandler_Message} ${\footnote MsiHandler.Message} +{\footnote MsiHandler:Message} K{\footnote Message} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b Message Method \line\tx360\tab\fs18\b0{\uldb MsiHandler Object}{\v MsiHandler_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 Processes various type of messages and notifications.  See {uldb MsiMessage.Message}{\v MsiMessage_Message}  for message types and return codes. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .Message({\i kind, record})} \par{\i object}\line Required. The MsiHandler object. \par{\i\b kind}\line Required. The message type, one of imtEnum, as described below: \par{\i\b record}\line Required. An MsiRecord object containing message-specific data fields. \page #{\footnote MsiHandler_DoAction} ${\footnote MsiHandler.DoAction} +{\footnote MsiHandler:DoAction} K{\footnote DoAction} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b DoAction Method \line\tx360\tab\fs18\b0{\uldb MsiHandler Object}{\v MsiHandler_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 Request to perform a named action. Normally this is the name of a dialog,  which is then constructed from information queried from the UI database  tables. However, actions may be implemented as functions. When the {\b DoAction}  method is called on the {\b MsiEngine} object and the requested action is not  found, the call is delegated to its {\b MsiHandler} object. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .DoAction({\i action})} \par{\i object}\line Required. The MsiHandler object. \par{\i\b action}\line Required. Name of the action. \page #{\footnote MsiHandler_Break} ${\footnote MsiHandler.Break} +{\footnote MsiHandler:Break} K{\footnote Break} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b Break Method \line\tx360\tab\fs18\b0{\uldb MsiHandler Object}{\v MsiHandler_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 Asynchronous call to terminate execution of a {\b DoAction} or {\b Message}  method. If a UI window is waiting in a message loop, this call should  indicate that the loop should terminate and return the status: iesUserExit. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .Break} \par{\i object}\line Required. The MsiHandler object. \page #{\footnote MsiDialogHandler_DialogCreate} ${\footnote MsiDialogHandler.DialogCreate} +{\footnote MsiDialogHandler:DialogCreate} K{\footnote DialogCreate} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b DialogCreate Method \line\tx360\tab\fs18\b0{\uldb MsiDialogHandler Object}{\v MsiDialogHandler_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 Creates a blank {\b MsiDialog} object. All internal variables are uninitialized, the dialog object is not ready for any other call  except {\b WindowCreate}. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .DialogCreate({\i type})} \par{\i object}\line Required. The MsiDialogHandler object. \par{\i\b type}\line Required. The {\uldb type}{\v Dialog_Overview} of the desired dialog. \page #{\footnote MsiDialogHandler_Dialog} ${\footnote MsiDialogHandler.Dialog} +{\footnote MsiDialogHandler:Dialog} K{\footnote Dialog} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b Dialog Property \line\tx360\tab\fs18\b0{\uldb MsiDialogHandler Object}{\v MsiDialogHandler_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 The {\b MsiDialog} object corresponding to the name.  Read only. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .Dialog({\i name})} \par{\i object}\line Required. The MsiDialogHandler object. \par{\i\b name}\line Required. The string representing the dialog. \page #{\footnote MsiDialogHandler_DialogFromWindow} ${\footnote MsiDialogHandler.DialogFromWindow} +{\footnote MsiDialogHandler:DialogFromWindow} K{\footnote DialogFromWindow} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b DialogFromWindow Property \line\tx360\tab\fs18\b0{\uldb MsiDialogHandler Object}{\v MsiDialogHandler_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 The {\b MsiDialog} object corresponding to the passed window reference.  Read only. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .DialogFromWindow({\i window})} \par{\i object}\line Required. The MsiDialogHandler object. \par{\i\b window}\line Required. WIN: The HWND of the window associated with the dialog. MAC: The WindowPtr of the window associated with the dialog. \page #{\footnote MsiDialogHandler_AddDialog} ${\footnote MsiDialogHandler.AddDialog} +{\footnote MsiDialogHandler:AddDialog} K{\footnote AddDialog} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b AddDialog Method \line\tx360\tab\fs18\b0{\uldb MsiDialogHandler Object}{\v MsiDialogHandler_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 Adds a dialog to the handler internal tables. It also initializes the dialog with the data  provided in the record and in the pointers. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .AddDialog({\i dialog, parent, record, controleventtable, controlconditiontable, eventmappingtable})} \par{\i object}\line Required. The MsiDialogHandler object. \par{\i\b dialog}\line Required. Pointer to the previously created blank dialog. \par{\i\b parent}\line Pointer to the parent dialog. Can be null. \par{\i\b record}\line Record of data used to initialize the dialog. Required. The fields of the record correspond to the columns of the {\uldb Dialog Table}{\v _msi_Dialog_Table@msi.hlp} in the same order.\line \par{\i\b controleventtable}\line Pointer to the {\uldb ControlEvent table}{\v _msi_ControlEvent_Table@msi.hlp}. Can be null. \par{\i\b controlconditiontabel}\line Pointer to the {\uldb ControlCondition table}{\v _msi_ControlCondition_Table@msi.hlp}. Can be null. \par{\i\b eventmappingtable}\line Pointer to the {\uldb EventMapping table}{\v _msi_EventMapping_Table@msi.hlp}. Can be null. \page #{\footnote MsiDialogHandler_RemoveDialog} ${\footnote MsiDialogHandler.RemoveDialog} +{\footnote MsiDialogHandler:RemoveDialog} K{\footnote RemoveDialog} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b RemoveDialog Method \line\tx360\tab\fs18\b0{\uldb MsiDialogHandler Object}{\v MsiDialogHandler_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 Removes a dialog from the handler internal tables. It also destroys the window and the object corresponding to the dialog. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .RemoveDialog({\i dialog})} \par{\i object}\line Required. The MsiDialogHandler object. \par{\i\b dialog}\line Required. Pointer to the dialog to be removed. \page #{\footnote MsiDialog_Object} ${\footnote MsiDialog Object} K{\footnote MsiDialog} +{\footnote Class:MsiDialog} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b MsiDialog Object \line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 MsiDialog is the interface of the dialog object visible to the handler.  \par\li0{\b Properties}\par\li180 {\uldb Control}{\v MsiDialog_Control}\line {\uldb Handler}{\v MsiEvent_Handler}\line {\uldb IntegerValue}{\v MsiDialog_IntegerValue}\line {\uldb StringValue}{\v MsiDialog_StringValue}\line \par\li0{\b Methods}\par\li180 {\uldb AddControl}{\v MsiDialog_AddControl}\line {\uldb Attribute}{\v MsiDialog_Attribute}\line {\uldb ControlCreate}{\v MsiDialog_ControlCreate}\line {\uldb EventAction}{\v MsiDialog_EventAction}\line {\uldb Execute}{\v MsiDialog_Execute}\line {\uldb FinishCreate}{\v MsiDialog_FinishCreate}\line {\uldb HandleEvent}{\v MsiDialog_HandleEvent}\line {\uldb PropertyChanged}{\v MsiDialog_PropertyChanged}\line {\uldb RemoveControl}{\v MsiDialog_RemoveControl}\line {\uldb Reset}{\v MsiDialog_Reset}\line {\uldb Visible}{\v MsiDialog_Visible}\line \page #{\footnote MsiDialog_Control} ${\footnote MsiDialog.Control} +{\footnote MsiDialog:Control} K{\footnote Control} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b Database Property \line\tx360\tab\fs18\b0{\uldb MsiDialog Object}{\v MsiDialog_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 The {\b MsiControl} object corresponding to the name.  Read only. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .Control({\i name})} \par{\i object}\line Required. The MsiDialog object. \par{\i\b name}\line Required. The string representing the control. \page #{\footnote MsiDialog_StringValue} ${\footnote MsiDialog.StringValue} +{\footnote MsiDialog:StringValue} K{\footnote StringValue} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b Database Property \line\tx360\tab\fs18\b0{\uldb MsiDialog Object}{\v MsiDialog_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 The string value of the dialog.  Read only. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .StringValue} \par{\i object}\line Required. The MsiDialog object. \page #{\footnote MsiDialog_IntegerValue} ${\footnote MsiDialog.IntegerValue} +{\footnote MsiDialog:IntegerValue} K{\footnote IntegerValue} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b Database Property \line\tx360\tab\fs18\b0{\uldb MsiDialog Object}{\v MsiDialog_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 The integer value of the dialog.  Read only. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .IntegerValue} \par{\i object}\line Required. The MsiDialog object. \page #{\footnote MsiDialog_Visible} ${\footnote MsiDialog.Visible} +{\footnote MsiDialog:Visible} K{\footnote Visible} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b Visible Method \line\tx360\tab\fs18\b0{\uldb MsiDialog Object}{\v MsiDialog_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 Depending on the argument, shows or hides the dialog. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .Visible = {\i show}} \par{\i object}\line Required. The MsiDialog object. \par{\i\b show}\line Required. A Boolean value showing whether to show or hide the dialog. True means show, False means hide. \page #{\footnote MsiDialog_ControlCreate} ${\footnote MsiDialog.ControlCreate} +{\footnote MsiDialog:ControlCreate} K{\footnote ControlCreate} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b ControlCreate Method \line\tx360\tab\fs18\b0{\uldb MsiDialog Object}{\v MsiDialog_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 Creates a blank, uninitialized control of the named type. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .ControlCreate({\i type})} \par{\i object}\line Required. The MsiDialog object. \par{\i\b type}\line Required. The name of the {\uldb control type}{\v Control_Overview}.  The author can specify a type that does not appear in the above list if there is code for such a custom control. \page #{\footnote MsiDialog_Attribute} ${\footnote MsiDialog.Attribute} +{\footnote MsiDialog:Attribute} K{\footnote Attribute} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b Attribute Method \line\tx360\tab\fs18\b0{\uldb MsiDialog Object}{\v MsiDialog_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 A general method allowing to get or set the value of some attributes of the dialog. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .Attribute({\i set, attributename, record})} \par{\i object}\line Required. The MsiDialog object. \par{\i\b set}\line Required. A Boolean value showing whether to set or get the value of the named attribute. True means set, False means get. \par{\i\b attributename}\line The name of the {\uldb attribute}{\v Dialog_Overview} to be set or get.  \par{\i\b record}\line Required. The record to be filled in in case of get, or the record of the values to be set. The record contains one field, except in the cases noted in the above table. \page #{\footnote MsiDialog_AddControl} ${\footnote MsiDialog.AddControl} +{\footnote MsiDialog:AddControl} K{\footnote AddControl} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b AddControl Method \line\tx360\tab\fs18\b0{\uldb MsiDialog Object}{\v MsiDialog_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 Adds a control to the dialog internal tables. It also initializes the control with the data  provided in the record. For compatibility with older scripts, if the control is NULL, it is equivalent to calling the {\uldb FinishCreate}{\v MsiDialog_FinishCreate} method.  At least one non-null control has to be added to the dialog, before FinishCreate is called.  \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .AddControl({\i control, record})} \par{\i object}\line Required. The MsiDialog object. \par{\i\b control}\line Required. The pointer to the previously created blank control, or NULL. \par{\i\b record}\line Required. The data used at the initialization of the control. The fields are as follows:\line Name of the control\line Type\line X coordinate\line Y coordinate\line Widht\line Height\line Attributes\line Property associated with the control\line Text\line Next control in the tab order\line Help string\line These fields correspond to those of the {\uldb Control Table}{\v _msi_Control_Table@msi.hlp}.\line \page #{\footnote MsiDialog_FinishCreate} ${\footnote MsiDialog.FinishCreate} +{\footnote MsiDialog:FinishCreate} K{\footnote FinishCreate} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b FinishCreate Method \line\tx360\tab\fs18\b0{\uldb MsiDialog Object}{\v MsiDialog_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 Signals to the dialog that we are done adding controls, it  can resolve the next pointers. At least one non-null control has to be added to the dialog, before this method is called.  This method has to be called before any other method can be used on the dialog.  \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .FinishCreate} \par{\i object}\line Required. The MsiDialog object. \page #{\footnote MsiDialog_RemoveControl} ${\footnote MsiDialog.RemoveControl} +{\footnote MsiDialog:RemoveControl} K{\footnote RemoveControl} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b RemoveControl Method \line\tx360\tab\fs18\b0{\uldb MsiDialog Object}{\v MsiDialog_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 Removes a control from the dialog internal tables. It does not change the permanent tables!  If some change is needed in those, than you have to do it yourself!  Also it does not check if the removed control was the default button.   \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .RemoveControl({\i control})} \par{\i object}\line Required. The MsiDialog object. \par{\i\b control}\line Required. The pointer to the previously created control. \page #{\footnote MsiDialog_Execute} ${\footnote MsiDialog.Execute} +{\footnote MsiDialog:Execute} K{\footnote Execute} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b Execute Method \line\tx360\tab\fs18\b0{\uldb MsiDialog Object}{\v MsiDialog_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 Runs a modal dialog. It makes the dialog visible, then waits in the message loop to perform the user's commands.  Returns a record showing the exit status of the dialog. This method should not be called on a modeless dialog. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .Execute} \par{\i object}\line Required. The MsiDialog object. \page #{\footnote MsiDialog_Reset} ${\footnote MsiDialog.Reset} +{\footnote MsiDialog:Reset} K{\footnote Reset} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b Reset Method \line\tx360\tab\fs18\b0{\uldb MsiDialog Object}{\v MsiDialog_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 Resets the dialog. It instructs all the controls to restore the original value of the properties they have changed. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .Reset} \par{\i object}\line Required. The MsiDialog object. \page #{\footnote MsiDialog_Handler} ${\footnote MsiDialog.Handler} +{\footnote MsiDialog:Handler} K{\footnote HANDLER} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b Database Property \line\tx360\tab\fs18\b0{\uldb MsiDialog Object}{\v MsiDialog_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 The {\b MsiHandler} object used by the dialog.  Read only. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .Handler} \par{\i object}\line Required. The MsiDialog object. \page #{\footnote MsiDialog_EventAction} ${\footnote MsiDialog.EventAction} +{\footnote MsiDialog:EventAction} K{\footnote EventAction} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b EventAction Method \line\tx360\tab\fs18\b0{\uldb MsiDialog Object}{\v MsiDialog_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 It finds all the subscribers of the named event and performs the given action on them. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .EventAction({\i eventname, action})} \par{\i object}\line Required. The MsiDialog object. \par{\i\b eventname}\line Required. The name of the event whose subscribers have to be found. \par{\i\b action}\line Required. The action to be performed on the subscribers of the event. \page #{\footnote MsiDialog_HandleEvent} ${\footnote MsiDialog.HandleEvent} +{\footnote MsiDialog:HandleEvent} K{\footnote HandleEvent} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b HandleEvent Method \line\tx360\tab\fs18\b0{\uldb MsiDialog Object}{\v MsiDialog_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 This method triggers a control event. For example when a button is pushed that has to start an event, it uses this method to notify the publisher of the event. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .HandleEvent({\i eventname, argument})} \par{\i object}\line Required. The MsiDialog object. \par{\i\b eventname}\line Required. The name of the event. \par{\i\b argument}\line Required. The argument of the event. \page #{\footnote MsiDialog_PropertyChanged} ${\footnote MsiDialog.PropertyChanged} +{\footnote MsiDialog:PropertyChanged} K{\footnote PropertyChanged} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b PropertyChanged Method \line\tx360\tab\fs18\b0{\uldb MsiDialog Object}{\v MsiDialog_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 This method is called when a control changes a property value. The method scans the ControlCondition table to see if some action must be taken in response to this change. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .PropertyChanged({\i property, control})} \par{\i object}\line Required. The MsiDialog object. \par{\i\b property}\line The name of the property whose value has changed. Can be null. \par{\i\b control}\line The name of the control that reports the change. Can be null. This is used to avoid a control being called in response to its own change. \page #{\footnote MsiEvent_Object} ${\footnote MsiEvent Object} K{\footnote MsiEvent} +{\footnote Class:MsiEvent} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b MsiEvent Object \line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 MsiEvent is the interface of the dialog object visible to the controls.  \par\li0{\b Properties}\par\li180 {\uldb Control}{\v MsiEvent_Control}\line {\uldb Engine}{\v MsiEvent_Engine}\line {\uldb Handler}{\v MsiEvent_Handler}\line {\uldb IntegerValue}{\v MsiEvent_IntegerValue}\line {\uldb StringValue}{\v MsiEvent_StringValue}\line \par\li0{\b Methods}\par\li180 {\uldb Attribute}{\v MsiEvent_Attribute}\line {\uldb ControlActivated}{\v MsiEvent_ControlActivated}\line {\uldb EventAction}{\v MsiEvent_EventAction}\line {\uldb HandleEvent}{\v MsiEvent_HandleEvent}\line {\uldb PropertyChanged}{\v MsiEvent_PropertyChanged}\line {\uldb PublishEvent}{\v MsiEvent_PublishEvent}\line {\uldb ReadyToChangeFocus}{\v MsiEvent_ReadyToChangeFocus}\line {\uldb RegisterControlEvent}{\v MsiEvent_RegisterControlEvent}\line {\uldb SetFocus}{\v MsiEvent_SetFocus}\line \page #{\footnote MsiEvent_Control} ${\footnote MsiEvent.Control} +{\footnote MsiEvent:Control} K{\footnote Control} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b Database Property \line\tx360\tab\fs18\b0{\uldb MsiEvent Object}{\v MsiEvent_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 The {\b MsiControl} object corresponding to the name.  Read only. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .Control({\i name})} \par{\i object}\line Required. The MsiEvent object. \par{\i\b name}\line Required. The string representing the control. \page #{\footnote MsiEvent_Engine} ${\footnote MsiEvent.Engine} +{\footnote MsiEvent:Engine} K{\footnote ENGINE} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b Engine Property \line\tx360\tab\fs18\b0{\uldb MsiEvent Object}{\v MsiEvent_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 The {\b MsiEngine} object used by the event.   Read only. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .Engine} \par{\i object}\line Required. The MsiEvent object. \page #{\footnote MsiEvent_StringValue} ${\footnote MsiEvent.StringValue} +{\footnote MsiEvent:StringValue} K{\footnote StringValue} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b Database Property \line\tx360\tab\fs18\b0{\uldb MsiEvent Object}{\v MsiEvent_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 The string value of the event.  Read only. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .StringValue} \par{\i object}\line Required. The MsiEvent object. \page #{\footnote MsiEvent_IntegerValue} ${\footnote MsiEvent.IntegerValue} +{\footnote MsiEvent:IntegerValue} K{\footnote IntegerValue} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b Database Property \line\tx360\tab\fs18\b0{\uldb MsiEvent Object}{\v MsiEvent_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 The integer value of the event.  Read only. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .IntegerValue} \par{\i object}\line Required. The MsiEvent object. \page #{\footnote MsiEvent_Handler} ${\footnote MsiEvent.Handler} +{\footnote MsiEvent:Handler} K{\footnote HANDLER} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b Database Property \line\tx360\tab\fs18\b0{\uldb MsiEvent Object}{\v MsiEvent_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 The {\b MsiHandler} object used by the dialog.  Read only. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .Handler} \par{\i object}\line Required. The MsiEvent object. \page #{\footnote MsiEvent_PropertyChanged} ${\footnote MsiEvent.PropertyChanged} +{\footnote MsiEvent:PropertyChanged} K{\footnote PropertyChanged} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b PropertyChanged Method \line\tx360\tab\fs18\b0{\uldb MsiEvent Object}{\v MsiEvent_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 This method is called when a control changes a property value. The method scans the ControlCondition table to see if some action must be taken in response to this change. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .PropertyChanged({\i property, control})} \par{\i object}\line Required. The MsiEvent object. \par{\i\b property}\line The name of the property whose value has changed. Can be null. \par{\i\b control}\line The name of the control that reports the change. Can be null. This is used to avoid a control being called in response to its own change. \page #{\footnote MsiEvent_ControlActivated} ${\footnote MsiEvent.ControlActivated} +{\footnote MsiEvent:ControlActivated} K{\footnote ControlActivated} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b ControlActivated Method \line\tx360\tab\fs18\b0{\uldb MsiEvent Object}{\v MsiEvent_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 This method is called when a control is activated (e.g. a button is pushed). The method scans the ControlEvent table to see if some event is triggered by this control. If an event is found, the argument is formatted using {\uldb FormatText}{\v MsiEngine_FormatText}. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .ControlActivated({\i control})} \par{\i object}\line Required. The MsiEvent object. \par{\i\b control}\line The name of the control that was actived. \page #{\footnote MsiEvent_RegisterControlEvent} ${\footnote MsiEvent.RegisterControlEvent} +{\footnote MsiEvent:RegisterControlEvent} K{\footnote RegisterControlEvent} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b RegisterControlEvent Method \line\tx360\tab\fs18\b0{\uldb MsiEvent Object}{\v MsiEvent_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 This method is called by a control to register/unregister as a publisher of some event. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .RegisterControlEvent({\i control, toregister, event})} \par{\i object}\line Required. The MsiEvent object. \par{\i\b control}\line The name of the control registering/unregistering. \par{\i\b toregister}\line A Boolean value showing whether the control is registering or unregistering. \par{\i\b event}\line The name of the event. \page #{\footnote MsiEvent_HandleEvent} ${\footnote MsiEvent.HandleEvent} +{\footnote MsiEvent:HandleEvent} K{\footnote HandleEvent} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b HandleEvent Method \line\tx360\tab\fs18\b0{\uldb MsiEvent Object}{\v MsiEvent_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 This method triggers a control event. For example when a button is pushed that has to start an event, it uses this method to notify the publisher of the event. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .HandleEvent({\i eventname, argument})} \par{\i object}\line Required. The MsiEvent object. \par{\i\b eventname}\line Required. The name of the event. \par{\i\b argument}\line Required. The argument of the event. \page #{\footnote MsiEvent_Escape} ${\footnote MsiEvent.Escape} +{\footnote MsiEvent:Escape} K{\footnote Escape} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b Escape Method \line\tx360\tab\fs18\b0{\uldb MsiEvent Object}{\v MsiEvent_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 This method is called when the Escape key or the close button is hit on a dialog. The method pushes the designated default button. (see {\uldb Dialog Table}{\v _msi_Dialog_Table@msi.hlp}) \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .Escape} \par{\i object}\line Required. The MsiEvent object. \page #{\footnote MsiEvent_PublishEvent} ${\footnote MsiEvent.PublishEvent} +{\footnote MsiEvent:PublishEvent} K{\footnote PublishEvent} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b PublishEvent Method \line\tx360\tab\fs18\b0{\uldb MsiEvent Object}{\v MsiEvent_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 Finds all the subscribers of an event and notifies them that the event was published. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .PublishEvent({\i eventname, argument})} \par{\i object}\line Required. The MsiEvent object. \par{\i\b eventname}\line Required. The name of the event whose subscribers have to be found. \par{\i\b argument}\line Required. A record representing the argument of the event. \page #{\footnote MsiEvent_Attribute} ${\footnote MsiEvent.Attribute} +{\footnote MsiEvent:Attribute} K{\footnote Attribute} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b Attribute Method \line\tx360\tab\fs18\b0{\uldb MsiEvent Object}{\v MsiEvent_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 A general method allowing to get or set the value of some attributes of the dialog. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .Attribute({\i set, attributename, record})} \par{\i object}\line Required. The MsiEvent object. \par{\i\b set}\line Required. A Boolean value showing whether to set or get the value of the named attribute. True means set, False means get. \par{\i\b attributename}\line The name of the {\uldb attribute}{\v Dialog_Overview} to be set or get.  \par{\i\b record}\line Required. The record to be filled in in case of get, or the record of the values to be set. The record contains one field, except in the cases noted in the above table. \page #{\footnote MsiEvent_EventAction} ${\footnote MsiEvent.EventAction} +{\footnote MsiEvent:EventAction} K{\footnote EventAction} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b EventAction Method \line\tx360\tab\fs18\b0{\uldb MsiEvent Object}{\v MsiEvent_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 It finds all the subscribers of the named event and performs the given action on them. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .EventAction({\i eventname, action})} \par{\i object}\line Required. The MsiEvent object. \par{\i\b eventname}\line Required. The name of the {\uldb event}{\v ControlEvent_Overview} whose subscribers have to be found. \par{\i\b action}\line Required. The action to be performed on the subscribers of the event. \page #{\footnote MsiEvent_SetFocus} ${\footnote MsiEvent.SetFocus} +{\footnote MsiEvent:SetFocus} K{\footnote SetFocus} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b SetFocus Method \line\tx360\tab\fs18\b0{\uldb MsiEvent Object}{\v MsiEvent_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 Sets the focus to the named control. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .SetFocus({\i control})} \par{\i object}\line Required. The MsiEvent object. \par{\i\b control}\line Required. The name of the control receiving focus. \page #{\footnote MsiEvent_ReadyToChangeFocus} ${\footnote MsiEvent.ReadyToChangeFocus} +{\footnote MsiEvent:ReadyToChangeFocus} K{\footnote ReadyToChangeFocus} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b ReadyToChangeFocus Method \line\tx360\tab\fs18\b0{\uldb MsiEvent Object}{\v MsiEvent_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 Returns a boolean indicating if the control presently having focus is willing to give it up. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .ReadyToChangeFocus} \par{\i object}\line Required. The MsiEvent object. \page #{\footnote MsiControl_Object} ${\footnote MsiControl Object} K{\footnote MsiControl} +{\footnote Class:MsiControl} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b MsiControl Object \line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 MsiControl is the general interface of the control objects.  \par\li0{\b Properties}\par\li180 {\uldb CanTakeFocus}{\v MsiControl_CanTakeFocus}\line {\uldb Dialog}{\v MsiControl_Dialog}\line {\uldb IntegerValue}{\v MsiControl_IntegerValue}\line {\uldb StringValue}{\v MsiControl_StringValue}\line \par\li0{\b Methods}\par\li180 {\uldb Attribute}{\v MsiControl_Attribute}\line {\uldb GetIndirectPropertyFromDatabase}{\v MsiControl_GetIndirectPropertyFromDatabase}\line {\uldb GetPropertyFromDatabase}{\v MsiControl_GetPropertyFromDatabase}\line {\uldb HandleEvent}{\v MsiControl_HandleEvent}\line {\uldb ReadyToLooseFocus}{\v MsiControl_ReadyToLoseFocus}\line {\uldb SetFocus}{\v MsiControl_SetFocus}\line {\uldb SetPropertyInDatabase}{\v MsiControl_SetPropertyInDatabase}\line {\uldb Undo}{\v MsiControl_Undo}\line {\uldb WindowMessage}{\v MsiControl_WindowMessage}\line \page #{\footnote MsiControl_Dialog} ${\footnote MsiControl.Dialog} +{\footnote MsiControl:Dialog} K{\footnote Dialog} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b Dialog Property \line\tx360\tab\fs18\b0{\uldb MsiControl Object}{\v MsiControl_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 The {\b MsiEvent} interface of the dialog used by the control.  Read only. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .Dialog} \par{\i object}\line Required. The MsiControl object. \page #{\footnote MsiControl_StringValue} ${\footnote MsiControl.StringValue} +{\footnote MsiControl:StringValue} K{\footnote StringValue} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b Database Property \line\tx360\tab\fs18\b0{\uldb MsiControl Object}{\v MsiControl_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 The string value of the control.  Read only. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .StringValue} \par{\i object}\line Required. The MsiControl object. \page #{\footnote MsiControl_IntegerValue} ${\footnote MsiControl.IntegerValue} +{\footnote MsiControl:IntegerValue} K{\footnote IntegerValue} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b Database Property \line\tx360\tab\fs18\b0{\uldb MsiControl Object}{\v MsiControl_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 The integer value of the control.  Read only. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .IntegerValue} \par{\i object}\line Required. The MsiControl object. \page #{\footnote MsiControl_CanTakeFocus} ${\footnote MsiControl.CanTakeFocus} +{\footnote MsiControl:CanTakeFocus} K{\footnote CanTakeFocus} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b CanTakeFocus Property \line\tx360\tab\fs18\b0{\uldb MsiControl Object}{\v MsiControl_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 A Boolean value showing whether the control can take focus. This value is platform dependent! It can return different values depending on the operating system. Read only. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .CanTakeFocus} \par{\i object}\line Required. The MsiControl object. \page #{\footnote MsiControl_Attribute} ${\footnote MsiControl.Attribute} +{\footnote MsiControl:Attribute} K{\footnote Attribute} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b Attribute Method \line\tx360\tab\fs18\b0{\uldb MsiControl Object}{\v MsiControl_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 A general method allowing to get or set the value of some attributes of the control. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .Attribute({\i set, attributename, record})} \par{\i object}\line Required. The MsiEvent object. \par{\i\b set}\line Required. A Boolean value showing whether to set or get the value of the named attribute. True means set, False means get. \par{\i\b attributename}\line The name of the {\uldb attribute}{\v Control_Overview} to be set or get.  \par{\i\b record}\line Required. The record to be filled in in case of get, or the record of the values to be set. The record contains one field, except in the cases noted in the above table. \page #{\footnote MsiControl_HandleEvent} ${\footnote MsiControl.HandleEvent} +{\footnote MsiControl:HandleEvent} K{\footnote HandleEvent} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b HandleEvent Method \line\tx360\tab\fs18\b0{\uldb MsiControl Object}{\v MsiControl_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 Notifies the publisher of an event that the event has taken place. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .HandleEvent({\i eventname, argument})} \par{\i object}\line Required. The MsiControl object. \par{\i\b eventname}\line Required. The name of the {\uldb event}{\v ControlEvent_Overview}. \par{\i\b argument}\line The argument of the event. \page #{\footnote MsiControl_Undo} ${\footnote MsiControl.Undo} +{\footnote MsiControl:Undo} K{\footnote Undo} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b Undo Method \line\tx360\tab\fs18\b0{\uldb MsiControl Object}{\v MsiControl_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 This method is called when the dialog is reset. It resets the property associated with the control to its original value. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .Undo} \par{\i object}\line Required. The MsiControl object. \page #{\footnote MsiControl_SetPropertyInDatabase} ${\footnote MsiControl.SetPropertyInDatabase} +{\footnote MsiControl:SetPropertyInDatabase} K{\footnote SetPropertyInDatabase} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b SetPropertyInDatabase Method \line\tx360\tab\fs18\b0{\uldb MsiControl Object}{\v MsiControl_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 Sets the value of the associated property in the database. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .SetPropertyInDatabase} \par{\i object}\line Required. The MsiControl object. \page #{\footnote MsiControl_GetPropertyFromDatabase} ${\footnote MsiControl.GetPropertyFromDatabase} +{\footnote MsiControl:GetPropertyFromDatabase} K{\footnote GetPropertyFromDatabase} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b GetPropertyFromDatabase Method \line\tx360\tab\fs18\b0{\uldb MsiControl Object}{\v MsiControl_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 Gets the value of the associated property from the database. If the control is not an active control, this method does nothing. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .GetPropertyFromDatabase} \par{\i object}\line Required. The MsiControl object. \page #{\footnote MsiControl_GetIndirectPropertyFromDatabase} ${\footnote MsiControl.GetIndirectPropertyFromDatabase} +{\footnote MsiControl:GetIndirectPropertyFromDatabase} K{\footnote GetIndirectPropertyFromDatabase} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b GetIndirectPropertyFromDatabase Method \line\tx360\tab\fs18\b0{\uldb MsiControl Object}{\v MsiControl_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 Gets the value of the associated indirect property from the database. If the control is not an active control or of it is not tied to an indirect property, this method does nothing. \line An indirect property means that the name given points to the name of an other property and the value of this second property is displayed/changed by the control. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .GetIndirectPropertyFromDatabase} \par{\i object}\line Required. The MsiControl object. \page #{\footnote MsiControl_SetFocus} ${\footnote MsiControl.SetFocus} +{\footnote MsiControl:SetFocus} K{\footnote SetFocus} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b SetFocus Method \line\tx360\tab\fs18\b0{\uldb MsiControl Object}{\v MsiControl_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 Sets the focus to this control. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .SetFocus} \par{\i object}\line Required. The MsiControl object. \page #{\footnote MsiControl_WindowMessage} ${\footnote MsiControl.WindowMessage} +{\footnote MsiControl:WindowMessage} K{\footnote WindowMessage} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b WindowMessage Method \line\tx360\tab\fs18\b0{\uldb MsiControl Object}{\v MsiControl_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 A general method notifying the object that the corresponding window received a message. The object can decide to perform some activity instead of the system or in addition to the system, or ignore the message. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .WindowMessage({\i message, wParam, lParam})} \par{\i object}\line Required. The MsiControl object. \par{\i message}\line Required. An integer identifying the message type. \par{\i wParam}\line Required. An integer representing the first argument of the message. Can be null, depending on the type of message. \par{\i lParam}\line Required. An integer representing the second argument of the message. Can be null, depending on the type of message. \page #{\footnote MsiControl_ReadyToLoseFocus} ${\footnote MsiControl.ReadyToLoseFocus} +{\footnote MsiControl:ReadyToLoseFocus} K{\footnote ReadyToLoseFocus} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b ReadyToLoseFocus Method \line\tx360\tab\fs18\b0{\uldb MsiControl Object}{\v MsiControl_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 Returns a boolean indicating if the control is willing to give up focus. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .ReadyToLoseFocus} \par{\i object}\line Required. The MsiControl object. \page #{\footnote MsiFoo_Object} ${\footnote MsiFoo Object} K{\footnote MsiFoo} +{\footnote Class:MsiFoo} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b MsiFoo Object \line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 !!Desciptive text here!! !!Next paragraph desciptive text here!! \par\li0{\b Properties}\par\li180 {\uldb SomeProperty}{\v MsiFoo_SomeProperty}\line \par\li0{\b Methods}\par\li180 {\uldb SomeMethod}{\v MsiFoo_SomeMethod}\line \page #{\footnote MsiFoo_SomeMethod} ${\footnote MsiFoo.SomeMethod} +{\footnote MsiFoo:SomeMethod} K{\footnote SomeMethod} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b SomeMethod Method \line\tx360\tab\fs18\b0{\uldb MsiFoo Object}{\v MsiFoo_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 !!Desciption here.!! \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .SomeMethod({\i arg1, arg2})} \par{\i object}\line Required. The MsiFoo object. \par{\i\b arg1}\line Required. !!Description of a required argument.!! \par{\i\b arg2}\line Optional. !!Description of an optional argument.!! \par\fi0\li0{\b Remarks}\par\li180 !!Additional notes!!  \page #{\footnote MsiFoo_SomeProperty} ${\footnote MsiFoo.SomeProperty} +{\footnote MsiFoo:SomeProperty} K{\footnote SomeProperty} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b SomeProperty Property \line\tx360\tab\fs18\b0{\uldb MsiFoo Object}{\v MsiFoo_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 !!Desciption here.!! \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .SomeProperty} \par{\i object}\line Required. The MsiFoo object. \par\fi0\li0{\b Remarks}\par\li180 !!Additional notes!!  \page
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\darwin\src\help\path.rtf ===
{\rtf1\ansi {\fonttbl{\f0\fswiss Helv;}{\f1\fmodern Courier New;}} {\colortbl;} \fs20 #{\footnote MsiVolume_Object} ${\footnote MsiVolume Object} K{\footnote MsiVolume} +{\footnote Class:MsiVolume} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b MsiVolume Object \line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 The MsiVolume object represents a disk drive or server share.  It is not normally created independently by the installer, but as  needed by the MsiPath objects during resolution of the volume information  from the remainder of their path. To avoid duplication, a pool of Msi volume  objects is maintained by the services object, such that the  {\uldb CreateVolume}{\v MsiServices_CreateVolume} function will return the  existing MsiVolume object if present. \par\li0{\b Properties}\par\li180 {\uldb ClusterSize}{\v MsiVolume_ClusterSize}\line {\uldb DiskNotInDrive}{\v MsiVolume_DiskNotInDrive}\line {\uldb DriveType}{\v MsiVolume_DriveType}\line {\uldb FileSystem}{\v MsiVolume_FileSystem}\line {\uldb FileSystemFlags}{\v MsiVolume_FileSystemFlags}\line {\uldb FreeSpace}{\v MsiVolume_FreeSpace}\line {\uldb Path}{\v MsiVolume_Path}\line {\uldb SerialNum}{\v MsiVolume_SerialNum}\line {\uldb SupportsLFN}{\v MsiVolume_SupportsLFN}\line {\uldb TotalSpace}{\v MsiVolume_TotalSpace}\line {\uldb UNCServer}{\v MsiVolume_UNCServer}\line {\uldb VolumeID}{\v MsiVolume_VolumeID}\line {\uldb VolumeLabel}{\v MsiVolume_VolumeLabel}\line \page #{\footnote MsiVolume_Path} ${\footnote MsiVolume.Path} +{\footnote MsiVolume:Path} K{\footnote Path} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b Path Property \line\tx360\tab\fs18\b0{\uldb MsiVolume Object}{\v MsiVolume_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 String representing the path to the volume. In cases where both a drive letter  and an UNC path are obtainable, the form preferred by the network type is used  (currently only Novell NetWare servers prefer drive letter mapping).  Default property, read-only. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .Path} \par{\i object}\line Required. The MsiVolume object. \page #{\footnote MsiVolume_VolumeID} ${\footnote MsiVolume.VolumeID} +{\footnote MsiVolume:VolumeID} K{\footnote VolumeID} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b VolumeID Property \line\tx360\tab\fs18\b0{\uldb MsiVolume Object}{\v MsiVolume_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 Integer representing the volume. For Windows this maps to the driver letter,  from A=1 to Z=26, with 0 used to indicate that the volume is not mapped to  a drive letter. For Mac, this ID is the volume reference number (vRefNum)  of the mounted volume. Read-only. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .VolumeID} \par{\i object}\line Required. The MsiVolume object. \page #{\footnote MsiVolume_DriveType} ${\footnote MsiVolume.DriveType} +{\footnote MsiVolume:DriveType} K{\footnote DriveType} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b DriveType Property \line\tx360\tab\fs18\b0{\uldb MsiVolume Object}{\v MsiVolume_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 Integer enumeration describing the physical type of the volume. Read-only. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .DriveType} \par{\i object}\line Required. The MsiVolume object. \par\fi0\li0{\b Drive Type Enumeration}\par\li180 {\f1 idtUnknown   = 0   } Drive type cannot be determined\line {\f1 idtAllDrives = 1   } Never returned, used for enumerating drives\line {\f1 idtRemovable = 2   } Drive contains removable media\line {\f1 idtFixed     = 3   } Hard disk drive\line {\f1 idtRemote    = 4   } Network server share\line {\f1 idtCDROM     = 5   } CD_ROM drive\line {\f1 idtRAMDisk   = 6   } RAM disk\line {\f1 idtFloppy    = 2   } Eventually, floppies should be distinguished from other removables \page #{\footnote MsiVolume_SupportsLFN} ${\footnote MsiVolume.SupportsLFN} +{\footnote MsiVolume:SupportsLFN} K{\footnote SupportsLFN} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b SupportsLFN Property \line\tx360\tab\fs18\b0{\uldb MsiVolume Object}{\v MsiVolume_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 Boolean indicating whether the volume supports long file names.  If False is returned, only 8.3 file names may be used. The value  is always False for the Mac. Read-only. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .SupportsLFN} \par{\i object}\line Required. The MsiVolume object. \page #{\footnote MsiVolume_FreeSpace} ${\footnote MsiVolume.FreeSpace} +{\footnote MsiVolume:FreeSpace} K{\footnote FreeSpace} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b FreeSpace Property \line\tx360\tab\fs18\b0{\uldb MsiVolume Object}{\v MsiVolume_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 The amount of free space on the volume in units of 512 bytes.  For a compressed drive, this is the expected uncompressed size. Read-only. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .FreeSpace} \par{\i object}\line Required. The MsiVolume object. \page #{\footnote MsiVolume_TotalSpace} ${\footnote MsiVolume.TotalSpace} +{\footnote MsiVolume:TotalSpace} K{\footnote TotalSpace} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b TotalSpace Property \line\tx360\tab\fs18\b0{\uldb MsiVolume Object}{\v MsiVolume_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 The total capacity of the volume, in units of 512 bytes. For a compressed  drive, this is the expected uncompressed size. Read-only. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .TotalSpace} \par{\i object}\line Required. The MsiVolume object. \page #{\footnote MsiVolume_ClusterSize} ${\footnote MsiVolume.ClusterSize} +{\footnote MsiVolume:ClusterSize} K{\footnote ClusterSize} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b ClusterSize Property \line\tx360\tab\fs18\b0{\uldb MsiVolume Object}{\v MsiVolume_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 The number of bytes in a cluster, the basic unit of allocation for the volume.  This is a physical parameter and may not be appropriate to use for compressed  volumes or directories. Read-only. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .ClusterSize} \par{\i object}\line Required. The MsiVolume object. \page #{\footnote MsiVolume_FileSystem} ${\footnote MsiVolume.FileSystem} +{\footnote MsiVolume:FileSystem} K{\footnote FileSystem} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b FileSystem Property \line\tx360\tab\fs18\b0{\uldb MsiVolume Object}{\v MsiVolume_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 Returns a string designating the type of file system used on the volume. On the  Mac, an empty string is always returned. Read-only. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .FileSystem} \par{\i object}\line Required. The MsiVolume object. \par\fi0\li0{\b Returned File System Types}\par\li180 {\f1 FAT}\line {\f1 NTFS}\line {\f1 HPFS}\line \page #{\footnote MsiVolume_FileSystemFlags} ${\footnote MsiVolume.FileSystemFlags} +{\footnote MsiVolume:FileSystemFlags} K{\footnote FileSystemFlags} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b FileSystemFlags Property \line\tx360\tab\fs18\b0{\uldb MsiVolume Object}{\v MsiVolume_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 Returns an bitfield integer value with various flags about the filesystem.    Read Only. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .FileSystemFlags} \par{\i object}\line Required. The MsiVolume object. \par\fi0\li0{\b Returned File System Flags}\par\li180 {\f1 0x00000001: Volume uses case sensitive filenames}\line {\f1 0x00000002: Volume preserves case on filenames}\line {\f1 0x00000004: Volume stores data as UNICODE}\line {\f1 0x00000008: Volume supports security}\line {\f1 0x00000010: Volume supports compression}\line {\f1 0x00008000: Volume is compressed}\line \page #{\footnote MsiVolume_VolumeLabel} ${\footnote MsiVolume.VolumeLabel} +{\footnote MsiVolume:VolumeLabel} K{\footnote VolumeLabel} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b VolumeLabel Property \line\tx360\tab\fs18\b0{\uldb MsiVolume Object}{\v MsiVolume_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 Returns a string representing the disk label associated with the volume. On the  Mac, the volume name is always returned. Read-only. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .VolumeLabel} \par{\i object}\line Required. The MsiVolume object. \page #{\footnote MsiVolume_UNCServer} ${\footnote MsiVolume.UNCServer} +{\footnote MsiVolume:UNCServer} K{\footnote UNCServer} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b UNCServer Property \line\tx360\tab\fs18\b0{\uldb MsiVolume Object}{\v MsiVolume_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 String representing the UNC path for the volume. For local drives and  networks that do not support UNC, an empty string will be returned. For  the Mac, an empty string is always returned. Read-only. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .UNCServer} \par{\i object}\line Required. The MsiVolume object. \page #{\footnote MsiVolume_SerialNum} ${\footnote MsiVolume.SerialNum} +{\footnote MsiVolume:SerialNum} K{\footnote SerialNum} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b SerialNum Property \line\tx360\tab\fs18\b0{\uldb MsiVolume Object}{\v MsiVolume_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 A long integer representing the unique ID for the physical volume. For the Mac,  0 is always returned. Read-only. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .SerialNum} \par{\i object}\line Required. The MsiVolume object. \page #{\footnote MsiVolume_DiskNotInDrive} ${\footnote MsiVolume.DiskNotInDrive} +{\footnote MsiVolume:DiskNotInDrive} K{\footnote DiskNotInDrive} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b DiskNotInDrive Property \line\tx360\tab\fs18\b0{\uldb MsiVolume Object}{\v MsiVolume_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 DiskNotInDrive returns True if the volume media is removable (CDROM, Floppy, removable HD), AND there is  no disk in the drive. Read-only. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .DiskNotInDrive} \par{\i object}\line Required. The MsiVolume object. \page #{\footnote MsiPath_Object} ${\footnote MsiPath Object} K{\footnote MsiPath} +{\footnote Class:MsiPath} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b MsiPath Object \line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 The MsiPath object represents a full path to a directory on a disk volume.  Internally, MsiPath creates an MsiVolume object to represent the volume  associated with the full path.\line  \line {\b Windows Path and Filename Syntax}\line  For Windows, the path supplied when creating an MsiPath object must either   include a drive letter indicating the volume, or a UNC path.  For example,   the following are valid paths:\line \line     {\f1 C:\\MyDocs\\SubDocs}\line     {\f1 \\\\MyServer\\MyShare\\MyDocs}\line \line When specifying filenames to MsiPath methods such as {\uldb GetFullFilePath}{\v MsiPath_GetFullFilePath},  the following reserved characters are not allowed, and will generate an error if found anywhere in the  supplied name:\line  '\\' (backslash)\line  '/' (forward slash)\line  ':' (colon)\line  '"' (double-quote)\line  '|' (pipe)\line  '?' (question mark)\line  '*' (asterisk)\line  '<' (less-than sign)\line  '>' (greater-than sign)\line \line Multiple consecutive directory seperators are allowed in a path.  For example, the following are  valid paths:\line \line     {\f1 C:\\MyDocs\\\\SubDocs\\\\\\Personal}\line     {\f1 \\\\MyServer\\MyShare\\\\MyDocs}\line \line Note that multiple directory seperators may not follow a drive letter, though they may follow  a \\\\Server\\Share pair. \line \par\li0{\b Properties}\par\li180 {\uldb EndSubPath}{\v MsiPath_EndSubPath}\line {\uldb Exists}{\v MsiPath_Exists}\line {\uldb Path}{\v MsiPath_Path}\line {\uldb RelativePath}{\v MsiPath_RelativePath}\line {\uldb Volume}{\v MsiPath_Volume}\line {\uldb Writable}{\v MsiPath_Writable}\line \par\li0{\b Methods}\par\li180 {\uldb AppendPiece}{\v MsiPath_AppendPiece}\line {\uldb BindImage}{\v MsiPath_BindImage}\line {\uldb CheckFileVersion}{\v MsiPath_CheckFileVersion}\line {\uldb CheckLanguageIDs}{\v MsiPath_CheckLanguageIDs}\line {\uldb Child}{\v MsiPath_Child}\line {\uldb ChopPiece}{\v MsiPath_ChopPiece}\line {\uldb ClusteredFileSize}{\v MsiPath_ClusteredFileSize}\line {\uldb Compare}{\v MsiPath_Compare}\line {\uldb ComputeFileChecksum}{\v MsiPath_ComputeFileChecksum}\line {\uldb EnsureExists}{\v MsiPath_EnsureExists}\line {\uldb FileDate}{\v MsiPath_FileDate}\line {\uldb FileExists}{\v MsiPath_FileExists}\line {\uldb FileInUse}{\v MsiPath_FileInUse}\line {\uldb FileSize}{\v MsiPath_FileSize}\line {\uldb FileWritable}{\v MsiPath_FileWritable}\line {\uldb FindFile}{\v MsiPath_FindFile}\line {\uldb GetFileAttribute}{\v MsiPath_GetFileAttribute}\line {\uldb GetFileChecksum}{\v MsiPath_GetFileChecksum}\line {\uldb GetFileOriginalChecksum}{\v MsiPath_GetFileOriginalChecksum}\line {\uldb GetFileVersionString}{\v MsiPath_GetFileVersionString}\line {\uldb GetFullFilePath}{\v MsiPath_GetFullFilePath}\line {\uldb GetFullUNCFilePath}{\v MsiPath_GetFullUNCFilePath}\line {\uldb GetImportModulesEnum}{\v MsiPath_GetImportModulesEnum}\line {\uldb GetLangIDStringFromFile}{\v MsiPath_GetLangIDStringFromFile}\line {\uldb GetSelfRelativeSD}{\v MsiPath_GetSelfRelativeSD}\line {\uldb SubFolders}{\v MsiPath_SubFolders}\line {\uldb ReadResource}{\v MsiPath_ReadResource}\line {\uldb Remove}{\v MsiPath_Remove}\line {\uldb RemoveFile}{\v MsiPath_RemoveFile}\line {\uldb SetFileAttribute}{\v MsiPath_SetFileAttribute}\line {\uldb SetVolume}{\v MsiPath_SetVolume}\line {\uldb SupportsLFN}{\v MsiPath_SupportsLFN}\line {\uldb TempFileName}{\v MsiPath_TempFileName}\line {\uldb UpdateResource}{\v MsiPath_UpdateResource}\line {\uldb VerifyFileChecksum}{\v MsiPath_VerifyFileChecksum}\line \page #{\footnote MsiPath_Path} ${\footnote MsiPath.Path} +{\footnote MsiPath:Path} K{\footnote Path} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b Path Property \line\tx360\tab\fs18\b0{\uldb MsiPath Object}{\v MsiPath_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 Returns a string representing the path. Read-only. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .Path} \par{\i object}\line Required. The MsiPath object. \par\fi0\li0{\b Remarks}\par\li180 The returned string contains the full path represented by the  path object, including the volume designation.  See the description  of the {\uldb MsiPath}{\v MsiPath_Object} object for a full description  of the path syntax. \page #{\footnote MsiPath_RelativePath} ${\footnote MsiPath.RelativePath} +{\footnote MsiPath:RelativePath} K{\footnote RelativePath} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b RelativePath Property \line\tx360\tab\fs18\b0{\uldb MsiPath Object}{\v MsiPath_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 Returns a string representing the path without the volume. Read-only. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .RelativePath} \par{\i object}\line Required. The MsiPath object. \par\fi0\li0{\b Remarks}\par\li180 The returned string contains the path represented by the  path object, without the volume designation.  See the description  of the {\uldb MsiPath}{\v MsiPath_Object} object for a full description  of the path syntax. \page #{\footnote MsiPath_Volume} ${\footnote MsiPath.Volume} +{\footnote MsiPath:Volume} K{\footnote Volume} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b Volume Property \line\tx360\tab\fs18\b0{\uldb MsiPath Object}{\v MsiPath_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 Returns the MsiVolume object representing the root of this path. Read-only. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .Volume} \par{\i object}\line Required. The MsiPath object. \page #{\footnote MsiPath_SetVolume} ${\footnote MsiPath.SetVolume} +{\footnote MsiPath:SetVolume} K{\footnote SetVolume} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b SetVolume method \line\tx360\tab\fs18\b0{\uldb MsiPath Object}{\v MsiPath_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 Assigns a new MsiVolume object to this MsiPath object. The path (as returned by the Path  property) will be updated to reflect the new root volume. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .SetVolume(volume)} \par{\i object}\line Required. The MsiPath object. \par{\i volume}\line The MsiVolume object to be assigned to this MsiPath object.  \page #{\footnote MsiPath_Exists} ${\footnote MsiPath.Exists} +{\footnote MsiPath:Exists} K{\footnote Exists} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b Exists Property \line\tx360\tab\fs18\b0{\uldb MsiPath Object}{\v MsiPath_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 Boolean indicating whether the directory tree associated with the path object  currently exists on the associated volume. Read-only. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .Exists} \par{\i object}\line Required. The MsiPath object. \par\fi0\li0{\b Remarks}\par\li180 None. \page #{\footnote MsiPath_Writable} ${\footnote MsiPath.Writable} +{\footnote MsiPath:Writable} K{\footnote Writable} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b Writable Property \line\tx360\tab\fs18\b0{\uldb MsiPath Object}{\v MsiPath_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 Boolean indicating whether the directory represented by the path is writable (i.e.  file-creation privileges are available in this directory). Read-only. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .Writable} \par{\i object}\line Required. The MsiPath object. \par\fi0\li0{\b Remarks}\par\li180 If the directory associated with the path does not exist, a run-time error will be generated. \page #{\footnote MsiPath_EndSubPath} ${\footnote MsiPath.EndSubPath} +{\footnote MsiPath:EndSubPath} K{\footnote EndSubPath} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b EndSubPath Property \line\tx360\tab\fs18\b0{\uldb MsiPath Object}{\v MsiPath_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 Returns a string representing the last sub-path of the path. Read-only. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .EndSubPath} \par{\i object}\line Required. The MsiPath object. \par\fi0\li0{\b Remarks}\par\li180 The returned string will not contain any directory separator characters, \page #{\footnote MsiPath_AppendPiece} ${\footnote MsiPath.AppendPiece} +{\footnote MsiPath:AppendPiece} K{\footnote AppendPiece} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b AppendPiece Method \line\tx360\tab\fs18\b0{\uldb MsiPath Object}{\v MsiPath_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 The AppendPiece methods appends the given string to the current path,  delimiting appropriately with directory separator characters. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .AppendPiece({\i subDir})} \par{\i object}\line Required. The MsiPath object. \par{\i\b subDir}\line Required. The name of the subdirectory to append. See the {\uldb MsiPath}{\v MsiPath_Object}  main topic for filename syntax. \par\fi0\li0{\b Remarks}\par\li180 AppendPiece allows multiple subdirectories to be appended at once.  Also, a leading  and/or trailing directory separator is optional.  Thus, the following examples are   all legal, and functionally identical:\line  \line services.AppendPiece("subdir1\\subdir2")\line services.AppendPiece("\\subdir1\\subdir2")\line services.AppendPiece("subdir1\\subdir2\\")\line services.AppendPiece("\\subdir1\\subdir2\\")\line \page #{\footnote MsiPath_ChopPiece} ${\footnote MsiPath.ChopPiece} +{\footnote MsiPath:ChopPiece} K{\footnote ChopPiece} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b ChopPiece Method \line\tx360\tab\fs18\b0{\uldb MsiPath Object}{\v MsiPath_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 The ChopPiece method removes the last subdirectory segment from the  current path. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .ChopPiece} \par{\i object}\line Required. The MsiPath object. \par\fi0\li0{\b Remarks}\par\li180 None. \page #{\footnote MsiPath_FileExists} ${\footnote MsiPath.FileExists} +{\footnote MsiPath:FileExists} K{\footnote FileExists} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b FileExists Method \line\tx360\tab\fs18\b0{\uldb MsiPath Object}{\v MsiPath_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 The FileExists method returns True if a file of the specified name exists in the  directory associated with the path object. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .FileExists({\i file})} \par{\i object}\line Required. The MsiPath object. \par{\i\b file}\line Required. The name of the file to check for.  See the {\uldb MsiPath}{\v MsiPath_Object}  main topic for filename syntax. \par\fi0\li0{\b Remarks}\par\li180 None. \page #{\footnote MsiPath_GetFullFilePath} ${\footnote MsiPath.GetFullFilePath} +{\footnote MsiPath:GetFullFilePath} K{\footnote GetFullFilePath} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b GetFullFilePath Method \line\tx360\tab\fs18\b0{\uldb MsiPath Object}{\v MsiPath_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 The GetFullFilePath method takes a file name as an argument, and  returns a string that represents the full path to that file,   incorporating the path associated with the path object and the given  file name. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .GetFullFilePath({\i strFile})} \par{\i object}\line Required. The MsiPath object. \par{\i\b strFile}\line Required. The name of the file to append to the current path. See the {\uldb MsiPath}{\v MsiPath_Object}  main topic for filename syntax.  If an empty string is passed in strFile, just the path itself (terminated   with a backslash) will be returned. \par\fi0\li0{\b Remarks}\par\li180 None. \page #{\footnote MsiPath_GetFullUNCFilePath} ${\footnote MsiPath.GetFullUNCFilePath} +{\footnote MsiPath:GetFullUNCFilePath} K{\footnote GetFullUNCFilePath} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b GetFullUNCFilePath Method \line\tx360\tab\fs18\b0{\uldb MsiPath Object}{\v MsiPath_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 The GetFullUNCFilePath method takes a file name as an argument, and returns a string that  represents the full path to that file, incorporating the path associated with the path  object and the given file name.  If the volume associated with the path object represents  a network connection, the UNC name of the volume will be used in the returned full path  (even if the path object was originally created using a mapped drive letter designation). \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .GetFullUNCFilePath({\i strFile})} \par{\i object}\line Required. The MsiPath object. \par{\i\b strFile}\line Required. The name of the file to append to the current path. See the {\uldb MsiPath}{\v MsiPath_Object}  main topic for filename syntax.  If an empty string is passed in strFile, just the path itself (terminated   with a backslash) will be returned. \par\fi0\li0{\b Remarks}\par\li180 None. \page #{\footnote MsiPath_GetFileAttribute} ${\footnote MsiPath.GetFileAttribute} +{\footnote MsiPath:GetFileAttribute} K{\footnote GetFileAttribute} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b GetFileAttribute Method \line\tx360\tab\fs18\b0{\uldb MsiPath Object}{\v MsiPath_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 The GetFileAttribute method returns the Boolean state of a specified attribute  for a file or directory. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .GetFileAttribute({\i file, attribute})} \par{\i object}\line Required. The MsiPath object. \par{\i\b file}\line Required. The name of the file or directory. See the {\uldb MsiPath}{\v MsiPath_Object}  main topic for filename syntax. If the file name is null, the attribute of the directory  will be used. \par{\i\b attribute}\line Required. An integer enumeration value specifying the attribute to queried.  See the remarks below for a list of acceptable values. \par\fi0\li0{\b Remarks}\par\li180 The following attributes can be queried by the GetFileAttribute method:\line\line {\f1 ifaArchive    = 0} \tab The file is an archive file (Windows only).\line {\f1 ifaDirectory  = 1} \tab The "file or directory" is an directory.\line {\f1 ifaHidden     = 2} \tab The file is hidden.  (Note: For Macintosh, this attribute\line \tab \tab is True if the 'fInvisible' Finder flag is set).\line {\f1 ifaNormal     = 3} \tab True only if no other attribute is set (Windows only).\line {\f1 ifaReadOnly   = 4} \tab The file is read-only. Applications can read the file but cannot\line  \tab \tab write to it or delete it.  (Note: For Macintosh, this attribute is True if the \line  \tab \tab file is locked).\line {\f1 ifaSystem     = 5} \tab The file is part of the operating system or is used exclusively\line  \tab \tab by it (Windows only).\line {\f1 ifaTemp       = 6} \tab The file is being used for temporary storage (Windows only).\line {\f1 ifaCompressed = 7} \tab The file or directory is compressed. For a file, this means that all\line  \tab \tab of the data in the file is compressed. For a directory, this means that\line  \tab \tab compression is the default for newly created files and subdirectories.\line  \tab \tab (Windows only).\line \line If any attribute enumeration value other than one of those listed is specified , a run-time error will  be generated. \line\line  See also:  {\uldb SetFileAttribute}{\v MsiPath_SetFileAttribute} \page #{\footnote MsiPath_SetFileAttribute} ${\footnote MsiPath.SetFileAttribute} +{\footnote MsiPath:SetFileAttribute} K{\footnote SetFileAttribute} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b SetFileAttribute Method \line\tx360\tab\fs18\b0{\uldb MsiPath Object}{\v MsiPath_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 The SetFileAttribute method sets or clears a specified attribute for a file or directory. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .SetFileAttribute({\i file, attribute, state})} \par{\i object}\line Required. The MsiPath object. \par{\i\b file}\line Required. The name of the file. See the {\uldb MsiPath}{\v MsiPath_Object}  main topic for filename syntax. If the file name is null, the attribute of the directory  will be set. \par{\i\b attribute}\line Required. An integer enumeration value specifying the attribute to be set or cleared.  See the remarks below for a list of acceptable values. \par{\i\b state}\line Required. Boolean indicating whether the attribute is to be set or cleared. \par\fi0\li0{\b Remarks}\par\li180 The following attributes can be set or cleared by the SetFileAttribute method:\line\line {\f1 ifaArchive    = 0} \tab The file is an archive file (Windows only).\line {\f1 ifaHidden     = 2} \tab The file is hidden.  (Note: For Macintosh, setting this attribute\line \tab \tab sets the 'fInvisible' Finder flag).\line {\f1 ifaReadOnly   = 4} \tab The file is read-only. Applications can read the file but cannot\line  \tab \tab write to it or delete it.  (Note: For Macintosh, setting or clearing this \line  \tab \tab attribute locks or unlocks the file).\line {\f1 ifaSystem     = 5} \tab The file is part of the operating system or is used exclusively\line  \tab \tab by it (Windows only).\line {\f1 ifaTemp       = 6} \tab The file is being used for temporary storage (Windows only).\line {\f1 ifaCompressed = 7} \tab This is a read-only attribute, and cannot be set by SetFileAttribute.\line \line If the specified file does not exist, or if any attribute enumeration value other than one  of those listed is specified, a run-time error will be generated. \line\line   See also:  {\uldb GetFileAttribute}{\v MsiPath_GetFileAttribute} \page #{\footnote MsiPath_FileSize} ${\footnote MsiPath.FileSize} +{\footnote MsiPath:FileSize} K{\footnote FileSize} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b FileSize Method \line\tx360\tab\fs18\b0{\uldb MsiPath Object}{\v MsiPath_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 The FileSize method retrieves the size, in bytes, of the specified file. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .FileSize({\i file})} \par{\i object}\line Required. The MsiPath object. \par{\i\b file}\line Required. The name of the file. See the {\uldb MsiPath}{\v MsiPath_Object}  main topic for filename syntax. \par\fi0\li0{\b Remarks}\par\li180 The returned byte count represents the logical size of the file; it does not account for  the number of physical clusters (Mac: allocation blocks) allocated for the file. \page #{\footnote MsiPath_FileDate} ${\footnote MsiPath.FileDate} +{\footnote MsiPath:FileDate} K{\footnote FileDate} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b FileDate Method \line\tx360\tab\fs18\b0{\uldb MsiPath Object}{\v MsiPath_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 Retrieves the date and time that the specified file was created (Mac) or last written to (Windows).  \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .FileDate({\i file})} \par{\i object}\line Required. The MsiPath object. \par{\i\b file}\line Required. The name of the file. See the {\uldb MsiPath}{\v MsiPath_Object}  main topic for filename syntax. \par\fi0\li0{\b Remarks}\par\li180 The value returned by the FileDate method is compatible with the VBA Date data type. \page #{\footnote MsiPath_RemoveFile} ${\footnote MsiPath.RemoveFile} +{\footnote MsiPath:RemoveFile} K{\footnote RemoveFile} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b RemoveFile Method \line\tx360\tab\fs18\b0{\uldb MsiPath Object}{\v MsiPath_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 The RemoveFile method deletes a file existing in the directory associated with  the MsiPath object. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .RemoveFile({\i file})} \par{\i object}\line Required. The MsiPath object. \par{\i\b file}\line Required. The name of the file to be deleted. See the {\uldb MsiPath}{\v MsiPath_Object}  main topic for filename syntax. \par\fi0\li0{\b Remarks}\par\li180 If the specified file does not exist, RemoveFile does nothing (no error is generated). \page #{\footnote MsiPath_EnsureExists} ${\footnote MsiPath.EnsureExists} +{\footnote MsiPath:EnsureExists} K{\footnote EnsureExists} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b EnsureExists Method \line\tx360\tab\fs18\b0{\uldb MsiPath Object}{\v MsiPath_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 The EnsureExists method attempts to create the full path associated  with the path object. Returns the number of folders actually created. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .EnsureExists} \par{\i object}\line Required. The MsiPath object. \par\fi0\li0{\b Remarks}\par\li180 EnsureExists attempts to create each subdirectory associated with the  path object, if it doesn't already exist. For example, if the path is   "c:\\dirA\\dirB\\dirC\\", the directory "dirA" will be created on the "c:"  drive, then "c:\\dirA\\dirB" will be created, and so on, until the entire   directory tree exists.  If any subdirectory cannot be created, a   run-time error will be generated. \page #{\footnote MsiPath_Remove} ${\footnote MsiPath.Remove} +{\footnote MsiPath:Remove} K{\footnote Remove} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b Remove Method \line\tx360\tab\fs18\b0{\uldb MsiPath Object}{\v MsiPath_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 The Remove method attempts to delete the empty directory associated with the path object.  If  the directory is not empty, however, Remove does nothing. If the directory is empty but still  cannot be deleted, a run-time error occurs. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .Remove} \par{\i object}\line Required. The MsiPath object. \par\fi0\li0{\b Remarks}\par\li180 Currently, Remove attempts to delete only the "outermost" directory; none of the parent  directories associated with the path are deleted.\line\line \page #{\footnote MsiPath_FileWritable} ${\footnote MsiPath.FileWritable} +{\footnote MsiPath:FileWritable} K{\footnote FileWritable} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b FileWritable Method \line\tx360\tab\fs18\b0{\uldb MsiPath Object}{\v MsiPath_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 The FileWritable method returns True if the specified file exists, AND that file  can be opened for write-access. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .FileWritable({\i file})} \par{\i object}\line Required. The MsiPath object. \par{\i\b file}\line Required. The name of the file. See the {\uldb MsiPath}{\v MsiPath_Object}  main topic for filename syntax. \par\fi0\li0{\b Remarks}\par\li180 None. \page #{\footnote MsiPath_FileInUse} ${\footnote MsiPath.FileInUse} +{\footnote MsiPath:FileInUse} K{\footnote FileInUse} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b FileInUse Method \line\tx360\tab\fs18\b0{\uldb MsiPath Object}{\v MsiPath_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 The FileInUse method returns True if a file with the given name  exists in the directory associated with the Path object,  AND that file is 'in use' by another process. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .FileInUse({\i file})} \par{\i object}\line Required. The MsiPath object. \par{\i\b file}\line Required. The name of the file. See the {\uldb MsiPath}{\v MsiPath_Object}  main topic for filename syntax. \par\fi0\li0{\b Remarks}\par\li180 Returns an error record if the specified file doesn't exist. \page #{\footnote MsiPath_GetFileChecksum} ${\footnote MsiPath.GetFileChecksum} +{\footnote MsiPath:GetFileChecksum} K{\footnote GetFileChecksum} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b GetFileChecksum Method (C++ interface) \line\tx360\tab\fs18\b0{\uldb MsiPath Object}{\v MsiPath_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 The GetFileChecksum method computes the checksum of the specified file, and also returns the original  checksum stored in the Portable Executable (PE) header of the file (if the file is of the PE format). \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .GetFileChecksum({\i const ICHAR* szFileName,DWORD* pdwHeaderSum, DWORD* pdwComputedSum})} \par{\i object}\line Required. The IMsiPath object. \par{\i\b szFileName}\line Required. A string containing the name of the file. See the {\uldb MsiPath}{\v MsiPath_Object}  main topic for filename syntax. \par{\i\b pdwHeaderSum}\line Required. A pointer to the variable that receives the original checksum stored in the file header, or  zero if the file cannot be identified as an executable. \par{\i\b pdwComputedSum}\line Required. A pointer to the variable that receives the computed checksum. \par\fi0\li0{\b Remarks}\par\li180 Returns an error record only if an unexpected error occurs.  If the specified file does not have a PE  header section (i.e. is not a PE .exe or .dll file), zero will be returned in pdwHeaderSum, but no  error record will be returned. \page #{\footnote MsiPath_ComputeFileChecksum} ${\footnote MsiPath.ComputeFileChecksum} +{\footnote MsiPath:ComputeFileChecksum} K{\footnote ComputeFileChecksum} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b ComputeFileChecksum Method \line\tx360\tab\fs18\b0{\uldb MsiPath Object}{\v MsiPath_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 The ComputeFileChecksum method computes and returns the checksum of the specified file. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .ComputeFileChecksum({\i strFileName})} \par{\i object}\line Required. The IMsiPath object. \par{\i\b strFileName}\line Required. A string containing the name of the file. See the {\uldb MsiPath}{\v MsiPath_Object}  main topic for filename syntax. \par\fi0\li0{\b Returns}\par\li180 The computed checksum is returned as the function result. \page #{\footnote MsiPath_GetFileOriginalChecksum} ${\footnote MsiPath.GetFileOriginalChecksum} +{\footnote MsiPath:GetFileOriginalChecksum} K{\footnote GetFileOriginalChecksum} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b GetFileOriginalChecksum Method \line\tx360\tab\fs18\b0{\uldb MsiPath Object}{\v MsiPath_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 The GetFileOriginalChecksum method returns the original checksum stored in the Portable Executable (PE) header  of the specified file. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .GetFileOriginalChecksum({\i strFileName})} \par{\i object}\line Required. The IMsiPath object. \par{\i\b strFileName}\line Required. A string containing the name of the file. See the {\uldb MsiPath}{\v MsiPath_Object}  main topic for filename syntax. \par\fi0\li0{\b Returns}\par\li180 The original checksum stored in the PE header of the file is returned as the function result.  If the  file is not an executable (i.e. has no PE header, or the header is corrupt), then zero is returned. \page #{\footnote MsiPath_VerifyFileChecksum} ${\footnote MsiPath.VerifyFileChecksum} +{\footnote MsiPath:VerifyFileChecksum} K{\footnote VerifyFileChecksum} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b VerifyFileChecksum Method \line\tx360\tab\fs18\b0{\uldb MsiPath Object}{\v MsiPath_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 The GetFileChecksum method computes the checksum of the specified file, and also returns the original  checksum stored in the Portable Executable (PE) header of the file (if the file is of the PE format). \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .GetFileChecksum({\i const ICHAR* szFileName,DWORD* pdwHeaderSum, DWORD* pdwComputedSum})} \par{\i object}\line Required. The IMsiPath object. \par{\i\b szFileName}\line Required. A string containing the name of the file. See the {\uldb MsiPath}{\v MsiPath_Object}  main topic for filename syntax. \par{\i\b pdwHeaderSum}\line Required. A pointer to the variable that receives the original checksum stored in the file header, or  zero if the file cannot be identified as an executable. \par{\i\b pdwComputedSum}\line Required. A pointer to the variable that receives the computed checksum. \par\fi0\li0{\b Remarks}\par\li180 Returns an error record only if an unexpected error occurs.  If the specified file does not have a PE  header section (i.e. is not a PE .exe or .dll file), zero will be returned in pdwHeaderSum, but no  error record will be returned. \page #{\footnote MsiPath_UpdateResource} ${\footnote MsiPath.UpdateResource} +{\footnote MsiPath:UpdateResource} K{\footnote UpdateResource} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b UpdateResource Method \line\tx360\tab\fs18\b0{\uldb MsiPath Object}{\v MsiPath_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 The UpdateResource method enables the caller to modify an existing resource in a specified  file. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .UpdateResource({\i file, resType, resID, data})} \par{\i object}\line Required. The MsiPath object. \par{\i\b file}\line Required. The name of the file to be modified. See the {\uldb MsiPath}{\v MsiPath_Object}  main topic for filename syntax. \par{\i\b resType}\line Required. An integer value representing the resource type to be modified.  See the remarks  below for additional details. \par{\i\b resID}\line Required. An integer value representing the ID of the resource to be modified. \par{\i\b data}\line Required. A string containing the data to be written to the specified resource.  Note that  although this parameter is a string, resource data is not limited to printable characters;  any values that can fit in each byte of the string are permissible. \par\fi0\li0{\b Remarks}\par\li180 The integer representing the resource type can be any user-defined value desired; alternatively,  to update a "standard" resource type, the following enumeration values are available:\line  \line {\f1 RT_ACCELERATOR:}\tab Accelerator table\line {\f1 RT_BITMAP:}\tab Bitmap resource\line {\f1 RT_DIALOG:}\tab Dialog box\line {\f1 RT_FONT:}\tab Font resource\line {\f1 RT_FONTDIR:}\tab Font directory resource\line {\f1 RT_MENU:}\tab Menu resource\line {\f1 RT_RCDATA:}\tab Application-defined resource (raw data)\line {\f1 RT_STRING:}\tab String-table entry\line {\f1 RT_MESSAGETABLE:}\tab Message-table entry\line {\f1 RT_CURSOR:}\tab Hardware-dependent cursor resource\line {\f1 RT_GROUP_CURSOR:}\tab Hardware-independent cursor resource\line {\f1 RT_ICON:}\tab Hardware-dependent icon resource\line {\f1 RT_GROUP_ICON:}\tab Hardware-independent icon resource\line {\f1 RT_VERSION:}\tab Version resource\line \line UpdateResource cannot be used to create new resource entries within a file; it can only update  existing resources.  If a resource of the specified type and ID does not exist in the file, a  run-time error will be generated.\line  \line See also:  {\uldb ReadResource}{\v MsiPath_ReadResource} \page #{\footnote MsiPath_ReadResource} ${\footnote MsiPath.ReadResource} +{\footnote MsiPath:ReadResource} K{\footnote ReadResource} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b ReadResource Method \line\tx360\tab\fs18\b0{\uldb MsiPath Object}{\v MsiPath_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 The ReadResource method enables the caller to read from a file the contents of a specified  resource.  The data from the resource is returned to the caller as a string. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .ReadResource({\i file, resType, resID})} \par{\i object}\line Required. The MsiPath object. \par{\i\b file}\line Required. The name of the file to read. See the {\uldb MsiPath}{\v MsiPath_Object}  main topic for filename syntax. \par{\i\b resType}\line Required. An integer value representing the resource type to be read.  See the remarks  below for additional details. \par{\i\b resID}\line Required. An integer value representing the ID of the resource to be read. \par\fi0\li0{\b Remarks}\par\li180 The integer representing the resource type can be any user-defined value desired; alternatively,  to read a "standard" resource type, the following enumeration values are available:\line  \line {\f1 RT_ACCELERATOR:}\tab Accelerator table\line {\f1 RT_BITMAP:}\tab Bitmap resource\line {\f1 RT_DIALOG:}\tab Dialog box\line {\f1 RT_FONT:}\tab Font resource\line {\f1 RT_FONTDIR:}\tab Font directory resource\line {\f1 RT_MENU:}\tab Menu resource\line {\f1 RT_RCDATA:}\tab Application-defined resource (raw data)\line {\f1 RT_STRING:}\tab String-table entry\line {\f1 RT_MESSAGETABLE:}\tab Message-table entry\line {\f1 RT_CURSOR:}\tab Hardware-dependent cursor resource\line {\f1 RT_GROUP_CURSOR:}\tab Hardware-independent cursor resource\line {\f1 RT_ICON:}\tab Hardware-dependent icon resource\line {\f1 RT_GROUP_ICON:}\tab Hardware-independent icon resource\line {\f1 RT_VERSION:}\tab Version resource\line \line If a resource of the specified type and ID does not exist in the file, a  run-time error will be generated.\line \line See also:  {\uldb UpdateResource}{\v MsiPath_UpdateResource} \page #{\footnote MsiPath_ClusteredFileSize} ${\footnote MsiPath.ClusteredFileSize} +{\footnote MsiPath:ClusteredFileSize} K{\footnote ClusteredFileSize} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b ClusteredFileSize Method \line\tx360\tab\fs18\b0{\uldb MsiPath Object}{\v MsiPath_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 Rounds a file size, in bytes, to a multiple of the volume cluster size,   to indicate the amount of disk space required. The returned value is expressed in  units of 512 bytes. (!!Compressed volumes??.!! \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .ClusteredFileSize({\i size})} \par{\i object}\line Required. The MsiPath object. \par{\i\b size}\line Required. The size of the file in bytes. \par\fi0\li0{\b Remarks}\par\li180 !!Additional notes!!  \page #{\footnote MsiPath_GetFileVersionString} ${\footnote MsiPath.GetFileVersionString} +{\footnote MsiPath:GetFileVersionString} K{\footnote GetFileVersionString} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b GetFileVersionString Method \line\tx360\tab\fs18\b0{\uldb MsiPath Object}{\v MsiPath_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 Returns a string representation of a file's version. If a file with the given name  does not exist in the directory associated with the path object, or that file has  no version information, an empty string will be returned. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .GetFileVersionString({\i file})} \par{\i object}\line Required. The MsiPath object. \par{\i\b file}\line Required. The name of the file. See the {\uldb MsiPath}{\v MsiPath_Object}  main topic for filename syntax. \par\fi0\li0{\b Remarks}\par\li180 The format of the returned version string depends on the platform:\line\line {\ul Windows:}\line The version string will be of the form "a.b.c.d", where each letter  represents the string equivalent of an integer ranging from 0 to 65535.\line\line {\ul Mac:}\line The version string will be of the form:\line  <majorRev>.<minorRev>.<bugFixRev>.<stage>.<nonRelRev>\line See the {\uldb CheckFileVersion}{\v MsiPath_CheckFileVersion} function for further  explanation of each version field. \page #{\footnote MsiPath_CheckFileVersion} ${\footnote MsiPath.CheckFileVersion} +{\footnote MsiPath:CheckFileVersion} K{\footnote CheckFileVersion;icfvExistNoVersion;icfvExistLower;icfvExistEqual} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b CheckFileVersion Method \line\tx360\tab\fs18\b0{\uldb MsiPath Object}{\v MsiPath_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 Checks a file against supplied version and language strings and returns an enumeration  indicating whether the actual file's version is newer, older or the same as the  supplied version. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .CheckFileVersion({\i strFilename, strVersion, strLanguage})} \par{\i object}\line Required. The MsiPath object. \par{\i\b strFilename}\line Required. The name of the file. CheckFileVersion will look for a file of this name in the directory  associated with the MsiPath object, and check that file's version against the string supplied in the  'version' parameter. See the {\uldb MsiPath}{\v MsiPath_Object} main topic for filename syntax. \par{\i\b strVersion}\line Required. Version string to compare against the existing file. This string must be of the form "a.b.c.d",   with each field containing a 16-bit numeric value. Omitted fields are assumed to be the least  significant (eg d then c then b then a) and are parsed as zeros. Thus, "2.1" is equivalent to "2.1.0.0".  If this string is empty, a version number of "0.0.0.0" (i.e. an unversioned file) is assumed. \par{\i\b strLanguage}\line Required.  A string containing containing identifiers as decimal numbers. If more than one language is supported,   the identifiers should be separated by commas.  See {\uldb GetLangIDStringFromFile}{\v MsiPath_GetLangIDStringFromFile}  for more information about the language string format. \par\fi0\li0{\b Return Types}\par\li180 {\f1 icfvNoExistingFile:}\tab No existing file with the specified name was found in the directory\line \tab \tab associated with the path object.\line {\f1 icfvExistingLower:}\tab The existing file's version is lower than the given version.\line {\f1 icfvExistingEqual:}\tab The existing file's version is equal to the given version.\line {\f1 icfvExistingHigher:}\tab The existing file's version is higher than the given version.\line {\f1 icfvVersStringError:}\tab A syntax error was found in the version string.\line \par\fi0\li0{\b Remarks}\par\li180 If the strVersion parameter is an empty string, and the existing file is versioned, icfvExistingHigher will  always be returned. If a valid string is supplied in strVersion, and the existing file is unversioned, icfvExistingLower will  always be returned. If a valid string is supplied in strVersion, and the existing file is of the same version, the languages specified in the  strLanguage parameter will be compared against the languages supported by the existing file.  If the existing file  supports the same set of languages as those specified in strLanguage (or if strLanguage is an empty string, and the  existing file has no language information either), icfvExistingEqual will be returned.  If strLanguage specifies  any languages that the existing file does not support, icfvExistingLower will be returned. If strVersion is an empty string, and the existing file is also unversioned, the 'LastModified' and 'Created' dates  of the existing file will be compared.  If they differ by more than two seconds (i.e. the file has been modified  since it was installed), icfvExistingHigher will be returned.  Otherwise, icfvExistingLower will be returned. \page #{\footnote MsiPath_GetImportModulesEnum} ${\footnote MsiPath.GetImportModulesEnum} +{\footnote MsiPath:GetImportModulesEnum} K{\footnote GetImportModulesEnum} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b GetImportModulesEnum Method \line\tx360\tab\fs18\b0{\uldb MsiPath Object}{\v MsiPath_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 This method is undocumented. \page #{\footnote MsiPath_GetLangIDStringFromFile} ${\footnote MsiPath.GetLangIDStringFromFile} +{\footnote MsiPath:GetLangIDStringFromFile} K{\footnote GetLangIDStringFromFile} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b GetLangIDStringFromFile Method \line\tx360\tab\fs18\b0{\uldb MsiPath Object}{\v MsiPath_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 Returns a string containing a file's language identifiers as decimal numbers.  If more than one language is supported, the identifiers will be separated by commas. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .GetLangIDStringFromFile({\i file})} \par{\i object}\line Required. The MsiPath object. \par{\i\b file}\line Required. The name of the file.  GetLangIDStringFromFile will look for a file of this name in the  directory associated with the MsiPath object.  See the {\uldb MsiPath}{\v MsiPath_Object}  main topic for filename syntax. \par\fi0\li0{\b Remarks}\par\li180 On the Win32 platform, The language IDs returned by GetLangIDStringFromFile are 16-bit values, expressed as  a decimal number.  Each ID consists of the combination of a primary language ID in bits 0-9,  and a sublanguage ID in bits 10-15.  For example, the primary language ID for German is  0000000111 (binary), with a sublanguage ID of 000001 (binary). Thus, the full LANGID is:\line  \line \tab 000001 + 0000000111 = 0x0407, or 1031 decimal.\line \line Similarly, the LANGID for U.S. English works out to be 1033, so for a file that supports  U.S. English and German, GetLangIDStringFromFile will return "1033, 1031".\line \line On the Macintosh platform, the language ID returned by GetLangIDStringFromFile is the 'region code'  found in the version resource of the file. \page #{\footnote MsiPath_GetSelfRelativeSD} ${\footnote MsiPath.GetSelfRelativeSD} +{\footnote MsiPath:GetSelfRelativeSD} K{\footnote GetSelfRelativeSD} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b GetSelfRelativeSD Method \line\tx360\tab\fs18\b0{\uldb MsiPath Object}{\v MsiPath_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 This method is undocumented. \page #{\footnote MsiPath_CheckLanguageIDs} ${\footnote MsiPath.CheckLanguageIDs} +{\footnote MsiPath:CheckLanguageIDs} K{\footnote CheckLanguageIDs} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b CheckLanguageIDs Method \line\tx360\tab\fs18\b0{\uldb MsiPath Object}{\v MsiPath_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 Checks a file against a set of language IDs, and returns an enumeration indicating  the relationship between the file languages and the supplied languages. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .CheckLanguageIDs({\i file, ids})} \par{\i object}\line Required. The MsiPath object. \par{\i\b file}\line Required. The name of the file. CheckLanguageIDs will look for a file of this name in the directory  associated with the MsiPath object, and check that file's supported languages against the languages  specified in the "ids" parameter.  See the {\uldb MsiPath}{\v MsiPath_Object}  main topic for filename syntax. \par{\i\b ids}\line Required. A string specifying the list of integer language IDs to check for. If more than one  ID is supplied, they must be separated by commas.  For example: "1031, 1033, 2057" \par\fi0\li0{\b Return Types}\par\li180 {\f1 iclExistNoFile:}\tab No existing file with the specified name in the directory\line \tab \tab associated with the path object.\line {\f1 iclExistNoLang:}\tab The existing file has no language information.\line {\f1 iclExistSubset:}\tab The specified language set encompasses every language\line \tab \tab supported in the existing file, plus additional languages\line \tab \tab not supported by the existing file.\line {\f1 iclExistEqual:}\tab The specified language set is identical to the language\line \tab \tab set supported by the existing file.\line {\f1 iclExistIntersect:}\tab The specified language set and the language set\line \tab \tab supported by the existing file have at least one language\line \tab \tab in common, and each set also encompasses at least one \line \tab \tab language not supported by the other.\line {\f1 iclExistSuperset:}\tab The existing file supports at least one language not\line \tab \tab encompassed by the specified language set.\line {\f1 iclExistNullSet:}\tab The specified language set and the language set supported\line \tab \tab by the existing file have no languages in common.\line {\f1 iclExistLangNeutral:}\tab The existing file returns a language-neutral LANGID, \line \tab \tab but the specified language set supports one or more \line \tab \tab specific languages.\line {\f1 iclNewLangNeutral:}\tab The specified language set contains a language-neutral\line \tab \tab LANGID, but the existing file supports one or more specific\line \tab \tab languages.\line {\f1 iclExistLangSetError:}\tab The existing file returns a language-neutral LANGID,\line \tab \tab but also contains one or more non-neutral IDs.\line {\f1 iclNewLangSetError:}\tab The specified language set contains a language-neutral\line \tab \tab LANGID, but also contains one or more non-neutral IDs.\line {\f1 iclLangStringError:}\tab The specified language set string contains a syntax \line \tab \tab error.  Possible errors include non-numeric characters,\line \tab \tab empty fields between comma separators, etc.\line \par\fi0\li0{\b Remarks}\par\li180 A LANGID value is "language-neutral" if the primary language ID (the lower 10 bits) portion  of the value is all zeros.  If either the existing file or the language set string passed  in the ids parameter contains a language-neutral LANGID, no other LANGIDs are allowable in  the set.\line \line If both the existing file and the given language set are "language-neutral", iclExistEqual  will be returned.\line \line If an empty string is passed in "ids", and the existing file supports at least one language,  iclExistNullSet will be returned.\line \page #{\footnote MsiPath_Compare} ${\footnote MsiPath.Compare} +{\footnote MsiPath:Compare} K{\footnote Compare} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b Compare Method \line\tx360\tab\fs18\b0{\uldb MsiPath Object}{\v MsiPath_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 The Compare method compares the path associated with the object  passed as an argument to the path of the current object.  An enumeration describing the relationship between the two path objects  is returned. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .Compare({\i path})} \par{\i object}\line Required. The MsiPath object. \par{\i\b path}\line Required. Another MsiPath object that will supply the path for comparison. \par\fi0\li0{\b Return Types}\par\li180 {\f1 ipcEqual:}\tab The paths of the two objects are equal.\line {\f1 ipcParent:}\tab The path of the object passed as an argument is a parent\line  \tab\tab directory of the current object's path.\line {\f1 ipcChild:}\tab The current object's path is a parent directory of the path of\line \tab\tab the object passed as an argument.\line {\f1 ipcNoRelation}\tab The paths of the two objects are unrelated (i.e. the root\line \tab\tab directory of each is different). \page #{\footnote MsiPath_Child} ${\footnote MsiPath.Child} +{\footnote MsiPath:Child} K{\footnote Child} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b Child Method \line\tx360\tab\fs18\b0{\uldb MsiPath Object}{\v MsiPath_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 The Child method compares the path associated with the object passed as an argument  (the "parent" path) to the path of the current object, and returns a string that   contains the portion of the current object's path not encompassed by the parent path,   i.e. the "child" path. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .Child({\i parent})} \par{\i object}\line Required. The MsiPath object. \par{\i\b parent}\line Required. An MsiPath object which represents a path that is a parent of the current  object's path. \par\fi0\li0{\b Remarks}\par\li180 The child path returned will always contain a trailing directory separator. For example, if the path of the current object is:\line "c:\\Windows\\System\\Drivers\\"\line \line and the path of the parent object is:\line "c:\\Windows\\"\line \line the string returned by the Child method will be:\line "System\\Drivers\\"\line \line If the paths of the two MsiPath objects are equal, an empty string will be returned.  If the  "parent object" represents a path that is not actually a parent of the current object's path,  a run-time error (1344: "Not a parent") will be thrown. \page #{\footnote MsiPath_TempFileName} ${\footnote MsiPath.TempFileName} +{\footnote MsiPath:TempFileName} K{\footnote TempFileName} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b TempFileName Method \line\tx360\tab\fs18\b0{\uldb MsiPath Object}{\v MsiPath_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 Creates a temporary file in this object's directory, and returns  the full path to the temporary file.  An optional prefix and/or extension may be supplied  for use when generating the file name.  The generated file name is of the 8.3 form where  the characters in the file name not used by the prefix are random hexidecimal numbers. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .TempFileName({\i prefix, extension, fileNameOnly})} \par{\i object}\line Required. The MsiPath object. \par{\i\b prefix}\line Optional. The prefix for the file name.  At most the first 8 characters of this string  are used.  If this argument is not supplied, no prefix is given to the file name (the  file name will consist entirely of random hexidecimal digits. \par{\i\b extension}\line Optional. The extension for the file name.  At most the first 3 characters of this string  are used.  If this argument is not supplied, the default extension "tmp" is used. \par{\i\b fileNameOnly}\line Optional. True to return the temporary file name only.  False to return the full path of the  temporary file. \par\fi0\li0{\b Remarks}\par\li180  None. \page #{\footnote MsiPath_FindFile} ${\footnote MsiPath.FindFile} +{\footnote MsiPath:FindFile} K{\footnote FindFile} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b FindFile Method \line\tx360\tab\fs18\b0{\uldb MsiPath Object}{\v MsiPath_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \tx7000\tab{\b Signature Table} \par}\li180 The FindFile method attempts to find a match for the file signature passed in,  and returns True if a file of the specified filter exists. If found, the  path is changed to the location of the file. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .FindFile({\i record, depth})} \par{\i object}\line Required. The MsiPath object. \par{\i\b record}\line Required. The file signature filter. Must be of the same form as a record from the  {\uldb Signature}{\v _msi_Signature_Table@msi.hlp} table MINUS the key {\i\b Signature} column. \par{\i\b depth}\line Optional. The depth to which the file signature is to be searched. \page #{\footnote MsiPath_SubFolders} ${\footnote MsiPath.SubFolders} +{\footnote MsiPath:SubFolders} K{\footnote SubFolders} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b SubFolders Method \line\tx360\tab\fs18\b0{\uldb MsiPath Object}{\v MsiPath_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 Returns a collection of strings containing the names of all the sub-folders of the path. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .SubFolders} \par{\i object}\line Required. The MsiPath object. \par\fi0\li0{\b Remarks}\par\li180 !!Additional notes!!  \page #{\footnote MsiPath_BindImage} ${\footnote MsiPath.BindImage} +{\footnote MsiPath:BindImage} K{\footnote BindImage} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b BindImage Method \line\tx360\tab\fs18\b0{\uldb MsiPath Object}{\v MsiPath_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 Binds an executable import address table to the functions imported from DLLS.  \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .BindImage({\i file, dllPath})} \par{\i object}\line Required. The MsiPath object. \par{\i\b file}\line Required. the executable filename string. \par{\i\b dllPath}\line Optional. A string representing the set of {\b ; } separated paths where to get the import DLLS.  The function prefixes the {\b dllPath} string with the path of the executable and appends it  with the system path. \par\fi0\li0{\b Remarks}\par\li180 Applicable only on Windows systems. The service does nothing on Mac. \page #{\footnote MsiPath_SupportsLFN} ${\footnote MsiPath.SupportsLFN} +{\footnote MsiPath:SupportsLFN} K{\footnote SupportsLFN} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b SupportsLFN Property \line\tx360\tab\fs18\b0{\uldb MsiVolume Object}{\v MsiVolume_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 Boolean indicating whether the volume this path is on supports long file names.  If False is returned, only 8.3 file names may be used. Read-only. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .SupportsLFN} \par{\i object}\line Required. The MsiVolume object. \page #{\footnote MsiFileCopy_Object} ${\footnote MsiFileCopy Object} K{\footnote MsiFileCopy} +{\footnote Class:MsiFileCopy} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b MsiFileCopy Object \line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 The MsiFileCopy object is used to copy files from a specified source directory to a specified  destination directory.  The MsiFileCopy object is created by calling the   {\uldb CreateCopier}{\v MsiServices_CreateCopier} function. \par\li0{\b Methods}\par\li180 {\uldb CopyTo}{\v MsiFileCopy_CopyTo}\line {\uldb ChangeMedia}{\v MsiFileCopy_ChangeMedia}\line \page #{\footnote MsiFileCopy_CopyTo} ${\footnote MsiFileCopy.CopyTo} +{\footnote MsiFileCopy:CopyTo} K{\footnote CopyTo} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b CopyTo Method \line\tx360\tab\fs18\b0{\uldb MsiFileCopy Object}{\v MsiFileCopy_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 Copies a file from a source path to a destination path. File parameters are  supplied as an MsiRecord object. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .CopyTo({\i srcPath, destPath, paramRec})} \par{\i object}\line Required. The MsiFileCopy object. \par{\i\b srcPath}\line Required. The MsiPath object representing the source directory. \par{\i\b destPath}\line Required. The MsiPath object representing the destination directory. This directory must exist.  If it does not, a run-time error will be generated. \par{\i\b paramRec}\line Required. An MsiRecord object containing file parameters as follows:\line   Field 1: For compressed files, the Diamond cabinet identifier.  For uncompressed files,\line       the source file name.\line   Field 2: The destination file name.\line   Field 3: The file attributes to set - an integer containing bit flags:\line     Bit 0: Read Only\line     Bit 1: Hidden\line     Bit 2: System\line     (all other bits are ignored)\line   Field 4: Unclustered size of file, in bytes. \par\fi0\li0{\b Remarks}\par\li180 When uncompressing files from cabinets, note that the {\uldb ChangeMedia}{\v MsiFileCopy_ChangeMedia}  method must first be called to designate the proper source cabinet before calling CopyTo.\line  \line  (Windows Only)\line  New files created by the CopyTo function will always have the archive bit set, which is the standard   for new files created by any application.  Thus, there is no separate bit in field 3 of the record   passed to CopyTo for setting the archive bit. \page #{\footnote MsiFileCopy_ChangeMedia} ${\footnote MsiFileCopy.ChangeMedia} +{\footnote MsiFileCopy:ChangeMedia} K{\footnote ChangeMedia;Cabinet files,compressed} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b ChangeMedia Method \line\tx360\tab\fs18\b0{\uldb MsiFileCopy Object}{\v MsiFileCopy_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 The method is used to request a change in source media. For compressed files in particular, this method  signals that the source of compressed data (as used by the {\uldb CopyTo}{\v MsiFileCopy_CopyTo} method)  needs to change from one cabinet file to another. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .ChangeMedia({\i srcPath, keyFileName})} \par{\i object}\line Required. The MsiFileCopy object. \par{\i\b srcPath}\line Required. The MsiPath object representing the media source directory. \par{\i\b keyFileName}\line Required. The name of a 'key' file on the source media. See the remarks below. \par\fi0\li0{\b Remarks}\par\li180 After a cabinet Copier object has been created (via the MsiServices  {\uldb CreateCopier}{\v MsiServices_CreateCopier} method), ChangeMedia must be  called to designate the source cabinet file before the {\uldb CopyTo}{\v MsiFileCopy_CopyTo}  method is called, and again each time a file compressed in a cabinet other than the  current cabinet is to be copied.  Also, note that for files that are split across cabinets,  the CopyTo method will return with an error record (imsgNeedNextCabinet, error number 1390)  when the file data contained in the current cabinet has finished copying.  In this case,  the ChangeMedia method should be called with the name of the next cabinet, and then CopyTo  should be called again with the same file, to allow the second part of the split file to  finish copying (this procedure should be repeated as necessary to complete copying of files  that may be split across more than two cabinets).\line \line When copying files from cabinets, the name supplied in the keyFileName parameter MUST be the name of the  cabinet file to be opened.  If a valid cabinet file with this name is not found in the directory specified  by the srcPath object, an error will be returned.  \par  If ChangeMedia is being called for a non-cabinet MsiFileCopy object, the keyFileName is ignored.  \par {\b Cabinets stored in a Database stream}\par  If the keyFileName name is preceded by a '#' character, this indicates that the source media is a a cabinet   that is stored in a stream within the .MSI database. In this case, ChangeMedia will attempt to open   and copy from a stream within the MsiStorage object that was passed to the CreateCopier method.  The   name of the stream is the value in keyFileName (without the leading '#'). {\b Cabinets stored in a Launcher resource}\par  If the keyFileName name is preceded by an '@'character, this indicates that the source media   is a cabinet stored within a resource of the launching executable file. In this case, ChangeMedia will   attempt to find and load the cabinet from a resource whose resource name is the same as the value in   keyFileName (without the leading '@'), and whose integral resource type is RT_INSTALL_DIMCAB (42).\line   \line  NOTE!  The functionality of copying files from cabinets within a module resource is not available via   automation.  This is because there is no standard way for an automation controller to initialize an   MsiFileCopier object with a valid module handle, which is required by ChangeMedia to be able to locate   module resources.  Thus, this functionality is only available when running the Installer via a   host launcher that has direct access to the Installer COM interfaces. \page #{\footnote MsiFilePatch_Object} ${\footnote MsiFilePatch Object} K{\footnote MsiFilePatch} +{\footnote Class:MsiFilePatch} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b MsiFilePatch Object \line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 The MsiFilePatch object is used to patch existing files in place.  The MsiFilePatch object is created by calling the   {\uldb CreatePatcher}{\v MsiServices_CreatePatcher} function. \par\li0{\b Methods}\par\li180 {\uldb ApplyPatch}{\v MsiFilePatch_ApplyPatch}\line {\uldb ContinuePatch}{\v MsiFilePatch_ContinuePatch}\line {\uldb CancelPatch}{\v MsiFilePatch_CancelPatch}\line {\uldb CanPatchFile}{\v MsiFilePatch_CanPatchFile}\line \page #{\footnote MsiFilePatch_ApplyPatch} ${\footnote MsiFilePatch.ApplyPatch} +{\footnote MsiFilePatch:ApplyPatch} K{\footnote ApplyPatch} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b ApplyPatch Method \line\tx360\tab\fs18\b0{\uldb MsiFilePatch Object}{\v MsiFilePatch_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 This method applies a patch to a target file, producing an output file. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .ApplyPatch(targetPath,targetFile,outputPath,outputFile,patchPath,patchFile,perTick)} \par{\i object}\line Required. The MsiFilePatch object. \par{\i targetPath}\line Required. An MsiPath object specifying the location of the file to be patched. \par{\i targetName}\line Required. The name of the target file. \par{\i outputPath}\line Required. An MsiPath object specifying the location of the output file. \par{\i outputName}\line Required. The name of the output file. \par{\i patchPath}\line Required. An MsiPath object specifying the location of the patch file. \par{\i patchName}\line Required. The name of the patch file. \par{\i perTick}\line Optional. The number of bytes to patch. This method will return control to the caller  after these number of bytes have been patched, or the file is completely patched, whichever  occurs first.  Note that the actual patch application will continue in a seperate thread  after this method returns, if necessary.  This method may return after more than the given number of  bytes has been patched.  If this method completes before the file has been patched,  an error is thrown indicating  how many bytes have been patched. The caller should call {\uldb ContinuePatch}{\v MsiFilePatch_ContinuePatch}  to resume the patch application. If the file has been compeletely patched and no errors  have occured, no error is thrown. Ommitting or passing 0 for this value causes this method to patch the  entire file before returning. \par\fi0\li0{\b Remarks}\par\li180 \page #{\footnote MsiFilePatch_ContinuePatch} ${\footnote MsiFilePatch.ContinuePatch} +{\footnote MsiFilePatch:ContinuePatch} K{\footnote ContinuePatch} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b ContinuePatch Method \line\tx360\tab\fs18\b0{\uldb MsiFilePatch Object}{\v MsiFilePatch_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 This method continues a patch application initiated by {\uldb ApplyPatch}{\v MsiFilePatch_ApplyPatch}. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .ContinuePatch()} \par{\i object}\line Required. The MsiFilePatch object. \par\fi0\li0{\b Remarks}\par\li180 This method will patch at least as many bytes as specified in the {\i perTick} parameter to  {\uldb ApplyPatch}{\v MsiFilePatch_ApplyPatch}, or the remainder of the file, whichever is less.  If the entire file is not patched and error is thrown indicating the number of bytes patched.  In  this case, this method should be called again to resume the patch application. \page #{\footnote MsiFilePatch_CancelPatch} ${\footnote MsiFilePatch.CancelPatch} +{\footnote MsiFilePatch:CancelPatch} K{\footnote CancelPatch} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b CancelPatch Method \line\tx360\tab\fs18\b0{\uldb MsiFilePatch Object}{\v MsiFilePatch_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 This method cancels a patch application initiated by {\uldb ApplyPatch}{\v MsiFilePatch_ApplyPatch}. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .CancelPatch()} \par{\i object}\line Required. The MsiFilePatch object. \par\fi0\li0{\b Remarks}\par\li180 \page #{\footnote MsiFilePatch_CanPatchFile} ${\footnote MsiFilePatch.CanPatchFile} +{\footnote MsiFilePatch:CanPatchFile} K{\footnote CanPatchFile} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b CanPatchFile Method \line\tx360\tab\fs18\b0{\uldb MsiFilePatch Object}{\v MsiFilePatch_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 This method determines if an existing file can be patched.   \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .CanPatchFile(targetPath,targetName,patchPath,patchName)} \par{\i object}\line Required. The MsiFilePatch object. \par{\i targetPath}\line Required. An MsiPath object representing the location of the file being checked. \par{\i targetFile}\line Required. The name of the file being checked. \par{\i patchPath}\line Required. An MsiPath object representing the location of the patch file. \par{\i patchFile}\line Required. The name of the patch file. \par\fi0\li0{\b Return Types}\par\li180 {\f1 icpCanPatch:}\tab Can patch file to update.\line {\f1 icpCannotPatch:}\tab File cannot be patched.\line {\f1 icpUpToDate:}\tab File is already up-to-date. Patch is unecessary. \page
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\darwin\src\help\transfrm.rtf ===
{\rtf1\ansi {\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}} {\colortbl;} \fs20 #{\footnote Transform_Overview} ${\footnote Transform} K{\footnote Transform} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b What Is A Transform? \par}\li180 A Transform is a storage file consisting of various streams for the various tables.  Each table stream represents the actions to be performed on that table.  A mask  determines what action to take and is followed by the required data to complete  the action. To view the actions a transform file will perform, use the {\uldb Transform Tool}{\v MsiTran_Tool}  with the {\b -v} option. The following transform actions are supported:\line\line  {\f1      Add a table}\line  {\f1      Delete a table}\line  {\f1      Add a column to a table}\line  {\f1      Add a row to a table}\line  {\f1      Delete a row from a table}\line  {\f1      Update a row in a table}\line \page #{\footnote Transform_Creating} ${\footnote Transform} K{\footnote Transform} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b Creating Transforms \par}\li180 Transforms are created by comparing a base database with a reference database  and generating a file containing the differences between  the two. This is accomplished via the  {\uldb GenerateTransform}{\v MsiDatabase_GenerateTransform} method of the  IMsiDatabase object. Or you can use the command line  {\uldb Transform Tool}{\v MsiTran_Tool} with the {\b -g} option.\par \page #{\footnote Transform_Scenarios} ${\footnote Transform} K{\footnote Transform} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b Transform Scenarios \par}\li180 The data for a Darwin installation is stored in a set of relational tables. In  many situations a variation of the tables is required:\line\line 1. Localization - minor to major text changes, file and logic changes\line 2. Upgrades/patches - changes and additions to existing tables\line 3. Product variants - addition and removal of components\line 4. Admin customization - tailoring tables to corporate needs\line\line In all these situations, the same technology is used and is incorporated into  the Darwin components. A transform is read and applied to the database tables to  transform them into the desired set of table data. \page #{\footnote Transform_Applying} ${\footnote Transform} K{\footnote Transform} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b Applying Transforms \par}\li180 Transforms are generally applied by setting the  {\uldb TRANSFORMS}{\v Property_TRANSFORMS} property to the list of transforms  to be be applied. The engine will apply these transforms to the database   when it opens the database. Transforms can also be applied by calling the  {\uldb SetTransform}{\v MsiDatabase_SetTransform} method of the MsiDatabase  object, or using the command line {\uldb Transform Tool}{\v MsiTran_Tool} with  the {\b -a} option. \page
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\darwin\src\help\services.rtf ===
{\rtf1\ansi {\fonttbl{\f0\fswiss Helv;}{\f1\fmodern Courier New;}} {\colortbl;} \fs20 #{\footnote MsiServices_Object} ${\footnote MsiServices Object} K{\footnote MsiServices} +{\footnote Class:MsiServices} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b MsiServices Object \line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 The MsiServices component provides common platform services, exposed as a set    of objects which expose, in a platform-independent manner, functionality such as  file, directory, registry, and memory services. Common data handling is  supported by the string and record objects, and by the property management.  The database subsystem is also contained within the services component. The MsiServices object must be the first to be instantiated, as the other  objects are dependent upon its functionality. No errors are handled within  this component; the information is packaged and returned to the outside caller.  For C++ callers, the error information is returned as a record object; for  OLE automation callers, it is returned in the error exception object. \par\li0{\b Properties}\par\li180 {\uldb LoggingEnabled}{\v MsiServices_LoggingEnabled}\line \par\li0{\b Methods}\par\li180 {\uldb AttachClient}{\v MsiServices_AttachClient}\line {\uldb DetachClient}{\v MsiServices_DetachClient}\line {\uldb CreateCopier}{\v MsiServices_CreateCopier}\line {\uldb CreatePatcher}{\v MsiServices_CreatePatcher}\line {\uldb CreateString}{\v MsiServices_CreateString}\line {\uldb CreateRecord}{\v MsiServices_CreateRecord}\line {\uldb SetPlatformProperties}{\v MsiServices_SetPlatformProperties}\line {\uldb GetShellFolderPath}{\v MsiServices_GetShellFolderPath}\line {\uldb GetUserProfilePath}{\v MsiServices_GetUserProfilePath}\line {\uldb CreateLog}{\v MsiServices_CreateLog}\line {\uldb WriteLog}{\v MsiServices_WriteLog}\line {\uldb CreateDatabase}{\v MsiServices_CreateDatabase}\line {\uldb CreateDatabaseFromStorage}{\v MsiServices_CreateDatabaseFromStorage}\line {\uldb CreateFilePath}{\v MsiServices_CreateFilePath}\line {\uldb CreatePath}{\v MsiServices_CreatePath}\line {\uldb CreateVolume}{\v MsiServices_CreateVolume}\line {\uldb CreateVolumeFromLabel}{\v MsiServices_CreateVolumeFromLabel}\line {\uldb EnumDriveType}{\v MsiServices_EnumDriveType}\line {\uldb ClearAllCaches}{\v MsiServices_ClearAllCaches}\line {\uldb GetModuleUsage}{\v MsiServices_GetModuleUsage}\line {\uldb GetLocalPath}{\v MsiServices_GetLocalPath}\line {\uldb CreateRegKey}{\v MsiServices_CreateRegKey}\line {\uldb RegisterFont}{\v MsiServices_RegisterFont}\line {\uldb UnRegisterFont}{\v MsiServices_UnRegisterFont}\line {\uldb WriteIniFile}{\v MsiServices_WriteIniFile}\line {\uldb ReadIniFile}{\v MsiServices_ReadIniFile}\line {\uldb GetLangNamesFromLangIDString}{\v MsiServices_GetLangNamesFromLangIDString}\line {\uldb CreateStorage}{\v MsiServices_CreateStorage}\line {\uldb GetUnhandledError}{\v MsiServices_GetUnhandledError}\line {\uldb SupportLanguageId}{\v MsiServices_SupportLanguageId}\line {\uldb GetAllocator}{\v MsiServices_GetAllocator}\line {\uldb CreateShortcut}{\v MsiServices_CreateShortcut}\line {\uldb RemoveShortcut}{\v MsiServices_RemoveShortcut}\line {\uldb ExtractFileName}{\v MsiServices_ExtractFileName}\line {\uldb ValidateFileName}{\v MsiServices_ValidateFileName}\line {\uldb CreateFileStream}{\v MsiServices_CreateFileStream}\line {\uldb CreateMemoryStream}{\v MsiServices_CreateMemoryStream}\line {\uldb RegisterTypeLibrary}{\v MsiServices_RegisterTypeLibrary}\line {\uldb UnregisterTypeLibrary}{\v MsiServices_UnregisterTypeLibrary}\line {\uldb RipFileNameFromPath}{\v MsiServices_RipFileNameFromPath}\line \page #{\footnote MsiServices_AttachClient} ${\footnote MsiServices.AttachClient} +{\footnote MsiServices:AttachClient} K{\footnote AttachClient} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b AttachClient method \line\tx360\tab\fs18\b0{\uldb MsiServices Object}{\v MsiServices_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 This method is undocumented. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .AttachClient} \par{\i object}\line Required. The MsiServices object. \page #{\footnote MsiServices_DetachClient} ${\footnote MsiServices.DetachClient} +{\footnote MsiServices:DetachClient} K{\footnote DetachClient} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b DetachClient method \line\tx360\tab\fs18\b0{\uldb MsiServices Object}{\v MsiServices_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 This method is undocumented. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .DetachClient} \par{\i object}\line Required. The MsiServices object. \page #{\footnote MsiServices_LoggingEnabled} ${\footnote MsiServices.LoggingEnabled} +{\footnote MsiServices:LoggingEnabled} K{\footnote LoggingEnabled} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b LoggingEnabled Property \line\tx360\tab\fs18\b0{\uldb MsiServices Object}{\v MsiServices_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 A boolean indicating whether logging is currently enabled. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .LoggingEnabled} \par{\i object}\line Required. The MsiServices object. \page #{\footnote MsiServices_CreateString} ${\footnote MsiServices.CreateString} +{\footnote MsiServices:CreateString} K{\footnote CreateString} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b CreateString Method \line\tx360\tab\fs18\b0{\uldb MsiServices Object}{\v MsiServices_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 Returns an MsiString object containing an empty string. Note that MsiString  objects are not used by the OLE Automation interface, except for testing. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .CreateString} \par{\i object}\line Required. The MsiServices object. \page #{\footnote MsiServices_CreateRecord} ${\footnote MsiServices.CreateRecord} +{\footnote MsiServices:CreateRecord} K{\footnote CreateRecord} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b CreateRecord Method \line\tx360\tab\fs18\b0{\uldb MsiServices Object}{\v MsiServices_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 Returns a new {\uldb MsiRecord object}{\v MsiRecord_Object} with the  requested number of fields. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .CreateRecord({\i count})} \par{\i object}\line Required. The MsiServices object. \par{\i\b count}\line Required. The number of fields, which may be 0. The upper limit is memory limited. \par\fi0\li0{\b Remarks}\par\li180 Field 0, not one of the fields in {\i\b count}, is reserved for the format string,  which is used by {\uldb MsiRecord.FormatText}{\v MsiRecord_FormatText}. \page #{\footnote MsiServices_SetPlatformProperties} ${\footnote MsiServices.SetPlatformProperties} +{\footnote MsiServices:SetPlatformProperties} K{\footnote SetPlatformProperties} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b SetPlatformProperties Method \line\tx360\tab\fs18\b0{\uldb MsiServices Object}{\v MsiServices_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 Sets hardware and operating system properties. See  {\uldb Property Summary}{\v Property_Contents} for complete listing.  This method is normally called by the MsiEngine object at initialization. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .SetPlatformProperties{\i table, allUsersProfile}} \par{\i object}\line Required. The MsiServices object. \par{\i\b table}\line Required. The MsiTable object containing the property definitions.  The first column must be the primary key containing the property names.  The second column must contain the string values of the properties.  The table may be empty or may contain initial property definitions. \par{\i\b allUsersProfile}\line Required. Boolean. True to set profile folder properties to folders in the "All Users"  profile, if it exists. False to set those properties to folders in the user's personal  profile. \page #{\footnote MsiServices_GetShellFolderPath} ${\footnote MsiServices.GetShellFolderPath} +{\footnote MsiServices:GetShellFolderPath} K{\footnote GetShellFolderPath} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b GetShellFolderPath Method \line\tx360\tab\fs18\b0{\uldb MsiServices Object}{\v MsiServices_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 Returns the path to a shell folder. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .GetShellFolderPath({\i folderId, regValue})} \par{\i object}\line Required. The MsiServices object. \par{\i\b folderId}\line Required. The CSIDL_* value corresponding to this shell folder. These values are  defined in the Windows header shlobj.h. \par{\i\b regValue}\line Optional. The registry value under  (HKEY_CURRENT_USER or HKEY_LOCAL_MACHINE)\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\(Shell Folders or User Shell Folders)  in which the folder is registered. This argument is required to locate a folder that  does not physically exist. \page #{\footnote MsiServices_GetUserProfilePath} ${\footnote MsiServices.GetUserProfilePath} +{\footnote MsiServices:GetUserProfilePath} K{\footnote GetUserProfilePath} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b GetUserProfilePath Method \line\tx360\tab\fs18\b0{\uldb MsiServices Object}{\v MsiServices_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 Returns the path to the user's profile folder on Windows NT.  Returns an empty string on Windows 95. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .GetUserProfilePath} \par{\i object}\line Required. The MsiServices object. \page #{\footnote MsiServices_CreateLog} ${\footnote MsiServices.CreateLog} +{\footnote MsiServices:CreateLog} K{\footnote CreateLog} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b CreateLog Method \line\tx360\tab\fs18\b0{\uldb MsiServices Object}{\v MsiServices_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 Opens a file for subsequent logging using the {\uldb WriteLog}{\v MsiServices_WriteLog} method. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .CreateLog({\i path, append})} \par{\i object}\line Required. The MsiServices object. \par{\i\b path}\line Required. The path specification for the logfile to be created. \par{\i\b append}\line Required. A boolean: True to append to existing information in the file, False to clear any existing data. \page #{\footnote MsiServices_WriteLog} ${\footnote MsiServices.WriteLog} +{\footnote MsiServices:WriteLog} K{\footnote WriteLog} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b WriteLog Method \line\tx360\tab\fs18\b0{\uldb MsiServices Object}{\v MsiServices_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 Writes a line of text to the log file. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .WriteLog({\i text})} \par{\i object}\line Required. The MsiServices object. \par{\i\b text}\line Required. A string containing the text to write to the log file.  A line separator will be written following the text. \page #{\footnote MsiServices_CreateDatabase} ${\footnote MsiServices.CreateDatabase} +{\footnote MsiServices:CreateDatabase} K{\footnote CreateDatabase;idbCreate;idbMsi;idbAccess;idbSQLServer;idbODBC} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b CreateDatabase Method \line\tx360\tab\fs18\b0{\uldb MsiServices Object}{\v MsiServices_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 Creates and returns an MsiDatabase object. Generates an error if the database  object could not be succcessful connected to the database. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .CreateDatabase({\i name, openMode})} \par{\i object}\line Required. The MsiServices object. \par{\i\b name}\line Optional. String containing the name of the database. If no name is  supplied, a temporary database will be created which is not persisted. \par{\i\b openMode}\line Required. How to open the database file, one of the idoEnum values: \line{\f1  idoReadOnly     } - Read only \line{\f1  idoTransact     } - Transacted mode, can rollback \line{\f1  idoDirect       } - Direct write, not transacted \line{\f1  idoCreate       } - Create new storage file, transacted mode \line{\f1  idoCreateDirect } - Create new storage file, direct mode \line{\f1  idoScript       } - Open an execution script for enumeration \par\fi0\li0{\b Remarks}\par\li180 If the database is opened read-write, changes will be written to that database.  If it is opened read-only, then SetOutputDatabase must be used to save updates. \page #{\footnote MsiServices_CreateDatabaseFromStorage} ${\footnote MsiServices.CreateDatabaseFromStorage} +{\footnote MsiServices:CreateDatabaseFromStorage} K{\footnote CreateDatabaseFromStorage} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b CreateDatabaseFromStorage Method \line\tx360\tab\fs18\b0{\uldb MsiServices Object}{\v MsiServices_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 Creates and returns an MsiDatabase object using an opened MsiStorage  object to access the database streams. Generates an error if the database   object could not be succcessful generated from the storage object. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .CreateDatabaseFromStorage({\i storage, readOnly})} \par{\i object}\line Required. The MsiServices object. \par{\i\b storage}\line Required. MsiStorage object which contains the database data.  This must have been opened read-write if the database is to be opened read-write. \par{\i\b readOnly}\line Required. Boolean: True to open read-only, False to open read-write \par\fi0\li0{\b Remarks}\par\li180 If the database is opened read-write, changes will be written to that database.  If it is opened read-only, then SetOutputDatabase must be used to save updates. \page #{\footnote MsiServices_CreateFilePath} ${\footnote MsiServices.CreateFilePath} +{\footnote MsiServices:CreateFilePath} K{\footnote CreateFilePath} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b CreateFilePath Method \line\tx360\tab\fs18\b0{\uldb MsiServices Object}{\v MsiServices_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 This method provides for the creation of an {\uldb MsiPath}{\v MsiPath_Object} object, based on a full path to a file. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .CreateFilePath({\i path})} \par{\i object}\line Required. The MsiServices object. \par{\i\b path}\line Required. A full pathname to a file, including a full volume specification. \par\fi0\li0{\b Remarks}\par\li180 See the documentation for the {\uldb MsiPath}{\v MsiPath_Object} object for details  regarding path and volume syntax. \page #{\footnote MsiServices_RipFileNameFromPath} ${\footnote MsiServices.RipFileNameFromPath} +{\footnote MsiServices:RipFileNameFromPath} K{\footnote RipFileNameFromPath} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b RipFileNameFromPath Method \line\tx360\tab\fs18\b0{\uldb MsiServices Object}{\v MsiServices_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 Given a full path to a file, this method returns the file name. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .RipFileNameFromPath({\i path})} \par{\i object}\line Required. The MsiServices object. \par{\i\b path}\line Required. A full pathname to a file, including a full volume specification. \par\fi0\li0{\b Remarks}\par\li180 See the documentation for the {\uldb MsiPath}{\v MsiPath_Object} object for details  regarding path and volume syntax. \page #{\footnote MsiServices_CreatePath} ${\footnote MsiServices.CreatePath} +{\footnote MsiServices:CreatePath} K{\footnote CreatePath} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b CreatePath Method \line\tx360\tab\fs18\b0{\uldb MsiServices Object}{\v MsiServices_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 This method provides for the creation of an {\uldb MsiPath}{\v MsiPath_Object} object. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .CreatePath({\i path})} \par{\i object}\line Required. The MsiServices object. \par{\i\b path}\line Required. A full pathname to a directory, including a full volume specification. \par\fi0\li0{\b Remarks}\par\li180 See the documentation for the {\uldb MsiPath}{\v MsiPath_Object} object for details  regarding path and volume syntax. \page #{\footnote MsiServices_CreateVolume} ${\footnote MsiServices.CreateVolume} +{\footnote MsiServices:CreateVolume} K{\footnote CreateVolume} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b CreateVolume Method \line\tx360\tab\fs18\b0{\uldb MsiServices Object}{\v MsiServices_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 This method provides for the creation of an MsiVolume object, which is  used to represent a physical disk drive. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .CreateVolume({\i volPath,fSuppressLFN})} \par{\i object}\line Required. The MsiServices object. \par{\i\b volPath}\line Required. A pathname that includes a valid volume reference.  See the documentation  for the {\uldb MsiPath}{\v MsiPath_Object} object for details regarding path syntax. \par\fi0\li0{\b Remarks}\par\li180 Note: Any path information beyond the volume specification, and any trailing directory  separators, will be ignored by the CreateVolume method.  Thus, all the following calls   are functionally identical:\line \line  {\f1  services.CreateVolume("\\\\MyServer\\MyShare")\line  services.CreateVolume("\\\\MyServer\\MyShare\\")\line  services.CreateVolume("\\\\MyServer\\MyShare\\Dir1\\Dir2")\line  services.CreateVolume("\\\\MyServer\\MyShare\\Dir1\\Dir2\\")\line \page #{\footnote MsiServices_CreateVolumeFromLabel} ${\footnote MsiServices.CreateVolumeFromLabel} +{\footnote MsiServices:CreateVolumeFromLabel} K{\footnote CreateVolumeFromLabel} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b CreateVolumeFromLabel Method \line\tx360\tab\fs18\b0{\uldb MsiServices Object}{\v MsiServices_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 This method searches for a mounted volume having a specified type and specified label.  If the specified volume is found, an {\uldb MsiVolume}{\v MsiVolume_Object} object will  be created and returned. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .CreateVolumeFromLabel({\i label, driveType})} \par{\i object}\line Required. The MsiServices object. \par{\i\b label}\line Required. A string specifying the label of the volume to be searched for. \par{\i\b driveType}\line Required. An enumeration value of type {\uldb idtEnum}{\v MsiServices_EnumDriveType}, specifying  the type of volume to be searched for. \par\fi0\li0{\b Remarks}\par\li180 If there is no mounted volume of the specified type and label, error 1000 will be thrown, and  no volume object will be returned. \page #{\footnote MsiServices_CreateCopier} ${\footnote MsiServices.CreateCopier} +{\footnote MsiServices:CreateCopier} K{\footnote CreateCopier} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b CreateCopier Method \line\tx360\tab\fs18\b0{\uldb MsiServices Object}{\v MsiServices_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 Creates an {\uldb MsiFileCopy}{\v MsiFileCopy_Object} object, which can be  used to copy files from a source directory (i.e. the full path associated  with this MsiPath object) to a specified destination directory.  Once the  MsiFileCopy object has been created, the {\uldb CopyTo}{\v MsiFileCopy_CopyTo}  function can be used to perform the actual file copy. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .CreateCopier({\i copierType,storage})} \par{\i object}\line Required. The MsiServices object. \par{\i\b copierType}\line An integer enumeration value specifying the type of copier object to be created. The  following values are acceptable:\par {\f1 \ul ictFileCopier = 0}\line A copy object suitable for copying uncompressed files.\par {\f1 \ul ictFileCabinetCopier = 1}\line A copy object suitable for copying files compressed in a standard cabinet file.\par {\f1 \ul ictStreamCabinetCopier = 2}\line A copy object suitable for copying files compressed in a cabinet stored as a stream within an MsiStorage  object (see the {\i\b storage} parameter below).\par {\f1 \ul ictResourceCabinetCopier = 3}\line Obsolete.  Currently still supported for compatibility.  Copies files from a cabinet stored as a  resource within a Launcher.  However, note that from automation, there's no way to exploit this  copier type, because we have no mechanism available through automation to provide the valid HINSTANCE  of a module containing the cabinet resource.\par \par{\i\b storage}\line Optional.  If the copier type is ictStreamCabinetCopier, this parameter must be supplied as an MsiStorage  object that contains a cabinet as a named stream. \page #{\footnote MsiServices_CreatePatcher} ${\footnote MsiServices.CreatePatcher} +{\footnote MsiServices:CreatePatcher} K{\footnote CreatePatcher} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b CreatePatcher Method \line\tx360\tab\fs18\b0{\uldb MsiServices Object}{\v MsiServices_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 Creates an {\uldb MsiFilePatch}{\v MsiFilePatch_Object} object, which can be  used to patch existing files. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .CreatePatcher} \par{\i object}\line Required. The MsiServices object. \page #{\footnote MsiServices_EnumDriveType} ${\footnote MsiServices.EnumDriveType} +{\footnote MsiServices:EnumDriveType} K{\footnote EnumDriveType;idtEnum} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b EnumDriveType Method \line\tx360\tab\fs18\b0{\uldb MsiServices Object}{\v MsiServices_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 Returns an enumeration object containing a collection of MsiVolume objects representing all the mounted volumes  of a specified type. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .EnumDriveType({\i driveType})} \par{\i object}\line Required. The MsiServices object. \par{\i\b driveType}\line Required. The type of volume to be enumerated, one of idtEnum:\line    {\f1 idtAllDrives = 1   } Enumerate drives of all types\line    {\f1 idtRemovable = 2   } Drive contains non-floppy removable media\line    {\f1 idtFixed     = 3   } Hard disk drive\line    {\f1 idtRemote    = 4   } Network server share\line    {\f1 idtCDROM     = 5   } CD_ROM drive\line    {\f1 idtRAMDisk   = 6   } RAM disk\line    {\f1 idtFloppy    = 2   } Floppy disk (currently not distinguished from idtRemovable). \line \page #{\footnote MsiServices_ClearAllCaches} ${\footnote MsiServices.ClearAllCaches} +{\footnote MsiServices:ClearAllCaches} K{\footnote ClearAllCaches} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b ClearAllCaches Method \line\tx360\tab\fs18\b0{\uldb MsiServices Object}{\v MsiServices_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 Clears all caches in the services object. Currently these caches are  references to created volume objects in the internal volume cache and  cached record objects (for performance). \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .ClearAllCaches} \par{\i object}\line Required. The MsiServices object. \par\fi0\li0{\b Remarks}\par\li180 Each time an MsiVolume object is to be created (usually in conjunction with an  associated MsiPath object), Darwin checks to see if an MsiVolume object already  exists for the referenced volume.  If so, a reference to that object is returned  by the {\uldb CreateVolume}{\v MsiServices_CreateVolume} method, obviating the  need to create a new MsiVolume object from scratch.    Each time a record is released we add it to a record cache (assuming there is still room)  in order to save time by not returning it to the memory pool. When a record of the same  size is needed, we return a record from the cache if one is available.  The ClearAllCaches method  clears the volume cache and record cache, and is called by the Darwin Engine dll at setup termination. \page #{\footnote MsiServices_GetModuleUsage} ${\footnote MsiServices.GetModuleUsage} +{\footnote MsiServices:GetModuleUsage} K{\footnote GetModuleUsage} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b GetModuleUsage Method \line\tx360\tab\fs18\b0{\uldb MsiServices Object}{\v MsiServices_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 The GetModuleUsage function enumerates all the processes on the user system that have currently  loaded a given executable module in their address space. The function returns an enumeration of  MsiRecord objects, one for each such process. The record has 3 fields - The first field is a  string which is the process name. The second field is an integer which is the process id. The  third field is an integer which is the handle of the top level window of the process. The third  field is null if there is no top level window for the process. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .GetModuleUsage({\i fileName})} \par{\i object}\line Required. The MsiServices object. \par{\i\b fileName}\line Required. A string that is the file name of the executable module. \par\fi0\li0{\b Remarks}\par\li180  Note: The file name of the module must be the file name only and not the full path. \page #{\footnote MsiServices_GetLocalPath} ${\footnote MsiServices.GetLocalPath} +{\footnote MsiServices:GetLocalPath} K{\footnote GetLocalPath} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b GetLocalPath Method \line\tx360\tab\fs18\b0{\uldb MsiServices Object}{\v MsiServices_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 Windows:\line Returns a string representing the full path of the installer's launch directory.\line \line Mac:\line Returns a string representing the full path of the MsiServices DLL directory.\line \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .GetLocalPath({\i fileName})} \par{\i object}\line Required. The MsiServices object. \par{\i\b fileName}\line Optional.  If supplied, this file name will be appended to the path returned by GetLocalPath.\line \par\fi0\li0{\b Remarks}\par\li180 (Windows Only)\line If the string supplied in the fileName parameter has the format of a fully qualified path (i.e. a  colon in the 2nd character position, or two leading backslash characters), that string itself will   be returned. Otherwise, no error checking is performed on the supplied fileName parameter   before it is appended. \page #{\footnote MsiServices_CreateRegKey} ${\footnote MsiServices.CreateRegKey} +{\footnote MsiServices:CreateRegKey} K{\footnote CreateRegKey} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b CreateRegKey Method \line\tx360\tab\fs18\b0{\uldb MsiServices Object}{\v MsiServices_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 Creates a MsiRegKey object. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .CreateRegKey({\i value, subKey})} \par{\i object}\line Required. The MsiServices object. \par{\i\b value}\line Required. A string which is one of the following predefined roots \line{\f1  "HKEY_CLASSES_ROOT"} \line{\f1  "HKEY_CURRENT_USER"} \line{\f1  "HKEY_LOCAL_MACHINE"} \line{\f1  "HKEY_USERS"} \par{\i\b subKey}\line Required. A string which is denotes the subkey below the predefined root {\i\b value} \par\fi0\li0{\b Remarks}\par\li180 The actual registry key is not opened or created on the construction of  the MsiRegKey object. \page #{\footnote MsiServices_RegisterFont} ${\footnote MsiServices.RegisterFont} +{\footnote MsiServices:RegisterFont} K{\footnote RegisterFont} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b RegisterFont Method \line\tx360\tab\fs18\b0{\uldb MsiServices Object}{\v MsiServices_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 Registers a font with the system. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .RegisterFont({\i fontTitle, fontFile, path})} \par{\i object}\line Required. The MsiServices object. \par{\i\b fontTitle}\line Required. the font title string. \par{\i\b fontFile}\line Required. the font filename. \par{\i\b path}\line Optional. the MsiPath object where the font file exists.  If this argument is omitted, the font file is assumed to exist in the  default font folder. \par\fi0\li0{\b Remarks}\par\li180 \page #{\footnote MsiServices_UnregisterFont} ${\footnote MsiServices.UnregisterFont} +{\footnote MsiServices:UnregisterFont} K{\footnote UnregisterFont} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b UnregisterFont Method \line\tx360\tab\fs18\b0{\uldb MsiServices Object}{\v MsiServices_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 Unregisters a font with the system. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .UnregisterFont({\i fontTitle})} \par{\i object}\line Required. The MsiServices object. \par{\i\b fontTitle}\line Required. the font title string. \par\fi0\li0{\b Remarks}\par\li180 \page #{\footnote MsiServices_WriteIniFile} ${\footnote MsiServices.WriteIniFile} +{\footnote MsiServices:WriteIniFile} K{\footnote WriteIniFile;iifIniAddLine;iifIniCreateLine;iifIniRemoveLine;iifIniAddTag;iifIniRemoveTag} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b WriteIniFile Method \line\tx360\tab\fs18\b0{\uldb MsiServices Object}{\v MsiServices_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb ReadIniFile Method}{\v MsiServices_ReadIniFile} \par}\li180 Writes/Deletes an entry in a .INI file.  Generates an error if a system error occurs during file update. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .WriteIniFile({\i path, file, section, key, value, action})} \par{\i object}\line Required. The MsiServices object. \par{\i\b path}\line Optional. The MsiPath object to the .INI file. If absent, the windows directory is assumed.  If this directory does not exist, a run-time error will be generated. \par{\i\b file}\line Required. A string denoting the .INI file name. \par{\i\b section}\line Required. A string denoting the section in the .INI file. \par{\i\b key}\line Required. A string denoting the key in the .INI file. \par{\i\b value}\line A string denoting the value for the key in the .INI file. Ignored for {\b iifIniRemoveLine}  action. \par{\i\b action}\line Required. The type of .INI update, one of the iifIniMode values: \line{\f1  iifIniAddLine    =0 }- Creates/Updates .INI entry \line{\f1  iifIniCreateLine =1 }- Creates .INI entry only if absent \line{\f1  iifIniRemoveLine =2 }- Deletes .INI entry \line{\f1  iifIniAddTag     =3 }- Creates/ Appends a new comma separated tag(value) to a .INI entry \line{\f1  iifIniRemoveTag  =4 }- Deletes a tag from a .INI entry \par\fi0\li0{\b Remarks}\par\li180 \page #{\footnote MsiServices_ReadIniFile} ${\footnote MsiServices.ReadIniFile} +{\footnote MsiServices:ReadIniFile} K{\footnote ReadIniFile} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b ReadIniFile Method \line\tx360\tab\fs18\b0{\uldb MsiServices Object}{\v MsiServices_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb WriteIniFile Method}{\v MsiServices_WriteIniFile} \par}\li180 Reads an entry from a .INI file.  Returns a string containing the value read from the .INI file. Generates an error   if a system error occurs during file read. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .ReadIniFile({\i path, file, section, key, field})} \par{\i object}\line Required. The MsiServices object. \par{\i\b path}\line Optional. The Path object to the .INI file. If absent, the windows directory is assumed. \par{\i\b file}\line Required. a string denoting the .INI file name. \par{\i\b section}\line Required. a string denoting the section in the .INI file. \par{\i\b key}\line Required. a string denoting the key in the .INI file. \par{\i\b field}\line Optional. integer denoting field to be read from the .INI file. If absent or 0, will read the  entire line. \par\fi0\li0{\b Remarks}\par\li180 \page #{\footnote MsiServices_GetAllocator} ${\footnote MsiServices.GetAllocator} +{\footnote MsiServices:GetAllocator} K{\footnote GetAllocator} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b GetAllocator Method \line\tx360\tab\fs18\b0{\uldb MsiServices Object}{\v MsiServices_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 Returns the system memory allocator as an  {\uldb MsiMalloc}{\v MsiMalloc_Object} object.  This method and the allocator are exposed solely for testing purposes. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .GetAllocator} \par{\i object}\line Required. The MsiServices object. \par\fi0\li0{\b Remarks}\par\li180 !!Additional notes!!  \page #{\footnote MsiServices_GetLangNamesFromLangIDString} ${\footnote MsiServices.GetLangNamesFromLangIDString} +{\footnote MsiServices:GetLangNamesFromLangIDString} K{\footnote GetLangNamesFromLangIDString} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b GetLangNamesFromLangIDString Method \line\tx360\tab\fs18\b0{\uldb MsiServices Object}{\v MsiServices_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 Given a string containing a comma-separated list of language identifiers,  GetLangNamesFromLangIDString returns the full localized name of each specified language  in a record object supplied by the caller. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .GetLangNamesFromLangIDString({\i langIDString, langRec, iFieldStart})} \par{\i object}\line Required. The MsiServices object. \par{\i\b langIDString}\line Required. A string containing a comma-separated list of valid language identifiers.  For  example: "1031, 1033, 1046"\line \par{\i\b langRec}\line Required. An existing MsiRecord object.\line \par{\i\b iFieldStart}\line Required. An integer specifying the first field within langRec to begin storing language  names.  Starting with this field, GetLangNamesFromLangIDString will store the converted  language names in consecutively ascending record fields.  \par\fi0\li0{\b Return Value:}\par\li180 A count of the successfully converted language IDs. \par\fi0\li0{\b Remarks}\par\li180 GetLangNamesFromLangIDString will continue processing language IDs until either the end  of the string is reached, a syntax error (such as a non-numeric character) is detected,  an unassigned language ID is found, or the available fields within the record are exhausted.  In any case, the count returned as the function result will reflect the number of language IDs  successfully converted before the terminating condition was reached.\line\line Note: If the iFieldStart parameter is greater than the number of allocated fields in the  caller's MsiRecord object, GetLangNamesFromLangIDString will return immediately with a  count of zero as the function result. \page #{\footnote MsiServices_CreateStorage} ${\footnote MsiServices.CreateStorage} +{\footnote MsiServices:CreateStorage} K{\footnote CreateStorage} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b CreateStorage Method \line\tx360\tab\fs18\b0{\uldb MsiServices Object}{\v MsiServices_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 Creates and returns an {\uldb MsiStorage}{\v MsiStorage_Object} object for a file, from which  {\uldb MsiStream}{\v MsiStream_Object}  objects can be created to read or write persistent data.             \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .CreateStorage({\i path, openMode})} \par{\i object}\line Required. The MsiServices object. \par{\i\b path}\line Required. The file path for the file on which the storage will be opened. \par{\i\b openMode}\line Required. The mode in which the storage will be created, one of ismEnum: \line{\f1  ismReadOnly     } opens storage in read-only mode, required for read-only file. \line{\f1  ismDirect       } opens storage in direct mode, non-transacted, cannot rollback. \line{\f1  ismTransact     } opens storage in transacted mode, updates can be rolled back. \line{\f1  ismCreateDirect } creates new file, overwriting any existing, in direct mode. \line{\f1  ismCreate       } creates new file, overwriting any existing, in transacted mode. \par\fi0\li0{\b Remarks}\par\li180 MsiStorage objects may be created internally from sources other than files,  such as resources and memory buffers and substorages of other structured storage files. \page #{\footnote MsiServices_GetUnhandledError} ${\footnote MsiServices.GetUnhandledError} +{\footnote MsiServices:GetUnhandledError} K{\footnote GetUnhandledError} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b GetUnhandledError Method \line\tx360\tab\fs18\b0{\uldb MsiServices Object}{\v MsiServices_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 Returns an MsiRecord object containing the error information for an error  that occured under conditions that could not be returned at the time. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .GetUnhandledError} \par{\i object}\line Required. The MsiServices object. \par\fi0\li0{\b Remarks}\par\li180 Errors can sometimes occur during background processing and during destruction  of objects. If the MsiRecord object containg the error information cannot  be returned, it is posted internally, to be accessed at some later time  using this method. Only the first such error will be retained. Calling this  method will clear the error and allow another to be posted. Much of the  need for unhandled errors can be eliminated by finalizing objects before  they are released. For example, committing a database or storage object  will report any write errors at that time, rather than relying upon the  implicit commit during destruction of the object. \page #{\footnote MsiServices_SupportLanguageId} ${\footnote MsiServices.SupportLanguageId} +{\footnote MsiServices:SupportLanguageId} K{\footnote SupportLanguageId; Language} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b SupportLanguageId Method \line\tx360\tab\fs18\b0{\uldb MsiServices Object}{\v MsiServices_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 Checks system support for the supplied language Id and returns the information as a figure of merit. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .SupportLanguageId({\i languageId, systemDefault})} \par{\i object}\line Required. The MsiServices object. \par{\i\b languageId}\line Required. The numeric Id representing the language, including the dialect (sub-language). \par{\i\b languageId}\line Required. Boolean: True to use SystemDefault language, False to use UserDefault language. \par\fi-180\li180{\b Return Codes}, one of ismEnum \line{\f1  isliNotSupported      = 0  } system configuration doesn't support the language Id \line{\f1  isliLanguageMismatch  = 1  } base language differs from current user language Id \line{\f1  isliDialectMismatch   = 2  } base language matches, but dialect mismatched \line{\f1  isliLanguageOnlyMatch = 3  } base language matches, no dialect supplied \line{\f1  isliExactMatch        = 4  } exact match, both language and dialect \page #{\footnote MsiServices_CreateShortcut} ${\footnote MsiServices.CreateShortcut} +{\footnote MsiServices:CreateShortcut} K{\footnote CreateShortcut; Language} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b CreateShortcut Method \line\tx360\tab\fs18\b0{\uldb MsiServices Object}{\v MsiServices_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 Creates a shortcut. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .CreateShortcut({\i shortcutPath, shortcutName, targetPath, targetName, shortcutInfo})} \par{\i object}\line Required. The MsiServices object. \par{\i\b shortcutPath}\line Required. An {\uldb MsiPath}{\v MsiPath_Object} object indicating where the shortcut should be created. \par{\i\b shortcutName}\line Required. The name of the shortcut to be created. \par{\i\b targetPath}\line Required. An {\uldb MsiPath}{\v MsiPath_Object} object indicating where the target is. \par{\i\b targetName}\line Required. The name of the shortcut's target. \par{\i\b shortcutInfo}\line Optional. An {\uldb MsiRecord}{\v MsiRecord_Object} containing additional information  about the shortcut. The record contains the following fields: \line{\f1  icsArguments        = 1 } The command-line arguments for the shortcut. \line{\f1  icsDescription      = 2 } The description for the shortcut. \line{\f1  icsHotKey           = 3 } The hotkey for the shortcut. It has the  virtual-key code for the key in the low-order byte, and the modifier flags in  the high-order byte.  \line{\f1  icsIconId           = 4 } The icon index for the shortcut. \line{\f1  icsIconFullPath     = 5 } An {\uldb MsiPath}{\v MsiPath_Object} object  denoting the external icon file for the shortcut. \line{\f1  icsShowCmd          = 6 } The show command for the application window.  The values are exactly as defined for the ShowWindow Windows API fn. See the  {\uldb Shortcut Table}{\v _msi_Shortcut_Table@msi.hlp} help for more information. \line{\f1  icsWorkingDirectory = 7 } An {\uldb MsiPath}{\v MsiPath_Object} object  denoting the working directory for the shortcut. \page #{\footnote MsiServices_RemoveShortcut} ${\footnote MsiServices.RemoveShortcut} +{\footnote MsiServices:RemoveShortcut} K{\footnote RemoveShortcut; Language} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b RemoveShortcut Method \line\tx360\tab\fs18\b0{\uldb MsiServices Object}{\v MsiServices_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 Removes a shortcut. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .RemoveShortcut({\i shortcutPath, shortcutName, targetPath, targetName})} \par{\i object}\line Required. The MsiServices object. \par{\i\b shortcutPath}\line Required. An {\uldb MsiPath}{\v MsiPath_Object} object indicating where the shortcut  to be deleted is located. \par{\i\b shortcutName}\line Required. The name of the shortcut to be deleted. \par{\i\b targetPath}\line Optional. An {\uldb MsiPath}{\v MsiPath_Object} object indicating where the target is. \par{\i\b targetName}\line Optional. The name of the shortcut's target. \page #{\footnote MsiServices_ExtractFileName} ${\footnote MsiServices.ExtractFileName} +{\footnote MsiServices:ExtractFileName} K{\footnote ExtractFileName} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b ExtractFileName Method \line\tx360\tab\fs18\b0{\uldb MsiServices Object}{\v MsiServices_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 Extract the appropriate name from a short|long pair of file names. The extracted name is  validated for correct syntax. The name that is not extracted, if there is one, is not validated  for syntax. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .ExtractFileName({\i pair, longname})} \par{\i object}\line Required. The MsiServices object. \par{\i\b pair}\line Required. The pair of file names, seperated by a '|'. This string may also contain only one name if  desired. \par{\i\b longname}\line Required. Boolean. True to extract the long name, false to extract the short name. \par\fi0\li0{\b Remarks}\par\li180 \page #{\footnote MsiServices_ValidateFileName} ${\footnote MsiServices.ValidateFileName} +{\footnote MsiServices:ValidateFileName} K{\footnote ValidateFileName} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b ValidateFileName Method \line\tx360\tab\fs18\b0{\uldb MsiServices Object}{\v MsiServices_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 Validates a file name for correct syntax. Can validate either short or long file names. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .ValidateFileName({\i filename, longname})} \par{\i object}\line Required. The MsiServices object. \par{\i\b pair}\line Required. String. The file name. \par{\i\b longname}\line Required. Boolean. True to validate for long name syntax, false to validate for short name syntax. \par\fi0\li0{\b Remarks}\par\li180 \page #{\footnote MsiServices_CreateFileStream} ${\footnote MsiServices.CreateFileStream} +{\footnote MsiServices:CreateFileStream} K{\footnote CreateFileStream} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b CreateFileStream Method \line\tx360\tab\fs18\b0{\uldb MsiServices Object}{\v MsiServices_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 Creates and returns an {\uldb MsiStream}{\v MsiStream_Object} object that accesses the supplied file. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .CreateFileStream({\i filePath, write})} \par{\i object}\line Required. The MsiServices object. \par{\i\b filePath}\line Required string. The full path to the file. \par{\i\b write}\line Required boolean. True to create a writable stream, false to create a read-only stream. \par\fi0\li0{\b Remarks}\par\li180 If a read-only stream is requested, the file must exist. If a writable stream is requested  the file will be created if it does not exist, and will be truncated to 0 before the first write. \page #{\footnote MsiServices_CreateMemoryStream} ${\footnote MsiServices.CreateMemoryStream} +{\footnote MsiServices:CreateMemoryStream} K{\footnote CreateMemoryStream} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b CreateMemoryStream Method \line\tx360\tab\fs18\b0{\uldb MsiServices Object}{\v MsiServices_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 Creates and returns an {\uldb MsiStream}{\v MsiStream_Object} object that accesses an allocated block of memory. Memory streams are read-only. Attempts to write will cause the stream to be set to the error state. The memory is allocated to hold the contents of a supplied string. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .CreateMemoryStream({\i data})} \par{\i object}\line Required. The MsiServices object. \par{\i\b data}\line Required string. A string which is copied (as Unicode) to the allocated memory stream buffer. \par\fi0\li0{\b Remarks}\par\li180 The actual IMsiServices interface supports two functions, AllocateMemoryStream, and CreateStreamOnMemory.  Because VBA does not easily deal with raw memory, this wrapper function accepts a string to determinine  the size and contents of the allocated memory. The memory is released when the stream is destructed. \page #{\footnote MsiServices_RegisterTypeLibrary} ${\footnote MsiServices.RegisterTypeLibrary} +{\footnote MsiServices:RegisterTypeLibrary} K{\footnote RegisterTypeLibrary} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b RegisterTypeLibrary Method \line\tx360\tab\fs18\b0{\uldb MsiServices Object}{\v MsiServices_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 Registers a type library using the Windows RegisterTypeLib API function. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .RegisterTypeLibrary({\i libId, locale, path, helpPath})} \par{\i object}\line Required. The MsiServices object. \par{\i\b libId}\line Required string. A string that represents the type library IID. \par{\i\b locale}\line Required integer. The locale. \par{\i\b path}\line Required string. The full file path of the type library. \par{\i\b helpPath}\line Optional string. The help file folder. \par\fi0\li0{\b Remarks}\par\li180 The services object impersonates the user if running in the context of the Darwin service if the type library is located on a network path. \page #{\footnote MsiServices_UnregisterTypeLibrary} ${\footnote MsiServices.UnregisterTypeLibrary} +{\footnote MsiServices:UnregisterTypeLibrary} K{\footnote UnregisterTypeLibrary} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b UnregisterTypeLibrary Method \line\tx360\tab\fs18\b0{\uldb MsiServices Object}{\v MsiServices_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 Unregisters a type library using the Windows UnregisterTypeLib API function. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .UnregisterTypeLibrary({\i libId, locale, path})} \par{\i object}\line Required. The MsiServices object. \par{\i\b libId}\line Required string. A string that represents the type library IID. \par{\i\b locale}\line Required integer. The locale. \par{\i\b path}\line Required string. The full file path of the type library. \par\fi0\li0{\b Remarks}\par\li180 The services object impersonates the user if running in the context of the Darwin service if the type library is located on a network path. \page #{\footnote MsiData_Object} ${\footnote MsiData Object} +{\footnote Class:MsiData} K{\footnote MsiData} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b MsiData Object \line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 MsiData is a base object from which MsiString and other objects are derived.  Its sole purpose is to permit the storage of objects in fields of MsiRecord  and MsiTable objects. The only direct access to the data is via read-only properties.  MsiData objects cannot be created directly. Rather, the ObjectData property of  MsiCursor and MsiRecord return the stored objects as MsiData objects. \par\li0{\b Properties}\par\li180 {\uldb StringValue}{\v MsiData_StringValue}\line {\uldb IntegerValue}{\v MsiData_IntegerValue}\line \page #{\footnote MsiData_StringValue} ${\footnote MsiData.StringValue} +{\footnote MsiData:StringValue} K{\footnote StringValue} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b StringValue Property \line\tx360\tab\fs18\b0{\uldb MsiData Object}{\v MsiData_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 The string value for the MsiData object. This is the default property.  Because the MsiData object is a common base class for other objects, this  property returns a string representation of the underlying object. Read-only. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .StringValue} \par{\i object}\line Required. The MsiData object. \par\fi0\li0{\b Remarks}\par\li180 OLE automation transfers strings as Unicode on Windows platforms. The  automation wrappers use the Win32 API to translate the strings to SBCS or  DBCS strings for use with the non-Unicode version of Microsoft Installer. \page #{\footnote MsiData_IntegerValue} ${\footnote MsiData.IntegerValue} +{\footnote MsiData:IntegerValue} K{\footnote IntegerValue} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b IntegerValue Property \line\tx360\tab\fs18\b0{\uldb MsiData Object}{\v MsiData_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 The integer value for the MsiData object. Because the MsiData object is a  common base class for other objects, this property returns an integer  representation of the underlying object. If the object cannot be converted to  an integer, the value {\b\f1 iMsiNullInteger} is returned. Read-only. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .IntegerValue} \par{\i object}\line Required. The MsiData object. \par\fi0\li0{\b Remarks}\par\li180 !!Additional notes!!  \page #{\footnote MsiString_Object} ${\footnote MsiString Object} K{\footnote MsiString} +{\footnote Class:MsiString} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b MsiString Object \line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 MsiString is a object providing abstracted, allocated string handling for  the whole of the Microsoft Installer implementation. This has been designed  to improve performance by reducing the need for string copying, to eliminate  the use of error-prone text buffers, and to efficiently handle DBCS strings. The MsiString object is derived from the common MsiData object that is used  to support storage in records and in local database tables. NOTE: Although the MsiString object is commonly used to pass strings by the  C++ methods, is not exposed to OLE automation. Rather, it is translated to  the OLE automation string type BSTR, which transfers strings as Unicode on Windows.  However the MsiString object itself is exposed to OLE automation for testing  purposes, as its integrity is crucial to the remainder of the system. \par\li0{\b Properties}\par\li180 {\uldb Value}{\v MsiString_Value}\line {\uldb IntegerValue}{\v MsiString_IntegerValue}\line {\uldb TextSize}{\v MsiString_TextSize}\line {\uldb CharacterCount}{\v MsiString_CharacterCount}\line {\uldb IsDBCS}{\v MsiString_IsDBCS}\line \par\li0{\b Methods}\par\li180 {\uldb Compare}{\v MsiString_Compare}\line {\uldb Append}{\v MsiString_Append}\line {\uldb Add}{\v MsiString_Add}\line {\uldb Extract}{\v MsiString_Extract}\line {\uldb Remove}{\v MsiString_Remove}\line {\uldb UpperCase}{\v MsiString_UpperCase}\line {\uldb LowerCase}{\v MsiString_LowerCase}\line \page #{\footnote MsiString_Value} ${\footnote MsiString.Value} +{\footnote MsiString:Value} K{\footnote Value} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b Value Property \line\tx360\tab\fs18\b0{\uldb MsiString Object}{\v MsiString_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 The string value for the MsiString object. This is the default property. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .Value} \par{\i object}\line Required. The MsiString object. \par\fi0\li0{\b Remarks}\par\li180 OLE automation transfers strings as Unicode on Windows platforms. The  automation wrappers use the Win32 API to translate the strings to SBCS or  DBCS strings for use with the non-Unicode version of Microsoft Installer. \page #{\footnote MsiString_TextSize} ${\footnote MsiString.TextSize} +{\footnote MsiString:TextSize} K{\footnote TextSize} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b TextSize Property \line\tx360\tab\fs18\b0{\uldb MsiString Object}{\v MsiString_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 The length of the string in units of character size, not counting the  null terminator. This is the storage requirement; the number of  displayable characters may be less if the string contains DBCS lead bytes  or Unicode uncomposed sequences. Read-only. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .TextSize} \par{\i object}\line Required. The MsiString object. \page #{\footnote MsiString_IntegerValue} ${\footnote MsiString.IntegerValue} +{\footnote MsiString:IntegerValue} K{\footnote IntegerValue} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b IntegerValue Property \line\tx360\tab\fs18\b0{\uldb MsiString Object}{\v MsiString_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 The integer value of the string. If the string does not represent a valid  signed 32-bit integer, the value {\b\f1 iMsiNullInteger} is returned. Read-only. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .IntegerValue} \par{\i object}\line Required. The MsiString object. \page #{\footnote MsiString_CharacterCount} ${\footnote MsiString.CharacterCount} +{\footnote MsiString:CharacterCount} K{\footnote CharacterCount} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b CharacterCount Property \line\tx360\tab\fs18\b0{\uldb MsiString Object}{\v MsiString_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 The number of logical characters in the string. DBCS lead byte sequences  and Unicode uncomposed sequences count as a single character. This execution  of this property is considerably slower if the string contains lead bytes.  Read-only. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .CharacterCount} \par{\i object}\line Required. The MsiString object. \page #{\footnote MsiString_IsDBCS} ${\footnote MsiString.IsDBCS} +{\footnote MsiString:IsDBCS} K{\footnote IsDBCS} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b IsDBCS Property \line\tx360\tab\fs18\b0{\uldb MsiString Object}{\v MsiString_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 True if the string contains any double-byte characters.  Will always return False if the operating system is not use a DBCS codepage.  Read-only. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .IsDBCS} \par{\i object}\line Required. The MsiString object. \page #{\footnote MsiString_Compare} ${\footnote MsiString.Compare} +{\footnote MsiString:Compare} K{\footnote Compare} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b Compare Method \line\tx360\tab\fs18\b0{\uldb MsiString Object}{\v MsiString_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 Compares the object with another string. A variety of compare options can be  set with the {\i\b mode} argument. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .Compare({\i mode, text})} \par{\i object}\line Required. The MsiString object. \par{\i\b mode}\line Required. The comparison mode, one of the enumeration iscEnum:\line {\f1   iscExact   } - supplied string matches exactly current string, case sensistive\line {\f1   iscExactI  } - supplied string matches exactly current string, case insensistive\line {\f1   iscStart   } - supplied string matches start of current string, case sensitive\line {\f1   iscStartI  } - supplied string matches start of current string, case insensitive\line {\f1   iscEnd     } - supplied string matches end of current string, case sensitive\line {\f1   iscEndI    } - supplied string matches end of current string, case insensitive\line {\f1   iscWithin  } - supplied string matches anywhere in current string, case sensisitve\line {\f1   iscWithinI } - supplied string matches anywhere in current string, case insensitive\line \par{\i\b text}\line Required. The string to compare with the object. \par\fi0\li0{\b Remarks}\par\li180 !!Additional notes!!  \page #{\footnote MsiString_Append} ${\footnote MsiString.Append} +{\footnote MsiString:Append} K{\footnote Append} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b Append Method \line\tx360\tab\fs18\b0{\uldb MsiString Object}{\v MsiString_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 Appends a string or an MsiString object to the end of the current string object. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .Append({\i text})} \par{\i object}\line Required. The MsiString object. \par{\i\b text}\line Required. The string to append. May be either a string or an MsiString object.  If the argument is Null, no action takes place. \par\fi0\li0{\b Remarks}\par\li180 !!Additional notes!!  \page #{\footnote MsiString_Add} ${\footnote MsiString.Add} +{\footnote MsiString:Add} K{\footnote Add} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b Add Method \line\tx360\tab\fs18\b0{\uldb MsiString Object}{\v MsiString_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 Returns a new MsiString object by appending a string or an MsiString object  to the end of the current string object. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .Add({\i text})} \par{\i object}\line Required. The MsiString object. \par{\i\b text}\line Required. The string to append. May be either a string or an MsiString object.  If the argument is Null, the current MsiString object is returned. \par\fi0\li0{\b Remarks}\par\li180 !!Additional notes!!  \page #{\footnote MsiString_Extract} ${\footnote MsiString.Extract} +{\footnote MsiString:Extract} K{\footnote Extract} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b Extract Method \line\tx360\tab\fs18\b0{\uldb MsiString Object}{\v MsiString_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 Returns a new MsiString object by extracting a portion of the existing string,  depending upon the mode specified by the {\i\b mode} argument. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .Extract({\i mode, limit})} \par{\i object}\line Required. The MsiString object. \par{\i\b mode}\line Required. The extraction mode, one of the enumeration iseEnum:\line {\f1   iseFirst     } - the first iLimit characters of the current string\line {\f1   iseLast      } - the last iLimit characters of the current string\line {\f1   iseUpto      } - the string up to the character iLimit\line {\f1   iseIncluding } - the string up to and including the character iLimit\line {\f1   iseFrom      } - the string starting with the final character iLimit\line {\f1   iseAfter     } - the string following the last character iLimit \par{\i\b limit}\line Required. An integer containing the number of characters to extract,  or the particular character to use as the limit. \par\fi0\li0{\b Remarks}\par\li180 !!Additional notes!!  \page #{\footnote MsiString_Remove} ${\footnote MsiString.Remove} +{\footnote MsiString:Remove} K{\footnote Remove} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b Remove Method \line\tx360\tab\fs18\b0{\uldb MsiString Object}{\v MsiString_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 Removes a portion of the existing string, depending upon the mode specified by  the {\i\b mode} argument. Returns a boolean indicating whether any text was removed. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .Remove({\i mode, limit})} \par{\i object}\line Required. The MsiString object. \par{\i\b mode}\line Required. The extraction mode, one of the enumeration iseEnum:\line {\f1   iseFirst     } - the first iLimit characters of the current string\line {\f1   iseLast      } - the last iLimit characters of the current string\line {\f1   iseUpto      } - the string up to the character iLimit\line {\f1   iseIncluding } - the string up to and including the charcter iLimit\line {\f1   iseFrom      } - the string starting with the final character iLimit\line {\f1   iseAfter     } - the string following the last charcter iLimit \par{\i\b limit}\line Required. An integer containing the number of characters to extract,  or the particular character to use as the limit. \par\fi0\li0{\b Remarks}\par\li180 !!Additional notes!!  \page #{\footnote MsiString_UpperCase} ${\footnote MsiString.UpperCase} +{\footnote MsiString:UpperCase} K{\footnote UpperCase} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b UpperCase Method \line\tx360\tab\fs18\b0{\uldb MsiString Object}{\v MsiString_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 Converts all lower case characters in the string to upper case. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .UpperCase} \par{\i object}\line Required. The MsiString object. \par\fi0\li0{\b Remarks}\par\li180 The actual conversion is performed by the operating system,  using the current system codepage or system script. \page #{\footnote MsiString_LowerCase} ${\footnote MsiString.LowerCase} +{\footnote MsiString:LowerCase} K{\footnote LowerCase} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b LowerCase Method \line\tx360\tab\fs18\b0{\uldb MsiString Object}{\v MsiString_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 Converts all upper case characters in the string to lower case. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .LowerCase} \par{\i object}\line Required. The MsiString object. \par\fi0\li0{\b Remarks}\par\li180 The actual conversion is performed by the operating system,  using the current system codepage or system script. \page #{\footnote MsiRecord_Object} ${\footnote MsiRecord Object} K{\footnote MsiRecord} +{\footnote Class:MsiRecord} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b MsiRecord Object \line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 The MsiRecord object is a container for holding and transferring a variable  number of values. Fields within the record are numerically indexed and can  contain strings, integers, objects, and null values. Fields beyond the  allocated record size are treated as having permanently null values.  Field number 0 is not used for data, but is reserved for the format string  for the record, processed by the {\uldb FormatText}{\v MsiRecord_FormatText} method.  Major uses of records are for error returns and database row fetches. \par\li0{\b Properties}\par\li180 {\uldb Data}{\v MsiRecord_Data}\line {\uldb StringData}{\v MsiRecord_StringData}\line {\uldb IntegerData}{\v MsiRecord_IntegerData}\line {\uldb ObjectData}{\v MsiRecord_ObjectData}\line {\uldb FieldCount}{\v MsiRecord_FieldCount}\line {\uldb IsInteger}{\v MsiRecord_IsInteger}\line {\uldb IsNull}{\v MsiRecord_IsNull}\line {\uldb IsChanged}{\v MsiRecord_IsChanged}\line {\uldb TextSize}{\v MsiRecord_TextSize}\line \par\li0{\b Methods}\par\li180 {\uldb FormatText}{\v MsiRecord_FormatText}\line {\uldb ClearData}{\v MsiRecord_ClearData}\line {\uldb ClearUpdate}{\v MsiRecord_ClearUpdate}\line \page #{\footnote MsiRecord_Data} ${\footnote MsiRecord.Data} +{\footnote MsiRecord:Data} K{\footnote Data} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b Data Property \line\tx360\tab\fs18\b0{\uldb MsiRecord Object}{\v MsiRecord_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 Read-write. Transfers data between a variant and a specified field within the record.  On property set, integers, strings, Empty, and objects derived from MsiData are accepted.  On property get, the returned variant will contain an long integer, string, MsiData object, or Empty. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .Data({\i field})} \par{\i object}\line Required. The MsiRecord object. \par{\i\b field}\line Required. The field number of the value within the record, 1-based. \par\fi0\li0{\b Remarks}\par\li180 The returned value of a non-existent field will be an Empty variant.  An Empty variant value will set the record field to the Null state.  Attempting to store a value in a non-existent field will cause an error. \page #{\footnote MsiRecord_StringData} ${\footnote MsiRecord.StringData} +{\footnote MsiRecord:StringData} K{\footnote StringData} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b StringData Property \line\tx360\tab\fs18\b0{\uldb MsiRecord Object}{\v MsiRecord_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 Read-write. Transfers string data in or out of a specified field within the record.  If an integer or object has been stored, its string value will be returned. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .StringData({\i field})} \par{\i object}\line Required. The MsiRecord object. \par{\i\b field}\line Required. The field number of the value within the record, 1-based. \par\fi0\li0{\b Remarks}\par\li180 The returned value of a non-existent field will be an empty string.  An Empty variant value will set the record field to the Null state.  Attempting to store a value in a non-existent field will cause an error. \page #{\footnote MsiRecord_IntegerData} ${\footnote MsiRecord.IntegerData} +{\footnote MsiRecord:IntegerData} K{\footnote IntegerData} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b IntegerData Property \line\tx360\tab\fs18\b0{\uldb MsiRecord Object}{\v MsiRecord_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 Read-write. Transfers 32-bit integer data in or out of a specified field within the record.  If a field value cannot be converted to an integer, {\b\f1 iMsiNullInteger} is returned. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .IntegerData({\i field})} \par{\i object}\line Required. The MsiRecord object. \par{\i\b field}\line Required. The field number of the value within the record, 1-based. \par\fi0\li0{\b Remarks}\par\li180 The returned value of a non-existent field will be {\b\f1 iMsiNullInteger}.  Attempting to store a value in a non-existent field will cause an error. \page #{\footnote MsiRecord_ObjectData} ${\footnote MsiRecord.ObjectData} +{\footnote MsiRecord:ObjectData} K{\footnote ObjectData} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b ObjectData Property \line\tx360\tab\fs18\b0{\uldb MsiRecord Object}{\v MsiRecord_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 Read-write. Transfers objects in or out of a specified field within the record.  The objects must be of type derived from MsiData. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .ObjectData({\i field})} \par{\i object}\line Required. The MsiRecord object. \par{\i\b field}\line Required. The field number of the value within the record, 1-based. \par\fi0\li0{\b Remarks}\par\li180 The returned value of a non-existent field will be an object set to Nothing.  An object set to Nothing will set the record field to the Null state.  Attempting to store a value in a non-existent field will cause an error.  To check if the object is of a particular type get its {\uldb HasInterface}{\v MsiBase_HasInterface} property.  To obtain an automation object for the particular type call its {\uldb GetInterface}{\v MsiBase_GetInterface} method. \page #{\footnote MsiRecord_FieldCount} ${\footnote MsiRecord.FieldCount} +{\footnote MsiRecord:FieldCount} K{\footnote FieldCount} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b FieldCount Property \line\tx360\tab\fs18\b0{\uldb MsiRecord Object}{\v MsiRecord_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 Returns the number of fields in the record. Read-only.  Read access to fields beyond this count returns null values. Write access will fail. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .FieldCount} \par{\i object}\line Required. The MsiRecord object. \page #{\footnote MsiRecord_IsInteger} ${\footnote MsiRecord.IsInteger} +{\footnote MsiRecord:IsInteger} K{\footnote IsInteger} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b IsInteger Property \line\tx360\tab\fs18\b0{\uldb MsiRecord Object}{\v MsiRecord_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 Returns a boolean indicating whether the field data is stored as an integer. Read-only. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .IsInteger({\i field})} \par{\i object}\line Required. The MsiRecord object. \par{\i\b field}\line Required. The field number of the value within the record, 1-based. \page #{\footnote MsiRecord_IsNull} ${\footnote MsiRecord.IsNull} +{\footnote MsiRecord:IsNull} K{\footnote IsNull} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b IsNull Property \line\tx360\tab\fs18\b0{\uldb MsiRecord Object}{\v MsiRecord_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 Read-only. Returns True if the indicated field is null, False if the field contains data. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .IsNull({\i field})} \par{\i object}\line Required. The MsiRecord object. \par{\i\b field}\line Required. The field number of the value within the record, 1-based. \page #{\footnote MsiRecord_IsChanged} ${\footnote MsiRecord.IsChanged} +{\footnote MsiRecord:IsChanged} K{\footnote IsChanged} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b IsChanged Property \line\tx360\tab\fs18\b0{\uldb MsiRecord Object}{\v MsiRecord_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 Read-only. Returns True if the field data has been changed since the record  was initially created or since the last call to {\uldb ClearUpdate}{\v MsiRecord_ClearUpdate}.  Note that integer fields always return True, even if unchanged (the implementation  has no space to maintain the original integer, not a problem for the internal clients). \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .IsChanged({\i field})} \par{\i object}\line Required. The MsiRecord object. \par{\i\b field}\line Required. The field number of the value within the record, 1-based. \page #{\footnote MsiRecord_TextSize} ${\footnote MsiRecord.TextSize} +{\footnote MsiRecord:TextSize} K{\footnote TextSize} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b TextSize Property \line\tx360\tab\fs18\b0{\uldb MsiRecord Object}{\v MsiRecord_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 Returns the size of the text if the field data were to be access as string data. Read-only. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .TextSize({\i field})} \par{\i object}\line Required. The MsiRecord object. \par{\i\b field}\line Required. The field number of the value within the record, 1-based. \page #{\footnote MsiRecord_ClearData} ${\footnote MsiRecord.ClearData} +{\footnote MsiRecord:ClearData} K{\footnote ClearData} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b ClearData Method \line\tx360\tab\fs18\b0{\uldb MsiRecord Object}{\v MsiRecord_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 Clears the data in all fields, setting them to Null.  Any objects stored in the fields will be released. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .ClearData} \par{\i object}\line Required. The MsiRecord object. \page #{\footnote MsiRecord_FormatText} ${\footnote MsiRecord.FormatText} +{\footnote MsiRecord:FormatText} K{\footnote FormatText} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b FormatText Method \line\tx360\tab\fs18\b0{\uldb MsiRecord Object}{\v MsiRecord_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 Returns an MsiString object produced from the format string in record field 0  by substituting the record parameters designated in the format string.  If field 0 of the record is null or an integer, then it is treated as being the string \{1: [1]\}\{2: [2]\} etc.  If a substring of the form [number] is encountered, it is replaced by the contents  of the record field of the given number if it exists, otherwise replaced by a null string.  If a part of the string is enclosed in \{ \}, and contains no field numbers,  it is left unchanged, including the curly braces.  If a part of the string is enclosed in \{ \}, and contains one or more field numbers,  and any of the field values are null or missing, all the text in the braces, and the braces themselves are removed;  else the subsititued text is displayed without the curly braces. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .FormatText} \par{\i object}\line Required. The MsiRecord object. \page #{\footnote MsiRecord_ClearUpdate} ${\footnote MsiRecord.ClearUpdate} +{\footnote MsiRecord:ClearUpdate} K{\footnote ClearUpdate} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b ClearUpdate Method \line\tx360\tab\fs18\b0{\uldb MsiRecord Object}{\v MsiRecord_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 Clears the update states in the record, such that the {\uldb IsChanged}{\v MsiRecord_IsChanged}  property will return False for all fields. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .ClearUpdate} \par{\i object}\line Required. The MsiRecord object. \page #{\footnote MsiRegKey_Object} ${\footnote MsiRegKey Object} K{\footnote MsiRegKey} +{\footnote Class:MsiRegKey} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b MsiRegKey Object \line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 The MsiRegKey object provides an interface to the system registry. \par\li0{\b Properties}\par\li180 {\uldb Value}{\v MsiRegKey_Value}\line {\uldb Key}{\v MsiRegKey_Key}\line {\uldb Exists}{\v MsiRegKey_Exists}\line {\uldb GetSelfRelativeSD}{\v MsiRegKey_GetSelfRelativeSD}\line {\uldb ValueExists}{\v MsiRegKey_ValueExists}\line \par\li0{\b Methods}\par\li180 {\uldb RemoveValue}{\v MsiRegKey_RemoveValue}\line {\uldb RemoveSubKey}{\v MsiRegKey_RemoveSubKey}\line {\uldb RemoveSubTree}{\v MsiRegKey_RemoveSubTree}\line {\uldb Values}{\v MsiRegKey_Values}\line {\uldb SubKeys}{\v MsiRegKey_SubKeys}\line {\uldb CreateChild}{\v MsiRegKey_CreateChild}\line \par\fi0\li0{\b Remarks} \par\fi0\li0{\b Differences between the Windows 95 and Windows NT registry: }\par {\b 1. }Windows NT does not allow you to create a new key under HKEY_LOCAL_MACHINE or HKEY_USERS,  whereas this is allowed under Windows 95.  Thus code that attempts to do this will succeed  under Windows 95 but fail when run on NT. \page #{\footnote MsiRegKey_Value} ${\footnote MsiRegKey.Value} +{\footnote MsiRegKey:Value} K{\footnote Value} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b Value Property \line\tx360\tab\fs18\b0{\uldb MsiRegKey Object}{\v MsiRegKey_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 The default or a named value for the current key. Read-write. \par\li0{\b Syntax 1}\par\li500\fi-320 {\i object}{\b .Value} \par\fi0\li0{\b Syntax 2}\par\li500\fi-320 {\i object}{\b .Value({\i valueName})} \par{\i object}\line Required. The MsiRegKey object. \par{\i\b valueName}\line Optional. Name of value, omit to access default value. \par\fi0\li0{\b Remarks}\par\li180 The {\b Value} Property is always read or written as a string. The system Registry  however supports values that may be strings, integers or hexadecimals. If the string  is preceded by a {\b #x} the value is interpreted (for read/ write) as a  hexadecimal value. If {\b Value} is preceded by a {\b #} it is interpreted  as an integer. Else {\b Value} is interpreted as a string. In case the string  begins with 2 or more consequtive {\b #}'s {\b Value} is interpreted as a string,  dropping the first {\b #}. \page #{\footnote MsiRegKey_Exists} ${\footnote MsiRegKey.Exists} +{\footnote MsiRegKey:Exists} K{\footnote Exists} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b Exists Property \line\tx360\tab\fs18\b0{\uldb MsiRegKey Object}{\v MsiRegKey_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 Boolean indicating whether the current registry key exists or whether to  create/ delete the current registry key. Read-write. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .Exists} \par{\i object}\line Required. The MsiRegKey object. \par\fi0\li0{\b Remarks}\par\li180 The property can be used to query the registry to determine if the key  exists. It can also be used with an assignment to create/ delete the key. \page #{\footnote MsiRegKey_ValueExists} ${\footnote MsiRegKey.ValueExists} +{\footnote MsiRegKey:ValueExists} K{\footnote ValueExists} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b ValueExists Property \line\tx360\tab\fs18\b0{\uldb MsiRegKey Object}{\v MsiRegKey_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 Boolean indicating whether the given value exists under the current registry key.  Read-only. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .ValueExists({\i valueName})} \par{\i object}\line Required. The MsiRegKey object. \par{\i\b valueName}\line Name of the value. \par\fi0\li0{\b Remarks}\par\li180 \page #{\footnote MsiRegKey_Key} ${\footnote MsiRegKey.Key} +{\footnote MsiRegKey:Key} K{\footnote Key} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b Key Property \line\tx360\tab\fs18\b0{\uldb MsiRegKey Object}{\v MsiRegKey_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 The string representation of the key. Read-only. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .Key} \par{\i object}\line Required. The MsiRegKey object. \par\fi0\li0{\b Remarks}\par\li180 A possible value of this property would be  {\f1 "HKEY_CLASSES_ROOT\\Software\\Microsoft"}. \page #{\footnote MsiRegKey_RemoveValue} ${\footnote MsiRegKey.RemoveValue} +{\footnote MsiRegKey:RemoveValue} K{\footnote RemoveValue} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b RemoveValue Method \line\tx360\tab\fs18\b0{\uldb MsiRegKey Object}{\v MsiRegKey_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 The method is used to remove the default or a named value of the   MsiRegKey object. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .RemoveValue({\i valueName,value})} \par{\i object}\line Required. The MsiRegKey object. \par{\i\b valueName}\line Optional. Name of the value, default value used if omitted. \par{\i\b value}\line Optional. the value. The value is used only in case of REG_MULTI_SZ registry values. If the value  indicates a registry MULTI_SZ value append or prepend operation (there is an extra null either at the beginning  or at the end of the string list) then only the strings that appear in the passed in value are removed from  the existing registry value. If the value is not specified or the existing registry value is not of type  REG_MULTI_SZ, then the entire value is deleted. \par{\i\b Remarks}\line The function does not return failure if it does not find the value. \page #{\footnote MsiRegKey_RemoveSubKey} ${\footnote MsiRegKey.RemoveSubKey} +{\footnote MsiRegKey:RemoveSubKey} K{\footnote RemoveSubKey} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b RemoveSubKey Method \line\tx360\tab\fs18\b0{\uldb MsiRegKey Object}{\v MsiRegKey_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 The method is used to remove an empty subkey of the MsiRegKey object. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .RemoveSubKey({\i subKey})} \par{\i object}\line Required. The MsiRegKey object. \par{\i\b subKey}\line Required. the string denoting the subkey. \par\fi0\li0{\b Remarks}\par\li180 The function fails if the subkey is not empty ie. if it has values   and/or subkeys. \page #{\footnote MsiRegKey_RemoveSubTree} ${\footnote MsiRegKey.RemoveSubTree} +{\footnote MsiRegKey:RemoveSubTree} K{\footnote RemoveSubTree} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b RemoveSubTree Method \line\tx360\tab\fs18\b0{\uldb MsiRegKey Object}{\v MsiRegKey_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 The method is used to remove a subkey of the MsiRegKey object. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .RemoveSubTree({\i subKey})} \par{\i object}\line Required. The MsiRegKey object. \par{\i\b subKey}\line Required. the string denoting the subkey. \par\fi0\li0{\b Remarks}\par\li180 The function removes the subkey and any subkeys and values below, if present. \page #{\footnote MsiRegKey_Values} ${\footnote MsiRegKey.Values} +{\footnote MsiRegKey:Values} K{\footnote Values} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b Values Method \line\tx360\tab\fs18\b0{\uldb MsiRegKey Object}{\v MsiRegKey_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 The method returns an enumeration object of all the value names of the  values of the current key. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .Values} \par{\i object}\line Required. The MsiRegKey object. \par\fi0\li0{\b Remarks}\par\li180 \page #{\footnote MsiRegKey_SubKeys} ${\footnote MsiRegKey.SubKeys} +{\footnote MsiRegKey:SubKeys} K{\footnote SubKeys} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b SubKeys Method \line\tx360\tab\fs18\b0{\uldb MsiRegKey Object}{\v MsiRegKey_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 The method returns an enumeration object of all the subkey names of the  current key. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .SubKeys} \par{\i object}\line Required. The MsiRegKey object. \par\fi0\li0{\b Remarks}\par\li180 \page #{\footnote MsiRegKey_CreateChild} ${\footnote MsiRegKey.CreateChild} +{\footnote MsiRegKey:CreateChild} K{\footnote CreateChild} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b CreateChild Method \line\tx360\tab\fs18\b0{\uldb MsiRegKey Object}{\v MsiRegKey_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 The method creates a new MsiRegKey object which is a subkey of the  current MsiRegKey object. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .CreateChild({\i subKey})} \par{\i object}\line Required. The MsiRegKey object. \par{\i\b subKey}\line Required. the string denoting subkey under the MsiRegKey object. \par\fi0\li0{\b Remarks}\par\li180 Please note that this function creates a reference to a new MsiRegKey object  that represents the physical registry key. The actual registry key is not opened  or created on the construction of the MsiRegKey object. One has to use the member  methods of the MsiRegKey object to manipulate the physical key itself. \page #{\footnote MsiRegKey_GetSelfRelativeSD} ${\footnote MsiRegKey.GetSelfRelativeSD} +{\footnote MsiRegKey:GetSelfRelativeSD} K{\footnote GetSelfRelativeSD} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b GetSelfRelativeSD Property \line\tx360\tab\fs18\b0{\uldb MsiRegKey Object}{\v MsiRegKey_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp} \par}\li180 The property returns a stream object containing a self relative security descriptor for  the registry key. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .GetSelfRelativeSD()} \par{\i object}\line Required. The MsiRegKey object. \par\fi0\li0{\b Remarks}\par\li180 Please note that modifying this stream does not manipulate the security descriptor itself.  Also note that security descriptors may be equivalent in that they represent the same set  of permissions, without being identical binaries. \page #{\footnote MsiMalloc_Object} ${\footnote MsiMalloc Object} K{\footnote MsiMalloc} +{\footnote Class:MsiMalloc} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b MsiMalloc Object \line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \par}\li180 Provides basic memory allocation services for all modules.  This object is exposed only for testing purposes.  The MsiMalloc object is obtained from the MsiServices method  {\uldb GetAllocator}{\v MsiServices_GetAllocator}.  In debug builds, memory blocks are monitored for corruption such as  overwriting bounds and double deletion.  Also in debug builds memory leaks are displayed in dialog boxes.  Stack traces are shown of who allocated the memory. In order to  see these on your machine make sure the following DLLs are on your  path.  In WinNT - imagehlp.dll, dbi.dll and mspdb40.dll  On win95 - mspdb40.dll. !! Talk about diagnostic capabilities here !! \par\li0{\b Methods}\par\li180 {\uldb Alloc}{\v MsiMalloc_Alloc}\line {\uldb Free}{\v MsiMalloc_Free}\line {\uldb SetDebugFlags}{\v MsiMalloc_SetDebugFlags}\line {\uldb GetDebugFlags}{\v MsiMalloc_GetDebugFlags}\line {\uldb CheckAllBlocks}{\v MsiMalloc_CheckAllBlocks}\line {\uldb FCheckBlock}{\v MsiMalloc_FCheckBlock}\line {\uldb GetSizeOfBlock}{\v MsiMalloc_GetSizeOfBlock}\line \page #{\footnote MsiMalloc_Alloc} ${\footnote MsiMalloc.Alloc} +{\footnote MsiMalloc:Alloc} K{\footnote Alloc} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b Alloc Method \line\tx360\tab\fs18\b0{\uldb MsiMalloc Object}{\v MsiMalloc_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \par}\li180 Allocates a new memory block and returns its address as a Long. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .Alloc({\i byteCount})} \par{\i object}\line Required. The MsiMalloc object. \par{\i\b byteCount}\line Required. Number of bytes to allocate in the block. \par\fi0\li0{\b Remarks}\par\li180 !!Additional notes!!  \page #{\footnote MsiMalloc_Free} ${\footnote MsiMalloc.Free} +{\footnote MsiMalloc:Free} K{\footnote Free} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b Free Method \line\tx360\tab\fs18\b0{\uldb MsiMalloc Object}{\v MsiMalloc_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \par}\li180 Frees a previously allocated memory block. This block must have been  allocated with this allocator object. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .Free({\i memoryBlock})} \par{\i object}\line Required. The MsiMalloc object. \par{\i\b memoryBlock}\line Required. Memory block returned from {\uldb Alloc}{\v MsiMalloc_Alloc}. \par\fi0\li0{\b Remarks}\par\li180 !!Additional notes!!  \page #{\footnote MsiMalloc_SetDebugFlags} ${\footnote MsiMalloc.SetDebugFlags} +{\footnote MsiMalloc:SetDebugFlags} K{\footnote SetDebugFlags} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b SetDebugFlags Method \line\tx360\tab\fs18\b0{\uldb MsiMalloc Object}{\v MsiMalloc_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \par}\li180 \tx360\tx720 Sets the debug flags for the debug allocator. Possible flags are:\par \tab 0x1\tab Tells the debug allocator  never to actually free a memory block, but to keep it in the "Free List"  which allows you to more easily tell if the block is being doubly-freed. \par\tab 0x2\tab Logs each memory allocation with the size and address from  where the allocation was called. This is only available when using debug services. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .SetDebugFlags({\i flag})} \par{\i object}\line Required. The MsiMalloc object. \par{\i\b flag}\line Required. Flags. \par\fi0\li0{\b Remarks}\par\li180 !!Additional notes!!  \page #{\footnote MsiMalloc_GetDebugFlags} ${\footnote MsiMalloc.GetDebugFlags} +{\footnote MsiMalloc:GetDebugFlags} K{\footnote GetDebugFlags} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b GetDebugFlags Method \line\tx360\tab\fs18\b0{\uldb MsiMalloc Object}{\v MsiMalloc_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \par}\li180 \tx360\tx720 Returns the debug flags for the debug allocator. Possible flags are:\par \tab 0x1\tab Tells the debug allocator  never to actually free a memory block, but to keep it in the "Free List"  which allows you to more easily tell if the block is being doubly-freed. \par\tab 0x2\tab Logs each memory allocation with the size and address from  where the allocation was called. This is only available when using debug services. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .GetDebugFlags} \par{\i object}\line Required. The MsiMalloc object. \par\fi0\li0{\b Remarks}\par\li180 !!Additional notes!!  \page #{\footnote MsiMalloc_CheckAllBlocks} ${\footnote MsiMalloc.CheckAllBlocks} +{\footnote MsiMalloc:CheckAllBlocks} K{\footnote CheckAllBlocks} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b CheckAllBlocks Method \line\tx360\tab\fs18\b0{\uldb MsiMalloc Object}{\v MsiMalloc_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \par}\li180 \tx360\tx720 Checks all the allocated memory blocks for corruption and returns true  if everything is ok. False otherwise. It will display asserts about  memory blocks which are corrupt if asserts are enabled. This is only available when using debug services. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .CheckAllBlocks} \par{\i object}\line Required. The MsiMalloc object. \par\fi0\li0{\b Remarks}\par\li180 !!Additional notes!!  \page #{\footnote MsiMalloc_FCheckBlock} ${\footnote MsiMalloc.FCheckBlock} +{\footnote MsiMalloc:FCheckBlock} K{\footnote FCheckBlock} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b FCheckBlock Method \line\tx360\tab\fs18\b0{\uldb MsiMalloc Object}{\v MsiMalloc_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \par}\li180 \tx360\tx720 Checks the allocated memory block for corruption and returns true  if everything is ok. False otherwise. It will display asserts about  memory blocks which are corrupt if asserts are enabled. This is only available when using debug services. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .FCheckBlock({\i memoryBlock})} \par{\i object}\line Required. The MsiMalloc object. \par{\i\b memoryBlock}\line Required. Memory block allocated through memory allocator. \par\fi0\li0{\b Remarks}\par\li180 !!Additional notes!!  \page #{\footnote MsiMalloc_GetSizeOfBlock} ${\footnote MsiMalloc.GetSizeOfBlock} +{\footnote MsiMalloc:GetSizeOfBlock} K{\footnote GetSizeOfBlock} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b GetSizeOfBlock Method \line\tx360\tab\fs18\b0{\uldb MsiMalloc Object}{\v MsiMalloc_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \par}\li180 \tx360\tx720 Returns the size of the allocated memory block. Only works on blocks  allocated by the memory allocator. This is only available when using debug services. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .GetSizeOfBlock({\i memoryBlock})} \par{\i object}\line Required. The MsiMalloc object. \par{\i\b memoryBlock}\line Required. Memory block allocated through memory allocator. \par\fi0\li0{\b Remarks}\par\li180 !!Additional notes!!  \page {\uldb GetSizeOfBlock}{\v MsiMalloc_GetSizeOfBlock}\line
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\darwin\src\help\suminfo.rtf ===
{\rtf1\ansi {\fonttbl{\f0\fswiss Helv;}{\f1\fmodern Courier New;}} {\colortbl;} \fs20 #{\footnote Summary_Overview} ${\footnote Summary Information} K{\footnote Summary Information;Stream;IStream Interface;Structured Storage} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b What Is The Summary Information Stream? \par}\li180 OLE supports the concept of structured storage accessible through the   {\i IStream} interface.  Stuctured storage, in turn, supports the concept of  property sets as a flexible method for serializing almost any information.  The  OLE specification defines a single standard property set, Summary Information,  which the Windows 95 Shell uses to populate property sheets viewable from  the Explorer.  So, information stored in the Summary Information stream can  be viewed by users when they right mouse click on a Microsoft Installer  installation database or transform and choose Properties.  The Microsoft  Installer takes advantage of this fact by storing useful information in the  Summary Information property set.  This set includes the following properties  with corresponding Property IDs (PID) and data types: \line\par\pard \trowd\trgaph108\trleft540 \cellx2750\cellx5000\cellx5630\cellx7250\cellx10000 \intbl{\b Property Name\cell Property ID\cell PID\cell Type\cell Installer Usage\cell }\row \intbl{\uldb Codepage}{\v Summary_Codepage}\cell PID_CODEPAGE\cell 1\cell VT_12\cell\row \intbl{\uldb Title}{\v Summary_Title}\cell PID_TITLE\cell 2\cell VT_LPSTR\cell File Type Description\cell\row \intbl{\uldb Subject}{\v Summary_Subject}\cell PID_SUBJECT\cell 3\cell VT_LPSTR\cell Product Name\cell\row \intbl{\uldb Author}{\v Summary_Author}\cell PID_AUTHOR\cell 4\cell VT_LPSTR\cell Vendor\cell\row \intbl{\uldb Keywords}{\v Summary_Keywords}\cell PID_KEYWORDS\cell 5\cell VT_LPSTR\cell Help for User\cell\row \intbl{\uldb Comments}{\v Summary_Comments}\cell PID_COMMENTS\cell 6\cell VT_LPSTR\cell Help for User\cell\row \intbl{\uldb Template}{\v Summary_Template}\cell PID_TEMPLATE\cell 7\cell VT_LPSTR\cell Platform, LangIDs\cell\row \intbl{\uldb Last Saved By}{\v Summary_SavedBy}\cell PID_LASTAUTHOR\cell 8\cell VT_LPSTR\cell\row \intbl{\uldb Revision Number}{\v Summary_Revision}\cell PID_REVNUMBER\cell 9\cell VT_LPSTR\cell Product Revision\cell\row \intbl{\uldb Last Printed}{\v Summary_LastPrinted}\cell PID_LASTPRINTED\cell 11\cell VT_FILETIME\cell\row \intbl{\uldb Create Time/Date}{\v Summary_Created}\cell PID_CREATE_DTM\cell 12\cell VT_FILETIME\cell Product Release Date\cell\row \intbl{\uldb Last Save Time/Date}{\v Summary_Saved}\cell PID_LASTSAVE_DTM\cell 13\cell VT_FILETIME\cell Last Database Modification\cell\row \intbl{\uldb Page Count}{\v Summary_PageCount}\cell PID_PAGECOUNT\cell 14\cell VT_I4\cell Minimum Installer Version\cell\row \intbl{\uldb Word Count}{\v Summary_SourceType}\cell PID_MSISOURCE\cell 15\cell VT_I4\cell Install Source Type\cell\row \intbl{\uldb Character Count}{\v Summary_CharCount}\cell PID_CHARCOUNT\cell 16\cell VT_I4\cell Transform Restrictions\cell\row \intbl{\uldb Creating Application}{\v Summary_Creator}\cell PID_APPNAME\cell 18\cell VT_LPSTR\cell "Microsoft Installer"\cell\row \intbl{\uldb Security}{\v Summary_Security}\cell PID_SECURITY\cell 19\cell VT_I4\cell Read-only Status\cell\row The Microsoft Installer currently maintains two storage formats:  a product specific {\uldb Installation Database}{\v NoHelp}, and a language or  version specific {\uldb Transform}{\v NoHelp}. The CLSID for the storage is  set to the appropriate format class for the particular format, independent  of the Summary Information for the storage. Values of summary properties for each of the file types are described in the following table (NOT UP TO DATE!): \line\par\pard \trowd \trgaph108\trleft540 \cellx2700\cellx4870\cellx7030\cellx9210  \intbl{\b {\i Summary Property}\cell Configuration Database\cell Installation Database\cell Transform\cell } \intbl{\uldb {\i Title}}{\v Summary_Title}\cell  [{\uldb SummaryTitle}{\v Summary_Title}] (e.g., "Configuration Database")\cell  [{\uldb SummaryTitle}{\v Summary_Title}] (e.g., "Installation Database")\cell  [{\uldb SummaryTitle}{\v Summary_Title}] (e.g., "Transform")\cell\row \intbl{\uldb {\i Subject}}{\v Summary_Subject}\cell [{\uldb ProductName}{\v Summary_AppName}]\cell [{\uldb ProductName}{\v Summary_AppName}]\cell [{\uldb ProductName}{\v Summary_AppName}]\cell \row \intbl{\uldb {\i Author}}{\v Summary_Author}\cell Microsoft Corporation\cell Microsoft Corporation\cell Microsoft Corporation\cell \row \intbl{\uldb {\i Keywords }}{\v Summary_Keywords}\cell [{\uldb SummaryKeywords}{\v Summary_Keywords}]\cell [{\uldb SummaryKeywords}{\v Summary_Keywords}]\cell [{\uldb SummaryKeywords}{\v Summary_Keywords}]\cell \row \intbl{\uldb {\i Comments }}{\v Summary_Comments}\cell  [{\uldb SummaryComments}{\v Summary_Comments}] (e.g.,The Configuration Database contains information about all Microsoft Installer installed products such as PID, location of Installation Database, shared components, etc.)\cell [{\uldb SummaryComments}{\v Summary_Comments}] (e.g., An Installation Database contains the logic and data required to install or modify the installation of a product on a user\rquote s machine.)\cell  [{\uldb SummaryComments}{\v Summary_Comments}] (e.g., A Transform is a set of changes to be applied to an Installation Database prior to processing the database.  Transforms can be used for creating language version, upgrades, and the like.)\cell\row \intbl{\uldb {\i Template }}{\v Summary_Template}\cell NULL\cell platform;default language ID;other languageIDs\cell  base platform;base language ID\cell\row \intbl{\uldb {\i Last Saved By }}{\v Summary_SavedBy}\cell [{\uldb USERNAME}{\v Property_USERNAME}]\cell NULL\cell new platform;new language ID\cell\row \intbl{\uldb {\i Revision Number }}{\v Summary_Revision}\cell NULL\cell Product code and version\cell  Base product code and version;New product code and version\cell\row \intbl{\uldb {\i Last Printed}}{\v Summary_LastPrinted}\cell NULL\cell Install time\cell NULL\cell\row \intbl{\uldb {\i Create Time/Date }}{\v Summary_Created}\cell Time & date the Configuration Database was created on a user\rquote s machine.\cell  Time & date stamped here at Microsoft before shipment\cell Time & date stamped here at Microsoft before shipment\cell\row \intbl{\uldb {\i Last Saved Time/Date }}{\v Summary_Saved}\cell Time & date of the last time a modification was made.\cell NULL\cell NULL\cell\row  \intbl{\uldb {\i Number of Pages}}{\v Summary_PageCount}\cell MSI version\cell MSI version\cell MSI version\cell\row \intbl{\uldb {\i Source Type}}{\v Summary_SourceType}\cell NULL\cell Type code\cell NULL\cell\row \intbl{\uldb {\i Number of Characters}}{\v Summary_CharCount}\cell NULL\cell NULL\cell transform restrictions\cell\row \intbl{\i\uldb Creating Application }{\v\f2 Summary_Creator}\cell "Microsoft Installer"\cell "Microsoft Installer"\cell "Microsoft Installer"\cell\row \intbl{\i\uldb Security}{\v Summary_Security}\cell 0 (none)\cell 2 (read-only recomm.)\cell 4 (read-only enforced)\cell\row \par  \page #{\footnote Summary_AppName} ${\footnote AppName Summary Property} K{\footnote AppName Summary Property} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b AppName Summary Property \par}\li180 \page #{\footnote Summary_Codepage} ${\footnote Codepage Summary Property} K{\footnote Codepage Summary Property} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b Codepage Summary Property \par}\li180 The Codepage Summary Property identifies the codepage used to display the Summary Information.  This property never changes. \page #{\footnote Summary_Title} ${\footnote Title Summary Property} K{\footnote Title Summary Property} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b Title Summary Property \par}\li180 The Title Summary Property is used to convey what the *.MSI file is, so the  value for this summary property is either "Installation Database",  "Transform", or "Configuration Database", and it never changes. \page #{\footnote Summary_Subject} ${\footnote Subject Summary Property} K{\footnote Subject} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b Subject Summary Property \par}\li180 This summary property is used to convey to a file browser the product that can be installed  using the logic and data in this installation database.  For example, the  value of the summary property for Office 97 would be; "Microsoft Office 97  Professional". This value is typically set from the installer property {\uldb ProductName}{\v Property_ProductName}. \page #{\footnote Summary_Author} ${\footnote Author Summary Property} K{\footnote Author} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b Author Summary Property \par}\li180 The Author Summary Property is used to convey to a file browser who initially created an installation  database. This value is typically set from the installer property {\uldb Manufacturer}{\v Property_Manufacturer}. \page #{\footnote Summary_Keywords} ${\footnote Keywords Summary Property} K{\footnote Keywords} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b Keywords Summary Property \par}\li180 This summary property is for use by file browsers to hold kewords that  can permit the database file to be found in a keyword search. The set  of keywords typically will include "Installer" as well as product-specific keywords,  and may be localized.. \page #{\footnote Summary_Comments} ${\footnote Comments Summary Property} K{\footnote Comments} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b Comments Summary Property \par}\li180 The Comments Summary Property is used to convey the general purpose of the  installation database.  By default the value for this summary property is set  to the following: \tab "This installation database contains the logic and data\line \tab required to install <{\i product name}>." where <{\i product name}> is the name of the product being installed (e.g.,  "Microsoft Office 97 Professional").  In general the value for this summary  property only changes in the product name, nothing else.  But for localization  reasons and to allow the modification of this summary property, the Microsoft \page #{\footnote Summary_Template} ${\footnote Template Summary Property} K{\footnote Template} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b Template Summary Property \par}\li180 The Template Summary Property is somewhat overloaded.  Since there is no  notion of a template in the Microsoft Installer this summary property could  be left blank.  However, a location is required for the platform and   language version(s) supported by an installation database.  The Template   summary property is used for this purpose.  In all database types this  property has the same form.  The value is a list of the platform supported by  this database (e.g., "Intel"), and the  language ID (e.g. "1033" for US English) of all languages that are  supported by this database.  The list is delimited by semi-colons.  For example,  a database for the Intel platform that supports U.S. English, Farsi, and   Byelorussian would have this property set to: \tab"Intel;1033;1065;1059" There are variations of this property depending on whether it is in a source   installation database, maintenance database, transform, or configuration   database.\par {\b Source Installation Database}\line In a source installation database any number of languages may be  specified.  If more than one language is specified then a multi-language  install will be done.  Listing only one language specifies a single-langage  install.\par {\b Maintenance Database}\line In a maintenance database only one language will be specified.  This is the  language of the installed product.\par {\b Transform}\line In a transform file only one language may be specified.  The specified  platform and language are used, in combination with the transform  restrictions, to determine whether a this transform can be applied to a   particular database.  Either or both of these properties may be left blank  if no transform restriction relies on them to validate the transform.\par {\b Configuration Database}\line This property is NULL in a configuration database. \page #{\footnote Summary_SavedBy} ${\footnote Last Saved By Summary Property} K{\footnote Last Saved By} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b Last Saved By Summary Property \par}\li180 In an installation database the Last Saved By Summary Property is used to  keep track of who made the last changes to the database. Initially the value  for this summary property is set to NULL. However, should a user choose to  make modifications to an installation the value for this summary property  changes.  The value is set to the value of the  {\uldb USERNAME}{\v Property_USERNAME} property defined by the Microsoft  Installer.\par {\b Transform}\line In a transform this property is used for a different purpose. It contains  the platform and language ID(s) that a database should have after it has  been transformed. In other words, it specifies what the Template property  should be set to in the new database. See the description of the   {\uldb Template}{\v Summary_Template} property for information about the form of  this property.\par {\b Configuration Database}\line This property is NULL in a configuration database. \page #{\footnote Summary_Revision} ${\footnote Revision Number Summary Property} K{\footnote Revision Number} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b Revision Number Summary Property \par}\li180 The Revision Number Summary Property contains the product ID and version.  The product ID is a GUID code representing a  product. The version is stored in a string with the format  "Maj.Min.Inc.Build". For example, Word 6.0 Build 3280 could be stored as: \tab "\{000C1101-0000-0000-C000-000000000046\}7.0.0.3280" {\b Transform}\line In a transform the product ID and version of both the original and transformed  database are stored. They are separated with a semi-colon. For example, a  transform that transforms a database from Office Pro 7.0 to  Office Standard 7.0 could have this property set to: \tab "\{000C1101-0000-0000-C000-000000000046\}7.0.0.0;\{000C1101-0000-0000-C000-000000000047\}7.0.0.0" {\b Configuration Database}\line This property is NULL is a configuration database.  \page #{\footnote Summary_LastPrinted} ${\footnote Last Printed Summary Property} K{\footnote Last Printed} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b Last Printed Property \par}\li180 The Last Printed property is used to convey when the installation occurred  (i.e. when the maintenance database was created). Thus, it is NULL in all  databases except the maintenance database. \page #{\footnote Summary_Created} ${\footnote Create Time/Date Summary Property} K{\footnote Create Time/Date} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b Create Time/Date Summary Property \par}\li180 The Create Time/Date Summary Property is used to convey when the installation  database was created.  This property is set at Microsoft as part of the  authoring process and never changes. \page #{\footnote Summary_Saved} ${\footnote Last Saved Time/Date Summary Property} K{\footnote Last Saved Time/Date} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b Last Saved Time/Date Summary Property \par}\li180 The Last Saved Time/Date Summary Property is used to convey when the last time  the installation database was modified.  Each time a user changes an  installation the value for this summary property is updated to the current  system time/date at the time the installation database was saved.  Initially  the value for this summary property is set to NULL to indicate that no changes  have yet been made. \page #{\footnote Summary_PageCount} ${\footnote Page Count Summary Property} K{\footnote Page Count Summary Property} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b Page Count Summary Property \par}\li180 The Page Count Summary Property contains the minimum Darwin version reequired.  It is stored as an integer in the form: Major * 100 + minor. \page #{\footnote Summary_CharCount} ${\footnote Character Count Summary Property} K{\footnote Character Count Summary Property} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b Character Count Summary Property \par}\li180 The Character Count Summary Property is only used in transforms. The upper word  contains the transform validation flags. The lower word contains the transform  error condition flags. !! more to be filled in here when implemented \page #{\footnote Summary_Creator} ${\footnote Creating Application Summary Property} K{\footnote Creating Application} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b Creating Application Summary Property \par}\li180 The Creating Application Summary Property is used to convey what  application created the installation database.  In general the value for  this summary property is "Microsoft Installer".  However, over time corporate  customers and/or OEMs may use other tools, via {\uldb OLE Automation}{\v Automate_Info},  to create installation databases. \page #{\footnote Summary_Security} ${\footnote Security Summary Property} K{\footnote Security;PID_SECURITY} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b Security Summary Property \par}\li180 The Security Summary Property is used to convey whether the file should be  opened read-only or read-write. Possible values are:\par \tab 0\tab No restriction\line \tab 2\tab Read-only recommended\line \tab 4\tab Read-only enforced \page #{\footnote Summary_SourceType} ${\footnote MSI FileType Summary Property} K{\footnote Source Imaage Type;PID_MSISOURCE} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b MSI Source Type Summary Property \par}\li180 The MSI Source Type Summary Property is used to indicate the type  of source file image. If this property is not present, it defaults to 0.  The location of the image is determined by the {\f1 SOURCEFILE} property,  which defaults to the location of the launcher. Note that this property is  stored in place of the standard {\bWord Count} property. \line\tab {\f1 0}\tab Tree image matching the Directory table, long file names. \line\tab {\f1 1}\tab Tree image matching the Directory table, short file names. \line\tab {\f1 2}\tab Cabinet and files matching the Media table, long file names. \line\tab {\f1 3}\tab Cabinet and files matching the Media table, short file names. \page
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\darwin\src\help\server.rtf ===
{\rtf1\ansi {\fonttbl{\f0\fswiss Arial;}{\f1\fmodern Courier New;}{\f2\fmodern\fcharset2 MS LineDraw;}{\f3\fmodern\fcharset3 Terminal;}} {\colortbl;} \fs20 #{\footnote MsiServer_Object} ${\footnote Msi Server Contents} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b Microsoft Installer Server Contents \par}\li180 \par\li0{\b\uldb Design Summary}{\v Server_DesignSummary} \par\li0{\b\uldb Execution Flow}{\v Server_ExecutionFlow} \par\li0{\b\uldb Script Format}{\v Server_ScriptFormat} \par\li0{\b\uldb Script Opcodes}{\v Server_ScriptOpcodes} \par\li0{\b\uldb Deliverables}{\v Server_Deliverables} \page #{\footnote Server_ExecutionFlow} ${\footnote Execution Flow} K{\footnote MSIEXEC; Execution; Flow} +{\footnote Server:Execution} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b Installer Execution Flow \par}\li180 This diagram shows how the various objects interact.  It does not indicate how the code is packaged into modules, as most of  the code is shared between the server and client implementation. The script  is not physically sent between processes; only its access is transferred. \par{\f3\fs18 \line  Client operating in User Account  | Server, can operate as an OS service \line                                    |   \line    RPC      \line   Product  Product  Config  Install  Configuration \line   Database Launcher Proxy    |        Server   Database      \line     |       \line                         |              \line       Messages |     \line   UI       Install Script  Config. Install \line   Handler  Engine               |  Execute Manager Engine  \line                |  \line                                  |                  \line    \line     System   Script    System   \line        Services Generate  Script       Services \line                 |          }\page #{\footnote Server_Deliverables} ${\footnote Installer Deliverables} K{\footnote Components; Deliverables; MSIEXEC} +{\footnote Server:Deliverables} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b Deliverable Components \par}\li180 The following components will be delivered with each build of the Microsoft Installer.  Because the Microsoft Installer is a cross platform application, separate sets  of components are produced for each platform. \par\li0{\b Core installer components}\par\li180 {\f1 MSISRV.DLL  } system services and DBMS, shared by all other modules, IMsiServices\line {\f1 MSIENG.DLL  } install logic, action processing, IMsiEngine, IMsiExecute, IMsiConfigurationMangaer\line {\f1 MSIHND.DLL  } error handling, dialog management, operates only in user security, IMsiHandler\line {\f1 MSIEXEC.EXE } install server -- local OLE server, maintenance launcher, installable as OS service\line {\f1 INSTALL.EXE } install launcher with product-specific resources, installer for MSI components\line \par\li0{\b Authoring tools}\par\li180 {\f1 MSIAUTO.DLL } OLE automation for core components, ODBC driver for database services\line {\f1 MSIGEN.DLL  } generates installation database from product root\line {\f1 MSIDIFF.DLL } generates installation database from SYSDIFF output\line {\f1 MSIEDIT.EXE } authoring environment, launches tools, edits tables and views\line \page #{\footnote Server_DesignSummary} ${\footnote Server DesignSummary} K{\footnote Design; MSIEXEC} +{\footnote Server:DesignSummary} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b Installer Enhancements Design Summary \par}\li180 \par\li0{\b Execution Phases}\par\li180 In order to operate in a secure environment, with the user's privileges locked down,  the installation process is divided into two phases, acquisition where the install  engine interacts with the installation database, the environment and the user to  determine the set of operations required, and execution where the system update  operations take place. The acquistion phase operates with user permissions, as it  generally requires UI such as dialogs, progress, billboards, and error handling.  The execution phase requires full file and registry permissions and updates the  machine's installation configuration database. In a secure system this execution  code is installed as a service. The communication between the two phases is handled  by the IMsiExecute object, which generates a script file during acquisition and  executes the script from with the execution module. Actions which formerly executed  in a single operation, have been divided into the acquisition half which queries the  database to determine the set of operations, and the execution half which is dispatched  from the IMsiExecute object. Generating the script has the following advantages: \line  1. The complete set of operations is successfully determined before any updates are done. \line  2. The set of operations can be treated as a single transaction, allowing rollback. \line  3. The transaction model eliminates concurrency problems by locking out intervening updates. \line  4. The package containing the script can be certified once for all operations. \line  5. Only a single RPC access is required to pass the set of operations. \line  6. Testing and debugging is facilitated by independent generation and execution. \line  7. Installation can be simulated by generation without execution. \line  8. The script file could be used to analyze or resume execution after a crash or power loss. \par\li0{\b Install Action Execution}\par\li180 Install actions typically execute queries against the product database and perform operations  using the fetched data parameters. Instead of directly updating the system, which cannot be done  from a user program in a secure system, the actions must call the Execute method of the engine  with the necessary information packaged in a record object. This is in turn passed to the IMsiExecute  object for streaming into the script file. The script is executed by another IMsiExecute object  in the install server, which dispatches the regenerated records to the appropriate worker functions.  The worker functions are generally associated with corresponding install actions, but may be  shared by multiple actions where appropriate. Additional operations are included in the script for  syncronization purposes, such as notifications, progress parameters, and media change information. \par\li0{\b Module Packaging}\par\li180 The install server, which binds to the configuration manager, is built as a standalone executable  and will be installed as a system service when possible. It creates an execute object to run a script  and creates an engine object to install and remove shared components controlled by other databases.  Being a service means that all UI must be dispatched by RPC to a user process.  We are using IDispatch (OLE automation) for the UI handling and configuration manager requests,  as OLE will marshal this interface across processes. The server must also manage the security  attributes for the OLE RPC connection. The engine and services modules, shared by launchers,  configuration manager, and tools, could eventually be combined into a single DLL to reduce disk space.  We need to invoke the install server  via the command line in a shortcut, add/remove command, or proxy, either by using a separate maintenance  launcher or, preferably, by having an external instance of the install server call the  service instance using the RPC mechanism. \page #{\footnote Server_Using} ${\footnote Using the Install Server} K{\footnote Executable; MSIEXEC} +{\footnote Server:Using} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b Using the Install Server \par}\li180 The install server supports the following command-line options: \line\par\pard \trowd\trgaph108\trleft540 \cellx2150\cellx7400 \intbl{\b Option\cell Description\cell}\row \intbl/regserver\cell Q\cell\row \intbl/regnoservice\cell Registers as a standard OLE server even if it is possible to register as a service.\cell\row \intbl/unregister\cell Unregister the current registration.\cell\row \intbl/t <caption>\cell Show test window. Displays a small window with the specified caption. This can be useful to determine when the server is running.\cell\row \intbl/l <scriptfile>\cell List script. Display the opcodes and data contained in the given scriptfile. The output must be redirected to a file.\cell\row \intbl/i <scriptfile>\cell Install from script. \cell\row \intbl/a <featurelist>\cell Add features. Must be used after "/c". Separate feature names with commas.\cell\row \intbl/x <featurelist>\cell Remove features. Must be used after "/c". Separate feature names with commas.\cell\row \intbl/s <featurelist>\cell Q\cell\row \intbl/c <productkey>\cell Configure product. Use in combination with "/a", "/x", or "/s" to configure a product's features.\cell\row \intbl/? or /h\cell Display help.\cell\row \page #{\footnote Server_ScriptFormat} ${\footnote Server ScriptFormat} K{\footnote Script; MSIEXEC} +{\footnote Server:ScriptFormat} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b Execution Script Format \par}\li180 The execution script is a file containing a linear sequence of install operations  to be performed, such as file and registry updates, configuration database updates,  UI notifications, and state information for other operations. A binary format is used  instead of text for efficiency, to avoid the need for parsing, and to discourage  manual editing. Each record consists of an opcode, argument count, and an array of  arguments, essentially a serialization of the record objects used by the installer.  Data types supported include NULL, integer, and variable length string and binary data.  All data is stored as 16-bit integers in Intel byte ordering, with the exception of  non-Unicode strings which are padded if necessary to a 16-bit boundary. \par\li0{\b Record Structure}\par\li180 The first 16-bit word of a record contains the opcode in the low byte and the argument  count in the high byte. {\f3\fs18 \line   \line      Argument Count        Operation Code   \line        (high byte)           (low byte)     \line   Each of the arguments specified is preceded by a 16-bit word that specifies the data type  and length of the following argument data. The exact data representation depends upon the type.  The maximum length of an argument is 16,383 characters. If ever a longer argument is required,  the extended type value is placed in the length field followed by a 32-bit word containing the  type bits as the highest bits. Arguments are never null terminated. {\f3\fs18 \line   \line    Data   Length of data in characters, or  \line    type   reserved codes for integer, NULL  \line   \par\li0{\b Script Data Types}\par\li180\tx3000 \line {\b Data type Length encoding} \line Null string (all types) \line 32-bit signed integer 0x4000, integer value \line Null value 0x8000 \line extended size 0xC000, 32-bit length, data array \line Non-DBCS char string lstrlenA(), char array \line DBCS char string lstrlenA() + 0x4000, char array \line Binary stream byte count + 0x8000, byte array \line Unicode string lstrlenW() + 0xC000, char array \page #{\footnote Server_ScriptOpcodes} ${\footnote Server ScriptOpcodes} K{\footnote Script; Opcodes} +{\footnote Server:ScriptOpcodes} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b Execution Script Opcodes \par}\li180\tx3000 \line{\b Special Operations} \line{\f1 {\uldb ixoFail}{\v Operation_ixoFail}} \line{\f1 {\uldb ixoNoop}{\v Operation_ixoNoop}} \line{\f1 {\uldb ixoHeader}{\v Operation_ixoHeader}} \line{\f1 {\uldb ixoEnd}{\v Operation_ixoEnd}} \line{\f1 {\uldb ixoProductInfo}{\v Operation_ixoProductInfo}} \line{\f1 {\uldb ixoDialogInfo}{\v Operation_ixoDialogInfo}} \line{\f1 {\uldb ixoRollbackInfo}{\v Operation_ixoRollbackInfo}} \line{\f1 {\uldb ixoInfoMessage}{\v Operation_ixoInfoMessage}} \line{\f1 {\uldb ixoActionStart}{\v Operation_ixoActionStart}} \line{\f1 {\uldb ixoProgressTotal}{\v Operation_ixoProgressTotal}} \line{\f1 {\uldb ixoProgressTick}{\v Operation_ixoProgressTick}} \line{\f1 {\uldb ixoFullRecord}{\v Operation_ixoFullRecord}} \line{\f1 {\uldb ixoDisableRollback}{\v Operation_ixoDisableRollback}} \line{\f1 {\uldb ixoUpdateEstimatedSize}{\v Operation_ixoUpdateEstimatedSize}} \line{\f1 {\uldb ixoInstallProtectedFiles}{\v Operation_ixoInstallProtectedFiles}} \line{\f1 {\uldb ixoInstallSFPCatalogFile}{\v Operation_ixoInstallSFPCatalogFile}} \line \line{\b Configuration Manager Operations} \line{\f1 {\uldb ixoAdvtFlagsUpdate}{\v Operation_ixoAdvtFlagsUpdate}} \line{\f1 {\uldb ixoProductRegister}{\v Operation_ixoProductRegister}} \line{\f1 {\uldb ixoProductUnregister}{\v Operation_ixoProductUnregister}} \line{\f1 {\uldb ixoProductCPDisplayInfoRegister}{\v Operation_ixoProductCPDisplayInfoRegister}} \line{\f1 {\uldb ixoProductCPDisplayInfoUnregister}{\v Operation_ixoProductCPDisplayInfoUnregister}} \line{\f1 {\uldb ixoUserRegister}{\v Operation_ixoUserRegister}} \line{\f1 {\uldb ixoComponentRegister}{\v Operation_ixoComponentRegister}} \line{\f1 {\uldb ixoComponentUnregister}{\v Operation_ixoComponentUnregister}} \line{\f1 {\uldb ixoProductPublish}{\v Operation_ixoProductPublish}} \line{\f1 {\uldb ixoProductUnpublish}{\v Operation_ixoProductUnpublish}} \line{\f1 {\uldb ixoProductPublishUpdate}{\v Operation_ixoProductPublishUpdate}} \line{\f1 {\uldb ixoPackageCodePublish}{\v Operation_ixoPackageCodePublish}} \line{\f1 {\uldb ixoUpgradeCodePublish}{\v Operation_ixoUpgradeCodePublish}} \line{\f1 {\uldb ixoUpgradeCodeUnpublish}{\v Operation_ixoUpgradeCodeUnpublish}} \line{\f1 {\uldb ixoProductPublishClient}{\v Operation_ixoProductPublishClient}} \line{\f1 {\uldb ixoProductUnpublishClient}{\v Operation_ixoProductUnpublishClient}} \line{\f1 {\uldb ixoSourceListPublish}{\v Operation_ixoSourceListPublish}} \line{\f1 {\uldb ixoSourceListAppend}{\v Operation_ixoSourceListAppend}} \line{\f1 {\uldb ixoSourceListUnpublish}{\v Operation_ixoSourceListUnpublish}} \line{\f1 {\uldb ixoFeaturePublish}{\v Operation_ixoFeaturePublish}} \line{\f1 {\uldb ixoFeatureUnpublish}{\v Operation_ixoFeatureUnpublish}} \line{\f1 {\uldb ixoComponentPublish}{\v Operation_ixoComponentPublish}} \line{\f1 {\uldb ixoComponentUnpublish}{\v Operation_ixoComponentUnpublish}} \line \line{\b File and Folder Operations} \line{\f1 {\uldb ixoSetSourceFolder}{\v Operation_ixoSetSourceFolder}} \line{\f1 {\uldb ixoSetTargetFolder}{\v Operation_ixoSetTargetFolder}} \line{\f1 {\uldb ixoChangeMedia}{\v Operation_ixoChangeMedia}} \line{\f1 {\uldb ixoSetCompanionParent}{\v Operation_ixoSetCompanionParent}} \line{\f1 {\uldb ixoFileCopy}{\v Operation_ixoFileCopy}} \line{\f1 {\uldb ixoFileRemove}{\v Operation_ixoFileRemove}} \line{\f1 {\uldb ixoFolderCreate}{\v Operation_ixoFolderCreate}} \line{\f1 {\uldb ixoFolderRemove}{\v Operation_ixoFolderRemove}} \line{\f1 {\uldb ixoFileBindImage}{\v Operation_ixoFileBindImage}} \line{\f1 {\uldb ixoIconCreate}{\v Operation_ixoIconCreate}} \line{\f1 {\uldb ixoIconRemove}{\v Operation_ixoIconRemove}} \line{\f1 {\uldb ixoTypeLibraryRegister}{\v Operation_ixoTypeLibraryRegister}} \line{\f1 {\uldb ixoTypeLibraryUnregister}{\v Operation_ixoTypeLibraryUnregister}} \line{\f1 {\uldb ixoRegisterBackupFile}{\v Operation_ixoTypeLibraryUnregister}} \line \line{\b Registry Operations} \line{\f1 {\uldb ixoRegAllocateSpace}{\v Operation_ixoRegAllocateSpace}} \line{\f1 {\uldb ixoRegOpenKey}{\v Operation_ixoRegOpenKey}} \line{\f1 {\uldb ixoRegAddValue}{\v Operation_ixoRegAddValue}} \line{\f1 {\uldb ixoRegRemoveValue}{\v Operation_ixoRegRemoveValue}} \line{\f1 {\uldb ixoRegCreateKey}{\v Operation_ixoRegCreateKey}} \line{\f1 {\uldb ixoRegRemoveKey}{\v Operation_ixoRegRemoveKey}} \line{\f1 {\uldb ixoRegSelfReg}{\v Operation_ixoRegSelfReg}} \line{\f1 {\uldb ixoRegSelfUnreg}{\v Operation_ixoRegSelfUnreg}} \line{\f1 {\uldb ixoRegAppIdInfoRegister}{\v Operation_ixoRegAppIdInfoRegister}} \line{\f1 {\uldb ixoRegAppIdInfoUnregister}{\v Operation_ixoRegAppIdInfoUnregister}} \line{\f1 {\uldb ixoRegAppIdInfoRegister64}{\v Operation_ixoRegAppIdInfoRegister64}} \line{\f1 {\uldb ixoRegAppIdInfoUnregister64}{\v Operation_ixoRegAppIdInfoUnregister64}} \line{\f1 {\uldb ixoRegClassInfoRegister}{\v Operation_ixoRegClassInfoRegister}} \line{\f1 {\uldb ixoRegClassInfoUnregister}{\v Operation_ixoRegClassInfoUnregister}} \line{\f1 {\uldb ixoRegClassInfoRegister64}{\v Operation_ixoRegClassInfoRegister}} \line{\f1 {\uldb ixoRegClassInfoUnregister64}{\v Operation_ixoRegClassInfoUnregister}} \line{\f1 {\uldb ixoRegExtensionInfoRegister}{\v Operation_ixoRegExtensionInfoRegister}} \line{\f1 {\uldb ixoRegExtensionInfoUnregister}{\v Operation_ixoRegExtensionInfoUnregister}} \line{\f1 {\uldb ixoRegExtensionInfoRegister64}{\v Operation_ixoRegExtensionInfoRegister}} \line{\f1 {\uldb ixoRegExtensionInfoUnregister64}{\v Operation_ixoRegExtensionInfoUnregister}} \line{\f1 {\uldb ixoRegMIMEInfoRegister}{\v Operation_ixoRegMIMEInfoRegister}} \line{\f1 {\uldb ixoRegMIMEInfoUnregister}{\v Operation_ixoRegMIMEInfoUnregister}} \line{\f1 {\uldb ixoRegMIMEInfoRegister64}{\v Operation_ixoRegMIMEInfoRegister}} \line{\f1 {\uldb ixoRegMIMEInfoUnregister64}{\v Operation_ixoRegMIMEInfoUnregister}} \line{\f1 {\uldb ixoRegProgIdInfoRegister}{\v Operation_ixoRegProgIdInfoRegister}} \line{\f1 {\uldb ixoRegProgIdInfoUnregister}{\v Operation_ixoRegProgIdInfoUnregister}} \line{\f1 {\uldb ixoRegProgIdInfoRegister64}{\v Operation_ixoRegProgIdInfoRegister}} \line{\f1 {\uldb ixoRegProgIdInfoUnregister64}{\v Operation_ixoRegProgIdInfoUnregister}} \line{\f1 {\uldb ixoRegAddRunOnceEntry}{\v Operation_ixoRegAddRunOnceEntry}} \line \line{\b Shortcut Operations} \line{\f1 {\uldb ixoShortcutCreate}{\v Operation_ixoShortcutCreate}} \line{\f1 {\uldb ixoShortcutRemove}{\v Operation_ixoShortcutRemove}} \line \line{\b Ini Operations} \line{\f1 {\uldb ixoIniWriteRemoveValue}{\v Operation_ixoIniWriteRemoveValue}} \line{\f1 {\uldb ixoIniFilePath}{\v Operation_ixoIniFilePath}} \line \line{\b Patch Operations} \line{\f1 {\uldb ixoPatchApply}{\v Operation_ixoPatchApply}} \line{\f1 {\uldb ixoPatchRegister}{\v Operation_ixoPatchRegister}} \line{\f1 {\uldb ixoPatchUnregister}{\v Operation_ixoPatchUnregister}} \line{\f1 {\uldb ixoPatchCache}{\v Operation_ixoPatchCache}} \line \line{\b Font Operations} \line{\f1 {\uldb ixoFontRegister}{\v Operation_ixoFontRegister}} \line{\f1 {\uldb ixoFontUnregister}{\v Operation_ixoFontUnregister}} \line \line{\b Resource Operations} \line{\f1 {\uldb ixoResourceUpdate}{\v Operation_ixoResourceUpdate}} \line \line{\b Database Operations} \line{\f1 {\uldb ixoSummaryInfoUpdate}{\v Operation_ixoSummaryInfoUpdate}} \line{\f1 {\uldb ixoStreamsRemove}{\v Operation_ixoStreamsRemove}} \line{\f1 {\uldb ixoStreamAdd}{\v Operation_ixoStreamAdd}} \line{\f1 {\uldb ixoDatabaseCopy}{\v Operation_ixoDatabaseCopy}} \line{\f1 {\uldb ixoDatabasePatch}{\v Operation_ixoDatabasePatch}} \line \line{\b CustomAction Operations} \line{\f1 {\uldb ixoCustomActionSchedule}{\v Operation_ixoCustomActionSchedule}} \line{\f1 {\uldb ixoCustomActionRollback}{\v Operation_ixoCustomActionRollback}} \line{\f1 {\uldb ixoCustomActionCommit}{\v Operation_ixoCustomActionCommit}} \line \line{\b System Service Operations} \line{\f1 {\uldb ixoServiceControl}{\v Operation_ixoServiceControl}} \line{\f1 {\uldb ixoServiceInstall}{\v Operation_ixoServiceInstall}} \line \line{\b ODBC Operations} \line{\f1 {\uldb ixoODBCInstallDriver}{\v Operation_ixoODBCInstallDriver}} \line{\f1 {\uldb ixoODBCRemoveDriver}{\v Operation_ixoODBCRemoveDriver}} \line{\f1 {\uldb ixoODBCDataSource}{\v Operation_ixoODBCDataSource}} \line{\f1 {\uldb ixoODBCInstallTranslator}{\v Operation_ixoODBCInstallTranslator}} \line{\f1 {\uldb ixoODBCRemoveTranslator}{\v Operation_ixoODBCRemoveTranslator}} \line{\f1 {\uldb ixoODBCDriverManager}{\v Operation_ixoODBCDriverManager}} \line \line{\b Environmental Variables Operations} \line{\f1 {\uldb ixoUpdateEnvironmentStrings}{\v Operation_ixoUpdateEnvironmentStrings}} \line \line{\b ComPlus Operations} \line{\f1 {\uldb ixoComPlusRegister}{\v Operation_ixoComPlusRegister}} \line{\f1 {\uldb ixoComPlusUnregister}{\v Operation_ixoComPlusUnregister}} \line \line{\b Miscellaneous Operations} \line{\f1 {\uldb ixoSecureTransformCache}{\v Operation_ixoSecureTransformCache}} \page #{\footnote Operation_ixoSample} ${\footnote ixoSample Operation} +{\footnote Operation:ixoSample} K{\footnote ixoSample} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b ixoSample Operation \line\tx360\tab\fs18\b0{\uldb Script Opcodes}{\v Server_ScriptOpcodes} \tx3000\tab{\uldb Error Codes}{\v Msi_Errors} \par}\li180 !!Description!!  \par\li0\fi0{\b Parameters:}\par\li180 {\f1 Field 1: } !!Some kind of data!!\line {\f1 Field 2: } !!Some kind of data!! \par\li0\fi0{\b Sequencing Restrictions}\par\li180 !!What operations must be executed before this one??!!  \par\li0\fi0{\b Progress Notifications}\par\li180 !!Are any ActionData or Progress messages sent? What is sent in the ActionData messages??!!  \par\li0\fi0{\b Error Messages and MessageBox Styles}\par\li180 {\f1 imsgError1      MB_ABORTRETRYIGNORE }\line\line {\f1 imsgFatalError  MB_RETRYCANCEL } \par\li0\fi0{\b Remarks}\par\li180 !!Additional notes!!  \page #{\footnote Operation_ixoFail} ${\footnote ixoFail Operation} +{\footnote Operation:ixoFail} K{\footnote ixoFail} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b ixoFail Operation \line\tx360\tab\fs18\b0{\uldb Script Opcodes}{\v Server_ScriptOpcodes} \tx3000\tab{\uldb Error Codes}{\v Msi_Errors} \par}\li180 ixoFail is a special opcode used to catch null data in the script. This opcode is never  explicitly used. \par\li0\fi0{\b Remarks}\par\li180 \page #{\footnote Operation_ixoNoop} ${\footnote ixoNoop Operation} +{\footnote Operation:ixoNoop} K{\footnote ixoNoop} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b ixoNoop Operation \line\tx360\tab\fs18\b0{\uldb Script Opcodes}{\v Server_ScriptOpcodes} \tx3000\tab{\uldb Error Codes}{\v Msi_Errors} \par}\li180 This is a special opcode used for commenting out operations. \par\li0\fi0{\b Parameters:}\par\li180 None. \par\li0\fi0{\b Sequencing Restrictions}\par\li180 None. \par\li0\fi0{\b Progress Notifications}\par\li180 None. \par\li0\fi0{\b Error Messages and MessageBox Styles}\par\li180 None. \par\li0\fi0{\b Remarks}\par\li180 \page #{\footnote Operation_ixoFullRecord} ${\footnote ixoFullRecord Operation} +{\footnote Operation:ixoFullRecord} K{\footnote ixoFullRecord} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b ixoFullRecord Operation \line\tx360\tab\fs18\b0{\uldb Script Opcodes}{\v Server_ScriptOpcodes} \tx3000\tab{\uldb Error Codes}{\v Msi_Errors} \par}\li180 This is a special opcode used by the script serializer to indicate the record contains  data in field 0. \par\li0\fi0{\b Parameters:}\par\li180 None. \par\li0\fi0{\b Sequencing Restrictions}\par\li180 None. \par\li0\fi0{\b Progress Notifications}\par\li180 None. \par\li0\fi0{\b Error Messages and MessageBox Styles}\par\li180 None. \par\li0\fi0{\b Remarks}\par\li180 \page #{\footnote Operation_ixoHeader} ${\footnote ixoHeader Operation} +{\footnote Operation:ixoHeader} K{\footnote ixoHeader} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b ixoHeader Operation \line\tx360\tab\fs18\b0{\uldb Script Opcodes}{\v Server_ScriptOpcodes} \tx3000\tab{\uldb Error Codes}{\v Msi_Errors} \par}\li180 The opcode marks the start of a script. \par\li0\fi0{\b Parameters:}\par\li180 {\f1 Field 1: } Script signature (integer)\line {\f1 Field 2: } Msi version (integer)\line {\f1 Field 3: } Timestamp (integer)\line {\f1 Field 4: } Language id (integer)\line {\f1 Field 5: } Platform (not currently used)\line {\f1 Field 6: } Script type. One of the following values:\line  {\f1 1 :} Install\line  {\f1 2 :} Rollback\line  {\f1 3 :} Advertise\line {\f1 Field 7 & 8: } Script version. Used to identify incompatible script files.\line \par\li0\fi0{\b Sequencing Restrictions}\par\li180 Must be executed before all other operations for a script. \par\li0\fi0{\b Progress Notifications}\par\li180 None. \par\li0\fi0{\b Error Messages and MessageBox Styles}\par\li180 None, although the ommission of this operation from a script will cause an error. \par\li0\fi0{\b Remarks}\par\li180 !!Additional notes!!  \page #{\footnote Operation_ixoEnd} ${\footnote ixoEnd Operation} +{\footnote Operation:ixoEnd} K{\footnote ixoEnd} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b ixoEnd Operation \line\tx360\tab\fs18\b0{\uldb Script Opcodes}{\v Server_ScriptOpcodes} \tx3000\tab{\uldb Error Codes}{\v Msi_Errors} \par}\li180 This opcode marks the end of a script. \par\li0\fi0{\b Parameters:}\par\li180 {\f1 Field 1: } Script checksum (integer).\line {\f1 Field 2: } Progress total (integer).  This value represents the total number  of progress ticks to be attributed to the script execution progress bar. \par\li0\fi0{\b Sequencing Restrictions}\par\li180 Must be executed after all other operations for a script. \par\li0\fi0{\b Progress Notifications}\par\li180 Dispatches an ActionDone message. \par\li0\fi0{\b Error Messages and MessageBox Styles}\par\li180 None.  \page #{\footnote Operation_ixoInfoMessage} ${\footnote ixoInfoMessage Operation} +{\footnote Operation:ixoInfoMessage} K{\footnote ixoInfoMessage} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b ixoInfoMessage Operation \line\tx360\tab\fs18\b0{\uldb Script Opcodes}{\v Server_ScriptOpcodes} \tx3000\tab{\uldb Error Codes}{\v Msi_Errors} \par}\li180 This operation dispatches an {\uldb imtInfo}{\v MsiMessage_Message}  message with the parameters passed to it. \par\li0\fi0{\b Parameters:}\par\li180 Parameters to dispatch in imtInfo message \par\li0\fi0{\b Sequencing Restrictions}\par\li180 None. \par\li0\fi0{\b Progress Notifications}\par\li180 Dispatches an Info message. \par\li0\fi0{\b Error Messages and MessageBox Styles}\par\li180 None. \par\li0\fi0{\b Remarks}\par\li180 \page #{\footnote Operation_ixoActionStart} ${\footnote ixoActionStart Operation} +{\footnote Operation:ixoActionStart} K{\footnote ixoActionStart} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b ixoActionStart Operation \line\tx360\tab\fs18\b0{\uldb Script Opcodes}{\v Server_ScriptOpcodes} \tx3000\tab{\uldb Error Codes}{\v Msi_Errors} \par}\li180 This operation designates the start of a new action. It sets the action name used in  progress  messages dispatched by subsequent operations. It also resets any state data set  by previous operations. \par\li0\fi0{\b Parameters:}\par\li180 {\f1 Field 1: } Action name (non-localized text)\line {\f1 Field 2: } Action description (localized text)\line {\f1 Field 3: } Action data template (localized text) \par\li0\fi0{\b Sequencing Restrictions}\par\li180 Must be called before the {\uldb ixoProgressTotal}{\v Operation_ixoProgressTotal}  operation for the new action. \par\li0\fi0{\b Progress Notifications}\par\li180 Dispatches an ActionStart message with the following fields:\par\li360 {\f1 Field 1: } Action name (non-localized text)\line {\f1 Field 2: } Action description (localized text)\line {\f1 Field 3: } Action data template (localized text) \par\li0\fi0{\b Error Messages and MessageBox Styles}\par\li180 None. \par\li0\fi0{\b Remarks}\par\li180 \page #{\footnote Operation_ixoProductRegister} ${\footnote ixoProductRegister Operation} +{\footnote Operation:ixoProductRegister} K{\footnote ixoProductRegister} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b ixoProductRegister Operation \line\tx360\tab\fs18\b0{\uldb Script Opcodes}{\v Server_ScriptOpcodes} \tx3000\tab{\uldb Error Codes}{\v Msi_Errors} \par}\li180 Registers a product with the  {\uldb ConfigurationManager}{\v MsiConfigurationManager_Object}. The parameters required  to register the product that are not included in the parameters below are obtained from  the {\uldb ixoProductInfo}{\v Operation_ixoProductInfo} operation. Most of the information  in this opcode is registered for the use of the Add/Remove control Panel (ARP) \par\li0\fi0{\b Parameters:}\par\li180 {\f1 Field 1: } UpgradeCode (UpgradeCode property)\line {\f1 Field 2: } Product version string (ProductVersion property)\line {\f1 Field 3: } Help Link (ARPHELPLINK property)\line {\f1 Field 4: } Help Telephone (ARPHELPTELEPHONE property)\line {\f1 Field 5: } Install location (ARPINSTALLLOCATION property)\line {\f1 Field 6: } Install source (SOURCEDIR property)\line {\f1 Field 7: } Publisher (Manufacturer property)\line {\f1 Field 8: } URL for product information(ARPURLINFOABOUT property)\line {\f1 Field 9: } URL for update information (ARPURLUPDATEINFO property)\line {\f1 Field 10: } Prevent app removal from ARP (ARPNOREMOVE property)\line {\f1 Field 11: } Prevent app removal from ARP (ARPNOMODIFY property)\line {\f1 Field 12: } Prevent app repair from ARP (ARPNOREPAIR property)\line {\f1 Field 13: } Authorized CDF prefix (ARPAUTHORIZEDCDFPREFIX property)\line {\f1 Field 14: } Comments (ARPCOMMENTS property)\line {\f1 Field 15: } Contact (ARPCONTACT property)\line {\f1 Field 16: } Readme (ARPREADME property)\line {\f1 Field 17: } Size (ARPSIZE property)\line {\f1 Field 18: } SystemComponent (ARPSYSTEMCOMPONENT property)\line \par\li0\fi0{\b Sequencing Restrictions}\par\li180 None. \par\li0\fi0{\b Progress Notifications}\par\li180 ActionData record with the following fields:\par\li360 {\f1 Field 1: } Product key (non-localized text?) \par\li0\fi0{\b Error Messages and MessageBox Styles}\par\li180 {\f1 imsgOpProdRegister, MB_ABORTRETRYIGNORE } \par\li0\fi0{\b Remarks}\par\li180 \page #{\footnote Operation_ixoSourceListRegisterLastUsed} ${\footnote ixoSourceListRegisterLastUsed Operation} +{\footnote Operation:ixoSourceListRegisterLastUsed} K{\footnote ixoSourceListRegisterLastUsed} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b ixoSourceListRegisterLastUsed Operation \line\tx360\tab\fs18\b0{\uldb Script Opcodes}{\v Server_ScriptOpcodes} \tx3000\tab{\uldb Error Codes}{\v Msi_Errors} \par}\li180 Sets the last used source for a product. \par\li0\fi0{\b Parameters:}\par\li180 {\f1 Field 1: } SourceProduct - the product code for the product for which the last used source should be set\line {\f1 Field 2: } LastUsedSource - the path to the last used source\line \par\li0\fi0{\b Sequencing Restrictions}\par\li180 !!What operations must be executed before this one??!!  \par\li0\fi0{\b Progress Notifications}\par\li180 None.\line \par\li0\fi0{\b Error Messages and MessageBox Styles}\par\li180 !!To be documented!! \par\li0\fi0{\b Remarks}\par\li180 This op calls {\uldb Conman.RegisterLastUsedSource}{\v MsiConfigurationManager_SetLastUsedSource} source.  \page #{\footnote Operation_ixoSourceListPublish} ${\footnote ixoSourceListPublish Operation} +{\footnote Operation:ixoSourceListPublish} K{\footnote ixoSourceListPublish} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b ixoSourceListPublish Operation \line\tx360\tab\fs18\b0{\uldb Script Opcodes}{\v Server_ScriptOpcodes} \tx3000\tab{\uldb Error Codes}{\v Msi_Errors} \par}\li180 Publishes sources for a product. \par\li0\fi0{\b Parameters:}\par\li180 {\f1 Field 1: } PatchCode - optional. used if we're publishing to a patch source list\line {\f1 Field 2: } PatchPackageName - optional. used if we're publishing a patch\line {\f1 Field 3: } DiskPromptTemplate - we stick the media table's disk prompt in this template to get our media prompt\line {\f1 Field 4: } PackagePath - relative path to package on media (e.g. "Office\\", if the MSI is in the Office folder on the CD)\line {\f1 Field 5: } NumberOfDisks - how many disks we have\line {\f1 Field 6..N} For each disk there should be an arg with the label and an arg with the media table prompt. Following  this, for each non-media source there should be an arg with the path to the source.\line par\li0\fi0{\b Sequencing Restrictions}\par\li180 !!What operations must be executed before this one??!!  \par\li0\fi0{\b Progress Notifications}\par\li180 None.\line \par\li0\fi0{\b Error Messages and MessageBox Styles}\par\li180 !!To be documented!! \par\li0\fi0{\b Remarks}\par\li180 \page #{\footnote Operation_ixoSourceListAppend} ${\footnote ixoSourceListAppend Operation} +{\footnote Operation:ixoSourceListAppend} K{\footnote ixoSourceListAppend} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b ixoSourceListAppend Operation \line\tx360\tab\fs18\b0{\uldb Script Opcodes}{\v Server_ScriptOpcodes} \tx3000\tab{\uldb Error Codes}{\v Msi_Errors} \par}\li180 Continues publishing sources for a product. \par\li0\fi0{\b Parameters:}\par\li180 {\f1 Field 1: } PatchCode - optional. used if we're publishing to a patch source list\line {\f1 Field 2: } NumberOfMedia - how many disks we have in this record\line {\f1 Field 3..N} For each disk there should be an arg with the label and an arg with the media table prompt. Following  this, for each non-media source there should be an arg with the path to the source.\line \par\li0\fi0{\b Sequencing Restrictions}\par\li180 Must be called after the {\uldb ixoSourceListPublish}{\v Operation_ixoSourceListPublish} opcode, as this opcode will not remove  existing source registration. \par\li0\fi0{\b Progress Notifications}\par\li180 None.\line \par\li0\fi0{\b Error Messages and MessageBox Styles}\par\li180 !!To be documented!! \par\li0\fi0{\b Remarks}\par\li180 This opcode is a no-op when un-advertising, as ixoSourceListPublsh removes the entire sourcelist key. \page #{\footnote Operation_ixoSourceListUnpublish} ${\footnote ixoSourceListUnpublish Operation} +{\footnote Operation:ixoSourceListUnpublish} K{\footnote ixoSourceListUnpublish} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b ixoSourceListUnpublish Operation \line\tx360\tab\fs18\b0{\uldb Script Opcodes}{\v Server_ScriptOpcodes} \tx3000\tab{\uldb Error Codes}{\v Msi_Errors} \par}\li180 Unpublishes sources for a product.. \par\li0\fi0{\b Parameters:}\par\li180 {\f1 Field 1: } PatchCode - optional. used if we're unpublishing a patch source list\line \par\li0\fi0{\b Sequencing Restrictions}\par\li180 !!What operations must be executed before this one??!!  \par\li0\fi0{\b Progress Notifications}\par\li180 None.\line \par\li0\fi0{\b Error Messages and MessageBox Styles}\par\li180 !!To be documented!! \par\li0\fi0{\b Remarks}\par\li180 \page #{\footnote Operation_ixoProductUnregister} ${\footnote ixoProductUnregister Operation} +{\footnote Operation:ixoProductUnregister} K{\footnote ixoProductUnregister} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b ixoProductUnregister Operation \line\tx360\tab\fs18\b0{\uldb Script Opcodes}{\v Server_ScriptOpcodes} \tx3000\tab{\uldb Error Codes}{\v Msi_Errors} \par}\li180 Unregisters a product with the  {\uldb ConfigurationManager}{\v MsiConfigurationManager_Object}. \par\li0\fi0{\b Parameters:}\par\li180 \par\li0\fi0{\b Sequencing Restrictions}\par\li180 None. \par\li0\fi0{\b Progress Notifications}\par\li180 ActionData record with the following fields:\par\li360 {\f1 Field 1: } Product key (non-localized text?) \par\li0\fi0{\b Error Messages and MessageBox Styles}\par\li180 {\f1 imsgOpProdUnegister, MB_ABORTRETRYIGNORE } \par\li0\fi0{\b Remarks}\par\li180 \page #{\footnote Operation_ixoProductCPDisplayInfoRegister} ${\footnote ixoProductCPDisplayInfoRegister Operation} +{\footnote Operation:ixoProductCPDisplayInfoRegister} K{\footnote ixoProductCPDisplayInfoRegister} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b ixoProductCPDisplayInfoRegister Operation \line\tx360\tab\fs18\b0{\uldb Script Opcodes}{\v Server_ScriptOpcodes} \tx3000\tab{\uldb Error Codes}{\v Msi_Errors} \par}\li180 registers the product to be included in the add/remove control panel list of products. This operation is used only for parent installs. \par\li0\fi0{\b Parameters:}\par\li180 \par\li0\fi0{\b Sequencing Restrictions}\par\li180 None. \par\li0\fi0{\b Progress Notifications}\par\li180 ActionData record with the following fields:\par\li360 {\f1 Field 1: } Product key (non-localized text?) \par\li0\fi0{\b Error Messages and MessageBox Styles}\par\li180 {\f1 imsgOpProdUnegister, MB_ABORTRETRYIGNORE } \par\li0\fi0{\b Remarks}\par\li180 \page #{\footnote Operation_ixoProductCPDisplayInfoUnregister} ${\footnote ixoProductCPDisplayInfoUnregister Operation} +{\footnote Operation:ixoProductCPDisplayInfoUnregister} K{\footnote ixoProductCPDisplayInfoUnregister} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b ixoProductCPDisplayInfoUnregister Operation \line\tx360\tab\fs18\b0{\uldb Script Opcodes}{\v Server_ScriptOpcodes} \tx3000\tab{\uldb Error Codes}{\v Msi_Errors} \par}\li180 unregisters the product from the add/remove control panel list of products. This operation is used only for parent installs. \par\li0\fi0{\b Parameters:}\par\li180 \par\li0\fi0{\b Sequencing Restrictions}\par\li180 None. \par\li0\fi0{\b Progress Notifications}\par\li180 ActionData record with the following fields:\par\li360 {\f1 Field 1: } Product key (non-localized text?) \par\li0\fi0{\b Error Messages and MessageBox Styles}\par\li180 {\f1 imsgOpProdUnegister, MB_ABORTRETRYIGNORE } \par\li0\fi0{\b Remarks}\par\li180 \page #{\footnote Operation_ixoProductInfo} ${\footnote ixoProductInfo Operation} +{\footnote Operation:ixoProductInfo} K{\footnote ixoProductInfo} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b ixoProductInfo Operation \line\tx360\tab\fs18\b0{\uldb Script Opcodes}{\v Server_ScriptOpcodes} \tx3000\tab{\uldb Error Codes}{\v Msi_Errors} \par}\li180 Contains information about the product to which the script file is related. \par\li0\fi0{\b Parameters:}\par\li180 {\f1 Field 1: } Product key (non-localized string)\line {\f1 Field 2: } Product name (localized string)\line {\f1 Field 3: } Product's package filename.\line {\f1 Field 4: } Language (integer)\line {\f1 Field 5: } Version (integer)\line {\f1 Field 6: } Assignment (integer). 1 == machine, 0 == user\line {\f1 Field 7: } AdminAssigned (integer). always 0 -- used by the executor\line \par\li0\fi0{\b Sequencing Restrictions}\par\li180 This operation must immediately follow the  {\uldb ixoHeader}{\v Operation_ixoHeader} operation in the script file. \par\li0\fi0{\b Progress Notifications}\par\li180 None. \par\li0\fi0{\b Error Messages and MessageBox Styles}\par\li180 None. \par\li0\fi0{\b Remarks}\par\li180 The version given in field 5 should be generated in the following way from a X.X.X.X version:  The most significant 8 bits of the integer version should equal the integer value of the first field,  the next 8 bits should equal  the next field and the last 16 bits should equal the third field.  The fourth field, if it exists,  should be ignored. \page #{\footnote Operation_ixoUserRegister} ${\footnote ixoUserRegister Operation} +{\footnote Operation:ixoUserRegister} K{\footnote ixoUserRegister} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b ixoUserRegister Operation \line\tx360\tab\fs18\b0{\uldb Script Opcodes}{\v Server_ScriptOpcodes} \tx3000\tab{\uldb Error Codes}{\v Msi_Errors} \par}\li180 Registers a user with the  {\uldb ConfigurationManager}{\v MsiConfigurationManager_Object}. \par\li0\fi0{\b Parameters:}\par\li180 {\f1 Field 1: } Owner (localized string?)\line {\f1 Field 2: } Company (localized string?)\line {\f1 Field 3: } ProductId (non-localized string) \par\li0\fi0{\b Sequencing Restrictions}\par\li180 None. \par\li0\fi0{\b Progress Notifications}\par\li180 ActionData record with the following fields:\par\li360 {\f1 Field 1: } Product key (non-localized text?) \par\li0\fi0{\b Error Messages and MessageBox Styles}\par\li180 {\f1 imsgOpUserRegister, MB_ABORTRETRYIGNORE } \par\li0\fi0{\b Remarks}\par\li180 \page #{\footnote Operation_ixoComponentRegister} ${\footnote ixoComponentRegister Operation} +{\footnote Operation:ixoComponentRegister} K{\footnote ixoComponentRegister} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b ixoComponentRegister Operation \line\tx360\tab\fs18\b0{\uldb Script Opcodes}{\v Server_ScriptOpcodes} \tx3000\tab{\uldb Error Codes}{\v Msi_Errors} \par}\li180 Registers a component with the  {\uldb ConfigurationManager}{\v MsiConfigurationManager_Object}. \par\li0\fi0{\b Parameters:}\par\li180 {\f1 Field 1: } ComponentId - the GUID representing the component \line {\f1 Field 2: } KeyPath - the key file or folder representing the component\line {\f1 Field 3: } Component State - the components INSTALLSTATE\line {\f1 Field 4: } ProductKey - the client of this component; if Null then the product key set by ixoProductInfo is used\line {\f1 Field 5: } Disk - the disk number for the component if the component is installed run from source from a removable media\line {\f1 Field 6: } SharedDllRefCount - boolean flag that denotes whether the component's key file is refcounted in the Shared Dll registry.\line {\f1 Fields 7 to N:} Redirected ComponentIds - the IDs for components that should now be redirected to the one being registered\line \par\li0\fi0{\b Sequencing Restrictions}\par\li180 !!What operations must be executed before this one??!!  \par\li0\fi0{\b Progress Notifications}\par\li180 ActionData message with the following fields:\line {\f1 Field 1: } Product key (non-localized string)\line {\f1 Field 2: } ComponentId\line {\f1 Field 3: } KeyPath \line \par\li0\fi0{\b Error Messages and MessageBox Styles}\par\li180 !!To be documented!! \par\li0\fi0{\b Remarks}\par\li180 \page #{\footnote Operation_ixoComponentUnregister} ${\footnote ixoComponentUnregister Operation} +{\footnote Operation:ixoComponentUnregister} K{\footnote ixoComponentUnregister} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b ixoComponentUnregister Operation \line\tx360\tab\fs18\b0{\uldb Script Opcodes}{\v Server_ScriptOpcodes} \tx3000\tab{\uldb Error Codes}{\v Msi_Errors} \par}\li180 Unregisters a component with the  {\uldb ConfigurationManager}{\v MsiConfigurationManager_Object}. \par\li0\fi0{\b Parameters:}\par\li180 {\f1 Field 1: } ComponentId - the GUID representing the component \line {\f1 Field 2: } ProductKey - the client of this component; if Null then the product key set by ixoProductInfo is used\line \par\li0\fi0{\b Sequencing Restrictions}\par\li180 !!What operations must be executed before this one??!!  \par\li0\fi0{\b Progress Notifications}\par\li180 ActionData message with the following fields:\line {\f1 Field 1: } Product key (non-localized string)\line {\f1 Field 2: } ComponentId \line \par\li0\fi0{\b Error Messages and MessageBox Styles}\par\li180 !!To be documented!! \par\li0\fi0{\b Remarks}\par\li180 !!Additional notes!!  \page #{\footnote Operation_ixoProgressTotal} ${\footnote ixoProgressTotal Operation} +{\footnote Operation:ixoProgressTotal} K{\footnote ixoProgressTotal} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b ixoProgressTotal Operation \line\tx360\tab\fs18\b0{\uldb Script Opcodes}{\v Server_ScriptOpcodes} \tx3000\tab{\uldb Error Codes}{\v Msi_Errors} \par}\li180 This operation sets the total count for progress messages dispatched by subsequent  operations for the current action. \par\li0\fi0{\b Parameters:}\par\li180 {\f1 Field 1: } Total tick count (integer)\line {\f1 Field 2: } Progress type. One of two values:\line  {\f1 0:  } Separate progress and action data messages.\line  {\f1 1:  } Use ActionData messages as progress (i.e. increment the progress bar on each ActionData message).\line {\f1 Field 3: } Byte Equivalent.  For each action type, the approximate number of bytes the InstallFiles action  would copy in the time it takes for this action to perform one operation.  When using ActionData messages for  progress, the progress bar is incremented by the Byte Equivalent value each time an ActionData message is received.  Note: the Byte Equivalent value is related to the InstallFiles byte transfer rate so that the Installer can use  this relationship to approximate the anticipated total time required for the entire install. \par\li0\fi0{\b Sequencing Restrictions}\par\li180 Must be called after the {\uldb ixoActionStart}{\v Operation_ixoActionStart} operation  for the current action. \par\li0\fi0{\b Progress Notifications}\par\li180 None. \par\li0\fi0{\b Error Messages and MessageBox Styles}\par\li180 None. \par\li0\fi0{\b Remarks}\par\li180 \page #{\footnote Operation_ixoProgressTick} ${\footnote ixoProgressTick Operation} +{\footnote Operation:ixoProgressTick} K{\footnote ixoProgressTick} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b ixoProgressTick Operation \line\tx360\tab\fs18\b0{\uldb Script Opcodes}{\v Server_ScriptOpcodes} \tx3000\tab{\uldb Error Codes}{\v Msi_Errors} \par}\li180 This operation performs 1 progress message operation on behalf of the current action. \par\li0\fi0{\b Parameters:}\par\li180 \par\li0\fi0{\b Sequencing Restrictions}\par\li180 \par\li0\fi0{\b Progress Notifications}\par\li180 None. \par\li0\fi0{\b Error Messages and MessageBox Styles}\par\li180 None. \par\li0\fi0{\b Remarks}\par\li180 \page #{\footnote Operation_ixoSetSourceFolder} ${\footnote ixoSetSourceFolder Operation} +{\footnote Operation:ixoSetSourceFolder} K{\footnote ixoSetSourceFolder} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b ixoSetSourceFolder Operation \line\tx360\tab\fs18\b0{\uldb Script Opcodes}{\v Server_ScriptOpcodes} \tx3000\tab{\uldb Error Codes}{\v Msi_Errors} \par}\li180 This operation sets the source folder used by subsequent operations. The value set by  operation is valid until the next ixoSetSourceFolder or  {\uldb ixoActionStart}{\v Operation_ixoActionStart} operation. \par\li0\fi0{\b Parameters:}\par\li180 {\f1 Field 1: } Full path of folder (localized text)\line \par\li0\fi0{\b Sequencing Restrictions}\par\li180 Must be executed before any operations using the source folder since the last  {\uldb ixoActionStart}{\v Operation_ixoActionStart} operation. \par\li0\fi0{\b Progress Notifications}\par\li180 None. \par\li0\fi0{\b Error Messages and MessageBox Styles}\par\li180 !! what errors can be dispatched?? !! \par\li0\fi0{\b Remarks}\par\li180 \page #{\footnote Operation_ixoSetTargetFolder} ${\footnote ixoSetTargetFolder Operation} +{\footnote Operation:ixoSetTargetFolder} K{\footnote ixoSetTargetFolder} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b ixoSetTargetFolder Operation \line\tx360\tab\fs18\b0{\uldb Script Opcodes}{\v Server_ScriptOpcodes} \tx3000\tab{\uldb Error Codes}{\v Msi_Errors} \par}\li180 This operation sets the target folder used by subsequent operations. The value set by  operation is valid until the next ixoSetTargetFolder or  {\uldb ixoActionStart}{\v Operation_ixoActionStart} operation. \par\li0\fi0{\b Parameters:}\par\li180 {\f1 Field 1: } String or integer. If a string, the full path of the folder (localized text).  If an integer, the CSIDL_* value corresponding to a shell folder. These values are defined in  the shlobj.h file in the Win32 headers. (integer).\line \par\li0\fi0{\b Sequencing Restrictions}\par\li180 Must be executed before any operations using the target folder since the last  {\uldb ixoActionStart}{\v Operation_ixoActionStart} operation. \par\li0\fi0{\b Progress Notifications}\par\li180 None. \par\li0\fi0{\b Error Messages and MessageBox Styles}\par\li180 !! what errors can be dispatched?? !! \par\li0\fi0{\b Remarks}\par\li180 \page #{\footnote Operation_ixoChangeMedia} ${\footnote ixoChangeMedia Operation} +{\footnote Operation:ixoChangeMedia} K{\footnote ixoChangeMedia} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b ixoChangeMedia Operation \line\tx360\tab\fs18\b0{\uldb Script Opcodes}{\v Server_ScriptOpcodes} \tx3000\tab{\uldb Error Codes}{\v Msi_Errors} \par}\li180 Sets the media and cabinet files to use in subsequent  {\uldb ixoFileCopy}{\v Operation_ixoFileCopy} operations. \par\li0\fi0{\b Parameters:}\par\li180 {\f1 Field 1: } Media volume label.  This is the label associated with the volume (as returned by the GetVolumeInformation API),  and is used to ensure that the proper volume is in the drive.\line {\f1 Field 2: } Media prompt (localized text).  This field should represent the source disk name, as visible to the user  on the printed disk label. If the source volume is a removable drive (i.e. floppy or CD), and the  current disk's volume label does not match the value given in field 1, a dialog incorporating the string given in this field  will be displayed, prompting the user to enter the proper disk.\line {\f1 Field 3: } Media cabinet. If this cabinet is located in a stream of the module, this value is the stream name.  If the cabinet is a seperate file, this value is the full path to the file.\line {\f1 Field 4: } Bytes per tick of progress messages (integer)\line {\f1 Field 5: } Copier type. One of the following values:\line  {\f1 ictFileCopier          = 0 :} copy an uncompressed file.\line  {\f1 ictCabinetCopier       = 1 :} copy a compressed file from a cabinet.\line  {\f1 ictStreamCabinetCopier = 2 :} copy a compressed file from a cabinet stored as a stream within the install database.\line {\f1 Field 6: } Full path to the install database file containing cabinet file in a stream.  Not required if cabinet file isn't located in a stream, or if copying only uncompressed files. (non-localized text) \par\li0\fi0{\b Sequencing Restrictions}\par\li180 None. \par\li0\fi0{\b Progress Notifications}\par\li180 None. \par\li0\fi0{\b Error Messages and MessageBox Styles}\par\li180 See the description of field 2 (above). \par\li0\fi0{\b Remarks}\par\li180 \page #{\footnote Operation_ixoSetCompanionParent} ${\footnote ixoSetCompanionParent Operation} +{\footnote Operation:ixoCompanionParent} K{\footnote ixoSetCompanionParent} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b ixoSetCompanionParent Operation \line\tx360\tab\fs18\b0{\uldb Script Opcodes}{\v Server_ScriptOpcodes} \tx3000\tab{\uldb Error Codes}{\v Msi_Errors} \par}\li180 Signifies that the next ixoFileCopy operation involves a "companion" file,  i.e. a file whose installation status is dependent on the version and language  of a "parent" file.  The ixoSetCompanionParent operation specifies the full path,  version, and language of the parent.  Thus, when the subsequent ixoFileCopy  operation is executed, the path, version, and language of the parent file will  be checked to determine whether the companion file should be installed or not. \par\li0\fi0{\b Parameters:}\par\li180 {\f1 Field 1: } Parent Path: absolute path to the parent file.\line {\f1 Field 2: } Parent Name: filename of the parent file.\line {\f1 Field 3: } Parent Version: version string of the parent file, as found in the {\b Version} field of the {\uldb File}{\v _msi_File_Table@msi.hlp} table.\line {\f1 Field 4: } Parent language: language string of the parent file, as found in the {\b Language} field of the {\uldb File}{\v _msi_File_Table@msi.hlp} table.\line \par\li0\fi0{\b Sequencing Restrictions}\par\li180 None. \par\li0\fi0{\b Progress Notifications}\par\li180 None. \par\li0\fi0{\b Error Messages and MessageBox Styles}\par\li180 None. \page #{\footnote Operation_ixoInstallSFPCatalogFile} ${\footnote ixoInstallSFPCatalogFile Operation} +{\footnote Operation:ixoInstallSFPCatalogFile} K{\footnote ixoInstallSFPCatalogFile} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b ixoInstallSFPCatalogFile Operation \line\tx360\tab\fs18\b0{\uldb Script Opcodes}{\v Server_ScriptOpcodes} \tx3000\tab{\uldb Error Codes}{\v Msi_Errors} \par}\li180 Install a system file protection catalog file \par\li0\fi0{\b Parameters:}\par\li180 {\f1 Field 1: } Catalog file name. \line {\f1 Field 2: } Binary blob containing catalog.\line {\f1 Field 3: } Comma delimited list of catalogs this one depends on. \par\li0\fi0{\b Sequencing Restrictions}\par\li180 Must be executed before {\uldb ixoFileCopy}{\v Operation_ixoFileCopy}. \par\li0\fi0{\b Progress Notifications}\par\li180 ActionData record with the following fields:\par\li360 {\f1 Field 1: } Catalog file name \par\li0\fi0{\b Error Messages and MessageBox Styles}\par\li180 !!To be documented!! \par\li0\fi0{\b Remarks}\par\li180 If the catalog binary blob is empty, the specified catalog name will be deleted.  This is used for rollback, and future features for uninstalling catalogs. \page #{\footnote Operation_ixoFileCopy} ${\footnote ixoFileCopy Operation} +{\footnote Operation:ixoFileCopy} K{\footnote ixoFileCopy} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b ixoFileCopy Operation \line\tx360\tab\fs18\b0{\uldb Script Opcodes}{\v Server_ScriptOpcodes} \tx3000\tab{\uldb Error Codes}{\v Msi_Errors} \par}\li180 Copies a compressed file from a cabinet, or an uncompressed file from a source directory. \par\li0\fi0{\b Parameters:}\par\li180 {\f1 Field 1: } Source file identifier. Name of file located in the folder set by the  {\uldb ixoSetSourceFolder}{\v Operation_ixoSetSourceFolder} operation when copying  uncompressed files, or cabinet identifier when copying compressed files (localizable). \line {\f1 Field 2: } Destination file name. File will be copied to the folder set by the  {\uldb ixoSetTargetFolder}{\v Operation_ixoSetTargetFolder} operation (localizable). \line {\f1 Field 3: } Copy attributes (integer) - bit flags, defined as follows:\line   {\f1 0: iffReadOnly :} Set the ReadOnly bit in the destination file.\line   {\f1 1: iffHidden   :} Set the Hidden bit in the destination file.\line   {\f1 2: iffSystem   :} Set the System bit in the destination file.\line   {\f1 3: iffReserved :} must be zero.\line   {\f1 4: iffVital    :} Vital file.  If any error occurs at copy time (i.e. source file cannot    be located), the 'Ignore' button on the resulting dialog will be suppressed.\line {\f1 Field 4: } File size (integer)\line {\f1 Field 5: } Version string, as found in the {\b Version} field of the {\uldb File}{\v _msi_File_Table@msi.hlp} table.\line {\f1 Field 6: } Language string, as found in the {\b Language} field of the {\uldb File}{\v _msi_File_Table@msi.hlp} table.\line {\f1 Field 7: } Install mode (integer) - bit flags, defined as follows:\line   {\f1  0: icmRunFromSource              :} File should be run from source image (i.e. don't copy even if icmInstallEnabled bit is on) -\line    {\f1                                    } this bit allows the ixoFileCopy operation to log files that are RunFromSource, even though\line   {\f1                                    } it won't copy them.\line   {\f1  1: Reserved                      :} Must be zero.\line   {\f1  2: icmRemoveSource               :} delete the source file after copying (or simply move the file if possible).\line   {\f1  2-15: Reserved                   :} must be zero.\line   {\f1 16: icmInstallEnabled             :} Enables install/overwrite.  No file copy will occur if this bit is clear, regardless of\line   {\f1                                    } any other bit setting.\line   {\f1 17: icmOverwriteNone              :} Install only if no existing file is present (never overwrite).\line   {\f1 18: icmOverwriteOlderVersions     :} Overwrite older file versions.\line   {\f1 19: icmOverwriteEqualVersions     :} Overwrite equal file versions.\line   {\f1 20: icmOverwriteDifferingVersions :} Overwrite any file with a differing version.\line   {\f1 21: icmOverwriteCorruptedFiles    :} Overwrite corrupt files (i.e. checksum failure).\line   {\f1 22: icmOverwriteAllFiles          :} Overwrite all files, regardless of version.\line {\f1 Field 8: } Bytes per tick - the number of bytes to be copied between each progress message tick.\line {\f1 Field 9: } IsCompressed (Boolean): True if the file is compressed in a cabinet.\line {\f1 Field 10: } IMsiData object containing "self-relative" Win32 security descriptor.  Empty provides no security.\line {\f1 Field 11: } VerifyMedia: If true, and if the source file resides on removable media, verify that the source volume is present  before attempting the file copy.  If source volume is not present, a dialog will prompt the user to insert the appropriate disk.\line {\f1 Field 12: } Vital patches: count of patches for this file that are considered "vital."\line {\f1 Field 12: } Total patches: total count of patches for this file.\line {\f1 Field 13: } Patch headers: a variable number of patch headers, one for each patch to be applied to this file. These are retrieved from  the Header column of the Patch table, and used to test if a patch will be successful or not.\line \par\li0\fi0{\b Sequencing Restrictions}\par\li180 Must be executed after {\uldb ixoSetTargetFolder}{\v Operation_ixoSetTargetFolder}.  When copying uncompressed files, must be executed after  {\uldb ixoSetSourceFolder}{\v Operation_ixoSetSourceFolder}.  When copying compressed files, must be executed after  {\uldb ixoChangeMedia}{\v Operation_ixoChangeMedia}. \par\li0\fi0{\b Progress Notifications}\par\li180 ActionData record with the following fields:\par\li360 {\f1 Field 1: } Source file name\line  {\f1 Field 6: } File size\line {\f1 Field 9: } Target folder \par\li180 Progress message every time a number of bytes equal to the 8th parameter is copied.  The progress record contains the following fields:\par\li360 {\f1 Field 1: } Total number of units for progress. This value is set by the  {\uldb ixoProgressTotal}{\v Operation_ixoProgressTotal} operation.\line {\f1 Field 2: } Number of units (bytes) copied so far. This value is for all files copied  since the last {\uldb ixoActionStart}{\v Operation_ixoActionStart} operation. \par\li0\fi0{\b Error Messages and MessageBox Styles}\par\li180 An error message box will be presented if the source file cannot be located in the folder set by the last   {\uldb ixoSetSourceFolder}{\v Operation_ixoSetSourceFolder} operation, or if no disk is found in the  drive associated with the source volume (assuming removable media). \par\li0\fi0{\b Remarks}\par\li180 \page #{\footnote Operation_ixoFileRemove} ${\footnote ixoFileRemove Operation} +{\footnote Operation:ixoFileRemove} K{\footnote ixoFileRemove} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b ixoFileRemove Operation \line\tx360\tab\fs18\b0{\uldb Script Opcodes}{\v Server_ScriptOpcodes} \tx3000\tab{\uldb Error Codes}{\v Msi_Errors} \par}\li180 Remove a file. \par\li0\fi0{\b Parameters:}\par\li180 {\f1 Field 2: } File name. File is assumed to exist in the folder set by the  {\uldb ixoSetTargetFolder}{\v Operation_ixoSetTargetFolder} operation. (localized text?) \par\li0\fi0{\b Sequencing Restrictions}\par\li180 Must be executed after {\uldb ixoSetTargetFolder}{\v Operation_ixoSetTargetFolder}. \par\li0\fi0{\b Progress Notifications}\par\li180 ActionData record with the following fields:\par\li360 {\f1 Field 1: } File name\line {\f1 Field 9: } Folder \par\li0\fi0{\b Error Messages and MessageBox Styles}\par\li180 !!To be documented!! \par\li0\fi0{\b Remarks}\par\li180 If the removal of the file leaves the folder empty, and the folder is registered  with the Configuration Manager, the folder is deleted as well. \page #{\footnote Operation_ixoStreamsRemove} ${\footnote ixoStreamsRemove Operation} +{\footnote Operation:ixoStreamsRemove} K{\footnote ixoStreamsRemove} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b ixoStreamsRemove Operation \line\tx360\tab\fs18\b0{\uldb Script Opcodes}{\v Server_ScriptOpcodes} \tx3000\tab{\uldb Error Codes}{\v Msi_Errors} \par}\li180 \par\li0\fi0{\b Parameters:}\par\li180 {\f1 Field 1: } \line \par\li0\fi0{\b Sequencing Restrictions}\par\li180 \par\li0\fi0{\b Progress Notifications}\par\li180 ActionData record with the following fields:\par\li360 {\f1 Field 1: } \par\li0\fi0{\b Error Messages and MessageBox Styles}\par\li180 !!To be documented!! \par\li0\fi0{\b Remarks}\par\li180 \page #{\footnote Operation_ixoStreamAdd} ${\footnote ixoStreamAdd Operation} +{\footnote Operation:ixoStreamAdd} K{\footnote ixoStreamAdd} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b ixoStreamAdd Operation \line\tx360\tab\fs18\b0{\uldb Script Opcodes}{\v Server_ScriptOpcodes} \tx3000\tab{\uldb Error Codes}{\v Msi_Errors} \par}\li180 \par\li0\fi0{\b Parameters:}\par\li180 {\f1 Field 1: } Full path to the storage file\line {\f1 Field 2: } Stream name to create/replace\line {\f1 Field 3: } Stream data to place. \par\li0\fi0{\b Sequencing Restrictions}\par\li180 \par\li0\fi0{\b Progress Notifications}\par\li180 ActionData record with the following fields:\par\li360 {\f1 Field 1: } \par\li0\fi0{\b Error Messages and MessageBox Styles}\par\li180 !!To be documented!! \par\li0\fi0{\b Remarks}\par\li180 \page #{\footnote Operation_ixoDatabaseCopy} ${\footnote ixoDatabaseCopy Operation} +{\footnote Operation:ixoDatabaseCopy} K{\footnote ixoDatabaseCopy} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b ixoDatabaseCopy Operation \line\tx360\tab\fs18\b0{\uldb Script Opcodes}{\v Server_ScriptOpcodes} \tx3000\tab{\uldb Error Codes}{\v Msi_Errors} \par}\li180 Caches the product database in %WINDOWS%\MSI \par\li0\fi0{\b Parameters:}\par\li180 {\f1 Field 1: } Full path to the database\line {\f1 Field 2: } Product code\line {\f1 Field 3: } Cabinet streams. This is a semicolon-delimited list of streams  that should be dropped from the database when it is cached\line \par\li0\fi0{\b Sequencing Restrictions}\par\li180 \par\li0\fi0{\b Progress Notifications}\par\li180 ActionData record with the following fields:\par\li360 {\f1 Field 1: } \par\li0\fi0{\b Error Messages and MessageBox Styles}\par\li180 !!To be documented!! \par\li0\fi0{\b Remarks}\par\li180 \page #{\footnote Operation_ixoDatabasePatch} ${\footnote ixoDatabasePatch Operation} +{\footnote Operation:ixoDatabasePatch} K{\footnote ixoDatabasePatch} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b ixoDatabasePatch Operation \line\tx360\tab\fs18\b0{\uldb Script Opcodes}{\v Server_ScriptOpcodes} \tx3000\tab{\uldb Error Codes}{\v Msi_Errors} \par}\li180 Patchs the product database in %WINDOWS%\MSI \par\li0\fi0{\b Parameters:}\par\li180 {\f1 Field 1: } Full path to the database\line {\f1 Field 2-n: } Transform to be applied and persisted to database package. The transform is stored as binary data.  The transforms are applied in the order they are listed in the parameter list.\line \par\li0\fi0{\b Sequencing Restrictions}\par\li180 None. \par\li0\fi0{\b Progress Notifications}\par\li180 None. \par\li0\fi0{\b Error Messages and MessageBox Styles}\par\li180 !!To be documented!! \par\li0\fi0{\b Remarks}\par\li180 \page #{\footnote Operation_ixoFileUndoRebootReplace} ${\footnote ixoFileUndoRebootReplace Operation} +{\footnote Operation:ixoFileUndoRebootReplace} K{\footnote ixoFileUndoRebootReplace} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b ixoFileUndoRebootReplace Operation \line\tx360\tab\fs18\b0{\uldb Script Opcodes}{\v Server_ScriptOpcodes} \tx3000\tab{\uldb Error Codes}{\v Msi_Errors} \par}\li180 This operation "un-schedules" a file for deletion or rename on reboot. When a file is in use and an attempt  is made to delete or copy over that file, the operation is scheduled to occur on reboot. This operation is  written to the rollback script so that if the installation is rolled back before a reboot occurs, the operation  will not take place.  This operation should only exist in a rollback script. \par\li0\fi0{\b Parameters:}\par\li180 {\f1 Field 1: } Full path of file to be deleted or renamed.\line {\f1 Field 2: } Null if file is to be deleted, or full path of file to rename original file to.\line {\f1 Field 3: } Type of operation. 0 for Win9X, 1 for WinNT. On Win9X, reboot operation are written to %windows%\\wininit.ini.  On WinNT, they are written to the registry value HKLM\\SYSTEM\\Control\\CurrentControlSet\\Session Manager\\[PendingFileRenameOperations]. \par\li0\fi0{\b Sequencing Restrictions}\par\li180 None. \par\li0\fi0{\b Progress Notifications}\par\li180 None. \par\li0\fi0{\b Error Messages and MessageBox Styles}\par\li180 \par\li0\fi0{\b Remarks}\par\li180 \page #{\footnote Operation_ixoFolderCreate} ${\footnote ixoFolderCreate Operation} +{\footnote Operation:ixoFolderCreate} K{\footnote ixoFolderCreate} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b ixoFolderCreate Operation \line\tx360\tab\fs18\b0{\uldb Script Opcodes}{\v Server_ScriptOpcodes} \tx3000\tab{\uldb Error Codes}{\v Msi_Errors} \par}\li180 Creates a folder. If the folder does not already exist, it is registered with the  {\uldb ConfigurationManager}{\v MsiConfigurationManager_Object} using the  {\uldb RegisterFolder}{\v MsiConfigurationManager_RegisterFolder} method. \par\li0\fi0{\b Parameters:}\par\li180 {\f1 Field 1: } Folder. Full path of the folder to be created. (localized text)\line {\f1 Field 2: } Foreign. True if this is a foreign (i.e. explicitly authored) folder, false otherwise.\line {\f1 Field 3: } IMsiData object containing "self-relative" Win32 security descriptor.  Empty provides no security.  \par\li0\fi0{\b Sequencing Restrictions}\par\li180 None. \par\li0\fi0{\b Progress Notifications}\par\li180 ActionData record with the following fields:\par\li360 {\f1 Field 1: } Folder \line \par\li0\fi0{\b Error Messages and MessageBox Styles}\par\li180 !!To be documented!! \par\li0\fi0{\b Remarks}\par\li180 \page #{\footnote Operation_ixoFolderRemove} ${\footnote ixoFolderRemove Operation} +{\footnote Operation:ixoFolderRemove} K{\footnote ixoFolderRemove} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b ixoFolderRemove Operation \line\tx360\tab\fs18\b0{\uldb Script Opcodes}{\v Server_ScriptOpcodes} \tx3000\tab{\uldb Error Codes}{\v Msi_Errors} \par}\li180 Removes a folder if it is empty. If the folder is removed, it is unregistered with the  {\uldb ConfigurationManager}{\v MsiConfigurationManager_Object} using the  {\uldb UnregisterFolder}{\v MsiConfigurationManager_UnregisterFolder} method. \par\li0\fi0{\b Parameters:}\par\li180 {\f1 Field 1: } Folder. Full path of the folder to be created. (localized text)\line {\f1 Field 2: } Foreign. True if this is a foreign (i.e. explicitly authored) folder, false otherwise. \par\li0\fi0{\b Sequencing Restrictions}\par\li180 None. \par\li0\fi0{\b Progress Notifications}\par\li180 ActionData record with the following fields:\par\li360 {\f1 Field 1: } Folder \par\li0\fi0{\b Error Messages and MessageBox Styles}\par\li180 !! to be documented !! \par\li0\fi0{\b Remarks}\par\li180 \page #{\footnote Operation_ixoRegAllocateSpace} ${\footnote ixoRegAllocateSpace Operation} +{\footnote Operation:ixoRegAllocateSpace} K{\footnote ixoRegAllocateSpace} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b ixoRegAllocateSpace Operation \line\tx360\tab\fs18\b0{\uldb Script Opcodes}{\v Server_ScriptOpcodes} \tx3000\tab{\uldb Error Codes}{\v Msi_Errors} \par}\li180 This operation sets the free space available in the registry. \par\li0\fi0{\b Parameters:}\par\li180 {\f1 Field 1: } Space: (integer) the required free registry space in KB \par\li360 \par\li0\fi0{\b Sequencing Restrictions}\par\li180 None. \par\li0\fi0{\b Progress Notifications}\par\li180 None. \par\li0\fi0{\b Error Messages and MessageBox Styles}\par\li180 None. \par\li0\fi0{\b Remarks}\par\li180 This operation is a noop on Win9X. \page #{\footnote Operation_ixoRegOpenKey} ${\footnote ixoRegOpenKey Operation} +{\footnote Operation:ixoRegOpenKey} K{\footnote ixoRegOpenKey} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b ixoRegOpenKey Operation \line\tx360\tab\fs18\b0{\uldb Script Opcodes}{\v Server_ScriptOpcodes} \tx3000\tab{\uldb Error Codes}{\v Msi_Errors} \par}\li180 This operation sets the registry key to use in subsequent operations using registry  keys. \par\li0\fi0{\b Parameters:}\par\li180 {\f1 Field 1: } Root key: (integer)\par\li360 {\f1 0, rrkClassesRoot:  HKEY_CLASSES_ROOT}\line {\f1 1, rrkCurrentUser:  HKEY_CURRENT_USER}\line {\f1 2, rrkLocalMachine: HKEY_LOCAL_MACHINE}\line {\f1 3, rrkUsers:        HKEY_USERS}\par\li180 {\f1 Field 2: } Registry key (non-localized text?)\line {\f1 Field 3: } IMsiData object containing "self-relative" Win32 security descriptor.  Empty provides no security. \par\li0\fi0{\b Sequencing Restrictions}\par\li180 None. \par\li0\fi0{\b Progress Notifications}\par\li180 None. \par\li0\fi0{\b Error Messages and MessageBox Styles}\par\li180 None. \par\li0\fi0{\b Remarks}\par\li180 This operation only sets the value to use in future operations. It doesn't attempt  to open or read the specified registry key. \page #{\footnote Operation_ixoRegAddValue} ${\footnote ixoRegAddValue Operation} +{\footnote Operation:ixoRegAddValue} K{\footnote ixoRegAddValue} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b ixoRegAddValue Operation \line\tx360\tab\fs18\b0{\uldb Script Opcodes}{\v Server_ScriptOpcodes} \tx3000\tab{\uldb Error Codes}{\v Msi_Errors} \par}\li180 Write a value to the registry key opened with  {\uldb ixoRegOpenKey}{\v Operation_ixoRegOpenKey}. \par\li0\fi0{\b Parameters:}\par\li180 {\f1 Field 1: } Value name (non-localized text?)\line {\f1 Field 2: } Value data (localized text?)\line The value data is a string. The following registry types are supported - \line {\f1 REG_DWORD: } The string represents a decimal number and is prefixed by {\b # }. \line {\f1 REG_BINARY: } The string represents a binary sequence and is prefixed by {\b #x }. \line {\f1 REG_EXPAND_SZ: } The string represents an expandable string and is prefixed by {\b #% }. \line {\f1 REG__SZ: } The string represents the string to be written. If the string value begins with # then it is prefixed by another {\b # }. \line \par\li0\fi0{\b Sequencing Restrictions}\par\li180 Must be executed after {\uldb ixoRegOpenKey}{\v Operation_ixoRegOpenKey}. \par\li0\fi0{\b Progress Notifications}\par\li180 ActionData record with the following fields:\par\li360 {\f1 Field 1: } Registry key (non-localized text?)\line {\f1 Field 2: } Value name (non-localized text?)\line {\f1 Field 3: } Value data (localized text?) \par\li0\fi0{\b Error Messages and MessageBox Styles}\par\li180 {\f1 idbgOpOutOfSequence, MB_OK  } \par\li0\fi0{\b Remarks}\par\li180 \page #{\footnote Operation_ixoRegRemoveValue} ${\footnote ixoRegRemoveValue Operation} +{\footnote Operation:ixoRegRemoveValue} K{\footnote ixoRegRemoveValue} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b ixoRegRemoveValue Operation \line\tx360\tab\fs18\b0{\uldb Script Opcodes}{\v Server_ScriptOpcodes} \tx3000\tab{\uldb Error Codes}{\v Msi_Errors} \par}\li180 Deletes a value from the registry key opened with  {\uldb ixoRegOpenKey}{\v Operation_ixoRegOpenKey}. \par\li0\fi0{\b Parameters:}\par\li180 {\f1 Field 1: } Value name (non-localized text?)\line {\f1 Field 2: } Optional value data (localized text?)\line \par\li0\fi0{\b Sequencing Restrictions}\par\li180 Must be executed after {\uldb ixoRegOpenKey}{\v Operation_ixoRegOpenKey}. \par\li0\fi0{\b Progress Notifications}\par\li180 ActionData record with the following fields:\par\li360 {\f1 Field 1: } Registry key (non-localized text?)\line {\f1 Field 2: } Value name (non-localized text?) \par\li0\fi0{\b Error Messages and MessageBox Styles}\par\li180 \par\li0\fi0{\b Remarks}\par\li180 \page #{\footnote Operation_ixoRegRemoveKey} ${\footnote ixoRegRemoveKey Operation} +{\footnote Operation:ixoRegRemoveKey} K{\footnote ixoRegRemoveKey} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b ixoRegRemoveKey Operation \line\tx360\tab\fs18\b0{\uldb Script Opcodes}{\v Server_ScriptOpcodes} \tx3000\tab{\uldb Error Codes}{\v Msi_Errors} \par}\li180 Deletes an key and all its values/ subkeys from the registry. \par\li0\fi0{\b Parameters:}\par\li180 {\f1 Field 1: } Registry key (non-localized text?) \par\li0\fi0{\b Sequencing Restrictions}\par\li180 Must be executed after {\uldb ixoRegOpenKey}{\v Operation_ixoRegOpenKey}. \par\li0\fi0{\b Progress Notifications}\par\li180 ActionData record with the following fields:\par\li360 {\f1 Field 1: } Registry key (non-localized text?)\line \par\li0\fi0{\b Error Messages and MessageBox Styles}\par\li180 {\f1 idbgOpOutOfSequence, MB_OK  } \par\li0\fi0{\b Remarks}\par\li180 \page #{\footnote Operation_ixoRegCreateKey} ${\footnote ixoRegCreateKey Operation} +{\footnote Operation:ixoRegCreateKey} K{\footnote ixoRegCreateKey} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b ixoRegCreateKey Operation \line\tx360\tab\fs18\b0{\uldb Script Opcodes}{\v Server_ScriptOpcodes} \tx3000\tab{\uldb Error Codes}{\v Msi_Errors} \par}\li180 Creates a key, if absent. \par\li0\fi0{\b Parameters:}\par\li180 \par\li0\fi0{\b Sequencing Restrictions}\par\li180 Must be executed after {\uldb ixoRegOpenKey}{\v Operation_ixoRegOpenKey}. \par\li0\fi0{\b Progress Notifications}\par\li180 ActionData record with the following fields:\par\li360 {\f1 Field 1: } Registry key (non-localized text?)\line \par\li0\fi0{\b Error Messages and MessageBox Styles}\par\li180 {\f1 idbgOpOutOfSequence, MB_OK  } \par\li0\fi0{\b Remarks}\par\li180 \page #{\footnote Operation_ixoRegSelfReg} ${\footnote ixoRegSelfReg Operation} +{\footnote Operation:ixoRegSelfReg} K{\footnote ixoRegSelfReg} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b ixoRegSelfReg Operation \line\tx360\tab\fs18\b0{\uldb Script Opcodes}{\v Server_ScriptOpcodes} \tx3000\tab{\uldb Error Codes}{\v Msi_Errors} \par}\li180 Calls the self registration function of a module. \par\li0\fi0{\b Parameters:}\par\li180 {\f1 Field 1: } Module file name. File is assumed to exist in the folder set by the  {\uldb ixoSetTargetFolder}{\v Operation_ixoSetTargetFolder} operation. (localized text?)\line \par\li0\fi0{\b Sequencing Restrictions}\par\li180 Must be executed after {\uldb ixoSetTargetFolder}{\v Operation_ixoSetTargetFolder}. \par\li0\fi0{\b Progress Notifications}\par\li180 ActionData record with the following fields:\par\li360 {\f1 Field 1: } Module name (localized text?)\line {\f1 Field 2: } Folder containing module (localized text?) \par\li0\fi0{\b Error Messages and MessageBox Styles}\par\li180 {\f1 idbgOpOutOfSequence,  MB_OK  }\line {\f1 imsgSelfRegModulesFailed, MB_OK  } \par\li0\fi0{\b Remarks}\par\li180 \page #{\footnote Operation_ixoRegSelfUnreg} ${\footnote ixoRegSelfUnreg Operation} +{\footnote Operation:ixoRegSelfUnreg} K{\footnote ixoRegSelfUnreg} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b ixoRegSelfUnreg Operation \line\tx360\tab\fs18\b0{\uldb Script Opcodes}{\v Server_ScriptOpcodes} \tx3000\tab{\uldb Error Codes}{\v Msi_Errors} \par}\li180 Calls the self unregistration function of a module. \par\li0\fi0{\b Parameters:}\par\li180 {\f1 Field 1: } Module file name. File is assumed to exist in the folder set by the  {\uldb ixoSetTargetFolder}{\v Operation_ixoSetTargetFolder} operation. (localized text?)\line \par\li0\fi0{\b Sequencing Restrictions}\par\li180 Must be executed after {\uldb ixoSetTargetFolder}{\v Operation_ixoSetTargetFolder}. \par\li0\fi0{\b Progress Notifications}\par\li180 ActionData record with the following fields:\par\li360 {\f1 Field 1: } Module name (localized text?)\line {\f1 Field 2: } Folder containing module (localized text?) \par\li0\fi0{\b Error Messages and MessageBox Styles}\par\li180 {\f1 idbgOpOutOfSequence,  MB_OK  }\line {\f1 imsgSelfUnregModulesFailed, MB_OK  } \par\li0\fi0{\b Remarks}\par\li180 \page #{\footnote Operation_ixoIniWriteRemoveValue} ${\footnote ixoIniWriteRemoveValue Operation} +{\footnote Operation:ixoIniWriteRemoveValue} K{\footnote ixoIniWriteRemoveValue} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b ixoIniWriteRemoveValue Operation \line\tx360\tab\fs18\b0{\uldb Script Opcodes}{\v Server_ScriptOpcodes} \tx3000\tab{\uldb Error Codes}{\v Msi_Errors} \par}\li180 Writes or removes a value from a .INI file. \par\li0\fi0{\b Parameters:}\par\li180 {\f1 Field 1: } .INI section to modify (non-localized text)\line {\f1 Field 2: } .INI key to modify (non-localized text)\line {\f1 Field 3: } Value to write. This value is ignored when the Action  parameter is iifIniRemoveLine.\line {\f1 Field 4: } Action to take. One of the following values: \line{\f1  iifIniAddLine    =0 }- Creates/Updates .INI entry \line{\f1  iifIniCreateLine =1 }- Creates .INI entry only if absent \line{\f1  iifIniRemoveLine =2 }- Deletes .INI entry \line{\f1  iifIniAddTag     =3 }- Creates/ Appends a new comma separated tag(value) to a .INI entry \line{\f1  iifIniRemoveTag  =4 }- Deletes a tag from a .INI entry \par\li0\fi0{\b Sequencing Restrictions}\par\li180 Must be executed after the {\uldb ixoIniFilePath}{\v Operation_ixoIniFilePath}  operation. \par\li0\fi0{\b Progress Notifications}\par\li180 ActionData record with the following fields:\par\li360 {\f1 Field 1: } .INI file name\line {\f1 Field 2: } .INI section\line {\f1 Field 3: } .INI key\line {\f1 Field 4: } Value \par\li0\fi0{\b Error Messages and MessageBox Styles}\par\li180 !!To be documented!! \par\li0\fi0{\b Remarks}\par\li180 \page #{\footnote Operation_ixoIniFilePath} ${\footnote ixoIniFilePath Operation} +{\footnote Operation:ixoIniFilePath} K{\footnote ixoIniFilePath} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b ixoIniFilePath Operation \line\tx360\tab\fs18\b0{\uldb Script Opcodes}{\v Server_ScriptOpcodes} \tx3000\tab{\uldb Error Codes}{\v Msi_Errors} \par}\li180 Specifies the .INI file to modify in subsequent  {\uldb ixoIniWriteRemoveValue}{\v Operation_ixoIniWriteRemoveValue} operations. \par\li0\fi0{\b Parameters:}\par\li180 {\f1 Field 1: } .INI file name.\line {\f1 Field 2: } Folder containing .INI file.  This value may be left NULL to use the  Windows directory. \par\li0\fi0{\b Sequencing Restrictions}\par\li180 None. \par\li0\fi0{\b Progress Notifications}\par\li180 None. \par\li0\fi0{\b Error Messages and MessageBox Styles}\par\li180 !!To be documented!! \par\li0\fi0{\b Remarks}\par\li180 \page #{\footnote Operation_ixoPatchApply} ${\footnote ixoPatchApply Operation} +{\footnote Operation:ixoPatchApply} K{\footnote ixoPatchApply} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b ixoPatchApply Operation \line\tx360\tab\fs18\b0{\uldb Script Opcodes}{\v Server_ScriptOpcodes} \tx3000\tab{\uldb Error Codes}{\v Msi_Errors} \par}\li180 Applies a patch to an existing file. \par\li0\fi0{\b Parameters:}\par\li180 {\f1 Field 1: } Identifier for patch in the cabinet file set by  {\uldb ixoChangeMedia}{\v Operation_ixoChangeMedia}.\line {\f1 Field 2: } Name of target file to patch. Either a full path or the name of a file in the folder set by  {\uldb ixoSetTargetFolder}{\v Operation_ixoSetTargetFolder}.\line {\f1 Field 3: } Size of patch file.\line {\f1 Field 4: } Size of target file.\line {\f1 Field 5: } Bytes per tick of progress messages.\line {\f1 Field 6: } Boolean, always set to 1.\line \par\li0\fi0{\b Sequencing Restrictions}\par\li180 Must be after the {\uldb ixoFileCopy}{\v Operation_ixoFileCopy} operation for the target file. \par\li0\fi0{\b Progress Notifications}\par\li180 Same as {\uldb ixoFileCopy}{\v Operation_ixoFileCopy}. \par\li0\fi0{\b Error Messages and MessageBox Styles}\par\li180 \par\li0\fi0{\b Remarks}\par\li180 \page #{\footnote Operation_ixoPatchRegister} ${\footnote ixoPatchRegister Operation} +{\footnote Operation:ixoPatchRegister} K{\footnote ixoPatchRegister} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b ixoPatchRegister Operation \line\tx360\tab\fs18\b0{\uldb Script Opcodes}{\v Server_ScriptOpcodes} \tx3000\tab{\uldb Error Codes}{\v Msi_Errors} \par}\li180 Registers a patch package with a product.  This registration is used during subsequent configurations  of the product to find the patch package. \par\li0\fi0{\b Parameters:}\par\li180 {\f1 Field 1: } GUID representing this particular patch package.\line {\f1 Field 2: } Name of patch package.\line {\f1 Field 3: } Source list for patch package.  Same format as the SOURCELIST property.\line {\f1 Field 4: } List of transforms from the patch package that are actually used for this product.  Same format as the TRANSFORMS property.\line \par\li0\fi0{\b Sequencing Restrictions}\par\li180 None. \par\li0\fi0{\b Progress Notifications}\par\li180 None. \par\li0\fi0{\b Error Messages and MessageBox Styles}\par\li180 \par\li0\fi0{\b Remarks}\par\li180 \page #{\footnote Operation_ixoPatchUnregister} ${\footnote ixoPatchUnregister Operation} +{\footnote Operation:ixoPatchUnregister} K{\footnote ixoPatchUnregister} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b ixoPatchUnregister Operation \line\tx360\tab\fs18\b0{\uldb Script Opcodes}{\v Server_ScriptOpcodes} \tx3000\tab{\uldb Error Codes}{\v Msi_Errors} \par}\li180 Unregisters a patch package. \par\li0\fi0{\b Parameters:}\par\li180 {\f1 Field 1: } GUID representing this particular patch package.\line \par\li0\fi0{\b Sequencing Restrictions}\par\li180 None. \par\li0\fi0{\b Progress Notifications}\par\li180 None. \par\li0\fi0{\b Error Messages and MessageBox Styles}\par\li180 \par\li0\fi0{\b Remarks}\par\li180 \page #{\footnote Operation_ixoPatchCache} ${\footnote ixoPatchCache Operation} +{\footnote Operation:ixoPatchCache} K{\footnote ixoPatchCache} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b ixoPatchCache Operation \line\tx360\tab\fs18\b0{\uldb Script Opcodes}{\v Server_ScriptOpcodes} \tx3000\tab{\uldb Error Codes}{\v Msi_Errors} \par}\li180 Copies a patch package to the %windows%\installer directory for future use during maintenance mode installs  of the patched product. \par\li0\fi0{\b Parameters:}\par\li180 {\f1 Field 1: } GUID representing this particular patch package.\line {\f1 Field 2: } Path to the patch package to cache.\line \par\li0\fi0{\b Sequencing Restrictions}\par\li180 None. \par\li0\fi0{\b Progress Notifications}\par\li180 None. \par\li0\fi0{\b Error Messages and MessageBox Styles}\par\li180 \par\li0\fi0{\b Remarks}\par\li180 \page #{\footnote Operation_ixoDialogInfo} ${\footnote ixoDialogInfo Operation} +{\footnote Operation:ixoDialogInfo} K{\footnote ixoDialogInfo} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b ixoDialogInfo Operation \line\tx360\tab\fs18\b0{\uldb Script Opcodes}{\v Server_ScriptOpcodes} \tx3000\tab{\uldb Error Codes}{\v Msi_Errors} \par}\li180 This operation dispatches an {\uldb imtCommonData}{\v MsiMessage_Message}  message with the parameters passed to it. \par\li0\fi0{\b Parameters:}\par\li180 Parameters to dispatch in imtCommonData message \par\li0\fi0{\b Sequencing Restrictions}\par\li180 This operation should be executed before any operations sending messages to the UI. \par\li0\fi0{\b Progress Notifications}\par\li180 None. \par\li0\fi0{\b Error Messages and MessageBox Styles}\par\li180 None. \par\li0\fi0{\b Remarks}\par\li180 \page #{\footnote Operation_ixoRollbackInfo} ${\footnote ixoRollbackInfo Operation} +{\footnote Operation:ixoRollbackInfo} K{\footnote ixoRollbackInfo} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b ixoRollbackInfo Operation \line\tx360\tab\fs18\b0{\uldb Script Opcodes}{\v Server_ScriptOpcodes} \tx3000\tab{\uldb Error Codes}{\v Msi_Errors} \par}\li180 Passes rollback information to the script executor. \par\li0\fi0{\b Parameters:}\par\li180 {\f1 Field 1: } Reserved\line {\f1 Field 2: } Rollback action title. Passed in field 1 of ActionStart message  when performing rollback.\line {\f1 Field 3: } Rollback action description. Passed in field 2 of ActionStart message  when performing rollback.\line {\f1 Field 4: } Rollback action data template. Passed in field 3 of ActionStart message  when performing rollback.\line {\f1 Field 5: } Rollback cleanup action title. Passed in field 1 of ActionStart message  when removing backup files.\line {\f1 Field 6: } Rollback cleanup action description. Passed in field 2 of ActionStart message  when removing backup files.\line {\f1 Field 7: } Rollback cleanup action data template. Passed in field 3 of ActionStart message  when removing backup files.\line \par\li0\fi0{\b Sequencing Restrictions}\par\li180 None. \par\li0\fi0{\b Progress Notifications}\par\li180 None. \par\li0\fi0{\b Error Messages and MessageBox Styles}\par\li180 None. \par\li0\fi0{\b Remarks}\par\li180 \page #{\footnote Operation_ixoDisableRollback} ${\footnote ixoDisableRollback Operation} +{\footnote Operation:ixoDisableRollback} K{\footnote ixoDisableRollback} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b ixoDisableRollback Operation \line\tx360\tab\fs18\b0{\uldb Script Opcodes}{\v Server_ScriptOpcodes} \tx3000\tab{\uldb Error Codes}{\v Msi_Errors} \par}\li180 This operation disables rollback by stopping rollback processing for the script  and marking the current rollback script to not run. \par\li0\fi0{\b Parameters:}\par\li180 None. \par\li0\fi0{\b Sequencing Restrictions}\par\li180 None. \par\li0\fi0{\b Progress Notifications}\par\li180 None. \par\li0\fi0{\b Error Messages and MessageBox Styles}\par\li180 None. \par\li0\fi0{\b Remarks}\par\li180 \page #{\footnote Operation_ixoUpdateEstimatedSize} ${\footnote ixoUpdateEstimatedSize Operation} +{\footnote Operation:ixoUpdateEstimatedSize} K{\footnote ixoUpdateEstimatedSize} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b UpdateEstimatedSize Operation \line\tx360\tab\fs18\b0{\uldb Script Opcodes}{\v Server_ScriptOpcodes} \tx3000\tab{\uldb Error Codes}{\v Msi_Errors} \par}\li180 This operation updates the EstimatedSize value under the Product's Uninstall key.  This value  represents the estimate amount of disk space, in KB, that the application is currently  consuming on the user's system. \par\li0\fi0{\b Parameters:}\par\li180 None. \par\li0\fi0{\b Sequencing Restrictions}\par\li180 None. \par\li0\fi0{\b Progress Notifications}\par\li180 None. \par\li0\fi0{\b Error Messages and MessageBox Styles}\par\li180 None. \par\li0\fi0{\b Remarks}\par\li180 \page #{\footnote Operation_ixoInstallProtectedFiles} ${\footnote ixoInstallProtectedFiles Operation} +{\footnote Operation:ixoInstallProtectedFiles} K{\footnote ixoInstallProtectedFiles} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b InstallProtectedFiles Operation \line\tx360\tab\fs18\b0{\uldb Script Opcodes}{\v Server_ScriptOpcodes} \tx3000\tab{\uldb Error Codes}{\v Msi_Errors} \par}\li180 This operation scans the internal "file status" cache for any files that were scheduled for installation by InstallFiles, MoveFiles, etc.  yet couldn't be installed because they are on the Win2000 System File Protection list.  InstallProtectedFiles then calls  the Win2000 API SfcInstallProtectedFiles to actually install these files. \par\li0\fi0{\b Parameters:}\par\li180 None. \par\li0\fi0{\b Sequencing Restrictions}\par\li180 None. \par\li0\fi0{\b Progress Notifications}\par\li180 None. \par\li0\fi0{\b Error Messages and MessageBox Styles}\par\li180 None. \par\li0\fi0{\b Remarks}\par\li180 \page #{\footnote Operation_ixoRegAddRunOnceEntry} ${\footnote ixoRegAddRunOnceEntry Operation} +{\footnote Operation:ixoRegAddRunOnceEntry} K{\footnote ixoRegAddRunOnceEntry} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b ixoRegAddRunOnceEntry Operation \line\tx360\tab\fs18\b0{\uldb Script Opcodes}{\v Server_ScriptOpcodes} \tx3000\tab{\uldb Error Codes}{\v Msi_Errors} \par}\li180 This operation writes a command to the per-machine RunOnce registry key. \par\li0\fi0{\b Parameters:}\par\li180 {\f1 Field 1: } Name of the RunOnce value.\line {\f1 Field 1: } Command-line to be run at next logon.\line \par\li0\fi0{\b Sequencing Restrictions}\par\li180 None. \par\li0\fi0{\b Progress Notifications}\par\li180 None. \par\li0\fi0{\b Error Messages and MessageBox Styles}\par\li180 None. \par\li0\fi0{\b Remarks}\par\li180 \page #{\footnote Operation_ixoFontRegister} ${\footnote ixoFontRegister Operation} +{\footnote Operation:ixoFontRegister} K{\footnote ixoFontRegister} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b ixoFontRegister Operation \line\tx360\tab\fs18\b0{\uldb Script Opcodes}{\v Server_ScriptOpcodes} \tx3000\tab{\uldb Error Codes}{\v Msi_Errors} \par}\li180 Registers a font with the system. \par\li0\fi0{\b Parameters:}\par\li180 {\f1 Field 1: } Font title (localized text?)\line {\f1 Field 2: } Font file name. File is assumed to exist in the folder set by the  {\uldb ixoSetTargetFolder}{\v Operation_ixoSetTargetFolder} operation, or in the default  font folder if ixoSetTargetFolder has not been executed since the last  {\uldb ixoActionStart}{\v Operation_ixoActionStart} operation. (localized text?) \par\li0\fi0{\b Sequencing Restrictions}\par\li180 \par\li0\fi0{\b Progress Notifications}\par\li180 ActionData record with the following field:\par\li360 {\f1 Field 1: } Font title (localized text?) \par\li0\fi0{\b Error Messages and MessageBox Styles}\par\li180 {\f1 imsgOpRegFont, MB_OK  } \par\li0\fi0{\b Remarks}\par\li180 \page #{\footnote Operation_ixoFontUnregister} ${\footnote ixoFontUnregister Operation} +{\footnote Operation:ixoFontUnregister} K{\footnote ixoFontUnregister} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b ixoFontUnregister Operation \line\tx360\tab\fs18\b0{\uldb Script Opcodes}{\v Server_ScriptOpcodes} \tx3000\tab{\uldb Error Codes}{\v Msi_Errors} \par}\li180 Unregisters a font with the system. \par\li0\fi0{\b Parameters:}\par\li180 {\f1 Field 1: } Font title (localized text?)\line {\f1 Field 2: } Font file name. Not used by this operation. \par\li0\fi0{\b Sequencing Restrictions}\par\li180 None. \par\li0\fi0{\b Progress Notifications}\par\li180 ActionData record with the following fields:\par\li360 {\f1 Field 1: } Font title (localized text?) \par\li0\fi0{\b Error Messages and MessageBox Styles}\par\li180 {\f1 idbgOpOutOfSequence,  MB_OK  }\line {\f1 imsgOpUnregFont, MB_OK  } \par\li0\fi0{\b Remarks}\par\li180 \page #{\footnote Operation_ixoResourceUpdate} ${\footnote ixoResourceUpdate Operation} +{\footnote Operation:ixoResourceUpdate} K{\footnote ixoResourceUpdate} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b ixoResourceUpdate Operation \line\tx360\tab\fs18\b0{\uldb Script Opcodes}{\v Server_ScriptOpcodes} \tx3000\tab{\uldb Error Codes}{\v Msi_Errors} \par}\li180 Obsolete.  No longer supported. \page #{\footnote Operation_ixoFileBindImage} ${\footnote ixoFileBindImage Operation} +{\footnote Operation:ixoFileBindImage} K{\footnote ixoFileBindImage} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b ixoFileBindImage Operation \line\tx360\tab\fs18\b0{\uldb Script Opcodes}{\v Server_ScriptOpcodes} \tx3000\tab{\uldb Error Codes}{\v Msi_Errors} \par}\li180 Binds and executable image. \par\li0\fi0{\b Parameters:}\par\li180 {\f1 Field 1: } File name. File is assumed to exist in the folder set by the  {\uldb ixoSetTargetFolder}{\v Operation_ixoSetTargetFolder} operation. (localized text?)\line {\f1 Field 2: } Paths. A list of ; delimited paths that represent  the paths to be searched for the import DLLS. \par\li0\fi0{\b Sequencing Restrictions}\par\li180 Must be executed after {\uldb ixoSetTargetFolder}{\v Operation_ixoSetTargetFolder}. \par\li0\fi0{\b Progress Notifications}\par\li180 ActionData record with the following fields:\par\li360 {\f1 Field 1: } File name (localized text?)\line {\f1 Field 2: } Folder containing file (localized text?) \par\li0\fi0{\b Error Messages and MessageBox Styles}\par\li180 {\f1 idbgOpOutOfSequence,  MB_OK  }\line !! Others to be documented !! \par\li0\fi0{\b Remarks}\par\li180 \page #{\footnote Operation_ixoComponentConfigure} ${\footnote ixoComponentConfigure Operation} +{\footnote Operation:ixoComponentConfigure} K{\footnote ixoComponentConfigure} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b ixoComponentConfigure Operation \line\tx360\tab\fs18\b0{\uldb Script Opcodes}{\v Server_ScriptOpcodes} \tx3000\tab{\uldb Error Codes}{\v Msi_Errors} \par}\li180 {\b Not yet implemented. } \par\li0\fi0{\b Parameters:}\par\li180 !!To be documented!! \par\li0\fi0{\b Sequencing Restrictions}\par\li180 !!What operations must be executed before this one??!!  \par\li0\fi0{\b Progress Notifications}\par\li180 !!Are any ActionData or Progress messages sent? What is sent in the ActionData messages??!!  \par\li0\fi0{\b Error Messages and MessageBox Styles}\par\li180 !! to be documented !! \par\li0\fi0{\b Remarks}\par\li180 !!Additional notes!!  \page #{\footnote Operation_ixoSummaryInfoUpdate} ${\footnote ixoSummaryInfoUpdate Operation} +{\footnote Operation:ixoSummaryInfoUpdate} K{\footnote ixoSummaryInfoUpdate} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b ixoSummaryInfoUpdate Operation \line\tx360\tab\fs18\b0{\uldb Script Opcodes}{\v Server_ScriptOpcodes} \tx3000\tab{\uldb Error Codes}{\v Msi_Errors} \par}\li180 This operation updates the {\uldb Summary Information Stream}{\v _msi_Summary_Information_Stream@msi.hlp}  of the Msi package. This operation is normally used  during a network install. \par\li0\fi0{\b Parameters:}\par\li180 {\f1 Field 1: } Package. Full path to the .msi package.\line {\f1 Field 2: } Last update. This value is used to update the  {\uldb Last Saved Time/Date Summary Property}{\v _msi_Last_Saved_Time_Date_Summary_Property@msi.hlp}.  Not currently set.\line {\f1 Field 3: } Last author. UserName of user performing install. Used to update the  {\uldb Last Saved By Summary Property}{\v _msi_Last_Saved_By_Summary_Property@msi.hlp}.\line {\f1 Field 4: } Install date. The time the network image was created, usually the current date and time.  This is an integer in MsiDate format. This value is used to update the  {\uldb Last Printed Summary Property}{\v _msi_Last_Printed_Property@msi.hlp}.\line {\f1 Field 5: } Source type. Integer value specifying the source type of the image. Used to update the  {\uldb MSI Source Type Summary Property}{\v _msi_MSI_Source_Type_Summary_Property@msi.hlp}.\line \par\li0\fi0{\b Sequencing Restrictions}\par\li180 Must be executed after the Msi package has been copied to the network image. \par\li0\fi0{\b Progress Notifications}\par\li180 None. \par\li0\fi0{\b Error Messages and MessageBox Styles}\par\li180 !! to be documented !! \par\li0\fi0{\b Remarks}\par\li180 \page #{\footnote Operation_ixoReserved6} ${\footnote ixoReserved6 Operation} +{\footnote Operation:ixoReserved6} K{\footnote ixoReserved6} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b ixoReserved6 Operation \line\tx360\tab\fs18\b0{\uldb Script Opcodes}{\v Server_ScriptOpcodes} \tx3000\tab{\uldb Error Codes}{\v Msi_Errors} \par}\li180 Reserved for future use. \page #{\footnote Operation_ixoPackageCodePublish} ${\footnote ixoPackageCodePublish Operation} +{\footnote Operation:ixoPackageCodePublish} K{\footnote ixoPackageCodePublish} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b ixoPackageCodePublish Operation \line\tx360\tab\fs18\b0{\uldb Script Opcodes}{\v Server_ScriptOpcodes} \tx3000\tab{\uldb Error Codes}{\v Msi_Errors} \par}\li180 Publishes the package code. Used by patching/upgrades to republish the package code  when the package changes. \par\li0\fi0{\b Parameters:}\par\li180 This operation takes 1 argument.\line {\f1 Field 1: } Package key. The package GUID.\line ...\line ...\line \par\li0\fi0{\b Sequencing Restrictions}\par\li180 Must be executed after {\uldb ixoProductInfo}{\v Operation_ixoProductInfo}. \par\li0\fi0{\b Progress Notifications}\par\li180 ActionData record with the following fields:\par\li360 {\f1 Field 1: } Product key\line \par\li0\fi0{\b Error Messages and MessageBox Styles}\par\li180 \par\li0\fi0{\b Remarks}\par\li180 \page #{\footnote Operation_ixoProductPublishUpdate} ${\footnote ixoProductPublishUpdate Operation} +{\footnote Operation:ixoProductPublishUpdate} K{\footnote ixoProductPublishUpdate} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b ixoProductPublishUpdate Operation \line\tx360\tab\fs18\b0{\uldb Script Opcodes}{\v Server_ScriptOpcodes} \tx3000\tab{\uldb Error Codes}{\v Msi_Errors} \par}\li180 Re-publishes the product name and version.  Used during QFE-style patches and upgrades. \par\li0\fi0{\b Parameters:}\par\li180 This operation takes 1 argument.\line None. \par\li0\fi0{\b Sequencing Restrictions}\par\li180 Must be executed after {\uldb ixoProductInfo}{\v Operation_ixoProductInfo}. \par\li0\fi0{\b Progress Notifications}\par\li180 None. \par\li0\fi0{\b Error Messages and MessageBox Styles}\par\li180 \par\li0\fi0{\b Remarks}\par\li180 \page #{\footnote Operation_ixoUpgradeCodePublish} ${\footnote ixoUpgradeCodePublish Operation} +{\footnote Operation:ixoUpgradeCodePublish} K{\footnote ixoUpgradeCodePublish} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b ixoUpgradeCodePublish Operation \line\tx360\tab\fs18\b0{\uldb Script Opcodes}{\v Server_ScriptOpcodes} \tx3000\tab{\uldb Error Codes}{\v Msi_Errors} \par}\li180 Publishes the product code under the appropriate Upgrade Code key. \par\li0\fi0{\b Parameters:}\par\li180 This operation takes 1 argument.\line {\f1 Field 1: } Upgrade code. The upgrade code GUID.\line ...\line ...\line \par\li0\fi0{\b Sequencing Restrictions}\par\li180 Must be executed after {\uldb ixoProductInfo}{\v Operation_ixoProductInfo}. \par\li0\fi0{\b Progress Notifications}\par\li180 None. \par\li0\fi0{\b Error Messages and MessageBox Styles}\par\li180 \par\li0\fi0{\b Remarks}\par\li180 \page #{\footnote Operation_ixoUpgradeCodeUnpublish} ${\footnote ixoUpgradeCodeUnpublish Operation} +{\footnote Operation:ixoUpgradeCodeUnpublish} K{\footnote ixoUpgradeCodeUnpublish} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b ixoUpgradeCodeUnpublish Operation \line\tx360\tab\fs18\b0{\uldb Script Opcodes}{\v Server_ScriptOpcodes} \tx3000\tab{\uldb Error Codes}{\v Msi_Errors} \par}\li180 Unpublishes the product code under the appropriate Upgrade Code key. \par\li0\fi0{\b Parameters:}\par\li180 This operation takes 1 argument.\line {\f1 Field 1: } Upgrade code. The upgrade code GUID.\line ...\line ...\line \par\li0\fi0{\b Sequencing Restrictions}\par\li180 Must be executed after {\uldb ixoProductInfo}{\v Operation_ixoProductInfo}. \par\li0\fi0{\b Progress Notifications}\par\li180 None. \par\li0\fi0{\b Error Messages and MessageBox Styles}\par\li180 \par\li0\fi0{\b Remarks}\par\li180 \page #{\footnote Operation_ixoProductPublish} ${\footnote ixoProductPublish Operation} +{\footnote Operation:ixoProductPublish} K{\footnote ixoProductPublish} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b ixoProductPublish Operation \line\tx360\tab\fs18\b0{\uldb Script Opcodes}{\v Server_ScriptOpcodes} \tx3000\tab{\uldb Error Codes}{\v Msi_Errors} \par}\li180 Publishes the product information with the configuration manager. \par\li0\fi0{\b Parameters:}\par\li180 This operation takes 1 or more variable number of arguments.\line {\f1 Field 1: } Package key. The package GUID.\line {\f1 Field 2: } Transform name 1. The transform name.\line {\f1 Field 3: } Transform data 1. The transform stream.\line {\f1 Field 4: } Transform name 2. The transform name.\line {\f1 Field 5: } Transform data 2. The transform stream.\line ...\line ...\line \par\li0\fi0{\b Sequencing Restrictions}\par\li180 Must be executed after {\uldb ixoProductInfo}{\v Operation_ixoProductInfo}. \par\li0\fi0{\b Progress Notifications}\par\li180 ActionData record with the following fields:\par\li360 {\f1 Field 1: } Product key\line \par\li0\fi0{\b Error Messages and MessageBox Styles}\par\li180 \par\li0\fi0{\b Remarks}\par\li180 The transforms are cached in the %USERPROFILE%\MSI folder. \page #{\footnote Operation_ixoProductUnpublish} ${\footnote ixoProductUnpublish Operation} +{\footnote Operation:ixoProductUnpublish} K{\footnote ixoProductUnpublish} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b ixoProductUnpublish Operation \line\tx360\tab\fs18\b0{\uldb Script Opcodes}{\v Server_ScriptOpcodes} \tx3000\tab{\uldb Error Codes}{\v Msi_Errors} \par}\li180 Removes the published product information from the configuration manager. \par\li0\fi0{\b Parameters:}\par\li180 This operation takes 1 or more variable number of arguments.\line {\f1 Field 1: } Package key. The package GUID.\line {\f1 Field 2: } Transform name 1. The transform name.\line {\f1 Field 3: } Transform data 1. The transform stream.\line {\f1 Field 4: } Transform name 2. The transform name.\line {\f1 Field 5: } Transform data 2. The transform stream.\line ...\line ...\line \par\li0\fi0{\b Sequencing Restrictions}\par\li180 Must be executed after {\uldb ixoProductInfo}{\v Operation_ixoProductInfo}. \par\li0\fi0{\b Progress Notifications}\par\li180 ActionData record with the following fields:\par\li360 {\f1 Field 1: } Product key\line \par\li0\fi0{\b Error Messages and MessageBox Styles}\par\li180 \par\li0\fi0{\b Remarks}\par\li180 The transforms cached in the %USERPROFILE%\MSI folder are removed. \page #{\footnote Operation_ixoProductPublishClient} ${\footnote ixoProductPublishClient Operation} +{\footnote Operation:ixoProductPublishClient} K{\footnote ixoProductPublishClient} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b ixoProductPublishClient Operation \line\tx360\tab\fs18\b0{\uldb Script Opcodes}{\v Server_ScriptOpcodes} \tx3000\tab{\uldb Error Codes}{\v Msi_Errors} \par}\li180 registers the client for the product. \par\li0\fi0{\b Parameters:}\par\li180 {\f1 Field 1: } Parent product key.\line {\f1 Field 2: } Relative child package path.\line {\f1 Field 3: } The child disk id.\line \par\li0\fi0{\b Sequencing Restrictions}\par\li180 Must be executed after {\uldb ixoProductInfo}{\v Operation_ixoProductInfo}. \par\li0\fi0{\b Progress Notifications}\par\li180 ActionData record with the following fields:\par\li360 {\f1 Field 1: } Product key\line \par\li0\fi0{\b Error Messages and MessageBox Styles}\par\li180 \par\li0\fi0{\b Remarks}\par\li180 \page #{\footnote Operation_ixoProductUnpublishClient} ${\footnote ixoProductUnpublishClient Operation} +{\footnote Operation:ixoProductUnpublishclient} K{\footnote ixoProductUnpublishClient} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b ixoProductUnpublishClient Operation \line\tx360\tab\fs18\b0{\uldb Script Opcodes}{\v Server_ScriptOpcodes} \tx3000\tab{\uldb Error Codes}{\v Msi_Errors} \par}\li180 unregisters the client for the product.. \par\li0\fi0{\b Parameters:}\par\li180 {\f1 Field 1: } Parent product key.\line {\f1 Field 2: } Relative child package path.\line {\f1 Field 3: } The child disk id.\line \par\li0\fi0{\b Sequencing Restrictions}\par\li180 Must be executed after {\uldb ixoProductInfo}{\v Operation_ixoProductInfo}. \par\li0\fi0{\b Progress Notifications}\par\li180 ActionData record with the following fields:\par\li360 {\f1 Field 1: } Product key\line \par\li0\fi0{\b Error Messages and MessageBox Styles}\par\li180 \par\li0\fi0{\b Remarks}\par\li180 \page #{\footnote Operation_ixoAdvtFlagsUpdate} ${\footnote ixoAdvtFlagsUpdate Operation} +{\footnote Operation:ixoAdvtFlagsUpdate} K{\footnote ixoAdvtFlagsUpdate} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b ixoAdvtFlagsUpdate Operation \line\tx360\tab\fs18\b0{\uldb Script Opcodes}{\v Server_ScriptOpcodes} \tx3000\tab{\uldb Error Codes}{\v Msi_Errors} \par}\li180 Publishes the Advertisement flags for the product under the appropriate Product Code key. \par\li0\fi0{\b Parameters:}\par\li180 This operation takes 1 argument.\line {\f1 Field 1: } Flags. The advertisement flags - records whether the OLE data, Qualified Components data and the Shortcuts have been created.\line ...\line ...\line \par\li0\fi0{\b Sequencing Restrictions}\par\li180 Must be executed after {\uldb ixoProductInfo}{\v Operation_ixoProductInfo}. \par\li0\fi0{\b Progress Notifications}\par\li180 None. \par\li0\fi0{\b Error Messages and MessageBox Styles}\par\li180 \par\li0\fi0{\b Remarks}\par\li180 \page #{\footnote Operation_ixoFeaturePublish} ${\footnote ixoFeaturePublish Operation} +{\footnote Operation:ixoFeaturePublish} K{\footnote ixoFeaturePublish} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b ixoFeaturePublish Operation \line\tx360\tab\fs18\b0{\uldb Script Opcodes}{\v Server_ScriptOpcodes} \tx3000\tab{\uldb Error Codes}{\v Msi_Errors} \par}\li180 Publishes the Feature composition (the constituent components) with the configuration manager. \par\li0\fi0{\b Parameters:}\par\li180 {\f1 Field 1: } FeatureID. The feature key.\line { \f1 Field 2: } FeatureID (parent). Optional parent of the feature.\line { \f1 Field 3: } Absent. Set to 1 if the feature, being published, has been set to the Absent state.\line {\f1 Field 4: } ComponenID. The component ID of the first component of the feature.\line {\f1 Field 5: } ComponenID. The component ID of the second component of the feature.\line ...\line ...\line ...\line NOTE: This is a variable length record operation, the size depending on the number of components  of the feature.\line \par\li0\fi0{\b Sequencing Restrictions}\par\li180 Must be executed after {\uldb ixoProductInfo}{\v Operation_ixoProductInfo}. \par\li0\fi0{\b Progress Notifications}\par\li180 ActionData record with the following fields:\par\li360 {\f1 Field 1: } Product key\line {\f1 Field 2: } Feature key\line \par\li0\fi0{\b Error Messages and MessageBox Styles}\par\li180 \par\li0\fi0{\b Remarks}\par\li180 For features that are selected to be absent, the component list begins with the special character  '~' as Field 3. This is a Beta1 implementation that is up for revision in Beta2. \page #{\footnote Operation_ixoFeatureUnpublish} ${\footnote ixoFeatureUnpublish Operation} +{\footnote Operation:ixoFeatureUnpublish} K{\footnote ixoFeatureUnpublish} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b ixoFeatureUnpublish Operation \line\tx360\tab\fs18\b0{\uldb Script Opcodes}{\v Server_ScriptOpcodes} \tx3000\tab{\uldb Error Codes}{\v Msi_Errors} \par}\li180 Removes the published Feature composition (the constituent components) from the configuration manager. \par\li0\fi0{\b Parameters:}\par\li180 {\f1 Field 1: } FeatureID. The feature key.\line { \f1 Field 2: } FeatureID (parent). Optional parent of the feature.\line { \f1 Field 3: } Absent. Set to 1 if the feature, being published, has been set to the Absent state.\line {\f1 Field 4: } ComponenID. The component ID of the first component of the feature.\line {\f1 Field 5: } ComponenID. The component ID of the second component of the feature.\line ...\line ...\line ...\line NOTE: This is a variable length record operation, the size depending on the number of components  of the feature.\line \par\li0\fi0{\b Sequencing Restrictions}\par\li180 Must be executed after {\uldb ixoProductInfo}{\v Operation_ixoProductInfo}. \par\li0\fi0{\b Progress Notifications}\par\li180 ActionData record with the following fields:\par\li360 {\f1 Field 1: } Product key\line {\f1 Field 2: } Feature key\line \par\li0\fi0{\b Error Messages and MessageBox Styles}\par\li180 \par\li0\fi0{\b Remarks}\par\li180 \page #{\footnote Operation_ixoComponentPublish} ${\footnote ixoComponentPublish Operation} +{\footnote Operation:ixoComponentPublish} K{\footnote ixoComponentPublish} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b ixoComponentPublish Operation \line\tx360\tab\fs18\b0{\uldb Script Opcodes}{\v Server_ScriptOpcodes} \tx3000\tab{\uldb Error Codes}{\v Msi_Errors} \par}\li180 Publishes the component factory information (the darwin descriptor that provides the component) with the configuration manager.  This is typically used for cross-product component usage. \par\li0\fi0{\b Parameters:}\par\li180 {\f1 Field 1: } Feature. The feature to which the component to be published belongs to.\line {\f1 Field 2: } Component. The component id (from the Component Table) of the component.\line {\f1 Field 3: } ComponentId. The component id GUID (from the PublishComponent Table) under which the component is published.\line {\f1 Field 4: } Qualifier. Optional. The Qualifier string that further defines the component (in addition to  the ComponentId).\line {\f1 Field 5: } AppData. Additional localizable data to be associated with the component.\line \par\li0\fi0{\b Sequencing Restrictions}\par\li180 Must be executed after {\uldb ixoProductInfo}{\v Operation_ixoProductInfo}. \par\li0\fi0{\b Progress Notifications}\par\li180 ActionData record with the following fields:\par\li360 {\f1 Field 1: } Product key\line {\f1 Field 2: } Component ID\line \par\li0\fi0{\b Error Messages and MessageBox Styles}\par\li180 \par\li0\fi0{\b Remarks}\par\li180 \page #{\footnote Operation_ixoComponentUnpublish} ${\footnote ixoComponentUnpublish Operation} +{\footnote Operation:ixoComponentUnpublish} K{\footnote ixoComponentUnpublish} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b ixoComponentUnpublish Operation \line\tx360\tab\fs18\b0{\uldb Script Opcodes}{\v Server_ScriptOpcodes} \tx3000\tab{\uldb Error Codes}{\v Msi_Errors} \par}\li180 Removes the published component information from the configuration manager. \par\li0\fi0{\b Parameters:}\par\li180 {\f1 Field 1: } Feature. The feature to which the component to be published belongs to.\line {\f1 Field 2: } Component. The component id (from the Component Table) of the component.\line {\f1 Field 3: } ComponentId. The component id GUID (from the PublishComponent Table) under which the component is published.\line {\f1 Field 4: } Qualifier. Optional. The Qualifier string that further defines the component (in addition to  the ComponentId).\line {\f1 Field 5: } AppData. Additional localizable data to be associated with the component.\line \par\li0\fi0{\b Sequencing Restrictions}\par\li180 Must be executed after {\uldb ixoProductInfo}{\v Operation_ixoProductInfo}. \par\li0\fi0{\b Progress Notifications}\par\li180 ActionData record with the following fields:\par\li360 {\f1 Field 1: } Product key\line {\f1 Field 2: } Component ID\line \par\li0\fi0{\b Error Messages and MessageBox Styles}\par\li180 \par\li0\fi0{\b Remarks}\par\li180 \page #{\footnote Operation_ixoIconCreate} ${\footnote ixoIconCreate Operation} +{\footnote Operation:ixoIconCreate} K{\footnote ixoIconCreate} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b ixoIconCreate Operation \line\tx360\tab\fs18\b0{\uldb Script Opcodes}{\v Server_ScriptOpcodes} \tx3000\tab{\uldb Error Codes}{\v Msi_Errors} \par}\li180 Creates an icon file on the system to be used for advertised extensions and shortcuts. The default location of  the icon is <CSIDL_APPDATA Shell Folder>\\Microsoft\\Installer for user assigned apps on Win NT and <Windows Directory>\\Installer on Win95 or for  machine assigned apps on Win NT. This may however be overridden by the MsiProcessAdvertiseScript API. \par\li0\fi0{\b Parameters:}\par\li180 {\f1 Field 1: } Icon Name. The name of the icon file to be created including the extension.\line {\f1 Field 2: } Icon Data. The stream for the data for the icon file.\line \par\li0\fi0{\b Sequencing Restrictions}\par\li180 \par\li0\fi0{\b Progress Notifications}\par\li180 ActionData record with the following fields:\par\li360 {\f1 Field 1: } Icon name\line \par\li0\fi0{\b Error Messages and MessageBox Styles}\par\li180 \par\li0\fi0{\b Remarks}\par\li180 \page #{\footnote Operation_ixoIconRemove} ${\footnote ixoIconCreate Operation} +{\footnote Operation:ixoIconRemove} K{\footnote ixoIconRemove} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b ixoIconRemove Operation \line\tx360\tab\fs18\b0{\uldb Script Opcodes}{\v Server_ScriptOpcodes} \tx3000\tab{\uldb Error Codes}{\v Msi_Errors} \par}\li180 Removes an icon file on the system that was used for advertised extensions and shortcuts. The default location of  the icon is <CSIDL_APPDATA Shell Folder>\\Microsoft\\Installer for user assigned apps on Win NT and <Windows Directory>\\Installer on Win95 or for  machine assigned apps on Win NT. This may however be overridden by the MsiProcessAdvertiseScript API. \par\li0\fi0{\b Parameters:}\par\li180 {\f1 Field 1: } Icon Name. The name of the icon file created including the extension.\line {\f1 Field 2: } Icon Data. The stream for the data for the icon file. This field is unused.\line \par\li0\fi0{\b Sequencing Restrictions}\par\li180 \par\li0\fi0{\b Progress Notifications}\par\li180 ActionData record with the following fields:\par\li360 {\f1 Field 1: } Icon name\line \par\li0\fi0{\b Error Messages and MessageBox Styles}\par\li180 \par\li0\fi0{\b Remarks}\par\li180 \page #{\footnote Operation_ixoShortcutCreate} ${\footnote ixoShortcutCreate Operation} +{\footnote Operation:ixoShortcutCreate} K{\footnote ixoShortcutCreate} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b ixoShortcutCreate Operation \line\tx360\tab\fs18\b0{\uldb Script Opcodes}{\v Server_ScriptOpcodes} \tx3000\tab{\uldb Error Codes}{\v Msi_Errors} \par}\li180 Creates a shortcut. \par\li0\fi0{\b Parameters:}\par\li180 {\f1 Field 1: } Name. The shortcut name. \line {\f1 Field 2: } Feature. The feature to which the shortcut belongs to. Is null for non-advertisable shortcuts. \line {\f1 Field 3: } Component. The component id (from the Component Table) of the component whose key file is the shortcut target.  Is null for non-advertisable shortcuts. \line {\f1 Field 4: } FileName. The (key) file of the component for advertisable shortcuts. The target for non-advertisable shortcuts. \line {\f1 Field 5: } Arguments. The shortcut arguments. \line {\f1 Field 6: } WorkingDir. The working directory. \line {\f1 Field 7: } Icon. Icon file. For non-advertised shortcuts this is optionally a full file path. For  advertised shortcuts this has to be the name of the file created using the  {\uldb ixoIconCreate}{\v Operation_ixoIconCreate} operation.\line {\f1 Field 8: } IconIndex. The icon index (integer)\line {\f1 Field 9: } Hotkey. See help on Shortcut table for more details.\line {\f1 Field 10: } Show command. See help on Shortcut table for more details\line \par\li0\fi0{\b Sequencing Restrictions}\par\li180 Must be exectued after {\uldb ixoSetTargetFolder}{\v Operation_ixoSetTargetFolder} operation.  In the advertise mode must be executed after the {\uldb ixoIconCreate}{\v Operation_ixoIconCreate}  operation. \par\li0\fi0{\b Progress Notifications}\par\li180 ActionData record with the following fields:\par\li360 {\f1 Field 1: } Shortcut name\line \par\li0\fi0{\b Error Messages and MessageBox Styles}\par\li180 {\f1 imsgOpShortcutCreate, MB_OK  } \par\li0\fi0{\b Remarks}\par\li180 \page #{\footnote Operation_ixoShortcutRemove} ${\footnote ixoShortcutRemove Operation} +{\footnote Operation:ixoShortcutRemove} K{\footnote ixoShortcutRemove} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b ixoShortcutRemove Operation \line\tx360\tab\fs18\b0{\uldb Script Opcodes}{\v Server_ScriptOpcodes} \tx3000\tab{\uldb Error Codes}{\v Msi_Errors} \par}\li180 Removes a shortcut \par\li0\fi0{\b Parameters:}\par\li180 {\f1 Field 1: } Shortcut name\line \par\li0\fi0{\b Sequencing Restrictions}\par\li180 Must be exectued after the {\uldb ixoSetTargetFolder}{\v Operation_ixoSetTargetFolder}  operation. \par\li0\fi0{\b Progress Notifications}\par\li180 ActionData record with the following fields:\par\li360 {\f1 Field 1: } Shortcut name\line \par\li0\fi0{\b Error Messages and MessageBox Styles}\par\li180 {\f1 imsgOpShortcutRemove, MB_OK  } \par\li0\fi0{\b Remarks}\par\li180 \page #{\footnote Operation_ixoRegAppIdInfoRegister} ${\footnote ixoRegAppIdInfoRegister Operation} +{\footnote Operation:ixoRegAppIdInfoRegister} K{\footnote ixoRegAppIdInfoRegister} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b ixoRegAppIdInfoRegister Operation \line\tx360\tab\fs18\b0{\uldb Script Opcodes}{\v Server_ScriptOpcodes} \tx3000\tab{\uldb Error Codes}{\v Msi_Errors} \par}\li180 Registers class info with the registry. \par\li0\fi0{\b Parameters:}\par\li180 {\f1 Field 1: } UNFINISHED \par\li0\fi0{\b Sequencing Restrictions}\par\li180 \par\li0\fi0{\b Progress Notifications}\par\li180 ActionData record with the following fields:\par\li360 {\f1 Field 1: } UNFINISHED\line \par\li0\fi0{\b Error Messages and MessageBox Styles}\par\li180 \par\li0\fi0{\b Remarks}\par\li180 On 64-bit operating systems will write info into the 32-bit OLE/COM hive. \page #{\footnote Operation_ixoRegAppIdInfoRegister64} ${\footnote ixoRegAppIdInfoRegister64 Operation} +{\footnote Operation:ixoRegAppIdInfoRegister64} K{\footnote ixoRegAppIdInfoRegister64} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b ixoRegAppIdInfoRegister64 Operation \line\tx360\tab\fs18\b0{\uldb Script Opcodes}{\v Server_ScriptOpcodes} \tx3000\tab{\uldb Error Codes}{\v Msi_Errors} \par}\li180 Registers class info with the registry for 64-bit components.  Behaviour is identic with ixoRegAppIdInfoRegister. \par\li0\fi0{\b Remarks}\par\li180 On 64-bit operating systems will write info into the 64-bit OLE/COM hive. \page #{\footnote Operation_ixoRegAppIdInfoUnregister} ${\footnote ixoRegClassAppIdUnregister Operation} +{\footnote Operation:ixoRegAppIdInfoUnregister} K{\footnote ixoRegAppIdInfoUnregister} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b ixoRegAppIdInfoUnregister Operation \line\tx360\tab\fs18\b0{\uldb Script Opcodes}{\v Server_ScriptOpcodes} \tx3000\tab{\uldb Error Codes}{\v Msi_Errors} \par}\li180 Unregisters class info with the registry. \par\li0\fi0{\b Parameters:}\par\li180 {\f1 Field 1: } UNFINISHED \par\li0\fi0{\b Sequencing Restrictions}\par\li180 \par\li0\fi0{\b Progress Notifications}\par\li180 ActionData record with the following fields:\par\li360 {\f1 Field 1: } UNFINISHED\line \par\li0\fi0{\b Error Messages and MessageBox Styles}\par\li180 \par\li0\fi0{\b Remarks}\par\li180 On 64-bit operating systems will remove info from the 32-bit OLE/COM hive. \page #{\footnote Operation_ixoRegAppIdInfoUnregister64} ${\footnote ixoRegAppIdInfoUnregister64 Operation} +{\footnote Operation:ixoRegAppIdInfoUnregister64} K{\footnote ixoRegAppIdInfoUnregister64} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b ixoRegAppIdInfoUnregister64 Operation \line\tx360\tab\fs18\b0{\uldb Script Opcodes}{\v Server_ScriptOpcodes} \tx3000\tab{\uldb Error Codes}{\v Msi_Errors} \par}\li180 Unregisters class info with the registry for 64-bit components.  Behaviour is identic with ixoRegAppIdInfoUnregister. \par\li0\fi0{\b Remarks}\par\li180 On 64-bit operating systems will remove info from the 64-bit OLE/COM hive. \page #{\footnote Operation_ixoRegClassInfoRegister} ${\footnote ixoRegClassInfoRegister Operation} +{\footnote Operation:ixoRegClassInfoRegister} K{\footnote ixoRegClassInfoRegister} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b ixoRegClassInfoRegister Operation \line\tx360\tab\fs18\b0{\uldb Script Opcodes}{\v Server_ScriptOpcodes} \tx3000\tab{\uldb Error Codes}{\v Msi_Errors} \par}\li180 Registers class info with the registry. \par\li0\fi0{\b Parameters:}\par\li180 {\f1 Field 1: } Feature. The class server feature.\line {\f1 Field 2: } Component. The component id (from the Component Table) of the component whose key file is the class server.\line {\f1 Field 3: } FileName. The (key) file of the component.\line {\f1 Field 4: } ClsId. The GUID string of the class.\line {\f1 Field 5: } ProgId. The ProgID string of the class.\line {\f1 Field 6: } VIProgId. The version independant ProgID string of the class.optional.\line {\f1 Field 7: } Description. The Description string. \line {\f1 Field 8: } Context. The class context. One of \line LocalServer\line LocalServer32\line InprocServer\line InprocServer32\line InprocHandler\line InprocHandler32\line {\f1 Field 9: } Insertable. Whether the class supports the Insertable key.\line {\f1 Field 10: } AppID. <TBD>\line {\f1 Field 11: } FileTypeMask. semicolon delimited file type masks for the class server.\line {\f1 Field 12: } Icon. The name of the icon file created using the  {\uldb ixoIconCreate}{\v Operation_ixoIconCreate} operation.\line {\f1 Field 13: } IconIndex.The index of the icon within the icon file.\line {\f1 Field 14: } DefInprocHandler. The default InprocHandler.Relevant only if the class context is LocalServer or LocalServer32.  It is either a number or is the name of a "system" file. If it is a number is is interpreted as - \line {\b 1 } - Use the system default for the 16 bit InprocHandler (ole2.dll used for InprocHandler).\line {\b 2 } - Use the system default for the 32 bit InprocHandler (ole32.dll used for InprocHandler32).\line {\b 3 } - Use the system default for both the 16 bit and 32 bit InprocHandler (ole2.dll used for InprocHandler, ole32.dll used for InprocHandler32).\line If it is a name it is interpreted as the file to be used as the 32 bit InprocHandler (used for InprocHandler32).\line {\f1 Field 15: } Argument. The argument to be used with the class server. Relevant only only if the class context is LocalServer or LocalServer32.\line \par\li0\fi0{\b Sequencing Restrictions}\par\li180 \par\li0\fi0{\b Progress Notifications}\par\li180 ActionData record with the following fields:\par\li360 {\f1 Field 1: } CLSID\line \par\li0\fi0{\b Error Messages and MessageBox Styles}\par\li180 \par\li0\fi0{\b Remarks}\par\li180 On 64-bit operating systems will write info into the 32-bit OLE/COM hive. \page #{\footnote Operation_ixoRegClassInfoRegister64} ${\footnote ixoRegClassInfoRegister64 Operation} +{\footnote Operation:ixoRegClassInfoRegister64} K{\footnote ixoRegClassInfoRegister64} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b ixoRegClassInfoRegister64 Operation \line\tx360\tab\fs18\b0{\uldb Script Opcodes}{\v Server_ScriptOpcodes} \tx3000\tab{\uldb Error Codes}{\v Msi_Errors} \par}\li180 Registers class info with the registry.  Behaviour is identic with ixoRegClassInfoRegister. \par\li0\fi0{\b Remarks}\par\li180 On 64-bit operating systems will write info into the 64-bit OLE/COM hive. \page #{\footnote Operation_ixoRegClassInfoUnregister} ${\footnote ixoRegClassInfoUnregister Operation} +{\footnote Operation:ixoRegClassInfoUnregister} K{\footnote ixoRegClassInfoUnregister} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b ixoRegClassInfoUnregister Operation \line\tx360\tab\fs18\b0{\uldb Script Opcodes}{\v Server_ScriptOpcodes} \tx3000\tab{\uldb Error Codes}{\v Msi_Errors} \par}\li180 Unregisters class info with the registry. \par\li0\fi0{\b Parameters:}\par\li180 {\f1 Field 1: } Feature. The class server feature.\line {\f1 Field 2: } Component. The component id (from the Component Table) of the component whose key file is the class server.\line {\f1 Field 3: } FileName. The (key) file of the component.\line {\f1 Field 4: } ClsId. The GUID string of the class.\line {\f1 Field 5: } ProgId. The ProgID string of the class.\line {\f1 Field 6: } VIProgId. The version independant ProgID string of the class.optional.\line {\f1 Field 7: } Description. The Description string. \line {\f1 Field 8: } Context. the class context. One of \line LocalServer\line LocalServer32\line InprocServer\line InprocServer32\line InprocHandler\line InprocHandler32\line {\f1 Field 9: } Insertable. Whether the class supports the Insertable key.\line {\f1 Field 10: } AppID. <TBD>\line {\f1 Field 11: } FileTypeMask. semicolon delimited file type masks for the class server.\line {\f1 Field 12: } Icon. The name of the icon file created using the  {\uldb ixoIconCreate}{\v Operation_ixoIconCreate} operation.\line {\f1 Field 13: } IconIndex.The index of the icon within the icon file.\line {\f1 Field 14: } DefInprocHandler. The default InprocHandler.Relevant only if the class context is LocalServer or LocalServer32.  It is either a number or is the name of a "system" file. If it is a number is is interpreted as - \line {\b 1 } - Use the system default for the 16 bit InprocHandler (ole2.dll used for InprocHandler).\line {\b 2 } - Use the system default for the 32 bit InprocHandler (ole32.dll used for InprocHandler32).\line {\b 3 } - Use the system default for both the 16 bit and 32 bit InprocHandler (ole2.dll used for InprocHandler, ole32.dll used for InprocHandler32).\line If it is a name it is interpreted as the file to be used as the 32 bit InprocHandler (used for InprocHandler32).\line {\f1 Field 15: } Argument. The argument to be used with the class server. Relevant only only if the class context is LocalServer or LocalServer32.\line \par\li0\fi0{\b Sequencing Restrictions}\par\li180 \par\li0\fi0{\b Progress Notifications}\par\li180 \par\li0\fi0{\b Sequencing Restrictions}\par\li180 \par\li0\fi0{\b Progress Notifications}\par\li180 ActionData record with the following fields:\par\li360 {\f1 Field 1: } CLSID\line \par\li0\fi0{\b Error Messages and MessageBox Styles}\par\li180 \par\li0\fi0{\b Remarks}\par\li180 On 64-bit operating systems will remove info from the 32-bit OLE/COM hive. \page #{\footnote Operation_ixoRegClassInfoUnregister64} ${\footnote ixoRegClassInfoUnregister64 Operation} +{\footnote Operation:ixoRegClassInfoUnregister64} K{\footnote ixoRegClassInfoUnregister64} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b ixoRegClassInfoUnregister64 Operation \line\tx360\tab\fs18\b0{\uldb Script Opcodes}{\v Server_ScriptOpcodes} \tx3000\tab{\uldb Error Codes}{\v Msi_Errors} \par}\li180 Unregisters class info with the registry.  Behaviour is identic with ixoRegClassInfoUnregister. \par\li0\fi0{\b Remarks}\par\li180 On 64-bit operating systems will remove info from the 64-bit OLE/COM hive. \page #{\footnote Operation_ixoRegMIMEInfoRegister} ${\footnote ixoRegMIMEInfoRegister Operation} +{\footnote Operation:ixoRegMIMEInfoRegister} K{\footnote ixoRegMIMEInfoRegister} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b ixoRegMIMEInfoRegister Operation \line\tx360\tab\fs18\b0{\uldb Script Opcodes}{\v Server_ScriptOpcodes} \tx3000\tab{\uldb Error Codes}{\v Msi_Errors} \par}\li180 Registers the MIME info with the registry. \par\li0\fi0{\b Parameters:}\par\li180 {\f1 Field 1: } ContentType. The Content type string.\line {\f1 Field 2: } Extension. The extension string (w/o the '.').\line {\f1 Field 3: } CLSID. The optional GUID string of the class.\line \par\li0\fi0{\b Sequencing Restrictions}\par\li180 \par\li0\fi0{\b Progress Notifications}\par\li180 ActionData record with the following fields:\par\li360 {\f1 Field 1: } ContentType\line {\f1 Field 2: } Extension\line \par\li0\fi0{\b Error Messages and MessageBox Styles}\par\li180 \par\li0\fi0{\b Remarks}\par\li180 On 64-bit operating systems will write info into the 32-bit OLE/COM hive. \page #{\footnote Operation_ixoRegMIMEInfoRegister64} ${\footnote ixoRegMIMEInfoRegister64 Operation} +{\footnote Operation:ixoRegMIMEInfoRegister64} K{\footnote ixoRegMIMEInfoRegister64} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b ixoRegMIMEInfoRegister64 Operation \line\tx360\tab\fs18\b0{\uldb Script Opcodes}{\v Server_ScriptOpcodes} \tx3000\tab{\uldb Error Codes}{\v Msi_Errors} \par}\li180 Registers the MIME info with the registry.  Behaviour is identic with ixoRegMIMEInfoRegister. \par\li0\fi0{\b Remarks}\par\li180 On 64-bit operating systems will write info into the 64-bit OLE/COM hive. \page #{\footnote Operation_ixoRegMIMEInfoUnregister} ${\footnote ixoRegMIMEInfoUnregister Operation} +{\footnote Operation:ixoRegMIMEInfoUnregister} K{\footnote ixoRegMIMEInfoUnregister} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b ixoRegMIMEInfoUnregister Operation \line\tx360\tab\fs18\b0{\uldb Script Opcodes}{\v Server_ScriptOpcodes} \tx3000\tab{\uldb Error Codes}{\v Msi_Errors} \par}\li180 Unregisters the MIME info with the registry. \par\li0\fi0{\b Parameters:}\par\li180 {\f1 Field 1: } ContentType. The Content type string.\line {\f1 Field 2: } Extension. The extension string (w/o the '.').\line {\f1 Field 3: } CLSID. The optional GUID string of the class.\line \par\li0\fi0{\b Sequencing Restrictions}\par\li180 \par\li0\fi0{\b Progress Notifications}\par\li180 ActionData record with the following fields:\par\li360 {\f1 Field 1: } ContentType\line {\f1 Field 2: } Extension\line \par\li0\fi0{\b Error Messages and MessageBox Styles}\par\li180 \par\li0\fi0{\b Remarks}\par\li180 On 64-bit operating systems will remove info from the 32-bit OLE/COM hive. \page #{\footnote Operation_ixoRegMIMEInfoUnregister64} ${\footnote ixoRegMIMEInfoUnregister64 Operation} +{\footnote Operation:ixoRegMIMEInfoUnregister64} K{\footnote ixoRegMIMEInfoUnregister64} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b ixoRegMIMEInfoUnregister64 Operation \line\tx360\tab\fs18\b0{\uldb Script Opcodes}{\v Server_ScriptOpcodes} \tx3000\tab{\uldb Error Codes}{\v Msi_Errors} \par}\li180 Unregisters the MIME info with the registry.  Behaviour is identic with ixoRegMIMEInfoUnregister. \par\li0\fi0{\b Remarks}\par\li180 On 64-bit operating systems will remove info from the 64-bit OLE/COM hive. \page #{\footnote Operation_ixoRegProgIdInfoRegister} ${\footnote ixoRegProgIdInfoRegister Operation} +{\footnote Operation:ixoRegProgIdInfoRegister} K{\footnote ixoRegProgIdInfoRegister} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b ixoRegProgIdInfoRegister Operation \line\tx360\tab\fs18\b0{\uldb Script Opcodes}{\v Server_ScriptOpcodes} \tx3000\tab{\uldb Error Codes}{\v Msi_Errors} \par}\li180 Registers the ProgId info with the registry. \par\li0\fi0{\b Parameters:}\par\li180 {\f1 Field 1: } ProgId. The Program Identifier string.\line {\f1 Field 2: } ClsId. The optional GUID string of the class.\line {\f1 Field 3: } Extension. The extension associated with the progid.\line {\f1 Field 4: } Description. The ProgId Description.\line {\f1 Field 5: } Icon. The icon associated with the ProgId.\line {\f1 Field 6: } IconIndex. The icon index.\line {\f1 Field 7: } VIProgId. The optional version independant prog id.\line {\f1 Field 8: } VIProgIdDescription. The description for the version independant prog id.\line {\f1 Field 9: } Insertable. Set to 1 if the corr. object is insertable.\line \par\li0\fi0{\b Sequencing Restrictions}\par\li180 \par\li0\fi0{\b Progress Notifications}\par\li180 ActionData record with the following fields:\par\li360 {\f1 Field 1: } ProgId\line \par\li0\fi0{\b Error Messages and MessageBox Styles}\par\li180 \par\li0\fi0{\b Remarks}\par\li180 On 64-bit operating systems will write info into the 32-bit OLE/COM hive. \page #{\footnote Operation_ixoRegProgIdInfoRegister64} ${\footnote ixoRegProgIdInfoRegister64 Operation} +{\footnote Operation:ixoRegProgIdInfoRegister64} K{\footnote ixoRegProgIdInfoRegister64} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b ixoRegProgIdInfoRegister64 Operation \line\tx360\tab\fs18\b0{\uldb Script Opcodes}{\v Server_ScriptOpcodes} \tx3000\tab{\uldb Error Codes}{\v Msi_Errors} \par}\li180 Registers the ProgId info with the registry.  Behaviour is identic with ixoRegProgIdInfoRegister. \par\li0\fi0{\b Remarks}\par\li180 On 64-bit operating systems will write info into the 64-bit OLE/COM hive. \page #{\footnote Operation_ixoRegProgIdInfoUnregister} ${\footnote ixoRegProgIdInfoUnregister Operation} +{\footnote Operation:ixoRegProgIdInfoUnregister} K{\footnote ixoRegProgIdInfoUnregister} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b ixoRegProgIdInfoUnregister Operation \line\tx360\tab\fs18\b0{\uldb Script Opcodes}{\v Server_ScriptOpcodes} \tx3000\tab{\uldb Error Codes}{\v Msi_Errors} \par}\li180 Unregisters the ProgId info with the registry. \par\li0\fi0{\b Parameters:}\par\li180 {\f1 Field 1: } ProgId. The Program Identifier string.\line {\f1 Field 2: } ClsId. The optional GUID string of the class.\line {\f1 Field 3: } Extension. The extension associated with the progid.\line {\f1 Field 4: } Description. The ProgId Description.\line {\f1 Field 5: } Icon. The icon associated with the ProgId.\line {\f1 Field 6: } IconIndex. The icon index.\line {\f1 Field 7: } VIProgId. The optional version independant prog id.\line {\f1 Field 8: } VIProgIdDescription. The description for the version independant prog id.\line {\f1 Field 9: } Insertable. Set to 1 if the corr. object is insertable.\line \par\li0\fi0{\b Sequencing Restrictions}\par\li180 \par\li0\fi0{\b Progress Notifications}\par\li180 ActionData record with the following fields:\par\li360 {\f1 Field 1: } ProgId\line \par\li0\fi0{\b Error Messages and MessageBox Styles}\par\li180 \par\li0\fi0{\b Remarks}\par\li180 On 64-bit operating systems will remove info from the 32-bit OLE/COM hive. \page #{\footnote Operation_ixoRegProgIdInfoUnregister64} ${\footnote ixoRegProgIdInfoUnregister64 Operation} +{\footnote Operation:ixoRegProgIdInfoUnregister64} K{\footnote ixoRegProgIdInfoUnregister64} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b ixoRegProgIdInfoUnregister64 Operation \line\tx360\tab\fs18\b0{\uldb Script Opcodes}{\v Server_ScriptOpcodes} \tx3000\tab{\uldb Error Codes}{\v Msi_Errors} \par}\li180 Unregisters the ProgId info with the registry.  Behaviour is identic with ixoRegProgIdInfoUnregister. \par\li0\fi0{\b Remarks}\par\li180 On 64-bit operating systems will remove info from the 64-bit OLE/COM hive. \page #{\footnote Operation_ixoRegExtensionInfoRegister} ${\footnote ixoRegExtensionInfoRegister Operation} +{\footnote Operation:ixoRegExtensionInfoRegister} K{\footnote ixoRegExtensionInfoRegister} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b ixoRegExtensionInfoRegister Operation \line\tx360\tab\fs18\b0{\uldb Script Opcodes}{\v Server_ScriptOpcodes} \tx3000\tab{\uldb Error Codes}{\v Msi_Errors} \par}\li180 Registers the Extension info with the registry. \par\li0\fi0{\b Parameters:}\par\li180 {\f1 Field 1: } Feature. The extension server feature.\line {\f1 Field 2: } Component. The component id (from the Component Table) of the component whose key file is the extension server.\line {\f1 Field 3: } FileName. The (key) file of the component.\line {\f1 Field 4: } Extension. The extension.\line {\f1 Field 5: } ProgId. The optional progID.\line {\f1 Field 6: } ShellNew. The value name under the ShellNew key.\line {\f1 Field 7: } ShellNewValue. The value.\line {\f1 Field 8: } ContentType. The MIME Content Type to be associated with the extension.\line {\f1 Field 9: } Order. The number of verbs associated with the extension that need to be in the order specified (they are at the end of the sequence of verbs).\line {\f1 Field 10: } Verb1. The first verb.\line {\f1 Field 11: } Command1. The command associated with the first verb.\line {\f1 Field 12: } Arguments1. The arguments to be passed to the server when invoking the first verb.\line {\f1 Field 13: } Verb2. The second verb.\line {\f1 Field 14: } Command2.  The command associated with the second verb.\line {\f1 Field 15: } Arguments2.  The arguments to be passed to the server when invoking the second verb.\line ...\line ...\line ...\line NOTE: This is a variable length record operation, the size depending on the number of verbs (may be 0 or more)  supported by the extension server.\line \par\li0\fi0{\b Sequencing Restrictions}\par\li180 \par\li0\fi0{\b Progress Notifications}\par\li180 ActionData record with the following fields:\par\li360 {\f1 Field 1: } Extension\line \par\li0\fi0{\b Error Messages and MessageBox Styles}\par\li180 \par\li0\fi0{\b Remarks}\par\li180 On 64-bit operating systems will write info into the 32-bit OLE/COM hive. \page #{\footnote Operation_ixoRegExtensionInfoRegister64} ${\footnote ixoRegExtensionInfoRegister64 Operation} +{\footnote Operation:ixoRegExtensionInfoRegister64} K{\footnote ixoRegExtensionInfoRegister64} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b ixoRegExtensionInfoRegister64 Operation \line\tx360\tab\fs18\b0{\uldb Script Opcodes}{\v Server_ScriptOpcodes} \tx3000\tab{\uldb Error Codes}{\v Msi_Errors} \par}\li180 Registers the Extension info with the registry.  Behaviour is identic with ixoRegExtensionInfoRegister. \par\li0\fi0{\b Remarks}\par\li180 On 64-bit operating systems will write info into the 64-bit OLE/COM hive. \page #{\footnote Operation_ixoRegExtensionInfoUnregister} ${\footnote ixoRegExtensionInfoUnregister Operation} +{\footnote Operation:ixoRegExtensionInfoUnregister} K{\footnote ixoRegExtensionInfoUnregister} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b ixoRegExtensionInfoUnregister Operation \line\tx360\tab\fs18\b0{\uldb Script Opcodes}{\v Server_ScriptOpcodes} \tx3000\tab{\uldb Error Codes}{\v Msi_Errors} \par}\li180 Unregisters the Extension info with the registry. \par\li0\fi0{\b Parameters:}\par\li180 {\f1 Field 1: } Feature. The extension server feature.\line {\f1 Field 2: } Component. The component id (from the Component Table) of the component whose key file is the extension server.\line {\f1 Field 3: } FileName. The (key) file of the component.\line {\f1 Field 4: } Extension. The extension.\line {\f1 Field 5: } ProgId. The optional progID.\line {\f1 Field 6: } ShellNew. The value name under the ShellNew key.\line {\f1 Field 7: } ShellNewValue. The value.\line {\f1 Field 8: } ContentType. The MIME Content Type to be associated with the extension.\line {\f1 Field 9: } Order. The number of verbs associated with the extension that need to be in the order specified (they are at the end of the sequence of verbs).\line {\f1 Field 10: } Verb1. The first verb.\line {\f1 Field 11: } Command1. The command associated with the first verb.\line {\f1 Field 12: } Arguments1. The arguments to be passed to the server when invoking the first verb.\line {\f1 Field 13: } Verb2. The second verb.\line {\f1 Field 14: } Command2.  The command associated with the second verb.\line {\f1 Field 15: } Arguments2.  The arguments to be passed to the server when invoking the second verb.\line ...\line ...\line ...\line NOTE: This is a variable length record operation, the size depending on the number of verbs (may be 0 or more)  supported by the extension server.\line \par\li0\fi0{\b Sequencing Restrictions}\par\li180 \par\li0\fi0{\b Progress Notifications}\par\li180 ActionData record with the following fields:\par\li360 {\f1 Field 1: } Extension\line \par\li0\fi0{\b Error Messages and MessageBox Styles}\par\li180 \par\li0\fi0{\b Remarks}\par\li180 On 64-bit operating systems will remove info from the 32-bit OLE/COM hive. \page #{\footnote Operation_ixoRegExtensionInfoUnregister64} ${\footnote ixoRegExtensionInfoUnregister64 Operation} +{\footnote Operation:ixoRegExtensionInfoUnregister64} K{\footnote ixoRegExtensionInfoUnregister64} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b ixoRegExtensionInfoUnregister64 Operation \line\tx360\tab\fs18\b0{\uldb Script Opcodes}{\v Server_ScriptOpcodes} \tx3000\tab{\uldb Error Codes}{\v Msi_Errors} \par}\li180 Unregisters the Extension info with the registry.  Behaviour is identic with ixoRegExtensionInfoUnregister. \par\li0\fi0{\b Remarks}\par\li180 On 64-bit operating systems will remove info from the 64-bit OLE/COM hive. \page #{\footnote Operation_ixoRegisterBackupFile} ${\footnote ixoRegisterBackupFile Operation} +{\footnote Operation:ixoRegisterBackupFile} K{\footnote ixoRegisterBackupFile} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b ixoRegisterBackupFile Operation \line\tx360\tab\fs18\b0{\uldb Script Opcodes}{\v Server_ScriptOpcodes} \tx3000\tab{\uldb Error Codes}{\v Msi_Errors} \par}\li180 Marks a file as a backup file that may be removed with the rollback script. No execution is performed  with this operation. This operation is used when removing rollback scripts and backup files. \par\li0\fi0{\b Parameters:}\par\li180 {\f1 Field 1: } Full path of file. \par\li0\fi0{\b Sequencing Restrictions}\par\li180 None. \par\li0\fi0{\b Progress Notifications}\par\li180 None. \par\li0\fi0{\b Error Messages and MessageBox Styles}\par\li180 None. \par\li0\fi0{\b Remarks}\par\li180 This operation is only relevant in a rollback script. \page #{\footnote Operation_ixoTypeLibraryRegister} ${\footnote ixoTypeLibraryRegister Operation} +{\footnote Operation:ixoTypeLibraryRegister} K{\footnote ixoTypeLibraryRegister} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b ixoTypeLibraryRegister Operation \line\tx360\tab\fs18\b0{\uldb Script Opcodes}{\v Server_ScriptOpcodes} \tx3000\tab{\uldb Error Codes}{\v Msi_Errors} \par}\li180 Registers/ advertises a type library. \par\li0\fi0{\b Parameters:}\par\li180 {\f1 Field 1: } Feature. The type library server feature.\line {\f1 Field 2: } Component. The component id (from the Component Table) of the component whose key file is the type library.\line {\f1 Field 3: } FileName. The (key) file of the component.\line {\f1 Field 4: } LibID. The UUID for the type library.\line {\f1 Field 5: } Version. the short integer version number.\line {\f1 Field 6: } Description. The description of the type library.\line {\f1 Field 7: } Language. The language of the type library.\line {\f1 Field 8: } Help Path. This the path of the help file for the type library.\line \par\li0\fi0{\b Sequencing Restrictions}\par\li180 \par\li0\fi0{\b Progress Notifications}\par\li180 ActionData record with the following fields:\par\li360 {\f1 Field 1: } LibID\line \par\li0\fi0{\b Error Messages and MessageBox Styles}\par\li180 \par\li0\fi0{\b Remarks}\par\li180 \page #{\footnote Operation_ixoTypeLibraryUnregister} ${\footnote ixoTypeLibraryUnregister Operation} +{\footnote Operation:ixoTypeLibraryUnregister} K{\footnote ixoTypeLibraryUnregister} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b ixoTypeLibraryUnregister Operation \line\tx360\tab\fs18\b0{\uldb Script Opcodes}{\v Server_ScriptOpcodes} \tx3000\tab{\uldb Error Codes}{\v Msi_Errors} \par}\li180 Unregisters/ unadvertises a type library. \par\li0\fi0{\b Parameters:}\par\li180 {\f1 Field 1: } Feature. The type library server feature.\line {\f1 Field 2: } Component. The component id (from the Component Table) of the component whose key file is the type library.\line {\f1 Field 3: } FileName. The (key) file of the component.\line {\f1 Field 4: } LibID. The UUID for the type library.\line {\f1 Field 5: } Version. the short integer version number.\line {\f1 Field 6: } Description. The description of the type library.\line {\f1 Field 7: } Language. The language of the type library.\line {\f1 Field 8: } Help Path. This the path of the help file for the type library.\line \par\li0\fi0{\b Sequencing Restrictions}\par\li180 \par\li0\fi0{\b Progress Notifications}\par\li180 ActionData record with the following fields:\par\li360 {\f1 Field 1: } LibID\line \par\li0\fi0{\b Error Messages and MessageBox Styles}\par\li180 \par\li0\fi0{\b Remarks}\par\li180 \page #{\footnote Operation_ixoCustomActionSchedule} ${\footnote ixoCustomActionSchedule Operation} +{\footnote Operation:ixoCustomActionSchedule} K{\footnote ixoCustomActionSchedule} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b ixoCustomActionSchedule Operation \line\tx360\tab\fs18\b0{\uldb Script Opcodes}{\v Server_ScriptOpcodes} \tx3000\tab{\uldb Error Codes}{\v Msi_Errors} \par}\li180 Executes a scheduled custom action using information stored in the  script record, except passes the record to the rollback script if  it is a rollback or commit custom action. \par\li0\fi0{\b Parameters:}\par\li180 {\f1 Field 1: }Action, name of action.\line {\f1 Field 2: }ActionType, combination of icaXXX flags.\line {\f1 Field 3: }Source. Information from Source column of CustomAction table.\line {\f1 Field 4: }Target. Information from Target column of CustomAction table.\line {\f1 Field 5: }CustomActionData. A string containing context information, set from property. \par\li0\fi0{\b Sequencing Restrictions}\par\li180 \par\li0\fi0{\b Remarks}\par\li180 The Source field will contain the action binary data if the custom action was  stored within a database stream. The CustomActionData field is set with the value of the  property named the same as the primary key in the CustomAction table entry. \page #{\footnote Operation_ixoCustomActionRollback} ${\footnote ixoCustomActionRollback Operation} +{\footnote Operation:ixoCustomActionRollback} K{\footnote ixoCustomActionRollback} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b ixoCustomActionRollback Operation \line\tx360\tab\fs18\b0{\uldb Script Opcodes}{\v Server_ScriptOpcodes} \tx3000\tab{\uldb Error Codes}{\v Msi_Errors} \par}\li180 Executes a rollback custom action upon failure of script execution,  using information stored in the script record, passed over from the install script. \par\li0\fi0{\b Parameters:}\par\li180 {\f1 Field 1: }Action, name of action.\line {\f1 Field 2: }ActionType, combination of icaXXX flags.\line {\f1 Field 3: }Source. Information from Source column of CustomAction table.\line {\f1 Field 4: }Target. Information from Target column of CustomAction table.\line {\f1 Field 5: }CustomActionData. A string containing context information, set from property. \par\li0\fi0{\b Sequencing Restrictions}\par\li180 \par\li0\fi0{\b Remarks}\par\li180 The Source field will contain the action binary data if the custom action was  stored within a database stream. The CustomActionData field is set with the value of the  property named the same as the primary key in the CustomAction table entry. \page #{\footnote Operation_ixoCustomActionCommit} ${\footnote ixoCustomActionCommit Operation} +{\footnote Operation:ixoCustomActionCommit} K{\footnote ixoCustomActionCommit} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b ixoCustomActionCommit Operation \line\tx360\tab\fs18\b0{\uldb Script Opcodes}{\v Server_ScriptOpcodes} \tx3000\tab{\uldb Error Codes}{\v Msi_Errors} \par}\li180 Executes a commit custom action upon successful completion of script execution,  using information stored in the script record, passed over from the install script. \par\li0\fi0{\b Parameters:}\par\li180 {\f1 Field 1: }Action, name of action.\line {\f1 Field 2: }ActionType, combination of icaXXX flags.\line {\f1 Field 3: }Source. Information from Source column of CustomAction table.\line {\f1 Field 4: }Target. Information from Target column of CustomAction table.\line {\f1 Field 5: }CustomActionData. A string containing context information, set from property. \par\li0\fi0{\b Sequencing Restrictions}\par\li180 \par\li0\fi0{\b Remarks}\par\li180 The Source field will contain the action binary data if the custom action was  stored within a database stream. The CustomActionData field is set with the value of the  property named the same as the primary key in the CustomAction table entry. \page #{\footnote Operation_ixoODBCDriverManager} ${\footnote ixoODBCInstallDriverManager Operation} +{\footnote Operation:ixoODBCInstallDriverManager} K{\footnote ixoODBCInstallDriverManager} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b ixoODBCInstallDriverManager Operation \line\tx360\tab\fs18\b0{\uldb Script Opcodes}{\v Server_ScriptOpcodes} \tx3000\tab{\uldb Error Codes}{\v Msi_Errors} \par}\li180 Registers the driver manager for the first MSI product to become a  client of the ODBC driver manager component, or  unregisters the driver manager of the current product is removing  the last client of the ODBC driver manager component. \par\li0\fi0{\b Parameters:}\par\li180 {\f1 Field 1: } State: 1 to register, 2 to unregister. \par\li0\fi0{\b Sequencing Restrictions}\par\li180 Must come after ixoFileCopy for manager files and before other ODBC ops on register.\line Must come before ixoFileRemove on manager files and after other ODBC ops on unregister. \par\li0\fi0{\b Remarks}\par\li180 \page #{\footnote Operation_ixoODBCInstallDriver} ${\footnote ixoODBCInstallDriver Operation} +{\footnote Operation:ixoODBCInstallDriver} K{\footnote ixoODBCInstallDriver} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b ixoODBCInstallDriver Operation \line\tx360\tab\fs18\b0{\uldb Script Opcodes}{\v Server_ScriptOpcodes} \tx3000\tab{\uldb Error Codes}{\v Msi_Errors} \par}\li180 Registers an ODBC driver, configured with its set of attributes. \par\li0\fi0{\b Parameters:}\par\li180 {\f1 Field 1: }DriverKey,  registered name of driver, ODBC term: description.\line {\f1 Field 2: }Component,  component ID, used to check for existing clients.\line {\f1 Field 3: }Folder,     location of driver.\line {\f1 Field 4: }Attribute_, name of driver attribute, repeating pairs with value.\line {\f1 Field 5: }Value_,     associated value for attribute in repeating pair. \par\li0\fi0{\b Sequencing Restrictions}\par\li180 Must come after ixoFileCopy for driver files and after ixoODBCDriverManager register. \par\li0\fi0{\b Remarks}\par\li180 \page #{\footnote Operation_ixoODBCRemoveDriver} ${\footnote ixoODBCRemoveDriver Operation} +{\footnote Operation:ixoODBCRemoveDriver} K{\footnote ixoODBCRemoveDriver} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b ixoODBCRemoveDriver Operation \line\tx360\tab\fs18\b0{\uldb Script Opcodes}{\v Server_ScriptOpcodes} \tx3000\tab{\uldb Error Codes}{\v Msi_Errors} \par}\li180 Removes the registration for a driver. \par\li0\fi0{\b Parameters:}\par\li180 {\f1 Field 1: }DriverKey,  registered name of driver, ODBC term: description.\line {\f1 Field 2: }Component,  component ID, used to check for remaining clients. \par\li0\fi0{\b Sequencing Restrictions}\par\li180 Must come before ixoFileRemove for driver files and before ixoODBCDriverManager unregister. \par\li0\fi0{\b Remarks}\par\li180 \page #{\footnote Operation_ixoODBCDataSource} ${\footnote ixoODBCDataSource Operation} +{\footnote Operation:ixoODBCDataSource} K{\footnote ixoODBCDataSource} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b ixoODBCDataSource Operation \line\tx360\tab\fs18\b0{\uldb Script Opcodes}{\v Server_ScriptOpcodes} \tx3000\tab{\uldb Error Codes}{\v Msi_Errors} \par}\li180 Registers an ODBC data source, associated with a particular driver,  or unregisters an ODBC data source. \par\li0\fi0{\b Parameters:}\par\li180 {\f1 Field 1: }DriverKey,    registered name of driver, ODBC term: description.\line {\f1 Field 2: }Component,    component ID.\line {\f1 Field 3: }Registration, SQL_ADD_DSN, SQL_ADD_SYS_DSN, SQL_REMOVE_DSN, SQL_REMOVE_SYS_DSN.\line {\f1 Field 4: }Attribute_,   name of data source attribute, repeating pairs with value.\line {\f1 Field 5: }Value_,       associated value for attribute in repeating pair. \par\li0\fi0{\b Sequencing Restrictions}\par\li180 Must come after ixoODBCInstallDriver for associated driver on ADD.\line Must come before ixoODBCRemoveDriver for associated driver on REMOVE. \par\li0\fi0{\b Remarks}\par\li180 \page #{\footnote Operation_ixoODBCInstallTranslator} ${\footnote ixoODBCInstallTranslator Operation} +{\footnote Operation:ixoODBCInstallTranslator} K{\footnote ixoODBCInstallTranslator} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b ixoODBCInstallTranslator Operation \line\tx360\tab\fs18\b0{\uldb Script Opcodes}{\v Server_ScriptOpcodes} \tx3000\tab{\uldb Error Codes}{\v Msi_Errors} \par}\li180 Registers an ODBC data translator. \par\li0\fi0{\b Parameters:}\par\li180 {\f1 Field 1: }TranslatorKey,  registered name of translator, ODBC term: description.\line {\f1 Field 2: }Component,  component ID, used to check for existing clients.\line {\f1 Field 3: }Folder,     location of translator.\line {\f1 Field 4: }Attribute_, name of translator attribute, repeating pairs with value.\line {\f1 Field 5: }Value_,     associated value for attribute in repeating pair. \par\li0\fi0{\b Sequencing Restrictions}\par\li180 Must come after ixoFileCopy for translator files and after ixoODBCDriverManager register. \par\li0\fi0{\b Remarks}\par\li180 \page #{\footnote Operation_ixoODBCRemoveTranslator} ${\footnote ixoODBCRemoveTranslator Operation} +{\footnote Operation:ixoODBCRemoveTranslator} K{\footnote ixoODBCRemoveTranslator} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b ixoODBCRemoveTranslator Operation \line\tx360\tab\fs18\b0{\uldb Script Opcodes}{\v Server_ScriptOpcodes} \tx3000\tab{\uldb Error Codes}{\v Msi_Errors} \par}\li180 Unregisters an ODBC data translator. \par\li0\fi0{\b Parameters:}\par\li180 {\f1 Field 1: }TranslatorKey,  registered name of translator, ODBC term: description.\line {\f1 Field 2: }Component,  component ID, used to check for remaining clients. \par\li0\fi0{\b Sequencing Restrictions}\par\li180 Must come before ixoFileRemove for translator files and before ixoODBCDriverManager unregister. \par\li0\fi0{\b Remarks}\par\li180 \page #{\footnote Operation_ixoServiceControl} ${\footnote ixoServiceControl Operation} +{\footnote Operation:ixoServiceControl} K{\footnote ixoServiceControl} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b ixoServiceControl Operation \line\tx360\tab\fs18\b0{\uldb Script Opcodes}{\v Server_ScriptOpcodes} \tx3000\tab{\uldb Error Codes}{\v Msi_Errors} \par}\li180 Starts a service currently installed on the machine.    \par\li0\fi0{\b Parameters:}\par\li180 {\f1 Field 1: }MachineName. MachineName property to start the service on.\line {\f1 Field 2: }Name.  Internal name of the service.  Does not includes slashes or spaces.\line {\f1 Field 3: }Action. Bitfield.  1 = Start, 2 = Stop, 4 = <reserved>, 8 = Delete\line {\f1 Field 3: }Wait.  Boolean for whether to wait for the service control event to complete.\line {\f1 Field 4: }StartupArguments.  List of arguments, separated by nulls, with a double null at the end.\line \par\li0\fi0{\b Sequencing Restrictions}\par\li180 \par\li0\fi0{\b Progress Notifications}\par\li180 ActionData record with the following fields:\par\li360 {\f1 Field 1: } Display name of the service.\line {\f1 Field 2: } Internal name of the service.\line \par\li0\fi0{\b Error Messages and MessageBox Styles}\par\li180 \par\li0\fi0{\b Remarks}\par\li180 \page #{\footnote Operation_ixoServiceInstall} ${\footnote ixoServiceInstall Operation} +{\footnote Operation:ixoServiceInstall} K{\footnote ixoServiceInstall} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b ixoServiceInstall Operation \line\tx360\tab\fs18\b0{\uldb Script Opcodes}{\v Server_ScriptOpcodes} \tx3000\tab{\uldb Error Codes}{\v Msi_Errors} \par}\li180 Starts a service currently installed on the machine.    \par\li0\fi0{\b Parameters:}\par\li180 {\f1 Field 1: }Name.  Internal name of the service.  Does not includes slashes or spaces.\line {\f1 Field 2: }DisplayName.  Display name of the service.\line {\f1 Field 3: }ImagePath.  Full command line for invoking the service.\line {\f1 Field 4: }ServiceType.  Type of service.\line {\f1 Field 6: }StartType.  When to start service.\line {\f1 Field 7: }ErrorControl.  severity if service fails to start.\line {\f1 Field 8: }LoadOrderGroup.  Name of load ordering group.\line {\f1 Field 9: }Dependencies.  Null delimited list of services on which this service depends.\line {\f1 Field 10:}TagId.  Used only for rollback.  Tag for service start order.\line {\f1 Field 11:}StartName.  User for the service to run as.\line {\f1 Field 12:}Password.  Clear-text password for user specified in StartName.\line {\f1 Field 13:}Description.  A description of the service. Displayed by the Services MMC snap-in. Win2K only\line \par\li0\fi0{\b Sequencing Restrictions}\par\li180 \par\li0\fi0{\b Progress Notifications}\par\li180 \par\li0\fi0{\b Error Messages and MessageBox Styles}\par\li180 \par\li0\fi0{\b Remarks}\par\li180 \page #{\footnote Operation_ixoUpdateEnvironmentStrings} ${\footnote ixoUpdateEnvironmentStrings} +{\footnote Operation:ixoUpdateEnvironmentStrings} K{\footnote ixoUpdateEnvironmentStrings} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b ixoUpdateEnvironmentStrings Operation \line\tx360\tab\fs18\b0{\uldb Script Opcodes}{\v Server_ScriptOpcodes} \tx3000\tab{\uldb Error Codes}{\v Msi_Errors} \par}\li180 This operation performs an update on the system environmental variables.  On Windows '95 these occur in AutoExec.bat, on Windows NT they occur in the registry. \par\li0\fi0{\b Parameters:}\par\li180 {\f1 Field 1: }Name.  Name of the variable to set.\line {\f1 Field 2: }Value.  Value to set in the variable.\line {\f1 Field 3: }Delimiter.  Separator between values, if the value is one of several.\line {\f1 Field 4: }Action.  Bitfield specifying type of operation to perform:\line \tab 2   Set a value\line \tab 4   Set a value only if the variable is absent.\line \tab 8   Remove the value from the variable.\line \tab 16  Append the specified value to the named variable.\line \tab 32  Prepend the specified value to named variable.\line {\f1 Field 5: }AutoExec Path.  95 Only, ignored on NT.  Contains either the Windows Volume path, or  content of the WIN95_ENVIRONMENT_TEST property.  This allows you to modify a file in a test  directory rather than working on your primary file. \par\li0\fi0{\b Sequencing Restrictions}\par\li180 \par\li0\fi0{\b Progress Notifications}\par\li180 None. \par\li0\fi0{\b Error Messages and MessageBox Styles}\par\li180 None. \par\li0\fi0{\b Remarks}\par\li180 \page #{\footnote Operation_ixoComPlusRegister} ${\footnote ixoComPlusRegister Operation} +{\footnote Operation:ixoComPlusRegister} K{\footnote ixoComPlusRegister} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b ixoComPlusRegister Operation \line\tx360\tab\fs18\b0{\uldb Script Opcodes}{\v Server_ScriptOpcodes} \tx3000\tab{\uldb Error Codes}{\v Msi_Errors} \par}\li180 Installs the COM+ application. \par\li0\fi0{\b Parameters:}\par\li180 {\f1 Field 1: }AppID: The Application id guid.\line {\f1 Field 2: }AplFileName: The name of the file that contains application configuration information.\line {\f1 Field 3: }AppDir: The directory the application is installed to.\line {\f1 Field 4: }AppType: Information from the ExpType column of the Complus table.\line {\f1 Field 5: }InstallUsers: Whether to install the users of the application.\line {\f1 Field 6: }RSN: Remote server name for proxy applications.\line \par\li0\fi0{\b Sequencing Restrictions}\par\li180 \par\li0\fi0{\b Remarks}\par\li180 \page #{\footnote Operation_ixoComPlusUnregister} ${\footnote ixoComPlusUnregister Operation} +{\footnote Operation:ixoComPlusUnregister} K{\footnote ixoComPlusUnregister} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b ixoComPlusUnregister Operation \line\tx360\tab\fs18\b0{\uldb Script Opcodes}{\v Server_ScriptOpcodes} \tx3000\tab{\uldb Error Codes}{\v Msi_Errors} \par}\li180 Uninstalls the COM+ application. \par\li0\fi0{\b Parameters:}\par\li180 {\f1 Field 1: }AppID: The Application id guid.\line {\f1 Field 2: }AplFileName: The name of the file that contains application configuration information.\line {\f1 Field 3: }AppDir: The directory the application is installed to.\line {\f1 Field 4: }AppType: Information from the ExpType column of the Complus table.\line {\f1 Field 5: }InstallUsers: Whether to install the users of the application.\line {\f1 Field 6: }RSN: Remote server name for proxy applications.\line \par\li0\fi0{\b Sequencing Restrictions}\par\li180 \par\li0\fi0{\b Remarks}\par\li180 \page #{\footnote Operation_ixoComPlusRegisterMetaOnly} ${\footnote ixoComPlusRegisterMetaOnly Operation} +{\footnote Operation:ixoComPlusRegisterMetaOnly} K{\footnote ixoComPlusRegisterMetaOnly} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b ixoComPlusRegisterMetaOnly Operation \line\tx360\tab\fs18\b0{\uldb Script Opcodes}{\v Server_ScriptOpcodes} \tx3000\tab{\uldb Error Codes}{\v Msi_Errors} \par}\li180 Not used - only a placeholder. \par\li0\fi0{\b Parameters:}\par\li180 \par\li0\fi0{\b Sequencing Restrictions}\par\li180 \par\li0\fi0{\b Remarks}\par\li180 \page #{\footnote Operation_ixoComPlusUnregisterMetaOnly} ${\footnote ixoComPlusUnregisterMetaOnly Operation} +{\footnote Operation:ixoComPlusUnregisterMetaOnly} K{\footnote ixoComPlusUnregisterMetaOnly} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b ixoComPlusUnregisterMetaOnly Operation \line\tx360\tab\fs18\b0{\uldb Script Opcodes}{\v Server_ScriptOpcodes} \tx3000\tab{\uldb Error Codes}{\v Msi_Errors} \par}\li180 Not used - only a placeholder. \par\li0\fi0{\b Parameters:}\par\li180 \par\li0\fi0{\b Sequencing Restrictions}\par\li180 \par\li0\fi0{\b Remarks}\par\li180 \page #{\footnote Operation_ixoComPlusCommit} ${\footnote ixoComPlusCommit Operation} +{\footnote Operation:ixoComPlusCommit} K{\footnote ixoComPlusCommit} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b ixoComPlusCommit Operation \line\tx360\tab\fs18\b0{\uldb Script Opcodes}{\v Server_ScriptOpcodes} \tx3000\tab{\uldb Error Codes}{\v Msi_Errors} \par}\li180 Not used - only a placeholder. \par\li0\fi0{\b Parameters:}\par\li180 \par\li0\fi0{\b Sequencing Restrictions}\par\li180 \par\li0\fi0{\b Remarks}\par\li180 \page #{\footnote Operation_ixoComPlusRollback} ${\footnote ixoComPlusRollback Operation} +{\footnote Operation:ixoComPlusRollback} K{\footnote ixoComPlusRollback} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b ixoComPlusRollback Operation \line\tx360\tab\fs18\b0{\uldb Script Opcodes}{\v Server_ScriptOpcodes} \tx3000\tab{\uldb Error Codes}{\v Msi_Errors} \par}\li180 Not used - only a placeholder. \par\li0\fi0{\b Parameters:}\par\li180 \par\li0\fi0{\b Sequencing Restrictions}\par\li180 \par\li0\fi0{\b Remarks}\par\li180 \page #{\footnote Operation_ixoSecureTransformCache} ${\footnote ixoSecureTransformCache Operation} +{\footnote Operation:ixoSecureTransformCache} K{\footnote ixoSecureTransformCache} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b ixoSecureTransformCache Operation \line\tx360\tab\fs18\b0{\uldb Script Opcodes}{\v Server_ScriptOpcodes} \tx3000\tab{\uldb Error Codes}{\v Msi_Errors} \par}\li180 Caches the specified transform into the secure transforms directory for the  product. \par\li0\fi0{\b Parameters:}\par\li180 {\f1 Field 1: }Transform.  Full path to the transform to cache.\line \par\li0\fi0{\b Sequencing Restrictions}\par\li180 \par\li0\fi0{\b Remarks}\par\li180 \page #{\footnote MsiExecute_Object} ${\footnote MsiExecute Object} K{\footnote MsiExecute} +{\footnote Class:MsiExecute} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b MsiExecute Object \line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Script Operations}{\v Server_ScriptOpcodes} \par}\li180 The MsiExecute object is used to execute script operations either individually or as  part of a script file. This object can also enumerate a script file. Finally, the  MsiExecute object can be used to roll back one or more installations and clean up  back-up files and rollback scripts when they are not needed anymore. The MsiExecute object  is created by the {\uldb CreateExecutor}{\v MsiAuto_CreateExecutor} method. \par\li0{\b Properties}\par\li180 \par\li0{\b Methods}\par\li180 {\uldb EnumerateScript}{\v MsiExecute_EnumerateScript}\line {\uldb ExecuteRecord}{\v MsiExecute_ExecuteRecord}\line {\uldb RemoveRollbackFiles}{\v MsiExecute_RemoveRollbackFiles}\line {\uldb Rollback}{\v MsiExecute_Rollback}\line {\uldb RollbackFinalize}{\v MsiExecute_RollbackFinalize}\line {\uldb RunScript}{\v MsiExecute_RunScript}\line {\uldb CreateScript}{\v MsiExecute_CreateScript}\line {\uldb WriteScriptRecord}{\v MsiExecute_WriteScriptRecord}\line {\uldb CloseScript}{\v MsiExecute_CloseScript}\line \page #{\footnote MsiExecute_ExecuteRecord} ${\footnote MsiExecute.ExecuteRecord} +{\footnote MsiExecute:ExecuteRecord} K{\footnote ExecuteRecord} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b ExecuteRecord Method \line\tx360\tab\fs18\b0{\uldb MsiExecute Object}{\v MsiExecute_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Script Operations}{\v Server_ScriptOpcodes} \par}\li180 Executes a single script operation. The operation is defined by the given  {\uldb opcode}{\v Server_ScriptOpcodes}, and the operation parameters are passed in  an {\uldb MsiRecord}{\v MsiRecord_Object} object. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .ExecuteRecord({\i opcode, params})} \par{\i object}\line Required. The MsiExecute object. \par{\i\b opcode}\line Required. The opcode of the operation to be executed. \par{\i\b params}\line Required. An MsiRecord object containing the operation parameters. Note that this argument  is required even if the operation does not accept any parameters. In this case, the record  would be 0-length. \par\fi0\li0{\b Remarks}\par\li180 \page #{\footnote MsiExecute_RunScript} ${\footnote MsiExecute.RunScript} +{\footnote MsiExecute:RunScript} K{\footnote RunScript} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b RunScript Method \line\tx360\tab\fs18\b0{\uldb MsiExecute Object}{\v MsiExecute_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Script Operations}{\v Server_ScriptOpcodes} \par}\li180 Runs a script. The script may be an installation, advertisement or rollback script.  The type of the script is defined in the {\uldb ixoHeader}{\v Operation_ixoHeader}  record. Each type of script is executed in a slightly different way. !! Explanation !! \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .RunScript({\i scriptFile})} \par{\i object}\line Required. The MsiExecute object. \par{\i\b scriptfile}\line Required. The full path (string) to an installation script file. \par\fi0\li0{\b Remarks}\par\li180 {\uldb Scriptfile format}{\v Server_ScriptFormat} \par\fi0\li0{\b Return Values}\par\li180 {\f1 iesNoAction       = 0  } action not invoked, most-likely does not exist.\line {\f1 iesSuccess        = 1  } IDOK, completed actions successfully.\line {\f1 iesUserExit       = 2  } IDCANCEL, user terminated prematurely.\line {\f1 iesFailure        = 3  } IDABORT, unrecoverable error occurred.\line {\f1 iesSuspend        = 4  } IDRETRY, sequence suspended, to be resumed later.\line {\f1 iesFinished       = 5  } IDIGNORE, skip remainin actions, not an error\line {\f1 iesWrongState     = 6  } calling sequence error, not in initialized state.\line {\f1 iesBadActionData  = 7  } from Sequence(), invalid Action table record data. \line\line!! Rollback explanation!! \page #{\footnote MsiExecute_CreateScript} ${\footnote MsiExecute.CreateScript} +{\footnote MsiExecute:CreateScript} K{\footnote CreateScript} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b CreateScript Method \line\tx360\tab\fs18\b0{\uldb MsiExecute Object}{\v MsiExecute_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Script Operations}{\v Server_ScriptOpcodes} \par}\li180 Creates a script file that can be written to with  {\uldb WriteScriptRecord}{\v MsiExecute_WriteScriptRecord} and closed with  {\uldb CloseScript}{\v MsiExecute_CloseScript}.  Once the script is closed, it may be run with  {\uldb RunScript}{\v MsiExecute_RunScript}.  This method returns TRUE if the script  could be created, FALSE if it could not. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .CreateScript({\i scriptFile})} \par{\i object}\line Required. The MsiExecute object. \par{\i\b scriptfile}\line Required. The full path (string) to an installation script file to create. \page #{\footnote MsiExecute_WriteScriptRecord} ${\footnote MsiExecute.WriteScriptRecord} +{\footnote MsiExecute:WriteScriptRecord} K{\footnote WriteScriptRecord} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b WriteScriptRecord Method \line\tx360\tab\fs18\b0{\uldb MsiExecute Object}{\v MsiExecute_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Script Operations}{\v Server_ScriptOpcodes} \par}\li180 Writes an operation to the script opened by  {\uldb CreateScript}{\v MsiExecute_CreateScript}. The operation is defined by the given  {\uldb opcode}{\v Server_ScriptOpcodes}, and the operation parameters are passed in  an {\uldb MsiRecord}{\v MsiRecord_Object} object.  This method returns TRUE if the script  record could be written, FALSE if it could not. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .WriteScriptRecord({\i opcode, params})} \par{\i object}\line Required. The MsiExecute object. \par{\i\b opcode}\line Required. The opcode of the operation to be written. \par{\i\b params}\line Required. An MsiRecord object containing the operation parameters. Note that this argument  is required even if the operation does not accept any parameters. In this case, the record  would be 0-length. \page #{\footnote MsiExecute_CloseScript} ${\footnote MsiExecute.CloseScript} +{\footnote MsiExecute:CloseScript} K{\footnote CloseScript} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b CloseScript Method \line\tx360\tab\fs18\b0{\uldb MsiExecute Object}{\v MsiExecute_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Script Operations}{\v Server_ScriptOpcodes} \par}\li180 Closes the script created by {\uldb CreateScript}{\v MsiExecute_CreateScript}. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .CloseScript} \par{\i object}\line Required. The MsiExecute object. \page #{\footnote MsiExecute_EnumerateScript} ${\footnote MsiExecute.EnumerateScript} +{\footnote MsiExecute:EnumerateScript} K{\footnote EnumerateScript} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b EnumerateScript Method \line\tx360\tab\fs18\b0{\uldb MsiExecute Object}{\v MsiExecute_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Script Operations}{\v Server_ScriptOpcodes} \par}\li180 Returns a collection of {\uldb MsiRecords}{\v MsiRecord_Object}, each  containing a script record. See the remarks for the record format. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .EnumerateScript({\i scriptFile})} \par{\i object}\line Required. The MsiExecute object. \par{\i\b scriptfile}\line Required. The full path (string) to an installation script file. \par\fi0\li0{\b Remarks}\par\li180 The record contains the {\uldb opcode}{\v Server_ScriptOpcodes} in field 0 and  the parameters in the following fields. \page #{\footnote MsiExecute_RemoveRollbackFiles} ${\footnote MsiExecute.RemoveRollbackFiles} +{\footnote MsiExecute:RemoveRollbackFiles} K{\footnote RemoveRollbackFiles} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b RemoveRollbackFiles Method \line\tx360\tab\fs18\b0{\uldb MsiExecute Object}{\v MsiExecute_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Script Operations}{\v Server_ScriptOpcodes} \par}\li180 This method removes all rollback scripts and backup files on the local machine created before  the specified date, or all rollback scripts if the given date is 0. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .RemoveRollbackFiles({\i date})} \par{\i object}\line Required. The MsiExecute object. \par{\i\b date}\line Required. All rollback scripts and files created before this date are removed. If this value is 0, all  rollback scripts and files ever created are removed. \par\fi0\li0{\b Remarks}\par\li180 \page #{\footnote MsiExecute_Rollback} ${\footnote MsiExecute.Rollback} +{\footnote MsiExecute:Rollback} K{\footnote Rollback} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b Rollback Method \line\tx360\tab\fs18\b0{\uldb MsiExecute Object}{\v MsiExecute_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Script Operations}{\v Server_ScriptOpcodes} \par}\li180 Rolls back changes made to the system since the specified date.  This is accomplished by running  all rollback scripts registered since the specified date. Rollback scripts are registered  with the {\uldb RegisterRollbackScript}{\v MsiConfigurationManager_RegisterRollbackScript} method. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .Rollback({\i date})} \par{\i object}\line Required. The MsiExecute object. \par{\b\i date}\line Required, The date to roll back to. \par\fi0\li0{\b Remarks}\par\li180 \page #{\footnote MsiExecute_RollbackFinalize} ${\footnote MsiExecute.RollbackFinalize} +{\footnote MsiExecute:RollbackFinalize} K{\footnote RollbackFinalize} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b RollbackFinalize Method \line\tx360\tab\fs18\b0{\uldb MsiExecute Object}{\v MsiExecute_Object} \tx3000\tab{\uldb Msi Objects}{\v Msi_Objects} \tx5000\tab{\uldb Script Operations}{\v Server_ScriptOpcodes} \par}\li180 {\b Not yet implemented.} Calls either {\uldb Rollback}{\v MsiExecute_Rollback} or  {\uldb RemoveRollbackFiles}{\v MsiExecute_RemoveRollbackFiles}  depending on the return state of the install and the current rollback policy for the local machine. \par\li0{\b Syntax}\par\li500\fi-320 {\i object}{\b .RollbackFinalize} \par{\i object}\line Required. The MsiExecute object. \par\fi0\li0{\b Remarks}\par\li180 !!Additional notes!!  \page #{\footnote MsiApi_MsiDecomposeDescriptor} ${\footnote MsiApi.MsiDecomposeDescriptor} K{\footnote MsiDecomposeDescriptor} +{\footnote MsiApi::MsiDecomposeDescriptor} MsiDecomposeDescriptor\fs18\tab\cf1\fs16\cf1\fs18\par \pard\li120\sa120\sl240\tx360\tx600\tx840\uldb\b0\f1\fs20  \cf1\ul0\v \cf1\v0  \par Returns constituent parts of a descriptor.\par {\b UINT MsiDecomposeDescriptor(}\line  {\b LPCTSTR} szDescriptor,\tab\line  {\b LPCSTR} szProductCode,\tab// returned product\line  {\b LPCSTR} szFeatureId,\tab// returned feature\line  {\b LPCSTR} szComponentCode,\tab// returned component code\line  {\b DWORD} *pcchArgsOffset\tab// returned offset of args in descriptor\line  {\b);}\par {\b Parameters}\par \li300\fi-120 {\i szDescriptor}\line The component descriptor.\par {\i szProductCode}\line Points to a variable that receives the product code. The buffer  should be large enough to hold 39 characters. This parameter can be NULL.\par {\i szFeatureId}\line Points to a variable that receives the component code. The buffer  should be large enough to hold (MAX_FEATURE_CHARS + 1) characters.  This parameter can be NULL.\par {\i szComponentCode}\line Points to a variable that receives the component code. The buffer  should be large enough to hold 39 characters. This parameter can be NULL.\par {\i pcchArgsOffset}\line Points to a variable that will be filled with the offset to the arguments.  This is to handle the case when the descriptor is followed by arguments.  If, for example, the descriptor  is 70 characters long we will pass back 71 to indicate that the arguments  start at the 71st character. This parameter can be NULL. \line {\b Return Values}\par If the function succeeds, the return value is ERROR_SUCCESS.\par If the function fails, the return value is ERROR_INVALID_PARAMETER\par \page #{\footnote MsiApi_MsiGetProductCodeFromPackageCode} ${\footnote MsiApi.MsiGetProductCodeFromPackageCode} K{\footnote MsiGetProductCodeFromPackageCode} +{\footnote MsiApi::MsiGetProductCodeFromPackageCode} MsiGetProductCodeFromPackageCode\fs18\tab\cf1\fs16\cf1\fs18\par \pard\li120\sa120\sl240\tx360\tx600\tx840\uldb\b0\f1\fs20  \cf1\ul0\cf1\v0  \par Enumerates products on the machine, returning the first product  that has the given package code.\par {\b UINT MsiGetProductCodeFromPackageCode(}\line  {\b LPCTSTR} szPackageCode,\tab\line  {\b LPCSTR} szProductCode,\tab// returned product\line  {\b);}\par {\b Parameters}\par \li300\fi-120 {\i szPackageCode}\line The package code to find.\par {\i szProductCode}\line Points to a variable that receives the product code. The buffer  should be large enough to hold 39 characters.\par \line {\b Return Values}\par If the function succeeds, the return value is ERROR_SUCCESS.\par If the function fails, the return value is ERROR_UNKNOWN_PRODUCT\par \page #{\footnote MsiApi_MsiProvideComponentFromDescriptor} ${\footnote MsiApi.MsiProvideComponentFromDescriptor} +{\footnote MsiApi:MsiProvideComponentFromDescriptor} K{\footnote MsiProvideComponentFromDescriptor} MsiProvideComponentFromDescriptor\fs18\tab\cf1\fs16\cf1\fs18\par \pard\li120\sa120\sl240\tx360\tx600\tx840\uldb\b0\f1\fs20 Group \cf1\ul0\v _msi_Service_Functions@msi.hlp\cf1\v0  \par Return full component path, performing any necessary installation. Prompts for source if necessary. Increments usage count for the feature.\par \pard\li120\sl240\b\f1\fs16 UINT MsiProvideComponentFromDescriptor(\b0\par  \b LPCTSTR\b0  \i szDescriptor\i0 ,    // product,feature,component info\par  \b LPTSTR\b0  \i lpPathBuf\i0 ,        // returned path to component's keyfile\par  \b DWORD\b0  *\i pcchPathBuf\i0\tab\b ,\b0      // in/out buffer character count\par  \b DWORD\b0  *\i pcchArgsOffset\i0\tab    // returned offset of args in descriptor\par  \b );\par  \b0\par \pard\sb140\sl280\b\f1\fs24 Parameters\par \pard\li120\sl240\tx360\tx600\tx840\b0\i\f1\fs20 szDescriptor\par \pard\li360\sl240\tx360\tx600\tx840\i0 The component descriptor for the component to be provided.\par \pard\li120\sl240\tx360\tx600\tx840\i lpPathBuf\par \pard\li360\sl240\tx360\tx600\tx840\i0 Points to a variable that receives the path to the component. This parameter can be NULL.\par \pard\li120\sl240\tx360\tx600\tx840\i pcchPathBuf\par \pard\li360\sl240\tx360\tx600\tx840\i0 Points to a variable that specifies the size, in characters, of the buffer pointed to by the \i lpPathBuf\i0  parameter. Upon success of this function, the parameter will contain the length of the string in \i lpPathBuf\i0 .\par \pard\li360\sl240\tqr\tx280\tqr\tx360\tqr\tx600\tqr\tx840 If \i lpPathBuf\i0  is NULL, \i pcchBuf\i0  can be NULL.  \par \pard\li120\sl240\tx360\tx600\tx840\i pcchArgsOffset\par \pard\li360\sl240\tx360\tx600\tx840\i0 Points to a variable that will be filled with the offset to the arguments. This is to handle the case when the descriptor is followed by arguments, as it may be when passed to us by OLE. The offset will be the length of the descriptor. This parameter can be NULL.\par \pard\li120\sl160\tx360\tx600\tx840\fs12\par \pard\sb140\sl280\b\f1\fs24 Return Values\par \pard\li120\sa120\sl240\tx360\tx600\tx840\b0\f1\fs20 If the function succeeds, the return value is ERROR_SUCCESS.\par If the function fails, the return value is one of the following error codes:\par \pard\tx3300\tx6959\b Error Code\tab Meaning\tab\b0\f4\par \pard\tx6960\par \pard\tx3300\tx6959\f1 ERROR_INSTALL_SERVICE_FAILURE\tab Failure accessing the install service\tab\f4\par \f1 ERROR_INSTALL_USEREXIT\tab The user cancelled the installation\tab\f4\par \f1 ERROR_INSTALL_FAILURE\tab Fatal error during installation\tab\f4\par \f1 ERROR_INSTALL_SUSPEND\tab The installation was suspended and is incomplete\tab\f4\par \f1 ERROR_UNKNOWN_PRODUCT\tab The product code does not identify a know product\tab\f4\par \f1 ERROR_UNKNOWN_FEATURE\tab The feature Id does not identify a know feature\tab\f4\par \f1 ERROR_INSTALL_INVALIDARG\tab An invalid argument was passed to the function\tab\f4\par \f1 ERROR_BAD_CONFIGURATION\tab The configuration data is corrupt\tab\f4\par \pard\li120\sl160\tx360\tx600\tx840\f1\fs12\par \pard\sb140\sl280\b\f1\fs24 Remarks\b0\par \pard\f1\fs20 The function is a wrapper around MsiProvideComponent\f0\fs22\par \page #{\footnote MsiApi_MsiConfigureFeatureFromDescriptor} ${\footnote MsiApi.MsiConfigureFeatureFromDescriptor} +{\footnote MsiApi:MsiConfigureFeatureFromDescriptor} K{\footnote MsiConfigureFeatureFromDescriptor} \pard\li120\ri120\sb120\sa120\sl440\slmult0\b\f1\fs40 MsiConfigureFeatureFromDescriptor\cf2\fs16\'a6@\'a6\cf0\fs40\par \pard\li120\ri120\sa120\sl240\slmult0\tx360\tx600\tx840\uldb\b0\f1\fs20 Group\cf2\ul0\v _msi_Service_Functions@msi.hlp\cf0\v0  \par The \b MsiConfigureFeatureFromDescriptor\b0  configures the installed state for a productfeature.\par \pard\li120\ri120\sl240\slmult0\b\f1\fs16 UINT MsiConfigureFeatureFromDescriptor(\b0\par  \b LPCTSTR\b0  \i szDescriptor\i0 ,\tab         // descriptor\par  \b INSTALLSTATE\b0  \i eInstallState\i0    // install state\par  \b );\par  \b0\par \pard\sb140\sa140\sl280\slmult0\b\f1\fs24 Parameters\par \pard\li120\ri120\sl240\slmult0\tx360\tx600\tx840\b0\i\f1\fs20 szDescriptor\par \pard\li360\ri120\sa60\sl240\slmult0\tx360\tx600\tx840\i0 A descriptor that identifies the feature to be configured.\par \pard\li120\ri120\sl240\slmult0\tx360\tx600\tx840\i eInstallState\par \pard\li360\ri120\sa60\sl240\slmult0\tx360\tx600\tx840\i0 The install state desired for the feature. One of the following:\par \pard\tx3242\tx6959\b State\tab Meaning\tab\b0\f1\par \pard\tx6960\par \pard\tx3242\tx6959\f1 INSTALLSTATE_LOCAL\tab The feature should be installed locally\tab\f1\par \f1 INSTALLSTATE_ABSENT\tab The feature should be uninstalled\tab\f1\par \f1 INSTALLSTATE_SOURCE\tab The feature should be installed to run from source\tab\f1\par \f1 INSTALLSTATE_DEFAULT\tab The feature should be installed to its default location\tab\f1\par \pard\li120\ri120\sl160\slmult0\tx360\tx600\tx840\f1\fs12\par \pard\sb140\sa140\sl280\slmult0\b\f1\fs24 Return Values\par \pard\li120\ri120\sa120\sl240\slmult0\tx360\tx600\tx840\b0\f1\fs20 If the function succeeds, the return value is ERROR_SUCCESS.\par If the function fails, the return value is one of the following:\par Any {\uldb Action Error} {\v _msi_Action_Errors@msi.hlp} or {\uldb Initialization Error}{\v _msi_Initialization_Errors@msi.hlp}  \par Any error code relating to accessing a file.\par ERROR_INVALID_PARAMETER\par \pard\sb140\sa140\sl280\slmult0\b\f1\fs24 Remarks\par \pard\li120\ri120\sa120\sl240\slmult0\tx360\tx600\tx840\b0\f1\fs20 This function is a wrapper around \uldb MsiConfigureFeature\cf2\ul0\v _msi_MsiConfigureFeature@msi.hlp\cf0\v0  \par \pard\f0\fs22\par \page #{\footnote MsiApi_MsiQueryFeatureStateFromDescriptor} ${\footnote MsiApi.MsiQueryFeatureStateFromDescriptor} +{\footnote MsiApi:MsiQueryFeatureStateFromDescriptor} K{\footnote MsiQueryFeatureStateFromDescriptor} \pard\li120\ri120\sb120\sa120\sl440\slmult0\b\f1\fs40 MsiQueryFeatureStateFromDescriptor\cf2\fs16\'a6@\'a6\cf0\fs40\par \pard\li120\ri120\sa120\sl240\slmult0\tx360\tx600\tx840\uldb\b0\f1\fs20 Group\cf2\ul0\v _msi_Service_Functions@msi.hlp\cf0\v0  \par The \b MsiQueryFeatureStateFromDescriptor\b0  is a wrapper around MsiQueryFeatureState.\par \pard\li120\ri120\sl240\slmult0\b\f1\fs16 INSTALLSTATE MsiQueryFeatureStateFromDescriptor(\b0\par  \b LPCTSTR\b0  \i szDescriptor\i0 \tab         // descriptor\par  \b );\par  \b0\par \pard\sb140\sa140\sl280\slmult0\b\f1\fs24 Parameters\par \pard\li120\ri120\sl240\slmult0\tx360\tx600\tx840\b0\i\f1\fs20 szDescriptor\par \pard\li360\ri120\sa60\sl240\slmult0\tx360\tx600\tx840\i0 A descriptor that identifies the feature to be queried.\par \pard\li120\ri120\sl160\slmult0\tx360\tx600\tx840\f1\fs12\par \pard\sb140\sa140\sl280\slmult0\b\f1\fs24 Return Values\par \pard\li120\ri120\sa120\sl240\slmult0\tx360\tx600\tx840\b0\f1\fs20 The return values are the same as MsiQueryFeatureState\par \pard\sb140\sa140\sl280\slmult0\b\f1\fs24 Remarks\par \pard\li120\ri120\sa120\sl240\slmult0\tx360\tx600\tx840\b0\f1\fs20 This function is a wrapper around \uldb MsiQueryFeatureState\cf2\ul0\v _msi_MsiQueryFeatureState@msi.hlp\cf0\v0  \par \pard\f0\fs22\par \page #{\footnote MsiApi_MsiGetProductInfoFromScript} ${\footnote MsiApi.MsiGetProductInfoFromScript} K{\footnote MsiGetProductInfoFromScript} +{\footnote MsiApi:MsiGetProductInfoFromScript} \pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b MsiGetProductInfoFromScript\fs18\tab\tab\tab\tab\tab\tab{\uldb Group}{\v _msi_Service_Functions@msi.hlp} \par}\li180 The {\b MsiGetProductInfoFromScript} returns the product info for an installer  script file.\par {\b UINT __stdcall MsiGetProductInfoFromScript}(\line  {\b LPCDSTR} szScriptFile,{\tab\tab}// path to installer script file\line  {\b LPDSTR} lpProductBuf39,{\tab\tab}// buffer for product code string GUID, 39 chars\line  {\b LANGID} *plgidLanguage,{\tab\tab}// return language Id\line  {\b DWORD} *pdwVersion,{\tab\tab}// return version: Maj:Min:Build <8:8:16>\line  {\b LPDSTR} lpNameBuf,{\tab\tab\tab}// buffer to return readable product name\line  {\b DWORD} *pcchNameBuf,{\tab\tab}// in/out name buffer character count\line  {\b LPDSTR} lpPackageName,{\tab\tab}// buffer for package name\line  {\b DWORD} *pcchPackageNameBuf{\tab\tab}// in/out path buffer character count\line  {\b);}\par {\b Parameters}\par \li300\fi-120 {\i szScriptFile}\line The full path to the script file. {\i lpProductBuf39}\line Points to a buffer that receives the product code. {\i plgidLanguage}\line Points to a buffer that receives the product language. {\i pdwVersion}\line Points to a buffer that receives the product version. {\i lpNameBuf}\line Points to a buffer that receives the product name. {\i pcchNameBuf}\line Points to a variable that specifies the size, in characters, of the buffer pointed  to by the {\i lpNameBuf} parameter. This size should include the terminating  null character. When the function returns, this variable contains the  length of the class string stored in the buffer. The count returned does  not include the terminating null character. If the buffer is not big enough,  the function returns ERROR_MORE_DATA, and the variable contains the size  of the string, in characters, without counting the null character. {\i lpPackageNameBuf}\line Points to a buffer that receives the package name. {\i pcchPackageNameBuf}\line Points to a variable that specifies the size, in characters, of the buffer pointed  to by the {\i lpPackageNameBuf} parameter. This size should include the terminating  null character. When the function returns, this variable contains the  length of the class string stored in the buffer. The count returned does  not include the terminating null character. If the buffer is not big enough,  the function returns ERROR_MORE_DATA, and the variable contains the size  of the string, in characters, without counting the null character. {\b Return Values}\par If the function succeeds, the return value is ERROR_SUCCESS.\par If the function fails, the return value is one of the following:\line \trowd\trgaph108\trleft0 \cellx3550\cellx8400 \intbl{\b Error Code\cell Meaning\cell}\row \intbl ERROR_INVALID_PARAMETER\cell An invalid argument was passed to the function\cell\row \intbl ERROR_MORE_DATA\cell A buffer was too small to hold the entire value\cell\row \intbl ERROR_INSTALL_FAILURE\cell Could not get script info\cell\row \page #{\footnote MsiApi_MsiAdvertiseProduct} ${\footnote MsiApi.MsiAdvertiseProduct} +{\footnote MsiApi:MsiAdvertiseProduct} K{\footnote MsiAdvertiseProduct} \pard\li120\ri120\sb120\sa120\sl440\slmult0\b\f1\fs40 MsiAdvertiseProduct\cf2\fs16\'a6@\'a6\cf0\fs40\par \pard\li120\ri120\sa120\sl240\slmult0\tx360\tx600\tx840\uldb\b0\f1\fs20 Group\cf2\ul0\v _msi_Service_Functions@msi\cf0\v0  \par The \b MsiAdvertiseProduct\b0  function advertises a product.\par \pard\li120\ri120\sl240\slmult0\b\f1\fs16 UINT MsiAdvertiseProduct(\b0\par  \b LPCTSTR\b0  \i szPackagePath\i0 ,    // location of package\par  \b LPCTSTR\b0  \i szScriptfilePath\i0 , // if NULL, product is locally advertised\par  \b LPCTSTR\b0  \i szTransforms\i0 ,     // list of transforms to be applied\par  \b LANGID\b0  \i lgidLanguage\i0        // install language\par \b  );\par  \b0\par \pard\sb140\sa140\sl280\slmult0\b\f1\fs24 Parameters\par \pard\li120\ri120\sl240\slmult0\tx360\tx600\tx840\b0\i\f1\fs20 szLauncherPath\par \pard\li360\ri120\sa60\sl240\slmult0\tx360\tx600\tx840\i0 The full path to the launcher of the product being advertised.\par \pard\li120\ri120\sl240\slmult0\tx360\tx600\tx840\i szScriptfilePath\par \pard\li360\ri120\sa60\sl240\slmult0\tx360\tx600\tx840\i0 The full path to scriptfile that will be created with the advertise information. If this parameter is NULL then the product is advertised locally.\par \pard\li120\ri120\sl240\slmult0\tx360\tx600\tx840\i szTransforms\par \pard\li360\ri120\sa60\sl240\slmult0\tx360\tx600\tx840\i0 A semi-colon delimited list of transforms to be applied.\par \pard\li120\ri120\sl240\slmult0\tx360\tx600\tx840\i lgidLanguage\par \pard\li360\ri120\sa60\sl240\slmult0\tx360\tx600\tx840\i0 The language to choose if the install source supports multiple languages. If \i lgidLanguage\i0  is LANG_NEUTRAL then we do a "best match" ??? \par \pard\li120\ri120\sl160\slmult0\tx360\tx600\tx840\fs12\par \pard\sb140\sa140\sl280\slmult0\b\f1\fs24 Return Values\par \pard\li120\ri120\sa120\sl240\slmult0\tx360\tx600\tx840\b0\f1\fs20 If the function succeeds, the return value is ERROR_SUCCESS.\par If the function fails, the return value is one of the following:\par Any \uldb Action Error\cf2\ul0\v _msi_Action_Errors@msi.hlp\cf0\v0  or \uldb Initialization Error\cf2\ul0\v _msi_Initialization_Errors@msi.hlp\cf0\v0  \par Any error code relating to accessing a file.\par ERROR_INVALID_PARAMETER\par \page #{\footnote MsiApi_MsiProcessAdvertiseScript} ${\footnote MsiApi.MsiProcessAdvertiseScript} +{\footnote MsiApi:MsiProcessAdvertiseScript} K{\footnote MsiProcessAdvertiseScript} \pard\li120\ri120\sb120\sa120\sl440\slmult0\b\f1\fs40 MsiProcessAdvertiseScript\cf2\fs16\'a6@\'a6\cf0\fs40\par \pard\li120\ri120\sa120\sl240\slmult0\tx360\tx600\tx840\uldb\b0\f1\fs20 Group\cf2\ul0\v _msi_Service_Functions@msi\cf0\v0  \par The \b MsiProcessAdvertiseScript\b0  function processes an advertise script file into the supplied locations.\par \pard\li120\ri120\sl240\slmult0\b\f1\fs16 UINT MsiProcessAdvertiseScript(\b0\par  \b LPCTSTR\b0  \i szScriptFile\i0 ,\tab  // path to script from MsiAdvertiseProduct\par  \b LPCTSTR\b0  \i szIconFolder\i0 ,\tab  // optional path to folder for icon files and transforms\par  \b HKEY\b0  \i hRegData\i0 ,        // optional parent registry key\par  \b BOOL\b0  \i fShortcuts\i0 ,      // TRUE if shortcuts output\par  \b BOOL\b0  \i fRemoveItems\i0      // TRUE if specified items are to be removed\par \b  );\par  \b0\par \pard\sb140\sa140\sl280\slmult0\b\f1\fs24 Parameters\par \pard\li120\ri120\sl240\slmult0\tx360\tx600\tx840\b0\i\f1\fs20 szScriptFile\par \pard\li360\ri120\sa60\sl240\slmult0\tx360\tx600\tx840\i0 The full path to a scriptfile generated by \uldb MsiAdvertiseProduct\ul0  \v MsiApi_MsiAdvertiseProduct\v0 .\par \pard\li120\ri120\sl240\slmult0\tx360\tx600\tx840\i szIconFolder\i0\par \pard\li360\ri120\sa60\sl240\slmult0\tx360\tx600\tx840 An optional path to a folder in which advertised icon files and transform files should be placed.If this parameter is   NULL, no icon or transform files are written\par \pard\li120\ri120\sl240\slmult0\tx360\tx600\tx840\i hRegData\par \pard\li360\ri120\sa60\sl240\slmult0\tx360\tx600\tx840\i0 A registry key under which registry data will be mapped. If this parameter is NULL, the registry data  will be placed under the appropriate key, based on whether the advertisement is per-user or per-machine.\par \pard\li120\ri120\sl240\slmult0\tx360\tx600\tx840\i fShortcuts\par \pard\li360\ri120\sa60\sl240\slmult0\tx360\tx600\tx840\i0 TRUE if shortcuts should be created. If a special folder is returned by SHGetSpecialFolderLocation(?) it will hold the shortcuts.\par \pard\li120\ri120\sl240\slmult0\tx360\tx600\tx840\i fRemoveItems\par \pard\li360\ri120\sa60\sl240\slmult0\tx360\tx600\tx840\i0 TRUE if specified items are to be removed instead of being created.\par \pard\li120\ri120\sl160\slmult0\tx360\tx600\tx840\fs12\par \pard\sb140\sa140\sl280\slmult0\b\f1\fs24 Return Values\par \pard\li120\ri120\sa120\sl240\slmult0\tx360\tx600\tx840\b0\f1\fs20 If the function succeeds, the return value is ERROR_SUCCESS.\par If the function fails, the return value is one of the following error codes:\par \pard\tx3200\tx6959\b Error Code\f1\tab\f1 Meaning\tab\b0\f1\par \pard\tx6960\f1\par \pard\tx3200\tx6959 ERROR_INSTALL_FAILURE\tab Processing failed\tab\f1\par \f1 ERROR_INVALID_PARAMETER\tab An invalid argument was passed to the function\tab\f1\par \pard\li120\ri120\sl160\slmult0\tx360\tx600\tx840\f1\fs12\par \pard\cf3\f1\fs28\par \cf0\fs17\par \f0\fs22\par \pard\fi-1800\li1800\tx1800\cf1\fs20\par \page #{\footnote MsiApi_MsiAdvertiseScript} ${\footnote MsiApi.MsiAdvertiseScript} +{\footnote MsiApi:MsiAdvertiseScript} K{\footnote MsiAdvertiseScript} \pard\li120\ri120\sb120\sa120\sl440\slmult0\b\f1\fs40 MsiAdvertiseScript\cf2\fs16\'a6@\'a6\cf0\fs40\par \pard\li120\ri120\sa120\sl240\slmult0\tx360\tx600\tx840\uldb\b0\f1\fs20 Group\cf2\ul0\v _msi_Service_Functions@msi\cf0\v0  \par The \b MsiAdvertiseScript\b0  function processes an advertise script file into the supplied locations.\par \pard\li120\ri120\sl240\slmult0\b\f1\fs16 UINT MsiAdvertiseScript(\b0\par \b LPCTSTR\b0 \i szScriptFile\i0 ,\tab  // path to script from MsiAdvertiseProduct\par \b DWORD\b0   \i dwFlags\i0 ,\tab      // the bit flags from SCRIPTFLAGS\par \b PHKEY\b0   \i phRegData\i0 , // optional parent registry key if reg data to be populated in a user specified location\par \b BOOL\b0    \i fRemoveItems\i0 // TRUE if specified items are to be removed\par \b  );\par  \b0\par \pard\sb140\sa140\sl280\slmult0\b\f1\fs24 Parameters\par \pard\li120\ri120\sl240\slmult0\tx360\tx600\tx840\b0\i\f1\fs20 szScriptFile\par \pard\li360\ri120\sa60\sl240\slmult0\tx360\tx600\tx840\i0 The full path to a scriptfile generated by \uldb MsiAdvertiseProduct\ul0 \par \pard\li120\ri120\sl240\slmult0\tx360\tx600\tx840\i dwFlags\i0\par \pard\li360\ri120\sa60\sl240\slmult0\tx360\tx600\tx840\i0 The flags that control the advertisement. Can be a combination of the following \line \i0 SCRIPTFLAGS_CACHEINFO = \t 0x00000001L,   // set if the icons need to be created/ removed\line \i0 SCRIPTFLAGS_SHORTCUTS = \t 0x00000004L,   // set if the shortcuts needs to be created/ deleted\line \i0 SCRIPTFLAGS_MACHINEASSIGN = \t 0x00000008L,   // set if product to be assigned to machine\line \i0 SCRIPTFLAGS_REGDATA_APPINFO = \t 0x00000010L,  // set if the app advt registry data needs to be written/ removed\line \i0 SCRIPTFLAGS_REGDATA_CNFGINFO = \t 0x00000020L,  // set if the product cnfg mgmt. registry data needs to be written/ removed\line \i0 SCRIPTFLAGS_REGDATA = \t SCRIPTFLAGS_REGDATA_APPINFO | SCRIPTFLAGS_REGDATA_CNFGINFO \par \pard\li120\ri120\sl240\slmult0\tx360\tx600\tx840\i phRegData\par \pard\li360\ri120\sa60\sl240\slmult0\tx360\tx600\tx840\i0 A registry key under which registry data will be mapped. If this parameter is NULL, the registry data  will be placed under the appropriate key, based on whether the advertisement is per-user or per-machine.\par \pard\li120\ri120\sl240\slmult0\tx360\tx600\tx840\i fRemoveItems\par \pard\li360\ri120\sa60\sl240\slmult0\tx360\tx600\tx840\i0 TRUE if specified items are to be removed instead of being created.\par \pard\li120\ri120\sl160\slmult0\tx360\tx600\tx840\fs12\par \pard\sb140\sa140\sl280\slmult0\b\f1\fs24 Return Values\par \pard\li120\ri120\sa120\sl240\slmult0\tx360\tx600\tx840\b0\f1\fs20 If the function succeeds, the return value is ERROR_SUCCESS.\par If the function fails, the return value is one of the following error codes:\par \pard\tx3200\tx6959\b Error Code\f1\tab\f1 Meaning\tab\b0\f1\par \pard\tx6960\f1\par \pard\tx3200\tx6959 ERROR_INSTALL_FAILURE\tab Processing failed\tab\f1\par \f1 ERROR_INVALID_PARAMETER\tab An invalid argument was passed to the function\tab\f1\par \pard\li120\ri120\sl160\slmult0\tx360\tx600\tx840\f1\fs12\par \pard\cf3\f1\fs28\par \cf0\fs17\par \f0\fs22\par \pard\fi-1800\li1800\tx1800\cf1\fs20\par \page #{\footnote MsiApi_MsiGetPatchInfo} ${\footnote MsiApi.MsiGetPatchInfo} +{\footnote MsiApi:MsiGetPatchInfo} K{\footnote MsiGetPatchInfo} \pard\li120\ri120\sb120\sa120\sl440\slmult0\b\f1\fs40 MsiGetPatchInfo\cf2\fs16\'a6@\'a6\cf0\fs40\par \pard\li120\ri120\sa120\sl240\slmult0\tx360\tx600\tx840\uldb\b0\f1\fs20 Group\cf2\ul0\v _msi_Service_Functions@msi\cf0\v0  \par The \b MsiGetPatchInfo\b0  function returns information about installed patches.\par \pard\li120\ri120\sl240\slmult0\b\f1\fs16 UINT MsiGetPatchInfo(\b0\par  \b LPCTSTR\b0  \i szPatch\i0 ,    // patch code\par  \b LPCTSTR\b0  \i szProperty\i0 , // attribute name, case-sensitive\par  \b LPTSTR\b0  \i lpValueBuf\i0 ,     // returned value, NULL if not desired\par  \b DWORD\b0  \i *pcchValueBuf\i0        // in/out buffer character count\par \b  );\par  \b0\par \pard\sb140\sa140\sl280\slmult0\b\f1\fs24 Parameters\par \pard\li120\ri120\sl240\slmult0\tx360\tx600\tx840\b0\i\f1\fs20 szPatch\par \pard\li360\ri120\sa60\sl240\slmult0\tx360\tx600\tx840\i0 Specifies the patch code for the patch. A GUID.\par \pard\li120\ri120\sl240\slmult0\tx360\tx600\tx840\i szProperty\par \pard\li360\ri120\sa60\sl240\slmult0\tx360\tx600\tx840\i0 Specifies the property to be retrieved. INSTALLPROPERTY_LOCALPACKAGE is the only currently supported property.\par \pard\li120\ri120\sl240\slmult0\tx360\tx600\tx840\i lpValueBuf\par \pard\li360\ri120\sa60\sl240\slmult0\tx360\tx600\tx840\i0 Pointer to a buffer that receives the property value. This parameter can be NULL.\par \pard\li120\ri120\sl240\slmult0\tx360\tx600\tx840\i pcchValueBuf\par \pard\li360\ri120\sa60\sl240\slmult0\tx360\tx600\tx840\i0 Pointer to a variable that specifies the size, in characters, of the buffer pointed to by the lpValueBuf parameter. This size should include the terminating NULL character. If lpValueBuf is NULL, pcchValueBuf can be NULL.\par \pard\li120\ri120\sl160\slmult0\tx360\tx600\tx840\fs12\par \pard\sb140\sa140\sl280\slmult0\b\f1\fs24 Return Values\par \pard\li120\ri120\sa120\sl240\slmult0\tx360\tx600\tx840\b0\f1\fs20 If the function succeeds, the return value is ERROR_SUCCESS. If the function fails, the return values are the same as those returned from {\uldb MsiGetProductInfo}{\v _msi_MsiGetProductInfo@msi.hlp}\par \page #{\footnote MsiApi_MsiEnumPatches} ${\footnote MsiApi.MsiEnumPatches} +{\footnote MsiApi:MsiEnumPatches} K{\footnote MsiEnumPatches} \pard\li120\ri120\sb120\sa120\sl440\slmult0\b\f1\fs40 MsiEnumPatches\cf2\fs16\'a6@\'a6\cf0\fs40\par \pard\li120\ri120\sa120\sl240\slmult0\tx360\tx600\tx840\uldb\b0\f1\fs20 Group\cf2\ul0\v _msi_Service_Functions@msi\cf0\v0  \par The \b MsiEnumPatches\b0  function enumerates all patches applied to a single product, in the order the patches were applied.\par \pard\li120\ri120\sl240\slmult0\b\f1\fs16 UINT MsiEnumPatches(\b0\par  \b LPCTSTR\b0  \i szProduct\i0 ,    // product code\par  \b DWORD\b0  \i iPatchIndex\i0 , // 0-based index into installed patches\par  \b LPTSTR\b0  \i lpPatchBuf\i0 ,     // patch code buffer,  size=39\par  \b LPTSTR\b0  \i lpTransformsBuf\i0 ,     // transforms buffer\par  \b DWORD\b0  \i *pcchTransformsBuf\i0        // in/out transforms buffer character count\par \b  );\par  \b0\par \pard\sb140\sa140\sl280\slmult0\b\f1\fs24 Parameters\par \pard\li120\ri120\sl240\slmult0\tx360\tx600\tx840\b0\i\f1\fs20 szProduct\par \pard\li360\ri120\sa60\sl240\slmult0\tx360\tx600\tx840\i0 Specifies the product whose patches are to be enumerated.\par \pard\li120\ri120\sl240\slmult0\tx360\tx600\tx840\i iPatchIndex\par \pard\li360\ri120\sa60\sl240\slmult0\tx360\tx600\tx840\i0 Specifies the index of the patch to retrieve. This parameter should be zero for the first call to the MsiEnumPatches function and then incremented for subsequent calls.\par \pard\li120\ri120\sl240\slmult0\tx360\tx600\tx840\i lpPatchBuf\par \pard\li360\ri120\sa60\sl240\slmult0\tx360\tx600\tx840\i0 Pointer to a buffer that receives the patch code.  This buffer must be of size 39.\par \pard\li120\ri120\sl240\slmult0\tx360\tx600\tx840\i lpTransformsBuf\par \pard\li360\ri120\sa60\sl240\slmult0\tx360\tx600\tx840\i0 Pointer to a buffer that receives the list of transforms from the patch that are to be applied to the product package.  This list has the same format as the TRANSFORMS property.\par \pard\li120\ri120\sl240\slmult0\tx360\tx600\tx840\i pcchTransformsBuf\par \pard\li360\ri120\sa60\sl240\slmult0\tx360\tx600\tx840\i0 Pointer to a variable that specifies the size, in characters, of the buffer pointed to by the lpTransformsBuf parameter. This size should include the terminating NULL character.\par \pard\li120\ri120\sl160\slmult0\tx360\tx600\tx840\fs12\par \pard\sb140\sa140\sl280\slmult0\b\f1\fs24 Return Values\par \pard\li120\ri120\sa120\sl240\slmult0\tx360\tx600\tx840\b0\f1\fs20 If the function succeeds, the return value is ERROR_SUCCESS.\par If the function fails, the possible return values are identical to the return values of MsiEnumFeatures. \page #{\footnote MsiApi_MsiLoadString} ${\footnote MsiApi.MsiLoadString} +{\footnote MsiApi:MsiLoadString} K{\footnote MsiLoadString} \pard\li120\ri120\sb120\sa120\sl440\slmult0\b\f1\fs40 MsiLoadString\cf2\fs16\'a6@\'a6\cf0\fs40\par \pard\li120\ri120\sa120\sl240\slmult0\tx360\tx600\tx840\uldb\b0\f1\fs20 Group\cf2\ul0\v _msi_Service_Functions@msi\cf0\v0  \par The \b MsiLoadString\b0  function is an extension to the LoadString Windows API to permit specification of a string of a particular language(* This API is not automated)\par \pard\li120\ri120\sl240\slmult0\b\f1\fs16 UINT MsiLoadString(\b0\par  \b HINSTANCE\b0  \i hInstance\i0 ,    // handle to instance containing resource\par  \b UINT\b0  \i uID\i0 , // resource ID of string\par  \b LPDSTR\b0  \i lpBuffer\i0 ,     // buffer to hold string\par  \b int\b0  \i nBufferMax\i0 ,     // buffer length\par  \b WORD\b0  \i wLanguage\i0        // language\par \b  );\par  \b0\par \pard\sb140\sa140\sl280\slmult0\b\f1\fs24 Parameters\par \pard\li120\ri120\sl240\slmult0\tx360\tx600\tx840\b0\i\f1\fs20 hInstance\par \pard\li360\ri120\sa60\sl240\slmult0\tx360\tx600\tx840\i0 Specifies the instance containing the resource with the string.\par \pard\li120\ri120\sl240\slmult0\tx360\tx600\tx840\i uID\par \pard\li360\ri120\sa60\sl240\slmult0\tx360\tx600\tx840\i0 Specifies the resource ID of the string.\par \pard\li120\ri120\sl240\slmult0\tx360\tx600\tx840\i lpBuffer\par \pard\li360\ri120\sa60\sl240\slmult0\tx360\tx600\tx840\i0 Pointer to a buffer that receives the string.\par \pard\li120\ri120\sl240\slmult0\tx360\tx600\tx840\i nBufferMax\par \pard\li360\ri120\sa60\sl240\slmult0\tx360\tx600\tx840\i0 Lenght of buffer.\par \pard\li120\ri120\sl240\slmult0\tx360\tx600\tx840\i wLanguage\par \pard\li360\ri120\sa60\sl240\slmult0\tx360\tx600\tx840\i0 Value of particular language to be loaded\par \pard\li120\ri120\sl160\slmult0\tx360\tx600\tx840\fs12\par \pard\sb140\sa140\sl280\slmult0\b\f1\fs24 Return Values\par \pard\li120\ri120\sa120\sl240\slmult0\tx360\tx600\tx840\b0\f1\fs20 If the function succeeds, the return value is the codepage of the found string.\par If the function fails, it returns 0.  The function fails if the resource could not be found.\par \pard\sb140\sa140\sl280\slmult0\b\f1\fs24 Remarks\par \pard\li120\ri120\sa120\sl240\slmult0\tx360\tx600\tx840\b0\f1\fs20 MsiLoadString could be considered a LoadStringEx (in similar manner as FindResourceEx is to FindResource)\par  MsiLoadString attempts to find a matching string in the following order\par  \i (1)\i0 Language requested (wLanguage parameter)\par  \i (2)\i0 User-Interface language or User Locale language \par  \i (3)\i0 System Default language \par  \i (4)\i0 English (base English, not US English)\par  \i (5)\i0 Language Neutral \page #{\footnote MsiApi_MsiMessageBox} ${\footnote MsiApi.MsiMessageBox} +{\footnote MsiApi:MsiMessageBox} K{\footnote MsiMessageBox} \pard\li120\ri120\sb120\sa120\sl440\slmult0\b\f1\fs40 MsiMessageBox\cf2\fs16\'a6@\'a6\cf0\fs40\par \pard\li120\ri120\sa120\sl240\slmult0\tx360\tx600\tx840\uldb\b0\f1\fs20 Group\cf2\ul0\v _msi_Service_Functions@msi\cf0\v0  \par The \b MsiMessageBox\b0  function is a wrapper around the Windows MessageBox API that supports non-system codepages. It ignores the MB_APPMODAL, MB_TASKMODAL, and MB_SYSTEMMODAL flags.(* This API is not automated)\par \pard\li120\ri120\sl240\slmult0\b\f1\fs16 int MsiMessageBox(\b0\par  \b HWND\b0  \i hWnd\i0 ,    // handle to window\par  \b LPCDSTR\b0  \i szText\i0 ,     // text for message box\par  \b LPCDSTR\b0  \i szCaption\i0 ,     // text for caption for message box\par  \b UINT\b0  \i uiType\i0        // attributes for buttons to appear on message box\par  \b UINT\b0  \i uiCodepage\i0        // codepage to use\par  \b WORD\b0  \i iLangId\i0        // language to use\par \b  );\par  \b0\par \pard\sb140\sa140\sl280\slmult0\b\f1\fs24 Parameters\par \pard\li120\ri120\sl240\slmult0\tx360\tx600\tx840\b0\i\f1\fs20 hWnd\par \pard\li360\ri120\sa60\sl240\slmult0\tx360\tx600\tx840\i0 Specifies the handle to the window\par \pard\li120\ri120\sl240\slmult0\tx360\tx600\tx840\i szText\par \pard\li360\ri120\sa60\sl240\slmult0\tx360\tx600\tx840\i0 Specifies the text to appear in the message box\par \pard\li120\ri120\sl240\slmult0\tx360\tx600\tx840\i szCaption\par \pard\li360\ri120\sa60\sl240\slmult0\tx360\tx600\tx840\i0 Specifies the caption for the message box\par \pard\li120\ri120\sl240\slmult0\tx360\tx600\tx840\i uiType\par \pard\li360\ri120\sa60\sl240\slmult0\tx360\tx600\tx840\i0 Specifies the attributes for the message box (which buttons, icons, etc).  Same as Windows API MessageBox documentation\par \pard\li120\ri120\sl240\slmult0\tx360\tx600\tx840\i uiCodepage\par \pard\li360\ri120\sa60\sl240\slmult0\tx360\tx600\tx840\i0 Specifies the codepage to use\par \pard\li120\ri120\sl240\slmult0\tx360\tx600\tx840\i iLangId\par \pard\li360\ri120\sa60\sl240\slmult0\tx360\tx600\tx840\i0 Specifies the language to use\par \pard\li120\ri120\sl160\slmult0\tx360\tx600\tx840\fs12\par \pard\sb140\sa140\sl280\slmult0\b\f1\fs24 Return Values\par \pard\li120\ri120\sa120\sl240\slmult0\tx360\tx600\tx840\b0\f1\fs20 It returns the return value from the Windows DialogboxParam API. \page #{\footnote MsiApi_MsiIsProductElevated} ${\footnote MsiApi.MsiIsProductElevated} +{\footnote MsiApi:MsiIsProductElevated} K{\footnote MsiIsProductElevated} \pard\li120\ri120\sb120\sa120\sl440\slmult0\b\f1\fs40 MsiIsProductElevated\par \pard \fs20\b0The \b MsiIsProductElevated\b0  function checks the elevation state of a product.\par \pard\li120\ri120\sl240\slmult0\b\f1\fs16 UINT MsiIsProductElevated(\b0\par \b LPCTSTR\b0 \i  szProductCode\i0 ,\tab  // Product code to check.\par \b BOOL*\b0   \i  pfElevated\i0 ,\tab    // pointer to BOOL for result\par \b  );\par  \b0\par \pard\sb140\sa140\sl280\slmult0\b\f1\fs24 Parameters\par \pard\li120\ri120\sl240\slmult0\tx360\tx600\tx840\b0\i\f1\fs20 szProductCode\par \pard\li360\ri120\sa60\sl240\slmult0\tx360\tx600\tx840\i0 The full product code GUID of the product. This may not be NULL or empty.\par \pard\li120\ri120\sl240\slmult0\tx360\tx600\tx840\i pfElevated\i0\par \pard\li360\ri120\sa60\sl240\slmult0\tx360\tx600\tx840\i0 A pointer to a BOOL for the result. This may not be NULL.\par \pard\sb140\sa140\sl280\slmult0\b\f1\fs24 Return Values\par \pard\li120\ri120\sa120\sl240\slmult0\tx360\tx600\tx840\b0\f1\fs20 If the function succeeds, the return value is ERROR_SUCCESS, and the pfElevated is set to TRUE if the product is considered managed. This does not take into account policies such as  AlwaysInstallElevated, but does verify that LOCALSYSTEM owns the product's registry data. The function will always fail on Win9X.\par If the function fails, the return value is one of the following error codes:\par \pard\tx3200\tx6959\b Error Code\f1\tab\f1 Meaning\tab\b0\f1\par \pard\tx6960\f1\par \pard\tx3200\tx6959 ERROR_UNKNOWN_PRODUCT\tab The product is not currently known on this machine.\tab\f1\par \f1 ERROR_INVALID_PARAMETER\tab An invalid argument was passed to the function\tab\f1\par \f1 ERROR_BAD_CONFIGURATION\tab The configuration information for the product is corrup.\tab\f1\par \f1 ERROR_FUNCTION_FAILED\tab The call failed.\tab\f1\par \pard\li120\ri120\sl160\slmult0\tx360\tx600\tx840\f1\fs12\par \pard\cf3\f1\fs28\par \cf0\fs17\par \f0\fs22\par \pard\fi-1800\li1800\tx1800\cf1\fs20\par \page
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\darwin\src\msi\legacy\placefil.txt ===
; This file is used to specify where every file built by the NT build lab is
; binplaced relative to the root of the distribution point.  If a file is not
; listed, it will end up in the dump directory.
;
; The format is like this:
;
; <imagename>    <class name>
;
; where <imagename> is the filename.ext and <class name> is the directory off
; the root of the distribution point (retail is a placeholder for the root).
; If there are multiple class names for a single image, use a colon to separate
; each.
;
; All bits that ship in the NT base product and are installed with winnt32,
; must have a class name of retail.
;

msi.dll	instmsi\unicode
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\darwin\src\msitools\iceman\placefil.txt ===
; This file is used to specify where every file built by the NT build lab is
; binplaced relative to the root of the distribution point.  If a file is not
; listed, it will end up in the dump directory.
;
; The format is like this:
;
; <imagename>    <class name>
;
; where <imagename> is the filename.ext and <class name> is the directory off
; the root of the distribution point (retail is a placeholder for the root).
; If there are multiple class names for a single image, use a colon to separate
; each.
;
; All bits that ship in the NT base product and are installed with winnt32,
; must have a class name of retail.
;

;
; postbuild batch file
;
icecub.mak        instmsi\cub

;
; CUB files
;
mergemod.cub      instmsi\cub
darice.cub        instmsi\cub
logo.cub          instmsi\cub
XPlogo.cub          instmsi\cub


;
; binary table import files
;
full_bin.idt      instmsi\cub
logo_bin.idt      instmsi\cub
XPlogo_bin.idt    instmsi\cub
mod_bin.idt       instmsi\cub


;
; custom action DLLs and scripts
;

msiice.dll        instmsi\cub\binary
msiice11.dll      instmsi\cub\binary
msiice15.dll      instmsi\cub\binary
modice.dll        instmsi\cub\binary
shrice.dll        instmsi\cub\binary
shrice11.dll      instmsi\cub\binary
shrice15.dll      instmsi\cub\binary
ice08.vbs         instmsi\cub\binary
ice09.vbs         instmsi\cub\binary
ice32.vbs         instmsi\cub\binary
ice61.vbs         instmsi\cub\binary
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\darwin\src\msitools\msi9xmig\placefil.txt ===
; This file is used to specify where every file built by the NT build lab is
; binplaced relative to the root of the distribution point.  If a file is not
; listed, it will end up in the dump directory.
;
; The format is like this:
;
; <imagename>    <class name>
;
; where <imagename> is the filename.ext and <class name> is the directory off
; the root of the distribution point (retail is a placeholder for the root).
; If there are multiple class names for a single image, use a colon to separate
; each.
;
; All bits that ship in the NT base product and are installed with winnt32,
; must have a class name of retail.
;

;
; migration dll
;
migrate.dll         win9xmig\msi
msintmig.dll        win9xmig\msi
msi9xmig.dll        win9xmig\msi
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\darwin\src\msitools\msiloc\msiloc.txt ===
MSILOC.EXE -- Copyright (c) Microsoft Corporation 2000-2001.  All rights reserved.

- compile unicode for Windows NT 4.0, Windows 2000, Windows XP
- compile ansi for Windows 9X
- compiled from msiloc.cpp sample code

FEATURES:
1.) Generates a resource file (.rc) from a Windows Installer database (.msi)
2.) Imports a resource dll (.dll) into a Windows Installer database (.msi)

==================================================================================================================
msiloc /? will display the command line options availabe.  A summary of the options is provided below.

EXPORT .msi to .rc
	msiloc.exe -e {database} {option 1} [{option 2}...]
IMPORT .dll (.res) into .msi
	msiloc.exe -i {database} {resource dll} {option 1} [{option 2}...]

OPTIONS
-d *		// all dialogs, available in both export and import modes
-d {dialog}		// specific dialog, available in both export and import modes
-s * *		// all strings, available in import mode
-s {table} {column}	// specific table column, available in export mode
-x		// no binary data, available in export mode
-c {database}	// save to new database, available in export and import modes

The -d {dialog} option can be specified up to 32 times on the command line.
The -s {table} {column} option can be specified up to 32 times on the command line.
The -d * option cannot be used with the -d {dialog} option.

The tool does not automattically create a compiled resource file (.res).  Use the following command to create it. RC.EXE is availabe with Microsoft Visual Studio and is the resource compiler.
	rc.exe {resource file}

For import, the tool requires that the localized compiled resource file (.res) be linked into a dynamic link library (.dll).  Use the following command to create it.  LINK.EXE is available with Microsoft Visual Studio and is the linker.
	link.exe /DLL /NOENTRY /NODEFAULTLIB /MACHINE:iX86 /OUT:{resource dll} {compiled .res file}

==================================================================================================================
Important Information:

1.) Exporting a MSI to RC only works with a database that is marked langauge neutral.  To check the codepage of
      your database, use the msiinfo tool with the following command line.  The msiinfo tool is provided in the
    Microsoft Platform SDK.
	msiinfo {database} /d
    Alternatively, you can use the MsiDatabaseExport API to export the _ForceCodepage table.

2.) You can only import a localized resource file via the DLL into a database whose codepage is LANGUAGE_NEUTRAL
    or whose codepage matches the codepage of the localized resource file.

3.) When importing on Windows 9x, the User/System Locale must be set to the codepage of the localized resource
    file.

4.) When importing on WindowsNT/Windows2000, the codepage of the localized resource file must be installed on
    the system.

5.) The tool creates three tables -- _RESDialogs, _RESControls, and _RESStrings for maintaining resource Id's
    and for permitting correct update of the data.  Therefore the database is always opened read/write.  In
    addition the database you import into must contain these tables.  Generally this should be the same database
    you exported from, or a copy of that database after the export.

6.) The RichEdit control is exported as Static Text.

7.) Tab order and attributes are not utilized by the tool.  Billboards are not exported, but a groupbox
    placeholder is put on the dialog where the Billboard would appear on the dialog.

8.) When exporting binary data, the temporary files are placed in the folder returned by the Win32 API GetTempFolder().
    These files can be deleted after the resource file (.rc) is compiled (.res).

9.) Because radiobutton properties can be used, import only updates the width, height, and text.  The x and y
    dimensions of radiobuttons are local to the group to which they belong and those values could change among
    the various radiobutton groups.  Furthermore, if a property is used more than once, the last property
    imported wins out.  Each time the radiobutton is found as control, the RadioButton table is updated with
    the new data.  If a particular radiobutton is not localized, it could overwrite the localized data of a
    radiobutton with the same property that was found earlier.

10.) A resource file has a limitation to the maximum length of a string.  The tool outputs the string
     "!! STR OVER LIMIT!!" for this occurence and upon import will ignore the update of the string. 

11.) The tool does not support localization of the _SummaryInformation stream of the Windows Installer database.
    In addition, it does not permit import of new dialogs, new controls, and/or new strings.

==================================================================================================================
KNOWN ISSUES

1.) Specifying the same column of a table more than once when exporting strings will cause the generation of
    an invalid resource file (due to duplicate ID's since the tool attempts to maintain the same resource IDs).

2.) Specifying the same dialog more than once when exporting specific dialogs will cause the generation of an
    invalid resource file (due to duplicate ID's since the tool attempts to maintain the same resource IDs).
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\darwin\src\msitools\msiloc\sdkfiles\readme.txt ===
MSILOC.EXE -- Copyright (c) Microsoft Corporation 2000-2001.  All rights reserved.

- compile unicode for Windows NT 4.0, Windows 2000, Windows XP
- compile ansi for Windows 9X
- compiled from msiloc.cpp sample code

FEATURES:
1.) Generates a resource file (.rc) from a Windows Installer database (.msi)
2.) Imports a resource dll (.dll) into a Windows Installer database (.msi)

==================================================================================================================
 BUILD Instructions

The sample can be built by running the following command from a Platform SDK build environment window: 

	nmake

In order to build the sample clean, the following commands should be used: 
	nmake clean
	nmake
==================================================================================================================

msiloc /? will display the command line options availabe.  A summary of the options is provided below.

EXPORT .msi to .rc
	msiloc.exe -e {database} {option 1} [{option 2}...]
IMPORT .dll (.res) into .msi
	msiloc.exe -i {database} {resource dll} {option 1} [{option 2}...]

OPTIONS
-d *		// all dialogs, available in both export and import modes
-d {dialog}		// specific dialog, available in both export and import modes
-s * *		// all strings, available in import mode
-s {table} {column}	// specific table column, available in export mode
-x		// no binary data, available in export mode
-c {database}	// save to new database, available in export and import modes

The -d {dialog} option can be specified up to 32 times on the command line.
The -s {table} {column} option can be specified up to 32 times on the command line.
The -d * option cannot be used with the -d {dialog} option.

The tool does not automattically create a compiled resource file (.res).  Use the following command to create it. RC.EXE is availabe with Microsoft Visual Studio and is the resource compiler.
	rc.exe {resource file}

For import, the tool requires that the localized compiled resource file (.res) be linked into a dynamic link library (.dll).  Use the following command to create it.  LINK.EXE is available with Microsoft Visual Studio and is the linker.
	link.exe /DLL /NOENTRY /NODEFAULTLIB /MACHINE:iX86 /OUT:{resource dll} {compiled .res file}

==================================================================================================================
Important Information:

1.) Exporting a MSI to RC only works with a database that is marked langauge neutral.  To check the codepage of
      your database, use the msiinfo tool with the following command line.  The msiinfo tool is provided in the
    Microsoft Platform SDK.
	msiinfo {database} /d
    Alternatively, you can use the MsiDatabaseExport API to export the _ForceCodepage table.

2.) You can only import a localized resource file via the DLL into a database whose codepage is LANGUAGE_NEUTRAL
    or whose codepage matches the codepage of the localized resource file.

3.) When importing on Windows 9x, the User/System Locale must be set to the codepage of the localized resource
    file.

4.) When importing on WindowsNT/Windows2000, the codepage of the localized resource file must be installed on
    the system.

5.) The tool creates three tables -- _RESDialogs, _RESControls, and _RESStrings for maintaining resource Id's
    and for permitting correct update of the data.  Therefore the database is always opened read/write.  In
    addition the database you import into must contain these tables.  Generally this should be the same database
    you exported from, or a copy of that database after the export.

6.) The RichEdit control is exported as Static Text.

7.) Tab order and attributes are not utilized by the tool.  Billboards are not exported, but a groupbox
    placeholder is put on the dialog where the Billboard would appear on the dialog.

8.) When exporting binary data, the temporary files are placed in the folder returned by the Win32 API GetTempFolder().
    These files can be deleted after the resource file (.rc) is compiled (.res).

9.) Because radiobutton properties can be used, import only updates the width, height, and text.  The x and y
    dimensions of radiobuttons are local to the group to which they belong and those values could change among
    the various radiobutton groups.  Furthermore, if a property is used more than once, the last property
    imported wins out.  Each time the radiobutton is found as control, the RadioButton table is updated with
    the new data.  If a particular radiobutton is not localized, it could overwrite the localized data of a
    radiobutton with the same property that was found earlier.

10.) A resource file has a limitation to the maximum length of a string.  The tool outputs the string
     "!! STR OVER LIMIT!!" for this occurence and upon import will ignore the update of the string. 

11.) The tool does not support localization of the _SummaryInformation stream of the Windows Installer database.
    In addition, it does not permit import of new dialogs, new controls, and/or new strings.

==================================================================================================================
KNOWN ISSUES

1.) Specifying the same column of a table more than once when exporting strings will cause the generation of
    an invalid resource file (due to duplicate ID's since the tool attempts to maintain the same resource IDs).

2.) Specifying the same dialog more than once when exporting specific dialogs will cause the generation of an
    invalid resource file (due to duplicate ID's since the tool attempts to maintain the same resource IDs).
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\darwin\src\msitools\msimig\whatami.txt ===
this is an old utility for migrating msi 1.0 cached packages into the 
correct msi 1.1+ cache location.

we should never need to build or modify this code again.
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\darwin\src\msitools\msishort\whatami.txt ===
this was a dll utility we shipped as a workaround for a problem with 
resolving darwin shortcuts on win9x platforms.  we were either too 
close to shipping or this was right after we shipped for it to make sense
to fix it in msi.dll.  i believe Office picked up this dll.

we should never need to build or modify this again.
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\darwin\src\msitools\scripts\wireadme.txt ===
Copyright (c) Microsoft Corporation. All rights reserved.
Windows Installer utility scripts for use with Windows Scripting Host

WiLstPrd.vbs - lists products, product properties, features, and components
WiImport.vbs - imports files to an MSI database
WiExport.vbs - exports files from an MSI database
WiSubStg.vbs - adds a transform or nested MSI as a substorage
WiStream.vbs - adds an external stream to a MSI package (e.g CAB file)
WiMerge.vbs  - merges two MSI databases
WiGenXfm.vbs - generates a transform from two databases, or compares them
WiUseXfm.vbs - applies a transform to an MSI database
WiLstXfm.vbs - lists an MSI transform file (CSCRIPT only)
WiDiffDb.vbs - lists the differences between two databases (CSCRIPT only)   
WiLstScr.vbs - lists an installer script file (CSCRIPT only)
WiSumInf.vbs - displays and updates summary information stream
WiPolicy.vbs - manages installer policy settings
WiLangId.vbs - reports and updates the language and codepage of a package
WiToAnsi.vbs - copies a Unicode text file to the same or a new Ansi text file
WiFilVer.vbs - updates File table sizes and versions from source file tree
WiMakCab.vbs - generates compressed file cabinets and updates package
WiRunSQL.vbs - executes SQL statements against an installer database
WiTextIn.vbs - copies an ANSI text file into a database string column value
WiCompon.vbs - lists components and their composition in an installer database
WiFeatur.vbs - lists features and their composition in an installer database
WiDialog.vbs - previews all or specified dialogs in an installer database

All scripts display help screens describing their command line arguments,
either if the first argument contains a ?, or if too few arguments are given.
Scripts return a value of 0 for success, 1 if help invoked, or 2 if failure.

Windows Scripting Host is actually two hosts, use //? to obtain help:
Cscript.exe displays to standard out - useful for batch files and build scripts
Wscript.exe displays the output in a window - the default for extension .VBS
When run from a Win NT DOS box, only the base name needs to be specified, and
if the tools are on the PATH, then they will be found like EXE or BAT files.
To redirect output to a file, you must use Cscript {scriptname}.VBS > {file}.

To download and install Windows Scripting Host (not required for Windows2000):
  http://msdn.microsoft.com/scripting/windowshost/download/default.htm
To download and update Windows scripting engines:
  http://msdn.microsoft.com/scripting/vbscript/download/vbsdown.htm
or
  http://www.microsoft.com/msdownload/vbscript/scripting.asp

The utility makecab.exe is located in the Windows Installer SDK
at \Patching\makecab.exe.

For more information about these samples, see the section
"Windows Installer Scripting Examples" in the Windows Installer help files.
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\darwin\src\samples\create.dll\sdkfiles\readme.txt ===
//+-------------------------------------------------------------------------
//
//  Microsoft Windows
//
//  Copyright (C) Microsoft Corporation, all rights reserved
//
//  Notes: DLL custom action sample , must be used in conjunction with the DLL
//         custom actions included in process.cpp and remove.cpp
//--------------------------------------------------------------------------

Building the sample
The sample can be built by running the following command from a Platform SDK build environment window: 

	nmake

In order to build the sample clean, the following commands should be used: 
	nmake clean
	nmake
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\darwin\src\samples\process.dll\sdkfiles\readme.txt ===
//+-------------------------------------------------------------------------
//
//  Microsoft Windows
//
//  Copyright (C) Microsoft Corporation, all rights reserved
//
//
//  Notes: DLL custom action sample , must be used in conjunction with the DLL
//         custom actions included in create.cpp and remove.cpp
//--------------------------------------------------------------------------

Building the sample
The sample can be built by running the following command from a Platform SDK build environment window: 

	nmake

In order to build the sample clean, the following commands should be used: 
	nmake clean
	nmake
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\darwin\src\samples\remove.dll\sdkfiles\readme.txt ===
//+-------------------------------------------------------------------------
//
//  Microsoft Windows
//
//  Copyright (C) Microsoft Corporation, all rights reserved
//
//
//  Notes: DLL custom action sample , must be used in conjunction with the DLL
//         custom actions included in create.cpp and process.cpp
//--------------------------------------------------------------------------

The sample can be built by running the following command from a Platform SDK build environment window: 

	nmake

In order to build the sample clean, the following commands should be used: 
	nmake clean
	nmake
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\darwin\src\samples\tutorial.dll\sdkfiles\readme.txt ===
//+-------------------------------------------------------------------------
//
//  Microsoft Windows
//
//  Copyright (C) Microsoft Corporation, all rights reserved
//
//--------------------------------------------------------------------------

Build Instructions
The sample can be built by running the following command from a Platform SDK build environment window: 

	nmake

In order to build the sample clean, the following commands should be used: 
	nmake clean
	nmake
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\darwin\src\sdk\dbreadme.txt ===
Copyright (c) 1999-2001, Microsoft Corporation
Windows Installer sample databases and database schemas.

SUMMARY

The Database folder contains Windows Installer schema files you should use to create installations with 
Windows Installer version 1.5. The schema files for earlier Windows Installer versions are in the folders 
100, 110, and 120. For more information see the help file "Released Versions of Windows Installer" in the 
SDK documentation. The samples provided in this folder are not supported by Microsoft Corporation. They 
are provided "as is" because we believe they may be useful to you. 

100 - This folder contains Windows Installer schema files you should use to create installations with 
Windows Installer version 1.0. 

110 - This folder contains Windows Installer schema files you should use to create installations with 
Windows Installer version 1.1. 

120 - This folder contains Windows Installer schema files you should use to create installations with 
Windows Installer version 1.2. 

INTL - This folder contains default international strings for error and action text database fields in the form 
of .idt files. Developers should merge one of these into their schema file to get the resources for their 
language. For more information see the help files "Localizing a Windows Installer Package" and 
"Localizing the Action and Text Tables" in the SDK documentation.

Schema.msi - An empty Windows Installer database with all tables in the correct schema for a Windows 
Installer package (.msi file).

Schema.msm -  An empty Windows Installer database with all tables in the correct schema for a Windows 
Installer merge module (.msm file). For more information see the help section "Merge Modules" in the SDK 
documentation.

Sequence.msi - The recommended default sequence tables for a Windows Installer package (.msi file). For 
more information see the help section "Using a Sequence Table" in the SDK documentation.

Schema.log - A text file describing the schema changes between the versions.

UISample.msi - A Windows Installer database with a sample default user interface. For more information 
see the help section "Windows Installer Examples" in the SDK documentation.
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\darwin\src\sdk\redist.txt ===
======================================
Windows Installer Redistributables 2.0
======================================

The Windows Installer redistributables may only be redistributed as part 
of INSTMSI.EXE.  You may not redistribute any of the DLLs in INSTMSI.EXE 
except by using INSTMSI.EXE.  You may not modify INSTMSI.EXE

INSTMSI.EXE is a self-extracting executable that will install the 
Windows Installer redistributables only if there is not a more recent 
version of the DLLs in the system directory. INSTMSI.EXE will write the 
registry keys required by Windows Installer.

In addition to the rights granted in Section 1 of the Microsoft Platform 
Software Development Kit End User License Agreement ("Agreement"), with 
respect to the Redistributable Code, you have the following 
non-exclusive, royalty free rights subject to the
Distribution Requirements detailed in Section 1 of the Agreement:

(1) You may distribute WIN9X\INSTMSI.EXE for use only on Windows 95, Windows 98, and Windows ME

(2) You may distribute WINNT\INSTMSI.EXE for use only on Windows NT Version 4 and Windows 2000
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\darwin\src\sdk\preadme.txt ===
Copyright (c) 1999-2001, Microsoft Corporation
Windows Installer sample patching.

The samples in this folder assist developers in the development of file patches and updates that can be used 
with Windows Installer installation packages. The bin directory of your SDK has useful patch creation utilities 
used to create a Windows installer patch package sample patch creation files (.pcp files). A .pcp file may be 
used with the utilities Msimsp.exe and Patchwiz.dll to generate a Windows Installer patch package (.msp 
extension). Neither are the sample .pcp files provided in this folder, nor the patch creation tools provided 
in the bin directory are supported by Microsoft Corporation. They are provided "as is" because we believe they 
may be useful to you. 

Template.pcp - An empty patch creation properties file (.pcp file). The .pcp file is a binary database file 
with the same format as a Windows Installer database (an .msi file) but uses a different database schema. 
Authors may create a .pcp file by using a table editor such Orca to enter their information into the blank 
.pcp database provided template.pcp. An example of the procedure is discussed in the help file "A Small 
Update Patching Example" in the SDK documentation. For more information about patch creation 
properties files see the help file "Patchwiz.dll" in the SDK documentation.

Example.pcp - An example of a populated patch creation properties file (.pcp file). An example of the 
procedure is discussed in the help file "A Small Update Patching Example" in the SDK documentation. For 
more information about patch creation properties files see the help file "Patchwiz.dll" in the SDK 
documentation.

Useful patch creation tools shipped with your SDK are described below.

Makecab.exe - This is a data compression tool that developers can use to make compressed cabinet files for 
use with Windows Installer installations. For more information about makecab.exe see the help file 
"MakeCAB: A Compression and Disk Layout Tool" in the Platform SDK documentation. Windows 
Installer developers must take care to properly author their installation database to match up with the files in 
their cabinets. For more information about how to use cabinet files with the Windows Installer you should 
see the help file "Using Cabinets and Compressed Sources" in the SDK documentation. Type makcab.exe /? 
on a command line to display makecab.exe syntax and options. 

Apatch.exe - This is a command line tool used to apply an ordinary patch file to a file. This utility is 
intended for use with ordinary patch files and will not work with Windows Installer patch packages (.msp 
files). The utility is provided merely as an aid to development. Type apatch.exe /? on a command line to 
display apatch.exe syntax.  

Mpatch.exe - This is a command line tool that calls mspatchc.dll to generate a regular patch file. This utility 
is intended for use with ordinary patch files and will not work with Windows Installer patch packages (.msp 
files). The utility is provided merely as an aid to development. Type mpatch.exe /? on a command line to 
display apatch.exe syntax. 

Mspatchc.dll - This DLL is used by mpatch.exe.

Msimsp.exe - This tool calls PatchWiz.dll to generate a Windows Installer patch package (.msp file) by 
passing in a patch creation properties file (.pcp file) and the path to the patch package being created. The 
tool can also be used to create a log file and to specify a temporary folder in which the transforms, cabinets 
and files used to create the patch package are saved. Msimsp.exe is the recommended method for generating 
a Windows Installer patch package, for more information see the help files "Patching" and "Msimsp.exe" in 
the SDK documentation. Type msimsp.exe /? on a command line to display msimsp.exe syntax and options. 

Patchwiz.dll - This DLL is used by msimsp.exe. Patchwiz.dll called by msimsp.exe is the recommended 
method for generating Windows Installer patch packages (.msi files). For more information see  the help 
files "Patching" and "Patchwiz.dll" in the SDK documentation.
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\darwin\src\sdk\readme.txt ===
Windows Installer 2.0 SDK Release  -  Microsoft Corporation 

---------------------------------------------------------------------------
This release includes the following components, in the indicated folders:

    ReadMe.txt 		- this file, contents and notes
    License.rtf		- SDK license agreement
    Redist.txt 		- redistibution terms and conditions

Redist - components that may be redistributed with your application
    WINNT\InstMsi.exe 	- Windows Installer self-installer for use with Windows NT4 and Windows 2000
    WIN9x\InstMsi.exe 	- Windows Installer self-installer for use with Windows 95, Windows 98, Windows ME

Help
    Msi.chm+Msi.chi	- Documentation for Windows Installer, HTML help format (see note below)

Include
    Msi.h		- install management API functions
    MsiQuery.h 		- database and custom action API functions
    MsiDefs.h  		- property names and database data bit flags
    MergeMod.h 		- definitions for use with MergeMod.dll COM object
    PatchApi.h 		- definitions for use with MsPatchC.lib and MsPatchC.dll
    PatchWiz.h 		- definitions for use with the installer patch package creation tool

Lib
    Msi.lib	     	- import lib for MSI API functions
    MsPatchC.lib	- import lib for patch generation engine MsPatchC.dll
    PatchWiz.lib 	- import lib for patch package creation tool PatchWiz.dll

Tools
    Instlr11.adm   	- used with the Group Policy Editor. See the "System Policy" help topic.
    Instlr1.adm	   	- used with the Group Policy Editor and Windows Installer version 1.0
    Orca.msi     	- graphical table editor supporting validation and merge modules
    MsiVal2.msi  	- command-line installer package validation tool, provides darice.cub and logo.cub files
    MsiDb.exe    	- database import, export, merge, transform
    MsiMig.dll          - Custom Action for migration of 1.0 cached packages to 1.1 of the Windows Installer
    MsiMig.exe          - Command line utility for administrators migrating 1.0 cached packages to 1.1
    MsiInfo.exe  	- summary information property manager, string pool validation
    MsiMerg.exe  	- merges two databases
    MsiTran.exe  	- generates and applies database transforms
    MsiZap.exe   	- used to remove selected MSI management data from a machine. Use with caution.
    MsiCert.exe         - used to populate the MsiDigitalSignature and MsiDigitalCertificate tables
    MsiFiler.exe        - used to populate file versions, sizes, and languages
    MsiTool.mak		- shared makefile for tools and custom actions
    MergeMod.dll	- COM object providing support for installer merge modules
    WiLogUtl.exe        - Windows Installer Verbose Setup Log Analyzer, useful for reading Windows Installer logfiles

Tools\110
    darice.cub          - Windows Installer version 1.1 complete validation suite
    mergemod.cub        - Windows Installer version 1.1 merge module validation suite
    logo.cub            - Windows Installer version 1.1 logo validation suite

Tools\120
    darice.cub          - Windows Installer version 1.2 complete validation suite
    mergemod.cub        - Windows Installer version 1.2 merge module validation suite
    logo.cub            - Windows Installer version 1.2 logo validation suite

Web
    msistuff.exe        - used to populate resources in setup.exe.  Only works on Windows NT.
    setup.exe           - internet download executable for creating installs from the web


Patching
    PReadme.txt         - readme describing contents of this folder
    MsiMsp.exe    	- patch package creation tool
    MakeCab.exe	  	- general compressed file cabinet generation tool, not installer-specific
    MPatch.exe   	- test application to create a patch file using MsPatchC.dll
    APatch.exe   	- test application to apply a patch using MsPatchA.dll (part of InstMsi package)
    MsPatchC.dll	- patch file creation engine, used by PatchWiz.dll and MPatch.exe
    PatchWiz.dll 	- installer patch package creation tool (documented in Msi.chm)
    Template.pcp	- schema for patch wizard project settings
    Example.pcp  	- sample project settings for patch wizard

Database
    DbReadme.txt        - readme file with information on the files in this folder and subfolders
    Schema.msi   	- database containing all standard tables, but no installation data
    Schema.msm   	- merge module containing all standard module tables, but no installation data
    Schema.log          - List of schema changes
    Sequence.msi 	- recommended sequence table actions
    UISample.msi	- sample database demonstrating a UI implementation         
    Intl         	- localized Error and ActionText tables in multiple languages
    
Database\100
    Schema.msi   	- Windows Installer version 1.0 database containing all standard tables
    Sequence.msi 	- Windows Installer version 1.0 recommended sequence table actions

Database\110
    Schema.msi          - Windows Installer version 1.1 database containing all standard tables
    Sequence.msi        - Windows Installer version 1.1 recommended sequence table actions
    Schema.msm          - Windows Installer version 1.1 merge module containing all standard module tables

Database\120
    Schema.msi          - Windows Installer version 1.2 database containing all standard tables
    Sequence.msi        - Windows Installer version 1.2 recommended sequence table actions
    Schema.msm          - Windows Installer version 1.2 merge module containing all standard module tables

Samples - examples demonstrating the use of the Windows Installer APIs
    Create.cpp          - sample DLL custom action for creating user accounts on the local machine
    MsiLoc.cpp          - sample resource file generation and import tool (export an msi for use with localization of .RES files)
    MsiLoc.txt          - readme for msiloc.cpp and usage of the corresponding compiled exe
    Process.cpp         - sample DLL custom actions (ProcessUserAccounts, UninstallUserAccounts) for user account creation and deletion
    Remove.cpp          - sample DLL custom action for removing user accounts from the local machine 
    Scripts 		- folder containing doc and scripts to perform a variety of installer-related tasks
    Tutorial.cpp        - sample DLL custom action for invoking an installed file at the end of setup
    setup.exe\*         - code for the Windows Installer Internet Download bootstrapper, setup.exe
    MsiStuff\*          - code for the configuration utility for the Windows Installer Internet Download Bootstrapper, msistuff.exe

---------------------------------------------------------------------------
Windows Installer core files installed by installation package InstMsi.exe:
    Msi.dll		- installation engine, use by install clients and install service
    MsiExec.exe		- command-line invocation of install functions, and service control functions
    MsiHnd.dll		- UI process, loaded only when full UI is authored and used for installation

Other files that are updated as needed by installation package InstMsi.exe:
    riched20.dll, usp10.dll, msls31.dll	- rich-edit and complex script support
    cabinet.dll  			- extraction of files from compressed file cabinets
    imagehlp.dll 			- used for import table binding
    mspatcha.dll 			- used to apply file-level patches
    shfolder.dll 			- special shell folder location and creation

---------------------------------------------------------------------------
Notes: 

Msi.chm is the primary source of information about the Windows Installer, and contains both an 
introduction to the new model, as well as detailed reference material for developers.
See the topic "Windows Installer Examples" to get started with simple packages.

If HTML help is already installed on your system, msi.chm can be invoked via file association
HTML help can be installed from: http://msdn.microsoft.com/workshop/author/htmlhelp/localize.asp

The .msi packages in the SDK may be installed by activating them in the Windows Explorer,
or by using "MsiExec.exe -i path_to_package". Use "MsiExec.exe -?" to see more options.
The object model is exposed as the ProdId: WindowsInstaller.Installer

UISample.msi provides a sample UI sequence, but that sequence will not function
properly until the database has been populated with valid installation data.
For help in populating a database with valid installation data, see the help topic
titled "An Installation Example" under "Windows Installer Examples". For an
example of a completed installation package that uses the same UI sequence as
UISample.msi, install one of the msi packages under the Tools or SampProd folders.
Set the ShowUserRegistrationDlg property in the Property table to 0 if you do not
wish to have the UserRegistrationDlg appear.

UISample.msi together with Sequence.msi and schema.msi will provide a framework which can
then be populated with valid installation data.  Use the MsiMerg tool, MsiDb tool or the
WiMerge.vbs script to merge the databases together (merging two at a time).  You should drop
any empty tables from your package.

The custom action samples process.cpp, remove.cpp, create.cpp, and tutorial.cpp are the source
files for the sample custom actions described in the msi.chm file.  See the msi.chm file for
more information regarding their usage.

---------------------------------------------------------------------------
Compiling sample code:

There are two options for compiling the sample code in the Samples subfolder:
use nmake or use a project in the MSDev environment.

To use nmake, make certain that the MSVCDIR environment variable is set. You can
generally run the VCVARS32.BAT to set this. VCVARS32.BAT is located in the BIN
subdirectory of your VC install. The command line to compile the CUSTACT1.CPP
sample file (given default install locations for both Microsoft Visual C++ 6
and the Windows Installer SDK) would look like this:
C:\program files\MsiIntel.SDK\Samples> nmake -f custact1.cpp include="%include%;c:\program files\MsiIntel.SDK\Include" lib="%lib%;c:\program files\MsiIntel.SDK\Lib"
Note: the quotes are included because the default install locations include spaces in path names.
If the INCLUDE and LIB environment variables on the machine and the SDK install location
do not have spaces in the path, then the quotes are unnecessary.

To use the MSDev environment, create a new Win32 EXE or Win32 DLL project, and
add the appropriate file as a source. MSI.LIB will need to added to the library
list in the Project Settings dialog. MsiIntel.SDK\Include and MsiIntel.SDK\Lib
directories will need to be added to the Directories tab under Tools\Options.

All SDK source files contain comments on how to compile the sample code.  See the
source file for more specific build information.

---------------------------------------------------------------------------
Known issues:

Msi.chm is not yet properly integrated w/ the typelib in msi.dll - context sensitive 
help is not available in VB w/ this release.

Tools that create customization transforms require special considerations that are
not yet documented in msi.chm.  A KB article on this topic will be published
shortly after this SDK is released - go to http://support.microsoft.com/support/search/c.asp
and enter "Q225522" in the "My Question Is" box.

Additional support articles and solutions will be placed on 
http://support.microsoft.com/support/search/c.asp as they become available.
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\darwin\src\sdk\license.rtf ===
{\rtf1\ansi\ansicpg1252\deff0\deftab720{\fonttbl{\f0\froman\fprq2 Times New Roman;}}{\colortbl\red0\green0\blue0;}\deflang1033\horzdoc{\*\fchars }{\*\lchars }\pard\plain\f0\fs20 MICROSOFT INSTALLER SOFTWARE DEVELOPMENT KIT \par  \par END-USER LICENSE AGREEMENT FOR MICROSOFT SOFTWARE \par  \par IMPORTANT-READ CAREFULLY: This Microsoft End-User License Agreement ("EULA") is a legal agreement between you (either an individual or a single entity) and Microsoft Corporation for the Microsoft software product identified above, which includes computer software and associated media and printed materials, and may include "online" or electronic documentation ("SOFTWARE PRODUCT" or "SOFTWARE"). By installing, copying, or otherwise using the SOFTWARE PRODUCT, you agree to be bound by the terms of this EULA. If you do not agree to the terms of this EULA; promptly return the unused SOFTWARE PRODUCT to the place from which you obtained it for a full refund; or if you received the SOFTWARE PRODUCT as part of a subscription or other service from Microsoft, you may cancel the subscription and receive a pro rata portion of the subscription price. \par  \par SOFTWARE PRODUCT LICENSE \par  \par The SOFTWARE PRODUCT is protected by copyright laws and international copyright treaties, as well as other intellectual property laws and treaties. The SOFTWARE PRODUCT is licensed, not sold. \par  \par 1. GRANT OF LICENSE. This EULA grants you the following limited, non-exclusive rights: \par Software Product. You may install and use the SOFTWARE PRODUCT on a single computer solely for the purpose of developing applications for use with Microsoft(R) Windows(R) or Windows NT(R) ("Application").  You may not use the SOFTWARE PRODUCT to create files which are not compatible with the Microsoft Windows Installer file format.  \par Microsoft Developer Network Subscriber. If you acquired the SOFTWARE PRODUCT through a subscription to the Microsoft Developer Network, and you are either an individual developer or an individual designated within a single entity, you are granted the following additional rights with respect to the SOFTWARE PRODUCT:  (a) you may make and use copies of the SOFTWARE PRODUCT on up to ten (10) separate computers, provided that you are the only individual using the SOFTWARE PRODUCT on each such computer, and (b) if you are a single entity, you may designate one individual within your organization to have the right to use the SOFTWARE PRODUCT in the manner described herein. \par Sample Code. You may modify the sample source code located in the SOFTWARE PRODUCT's "SAMPLES" directory ("Sample Code") to design, develop, and test your Application.  \par Redistributable Code. Portions of the SOFTWARE PRODUCT in the "REDIST" directory are designated as "Redistributable Code."  You may reproduce and distribute the Redistributable Code provided you comply with the Distribution Requirements described below. \par Distribution Requirements. You may copy and redistribute the Redistributable Code (collectively "REDISTRIBUTABLE COMPONENTS") as described above, provided that (a) you distribute the REDISTRIBUTABLE COMPONENTS only in conjunction with, and as a part of, your Application; (b) your Application adds significant and primary functionality to the REDISTRIBUTABLE COMPONENTS; (c) the REDISTRIBUTABLE COMPONENTS only operate in conjunction with a valid copy of Microsoft Windows or Windows NT; (d) the Application does not allow the use of the REDISTRIBUTABLE COMPONENTS for files which are not compatible with the Microsoft Windows Installer;  (e) the executable code in the REDIST directory may be redistributed unmodified in conjunction with your Application provided that your Application adds significant and primary functionality to the REDISTRIBUTABLE COMPONENTS; (f) the library code in the LIB directory may only be redistributed when linked into your Application; (g) you do not use Microsoft's name, logo, or trademarks to market your Application; (h) you include a valid copyright notice on your Application; and (i) you agree to indemnify, hold harmless, and defend Microsoft from and against any claims or lawsuits, including attorneys' fees, that arise or result from the use or distribution of your Application. Contact Microsoft for the applicable royalties due and other licensing terms for all other uses and/or distribution of the REDISTRIBUTABLE COMPONENTS. \par Microsoft reserves all rights not expressly granted to you.  \par  \par 2. COPYRIGHT. All rights, title, and copyrights in and to the SOFTWARE PRODUCT (including, but not limited to, any images, photographs, animations, video, audio, music, text, and "applets" incorporated into the SOFTWARE PRODUCT) and any copies of the SOFTWARE PRODUCT are owned by Microsoft or its suppliers. The SOFTWARE PRODUCT is protected by copyright laws and international treaty provisions. Therefore, you must treat the SOFTWARE PRODUCT like any other copyrighted material, except that you may either (a) make one copy of the SOFTWARE PRODUCT solely for backup or archival purposes, or (b) install the SOFTWARE PRODUCT on a single computer, provided you keep the original solely for backup or archival purposes. You may not copy the printed materials accompanying the SOFTWARE PRODUCT.  \par  \par 3. PRERELEASE CODE. The SOFTWARE PRODUCT may contain PRERELEASE CODE that is not at the level of performance and compatibility of the final, generally available, product offering. These portions of the SOFTWARE PRODUCT may not operate correctly and may be substantially modified prior to first commercial shipment. Microsoft is not obligated to make this or any later version of the SOFTWARE PRODUCT commercially available.  Microsoft grants you the right to distribute test versions of your Application created using the PRERELEASE CODE provided you comply with the Distribution Requirements described in Section 1 and the following additional provisions: (a)  you must mark the test version of your Application "BETA" and (b) you are solely responsible for updating your customers with versions of your Application that operate satisfactorily with the final commercial release of the PRERELEASE CODE.   \par  \par 4. DESCRIPTION OF OTHER RIGHTS AND LIMITATIONS.  \par  \par Limitations on Reverse-Engineering, Decompilation, and Disassembly. You may not reverse- engineer, decompile, or disassemble the SOFTWARE PRODUCT, except and only to the extent that such activity is expressly permitted by applicable law notwithstanding this limitation. \par  \par Rental. You may not rent or lease the SOFTWARE PRODUCT.  \par  \par Software Transfer. You may permanently transfer all of your rights under this EULA, provided you retain no copies, you transfer all of the SOFTWARE PRODUCT (including all component parts, the media and printed materials, any upgrades, this EULA, and, if applicable, the Certificate of Authenticity), and the recipient agrees to the terms of this EULA. If the SOFTWARE PRODUCT is an upgrade, any transfer must include all prior versions of the SOFTWARE PRODUCT. \par  \par Termination. Without prejudice to any other rights, Microsoft may terminate this EULA if you fail to comply with the terms and conditions of this EULA. In such event, you must destroy all copies of the SOFTWARE PRODUCT and all of its component parts.  \par  \par 5. EXPORT RESTRICTIONS. You agree that neither you nor your customers intend to or will, directly or indirectly, export or transmit (a) the SOFTWARE PRODUCT or related documentation and technical data, or (b) your Application as described in Section 1 of this EULA (or any part thereof), or process, or service that is the direct product of the SOFTWARE PRODUCT to any country to which such export or transmission is restricted by any applicable U.S. regulation or statute, without the prior written consent, if required, of the Bureau of Export Administration of the U.S. Department of Commerce, or such other governmental entity as may have jurisdiction over such export or transmission.  \par  \par  \par 6. U.S. GOVERNMENT RESTRICTED RIGHTS. The SOFTWARE PRODUCT and documentation are provided with RESTRICTED RIGHTS. Use, duplication, or disclosure by the Government is subject to restrictions as set forth in subparagraph (c)(1)(ii) of The Rights in Technical Data and Computer Software clause at DFARS 252.227-7013 or subparagraphs (c)(1) and (2) of the Commercial Computer Software - Restricted Rights at 48 CFR 52.227-19, as applicable. Manufacturer is Microsoft Corporation/One Microsoft Way/Redmond, WA 98052-6399.  \par  \par MISCELLANEOUS \par  \par If you acquired this product in the United States, this EULA is governed by the laws of the State of Washington.  \par  \par If you acquired this product in Canada, this EULA is governed by the laws of the Province of Ontario, Canada. Each of the parties hereto irrevocably attorns to the jurisdiction of the courts of the Province of Ontario and further agrees to commence any litigation that may arise hereunder in the courts located in the Judicial District of York, Province of Ontario.  \par  \par If this product was acquired outside the United States, local law may apply. \par  \par Should you have any questions concerning this EULA, or if you desire to contact Microsoft for any reason, please contact the Microsoft subsidiary serving your country, or write: Microsoft Customer Sales and Service/One Microsoft Way/Redmond, WA 98052-6399.  \par  \par NO WARRANTIES. To the maximum extent permitted by applicable law, Microsoft expressly disclaims any warranty for the SOFTWARE PRODUCT. The SOFTWARE PRODUCT and any related documentation are provided "as is" without warranty of any kind, either express or implied, including, without limitation, the implied warranties of merchantability or fitness for a particular purpose. The entire risk arising out of use or performance of the SOFTWARE PRODUCT remains with you.  \par  \par LIMITATION OF LIABILITY. Microsoft's entire liability and your exclusive remedy under this EULA shall not exceed five dollars (US$5.00).  \par  \par NO LIABILITY FOR CONSEQUENTIAL DAMAGES. To the maximum extent permitted by applicable law, in no event shall Microsoft or its suppliers be liable for any damages whatsoever (including, without limitation, damages for loss of business profit, business interruption, loss of business information, or any other pecuniary loss) arising out of the use of, or inability to use, this Microsoft product, even if Microsoft has been advised of the possibility of such damages. Because some states/jurisdictions do not allow the exclusion or limitation of liability for consequential or incidental damages, the above limitation may not apply to you.  \par  \par  \par Si vous avez acquis votre produit Microsoft au CANADA, la garantie limit e suivante vous concerne:  \par  \par GARANTIE LIMIT \par  \par EXCLUSION DE GARANTIES. Microsoft renonce enti rement   toute garantie pour le LOGICIEL. Le LOGICIEL et toute autre documentation s'y rapportant sont fournis   comme tels   sans aucune garantie quelle qu'elle soit, expresse ou implicite, y compris, mais ne se limitant pas aux garanties implicites de la qualit  marchande ou un usage particulier. Le risque total d coulant de l'utilisation ou de la performance du LOGICIEL est entre vos mains.  \par  \par RESPONSABILIT  LIMIT E. La seule obligation de Microsoft et votre recours exclusif concernant ce contrat n'exc deront pas cinq dollars (US$5.00).  \par  \par ABSENCE DE RESPONSABILIT  POUR LES DOMMAGES INDIRECTS. Microsoft ou ses  \par fournisseurs ne pourront  tre tenus responsables en aucune circonstance de tout dommage quel qu'il soit (y compris mais non de fa on limitative les dommages directs ou indirects caus s par la perte de b fices commerciaux, l'interruption des affaires, la perte d'information commerciale ou toute autre perte p cuniaire) r sultant de l'utilisation ou de l'impossibilit  d'utilisation de ce produit, et ce, m me si la soci  Microsoft a   avis e de l' ventualit  de tels dommages. Certains  tats/juridictions ne permettent pas l'exclusion ou la limitation de responsabilit  relative aux dommages indirects ou cons cutifs, et la limitation ci-dessus peut ne pas s'appliquer   votre  gard.  \par La pr sente Convention est r gie par les lois de la province d'Ontario, Canada. Chacune des parties   la Convention reconna t irr vocablement la comp tence des tribunaux de la province d'Ontario et consent   instituer tout litige qui pourrait d couler de la Convention aupr s des tribunaux situ s dans le district judiciaire de York, province d'Ontario.  \par Au cas o  vous auriez des questions concernant cette licence ou que vous d siriez vous mettre en rapport avec Microsoft pour quelque raison que ce soit, veuillez contacter la succursale Microsoft desservant votre pays, dont l'adresse est fournie dans ce produit, ou  crire  : Microsoft Customer Sales and Service, One Microsoft Way, Redmond, Washington 98052-6399.
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\dcpromo\answer.txt ===
; Sample DCPROMO2 AnswerFile.
; Copyright (C) 1998-2001 Microsoft Corporation
;
; To invoke dcpromo with an answerfile, use the following syntax:
; dcpromo /answer:<answerfile name>
;
; where <answerfile name> is the name of the answerfile to be used, relative
; to the directory from which dcpromo is invoked
;
; The answer file is essentially an INI file, the options for which complete
; the fields of each page of the wizard.  Default values are those used if
; the option is not specified.
;
; For all operations (insallations or un-installations), the following
; options apply:
;   RebootOnSuccess
; 
; For all installations, the following options apply:
;   DatabasePath
;   LogPath
;   SYSVOLPath
;   SafeModeAdminPassword
;   CriticalReplicationOnly
;   SiteName
;
; For BDC upgrades or new replica installations, the following additional
; options apply:
;   ReplicaOrMember=Replica
;   ReplicaOrNewDomain=Replica
;   ReplicaDomainDNSName
;   ReplicationSourceDC
;   ReplicationSourcePath
;
; For child domain installations, the following additional options apply:
;   ReplicaOrNewDomain=Domain
;   NewDomain=Child
;   ParentDomainDNSName
;   ChildName
;   DomainNetbiosName
;   AutoConfigDNS
;   AllowAnonymousAccess
;
; For new tree in existing forest installations, the following
; additional options apply:
;   ReplicaOrNewDomain=Domain
;   NewDomain=Tree
;   NewDomainDNSName
;   DomainNetbiosName
;   AutoConfigDNS
;   AllowAnonymousAccess
;
; For DC demotion, the following additional options apply:
;   AdministratorPassword
;   IsLastDCInDomain
;   RemoveApplicationPartitions
;
; For all of the above scenarios, the following options can also apply:
;   UserName
;   Password
;   UserDomain
; 
; For new tree in new forest installations, the following additional
; options apply:
;   ReplicaOrNewDomain=Domain
;   NewDomain=Forest
;   NewDomainDNSName
;   DNSOnNetwork
;   DomainNetbiosName
;   AutoConfigDNS
;   AllowAnonymousAccess
;
; for PDC upgrades, the following additional options apply:
;   SetForestVersion
;
; When running in advanced mode, these options apply:
; 
; ReplicationSourcePath
; ConfirmGc
; Syskey


Here is a table that illustrates which options are used in what scenario:


Option                 | Root | Tree | Child| Repl | PDC->| BDC->| BDC->| Dem
                       |      |      |      |      | Root | Repl | Memb |
                       |      |      |      |      |      |      |      |
AdministratorPassword  |      |      |      |      |      |      |      |  X
AllowAnonymousAccess   |  X   |  X   |   X  |      |   X  |      |      |
AutoConfigDNS          |  X   |  X   |   X  |      |   X  |      |      |
ChildName              |      |      |   X  |      |      |      |      |
ConfirmGc              |      |      |      | IFM  |      |      |      |
CriticalReplicationOnly|  X   |  X   |   X  |  X   |   X  |   X  |   X  |
DNSOnNetwork           |  X   |      |      |      |   X  |      |      |
DatabasePath           |  X   |  X   |   X  |  X   |   X  |   X  |   X  |
DisableCancelForDnsInstallX   |  X   |   X  |  X   |   X  |   X  |      |
DomainNetbiosName      |  X   |  X   |   X  |      |      |      |      |
IsLastDCInDomain       |      |      |      |      |      |      |      |  X
LogPath                |  X   |  X   |   X  |  X   |   X  |   X  |   X  |
NewDomain              |  X   |  X   |   X  |      |      |      |      |
NewDomainDNSName       |  X   |  X   |      |      |   X  |      |      |
ParentDomainDNSName    |      |      |   X  |      |      |      |      |
Password               |      |  X   |   X  |  X   |      |   X  |      |  X
RebootOnSuccess        |  X   |  X   |   X  |  X   |   X  |   X  |   X  |  X
RemoveApplicationPartitions   |      |      |      |      |      |      |  X
ReplicaDomainDNSName   |      |      |      |  X   |      |   X  |      |
ReplicaOrMember        |      |      |      |      |      |   X  |   X  |
ReplicaOrNewDomain     |  X   |  X   |   X  |  X   |      |      |      |
ReplicationSourceDC    |      |      |      |  X   |      |   X  |      |
ReplicationSourcePath  |      |      |      | IFM  |      |      |      |
SYSVOLPath             |  X   |  X   |   X  |  X   |   X  |   X  |   X  |
SafeModeAdminPassword  |  X   |  X   |   X  |  X   |   X  |   X  |   X  |
SetForestVersion       |      |      |      |      |   X  |      |      |
SiteName               |  X   |  X   |   X  |  X   |   X  |   X  |   X  |
Syskey                 |      |      |      | IFM  |      |      |      |
UserDomain             |      |  X   |   X  |  X   |      |   X  |      |  X
UserName               |      |  X   |   X  |  X   |      |   X  |      |  X



[DCInstall]

; ReplicaOrMember
; Used only for BDC upgrades.
;
; Possible values:
; "Replica" - convert the BDC to a replica DS DC.
; "Member" (or any other value) - demote the BDC to a member server of its
; domain.
;
; Default: "Member"

ReplicaOrMember=Replica



; ReplicaOrNewDomain
; Used only for new NT5 server installs.
; 
; Possible values:
; "Domain" - convert the server into the first DC of a new DS domain.  A
; value for NewDomain is required.
; "Replica" (or any other value) - convert the server into a replica DS DC.
;
; Default: "Replica"

ReplicaOrNewDomain=Replica



; NewDomain
;
; Used to indicate the type of the new domain, whether it will be a new
; domain in a new forest, the root of a new tree in an existing forest, or a
; child of an existing domain.
;
; Possible values:
;
; "Tree" - the new domain will be the root of a new tree in an existing
; forest.
;
; "Child" - the new domain will be a child of an existing domain.
;
; "Forest" (or any other value) - the new domain will be the first domain in
; a new forest of domain trees.
;
; Default: "Forest"

NewDomain=Forest



; ReplicaDomainDNSName
; Used for BDC upgrades and new replica dc installs.  Value is the DNS
; domain name of the domain to be replicated from.  It is assumed that the
; currently logged-on user has administrative privileges to that domain,
; and that DNS services are properly configured.
;
; The domain name must refer to an existing DS domain.
;
; Default: none.  This value must be specified.

ReplicaDomainDNSName=spruce.example.microsoft.com



; ParentDomainDNSName
; Used when child domain install is indicated.  Value is the DNS domain name
; of an existing DS domain.  It is assumed that the currently logged-on
; user has administrative privileges to this domain, and that DNS services
; are properly configured.
;
; Default: none.  This value must be specified.

ParentDomainDNSName=spruce.example.microsoft.com



; ChildName
; Used when child domain install is indicated.  Value is the DNS label to be
; prepended to the value specified by ParentDomainDNSName to form a new
; domain name contiguous with and subordinate to the parent.  E.g. if the
; parent name is "spruce.example.microsoft.com" and ChildName is "blue", then
; the name of the new domain is "blue.spruce.example.microsoft.com".  This
; new domain name must not be in use and DNS services must be properly
; configured.
;
; Default: none.  This value must be specified.

ChildName=blue



; DomainNetbiosName
; Used to assign a flat name to the new domain.  The name must not already
; be in use as a domain or computer name.  This key is ignored when upgrading
; pre-Windows 2000 PDCs.
;
; Default: none.  This value must be specified.

DomainNetbiosName=blue-dom



; NewDomainDNSName
; Used when new tree in existing domain or new forest installation is
; indicated.  Value is the DNS domain name to be created.  This name may
; not be currently in use.
;
; Default: none.  This value must be specified.

NewDomainDNSName=aspen.example.microsoft.com



; DNSOnNetwork
; Used in new forest installations when DNS client is not configured.
;
; Possbile values:
; "No" - "No, DNS is not on the network, install the DNS service, and
; create a zone for the new domain"
; "Yes" (or any other value) - "Yes, DNS is on the network, double-check
; that the local machine's DNS client configuration is complete."  (Note
; that if the local DNS client is not configured, the wizard will go into
; interactive mode.)
;
; Default: "Yes"

DNSOnNetwork=Yes



; DatabasePath
; Value must be the fully-qualified, non-unc path to a directory of a fixed
; disk of the local machine.  If the directory exists, it must be empty.
; If it does not, it will be created.  The volume must have sufficient disk
; space available -- at least 20MB for new domains.  For replicas, the
; space required is a function of domain size.  For optimal performance,
; the database path should be on a different volume than the log path.
;
; Default: %systemroot%\NTDS

DatabasePath=C:\ntds



; LogPath
; Value must be the fully-qualified, non-unc path to a directory of a fixed
; disk of the local machine.  If the directory exists, it must be empty.
; If it does not, it will be created.  The volume must have sufficient disk
; space available -- at least 10MB for new domains.  For replicas, the
; space required is a function of domain size.  For optimal performance,
; the database path should be on a different volume than the log path.
;
; Default: %systemroot%\NTDS
 
LogPath=C:\NTDS



; SYSVOLPath
; Value must be the fully-qualified, non-unc path to a directory of a fixed
; disk of the local machine.  If the directory exists, it must be empty.
; If it does not, it will be created.  The volume must be formatted with
; NTFS version 5.0.
;
; Default: %systemroot%\SYSVOL

SYSVOLPath=d:\sysvol



; SiteName (optional)
; Value is the name of an existing site in which to place the new DC.  If
; not specified, a suitable site will be selected.
;
; Default: "Default-First-Site"

SiteName=My-Answer-File-Site



; IsLastDCInDomain
; Only used for demote.  Value indicates that the machine is the last DC
; in the domain.
;
; "Yes" - DC is to be treated as the last in the domain.
; "No" - (or any other value) - DC is not the last in the domain.
;
; Default: No

IsLastDCInDomain=No



; AdministratorPassword
; Used when demoting a domain controller, to establish the local
; Administrator account password.
;
; Default: no password

AdministratorPassword=foo



; RebootOnSuccess
; Used to indicate whether the machine should be rebooted upon successful
; operation, or not.  The server must be rebooted for the directory
; service to be started.
;
; "Yes" - reboot the machine
; "NoAndNoPromptEither" - do not reboot the machine, and don't show the prompt
; to reboot either.  Just silently exit.
; "No" - (or any other value) do not reboot the machine.
;
; Default: "No"

RebootOnSuccess=No



; UserName
; Used to indicate the account credentials to be used for the installation
; operation. This parameter does not apply if the operation is installation
; of the first domain controller in a new forest, or if the operation is
; removal of Active Directory from any domain controller that is not the last
; dc of a domain, or is a dc of the forest root domain.
;
; Default: none, which will cause the operation to be done in the context
; of the currently-logged on user.

UserName=Administrator



; Password
; Used to indicate the account credentials to be used for the installation 
; operation.  Applies in the same conditions as UserName.
;
; Default: none.

Password=bar



; UserDomain
; Used to indicate the domain that the UserName should be taken from.
; Applies in the same conditions as UserName.
;
; Default: If the operation is to create a new forest or to become a member
; server from a BDC upgrade, there is no default.  If the operation is to
; create a new tree, then the default is the DNS name of the forest the
; computer is presently joined to.  If the operation is to create a new child
; domain or a replica, then the default is the DNS name of the domain the
; computer is joined to.  If the operation is to demote the computer, and the
; computer is a DC for a child domain, then the default is the DNS name of
; the parent domain.  If the operation is to demote the computer, and the
; computer is a DC of a tree root domain, then the default is the DNS name of
; the forest.

UserDomain=myDomain



; AutoConfigDNS
; Used to indicate whether the wizard should install and configure DNS for
; the new domain, as it has detected that dynamic dns updates are not
; available.
;
; If the wizard can't verify that dynamic DNS registration will be
; successful, and the value of this key is "Yes", then the wizard will
; install and configure DNS on the local computer.
;
; Otherwise, dynamic DNS is available, or the value is not "Yes", and so
; DNS will not be installed.
;
; Default: "Yes"

AutoConfigDNS=Yes



; AllowAnonymousAccess
; Used when downlevel (pre Windows 2000) servers will be authenticating users
; from this domain or any trusting domain.  This option indicates whether
; dcpromo should cause the permissions to be set to permit anonymous access
; to user and group information.
;
; This setting controls the initial membership of the pre-Win2k compatible
; access group.  When set to "Yes", the Everyone SID is made a member of the
; group.  When set to "No", Everyone is not made a member of the group.
;
; "Yes" - downlevel servers will be used with this domain.  Allow anonymous
; access.
; "No" (or any other value) - all server apps in the domain are Windows
; 2000 or later use more restrictive permissions.
;
; Default: if upgrading an NT4 PDC, "Yes".  Otherwise, "No"



; ReplicationSourceDC (optional)
; Used to indicate the name of the domain controller from which the domain
; information is to be replicated.  Only applies in new replica or BDC
; upgrade cases.  If no value is supplied, the closest domain controller
; for the domain being replicated will be selected.
;
; Default: (no value) - select a dc automatically

ReplicationSourceDC=



; SafeModeAdminPassword
; Used to supply the password to be set on the administrator account used
; when the computer is started in safe mode (or a variant of safe mode, like
; ds repair mode)
;
; Default: (no value) - blank password

SafeModeAdminPassword=MyHappyPassword



; CriticalReplicationOnly
; Used to specify that the promotion operation should perform only critical
; replication, then continue, skipping the (possibly very lengthy) non-
; critical portion.  Set to "yes" to skip non-critical replication.
;
; (in the case that non-critical replication is skipped, that replication
; will automatically and silently resume when the computer is rebooted and
; assumes its new role as a domain controller.)
;
; Default: (no value) - no; i.e. do critical and non-critical replication

CriticalReplicationOnly=yes



; ReplicationSourcePath
;
; Used to indicate that the bulk of the directory data replication should
; be drawn from backup files that have been restored to a volume on the
; server, rather from another domain controller.
;
; However, complete replication can not be performed entirely from copied
; files: access to another domain controller is still required.  (see
; ReplicationSourceDC)
;
; Indicates the location of the files to be used to create a new replica
; domain controller.  The value must be the fully-qualified path to a
; folder on the local computer where the files have been copied.
;
; If this value is present and non-empty, then data replication will be
; performed using the restored files.  If this value is not present or is
; empty, then replication will take place entirely over the wire.
;
; If the value refers to a valid set of restored backup files, then any
; value for the ReplicaDomainDNSName key will be ignored, as the domain
; name to which the restored files belong takes precedence.
;
; Default: none
;
; Example: "C:\restored\ds"

ReplicationSourcePath=



; ConfirmGc
;
; Only applies if ReplicationSourcePath is specified.  If restored files
; were created from a backup of a global catalog, then the replica can also
; be made a global catalog from those files.  Use this value to indicate
; whether the replica should also be a global catalog, or not.
;
; If this value is "Yes" and the backup was of a global catalog, then the
; replica will also be made a global catalog.  Otherwise, the replica will
; not be made a global catalog
;
; Default: "Yes"
                             
ConfirmGc=No



; Syskey
;
; Only applies if ReplicationSourcePath is specified.  This value is used
; if the restored files used to install a replica indicate that the system
; key must be supplied by the user.
;
; If the restored files indicate that the system key must be supplied on
; diskette, then the system will look for the key on drive A:
;
; Default: none

Syskey=



; SetForestVersion
;
; Only applies if the machine is a NT4 domain controller completing upgrade,
; and the domain controller will be the first dc in a new forest
; (NewDomain=Forest).  This key will indicate whether or not to set the new
; forest behavior version level to 1.  Level 1 allows more efficient
; replication of large group memberships, but will prevent any Windows 2000
; domain controllers from being added to the forest.
;
; If the value is "Yes", the level will be set to 1.  If not, the level will
; not be set.
;
; Default: "No"

SetForestVersion=No



; DisableCancelForDnsInstall
;
;
; Only applies if the answerfile options are such that the wizard will
; install DNS on the computer (if it is not allready installed).  DNS is
; installed by invoking the system optional component manager.
; 
; If this values is "Yes", then the OCM will be invoked with the /c switch
; to cause the cancel button to not appear.  Any other value will cause
; the cancel button to appear.
; 
; Default: "No"

DisableCancelForDnsInstall=Yes



; RemoveApplicationPartitions
;
; Only applies for demotions, if the domain controller hosts the last
; replica of any application directory partition.  This value is used to
; confirm that you wish to remove the application partitions on the DC, and
; you are cognizant of the fact that removing the last replica of a
; partition results in the partition (and all data in it) being destroyed.
;
; If this value is "Yes", then the wizard will proceed if it is the last
; replica of any application partitions.  Otherwise, the wizard will drop
; into interactive mode, and you will have to manually confirm removal
; of the partitions
;
; Default: "No"

RemoveApplicationPartitions=Yes
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\dcpromo\exe\dynamicdnspage.txt ===
switch (diagnosticResultCode)
   {
      // Message 1

      case SUCCESS:
      {
         message = String::load(IDS_DYN_DNS_MESSAGE_SUCCESS);

"DNS registration support for this domain controller has been verified. To
continue, click Next."

         String errorMessage;
         if (errorCode == DNS_ERROR_RCODE_YXDOMAIN)
         {

                  IDS_DNS_ERROR_RCODE_YXDOMAIN_ADDENDA,

"A SRV record for DNS name %1 was found. Delete
this DNS name from the zone %2 before
continuing promotion of this domain controller
or ensure that the existing SRV record for the
DNS name %3 represents this domain controller."

         }
         else
         {
            errorMessage = GetErrorMessage(Win32ToHresult(errorCode));
         }
            
               IDS_DYN_DNS_DETAIL_FULL_SANS_CODE

"The primary DNS server tested was: %1 (%2)\r\n\r\nThe zone was:
%3\r\n\r\nThe test for dynamic DNS update support returned:\r\n""%4"""

         break;
      }

      // Message 2   

      case SERVER_CANT_UPDATE:   
      {
         message = String::load(IDS_DYN_DNS_MESSAGE_SERVER_CANT_UPDATE);

"To allow computers to locate domain resources, this domain controller
needs to be registered with a DNS server. The DNS server with which this
domain controller will register does not support the dynamic update
protocol or the primary authoritative zone is not configured to allow
dynamic updates."

"The primary DNS server tested was: %1 (%2)\r\n\r\nThe zone was:
%3\r\n\r\nThe test for dynamic DNS update support
returned:\r\n""%4""\r\n(error code 0x%5!08X! %6)"

         break;
      }

      // Message 3

      case ERROR_TESTING_SERVER:
      {
         message = String::load(IDS_DYN_DNS_MESSAGE_ERROR_TESTING_SERVER);

"The wizard encountered an error while trying to determine if the DNS
server with which this domain controller will register supports dynamic
updates."

"The primary DNS server tested was: %1 (%2)\r\n\r\nThe zone was:
%3\r\n\r\nThe test for dynamic DNS update support
returned:\r\n""%4""\r\n(error code 0x%5!08X! %6)"

         break;
      }

      // Message 6

      case ERROR_FINDING_SERVER:
      {
         message = String::load(IDS_DYN_DNS_MESSAGE_ERROR_FINDING_SERVER);

"The wizard could not determine the name and address of the DNS server with
which this domain controller will be registered."


"The SOA query for %1 to find the primary DNS server returned:\r\n
%2\r\n(error code 0x%3!08X! ""%4"")"

      }

      // Message 8

      case ZONE_IS_ROOT:   
      {
         message =
            String::format(
               IDS_DYN_DNS_MESSAGE_ZONE_IS_ROOT,

"The DNS zone authoritative for the domain %1 cannot be updated because it
is the DNS root zone. Domain controllers will not send dynamic updates to
the DNS root zone. If you want to use this domain name, select 'Install and
configure the DNS server on this computer' below and create a delegation
for the new DNS zone %2 from the root zone to this DNS server."

               IDS_DYN_DNS_DETAIL_ROOT_ZONE,

"The primary DNS server tested was: %1 (%2)\r\n\r\nThe zone was: .
(root)\r\n\r\nDomain controllers will not send dynamic updates to the DNS
root zone."

         break;
      }

      // Message 11

      case TIMEOUT:
      {
         message = String::load(IDS_DYN_DNS_MESSAGE_TIMEOUT);

"The SOA query for %1 to find the primary DNS server returned:\r\n
%2\r\n(error code 0x%3!08X! ""%4"")"


         break;
      }

      // Message 4

      case UNEXPECTED_FINDING_SERVER:

      // Anything else

      default:
      {
         
         message = String::load(IDS_DYN_DNS_MESSAGE_UNEXPECTED);

"The wizard encountered an error while trying to determine the name and
address of the DNS server with which this domain controller will be
registered."

"The SOA query for %1 to find the primary DNS server returned:\r\n
%2\r\n(error code 0x%3!08X! ""%4"")"

         break;
      }

   }
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\display\loghours\readme.txt ===
========================================================================
       MICROSOFT FOUNDATION CLASS LIBRARY : LogHours
========================================================================


AppWizard has created this LogHours DLL for you.  This DLL not only
demonstrates the basics of using the Microsoft Foundation classes but
is also a starting point for writing your DLL.

This file contains a summary of what you will find in each of the files that
make up your LogHours DLL.

LogHours.h
	This is the main header file for the DLL.  It declares the
	CLogHoursApp class.

LogHours.cpp
	This is the main DLL source file.  It contains the class CLogHoursApp.


LogHours.rc
    This is a listing of all of the Microsoft Windows resources that the
    program uses.  It includes the icons, bitmaps, and cursors that are stored
    in the RES subdirectory.  This file can be directly edited in Microsoft
	Developer Studio.

res\LogHours.rc2
    This file contains resources that are not edited by Microsoft 
	Developer Studio.  You should place all resources not
	editable by the resource editor in this file.

LogHours.def
    This file contains information about the DLL that must be
    provided to run with Microsoft Windows.  It defines parameters
    such as the name and description of the DLL.  It also exports
	functions from the DLL.

LogHours.clw
    This file contains information used by ClassWizard to edit existing
    classes or add new classes.  ClassWizard also uses this file to store
    information needed to create and edit message maps and dialog data
    maps and to create prototype member functions.

/////////////////////////////////////////////////////////////////////////////
Other standard files:

StdAfx.h, StdAfx.cpp
    These files are used to build a precompiled header (PCH) file
    named LogHours.pch and a precompiled types file named StdAfx.obj.

Resource.h
    This is the standard header file, which defines new resource IDs.
    Microsoft Developer Studio reads and updates this file.

/////////////////////////////////////////////////////////////////////////////
Other notes:

AppWizard uses "TODO:" to indicate parts of the source code you
should add to or customize.

/////////////////////////////////////////////////////////////////////////////
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\display\proppage\res\iso-3166.txt ===
AFGHANISTAN                                     AF      AFG     004
ALBANIA                                         AL      ALB     008
ALGERIA                                         DZ      DZA     012
AMERICAN SAMOA                                  AS      ASM     016
ANDORRA                                         AD      AND     020
ANGOLA                                          AO      AGO     024
ANGUILLA                                        AI      AIA     660
ANTARCTICA                                      AQ      ATA     010
ANTIGUA AND BARBUDA                             AG      ATG     028
ARGENTINA                                       AR      ARG     032
ARMENIA                                         AM      ARM     051
ARUBA                                           AW      ABW     533
AUSTRALIA                                       AU      AUS     036
AUSTRIA                                         AT      AUT     040
AZERBAIJAN                                      AZ      AZE     031
BAHAMAS                                         BS      BHS     044
BAHRAIN                                         BH      BHR     048
BANGLADESH                                      BD      BGD     050
BARBADOS                                        BB      BRB     052
BELARUS                                         BY      BLR     112
BELGIUM                                         BE      BEL     056
BELIZE                                          BZ      BLZ     084
BENIN                                           BJ      BEN     204
BERMUDA                                         BM      BMU     060
BHUTAN                                          BT      BTN     064
BOLIVIA                                         BO      BOL     068
BOSNIA AND HERZEGOWINA                          BA      BIH     070
BOTSWANA                                        BW      BWA     072
BOUVET ISLAND                                   BV      BVT     074
BRAZIL                                          BR      BRA     076
BRITISH INDIAN OCEAN TERRITORY                  IO      IOT     086
BRUNEI DARUSSALAM                               BN      BRN     096
BULGARIA                                        BG      BGR     100
BURKINA FASO                                    BF      BFA     854
BURUNDI                                         BI      BDI     108
CAMBODIA                                        KH      KHM     116
CAMEROON                                        CM      CMR     120
CANADA                                          CA      CAN     124
CAPE VERDE                                      CV      CPV     132
CAYMAN ISLANDS                                  KY      CYM     136
CENTRAL AFRICAN REPUBLIC                        CF      CAF     140
CHAD                                            TD      TCD     148
CHILE                                           CL      CHL     152
CHINA                                           CN      CHN     156
CHRISTMAS ISLAND                                CX      CXR     162
COCOS (KEELING) ISLANDS                         CC      CCK     166
COLOMBIA                                        CO      COL     170
COMOROS                                         KM      COM     174
CONGO                                           CG      COG     178
CONGO, THE DEMOCRATIC REPUBLIC OF THE           CD      COD     180
COOK ISLANDS                                    CK      COK     184
COSTA RICA                                      CR      CRI     188
COTE D'IVOIRE                                   CI      CIV     384
CROATIA (local name: Hrvatska)                  HR      HRV     191
CUBA                                            CU      CUB     192
CYPRUS                                          CY      CYP     196
CZECH REPUBLIC                                  CZ      CZE     203
DENMARK                                         DK      DNK     208
DJIBOUTI                                        DJ      DJI     262
DOMINICA                                        DM      DMA     212
DOMINICAN REPUBLIC                              DO      DOM     214
EAST TIMOR                                      TP      TMP     626
ECUADOR                                         EC      ECU     218
EGYPT                                           EG      EGY     818
EL SALVADOR                                     SV      SLV     222
EQUATORIAL GUINEA                               GQ      GNQ     226
ERITREA                                         ER      ERI     232
ESTONIA                                         EE      EST     233
ETHIOPIA                                        ET      ETH     231
FALKLAND ISLANDS (MALVINAS)                     FK      FLK     238
FAROE ISLANDS                                   FO      FRO     234
FIJI                                            FJ      FJI     242
FINLAND                                         FI      FIN     246
FRANCE                                          FR      FRA     250
FRANCE, METROPOLITAN                            FX      FXX     249
FRENCH GUIANA                                   GF      GUF     254
FRENCH POLYNESIA                                PF      PYF     258
FRENCH SOUTHERN TERRITORIES                     TF      ATF     260
GABON                                           GA      GAB     266
GAMBIA                                          GM      GMB     270
GEORGIA                                         GE      GEO     268
GERMANY                                         DE      DEU     276
GHANA                                           GH      GHA     288
GIBRALTAR                                       GI      GIB     292
GREECE                                          GR      GRC     300
GREENLAND                                       GL      GRL     304
GRENADA                                         GD      GRD     308
GUADELOUPE                                      GP      GLP     312
GUAM                                            GU      GUM     316
GUATEMALA                                       GT      GTM     320
GUINEA                                          GN      GIN     324
GUINEA-BISSAU                                   GW      GNB     624
GUYANA                                          GY      GUY     328
HAITI                                           HT      HTI     332
HEARD AND MC DONALD ISLANDS                     HM      HMD     334
HOLY SEE (VATICAN CITY STATE)                   VA      VAT     336
HONDURAS                                        HN      HND     340
HONG KONG                                       HK      HKG     344
HUNGARY                                         HU      HUN     348
ICELAND                                         IS      ISL     352
INDIA                                           IN      IND     356
INDONESIA                                       ID      IDN     360
IRAN (ISLAMIC REPUBLIC OF)                      IR      IRN     364
IRAQ                                            IQ      IRQ     368
IRELAND                                         IE      IRL     372
ISRAEL                                          IL      ISR     376
ITALY                                           IT      ITA     380
JAMAICA                                         JM      JAM     388
JAPAN                                           JP      JPN     392
JORDAN                                          JO      JOR     400
KAZAKHSTAN                                      KZ      KAZ     398
KENYA                                           KE      KEN     404
KIRIBATI                                        KI      KIR     296
KOREA, DEMOCRATIC PEOPLE'S REPUBLIC OF          KP      PRK     408
KOREA, REPUBLIC OF                              KR      KOR     410
KUWAIT                                          KW      KWT     414
KYRGYZSTAN                                      KG      KGZ     417
LAO PEOPLE'S DEMOCRATIC REPUBLIC                LA      LAO     418
LATVIA                                          LV      LVA     428
LEBANON                                         LB      LBN     422
LESOTHO                                         LS      LSO     426
LIBERIA                                         LR      LBR     430
LIBYAN ARAB JAMAHIRIYA                          LY      LBY     434
LIECHTENSTEIN                                   LI      LIE     438
LITHUANIA                                       LT      LTU     440
LUXEMBOURG                                      LU      LUX     442
MACAO SAR                                       MO      MAC     446
MACEDONIA, THE FORMER YUGOSLAV REPUBLIC OF      MK      MKD     807
MADAGASCAR                                      MG      MDG     450
MALAWI                                          MW      MWI     454
MALAYSIA                                        MY      MYS     458
MALDIVES                                        MV      MDV     462
MALI                                            ML      MLI     466
MALTA                                           MT      MLT     470
MARSHALL ISLANDS                                MH      MHL     584
MARTINIQUE                                      MQ      MTQ     474
MAURITANIA                                      MR      MRT     478
MAURITIUS                                       MU      MUS     480
MAYOTTE                                         YT      MYT     175
MEXICO                                          MX      MEX     484
MICRONESIA, FEDERATED STATES OF                 FM      FSM     583
MOLDOVA, REPUBLIC OF                            MD      MDA     498
MONACO                                          MC      MCO     492
MONGOLIA                                        MN      MNG     496
MONTSERRAT                                      MS      MSR     500
MOROCCO                                         MA      MAR     504
MOZAMBIQUE                                      MZ      MOZ     508
MYANMAR                                         MM      MMR     104
NAMIBIA                                         NA      NAM     516
NAURU                                           NR      NRU     520
NEPAL                                           NP      NPL     524
NETHERLANDS                                     NL      NLD     528
NETHERLANDS ANTILLES                            AN      ANT     530
NEW CALEDONIA                                   NC      NCL     540
NEW ZEALAND                                     NZ      NZL     554
NICARAGUA                                       NI      NIC     558
NIGER                                           NE      NER     562
NIGERIA                                         NG      NGA     566
NIUE                                            NU      NIU     570
NORFOLK ISLAND                                  NF      NFK     574
NORTHERN MARIANA ISLANDS                        MP      MNP     580
NORWAY                                          NO      NOR     578
OMAN                                            OM      OMN     512
PAKISTAN                                        PK      PAK     586
PALAU                                           PW      PLW     585
PANAMA                                          PA      PAN     591
PAPUA NEW GUINEA                                PG      PNG     598
PARAGUAY                                        PY      PRY     600
PERU                                            PE      PER     604
PHILIPPINES                                     PH      PHL     608
PITCAIRN                                        PN      PCN     612
POLAND                                          PL      POL     616
PORTUGAL                                        PT      PRT     620
PUERTO RICO                                     PR      PRI     630
QATAR                                           QA      QAT     634
REUNION                                         RE      REU     638
ROMANIA                                         RO      ROM     642
RUSSIAN FEDERATION                              RU      RUS     643
RWANDA                                          RW      RWA     646
SAINT KITTS AND NEVIS                           KN      KNA     659
SAINT LUCIA                                     LC      LCA     662
SAINT VINCENT AND THE GRENADINES                VC      VCT     670
SAMOA                                           WS      WSM     882
SAN MARINO                                      SM      SMR     674
SAO TOME AND PRINCIPE                           ST      STP     678
SAUDI ARABIA                                    SA      SAU     682
SENEGAL                                         SN      SEN     686
SEYCHELLES                                      SC      SYC     690
SIERRA LEONE                                    SL      SLE     694
SINGAPORE                                       SG      SGP     702
SLOVAKIA (Slovak Republic)                      SK      SVK     703
SLOVENIA                                        SI      SVN     705
SOLOMON ISLANDS                                 SB      SLB     090
SOMALIA                                         SO      SOM     706
SOUTH AFRICA                                    ZA      ZAF     710
SOUTH GEORGIA AND THE SOUTH SANDWICH ISLANDS    GS      SGS     239
SPAIN                                           ES      ESP     724
SRI LANKA                                       LK      LKA     144
ST. HELENA                                      SH      SHN     654
ST. PIERRE AND MIQUELON                         PM      SPM     666
SUDAN                                           SD      SDN     736
SURINAME                                        SR      SUR     740
SVALBARD AND JAN MAYEN ISLANDS                  SJ      SJM     744
SWAZILAND                                       SZ      SWZ     748
SWEDEN                                          SE      SWE     752
SWITZERLAND                                     CH      CHE     756
SYRIAN ARAB REPUBLIC                            SY      SYR     760
TAIWAN                                          TW      TWN     158
TAJIKISTAN                                      TJ      TJK     762
TANZANIA, UNITED REPUBLIC OF                    TZ      TZA     834
THAILAND                                        TH      THA     764
TOGO                                            TG      TGO     768
TOKELAU                                         TK      TKL     772
TONGA                                           TO      TON     776
TRINIDAD AND TOBAGO                             TT      TTO     780
TUNISIA                                         TN      TUN     788
TURKEY                                          TR      TUR     792
TURKMENISTAN                                    TM      TKM     795
TURKS AND CAICOS ISLANDS                        TC      TCA     796
TUVALU                                          TV      TUV     798
UGANDA                                          UG      UGA     800
UKRAINE                                         UA      UKR     804
UNITED ARAB EMIRATES                            AE      ARE     784
UNITED KINGDOM                                  GB      GBR     826
UNITED STATES                                   US      USA     840
UNITED STATES MINOR OUTLYING ISLANDS            UM      UMI     581
URUGUAY                                         UY      URY     858
UZBEKISTAN                                      UZ      UZB     860
VANUATU                                         VU      VUT     548
VENEZUELA                                       VE      VEN     862
VIET NAM                                        VN      VNM     704
VIRGIN ISLANDS (BRITISH)                        VG      VGB     092
VIRGIN ISLANDS (U.S.)                           VI      VIR     850
WALLIS AND FUTUNA ISLANDS                       WF      WLF     876
YEMEN                                           YE      YEM     887
YUGOSLAVIA                                      YU      YUG     891
ZAMBIA                                          ZM      ZMB     894
ZIMBABWE                                        ZW      ZWE     716
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\display\proppage\sample\dssample.doc ===
Microsoft Word Document MSWordDoc Word.Document.8Sample Code for DS-11 Session Title _PID_GUIDSample Code for DS-11 Session Eric Brown Normal.dot Eric Brown Microsoft Word 8.0Sample Code for the DS-11 Session Extending the Active Directory User Interface The enclosed sample code creates a COM object that produces a property page. This sample shows how to use the COM interfaces IShellExtInit and IShellPropSheetExt to create property pages. Property pages for Active Directory Objects can be created one of two ways: using HTML or as a COM object. HTML property pages are not supported in the first NT 5 beta release. COM object property pages must implement the two shell extension interfaces as illustrated by this sample. Note that the sample uses two separate classes (in addition to the class factory class). They could be combined into one, but in actual practice you may want to have several page classes be created by a single page host class. Steps to Use Copy proppage.dll from the debug directory to somewhere on the target machine s path. regsvr32 proppage.dll  to register the class ID of the page. Copy the dispspec.exe application to somewhere on your path and start it. The General page should be pointed to the user class. If not, choose the user class. Choose the Property Page tab of the dispspec application. Choose  Administrative  from the View combobox. Click on the Add button. In the  Add Property Page  dialog, choose the  ActiveX Pages  radio button and then type  DsSamplePropertyPage  (without the quotes) into the ProgID edit control and click OK. Click OK in the dispspec application to close it. Start  mmc.exe  and choose Console-Add/Remove Snap-in and add the  Schema Management  Snap-in. Add a new attribute with the Common Name of  Spending-Limit , the LDAP Display name of  spendingLimit , and the Syntax of  Case Insensitive String . Add this new attribute to the Optional Attributes of the User class object. Again go to the MMC Console-Add/Remove Snap-in menu item and add the  Microsoft Directory Service Manager  snap-in. Now, when you view properties on a user object, you should see a new tab  Spending Limit  where you can view and set the new user attribute. Note that it takes a minimum of 5 minutes for schema changes to be added to the Active Directory s in-memory schema cache. Steps to Compile the Sample Code This sample code is a Microsoft Visual C++ 5.0 project. To load it into VC++ do the following: Copy the sample code to a directory on your hard disk. Start VC++ 5.0. Choose File-Open Workspace, navigate to the directory containing the sample code and choose  sample.dsw. Press F7 to compile the code. Notes on the DispSpec.exe Application This is a temporary tool for the first beta. We expect its functionality to be replaced in a later release. The exact form of the replacement application has yet to be determined. If you want to modify the Context Menu for a class, you must delete the existing class ID and substitute a new class ID or menu command. This is a Beta 1 limitation that will be addressed in the next beta release. This application cannot create new Display Specifier objects nor can it modify the list of Display Specifiers stored on schema class objects. These are Beta 1 limitations that will be removed by the final release. Display Specifier White Paper A white paper has been written that explains in detail the architecture and implementation of the Windows NT Active Directory user interface extension mechanism. We expect this white paper will be available for downloading from the Microsoft Web site.
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\dsadminlib\dependencies.txt ===
This is a list of the components that depend on dsadminp.lib and/or the headers in admin\dsadminlib\inc

Component:                             Location:

Active Directory Users & Computers,    admin\snapin\dsadmin
Active Directory Schema,               admin\snapin\schmmgmt
Active Directory Domains & Trusts,     admin\snapin\domain
Delegation of Control Wizard,          admin\extens\OUDeleg
DS Command line utilities,             admin\dscmd
Active Directory Property Pages,       admin\display\proppage
ACL Diag,                              admin\extens\acldiag
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\dsclientnt4\package\ml\eula.doc ===
Microsoft Word Document MSWordDoc Word.Document.8Microsoft SUPPLEMENTAL END USER LICENSE AGREEMENT FOR MICROSOFT SOFTWARE TitleSUPPLEMENTAL END USER LICENSE AGREEMENT FOR MICROSOFT SOFTWARE Normal.dot Microsoft Word 9.0SUPPLEMENTAL END USER LICENSE AGREEMENT FOR MICROSOFT SOFTWARE ( Supplemental EULA IMPORTANT:  READ CAREFULLY   The Microsoft operating system components accompanying this Supplemental EULA, including any  online  or electronic documentation ( OS Components ) are subject to the terms and conditions of the agreement under which you have licensed the applicable Microsoft operating system product described below (each an  End User License Agreement ) and the terms and conditions of this Supplemental EULA.  BY INSTALLING, COPYING, DOWNLOADING, ACCESSING, OR OTHERWISE USING THE OS COMPONENTS, YOU AGREE TO BE BOUND BY THE TERMS AND CONDITIONS OF THE APPLICABLE OPERATING SYSTEM PRODUCT EULA AND THIS SUPPLEMENTAL EULA.  IF YOU DO NOT AGREE TO THESE TERMS AND CONDITIONS, YOU MAY NOT INSTALL, COPY, DOWNLOAD, ACCESS, OR USE THE OS COMPONENTS. NOTE:  IF YOU DO NOT HAVE A VALIDLY LICENSED COPY OF ANY VERSION OR EDITION OF MICROSOFT WINDOWS NT 4.0 (each an  OS Product ), YOU ARE NOT AUTHORIZED TO INSTALL, COPY, DOWNLOAD, ACCESS, OR OTHERWISE USE THE OS COMPONENTS AND YOU HAVE NO RIGHTS UNDER THIS SUPPLEMENTAL EULA. Capitalized terms used in this Supplemental EULA and not otherwise defined herein shall have the meanings assigned to them in the applicable OS Product EULA. General.  The OS Components are provided to you solely to update, supplement, or replace existing functionality of the applicable OS Product, and upon installation the OS Components become a part of the OS Product.  In the event your OS Product is a version of Windows NT Server, the OS Components are deemed  Client Software .  You are hereby granted a license to use the OS Components under the terms and conditions of the OS Product EULA for the applicable OS Product (which are hereby incorporated by reference) and the terms and conditions set forth in this Supplemental EULA, provided that you comply with all such terms and conditions.  To the extent that there is a conflict among any of these terms and conditions applicable to the OS Components, the terms and conditions in this Supplemental EULA shall take precedence. Additional Rights and Limitations.   You may reproduce, install and use one copy of the OS Components on each of your computers running validly licensed copies of the OS Product provided that each such computer is not acting as a domain controller, and provided that you use such additional copies of the OS Components in accordance with the terms and conditions above.   Unless you acquired the OS Components on external media, you may make a single copy of the OS Components solely for archival purposes or reinstallation of the OS Components on the same computer as the OS Components were previously installed.  Microsoft Corporation, its subsidiaries and/or suppliers retain all right, title and interest in and to the OS Components.  All rights not expressly granted are reserved by Microsoft Corporation, its subsidiaries and/or suppliers. You may reproduce and distribute an unlimited number of copies of the OS Components (either (i) as a whole, including all components, (ii) as a whole but without the user interface components, or (iii) just the complete Active Directory Service Interfaces ( ) package portion) provided that: (a) you distribute the OS Components in object code form only as part of and in conjunction with your own software application product; (b) your software application product adds significant and primary functionality to the OS Components; (c) you distribute your own software application product containing the OS Components pursuant to an End-User License Agreement with terms no less protective than those contained in the applicable OS Product EULA (including the restrictions contained in this Supplemental EULA).  Your End-User License Agreement may be  break-the-seal click-wrap  or signed; (d) you include a valid copyright notice for your software application product and do not remove any copyright or trademark notices contained in the OS Components; (e) you indemnify, hold harmless and defend Microsoft from and against any claims or lawsuits, including attorneys  fees, that arise or result from the use or distribution of your software application product; (f) you do not modify the OS Components; and (g) you do not permit further redistribution of the OS Components. You acknowledge that the OS Components are of U.S. origin.  You agree to comply with all applicable international and national laws that apply to the OS Components, including the U.S. Export Administration Regulations, as well as end-user, end-use and destination restrictions issued by U.S. and other governments. For additional information, see <http://www.microsoft.com/exporting/>. THE LIMITED WARRANTY (IF ANY) INCLUDED IN THE APPLICABLE OS PRODUCT EULA APPLIES TO THE OS COMPONENTS PROVIDED THE OS COMPONENTS HAVE BEEN LICENSED BY YOU WITHIN THE TERM OF THE LIMITED WARRANTY IN THE APPLICABLE OS PRODUCT EULA.  THIS SUPPLEMENTAL EULA DOES NOT EXTEND THE TIME PERIOD FOR WHICH THE LIMITED WARRANTY IS PROVIDED. Windows Update Consumer_v4 FINAL
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\dsclientnt4\package\usa\eula.doc ===
Microsoft Word Document MSWordDoc Word.Document.8Microsoft SUPPLEMENTAL END USER LICENSE AGREEMENT FOR MICROSOFT SOFTWARE TitleSUPPLEMENTAL END USER LICENSE AGREEMENT FOR MICROSOFT SOFTWARE Normal.dot Microsoft Word 9.0SUPPLEMENTAL END USER LICENSE AGREEMENT FOR MICROSOFT SOFTWARE ( Supplemental EULA IMPORTANT:  READ CAREFULLY   The Microsoft operating system components accompanying this Supplemental EULA, including any  online  or electronic documentation ( OS Components ) are subject to the terms and conditions of the agreement under which you have licensed the applicable Microsoft operating system product described below (each an  End User License Agreement ) and the terms and conditions of this Supplemental EULA.  BY INSTALLING, COPYING, DOWNLOADING, ACCESSING, OR OTHERWISE USING THE OS COMPONENTS, YOU AGREE TO BE BOUND BY THE TERMS AND CONDITIONS OF THE APPLICABLE OPERATING SYSTEM PRODUCT EULA AND THIS SUPPLEMENTAL EULA.  IF YOU DO NOT AGREE TO THESE TERMS AND CONDITIONS, YOU MAY NOT INSTALL, COPY, DOWNLOAD, ACCESS, OR USE THE OS COMPONENTS. NOTE:  IF YOU DO NOT HAVE A VALIDLY LICENSED COPY OF ANY VERSION OR EDITION OF MICROSOFT WINDOWS NT 4.0 (each an  OS Product ), YOU ARE NOT AUTHORIZED TO INSTALL, COPY, DOWNLOAD, ACCESS, OR OTHERWISE USE THE OS COMPONENTS AND YOU HAVE NO RIGHTS UNDER THIS SUPPLEMENTAL EULA. Capitalized terms used in this Supplemental EULA and not otherwise defined herein shall have the meanings assigned to them in the applicable OS Product EULA. General.  The OS Components are provided to you solely to update, supplement, or replace existing functionality of the applicable OS Product, and upon installation the OS Components become a part of the OS Product.  In the event your OS Product is a version of Windows NT Server, the OS Components are deemed  Client Software .  You are hereby granted a license to use the OS Components under the terms and conditions of the OS Product EULA for the applicable OS Product (which are hereby incorporated by reference) and the terms and conditions set forth in this Supplemental EULA, provided that you comply with all such terms and conditions.  To the extent that there is a conflict among any of these terms and conditions applicable to the OS Components, the terms and conditions in this Supplemental EULA shall take precedence. Additional Rights and Limitations.   You may reproduce, install and use one copy of the OS Components on each of your computers running validly licensed copies of the OS Product provided that each such computer is not acting as a domain controller, and provided that you use such additional copies of the OS Components in accordance with the terms and conditions above.   Unless you acquired the OS Components on external media, you may make a single copy of the OS Components solely for archival purposes or reinstallation of the OS Components on the same computer as the OS Components were previously installed.  Microsoft Corporation, its subsidiaries and/or suppliers retain all right, title and interest in and to the OS Components.  All rights not expressly granted are reserved by Microsoft Corporation, its subsidiaries and/or suppliers. You may reproduce and distribute an unlimited number of copies of the OS Components (either (i) as a whole, including all components, (ii) as a whole but without the user interface components, or (iii) just the complete Active Directory Service Interfaces ( ) package portion) provided that: (a) you distribute the OS Components in object code form only as part of and in conjunction with your own software application product; (b) your software application product adds significant and primary functionality to the OS Components; (c) you distribute your own software application product containing the OS Components pursuant to an End-User License Agreement with terms no less protective than those contained in the applicable OS Product EULA (including the restrictions contained in this Supplemental EULA).  Your End-User License Agreement may be  break-the-seal click-wrap  or signed; (d) you include a valid copyright notice for your software application product and do not remove any copyright or trademark notices contained in the OS Components; (e) you indemnify, hold harmless and defend Microsoft from and against any claims or lawsuits, including attorneys  fees, that arise or result from the use or distribution of your software application product; (f) you do not modify the OS Components; and (g) you do not permit further redistribution of the OS Components. You acknowledge that the OS Components are of U.S. origin.  You agree to comply with all applicable international and national laws that apply to the OS Components, including the U.S. Export Administration Regulations, as well as end-user, end-use and destination restrictions issued by U.S. and other governments. For additional information, see <http://www.microsoft.com/exporting/>. THE LIMITED WARRANTY (IF ANY) INCLUDED IN THE APPLICABLE OS PRODUCT EULA APPLIES TO THE OS COMPONENTS PROVIDED THE OS COMPONENTS HAVE BEEN LICENSED BY YOU WITHIN THE TERM OF THE LIMITED WARRANTY IN THE APPLICABLE OS PRODUCT EULA.  THIS SUPPLEMENTAL EULA DOES NOT EXTEND THE TIME PERIOD FOR WHICH THE LIMITED WARRANTY IS PROVIDED. Windows Update Consumer_v4 FINAL
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\dsclientnt4\package\usa\eula.txt ===
SUPPLEMENTAL END USER LICENSE AGREEMENT FOR MICROSOFT SOFTWARE ("Supplemental EULA")


IMPORTANT:  READ CAREFULLY  The Microsoft operating system components accompanying this Supplemental EULA, including any "online" or electronic documentation ("OS Components") are subject to the terms and conditions of the agreement under which you have licensed the applicable Microsoft operating system product described below (each an "End User License Agreement" or "EULA") and the terms and conditions of this Supplemental EULA.  BY INSTALLING, COPYING, DOWNLOADING, ACCESSING, OR OTHERWISE USING THE OS COMPONENTS, YOU AGREE TO BE BOUND BY THE TERMS AND CONDITIONS OF THE APPLICABLE OPERATING SYSTEM PRODUCT EULA AND THIS SUPPLEMENTAL EULA.  IF YOU DO NOT AGREE TO THESE TERMS AND CONDITIONS, YOU MAY NOT INSTALL, COPY, DOWNLOAD, ACCESS, OR USE THE OS COMPONENTS.

NOTE:  IF YOU DO NOT HAVE A VALIDLY LICENSED COPY OF ANY VERSION OR EDITION OF MICROSOFT WINDOWS NT 4.0 (each an "OS Product"), YOU ARE NOT AUTHORIZED TO INSTALL, COPY, DOWNLOAD, ACCESS, OR OTHERWISE USE THE OS COMPONENTS AND YOU HAVE NO RIGHTS UNDER THIS SUPPLEMENTAL EULA.

Capitalized terms used in this Supplemental EULA and not otherwise defined herein shall have the meanings assigned to them in the applicable OS Product EULA.

General.  The OS Components are provided to you solely to update, supplement, or replace existing functionality of the applicable OS Product, and upon installation the OS Components become a part of the OS Product.  In the event your OS Product is a version of Windows NT Server, the OS Components are deemed "Client Software".  You are hereby granted a license to use the OS Components under the terms and conditions of the OS Product EULA for the applicable OS Product (which are hereby incorporated by reference) and the terms and conditions set forth in this Supplemental EULA, provided that you comply with all such terms and conditions.  To the extent that there is a conflict among any of these terms and conditions applicable to the OS Components, the terms and conditions in this Supplemental EULA shall take precedence.

Additional Rights and Limitations.  

*	You may reproduce, install and use one copy of the OS Components on each of your computers running validly licensed copies of the OS Product provided that each such computer is not acting as a domain controller, and provided that you use such additional copies of the OS Components in accordance with the terms and conditions above.  

*	Unless you acquired the OS Components on external media, you may make a single copy of the OS Components solely for archival purposes or reinstallation of the OS Components on the same computer as the OS Components were previously installed.  Microsoft Corporation, its subsidiaries and/or suppliers retain all right, title and interest in and to the OS Components.  All rights not expressly granted are reserved by Microsoft Corporation, its subsidiaries and/or suppliers.

*	You may reproduce and distribute an unlimited number of copies of the OS Components (either (i) as a whole, including all components, (ii) as a whole but without the user interface components, or (iii) just the complete Active Directory Service Interfaces ("ADSI") package portion) provided that: (a) you distribute the OS Components in object code form only as part of and in conjunction with your own software application product; (b) your software application product adds significant and primary functionality to the OS Components; (c) you distribute your own software application product containing the OS Components pursuant to an End-User License Agreement with terms no less protective than those contained in the applicable OS Product EULA (including the restrictions contained in this Supplemental EULA).  Your End-User License Agreement may be "break-the-seal", "click-wrap" or signed; (d) you include a valid copyright notice for your software application product and do not remove any copyright or trademark notices contained in the OS Components; (e) you indemnify, hold harmless and defend Microsoft from and against any claims or lawsuits, including attorneys' fees, that arise or result from the use or distribution of your software application product; (f) you do not modify the OS Components; and (g) you do not permit further redistribution of the OS Components.

*	You acknowledge that the OS Components are of U.S. origin.  You agree to comply with all applicable international and national laws that apply to the OS Components, including the U.S. Export Administration Regulations, as well as end-user, end-use and destination restrictions issued by U.S. and other governments. For additional information, see <http://www.microsoft.com/exporting/>.

THE LIMITED WARRANTY (IF ANY) INCLUDED IN THE APPLICABLE OS PRODUCT EULA APPLIES TO THE OS COMPONENTS PROVIDED THE OS COMPONENTS HAVE BEEN LICENSED BY YOU WITHIN THE TERM OF THE LIMITED WARRANTY IN THE APPLICABLE OS PRODUCT EULA.  THIS SUPPLEMENTAL EULA DOES NOT EXTEND THE TIME PERIOD FOR WHICH THE LIMITED WARRANTY IS PROVIDED.
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\dsclientnt4\readme.txt ===
Building the setup binaries and the dsclient.exe cabinet file:

////////////////////////////////////////////////////////////////////////////////////////////////
BUILDING THE SETUP BINARIES:

The source files for setup.exe and dscsetup.dll are also available in the dsclientNT4\setup directory.  
To build them start up a normal razzle window and from %sdxroot%\admin\dsclientNT4 type buildsetup.cmd.  
The binaries will be built and copied to the binaries\usa directory.

////////////////////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////////////////////
GENERATING THE CABINET FILES:

The makedsclient.cmd works as follows (where <loc> = usa, jpn, cht, etc.):
All binaries that will be packaged must be in a loc directory under dsclientNT4\binaries\<loc>
All help files must be in dsclientNT4\help\<loc>
All cab generation files (sed, inf, EULA.txt) must be in dsclientNT4\package\<loc>

Makedsclient <loc> (if <loc> is not specified it defaults to usa) will create a directory 
called dsclientNT4\release\<loc> and copy all binaries, help, and package files.  
It then runs iexpress to generate the adsix86.exe and dsclient.exe cabs.

The final deliverable will be found at %sdxroot%\admin\dsclientNT4\release\<loc>\dsclient.exe

/////////////////////////////////////////////////////////////////////////////////////////////////
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\dsclientnt4\package\ml\eula.txt ===
SUPPLEMENTAL END USER LICENSE AGREEMENT FOR MICROSOFT SOFTWARE ("Supplemental EULA")


IMPORTANT:  READ CAREFULLY  The Microsoft operating system components accompanying this Supplemental EULA, including any "online" or electronic documentation ("OS Components") are subject to the terms and conditions of the agreement under which you have licensed the applicable Microsoft operating system product described below (each an "End User License Agreement" or "EULA") and the terms and conditions of this Supplemental EULA.  BY INSTALLING, COPYING, DOWNLOADING, ACCESSING, OR OTHERWISE USING THE OS COMPONENTS, YOU AGREE TO BE BOUND BY THE TERMS AND CONDITIONS OF THE APPLICABLE OPERATING SYSTEM PRODUCT EULA AND THIS SUPPLEMENTAL EULA.  IF YOU DO NOT AGREE TO THESE TERMS AND CONDITIONS, YOU MAY NOT INSTALL, COPY, DOWNLOAD, ACCESS, OR USE THE OS COMPONENTS.

NOTE:  IF YOU DO NOT HAVE A VALIDLY LICENSED COPY OF ANY VERSION OR EDITION OF MICROSOFT WINDOWS NT 4.0 (each an "OS Product"), YOU ARE NOT AUTHORIZED TO INSTALL, COPY, DOWNLOAD, ACCESS, OR OTHERWISE USE THE OS COMPONENTS AND YOU HAVE NO RIGHTS UNDER THIS SUPPLEMENTAL EULA.

Capitalized terms used in this Supplemental EULA and not otherwise defined herein shall have the meanings assigned to them in the applicable OS Product EULA.

General.  The OS Components are provided to you solely to update, supplement, or replace existing functionality of the applicable OS Product, and upon installation the OS Components become a part of the OS Product.  In the event your OS Product is a version of Windows NT Server, the OS Components are deemed "Client Software".  You are hereby granted a license to use the OS Components under the terms and conditions of the OS Product EULA for the applicable OS Product (which are hereby incorporated by reference) and the terms and conditions set forth in this Supplemental EULA, provided that you comply with all such terms and conditions.  To the extent that there is a conflict among any of these terms and conditions applicable to the OS Components, the terms and conditions in this Supplemental EULA shall take precedence.

Additional Rights and Limitations.  

*	You may reproduce, install and use one copy of the OS Components on each of your computers running validly licensed copies of the OS Product provided that each such computer is not acting as a domain controller, and provided that you use such additional copies of the OS Components in accordance with the terms and conditions above.  

*	Unless you acquired the OS Components on external media, you may make a single copy of the OS Components solely for archival purposes or reinstallation of the OS Components on the same computer as the OS Components were previously installed.  Microsoft Corporation, its subsidiaries and/or suppliers retain all right, title and interest in and to the OS Components.  All rights not expressly granted are reserved by Microsoft Corporation, its subsidiaries and/or suppliers.

*	You may reproduce and distribute an unlimited number of copies of the OS Components (either (i) as a whole, including all components, (ii) as a whole but without the user interface components, or (iii) just the complete Active Directory Service Interfaces ("ADSI") package portion) provided that: (a) you distribute the OS Components in object code form only as part of and in conjunction with your own software application product; (b) your software application product adds significant and primary functionality to the OS Components; (c) you distribute your own software application product containing the OS Components pursuant to an End-User License Agreement with terms no less protective than those contained in the applicable OS Product EULA (including the restrictions contained in this Supplemental EULA).  Your End-User License Agreement may be "break-the-seal", "click-wrap" or signed; (d) you include a valid copyright notice for your software application product and do not remove any copyright or trademark notices contained in the OS Components; (e) you indemnify, hold harmless and defend Microsoft from and against any claims or lawsuits, including attorneys' fees, that arise or result from the use or distribution of your software application product; (f) you do not modify the OS Components; and (g) you do not permit further redistribution of the OS Components.

*	You acknowledge that the OS Components are of U.S. origin.  You agree to comply with all applicable international and national laws that apply to the OS Components, including the U.S. Export Administration Regulations, as well as end-user, end-use and destination restrictions issued by U.S. and other governments. For additional information, see <http://www.microsoft.com/exporting/>.

THE LIMITED WARRANTY (IF ANY) INCLUDED IN THE APPLICABLE OS PRODUCT EULA APPLIES TO THE OS COMPONENTS PROVIDED THE OS COMPONENTS HAVE BEEN LICENSED BY YOU WITHIN THE TERM OF THE LIMITED WARRANTY IN THE APPLICABLE OS PRODUCT EULA.  THIS SUPPLEMENTAL EULA DOES NOT EXTEND THE TIME PERIOD FOR WHICH THE LIMITED WARRANTY IS PROVIDED.
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\dscmd\test\expectedsuccess.txt ===
********** dsadd usage **********

********** dsadd -h usage **********

********** dsadd ou -h **********
Description:  dsadd ou adds an organizational unit to the directory

Syntax:  dsadd ou OBJECTDN [-desc DESCRIPTION]

Parameters:



Value                   Description

OBJECTDN                DN of the OU to add

-desc DESCRIPTION       Set the OU description to DESCRIPTION


********** dsadd group -h **********
Description:  dsadd group adds a group to the directory

Syntax:  dsadd group OBJECTDN [-secgrp yes|no]

[-scope l|g|u] [-samid SAMNAME] [-desc DESCRIPTION]

[-memberof GROUP;...] [-members MEMBER;...]

Parameters:



Value                   Description

OBJECTDN                DN of group to add

-secgrp yes|no          This group is a security grp or not [Default: yes]

-scope l|g|u            Scope of this group: local, global or universal

                        [Default: global]

-samid SAMNAME          Set the SAM account name of group to SAMNAME

-desc DESCRIPTION       Set group description to DESCRIPTION

-memberof GROUP;...     Make group a member of one or more groups GROUP;...

-members MEMBER;...     Add one or more members MEMBER;... to this group


********** dsadd user -h **********
Description:  dsadd user will add a user to the directory

Syntax:  dsadd user OBJECTDN -samid SAMNAME [-upn UPN]

[-fn FIRSTNAME] [-mi INITIAL] [-ln LASTNAME]

[-display DISPLAYNAME] [-empid EMPLOYEEID]

[-pwd {PASSWORD|*}] [-desc DESCRIPTION] [-memberof GROUP;...]

[-office OFFICE] [-tel PHONE#] [-email EMAIL]

[-hometel HOMEPHONE#] [-pager PAGER#] [-mobile CELLPHONE#]

[-fax FAX#] [-iptel IPPHONE#] [-webpg WEBPAGE]

[-title TITLE] [-dept DEPARTMENT] [-company COMPANY]

[-mgr MANAGER] [-hmdir HOMEDIR] [-hmdrv DRIVELTR:]

[-profile PROFILEPATH] [-loscr SCRIPTPATH]

[-mustchpwd yes|no] [-canchpwd yes|no] [-reversiblepwd yes|no]

[-pwdneverexpires yes|no] [-acctexpires NUMDAYS]

[-disabled yes|no]

Parameters:



Value                   Description

OBJECTDN                DN of user to add

-samid SAMNAME          Set the SAM account name of user to SAMNAME

-upn UPN                Set the upn value to UPN

-fn FIRSTNAME           Set user first name to FIRSTNAME

-mi INITIAL             Set user middle initial to INITIAL

-ln LASTNAME            Set user last name to LASTNAME

-display DISPLAYNAME    Set user display name to DISPLAYNAME

-empid EMPLOYEEID       Set user employee ID to EMPLOYEEID

-pwd PASSWORD | *       Set user password to PASSWORD [if *, then prompt

                        for password]

-desc DESCRIPTION       Set user description to DESCRIPTION

-memberof GROUP;...     Make user a member of one or more groups GROUP;...

-office OFFICE          Set user office location to OFFICE

-tel PHONE#             Set user telephone# to PHONE#

-email EMAIL            Set user e-mail address to EMAIL

-hometel HOMEPHONE#     Set user home phone# to HOMEPHONE#

-pager PAGER#           Set user pager# to PAGER#

-mobile CELLPHONE#      Set user mobile# to CELLPHONE#

-fax FAX#               Set user fax# to FAX#

-iptel IPPHONE#         Set user IP phone# to IPPHONE#

-webpg WEBPAGE          Set user web page URL to WEBPAGE

-title TITLE            Set user title to TITLE

-dept DEPARTMENT        Set user department to DEPARTMENT

-company COMPANY        Set user company info to COMPANY

-mgr MANAGER            Set user's manager to MANAGER

-hmdir HOMEDIR          Set user home directory to HOMEDIR (if this is

                        UNC path, then a drive letter to be mapped to

                        this path must also be specified through -hmdrv)

-hmdrv DRIVELTR:        Set user home drive letter to DRIVELTR:

-profile PROFILEPATH    Set user's profile path to PROFILEPATH

-loscr SCRIPTPATH       Set user's logon script path to SCRIPTPATH

-mustchpwd yes|no       User must change password at next logon or not

                        [Default: no]

-canchpwd yes|no        User can change password or not (this should be

                        "yes" if the -mustchpwd is "yes") [Default: yes]

-reversiblepwd yes|no   Store user password using reversible encryption or

                        not [Default: no]

-pwdneverexpires yes|no User password never expires or not [Default: no]

-acctexpires NUMDAYS    Set user account to expire in NUMDAYS days from

                        today [a value of 0 implies account never expires]

-disabled yes|no        User account is disabled or not [Default: no]


********** dsadd computer -h **********
Description: dsadd computer will add a computer to the directory

Syntax:  dsadd computer OBJECTDN [-samid SAMNAME] [-desc DESCRIPTION]

[-loc LOCATION] [-memberof GROUP;...]

Parameters:



Value                   Description

OBJECTDN                DN of computer to add

-samid SAMNAME          Set the computer SAM account name to SAMNAME

-desc DESCRIPTION       Set the computer description to DESCRIPTION

-loc LOCATION           Set the computer location to LOCATION

-memberof GROUP;...     Make computer a member of one or more groups 

                        given by the list GROUP;...


********** dsadd contact -h **********
Description:  dsadd contact adds a contact to the directory

Syntax:  dsadd contact OBJECTDN [-fn FIRSTNAME]

[-mi INITIAL] [-ln LASTNAME] [-display DISPLAYNAME]

[-desc DESCRIPTION]

[-office OFFICE] [-tel PHONE#] [-email EMAIL]

[-hometel HOMEPHONE#] [-pager PAGER#] [-mobile CELLPHONE#]

[-fax FAX#] [-iptel IPPHONE#]

[-title TITLE] [-dept DEPARTMENT] [-company COMPANY]

Parameters:



Value                   Description

OBJECTDN                DN of contact to add

-fn FIRSTNAME           Set contact first name to FIRSTNAME

-mi INITIAL             Set contact middle initial to INITIAL

-ln LASTNAME            Set contact last name to LASTNAME

-display DISPLAYNAME    Set contact display name to DISPLAYNAME

-desc DESCRIPTION       Set contact description to DESCRIPTION

-office OFFICE          Set contact office location to OFFICE

-tel PHONE#             Set contact telephone# to PHONE#

-email EMAIL            Set contact e-mail address to EMAIL

-hometel HOMEPHONE#     Set contact home phone# to HOMEPHONE#

-pager PAGER#           Set contact pager# to PAGER#

-mobile CELLPHONE#      Set contact mobile# to CELLPHONE#

-fax FAX#               Set contact fax# to FAX#

-title TITLE            Set contact title to TITLE

-dept DEPARTMENT        Set contact department to DEPARTMENT

-company COMPANY        Set contact company info to COMPANY


********** Adding OUs **********
dsadd succeeded:OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com
dsadd succeeded:OU=bTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com

********** Adding groups **********
dsadd succeeded:CN=aGroup,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com
dsadd succeeded:CN=bGroup,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com
dsadd succeeded:CN=cGroup,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com
dsadd succeeded:CN=dGroup,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com
dsadd succeeded:CN=eGroup,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com
dsadd succeeded:CN=fGroup,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com
dsadd succeeded:CN=gGroup,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com
dsadd succeeded:CN=hGroup,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com
dsadd succeeded:CN=iGroup,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com
dsadd succeeded:CN=jGroup,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com
dsadd succeeded:CN=kGroup,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com
dsadd succeeded:CN=lGroup,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com
dsadd succeeded:CN=mGroup,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com
dsadd succeeded:CN=nGroup,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com
dsadd succeeded:CN=LocalSec1,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com
dsadd succeeded:CN=GlobalSec1,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com
dsadd succeeded:CN=UniSec1,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com
dsadd succeeded:CN=LocalDist1,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com
dsadd succeeded:CN=GlobalDist1,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com
dsadd succeeded:CN=UniDist1,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com
dsadd succeeded:CN=LocalSec2,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com
dsadd succeeded:CN=GlobalSec2,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com
dsadd succeeded:CN=UniSec2,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com
dsadd succeeded:CN=LocalDist2,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com
dsadd succeeded:CN=GlobalDist2,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com
dsadd succeeded:CN=UniDist2,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com
dsadd succeeded:CN=LocalSec3,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com
dsadd succeeded:CN=GlobalSec3,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com
dsadd succeeded:CN=UniSec3,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com
dsadd succeeded:CN=LocalDist3,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com
dsadd succeeded:CN=GlobalDist3,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com
dsadd succeeded:CN=UniDist3,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com
dsadd succeeded:CN=LocalSec4,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com
dsadd succeeded:CN=GlobalSec4,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com
dsadd succeeded:CN=UniSec4,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com
dsadd succeeded:CN=LocalDist4,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com
dsadd succeeded:CN=GlobalDist4,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com
dsadd succeeded:CN=UniDist4,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com
dsadd succeeded:CN=LocalSec5,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com
dsadd succeeded:CN=GlobalSec5,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com
dsadd succeeded:CN=UniSec5,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com
dsadd succeeded:CN=LocalDist5,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com
dsadd succeeded:CN=GlobalDist5,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com
dsadd succeeded:CN=UniDist5,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com
dsadd succeeded:CN=LocalSec6,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com
dsadd succeeded:CN=GlobalSec6,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com
dsadd succeeded:CN=UniSec6,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com
dsadd succeeded:CN=LocalDist6,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com
dsadd succeeded:CN=GlobalDist6,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com
dsadd succeeded:CN=UniDist6,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com
dsadd succeeded:CN=LocalSec7,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com
dsadd succeeded:CN=GlobalSec7,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com
dsadd succeeded:CN=UniSec7,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com
dsadd succeeded:CN=LocalDist7,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com
dsadd succeeded:CN=GlobalDist7,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com
dsadd succeeded:CN=UniDist7,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com

********** Adding users **********
dsadd succeeded:CN=aUser,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com
dsadd succeeded:CN=bUser,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com
dsadd succeeded:CN=cUser,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com
dsadd succeeded:CN=dUser,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com
dsadd succeeded:CN=eUser,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com

********** Adding users in groups **********
dsadd succeeded:CN=fUser,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com
dsadd succeeded:CN=gUser,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com
dsadd succeeded:CN=hUser,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com
dsadd succeeded:CN=iUser,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com
dsadd succeeded:CN=jUser,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com
dsadd succeeded:CN=kUser,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com
dsadd succeeded:CN=lUser,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com
dsadd succeeded:CN=mUser,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com
dsadd succeeded:CN=nUser,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com

********** Adding groups in groups **********
dsadd succeeded:CN=oGroup,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com
dsadd succeeded:CN=pGroup,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com
dsadd succeeded:CN=qGroup,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com
dsadd succeeded:CN=rGroup,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com
dsadd succeeded:CN=sGroup,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com
dsadd succeeded:CN=tGroup,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com
dsadd succeeded:CN=uGroup,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com
dsadd succeeded:CN=vGroup,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com
dsadd succeeded:CN=wGroup,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com
dsadd succeeded:CN=xGroup,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com
dsadd succeeded:CN=yGroup,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com
dsadd succeeded:CN=zGroup,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com

********** Adding computers **********
dsadd succeeded:CN=aComp,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com
dsadd succeeded:CN=bComp,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com
dsadd succeeded:CN=cComp,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com
dsadd succeeded:CN=dComp,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com
dsadd succeeded:CN=eComp,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com
dsadd succeeded:CN=fComp,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com
dsadd succeeded:CN=gComp,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com
dsadd succeeded:CN=hComp,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com
dsadd succeeded:CN=iComp,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com
dsadd succeeded:CN=jComp,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com
dsadd succeeded:CN=kComp,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com

********** Adding groups with members **********
dsadd succeeded:CN=aaGroup,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com
dsadd succeeded:CN=bbGroup,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com
dsadd succeeded:CN=ccGroup,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com
dsadd succeeded:CN=ddGroup,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com
dsadd succeeded:CN=eeGroup,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com
dsadd succeeded:CN=ffGroup,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com
dsadd succeeded:CN=ggGroup,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com
dsadd succeeded:CN=hhGroup,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com
dsadd succeeded:CN=iiGroup,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com
dsadd succeeded:CN=jjGroup,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com
dsadd succeeded:CN=kkGroup,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com
dsadd succeeded:CN=llGroup,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com
dsadd succeeded:CN=mmGroup,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com

********** Adding contacts **********
dsadd succeeded:CN=aCont,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com
dsadd succeeded:CN=bCont,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com
dsadd succeeded:CN=cCont,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com
dsadd succeeded:CN=dCont,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com
dsadd succeeded:CN=eCont,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com
dsadd succeeded:CN=fCont,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com

********** Expected Group MemberOf Failures **********

********** Expected Group Member Failures **********

********** Expected Duplicate Failures **********
 
******** Quite execution - If you see anything after this its a bug!!! ********
********** dsmod usage **********

********** dsmod -h **********

********** dsmod ou **********

********** dsmod ou -h **********
Description: dsmod ou will modify an existing organizational unit in the

directory

Syntax:     dsmod ou {<NAME > | <OBJECTDN ...>}

            [-name NEWNAME] [-desc DESCRIPTION]

Parameters:



Value                   Description

NAME                    Common name of one or more OUs to modify

OBJECTDN ...            DNs of one or more OUs to modify

-name NEWNAME           Rename the OU to NEWNAME

-desc DESCRIPTION       Set OU description to DESCRIPTION


********** dsmod group **********

********** dsmod group -h **********
Description: dsmod group modifies an existing group in the directory

Syntax:     dsmod group <OBJECTDN ......>

                [-samid SAMNAME] [-desc DESCRIPTION]

                [-secgrp yes|no] [-scope l|g|u]

            dsmod group {-addmbr|-rmmbr|-chmbr}

                OBJECTDN ...<MEMBER ...>



Parameters:



Value                   Description

NAME                    Common name of one or more groups to modify

OBJECTDN ......         DNs of one or more groups to modify

-name NEWNAME           Rename the group to NEWNAME

-samname SAMNAME        Set the SAM account name of group to SAMNAME

-desc DESCRIPTION       Set group description to DESCRIPTION

-secgrp yes|no          Set the group type to security or non-security

-scope l|g|u            Set the scope of group to local/global/universal

-memberof GROUP;        Make group a member of one or more groups GROUP;


********** dsmod user **********

********** dsmod user -h **********
Description:  dsmod user will modify an existing user in the directory

Syntax:     dsmod user {<NAME > | <OBJECTDN ...>}

            [-name NEWNAME]

            [-upn UPN] [-fn FIRSTNAME] [-mi INITIAL] [-ln LASTNAME]

            [-display DISPLAYNAME] [-pwd PASSWORD] [-desc DESCRIPTION]

            [-office OFFICE] [-tel PHONE#] [-email EMAIL]

            [-hometel HOMEPHONE#] [-pager PAGER#] [-mobile CELLPHONE#]

            [-fax FAX#] [-iptel IPPHONE#]

            [-title TITLE] [-dept DEPARTMENT] [-company COMPANY]

            [-mustchpwd yes|no] [-canchpwd yes|no] [-pwdneverexpires

            yes|no] [-acctexpires NUMDAYS] [-disabled yes|no]

Parameters:



Value                   Description

NAME                    Common name of one or more users to modify

OBJECTDN ...            DNs of one or more users to modify

-name NEWNAME           Rename the user to NEWNAME

-upn UPN                Set the upn value to UPN

-fn FIRSTNAME           Set user first name to FIRSTNAME

-mi INITIAL             Set user middle initial to INITIAL

-ln LASTNAME            Set user last name to LASTNAME

-display DISPLAYNAME    Set user display name to DISPLAYNAME

-pwd PASSWORD           Reset user password to PASSWORD

-desc DESCRIPTION       Set user description to DESCRIPTION

-office OFFICE          Set user office location to OFFICE

-tel PHONE#             Set user telephone# to PHONE#

-email EMAIL            Set user e-mail address to EMAIL

-hometel HOMEPHONE#     Set user home phone# to HOMEPHONE#

-pager PAGER#           Set user pager# to PAGER#

-mobile CELLPHONE#      Set user mobile# to CELLPHONE#

-fax FAX#               Set user fax# to FAX#

-title TITLE            Set user title to TITLE

-dept DEPARTMENT        Set user department to DEPARTMENT

-company COMPANY        Set user company info to COMPANY

-mustchpwd yes|no       Set if user must change password at next logon

-canchpwd yes|no        Set if user can change password or not

-pwdneverexpires yes|no Set if user password never expires or not

-acctexpires NUMDAYS    Set user account to expire in NUMDAYS days from

                        today [a value of 0 implies account never expires]

-disabled yes|no        Set if user account is disabled or not



Examples:

Resetting a user password can be accomplished by running



    dsmod user USERDN -pwd NEW_PASSWORD -mustchpwd yes



Passwords of multiple users can be reset at the same time to a common password

forcing them to change their password the next time they logon by running



    dsmod user USERDN1 USERDN2 USERDN3 -pwd NEW_PASSWORD -mustchpwd yes



Disabling multiple user accounts at the same time can be accomplished by running



    dsmod user USERDN1 USERDN2 USERDN3 -disabled yes




********** dsmod computer **********

********** dsmod computer -h **********
Description: dsmod computer will modify an existing computer in the directory

Syntax:     dsmod computer {<NAME > | <OBJECTDN ...>}

            [-name NEWNAME]

            [-desc DESCRIPTION] [-disabled yes|no] [-reset]

Parameters:



Value                   Description

NAME                    Common name of one or more computers to modify

OBJECTDN ...            DNs of one or more computers to modify

-name NEWNAME           Rename the computer to NEWNAME

-desc DESCRIPTION       Set computer description to DESCRIPTION

-disabled yes|no        Set if computer account is disabled or not

-reset                  Reset computer account



Examples:

Disabling (or reseting) multiple computer accounts at the same time can be

accomplished by running



    dsmod computer DN1 DN2 DN3 -disabled yes

    dsmod computer DN1 DN2 DN3 -reset


********** dsmod contact**********

********** dsmod contact -h **********
Description:  dsmod contact will modify an existing contact in the directory

Syntax:     dsmod contact {<NAME > | <OBJECTDN ...>}

            [-name NEWNAME]

            [-fn FIRSTNAME] [-mi INITIAL] [-ln LASTNAME]

            [-full FULLNAME] [-desc DESCRIPTION]

            [-office OFFICE] [-tel PHONE#] [-email EMAIL]

            [-hometel HOMEPHONE#] [-pager PAGER#] [-mobile CELLPHONE#]

            [-fax FAX#] [-iptel IPPHONE#]

            [-title TITLE] [-dept DEPARTMENT] [-company COMPANY]

Parameters:



Value                   Description

NAME                    Common name of one or more contacts to modify

OBJECTDN ...            DNs of one or more contacts to modify

-name NEWNAME           Rename the contact to NEWNAME

-fn FIRSTNAME           Set contact first name to FIRSTNAME

-mi INITIAL             Set contact middle initial to INITIAL

-ln LASTNAME            Set contact last name to LASTNAME

-full FULLNAME          Set contact full name to FULLNAME

-desc DESCRIPTION       Set contact description to DESCRIPTION

-office OFFICE          Set contact office location to OFFICE

-tel PHONE#             Set contact telephone# to PHONE#

-email EMAIL            Set contact e-mail address to EMAIL

-hometel HOMEPHONE#     Set contact home phone# to HOMEPHONE#

-pager PAGER#           Set contact pager# to PAGER#

-mobile CELLPHONE#      Set contact mobile# to CELLPHONE#

-fax FAX#               Set contact fax# to FAX#

-title TITLE            Set contact title to TITLE

-dept DEPARTMENT        Set contact department to DEPARTMENT

-company COMPANY        Set contact company info to COMPANY


********** Modifying OUs **********
dsmod succeeded:OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com

********** Modifying groups types **********
dsmod succeeded:CN=LocalSec3,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com
dsmod succeeded:CN=LocalSec5,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com
dsmod succeeded:CN=LocalSec7,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com
dsmod succeeded:CN=GlobalSec3,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com
dsmod succeeded:CN=GlobalSec5,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com
dsmod succeeded:CN=GlobalSec7,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com
dsmod succeeded:CN=UniSec3,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com
dsmod succeeded:CN=UniSec4,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com
dsmod succeeded:CN=UniSec5,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com
dsmod succeeded:CN=UniSec6,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com
dsmod succeeded:CN=UniSec7,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com
dsmod succeeded:CN=LocalDist3,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com
dsmod succeeded:CN=LocalDist5,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com
dsmod succeeded:CN=LocalDist7,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com
dsmod succeeded:CN=GlobalDist3,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com
dsmod succeeded:CN=GlobalDist5,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com
dsmod succeeded:CN=GlobalDist7,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com
dsmod succeeded:CN=UniDist3,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com
dsmod succeeded:CN=UniDist4,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com
dsmod succeeded:CN=UniDist5,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com
dsmod succeeded:CN=UniDist6,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com
dsmod succeeded:CN=UniDist7,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com

********** Expected group mod type failures **********

********** Expected group mod failures **********

********** Modifying users **********
dsmod succeeded:CN=bUser,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com
dsmod succeeded:CN=cUser,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com
dsmod succeeded:CN=dUser,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com
dsmod succeeded:CN=eUser,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com
dsmod succeeded:CN=eUser,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com
dsmod succeeded:CN=eUser,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com
dsmod succeeded:CN=eUser,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com
dsmod succeeded:CN=eUser,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com

********** Expected user mod failures (usage shown) *********

********** Modifying user in group membership **********
dsmod succeeded:CN=gGroup,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com
dsmod succeeded:CN=hGroup,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com
dsmod succeeded:CN=iGroup,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com

********** Modifying group in group using -addmbr **********
dsmod succeeded:CN=LocalSec1,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com
dsmod succeeded:CN=LocalSec1,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com
dsmod succeeded:CN=LocalSec1,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com
dsmod succeeded:CN=LocalSec1,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com
dsmod succeeded:CN=LocalSec1,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com
dsmod succeeded:CN=LocalSec1,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com
dsmod succeeded:CN=GlobalSec1,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com
dsmod succeeded:CN=GlobalSec1,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com
dsmod succeeded:CN=UniSec1,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com
dsmod succeeded:CN=UniSec1,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com
dsmod succeeded:CN=UniSec1,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com
dsmod succeeded:CN=UniSec1,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com
dsmod succeeded:CN=LocalDist1,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com
dsmod succeeded:CN=LocalDist1,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com
dsmod succeeded:CN=LocalDist1,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com
dsmod succeeded:CN=LocalDist1,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com
dsmod succeeded:CN=LocalDist1,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com
dsmod succeeded:CN=LocalDist1,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com
dsmod succeeded:CN=GlobalDist1,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com
dsmod succeeded:CN=GlobalDist1,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com
dsmod succeeded:CN=UniDist1,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com
dsmod succeeded:CN=UniDist1,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com
dsmod succeeded:CN=UniDist1,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com
dsmod succeeded:CN=UniDist1,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com

********** Expected group -addmbr failures *********

********** Modifying group in group using -chmbr **********
dsmod succeeded:CN=LocalSec2,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com
dsmod succeeded:CN=LocalSec2,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com
dsmod succeeded:CN=LocalSec2,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com
dsmod succeeded:CN=LocalSec2,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com
dsmod succeeded:CN=LocalSec2,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com
dsmod succeeded:CN=LocalSec2,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com
dsmod succeeded:CN=GlobalSec2,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com
dsmod succeeded:CN=GlobalSec2,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com
dsmod succeeded:CN=UniSec2,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com
dsmod succeeded:CN=UniSec2,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com
dsmod succeeded:CN=UniSec2,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com
dsmod succeeded:CN=UniSec2,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com
dsmod succeeded:CN=LocalDist2,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com
dsmod succeeded:CN=LocalDist2,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com
dsmod succeeded:CN=LocalDist2,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com
dsmod succeeded:CN=LocalDist2,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com
dsmod succeeded:CN=LocalDist2,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com
dsmod succeeded:CN=LocalDist2,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com
dsmod succeeded:CN=GlobalDist2,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com
dsmod succeeded:CN=GlobalDist2,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com
dsmod succeeded:CN=UniDist2,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com
dsmod succeeded:CN=UniDist2,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com
dsmod succeeded:CN=UniDist2,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com
dsmod succeeded:CN=UniDist2,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com

********** Expected group -chmbr failures *********

********** Modifying computers **********
dsmod succeeded:CN=bComp,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com
dsmod succeeded:CN=cComp,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com
dsmod succeeded:CN=dComp,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com
dsmod succeeded:CN=eComp,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com
dsmod succeeded:CN=fComp,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com
dsmod succeeded:CN=gComp,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com
dsmod succeeded:CN=hComp,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com
dsmod succeeded:CN=iComp,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com

********** Modifying contacts **********
dsmod succeeded:CN=aCont,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com
dsmod succeeded:CN=bCont,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com
dsmod succeeded:CN=cCont,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com
dsmod succeeded:CN=dCont,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com
dsmod succeeded:CN=eCont,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com
dsmod succeeded:CN=fCont,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com
 
******** Quite execution - If you see anything after this its a bug!!! ********
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\dscmd\test\expectederrors.txt ===
dsmod failed:OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com:Directory object not found.
Description:  dsadd will add objects to the directory

Syntax:  dsadd OBJECTTYPE [-s SERVER | -d DOMAIN]

[-u USERNAME] [-w {PASSWORD | *}] [-q] ARGUMENTS

Parameters:



Value             Description

-s SERVER         Connect to the DC with name SERVER [Default: this system]

-d DOMAIN         Connect to a DC in domain DOMAIN [Default: Logon domain]

-u USERNAME       Connect as USERNAME [Default: the logged in user]

-w PASSWORD       Password for the user USERNAME [if * then prompt for pwd]

-q                Quiet mode: suppress all output to STDOUT

OBJECTTYPE        Type of object to add which is one of {user,

                  computer,group,contact, ou, subnet, site,

                  slink, slinkbr, conn}

ARGUMENTS         Parameters specific to the object type being added.

                  For details, type "dsadd OBJECTTYPE -h" where OBJECTTYPE is

                  one of the valid object types listed above

Description:  dsadd will add objects to the directory

Syntax:  dsadd OBJECTTYPE [-s SERVER | -d DOMAIN]

[-u USERNAME] [-w {PASSWORD | *}] [-q] ARGUMENTS

Parameters:



Value             Description

-s SERVER         Connect to the DC with name SERVER [Default: this system]

-d DOMAIN         Connect to a DC in domain DOMAIN [Default: Logon domain]

-u USERNAME       Connect as USERNAME [Default: the logged in user]

-w PASSWORD       Password for the user USERNAME [if * then prompt for pwd]

-q                Quiet mode: suppress all output to STDOUT

OBJECTTYPE        Type of object to add which is one of {user,

                  computer,group,contact, ou, subnet, site,

                  slink, slinkbr, conn}

ARGUMENTS         Parameters specific to the object type being added.

                  For details, type "dsadd OBJECTTYPE -h" where OBJECTTYPE is

                  one of the valid object types listed above

dsadd failed:CN=nnGroup,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com:A global group cannot have a universal group as a member.
dsadd failed:CN=ooGroup,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com:A global group cannot have a universal group as a member.
dsadd failed:CN=ppGroup,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com:A global group cannot have a local group as a member.
dsadd failed:CN=qqGroup,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com:A universal group cannot have a local group as a member.
dsadd failed:CN=rrGroup,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com:A global group cannot have a local group as a member.
dsadd failed:CN=ssGroup,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com:A universal group cannot have a local group as a member.
dsadd failed:CN=ttGroup,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com:A universal group cannot have a local group as a member.
dsadd failed:CN=uuGroup,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com:A universal group cannot have a local group as a member.
dsadd failed:CN=vvGroup,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com:A global group cannot have a local group as a member.
dsadd failed:CN=wwGroup,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com:A global group cannot have a local group as a member.
dsadd failed:CN=xxGroup,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com:A global group cannot have a universal group as a member.
dsadd failed:CN=yyGroup,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com:A global group cannot have a universal group as a member.
dsadd failed:OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com:An attempt was made to add an object to the directory with a name that is already in use.
dsadd failed:CN=aGroup,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com:The specified group already exists.
dsadd failed:CN=aUser,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com:The specified user already exists.
dsadd failed:CN=aComp,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com:The specified user already exists.
dsadd failed:CN=aCont,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com:An attempt was made to add an object to the directory with a name that is already in use.
Description:  dsmod modifies existing objects in the directory

Syntax:     dsmod [-s SERVER | -d DOMAIN] [-u USERNAME] [-w {PASSWORD | *}] 

            [-q] OBJECTTYPE OBJECTDN ...[-desc DESCRIPTION] ARGUMENTS

Parameters:



Value             Description

-s SERVER         Connect to the DC with name SERVER [Default: this system]

-d DOMAIN         Connect to a DC in domain DOMAIN [Default: this domain]

-u USERNAME       Connect as USERNAME [Default: the logged in user]

-w PASSWORD       Password for the user USERNAME [if * then prompt for pwd]

-q                Quiet mode

OBJECTTYPE        Type of object to modify which is one of

                  {user, computer, group, contact, ou, subnet, site, slink, slinkbr, conn}

OBJECTDN ...      The LDAP distinguished name of the object being modified

-desc DESCRIPTION Set the description attribute for the object specified

                  by OBJECTDN

ARGUMENTS         Parameters specific to the object type being modified.

                  For details, type dsmod OBJECTTYPE h where OBJECTTYPE is

                  one of the valid object types listed above

Description:  dsmod modifies existing objects in the directory

Syntax:     dsmod [-s SERVER | -d DOMAIN] [-u USERNAME] [-w {PASSWORD | *}] 

            [-q] OBJECTTYPE OBJECTDN ...[-desc DESCRIPTION] ARGUMENTS

Parameters:



Value             Description

-s SERVER         Connect to the DC with name SERVER [Default: this system]

-d DOMAIN         Connect to a DC in domain DOMAIN [Default: this domain]

-u USERNAME       Connect as USERNAME [Default: the logged in user]

-w PASSWORD       Password for the user USERNAME [if * then prompt for pwd]

-q                Quiet mode

OBJECTTYPE        Type of object to modify which is one of

                  {user, computer, group, contact, ou, subnet, site, slink, slinkbr, conn}

OBJECTDN ...      The LDAP distinguished name of the object being modified

-desc DESCRIPTION Set the description attribute for the object specified

                  by OBJECTDN

ARGUMENTS         Parameters specific to the object type being modified.

                  For details, type dsmod OBJECTTYPE h where OBJECTTYPE is

                  one of the valid object types listed above

Description: dsmod ou will modify an existing organizational unit in the

directory

Syntax:     dsmod ou {<NAME > | <OBJECTDN ...>}

            [-name NEWNAME] [-desc DESCRIPTION]

Parameters:



Value                   Description

NAME                    Common name of one or more OUs to modify

OBJECTDN ...            DNs of one or more OUs to modify

-name NEWNAME           Rename the OU to NEWNAME

-desc DESCRIPTION       Set OU description to DESCRIPTION

Description: dsmod group modifies an existing group in the directory

Syntax:     dsmod group <OBJECTDN ......>

                [-samid SAMNAME] [-desc DESCRIPTION]

                [-secgrp yes|no] [-scope l|g|u]

            dsmod group {-addmbr|-rmmbr|-chmbr}

                OBJECTDN ...<MEMBER ...>



Parameters:



Value                   Description

NAME                    Common name of one or more groups to modify

OBJECTDN ......         DNs of one or more groups to modify

-name NEWNAME           Rename the group to NEWNAME

-samname SAMNAME        Set the SAM account name of group to SAMNAME

-desc DESCRIPTION       Set group description to DESCRIPTION

-secgrp yes|no          Set the group type to security or non-security

-scope l|g|u            Set the scope of group to local/global/universal

-memberof GROUP;        Make group a member of one or more groups GROUP;

Description:  dsmod user will modify an existing user in the directory

Syntax:     dsmod user {<NAME > | <OBJECTDN ...>}

            [-name NEWNAME]

            [-upn UPN] [-fn FIRSTNAME] [-mi INITIAL] [-ln LASTNAME]

            [-display DISPLAYNAME] [-pwd PASSWORD] [-desc DESCRIPTION]

            [-office OFFICE] [-tel PHONE#] [-email EMAIL]

            [-hometel HOMEPHONE#] [-pager PAGER#] [-mobile CELLPHONE#]

            [-fax FAX#] [-iptel IPPHONE#]

            [-title TITLE] [-dept DEPARTMENT] [-company COMPANY]

            [-mustchpwd yes|no] [-canchpwd yes|no] [-pwdneverexpires

            yes|no] [-acctexpires NUMDAYS] [-disabled yes|no]

Parameters:



Value                   Description

NAME                    Common name of one or more users to modify

OBJECTDN ...            DNs of one or more users to modify

-name NEWNAME           Rename the user to NEWNAME

-upn UPN                Set the upn value to UPN

-fn FIRSTNAME           Set user first name to FIRSTNAME

-mi INITIAL             Set user middle initial to INITIAL

-ln LASTNAME            Set user last name to LASTNAME

-display DISPLAYNAME    Set user display name to DISPLAYNAME

-pwd PASSWORD           Reset user password to PASSWORD

-desc DESCRIPTION       Set user description to DESCRIPTION

-office OFFICE          Set user office location to OFFICE

-tel PHONE#             Set user telephone# to PHONE#

-email EMAIL            Set user e-mail address to EMAIL

-hometel HOMEPHONE#     Set user home phone# to HOMEPHONE#

-pager PAGER#           Set user pager# to PAGER#

-mobile CELLPHONE#      Set user mobile# to CELLPHONE#

-fax FAX#               Set user fax# to FAX#

-title TITLE            Set user title to TITLE

-dept DEPARTMENT        Set user department to DEPARTMENT

-company COMPANY        Set user company info to COMPANY

-mustchpwd yes|no       Set if user must change password at next logon

-canchpwd yes|no        Set if user can change password or not

-pwdneverexpires yes|no Set if user password never expires or not

-acctexpires NUMDAYS    Set user account to expire in NUMDAYS days from

                        today [a value of 0 implies account never expires]

-disabled yes|no        Set if user account is disabled or not



Examples:

Resetting a user password can be accomplished by running



    dsmod user USERDN -pwd NEW_PASSWORD -mustchpwd yes



Passwords of multiple users can be reset at the same time to a common password

forcing them to change their password the next time they logon by running



    dsmod user USERDN1 USERDN2 USERDN3 -pwd NEW_PASSWORD -mustchpwd yes



Disabling multiple user accounts at the same time can be accomplished by running



    dsmod user USERDN1 USERDN2 USERDN3 -disabled yes



Description: dsmod computer will modify an existing computer in the directory

Syntax:     dsmod computer {<NAME > | <OBJECTDN ...>}

            [-name NEWNAME]

            [-desc DESCRIPTION] [-disabled yes|no] [-reset]

Parameters:



Value                   Description

NAME                    Common name of one or more computers to modify

OBJECTDN ...            DNs of one or more computers to modify

-name NEWNAME           Rename the computer to NEWNAME

-desc DESCRIPTION       Set computer description to DESCRIPTION

-disabled yes|no        Set if computer account is disabled or not

-reset                  Reset computer account



Examples:

Disabling (or reseting) multiple computer accounts at the same time can be

accomplished by running



    dsmod computer DN1 DN2 DN3 -disabled yes

    dsmod computer DN1 DN2 DN3 -reset

Description:  dsmod contact will modify an existing contact in the directory

Syntax:     dsmod contact {<NAME > | <OBJECTDN ...>}

            [-name NEWNAME]

            [-fn FIRSTNAME] [-mi INITIAL] [-ln LASTNAME]

            [-full FULLNAME] [-desc DESCRIPTION]

            [-office OFFICE] [-tel PHONE#] [-email EMAIL]

            [-hometel HOMEPHONE#] [-pager PAGER#] [-mobile CELLPHONE#]

            [-fax FAX#] [-iptel IPPHONE#]

            [-title TITLE] [-dept DEPARTMENT] [-company COMPANY]

Parameters:



Value                   Description

NAME                    Common name of one or more contacts to modify

OBJECTDN ...            DNs of one or more contacts to modify

-name NEWNAME           Rename the contact to NEWNAME

-fn FIRSTNAME           Set contact first name to FIRSTNAME

-mi INITIAL             Set contact middle initial to INITIAL

-ln LASTNAME            Set contact last name to LASTNAME

-full FULLNAME          Set contact full name to FULLNAME

-desc DESCRIPTION       Set contact description to DESCRIPTION

-office OFFICE          Set contact office location to OFFICE

-tel PHONE#             Set contact telephone# to PHONE#

-email EMAIL            Set contact e-mail address to EMAIL

-hometel HOMEPHONE#     Set contact home phone# to HOMEPHONE#

-pager PAGER#           Set contact pager# to PAGER#

-mobile CELLPHONE#      Set contact mobile# to CELLPHONE#

-fax FAX#               Set contact fax# to FAX#

-title TITLE            Set contact title to TITLE

-dept DEPARTMENT        Set contact department to DEPARTMENT

-company COMPANY        Set contact company info to COMPANY

dsmod failed:CN=LocalSec4,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com:The request is not supported.
dsmod failed:CN=LocalSec6,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com:The request is not supported.
dsmod failed:CN=GlobalSec4,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com:The request is not supported.
dsmod failed:CN=GlobalSec6,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com:The request is not supported.
dsmod failed:CN=LocalDist4,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com:The request is not supported.
dsmod failed:CN=LocalDist6,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com:The request is not supported.
dsmod failed:CN=GlobalDist4,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com:The request is not supported.
dsmod failed:CN=GlobalDist6,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com:The request is not supported.
dsmod failed:CN=dGroup,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com:The request is not supported.
dsmod failed:CN=dGroup,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com:The request is not supported.
Description:  dsmod user will modify an existing user in the directory

Syntax:     dsmod user {<NAME > | <OBJECTDN ...>}

            [-name NEWNAME]

            [-upn UPN] [-fn FIRSTNAME] [-mi INITIAL] [-ln LASTNAME]

            [-display DISPLAYNAME] [-pwd PASSWORD] [-desc DESCRIPTION]

            [-office OFFICE] [-tel PHONE#] [-email EMAIL]

            [-hometel HOMEPHONE#] [-pager PAGER#] [-mobile CELLPHONE#]

            [-fax FAX#] [-iptel IPPHONE#]

            [-title TITLE] [-dept DEPARTMENT] [-company COMPANY]

            [-mustchpwd yes|no] [-canchpwd yes|no] [-pwdneverexpires

            yes|no] [-acctexpires NUMDAYS] [-disabled yes|no]

Parameters:



Value                   Description

NAME                    Common name of one or more users to modify

OBJECTDN ...            DNs of one or more users to modify

-name NEWNAME           Rename the user to NEWNAME

-upn UPN                Set the upn value to UPN

-fn FIRSTNAME           Set user first name to FIRSTNAME

-mi INITIAL             Set user middle initial to INITIAL

-ln LASTNAME            Set user last name to LASTNAME

-display DISPLAYNAME    Set user display name to DISPLAYNAME

-pwd PASSWORD           Reset user password to PASSWORD

-desc DESCRIPTION       Set user description to DESCRIPTION

-office OFFICE          Set user office location to OFFICE

-tel PHONE#             Set user telephone# to PHONE#

-email EMAIL            Set user e-mail address to EMAIL

-hometel HOMEPHONE#     Set user home phone# to HOMEPHONE#

-pager PAGER#           Set user pager# to PAGER#

-mobile CELLPHONE#      Set user mobile# to CELLPHONE#

-fax FAX#               Set user fax# to FAX#

-title TITLE            Set user title to TITLE

-dept DEPARTMENT        Set user department to DEPARTMENT

-company COMPANY        Set user company info to COMPANY

-mustchpwd yes|no       Set if user must change password at next logon

-canchpwd yes|no        Set if user can change password or not

-pwdneverexpires yes|no Set if user password never expires or not

-acctexpires NUMDAYS    Set user account to expire in NUMDAYS days from

                        today [a value of 0 implies account never expires]

-disabled yes|no        Set if user account is disabled or not



Examples:

Resetting a user password can be accomplished by running



    dsmod user USERDN -pwd NEW_PASSWORD -mustchpwd yes



Passwords of multiple users can be reset at the same time to a common password

forcing them to change their password the next time they logon by running



    dsmod user USERDN1 USERDN2 USERDN3 -pwd NEW_PASSWORD -mustchpwd yes



Disabling multiple user accounts at the same time can be accomplished by running



    dsmod user USERDN1 USERDN2 USERDN3 -disabled yes



dsmod failed:CN=GlobalSec1,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com:A global group cannot have a local group as a member.
dsmod failed:CN=GlobalSec1,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com:A global group cannot have a universal group as a member.
dsmod failed:CN=GlobalSec1,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com:A global group cannot have a local group as a member.
dsmod failed:CN=GlobalSec1,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com:A global group cannot have a universal group as a member.
dsmod failed:CN=UniSec1,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com:A universal group cannot have a local group as a member.
dsmod failed:CN=UniSec1,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com:A universal group cannot have a local group as a member.
dsmod failed:CN=GlobalDist1,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com:A global group cannot have a local group as a member.
dsmod failed:CN=GlobalDist1,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com:A global group cannot have a universal group as a member.
dsmod failed:CN=GlobalDist1,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com:A global group cannot have a local group as a member.
dsmod failed:CN=GlobalDist1,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com:A global group cannot have a universal group as a member.
dsmod failed:CN=UniDist1,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com:A universal group cannot have a local group as a member.
dsmod failed:CN=UniDist1,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com:A universal group cannot have a local group as a member.
dsmod failed:CN=GlobalSec2,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com:A global group cannot have a local group as a member.
dsmod failed:CN=GlobalSec2,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com:A global group cannot have a universal group as a member.
dsmod failed:CN=GlobalSec2,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com:A global group cannot have a local group as a member.
dsmod failed:CN=GlobalSec2,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com:A global group cannot have a universal group as a member.
dsmod failed:CN=UniSec2,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com:A universal group cannot have a local group as a member.
dsmod failed:CN=UniSec2,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com:A universal group cannot have a local group as a member.
dsmod failed:CN=GlobalDist2,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com:A global group cannot have a local group as a member.
dsmod failed:CN=GlobalDist2,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com:A global group cannot have a universal group as a member.
dsmod failed:CN=GlobalDist2,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com:A global group cannot have a local group as a member.
dsmod failed:CN=GlobalDist2,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com:A global group cannot have a universal group as a member.
dsmod failed:CN=UniDist2,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com:A universal group cannot have a local group as a member.
dsmod failed:CN=UniDist2,OU=aTest,DC=jeffjontst,DC=nttest,DC=microsoft,DC=com:A universal group cannot have a local group as a member.
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\dsutils\displayspecifierupgrade\prebuild\readme.txt ===
preBuild.exe produces a new changesNNN.cpp file with the changes
between a new and an old set of 409.csv and dcpromo.csv files.
It also recreates guids.inc and setChanges.cpp and adds an entry
to changesNNN.cpp in sources.
All the files are supposed to be created in the target folder
that is a parent of the folder containing this folder has the 
sources for dspecup.lib that will run inside adprep.exe.

The changes are based on the difference between a new and an old
set of 409.csv and dcpromo.csv.

Type obj\i386\preBuild to see the usage.

Whenever dcpromo.csv or 409.csv change for the tool 
needs to be run. 

The csv files are in the folder ds\ds\schema\scripts\dsplspec.

Supposing that both 409.csv and dcpromo.csv 
changed,the following steps should be performed:

1) Set the current folder to the folder where this readme is 
(admin\dsutils\DisplaySpecifierUpgrade\preBuild)

2) Check out ..\sources, ..\setChanges.cpp, ..\guids.inc.

3) run obj\i386\preBuild.exe guid oldDcpromo newDcpromo old409 new409 z:\nt\admin\dsutil\displayspecifierupgrade

guid should be generated with uuidgen in the syntax 8B53221B-EA3C-4638-8D00-7C1BE42B2873

Wait for a success Message.

4) bcz the current and parent folders.

5) Talk to ShaoHua about the new guid. He has to add an entry to it in the same day
sources, setChanges.cpp and guids.inc are checked in, and the last changesXXX.cpp is sd added.
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\dsutils\displayspecifierupgrade\uiarchive\readme.txt ===
The files in this folder were part of the UI for the display specifiers upgrade.

The tool doesn't have a UI anymore, it has turned into a library.
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\netui\common\xlate\readme.txt ===
blt.rc, applib.rc, and wintime.rc resources now reside on LMUICMN0.

"bltapp.rc" exists for those BLT resources which must reside on the client

Others (such as lmobj.rc, etc.) the client should still bind to itself.
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\netui\common\xlate\string\sed0.txt ===
#n
/MAX_NERR/d
/^#define.*NERR_BASE/p
/^[ 	][ 	][ 	]*\*.*/s/^[ 	]*\*/!/p
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\netui\common\xlate\string\sed1.txt ===
/^!/bNOBC
/(NERR_BASE/!b
/\*\//bPROCESS
h
d
:NOBC
H
g
s/\n!//
/\*\//bPROCESS
h
d

:PROCESS
s/^.*(NERR_BASE/	(NERR_BASE/
s/).*\/\* /),	"/
s/\*\//"/

s/@W //
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\netui\liccpa\cplsetup.txt ===
Dll: LicCpa.Cpl
EntryPoint: CPlSetup

   [0] szRoutine - The type of setup to run 
      "FULLSETUP"  - Full setup
      "PERSEAT" - force per seat mode dialog
      "UNATTENDED" - no dialog is raised, just set registery to passed values 
      "FULLSETUPNOEXIT" - exit button is removed from dialog
      "REMOTE..." - Remote versions of all the above; argument [1] becomes the
         target server (e.g., "\\server"); arguments 1, 2, 3, ... become
         arguments 2, 3, 4, ....

for FullSetup, PerSeat, and FullSetupNoExit;
   [1] szHwnd - The parent Window handle, in HEX!
   [2] szService - The Reg Key name of the service 
   [3] szDisplayName - The display name of the service 
   note: the next four can be omitted and the default help file will be used.
         a help file name of "DefaultHelp" will accomplish the same and still
         allow you to specify argument [8]
   [4] szHelpFile - The complete path and name to help file 
      (leave as an empty string to remove help buttons)
   [5] szHelpContext - the DWORD to use as the main help context
   [6] szHCPerSeat     - the DWORD to use as the PerSeat Help context
   [7] szHCPerServer - the DWORD to use as the PerServer help context

   (optionally)
   [8] szCertRequired - "CertRequired" or "CertNotRequired"; the former
      indicates that secure certificates must be used for this product;
      if the latter is specified or no value is specified then the 3.51-style
      licensing dialog will be presented when adding licenses

for Unattended;
   [1] szService - The Reg Key name of the service 
   [2] szDisplayName - The display name of the service 
   [3] szMode - The string that defines the mode ("PerSeat" | "PerServer")
   [4] szUsers - The DWORD to use as the count of users in PerServer mode 

   (optionally)
   [5] szCertRequired - "CertRequired" or "CertNotRequired"; the former
      indicates that secure certificates must be used for this product;
      if the latter is specified or no value is specified then the 3.51-style
      licensing dialog will be presented when adding licenses


   ppszResult [out]- The result string
      "EXIT"  - user requested exit
      "ERROR" - unexpected error
      "OK" - user selected ok
      "SECURITY" - access denied
      "DOWNLEVEL" - the target license server (probably remote) does not
         handle this request (normally indicates that the app indicated
         the product requires secure certificates, but the remote license
         server is that shipped with 3.51)
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\netui\macprint\monitor\spec.txt ===
BOOL InitializeMonitor(VOID)

    This routine is called once by the print manager to start the monitor.
    Any one time only initializition by the monitor is done here.  For
    the AppleTalk Monitor, we start a thread to capture networked printers.


BOOL AddPort()

    This routine is called when the user selects 'other...' from the list
    of ports.  The AppleTalk Monitor presents a browse dialog to allow
    the user to choose an AppleTalk printer.  This dialog is modeled
    after the Macintosh Chooser.


BOOL EnumPorts()

    This routine is called whenever the print manager needs to determine
    a list of available ports.  We gather the data concerning each
    configured port and pass it back.


BOOL DeletePort()

    This routine is called when the print manager user selects 'Delete'
    from the Details... dialog of the print manager.  We remove the
    selected port from the list and release the printer if it is
    captured.

    ISSUE:  Can we guarantee that a job is not in progress for this
    port when the call is made?  How long can we take for this call?
    If we have to release the printer, should we queue up a request
    to our captive thread?

BOOL ConfigurePort()

    This routine is called whenever the print manager user presses the
    configure button for one of our ports.  The AppleTalk Monitor
    presents a dialog to allow the user to capture or not capture
    the specified printer.


OpenPort()

    Called by the print manager to establish a connection and to generate
    a handle to the port.  The AppleTalk Monitor attempts to PAPOpen the
    printer, and if successful, returns a handle for the port.

    ISSUES:  What should the handle value be?  Do we return false if
    someone else has the printer open already?  What happens if someone
    tries to open the printer while it's being captured?

ClosePort()

    Not sure the diff between close port and enddocport


ReadPort()

    This routine is called when the print manager wants to read data
    from the printer.  Not sure if this is synchronous or not,
    what we are supposed to do if there is no data to be read, or
    what we are to do if there is more data to be read than the
    specified buffer can hold.


WritePort()

    This routine is called when the print manager wants to send data
    to a printer.  Is it synchronous or asynchronous?  What are the
    limits on the buffer sizes?  What errors can be returned?


StartDocPort()

    Called by the print manager at the beginning of a print job.
    The AppleTalk Monitor should reset any job performance counts,
    save a handle to the printer object (and job?) so that job
    status can be updated and that the job can be deleted when
    finished.


EndDocPort()

    Called by the print manager at the end of the print job.
    The AppleTalk Monitor should mark performance counts as
    valid and store them somewhere as well as change the job
    status to complete and delete the print job.
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\netui\macprint\monitor\reg.txt ===
//
// This file contains the default contents of the \Registry database
// All keys are specified relative to the \Registry root key.
//

\Registry\Machine
    System
      CurrentControlSet
        Control
	      Print
            Monitors
              AppleTalk Printers
                Driver = REG_SZ "atalkmon.dll"
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\netui\macprint\spooler\cdd.txt ===
MACPRINT SPOOLER CDD



Design Goals:

MacPrint is ported from the OS/2 implementation.  The primary design
goal is to simplify the porting process as much as possible.  The
original structure of MacPrint was retained and modified only where
necessary.  There are 3 main areas of modification:

* configuration
* synchronization
* removal of the despooler component
* support for cached dictionaries

configuration changes -

Where the OS/2 implementation depended on being able to determine
at service start time the configuration for all possible shared
print queues (this was read from lanman.ini), the NT implementation
allows for the dynamic addition and removal of printer objects
without specifying configuration information in a data file.  This
forced the modification of the main queue list structure to be
a single linked list instead of an array.  In the NT implementation,
there is now a single data structure for NT printer objects, and
being in this structure implies the existence of a validly configured
NT Printer Object.

All of the code to read and parse configuration information from
LANMAN.INI at service start time was removed and replaced by code
to get configuration information from the EnumPrinters() API as new
printers are discovered.


synchronization changes -

NT provides a more robust synchronization mechanism than OS/2.
WaitForMultipleObjects() actually works correctly under NT, and
it is possible to wait on objects besides semaphores.  Mutual
exclusion to data is achieved through critical sections as opposed
to mutexes or semaphores.  Critical sections require fewer resources
than either, but can only be shared between threads of the same
process.  Events are used to process jobs asynchronously.  Instead
of clearing a semaphore when a read or open occurs, an event is
signaled.  Semaphores in NT are used as a gating mechanism,
and are not designed to be used as a signaling mechanism.  Syncronization
with the termination of threads is achieved by waiting on the thread
object as opposed to waiting on an event that the thread signals
just before it terminates.


removal of the despooler -

The spooler and despooler were somewhat integrated in the OS/2
implementation - especially with regards to configuration information.
Data structures pertinent to the despooler only were removed, and
the configuration routines are no longer contained in a DLL shared
by the spooler and despooler.  The only connection between the two
components is now through a PostScript comment that is included by
the spooler to indicate if ctrl-d's should be stripped by the
despooler.


support for cached dictionaries -

As the caching of PostScript dictionaries achieved only modest performance
improvements at best, and since it added significant complexity to the
code, support for cached dictionaries will most likely be removed in
the NT implementation.  If at coding time it becomes clear that more
work is involved to remove the feature than to port it, it may stay
in.




Thread/Process Structure:

MacPrint is an NT Service, hence it follows the NT Service Model.  main()
is the service control dispatcher for the MacPrint service.  This thread
is used by the NT Service Controller to communicate with the MacPrint
Service.

MacPrintMain() is the main thread for MacPrint.  It is responsible for
monitoring the NT Print Manager for configuration changes (creation
and removal of printer objects) and for starting and stopping threads
to manage each NT Printer Object.  Essentially, MacPrintMain polls
until a service stop request is received.  While polling, it enumerates
printers from the NT Print Manager and either creates a control thread
for a newly discovered printer or terminates the control thread for
each printer no longer configured.

QueueServiceThread() is the thread for each active NT Printer Object.
This thread listens for jobs directed to the NT printer and processes
the job.  One thread supports multiple jobs for the printer.  This is
done by using two events per queue - ReadEvent and OpenEvent.  The
PAP API have the property that they take an address to store a completion
code when the event completes, and this address is specified to be in
a per job data structure.  The event is common for all jobs in the
queue.  When a particular event is signaled, the list of pending jobs
in that queue is walked to find one that is in the correct state
(read_pending or open_pending) and that has it's completion code set.
The event is processed for that job, and the job is moved to the end
of the list so that events for jobs are processed in round-robin
order.
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\netui\macprint\spooler\macprint.txt ===
//
// This file contains the default contents of the \Registry database
// All keys are specified relative to the \Registry root key.
//

\Registry\Machine
    System
      CurrentControlSet
        Services
	    MacPrint
                Type = REG_DWORD 0x00000010
                Start = REG_DWORD 0x00000003
                ErrorControl = REG_DWORD 0x00000001
		ImagePath = REG_EXPAND_SZ \SystemRoot\system\macprint.exe
                Dependencies = REG_MULTI_SZ ""
                ObjectName = REG_SZ LocalSystem
		PARAMETERS
		    ShareCheckInterval = REG_DWORD 0x0000000F
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\netui\macprint\spooler\reg.txt ===
\Registry\Machine
    System
      CurrentControlSet
        Services
	    MacPrint
                Type = REG_DWORD 0x00000010
                Start = REG_DWORD 0x00000003
                ErrorControl = REG_DWORD 0x00000001
		        ImagePath = REG_EXPAND_SZ %SystemRoot%\system\macprint.exe
                Dependencies = REG_MULTI_SZ ""
                ObjectName = REG_SZ LocalSystem
		PARAMETERS
		    ShareCheckInterval = REG_DWORD 0x0000000F
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\netui\shellui\xlate\sed1.txt ===
/^!/bNOBC
/(NERR_BASE/!b
/\*\//bPROCESS
h
d
:NOBC
H
g
s/\n!//
/\*\//bPROCESS
h
d

:PROCESS
s/^.*(NERR_BASE/	(NERR_BASE/
s/).*\/\* /),	"/
s/\*\//"/

s/@W //
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\netui\shellui\xlate\sed0.txt ===
#n
/MAX_NERR/d
/^#define.*NERR_BASE/p
/^[ 	][ 	][ 	]*\*.*/s/^[ 	]*\*/!/p
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\netui\shellui\xlate\error.doc ===
!                    ^                                                         W    W W  4   ( '    '    '   5  t                   
   
                                                            B   ,       t                                                                                         # To start the workstation:

1.	Exit Windows.
2.	At the DOS prompt, type net start workstation
# Your password is a confidential identification that you supply when you log on to the network. 

Try typing your password again. If you don't know your password, see your administrator.
# Your logon name is a unique name that identifies you on the network.

Try typing your logon name again. If you don't know your logon name, see your administrator.
# A domain is a group of computers on the network. Each domain includes servers and workstations relative to a group of users with similar needs and concerns. If you don't know which domain you should use, see your administrator.
# The drive letter you chose is being used by another connection on your computer.

	*	If you want to override the existing connection, choose Yes.
	*	If you don't want to change the existing connection, choose No.
	*	To cancel the action, choose Cancel.
# The connection you are deleting is a saved connection. If you delete this connection, it will not be automatically reconnected the next time you log on.
# You have used all of the available connections. To make another connection, first delete an existing connection.
# There is a problem with accessing the LMUSER.INI file in the LANMAN directory. The file may already be open or it may be corrupted.

	*	Check whether the LMUSER.INI file is open in another session. If so, close it.
	*	If it's not open, it is corrupted. Delete the LMUSER.INI file, and LAN Manager will automatically create a new one.
# HC_WKSTANOTSTARTED
# HC_BADLOGONPASSWD
# HC_BADLOGONNAME
# HC_BADDOMAINNAME
# HC_REPLACESAVEDCONNECTION
# HC_LOSESAVEDCONNECTION
# HC_OUTOFSTUCTURES
# HC_PROFILEREADWRITEERROR


em with accessing the LMUSER.INI file in the LANMAN directory. The file may already be open or it may be corrupted.

	*	Check whether the LMUSER.INI file is open in another session. If so, close it.
	*	If it's not open, it is corrupted. Delete the LMUSER.INI file, and LAN Manager will automatically create a new one.
# HC_WKSTANOTSTARTED
# HC_BADLOGONPASSWD
# HC_BADLOGONNAME
# HC_BADDOMAINNAME
# HC_REPLACESA                  G  I          L  M  N  O  5  6  :  ;      L  M                          )  *  >  ?  \  ^                                                                                                                                                                                                                                                                           (         P  ,          G  I        L  4          9    K      (              )  >  Z  \  ^  ··                                                                                                                                                                          !  
  ! 0 h@ 
  ! 0 h@   !  h@   !  h@         h@ 
  ! h h@ 
  ! h h@ 
  ! 0 h@   !                                        d   $        W                             +   >   R   o                      +   >   R   o                                                                               d   $        W         c     H         T         t             ^     ^    PostScript Printer LPT1: PSCRIPT PostScript Printer   f      0@ X     
od   y y ,     GE z                          .  E =GzF =`mhelp or  ,  ,     ,      K   "     =/    h    qCE窶            ,       Bonnie Robin RossBonnie Robin Ross
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\netui\shellui\xlate\gloss.doc ===
!                      *                  r                                 $  t  $  t t$  0%   '    '    '   '  pb)    b)    b)    b)    b)   ~)   b)    )   )    )    )    )    )    )    )    )    )    )    )    )   W*   u*  B *  , u*    t&  pu*    u*    u*                                                                                * # LAN Manager Glossary

Administratorad_gly
Computer namecn_gly
Device namedn_gly
Domaind_gly
Drive letterdl_gly
File resourcefr_gly
Logon nameln_gly
Message aliasma_gly
Local area networklan_gly
Network pathnp_gly
Network resourcenr_gly
Passwordp_gly
Print queuepq_gly
Servers_gly
Server aliassa_gly
Workstationw_gly
* # Administrator

A person responsible for maintaining the local area network. This person typically sets up the network, assigns logon names and passwords, and helps users.
* # Computer Name

The name of a workstation or server on the local area network.

* # Device name

The name you assign to make a connection to a network printer. You can use device names LPT1: through LPT3:.

* # Domain

A group of computers on the network. Each domain includes servers and workstations relevant to a group of employees with similar needs and concerns.

* # Drive letter

The letter you assign to make a connection to a file resource. You can use drive letters D: through Z: that are not already in use by a local drive or network connection.

* # File Resource

Files and directories that are available on a server.
* # Local area network

A group of personal computers that can communicate with each other and share network resources---files, printers, and communication devices.

* # Logon name

A unique name that identifies you on the network. Ask your administrator for this name.

* # Message Alias

A name used to receive messages at a LAN Manager workstation.
* # Network Resource

Files, printers, and communication devices that are available on the network.

* # Password

A confidential identification that you supply when you log on to the network or connect to a network resource. Ask your adminstrator for your password.
* # Print Queue

A queue that holds jobs that are sent to a printer. A print queue is a waiting line for print jobs.
* # Server

A computer on the local area network that controls access to resources---file resources, network printers, and communication devices.

* # Server Alias

A one word name an administrator assigns to represent a network resource.

* # Workstation

A user's computer that is part of the local area network.
* # Old password

The password you are currently using.

* # New password

A password you choose to replace your old password.

* # Network Path

In the Network Path box you can type the path of a file resource, or if you are in your logon domain, you can type a LAN Server alias.

The path of a file resource is the computer name of the server followed by the name of the file resource. The computer name of a server is preceded by two backslashes (\\), and a file resource is preceded by one backslash (for example, \\MARKETING\SALESQ1). 

A LAN Server alias is a one word name an administrator assigned to represent a network resource. Instead of typing the network path of a network resource, you can type a LAN Server alias (for example, ORDERS).

* # Network Path

In the Network Path box you can type the path of a network printer, or if you are in your logon domain, you can type a LAN Server alias.

The path of a network printer is the computer name of the server followed by the name of the printer resource. The computer name of a server is preceded by two backslashes (\\), and a printer resource is preceded by one backslash (for example, \\MARKETING\SALESQ1). 

A LAN Server alias is a name an administrator assigned to represent a network printer. Instead of typing the network path of a network resource, you can type a LAN Server alias (for example, ORDERS).

* # Show File Resources On

This box displays the domains and servers that have file resources available. Select the server or domain that has the file resource you want.

* # File Resources On

This box shows the resources that are available on the domain or server you selected from the Show File Resources On box.

* # Show Printers On

This box displays the domains and servers that have printers. Select the domain or server that has the printer you want.

* # Printers On

The Printers on box shows the printers that are available on the server or domain you selected from the Show Printers On box.

* # Network printer connections

This box connections box shows the printers you are currently connected to. Select the printer you want to disconnect from.


* win31; win30
# langlos_lm21
* win31; win30; real
# ad_gly
* win31; win30; real
# cn_gly
* win31; win30
# dn_gly
* win31; win30; real
# d_gly
* win31; win30
# dl_gly
* win31; win30; real
# fr_gly
* win31; win30; real
# lan_gly
* win31; win30; real
# ln_gly
* win31; win30
# ma_gly
* win31; win30
# nr_gly
* win31; win30; real
# p_gly
* win31; win30
# pq_gly
* win31; win30; real
# s_gly
* win31; win30
# sa_gly
* win31; win30; real
# w_gly
* win31; win30; real
# op_gly
* win31; win30; real
# nps_gly
* win31; win30
# np_gly
* win31; win30
# npp_gly
* win31; win30
# sfr_gly
* win31; win30
# fro_gly
* win31; win30
# sp_gly
* win31; win30
# po_gly
* win31; win30
# npc_gly


31; win30; real
# lan_gly
* win31; win30; real
# ln                                                !  .  4  6  H  O  ]  c  e  u  {  }                                                                b  c  d  e  f  l  	  
                                1        X  (      (        P  [            2  3  4  5  6  C                                      	  	  	  	  	  	  	  	  	  	  	  	  
  
  
  
  
  
  
  ]
  ^
  _
  `
  a
  m
  
  
  
  
  
  
  
  
  
  
  
  
  a  b  c  d  e  q                          #  $  %  &  '  7             (       X    P  ^      M  N  O  P  Q  n              (  )  2  3  H  I  R  S  b  c  l  m                                                 !  0  1  :  ;  P  Q  Y  Z  i  j  s  t                                              &  '  6  7  A  B  Q  R  \  ]  l  m                                              X   P      `m  w  x                                                                                                                                                                                                                                                                                                                                                                                                                                                                             P                    !  6  Q  e  }                              _  a  n  p                    1  3          /  1  E  G                      	   	  "	  	  	  	  	  
  
  
  !
  \
  o
  q
  
  ɾ 
  ! 0 h@ 
       0 h@   !     !  h@   !  h@         h@            !     ! K
  
  
  
  
  
  
  
          ^  `  s  u                             "  9  ;          J  L  n  p            (  2  H  R  b  l                           0  :  P  Y  i  s                        &  6  A  Q  \  l  w                         !                   h@\                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     prac     (               h@@                         S  U      ^  `          L  N      D  F        	  q  s          ,  .          	  	  g	  i	      [  ]          8  :      J                                                                                                                 6   @   V   `   p   z                           
    $  .  >  H  ^  g  w                        *  4  D  O  _  j  z                          @   `   z                 .  H  g              4  O  j                                                                        	       
                                                                                                          J  !     S    ^      L    D      q      ,      	  g	    [      8    p  J                                        	     
                   
        
        
        
        
       ! 
               m          
          PostScript Printer LPT1: PSCRIPT PostScript Printer   f      0@ X     
od   y y ,     GE z                          .  E =GzF =`mhelp or                          "     =/    h    f˱誶   l  B       ,       Bonnie Robin RossBonnie Robin Ross
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\netui\shellui\xlate\helpbox.doc ===
!                    W  d                                                       W    W W  @   0 W    W    W   e                                                                                    B 8  ,                      	                                                                          # To log on to the network:

1.	In the Logon Name box, type your logon nameln_gly.
2.	In the Password box, type your passwordp_gly.
3.	In the Domain box, type the domaind_gly you want to log on to.
4.	Choose OK.
# To change your password:

1.	In the Change Password for User box, type your logon nameln_gly.
2.	In the Change Password On box, type or select the domaind_gly or servers_gly where you want to change your password.
3.	In the Old Password box, type your old passwordop_gly.
4.	In the New Password box, type a new passwordnps_gly.
5.	In the Confirm New Password box, type your new password again.
6.	Choose OK.
# To change your password:

1.	In the Old Password box, type your old passwordop_gly.
2.	In the New Password box, type your new passwordnps_gly.
3.	In the Confirm New Password box, type your new password again.
4.	Choose OK.
# To supply a password:

1.	In the Password box, type the passwordp_gly for the network connection.
2.	Choose OK.

If you don't know the password, choose Cancel and see your administratorad_gly.
# To connect a network drive:

1.	In the Drive Letter box, type or select a drive letterdl_gly.
2.	In the Network Pathnp_gly box, type the path of the file resource, or from the Show File Resources Onsfr_gly box, select a server or domain.
3.	If you selected a server or domain, from the File Resources Onfro_gly, select a file resource.
4.	Choose OK.
# To connect to a network drive:

1.	In the Network Pathnp_gly box, type the path of the file resource, or from the Show File Resources Onsfr_gly box, select a server or domain.
2.	If you selected a server or domain, from the File Resources Onfro_gly, select a file resource.
3.	Choose OK.
When the Connect Network Drive dialog box appears:
4.	Choose Connect.
# Connecting To and Disconnecting From Network Printers

In the Printers-Network Connections dialog box you can:

*	Connect to network printers
*	Disconnect from network printers
*	Connect to previously available printers

To connect to a network printer:

1.	In the Device Name box, type or select a device namedn_gly. 
2.	In the Network Pathnpp_gly box, type the path of the network printer, or from the Show Printers Onsp_gly, select a server or domain.
3.	If you selected a server or domain, from the Printers Onpo_gly box, select a printer.
4.	Choose Connect.
5.	Choose OK.
	When the Printers dialog box appears:
6.	Choose OK to remove the dialog box.

To disconnect from a network printer:

1.	From the Network Printer Connectionsnpc_gly box, select the printer you want to disconnect from.
2.	Choose Disconnect.
3.	Choose OK.
	When the Printers dialog box appears:
4.	Choose OK to remove the dialog box.

To connect to an unavailable printer:

1. 	From the Network Printer Connections box, select an unavailable printer. An unavailable printer is preceded by a grayed printer icon. 
2.	Choose Reconnect.
3.	Choose OK.
	When the Printers dialog box appears:
4.	Choose OK to remove the dialog box.

If the printer is available, you are connected and the icon will not be grayed.
# To connect to a printer:

1.	In the Network Pathnpp_gly box, type the path of the network printer, or from the Show Printers Onsp_gly, select a server or domain.
2.	If you selected a server or domain, from the Printers Onpo_gly box, select a printer.
3.	Choose OK.
	When the Printers-Network Connections dialog box appears:
4.	Choose Connect.
5	Choose OK.
	When the Printers dialog box appears:
6.	Choose OK to remove the dialog box.
# To send a message:

1.	In the To box, type a logon nameln_gly, computer namecn_gly, or message aliasma_gly.
2.	In the Message box, type a brief message.
3.	Choose Send.
# To disconnect a network drive:

1.	From the Drive box, select the drive letterdl_gly you want to disconnect.
2.	Choose OK.
# HC_LOGON
# HC_CHANGEPASSWD
# HC_PASSWDEXPIRY
# HC_PASSWDPROMPT
# HC_CONNECTDRIVE
# HC_BROWSEDRIVE
# HC_CONNECTPRINT
# HC_BROWSEPRINT
# HC_SENDMSG
# HC_DISCONNECTDRIVE


                                         # To log on to the network:

1.	In the Logon Name box, type your logon nameln_gly.
2.	In the Password box, type your password                       '  -  2  [  \  ]  w  y                    ]  i  o                     B  N  T  }                "  *  /                      
      )  /  e  {                9  ;  E  Q  W                      (      X   (         P  Z      n	  	  	  	  	  	  	  	  	  	  (
  8
  >
  
  
  
  +  R  T  `  {    1  V  X  Z                    "  2  8        n  o  p                             !  ?  A  C  e  q  w                          
        /  0  =  >  U  W                             X   P   (      (         X          K  Z  w  y    7  r            W            M  \  ^                9  ;    /  >  r            	  @	  l	  n	  	  	  	  \
  
  
  
    )  +  R  T        ԾԯԧԾ      !  h@         h@ 	  ! h h@           
  ! 0 h@ 
       0 h@ 
  ! h h@ 
       h h@ 
  ! 0 h@ 
  !0 h@>    /  1  X  Z        3  [  ]        V            E  m            A  C                
    /  =  S  U  W  ĹĹĹ                                                                                                                                           !  
       h h@ 
       0 h@   !   
  ! h h@ 
  ! 0 h@ 
  ! 0 h@ 
  ! h h@+                                         ~  f  0      /                                      2   E   X   j   }                         2   E   X   j   }                                                                     	      
                 ~  f  0      /                             "     9 
        
  	 "   
       W  	 
     W     PostScript Printer LPT1: PSCRIPT PostScript Printer   f      0@ X     
od   y y ,     GE z                          .  E =GzF =`mhelp or      	            "     =/    h    ;%誶* 5      
     ,       Bonnie Robin RossBonnie Robin Ross
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\netui\shellui\xlate\tasks.doc ===
!                    W                    J  d                                 t    t t  N               p(    (    (    (    (  R z  F (                                                           B   ,     :  p              , 9                                                                         * #LAN Manager Help Contents

This is a list of the Help topics available for LAN Manager. Use the scroll bar to see the topics not visible in the Help Window. These Help topics briefly explain how to perform each LAN Manager task. You can also get detailed help about filling in a LAN Manager dialog box by selecting the Help button in each dialog box.

Getting Started
Starting the Workstationstw_lm21
Logging on to the Networklon_lm21
Logging on to the Network at Windows Startuplow_lm21

Using Network Drives
Connecting to a Network Drivecdr_lm21
Disconnecting a Network Driveddr_lm21
Connecting to Previously Unavailable Network Resourcesrpudr_lm21

Using Network Printers
Connecting to a Network Printercnp_lm21
Disconnecting from a Network Printerdnp_lm21
Connecting to Previously Unavailable Network Resourcesrpudr_lm21
Viewing Print Queuesvnpq_lm21

Changing Passwords
Changing Your Passwordcp_lm21

Messaging
Sending a Messagesm_lm21
Receiving a Messagerm_lm21
Using the WinPopup Utilityuwu_lm21

Quitting LAN Manager
Logging off from the Networklof_lm21
Stopping the Workstationsw_lm21

Other Network Operations
Using Long File Namesulfn_lm21
Restoring Network Connections at Log Onrnclo_lm21

* #LAN Manager Help Index

This index contains a list of the Help topics available for LAN Manager. Use the scroll bar to see the topics not visible in the Help Window. These Help topics briefly explain how to perform each LAN Manager task. You can also get detailed help about filling in a LAN Manager dialog box by selecting the Help button in each dialog box.

Getting Started
Starting the Workstationstw_lm21
Logging on to the Networklon_lm21
Logging on to the Network at Windows Startuplow_lm21


Using Network Drives
Connecting to a Network Drivecdr_lm21
Disconnecting a Network Driveddr_lm21

Using Network Printers
Connecting to a Network Printercnp_lm21
Disconnecting from a Network Printerdnp_lm21
Viewing Print Queuesvnpq_lm21

Changing Passwords
Changing Your Passwordcp_lm21

Messaging
Receiving a Messagerm_lm21
Sending a Messagesm_lm21
Using the WinPopup Utilityuwu_lm21

Quitting LAN Manager
Logging off from the Networklof_lm21
Stopping the Workstationsw_lm21

* #Using LAN Manager

LAN Manager is a local area networklan_gly. Before you can use the files and printers available on the network, you must log on to the network and connect to network drives and printers. The following Help topics briefly explain how to use LAN Manager.

Getting Started
Starting the Workstationstw_lm21
Logging on to the Networklon_lm21

Using to Network Drives and Printers
Connecting to Network Drives and Printersrealnet_lm21

Changing Passwords
Changing Your Passwordcp_lm21

Quitting LAN Manager
Logging off from the Networklof_lm21
Stopping the Workstationsw_lm21

* # $ + KLogging on to the Network

Logging on to the network identifies you on the local area networklan_gly and establishes you as the user on the workstationw_gly. Logging on lets you use network files and printers.

To log on to the network:

1.	From the Main group window, select Control Panel.
2.	From the Control Panel window, select Network.
When the Networks-LAN Manager dialog box appears:
3.	From the Account menu, choose Logon.
When the Logon dialog box appears:
4.	Type your logon nameln_gly, passwordp_gly, and domaind_gly.
5.	Choose Logon.

Related Topics
Logging On at Windows Startuplow_lm21
Logging Offlof_lm21
Changing Your Passwordcp_lm21

* # $ + K Connecting to a Network Drive

When you connect to a network drive, you are connecting a drive on your computer to a servers_gly or server aliassa_gly on the network. The files and directories that are available on a server or server alias are called file resourcesfr_gly. Once you connect a drive to a server or a server alias, you can use its directories and files just like those on your own computer.

To connect to a network drive:

1.	From the Main group window, select File Manager.
2.	From the Disk menu, choose Connect Net Drive.
When the Connect Network Drive dialog box appears, you can view the domainsd_gly, servers, server aliases, and file resources available on the network.
3.	Select or type a drive letterdl_gly. 
4	Type the network pathnp_gly, or select the resource you want to connect to.
5.	Choose OK.

Related Topics
Disconnecting a Network Driveddr_lm21
Reconnecting to Previously Unavailable Disk Resourcesrpudr_lm21
Connecting to a Network Printercnp_lm21

* # $ + KConnecting to a Network Printer

When you connect to a network printer, you can print files by sending them from your computer to a print queuepq_gly on the network. Jobs are printed one by one, usually in the order they are received.

To connect to a network printer:

1.	From the Main group window, select Control Panel.
2.	From the Control Panel window, select Printers.
3.	From the Printers dialog box, choose Network.
When the Printers-Connections Network dialog box appears, you can view the printers you are connected to and the printers available on the network.
4.	Select or type a device namedn_gly.
5.	Type the network pathnpp_gly, or select the network printer you want to connect to.
6.	Choose Connect.
7.	Choose OK.
When the Printers dialog box appears:
8.	Choose OK to remove the dialog box.

Related Topics
Disconnecting from a Network Printerdnp_lm21
Connecting to a network drivecdr_lm21
Viewing the Print Queuevnpq_lm21

* # $ + KConnecting to a Previously Unavailable Resource

An unavailable resource is a network resourcenr_gly that your computer tried to connect to when you logged on, but failed because the resource was not available at that time. Unavailable file resourcesfr_gly are displayed as grayed drive lettersdl_gly at the top of the Directory Tree window. Unavailable network printers are displayed as grayed printer icons on the Printers-Network Connections dialog box. You can try to connect to these resources at a later time.

To connect to an unavailable file resource:

1.	From the Main group window, select File Manager.
2.	Select the unavailable drive letter from the Directory Tree window.

If the file resource is available, you are connected, and the drive letter is no longer grayed.

To connect to an unavaliable network printer:

1.	From the Main group window, select Control Panel.
2.	From Control Panel, select Printers.
3.	From the Printers dialog box, choose Network.
When the Printers-Network Connections dial box appears:
4.	Select the unavailable network printer from the Network Printer Connections box.

If the resource is available, you are connected, and the printer icon is no longer grayed.

Related Topics
Connecting to a Network Drivecdr_lm21
Connecting to a Network Printercnp_lm21


* # $ + KViewing Print Queues

You can view print queuespq_gly to which you have connections, to determine where to send a print job or to monitor jobs sent to a particular queue.

To view the print queues you are connected to:

*	From the Main group window, select Print Manager.

The printers you're connected to are displayed, along with any jobs you have waiting to print on those printers.

When you print a file, Print Manager displays a print queue that shows only the files you sent to that printer. You can also view the files in the queue that other users have sent to that printer.

To view all files in a print queue:

1.	From the Print Manager window, select a printer .
2.	From the View menu, choose Selected Net Queue.

In addition to viewing the print queues that you are connected to, you can also view the print queues on a printer that you are not connected to.

To view other print queues:

1.	From the Main window, select Print Manager.
2.	From the View menu, choose Other Net Queue.
3.	Type the path of the network printer you want to view.
4.	Choose View.

Related Topics
Connecting to a Network Printercnp_lm21

* # $ + KDisconnecting a Network Drive

You can disconnect a drive from a file resourcefr_gly when you are finished using it or when you want to use the drive letterdl_gly for a different connection.

To disconnect a network drive:

1.	From the Main window, select File Manager.
2.	From the Disk menu, choose Disconnect Net Drive.
3.	Select the drive you want to disconnect.
4.	Choose OK.

Related Topics
Connecting to a Network Drivecdr_lm21
Disconnecting from a Network Printerdnp_lm21
Connecting to a Network Printercnp_lm21


* # $ + KDisconnecting from a Network Printer

You can disconnect from a printer when you are finished using it or when you want to use the device namedn_gly for a different connection.

To disconnect from a network printer:

1.	From the Main group window, choose Control Panel.
2.	From the Control Panel window, select Printers.
3.	From the Printers dialog box, choose Network.
When the Printers-Network Connections dialog box appears, the printers you are connected to are displayed in the Network Printer Connections box.
4.	Select the printer you want to disconnect from.
5.	Choose Disconnect.
6.	Choose OK.
When the Printers dialog box appears:
7.	Choose OK to remove the dialog box.

Related Topics
Connecting to a Network Printercnp_lm21
Disconnecting a Network Driveddr_lm21
Connecting to a network drivecdr_lm21

* # $ + KSending a Message

You can send messages to other network users. Before you can send a message, you must know the user's logon nameln_gly, computer namecn_gly, or message aliasma_gly.

To send a message:

1.	From the Main group window, choose Control Panel.
2.	From the Control Panel, select Network.
When the Networks-LAN Manager dialog box appears:
3.	From the Message menu, choose send.
4.	Type the logon name, computer name, or message alias of the user(s) you want to send the message to.
5.	Type a brief message.
6.	Choose Send.

Related Topics
Receiving a Messagerm_lm21
Using the WinPopup Utilityuwu_lm21


* # $ + KReceiving a Message

When you receive a message, the WinPopup icon pops up to notify you that you have a message. 

To read a message:

1.	Double click on the Winpopup icon. 
The message box appears, displaying your message.
2.	When you finish reading the message, choose Discard.

Related Topics
Sending a Messagesm_lm21
Using the WinPopup Utilityuwu_lm21


* # $ + KUsing the WinPopup Utility

The WinPopup utility enables you to receive messages from other network users. The Winpoup utilitiy appears as an icon at the bottom of your screen. If you close it, you will not receive any messages. The WinPopup utility is started each time you start Windows.

Related Topics
Sending a Messagesm_lm21
Receiving a Messagerm_lm21


* # $ + KChanging Your Password

To maintain network security, passwordsp_gly may have expiration dates set up by an administratorad_gly. Therefore, it may be necessary to change your password occasionally. 

To change your password:

1.	From the Main group window, select Control Panel.
2.	From the Control Panel window, choose Network.
When the Networks-LAN Manager dialog box appears:
3.	From the Account menu, choose Change Password.
When the Change Password dialog box appears:
4.	Type your logon nameln_gly
5.	Type the name of the servers_gly or domaind_gly that you want to change your password on.
6.	Type your old password.
7.	Type your new password.
8.	Type your new password again.
9.	Choose OK.

Related Topics
Logging on to the Networklon_lm21

* # $ + KLogging on at Windows Startup

When you start Windows, the network logon dialog box automatically appears, allowing you to log on to the network. This is an option that can be turned off or on. The default is on.

To turn off or on the logon at startup option:

1.	From the Control Panel, choose Network.
2.	From the Options menu:
*	To turn off the option, clear the Logon At Startup check box.
*	To turn on the option, mark the Logon At Startup check box.

Related Topics
Logging on to the Networklon_lm21

* # $ + KLogging off from the Network

Logging off removes your logon nameln_gly and passwordp_gly from the workstationw_gly, and cancels any existing connections to file resourcesfr_gly and printers. It also closes any open files and ends all programs you have running on the network.

To log off from the network:

1.	From the Main group window, select Control Panel.
2.	From the Control Panel window, choose Network.
3.	From the Account menu, choose Logoff.

Related Topics
Logging on to the Networklon_lm21

* # $ + KStopping the Workstation

Logging off logs you, the user, off of the network, but your computer still remains on the network. To remove your computer from the network, you must stop the workstationw_gly.

To stop the workstation:

	At the DOS prompt, type net stop workstation

Related Topics
Logging on to the Networklon_lm21
Starting the Workstationsw_lm21

* # $ + K Starting the Workstation

You must start the workstationw_gly before you start Windows. If you are currently running Windows, exit Windows and then start the workstation.

To start the workstation:

	At the DOS prompt, type net start workstation

Related Topics
Logging on to the Networklon_lm21
Logging off from the Networklof_lm21
Stopping the Workstationsw_lm21

* # $ + K Restoring Network Connections at Log On

When you log off or the network, all of your current network connections are saved and will be reconnected the next time you log on. This is an option that can be turned off or on. The default is on.

To turn off or on the restore connections at log on option:

1.	From the Control Panel, choose Network.
2.	From the Options menu:
*	Clear the Restore Connections at Log On check box to turn off the option.
*	Mark the Restore Connections at Log On check box to turn on the option.

Related Topics
Logging on to the Networklon_lm21
Connecting to a Network Drivecdr_lm21

* # $ + K Using Long File Names

Windows allows file names to be a maximum of eight characters with a three character extension (for example MARKTPLN.TXT). However, some LAN Manager serverss_gly support long file names. A long file name can be up to 255 characters. This allows files to be named descriptively (for example FILE_FOR_MARKETING_PLAN91).

You can connect to servers that support long file names and you can view files with long names. However, because Windows does not support the use of long file names, you cannot copy long named files from a server to your computer through Windows. If you want to copy a long named file to your computer, you must first rename it to an eight character with a three character extension file name. 

Related Topics
Connecting to a Network Drivecdr_lm21

* # $ + KConnecting to a Network Drive

When you connect to a network drive, you are connecting a drive on your computer to a servers_gly or server aliassa_gly on the network. The files and directories that are available on a server are called file resourcesfr_gly. Once you connect a drive to a server or a server alias, you can use its directories and files just like those on your own computer.

To connect to a network drive:

1.	From the Main group window, select File Manager.
2.	From the Disk menu, choose Connect Net Drive.
When the Connect Net Drive dialog box appears:
3.	Choose Browse to view the available network resources.
When the Connect to Net Drive dialog box appears:
4.	Type the network pathnp_gly, or select the resource you want to connect to.
5.	Choose OK.
6.	Choose Connect.

Related Topics
Disconnecting a Network Driveddr_lm21
Connecting to a Network Printercnp_lm21

* # $ + KConnecting to a Network Printer

When you connect to a network printer, you can print files by sending them from your computer to a print queuepq_gly on the network. Jobs are printed one by one, usually in the order they are received.

To connect to a network printer:

1.	From the Main group window, select Control Panel.
2.	From the Control Panel window, select Printers.
3.	From the Printers dialog box, choose Network.
When the Printers-Network Connections dialog box appears:
4.	Choose Browse to view the network printers.
When the Connect to Network Printer dialog box appears:
5.	Type the network pathnpp_gly and printer you want to connect to.
6.	Choose OK.
When the Network Printers Connections dialog box appears:
7.	Choose Connect
8.	Choose OK.
When the Printers dialog box appears:
9.	Choose OK to remove the dialog box.

Related Topics
Disconnecting from a Network Printerdnp_lm21
Connecting to a Network Drivecdr_lm21
Viewing the Print queuevnpq_lm21

* # $ + KLogging on to the Network

Logging on identifies you on the local area network and establishes you as the user on the workstationw_gly. Logging on lets you use network files and printers.

To log on to the network:

	1.	From the DOS prompt, type:
net logon
	2.	When you are prompted for a logon name, type your logon nameln_gly.
	3.	When you are prompted for a password, type your passwordp_gly.

Related Topics

Logging Off from the Networklof_lm21
Changing Your Passwordcp_lm21

* # $ + K Connecting to Network Drives and Printers

When you connect to a network drive or printer you must supply the full network path of the network drive or printer. 

The network path is the computer namecn_gly of the servers_gly followed by the name of the file resourcefr_gly or printer. The computername of a server is preceded by two backslashes (\\), and file resources and printers ae preceded by one backslash (for example, \\MARKETING\SALESQ1 or \\FINANCE\PRINTER1). 

If your administrator has set up LAN Server aliases, you can use a LAN Server Alias instead of the full network path. A LAN Server alias is a one word name an administrator assigns to represent a file resource or printer. Instead of typing the network path of a network drive or printer, you can type a LAN Server alias (for example, ORDERS).

* # $ + KChanging Your Password

To maintain network security, passwordsp_gly may have expiration dates set up by an administratorad_gly. Therefore, it may be necessary to change your password occasionally. 

To change your password:

	1.	From the DOS prompt, type
		net password 
	2.	Type the domaind_gly or servers_gly that you want to change your password on.
	3.	Type your logon nameln_gly
	4.	Type your passwordp_gly.
	5.	Type your old passwordop_gly.
	6.	Type your new passwordnps_gly.
	7.	Type your new password again.

* # $ + K Logging Off from the Network

Logging off removes your logon nameln_gly and passwordp_gly from the workstationw_gly, and cancels any existing connections to file resourcesfr_gly and printers. It also closes any open files and ends all programs you have running on the network.

To log off from the network:

	From the DOS prompt, type net logoff

Related Topics
Logging on to the Networklon_lm21

* win31
# lanind_lm21
* win30
# lanind_lm21
* real
# lanind_lm21
* win31; win30
# lon_lm21
$ Logging on to the Network
+ lmwin:005
K logging on; logon; log on; network
* win31
# cdr_lm21
$ Connecting to a Network Drive
+ lmwin:010
K connecting; file resource; connect; directories; resource; network resource
* win31
# cnp_lm21
$ Connecting to a Network Printer
+ lmwin:015
K connecting; printer; resources; network resources; connect
* win31
# rpudr_lm21
$ Connecting to a Previously Unavailable Resource
+ lmwin:020
K unavailable resources; connecting; connect; disk resource; network resource; resources
* win31; win30
# vnpq_lm21
$ Viewing Print Queues
+ lmwin:025
K print; viewing printers; viewing print queues; queues; printers
* win31; win30
# ddr_lm21
$ Disconnecting a Network Drive
+ lmwin:050
K network drive; disconnecting; disconnect; drive; drive letter; resource; disk resource; directories
* win31; win30
# dnp_lm21
$ Disconnecting from a Network Printer
+ lmwin:050
K disconnecting; disconnect; device name; printer; network printer
* win31; win30
# sm_lm21
$ Sending a Message
+ lmwin:055
K messages; sending messages
* win31; win30
# rm_lm21
$ Receiving a Message
+ lmwin:060
K messages; receiving messages
* win31; win30
# uwu_lm21
$ Using the Winpopup Utility
+ lmwin:065
K winpopup; receiving messages; message alerts
* win31; win30
# cp_lm21
$ Changing Your Password
+ lmwin:070
K password; changing your password
* win31; win30
# low_lm21
$ Logging on at Windows Startup
+ lmwin:075
K logging on; logon; log on; starting Windows; network
* win31; win30
# lof_lm21
$ Logging off from the Network
+ lmwin:085
K logging off; log off; network
* win31; win30; real
# sw_lm21
$ Stopping the Workstation
+ lmwin:090
K workstation; stopping the workstation
* win31; win30; real
# stw_lm21
$ Starting the Workstation
+ lmwin:095
K workstation; starting the workstation
* win31; win30
# rnclo_lm21
$ Restoring Network Connections at Log On
+ lmwin:100
K restoring connections; network connections; saving connections
* win31
# ulfn_lm21
$ Using Long File Names
+ lmwin:110
K file names; long file names
* win30
# cdr_lm21
$ Connecting to a Disk Resource
+ lmwin:010
K connecting; disk resource; connect; directories; resources; network resources
* win30
# cnp_lm21
$ Connecting to a Network Printer
+ lmwin:015
K connecting; printer; resources; network resources; connect
* real
# lon_lm21
$ Logging on to the Network
+ lmwin:005
K logging on; logon; log on; network
* real
# realnet_lm21
$ Connecting to Network Drives and Printers
+ lmwin:007
K printers; network drives; connecting; network connections
* real
# cp_lm21
$ Changing Your Password
+ lmwin:070
K password; changing your password
* real
# lof_lm21
$ Logging Off from the Network
+ lmwin:080
K logging off; log off


pe the domaind_gly or servers_gly that you want to change your password on.
	3.	Type your logon nameln_gly
	4.	Type y                3  ;  =  i  q  s                      5  T  \  ^                           "  /  @  G  I  \  c  e                            "  $  K  U  Z  [  \  ]  s                   L  T  X  p                    	  %	    (    0  (    0    P  \%	  -	  /	  C	  L	  N	  d	  z	  	  	  	  	  	  	  	  	  	  	  	  	  
  
  &
  (
  @
  G
  I
  L
  M
  N
  O
  `
  u
  
  
  d  u                      /  E  L  N  f                                      G  R  W                                X  (      (       P   (    0  (    0   U        !  ,  4  6  L  S  U  X  Y  Z  [  \  ]  ^  _  `  a  b                _  m  s                2  >  D  S  _  e                     ?  G  L  M  N  O  P  Q  R  S  T  U  t        E  e  g  i                            X    (      (      (    0  P     (    0  U        
                       !  P  q          #  <  I  O  *  U  W  Y      ;  h  j  l                 "  A  I  P  Q  S  T  U  V  W  X  Y  m  ~      	  7  p  r                                                                  (    0   (      (       X   P     (    0U   !  *!  7!  =!  y!  !  !  !  !  !  !  o"  "  "  "  "  "  "  "  "  "  "  #  #  #  #  #  #  	#  
#  #  3#  #  #  #  #  #  #  #  %  %  %  %  %  &  "&  $&  A&  I&  M&  N&  O&  Q&  R&  S&  T&  U&  V&  W&  h&  &  &  &  &  &  &  &  	'  '  '  ('  *'  }(  (  (  (  (  (  (  (  (  (  (  (  (  (  (   (    0  X   P    (    0    (        W(  (  (  (  S)  e)  g)  i)  )  *   *  '*  )*  C*  K*  O*  R*  S*  U*  V*  W*  X*  Y*  Z*  [*  y*  +  +  +  +  +  +  +  +  +  +  +  +  +  +  +  +  +  +  +  ,  ,  ,  D,  Q,  W,  ,  ,  ,  ,  -  -  -  -  -  -  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  /  /  /  /  /  0  0   (    0 (      (      P    (    0     X    U0  0  0  0  0  0  0  0  0  0  0  0  0  0  1  /1  91  ?1  D1  L1  Q1  [1  f1  k1  1  1  1  2  ,2  .2  02  2  2  2  2  2  2  2  2  2   3  3  3  3  3   3  3  3  3  3  3  3  3  
4  4  "4  24  K4  S4  U4  m4  t4  x4  y4  z4  |4  }4  ~4  4  4  4  4  4  4  4  4  35  L5  N5  P5  i5  ~5  5  5  5  5  5  5       (      (      X   P      (    0W5  5  5  5  5  5   6  6  6  6  6  6  6  6  6  	6  26  6  :7  <7  >7  8  /8  H8  P8  R8  o8  w8  |8  }8  ~8  8  8  8  8  8  8  8  8  8  49  ;9  @9  n;  ~;  ;  ;  ;  ;  ;  ;  ;  ;  ;  ;  ;  ;  ;  (<  .<  3<  7<  C<  I<  <  <  <  ;=  Y=  [=  ]=  n>  z>  >  >  >  >  ?  ?  ?  -?  5?  :?  ;?  <?  =?   (    0  X  (      (         P    (    0   U=?  >?  ??  @?  A?  B?  C?  b?  ?  ?  ?  3@  S@  U@  W@  A  A  A  B  B  B  B  B  B  B  B  B  C  C  "C  #C  $C  %C  (C  )C  *C  +C  ,C  EC  C  C  C  C  D  *D  3D  kD  uD  {D  |D  D  D  D  D  D  D  D  D  D  E  E  E  E   E  !E  "E  #E  $E  %E  &E  'E  (E  SE  UE  E  E  E  F  F  F  *F  7F  =F  _H  aH  bH   (      P    (    0   (    0  (       X    UbH  cH  dH  eH  fH  gH  hH  iH  jH  kH  H  H  H  H  H  H  H  7I  OI  tI  I  I  I  I  I  I  I  I  I  I  J  J  J  "J  .J  4J  EJ  QJ  XJ  J  J  J  J  J  J  J  J  J  J  J  J  J  J  J  J  J  J  J  J   K  *K  8K  >K  K  K  K  K  K  K  L  L  #L  $L  ,L  -L  ;L  <L  DL  EL  SL  TL  [L  \L  jL  kL  zL  {L  L  L               (    0 (      (       X    P  XL  L  L  L  L  L  L  L  L  L  L  M  M  M  M  hM  iM  qM  rM  }M  ~M  M  M  M  M  M  M  M  M  N  N  5N  6N  BN  CN  N  N  N  N  N  N  N  N  N  N  !O  "O  1O  2O  =O  >O  ^O  _O  kO  lO  O  O  O  O  O  O  P  P  #P  $P  gP  hP  wP  xP  P  P  P  P  P  P  P  P  P  P  P  P  P  P  Q  Q  !Q  "Q  1Q  2Q  =Q  >Q  [Q  \Q  hQ  iQ  Q  Q  Q  Q  Q  Q                                                     P  dQ  Q  Q  Q  Q  Q  Q  R  R  R  R  ;R  <R  HR  IR  R  R  R  R  R  R  R  R  R  R  R  R   S  S  S  S  'S  (S  4S  5S  ]S  ^S  sS  tS  S  S  S  S  S  S  S  S  S  S  S  S  T  T  'T  (T  iT  jT  rT  sT  T  T  T  T  T  T  T  T  T  T  T  T  T  T  U  U  XU  YU  aU  bU  mU  nU  U  U  U  U  U  U  U  U  U  U  V  V  V  V  ?V  @V  GV  HV  WV  XV                                                     P  dXV  V  V  V  V  V  V  V  V  V  V  V  V  W  	W  ,W  -W  4W  5W  @W  AW  `W  aW  mW  nW  W  W                                                                                                                                                                                                                                                                                                                                                                                               P                =  s  u            5  ^            "  $  /  I  e                $  W  Y  u  w             V  X  Z  p          	  /	  N	  P	  d	  	  	  	  	  	  	  	  
  (
  I
  K
  b
  d
  b  d  u  ʿڿ          h@ 
       0 h@   ! L         L  
  ! 0 h@   !  h@   !  h@ 
  !0 h@Hu              /  N  P  f                        I  r            !  6  U  W              S      H               I  K  v  x  C  E  g  Ǽ흝Ǽ파 
       L h@        h 	       h h@  
       h h@ 	  ! h h@  
  ! h h@ 
  ! 0 h@         h@   !  h@ 
       0 h@ 
  ! 0 h@        L 7g  i              .  =  d                R  T  (  *  W  Y        9  ;  j  l        6            "  K  M  P  o  q    	  9  ;  p  ǼǑǇ  ! h@ 	       h h@  
  ! 0 h@   ! h 	  ! h h@          h@   !  h@ 
       L h@ 
  ! 0 h@ 	  ! h h@  
       h h@   ! h 
  ! h h@   !  h@2p  r                >  @          $   T                     !  !  !  !  !  !  !  1"  ^"  m"  o"  "  "  "  "  "  #  1#  3#  #  #  #  #   $  T$  $  %  M%  d%  s%  %  %  ƻƻѱѩ䡻ѱ䩙䡻	  ! h h@    ! h   ! h@   !  h@         h@ 	       h h@  
  ! h h@ 
  ! 0 h@ 
  ! 0 h@   !  h@   !  h@ 	  ! h h@  	  ! h h@ 6%  %  %  %  $&  K&  M&  j&  l&  '  '  ('  *'  `'  '  '  '  P(  j(  {(  }(  (  (  (  (  (  (  (  Q)  S)  g)  i)  )  )  )  )  *  )*  M*  O*  R*  w*  y*  +  +  +  +  +  +  +  +  +  ,  ,  ,  ,  ,  '-  Ⱦȳ۫Ⱦ۫۫ӓ       ! h    !  h@   !  h@   ! h@ 
  ! h h@ 	  ! h h@  
  ! h h@   !  h@         h@   !  h@ 	       h h@  
  ! 0 h@9'-  Z-  -  -  -  8.  T.  p.  .  .  .  .  .  .  /  /  /  /  /  /  0  50  v0  0  0  0  0  0  1  1  2  2  .2  02  f2  2  2  2  2  2  2  3   3  3  3  3  3  øհիÅÅ}}uÅÅ}}  !  h@   !  h@         h@   !   
  ! h h@ 
  ! 0 h@   !     !  h@ 
       0 h@   ! h@ 	       h h@  
  ! 0 h@ 	  ! h h@         h    ! h    ! h.3   4  "4  24  U4  v4  x4  4  4  15  35  N5  P5  5  5  5  5  5  5  5  26  46  6  6  <7  >7  j7  7  7  8  8  /8  R8  y8  {8  8  8  9  9  l;  n;  ~;  ;  ;  ؝xpx       !  h@        L  	  ! h h@    !   
  ! h h@ 
  ! 0 h@   !  h@   !   
  ! 0 h@   !  h@   ! h@         h@   !  h@ 	       h h@  
  ! 0 h@ 
  ! h h@+;  ;  ;  9=  ;=  [=  ]=  =  =  =  />  b>  >  >  >  >  >  ?  7?  9?  d?  f?  1@  3@  U@  W@  @  @  @  .A  ^A  A  A  A  &B  9B  HB  oB  B  B  B  B  B   C  "C  GC  IC  C  C  D  
D  *D  5D  ~D  D  ĺĺڤĖĺĺĺڤڋ    
  ! 0 h@   ! h   !  h@ 
       L h@ 
       h h@ 	  ! h h@  
  ! h h@ 
  ! 0 h@ 
  ! 0 h@         h@   !  h@ 
       0 h@6D  D  D  D  D  E  E  SE  UE  E  E  G  G  _H  aH  H  H  5I  7I  QI  SI  rI  I  I  I  J  7J  [J  ~J  J  J  J  K  K  K  K  K  K  K  !L  #L  ,L  ;L  DL  SL  [L  jL  zL  L  L  L  L  L  L  M  M  hM  qM  }M  M  M  M  M  N  5N  BN  N  ȸح   !  
  ! 0 h@   ! h@   !  h@         h@   !  h@   !  h@ 
       0 h@ 	       h h@  
  ! 0 h@BN  N  N  N  N  !O  1O  =O  ^O  kO  O  O  O  P  #P  gP  wP  P  P  P  P  P  P  P  Q  !Q  1Q  =Q  [Q  hQ  Q  Q  Q  Q  Q  Q  R  R  ;R  HR  R  R  R  R  R  R   S  S  'S  4S  ]S  sS  S  S  S  S  S  S  T  'T  iT  rT  T  T  T  T  T  T  T  U  XU  aU  mU  U  U  U  U  U  V  V  ?V  GV  WV  V  V  V  V  V  V  W  ,W  4W  @W  `W  mW  W  W                    ! `W  W                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   
  ! 0 h@               prac     (               h@@                                 0  2  4  6  8                                          ^  `  b  d  f  !  !  !  !  !  $  $  $  $  $  R'  T'  V'  X'  Z'  (  (  (  (  (  M*  O*  Q*  S*  U*  Y-  [-  ]-  _-  a-  m/  o/  q/  s/  u/  {1  }1  1  1  1  2  2  2  2  3  4  4  4  4  4  6  6   7  7  7  (:  *:  ,:  .:  0:  =  =  =  =  =  A  A  A  A  A  C  C  C  C  C  F  F  F  F  F  I  I  I  I  	I  	V                                                                                                                                                                                                                                                        	      !   0   8   G   W   c                        E  N  Z  }              y                ;  H             D  T  _  t                    8  E  u                  %  ]  m  y                :  P  \  x              F  O  \  u              5	  >	  J	  m	  z	  	  	  	  	  	  
  $
  4
  a
  n
  
  
  
  
  
  	      =  J  b  h         0   G      E    y      D      u    ]    :    F    5	  	  
  
  	  h                                                              	       
                                                                                                                       	V           0          ^  !  $  P'  (  M*  Y-  m/  {1  2  4  6  (:  =  A  C  F  I  	V              $     )    *     :         (   	     
              !     (    '     #    $     3    !     (    *     $    5     !    (         %	         (  0  5  =?  bH  L  Q  XV  W  , - . / 0 1 2 3 4 5 6 7 8   u  g  p  %  '-  3  ;  D  N  W  W  9 : ; < = > ? @ A B C  PostScript Printer LPT1: PSCRIPT PostScript Printer   f      0@ X     
od   y y ,     GE z                          .  E =GzF =`mhelp or  4  4  
   4      '  "     =/    h    3%p   "  N       ,       Bonnie Robin RossBonnie Robin Ross
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\pchealth\authtools\prodtools\applets\searchtester\hscquery_exact_match.xml ===
<hsc-query-template xml:space="default">
     <description>Hsc like Query, uses start-with() instead of '='</description>
     <template>
       <prologue>/METADATA/TAXONOMY_ENTRIES/TAXONOMY_ENTRY[</prologue>
       <query-term>
           <prologue>./KEYWORD[  
                      translate(., 'ABCDEFGHIJKLMNOPQRSTUVWXYZ', 'abcdefghijklmnopqrstuvwxyz') =
           </prologue>
           <in-argument/>
           <epilogue> ]</epilogue>
       </query-term>
       <epilogue>]</epilogue>
     </template>
</hsc-query-template>
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\pchealth\authtools\prodtools\searchtester\samples\hscquery_starts_with.xml ===
<hsc-query-template xml:space="default">
     <description>Hsc like Query, uses start-with() instead of '='</description>
     <template>
       <prologue>/METADATA/TAXONOMY_ENTRIES/TAXONOMY_ENTRY[</prologue>
       <query-term>
           <prologue>./KEYWORD[ starts-with( 
                      translate(., 'ABCDEFGHIJKLMNOPQRSTUVWXYZ', 'abcdefghijklmnopqrstuvwxyz'),
           </prologue>
           <in-argument/>
           <epilogue> )]</epilogue>
       </query-term>
       <epilogue>]</epilogue>
     </template>
</hsc-query-template>
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\pchealth\authtools\prodtools\searchtester\samples\hscquery_contains_match.xml ===
<hsc-query-template xml:space="default">
     <description>Hsc like Query, uses start-with() instead of '='</description>
     <template>
       <prologue>/METADATA/TAXONOMY_ENTRIES/TAXONOMY_ENTRY[</prologue>
       <query-term>
           <prologue>./KEYWORD[ contains( 
                      translate(., 'ABCDEFGHIJKLMNOPQRSTUVWXYZ', 'abcdefghijklmnopqrstuvwxyz'),
           </prologue>
           <in-argument/>
           <epilogue> )]</epilogue>
       </query-term>
       <epilogue>]</epilogue>
     </template>
</hsc-query-template>
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\pchealth\authtools\prodtools\readme.txt ===
Description of the directories:
-------------------------------

AuthDatabase: Contains Authdatabase.dll, the COM object that actually 
manipulates the Production Tool database.

Common: Various files used by all DLLs and EXEs.

Docs: More information. Databases with tables (no content) and code.

UI: Contains ProductionTool.exe, which is the main program (the Production 
Tool).

How to build:
-------------

For some reason, you cannot build in a razzle window. Use a non razzle window.

Run BuildAll.bat

If necessary, open UI\ProductionTool.vbg, select ProductionTool.vbg, and run the 
Package and Deployment Wizard.
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\pchealth\authtools\prodtools\installer\readme.txt ===
The Windows Installer is flaky and keeps on wanting to copy files like hh.exe.

This is what I really want:

Application Folder:
    AuthDatabase.dll
    ProductionTool.exe
    HSC.chm

    Desktop.mdb
    Server.mdb

    Readme.rtf
    WalkThrough.ppt

Windows System Folder:
    cabarc.exe
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\pchealth\authtools\packageauthor\pkgdescinitdata.xml ===
< ? x m l   v e r s i o n = " 1 . 0 "   e n c o d i n g = " U T F - 1 6 " ? > 
 
 < P A C K A G E _ D E S C R I P T O R _ C O M B O B O X _ C H O I C E S > 
 
 	 < S K U _ C H O I C E S > 
 
 	 	 < C H O I C E > 3 2 - b i t   P e r s o n a l < / C H O I C E > 
 
 	 	 < C H O I C E > 3 2 - b i t   P r o f e s s i o n a l < / C H O I C E > 
 
 	 	 < C H O I C E > 6 4 - b i t   P r o f e s s i o n a l < / C H O I C E > 
 
 	 	 < C H O I C E > A d v a n c e d S e r v e r _ 3 2 < / C H O I C E > 
 
 	 < / S K U _ C H O I C E S > 
 
 	 < L A N G U A G E _ C H O I C E S > 
 
 	 	 < L C I D   N A M E = " A f r i k a n n s "   V A L U E = " 1 0 7 8 "   / > 
 
 	 	 < L C I D   N A M E = " E n g l i s h   -   C a n a d a "   V A L U E = " 4 1 0 5 "   / > 
 
 	 	 < L C I D   N A M E = " E n g l i s h   -   U n i t e d   S t a t e s "   V A L U E = " 1 0 3 3 "   / > 
 
 	 < / L A N G U A G E _ C H O I C E S > 
 
 < / P A C K A G E _ D E S C R I P T O R _ C O M B O B O X _ C H O I C E S > 
 
 
 
 
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\pchealth\authtools\prodtools\searchtester\samples\hscsearchtest01.xml ===
<hsc-search-test>
	<test-info>
		<description>
		Test of Search Targets Related to PSS 20 Most Asked
		quetions about Whistler.
		</description>
	</test-info>
	<test-per-se>
		<hsc-search-target>
			<comment>Addresses Checklist: Preparation for installing clustering. Tracked as Advanced Corporate IT Issue #1
			</comment>
			<expect-uri>MS-ITS:%HELP_LOCATION%\gs_AdvServer.chm::/preparation_for_installing_or_upgrading_clustering.htm</expect-uri>
			<questions-list>
				<question>how do I prepare a clustering checklist?
					<expected-uri-position>5</expected-uri-position>
				</question>
			</questions-list>
		</hsc-search-target>
		<hsc-search-target>
			<comment>Addresses Change Password Question. Tracked as Advanced
			         Server PSS Issue #1
			</comment>
			<expect-uri>MS-ITS:%HELP_LOCATION%\localsec_s.chm::/lsm_change_password.htm</expect-uri>
			<questions-list>
				<question>how to change a user's password?
					<expected-uri-position>5</expected-uri-position>
				</question>
			</questions-list>
		</hsc-search-target>
		<hsc-search-target>
			<comment>Addresses Migration of WINS Servers to DNS. Tracked as Advanced
			         Server PSS Issue #8
			</comment>
			<expect-uri>MS-ITS:%HELP_LOCATION%\WINSconcepts.chm::/sag_WINS_imp_Decommission.htm</expect-uri>
			<questions-list>
				<question>how to migrate from WINS to DNS?
					<expected-uri-position>5</expected-uri-position>
				</question>
				<question>how do I pass from WINS to DNS?
					<expected-uri-position>5</expected-uri-position>
				</question>
			</questions-list>
		</hsc-search-target>
		<hsc-search-target>
			<comment>Addresses Removal of Site Server from a Site. Tracked as Advanced
			         Server PSS Issue #12
			</comment>
			<expect-uri>MS-ITS:%HELP_LOCATION%\adconcepts.chm::/DSSite_remove_dc.htm</expect-uri>
			<questions-list>
				<question>how to remove a server from a Site
					<expected-uri-position>5</expected-uri-position>
				</question>
			</questions-list>
		</hsc-search-target>
	</test-per-se>
</hsc-search-test>
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\pchealth\authtools\prodtools\searchtester\samples\hscsearchtestresults01.xml ===
<hsc-search-test-results>
	<test-info>
		<description>
		Test of Search Targets Related to PSS 20 Most Asked
		quetions about Whistler.
		</description>
		<input-file>\\uahsctest\public\AdvPssTopQsTest.xml</input-file>
		<run-date>Monday August 8th 2001</run-date>
	</test-info>
	<test-per-se>
		<hsc-search-target>
			<comment>Addresses Change Password Question. Tracked as Advanced
			         Server PSS Issue #1
			</comment>
			<expect-uri>MS-ITS:%HELP_LOCATION%\localsec_s.chm::/lsm_change_password.htm</expect-uri>
			<questions-list>
				<question>how to change a user's password?
					<passed-test>yes</passed-test>
					<expected-uri-position>5</expected-uri-position>
					<detected-uri-position>2</detected-uri-position>
				</question>
			</questions-list>
		</hsc-search-target>
		<hsc-search-target>
			<comment>Addresses Migration of WINS Servers to DNS. Tracked as Advanced
			         Server PSS Issue #8
			</comment>
			<expect-uri>MS-ITS:%HELP_LOCATION%\WINSconcepts.chm::/sag_WINS_imp_Decommission.htm</expect-uri>
			<questions-list>
				<question>how to migrate from WINS to DNS?
					<passed-test>yes</passed-test>
					<expected-uri-position>5</expected-uri-position>
					<detected-uri-position>2</detected-uri-position>
				</question>
				<question>how do I pass from WINS to DNS?
					<passed-test>no</passed-test>
					<expected-uri-position>5</expected-uri-position>
					<detected-uri-position>7</detected-uri-position>
				</question>
			</questions-list>
		</hsc-search-target>
		<hsc-search-target>
			<comment>Addresses Removal of Site Server from a Site. Tracked as Advanced
			         Server PSS Issue #12
			</comment>
			<expect-uri>MS-ITS:%HELP_LOCATION%\adconcepts.chm::/DSSite_remove_dc.htm</expect-uri>
			<questions-list>
				<question>how to remove a server from a Site
					<passed-test>no</passed-test>
					<expected-uri-position>5</expected-uri-position>
					<detected-uri-position>n/a</detected-uri-position>
				</question>
			</questions-list>
		</hsc-search-target>
	</test-per-se>
</hsc-search-test-results>
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\pchealth\authtools\prodtools\unused\invcab\extensiondescription.xml ===
<hss-tools-extension>
	<display-name>Reverse Cab Creation</display-name>
	<comment>Creates a CAB that reverses the application of an HHT. Needed in order to be able to return the HSC Database to a previous state while CAB is being Tested</comment>
	<applicable-skus>
		<sku>WINME</sku>
	</applicable-skus>
	<executable-name>InvCab.exe</executable-name>
	<modifies-cab>no</modifies-cab>
</hss-tools-extension>
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\pchealth\authtools\prodtools\searchtester\samples\hscsearchtest01_results.xml ===
<hsc-search-test-results><test-info>
		<description>
		Test of Search Targets Related to PSS 20 Most Asked
		quetions about Whistler.
		</description>
		<test-stress-file>F:\temp\hscst02\HscSearchTest01.xml</test-stress-file><tested-hht-file>F:\temp\hscst02\AdvServer_32.hht</tested-hht-file><run-date>10/26/2000 - 3:37:55 PM</run-date></test-info>
	<test-per-se>
		<hsc-search-target>
			<comment>Addresses Checklist: Preparation for installing clustering. Tracked as Advanced Corporate IT Issue #1
			</comment>
			<expect-uri>MS-ITS:%HELP_LOCATION%\gs_AdvServer.chm::/preparation_for_installing_or_upgrading_clustering.htm</expect-uri>
			<questions-list>
				<question>how do I prepare a clustering checklist?
					<passed-test>yes</passed-test><expected-uri-position>5</expected-uri-position>
					<detected-uri-position>2</detected-uri-position></question>
			</questions-list>
		</hsc-search-target>
		<hsc-search-target>
			<comment>Addresses Change Password Question. Tracked as Advanced
			         Server PSS Issue #1
			</comment>
			<expect-uri>MS-ITS:%HELP_LOCATION%\localsec_s.chm::/lsm_change_password.htm</expect-uri>
			<questions-list>
				<question>how to change a user's password?
					<passed-test>no</passed-test><expected-uri-position>5</expected-uri-position>
					<detected-uri-position>n/a</detected-uri-position></question>
			</questions-list>
		</hsc-search-target>
		<hsc-search-target>
			<comment>Addresses Migration of WINS Servers to DNS. Tracked as Advanced
			         Server PSS Issue #8
			</comment>
			<expect-uri>MS-ITS:%HELP_LOCATION%\WINSconcepts.chm::/sag_WINS_imp_Decommission.htm</expect-uri>
			<questions-list>
				<question>how to migrate from WINS to DNS?
					<passed-test>no</passed-test><expected-uri-position>5</expected-uri-position>
					<detected-uri-position>n/a</detected-uri-position></question>
				<question>how do I pass from WINS to DNS?
					<passed-test>no</passed-test><expected-uri-position>5</expected-uri-position>
					<detected-uri-position>n/a</detected-uri-position></question>
			</questions-list>
		</hsc-search-target>
		<hsc-search-target>
			<comment>Addresses Removal of Site Server from a Site. Tracked as Advanced
			         Server PSS Issue #12
			</comment>
			<expect-uri>MS-ITS:%HELP_LOCATION%\adconcepts.chm::/DSSite_remove_dc.htm</expect-uri>
			<questions-list>
				<question>how to remove a server from a Site
					<passed-test>yes</passed-test><expected-uri-position>5</expected-uri-position>
					<detected-uri-position>3</detected-uri-position></question>
			</questions-list>
		</hsc-search-target>
	</test-per-se>
</hsc-search-test-results>
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\pchealth\authtools\prodtools\unused\winme_hhtfix01\extensiondescription.xml ===
<hss-tools-extension>
	<display-name>WinME HCUpdate SideStep Fix #1</display-name>
	<comment>Windows ME Extension to fix Problem with HCUPDATE choking when both Nodes and Content are created in the same HHT</comment>
	<applicable-skus>
		<sku>WINME</sku>
	</applicable-skus>
	<executable-name>WinME_HHTFix01.exe</executable-name>
	<modifies-cab>yes</modifies-cab>
</hss-tools-extension>
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\pchealth\authtools\prodtools\installer\eula.rtf ===
{\rtf1\ansi\ansicpg1252\uc1 \deff0\deflang1033\deflangfe1033{\fonttbl{\f0\froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}{\f2\fmodern\fcharset0\fprq1{\*\panose 02070309020205020404}Courier New;} {\f3\froman\fcharset2\fprq2{\*\panose 05050102010706020507}Symbol;}{\f14\fnil\fcharset2\fprq2{\*\panose 05000000000000000000}Wingdings;}{\f28\fswiss\fcharset0\fprq2{\*\panose 020b0706030402020204}Franklin Gothic Demi Cond;} {\f29\fswiss\fcharset0\fprq2{\*\panose 020b0503020102020204}Franklin Gothic Book;}{\f30\froman\fcharset0\fprq2{\*\panose 02040602050305030304}Book Antiqua;}{\f43\froman\fcharset238\fprq2 Times New Roman CE;} {\f44\froman\fcharset204\fprq2 Times New Roman Cyr;}{\f46\froman\fcharset161\fprq2 Times New Roman Greek;}{\f47\froman\fcharset162\fprq2 Times New Roman Tur;}{\f48\froman\fcharset177\fprq2 Times New Roman (Hebrew);} {\f49\froman\fcharset178\fprq2 Times New Roman (Arabic);}{\f50\froman\fcharset186\fprq2 Times New Roman Baltic;}{\f59\fmodern\fcharset238\fprq1 Courier New CE;}{\f60\fmodern\fcharset204\fprq1 Courier New Cyr;} {\f62\fmodern\fcharset161\fprq1 Courier New Greek;}{\f63\fmodern\fcharset162\fprq1 Courier New Tur;}{\f64\fmodern\fcharset177\fprq1 Courier New (Hebrew);}{\f65\fmodern\fcharset178\fprq1 Courier New (Arabic);} {\f66\fmodern\fcharset186\fprq1 Courier New Baltic;}{\f283\froman\fcharset238\fprq2 Book Antiqua CE;}{\f284\froman\fcharset204\fprq2 Book Antiqua Cyr;}{\f286\froman\fcharset161\fprq2 Book Antiqua Greek;}{\f287\froman\fcharset162\fprq2 Book Antiqua Tur;} {\f290\froman\fcharset186\fprq2 Book Antiqua Baltic;}}{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255; \red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;}{\stylesheet{ \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \snext0 Normal;}{\*\cs10 \additive Default Paragraph Font;}{\s15\ql \fi-274\li274\ri0\sb120\sl-460\slmult0 \nowidctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin274\itap0 \f28\fs44\lang1033\langfe1033\kerning42\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext15 1. Section Head;}{\s16\ql \li0\ri0\sb120\sl-200\slmult0\widctlpar\brdrt\brdrs\brdrw15  \tx576\tx1152\tx1728\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \caps\f28\fs16\lang1033\langfe1033\kerning16\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext16 4. LA Para Head;}{\s17\ql \li0\ri-18\sb120\sl-240\slmult0\widctlpar \tx576\tx1152\tx1728\aspalpha\aspnum\faauto\adjustright\rin-18\lin0\itap0 \f28\fs22\lang1033\langfe1033\kerning22\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext17 2. LA Subhead;}{\s18\ql \li0\ri0\sb60\sl-180\slmult0 \widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \f29\fs16\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext18 3. LA Body;}{\s19\ql \fi-274\li274\ri0\sb120\sl-180\slmult0 \widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin274\itap0 \f30\fs16\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \sbasedon18 \snext19 3c. Numbered;}{\s20\ql \fi-270\li540\ri0\sb60\sl-180\slmult0 \widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin540\itap0 \f30\fs16\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \sbasedon18 \snext20 3d. Numbered-Sub;}{\s21\ql \li0\ri0\sb240\sl-240\slmult0\widctlpar \tx576\tx1152\tx1728\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \f28\fs22\lang1033\langfe1033\kerning22\cgrid\langnp1033\langfenp1033 \sbasedon17 \snext21 2a. French Subhead;}{\s22\ql \fi-187\li187\ri0\sb60\sl-180\slmult0 \widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin187\itap0 \f29\fs16\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext22 03c. Numbered;}{\s23\ql \li0\ri0\sb60\sl-180\slmult0 \widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \f29\fs16\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext23 03. LA Body;}{\s24\ql \fi-270\li270\ri0\widctlpar\faauto\rin0\lin270\itap0  \b\caps\f2\fs20\lang3084\langfe1033\cgrid\langnp3084\langfenp1033 \sbasedon0 \snext24 Body Text Indent 2;}{\s25\ql \li0\ri0\widctlpar \tqr\tx10800\pvpg\phpg\posx720\posy14687\absw3600\abslock1\dxfrtext180\dfrmtxtx180\dfrmtxty180\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs18\lang1024\langfe1024\cgrid\noproof\langnp1033\langfenp1033 \snext25 zDocID;}{\s26\ql \li0\ri0\widctlpar \tqc\tx4320\tqr\tx8640\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext26 header;}{\s27\ql \li0\ri0\widctlpar \tqc\tx4320\tqr\tx8640\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext27 footer;}{\*\cs28 \additive \ul\cf2 \sbasedon10 Hyperlink;}{\s29\qj \li0\ri0\widctlpar \tx450\tx900\tx1350\tx1800\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \b\fs19\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext29 Body Text;}{\s30\qj \li0\ri0\sa120\widctlpar \tx450\tx900\tx1350\tx1800\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs19\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext30 Body Text 2;}{\*\cs31 \additive \sbasedon10 page number;}}{\*\listtable {\list\listtemplateid-1172243878\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat6\levelspace0\levelindent0{\leveltext\leveltemplateid67698703\'02\'00.;}{\levelnumbers\'01;}\chbrdr\brdrnone\brdrcf1  \chshdng0\chcfpat1\chcbpat1\fbias0 \fi-360\li720\jclisttab\tx720 }{\listlevel\levelnfc4\levelnfcn4\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\leveltemplateid67698713\'02\'01.;}{\levelnumbers\'01;}\chbrdr \brdrnone\brdrcf1 \chshdng0\chcfpat1\chcbpat1 \fi-360\li1440\jclisttab\tx1440 }{\listlevel\levelnfc2\levelnfcn2\leveljc2\leveljcn2\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\leveltemplateid67698715\'02\'02.;}{\levelnumbers\'01;}\chbrdr \brdrnone\brdrcf1 \chshdng0\chcfpat1\chcbpat1 \fi-180\li2160\jclisttab\tx2160 }{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\leveltemplateid67698703\'02\'03.;}{\levelnumbers\'01;}\chbrdr \brdrnone\brdrcf1 \chshdng0\chcfpat1\chcbpat1 \fi-360\li2880\jclisttab\tx2880 }{\listlevel\levelnfc4\levelnfcn4\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\leveltemplateid67698713\'02\'04.;}{\levelnumbers\'01;}\chbrdr \brdrnone\brdrcf1 \chshdng0\chcfpat1\chcbpat1 \fi-360\li3600\jclisttab\tx3600 }{\listlevel\levelnfc2\levelnfcn2\leveljc2\leveljcn2\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\leveltemplateid67698715\'02\'05.;}{\levelnumbers\'01;}\chbrdr \brdrnone\brdrcf1 \chshdng0\chcfpat1\chcbpat1 \fi-180\li4320\jclisttab\tx4320 }{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\leveltemplateid67698703\'02\'06.;}{\levelnumbers\'01;}\chbrdr \brdrnone\brdrcf1 \chshdng0\chcfpat1\chcbpat1 \fi-360\li5040\jclisttab\tx5040 }{\listlevel\levelnfc4\levelnfcn4\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\leveltemplateid67698713\'02\'07.;}{\levelnumbers\'01;}\chbrdr \brdrnone\brdrcf1 \chshdng0\chcfpat1\chcbpat1 \fi-360\li5760\jclisttab\tx5760 }{\listlevel\levelnfc2\levelnfcn2\leveljc2\leveljcn2\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\leveltemplateid67698715\'02\'08.;}{\levelnumbers\'01;}\chbrdr \brdrnone\brdrcf1 \chshdng0\chcfpat1\chcbpat1 \fi-180\li6480\jclisttab\tx6480 }{\listname ;}\listid419717978}{\list\listtemplateid-1225750670\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360 \levelindent0{\leveltext\leveltemplateid67698689\'01\u-3913 ?;}{\levelnumbers;}\f3\chbrdr\brdrnone\brdrcf1 \chshdng0\chcfpat1\chcbpat1\fbias0 \fi-360\li720\jclisttab\tx720 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1 \levelspace360\levelindent0{\leveltext\leveltemplateid67698691\'01o;}{\levelnumbers;}\f2\chbrdr\brdrnone\brdrcf1 \chshdng0\chcfpat1\chcbpat1\fbias0 \fi-360\li1440\jclisttab\tx1440 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0 \levelstartat1\levelspace360\levelindent0{\leveltext\leveltemplateid67698693\'01\u-3929 ?;}{\levelnumbers;}\f14\chbrdr\brdrnone\brdrcf1 \chshdng0\chcfpat1\chcbpat1\fbias0 \fi-360\li2160\jclisttab\tx2160 }{\listlevel\levelnfc23\levelnfcn23\leveljc0 \leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\leveltext\leveltemplateid67698689\'01\u-3913 ?;}{\levelnumbers;}\f3\chbrdr\brdrnone\brdrcf1 \chshdng0\chcfpat1\chcbpat1\fbias0 \fi-360\li2880\jclisttab\tx2880 }{\listlevel\levelnfc23 \levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\leveltext\leveltemplateid67698691\'01o;}{\levelnumbers;}\f2\chbrdr\brdrnone\brdrcf1 \chshdng0\chcfpat1\chcbpat1\fbias0 \fi-360\li3600\jclisttab\tx3600 }{\listlevel \levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\leveltext\leveltemplateid67698693\'01\u-3929 ?;}{\levelnumbers;}\f14\chbrdr\brdrnone\brdrcf1 \chshdng0\chcfpat1\chcbpat1\fbias0 \fi-360\li4320 \jclisttab\tx4320 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\leveltext\leveltemplateid67698689\'01\u-3913 ?;}{\levelnumbers;}\f3\chbrdr\brdrnone\brdrcf1 \chshdng0\chcfpat1\chcbpat1\fbias0  \fi-360\li5040\jclisttab\tx5040 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\leveltext\leveltemplateid67698691\'01o;}{\levelnumbers;}\f2\chbrdr\brdrnone\brdrcf1  \chshdng0\chcfpat1\chcbpat1\fbias0 \fi-360\li5760\jclisttab\tx5760 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\leveltext\leveltemplateid67698693\'01\u-3929 ?;}{\levelnumbers;}\f14\chbrdr \brdrnone\brdrcf1 \chshdng0\chcfpat1\chcbpat1\fbias0 \fi-360\li6480\jclisttab\tx6480 }{\listname ;}\listid940576240}{\list\listtemplateid974967638\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat10\levelspace0 \levelindent0{\leveltext\leveltemplateid67698703\'02\'00.;}{\levelnumbers\'01;}\chbrdr\brdrnone\brdrcf1 \chshdng0\chcfpat1\chcbpat1\fbias0 \fi-360\li720\jclisttab\tx720 }{\listlevel\levelnfc4\levelnfcn4\leveljc0\leveljcn0\levelfollow0\levelstartat1 \levelspace0\levelindent0{\leveltext\leveltemplateid67698713\'02\'01.;}{\levelnumbers\'01;}\chbrdr\brdrnone\brdrcf1 \chshdng0\chcfpat1\chcbpat1 \fi-360\li1440\jclisttab\tx1440 }{\listlevel\levelnfc2\levelnfcn2\leveljc2\leveljcn2\levelfollow0\levelstartat1 \levelspace0\levelindent0{\leveltext\leveltemplateid67698715\'02\'02.;}{\levelnumbers\'01;}\chbrdr\brdrnone\brdrcf1 \chshdng0\chcfpat1\chcbpat1 \fi-180\li2160\jclisttab\tx2160 }{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1 \levelspace0\levelindent0{\leveltext\leveltemplateid67698703\'02\'03.;}{\levelnumbers\'01;}\chbrdr\brdrnone\brdrcf1 \chshdng0\chcfpat1\chcbpat1 \fi-360\li2880\jclisttab\tx2880 }{\listlevel\levelnfc4\levelnfcn4\leveljc0\leveljcn0\levelfollow0\levelstartat1 \levelspace0\levelindent0{\leveltext\leveltemplateid67698713\'02\'04.;}{\levelnumbers\'01;}\chbrdr\brdrnone\brdrcf1 \chshdng0\chcfpat1\chcbpat1 \fi-360\li3600\jclisttab\tx3600 }{\listlevel\levelnfc2\levelnfcn2\leveljc2\leveljcn2\levelfollow0\levelstartat1 \levelspace0\levelindent0{\leveltext\leveltemplateid67698715\'02\'05.;}{\levelnumbers\'01;}\chbrdr\brdrnone\brdrcf1 \chshdng0\chcfpat1\chcbpat1 \fi-180\li4320\jclisttab\tx4320 }{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1 \levelspace0\levelindent0{\leveltext\leveltemplateid67698703\'02\'06.;}{\levelnumbers\'01;}\chbrdr\brdrnone\brdrcf1 \chshdng0\chcfpat1\chcbpat1 \fi-360\li5040\jclisttab\tx5040 }{\listlevel\levelnfc4\levelnfcn4\leveljc0\leveljcn0\levelfollow0\levelstartat1 \levelspace0\levelindent0{\leveltext\leveltemplateid67698713\'02\'07.;}{\levelnumbers\'01;}\chbrdr\brdrnone\brdrcf1 \chshdng0\chcfpat1\chcbpat1 \fi-360\li5760\jclisttab\tx5760 }{\listlevel\levelnfc2\levelnfcn2\leveljc2\leveljcn2\levelfollow0\levelstartat1 \levelspace0\levelindent0{\leveltext\leveltemplateid67698715\'02\'08.;}{\levelnumbers\'01;}\chbrdr\brdrnone\brdrcf1 \chshdng0\chcfpat1\chcbpat1 \fi-180\li6480\jclisttab\tx6480 }{\listname ;}\listid1628006360}{\list\listtemplateid-1655516986\listhybrid {\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\leveltext\leveltemplateid67698689\'01\u-3913 ?;}{\levelnumbers;}\f3\chbrdr\brdrnone\brdrcf1 \chshdng0\chcfpat1\chcbpat1\fbias0 \fi-360\li990 \jclisttab\tx990 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\leveltext\leveltemplateid67698691\'01o;}{\levelnumbers;}\f2\chbrdr\brdrnone\brdrcf1 \chshdng0\chcfpat1\chcbpat1\fbias0  \fi-360\li1710\jclisttab\tx1710 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\leveltext\leveltemplateid67698693\'01\u-3929 ?;}{\levelnumbers;}\f14\chbrdr\brdrnone\brdrcf1  \chshdng0\chcfpat1\chcbpat1\fbias0 \fi-360\li2430\jclisttab\tx2430 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\leveltext\leveltemplateid67698689\'01\u-3913 ?;}{\levelnumbers;}\f3\chbrdr \brdrnone\brdrcf1 \chshdng0\chcfpat1\chcbpat1\fbias0 \fi-360\li3150\jclisttab\tx3150 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\leveltext\leveltemplateid67698691\'01o;}{\levelnumbers;}\f2 \chbrdr\brdrnone\brdrcf1 \chshdng0\chcfpat1\chcbpat1\fbias0 \fi-360\li3870\jclisttab\tx3870 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\leveltext\leveltemplateid67698693 \'01\u-3929 ?;}{\levelnumbers;}\f14\chbrdr\brdrnone\brdrcf1 \chshdng0\chcfpat1\chcbpat1\fbias0 \fi-360\li4590\jclisttab\tx4590 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\leveltext \leveltemplateid67698689\'01\u-3913 ?;}{\levelnumbers;}\f3\chbrdr\brdrnone\brdrcf1 \chshdng0\chcfpat1\chcbpat1\fbias0 \fi-360\li5310\jclisttab\tx5310 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360 \levelindent0{\leveltext\leveltemplateid67698691\'01o;}{\levelnumbers;}\f2\chbrdr\brdrnone\brdrcf1 \chshdng0\chcfpat1\chcbpat1\fbias0 \fi-360\li6030\jclisttab\tx6030 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1 \levelspace360\levelindent0{\leveltext\leveltemplateid67698693\'01\u-3929 ?;}{\levelnumbers;}\f14\chbrdr\brdrnone\brdrcf1 \chshdng0\chcfpat1\chcbpat1\fbias0 \fi-360\li6750\jclisttab\tx6750 }{\listname ;}\listid2029215131}{\list\listtemplateid67698689 \listsimple{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'01\u-3913 ?;}{\levelnumbers;}\f3\chbrdr\brdrnone\brdrcf1 \chshdng0\chcfpat1\chcbpat1\fbias0 \fi-360\li720\jclisttab\tx720 } {\listname ;}\listid2147353907}}{\*\listoverridetable{\listoverride\listid2147353907\listoverridecount0\ls1}{\listoverride\listid2029215131\listoverridecount0\ls2}{\listoverride\listid1628006360\listoverridecount0\ls3}{\listoverride\listid419717978 \listoverridecount0\ls4}{\listoverride\listid940576240\listoverridecount0\ls5}}{\*\revtbl {Unknown;}{J.D. Fugate;}{Vijay Baliga;}}{\info{\title END-USER LICENSE AGREEMENT }{\author mhughs}{\operator Vijay Baliga}{\creatim\yr2001\mo2\dy21\hr17\min28}{\revtim\yr2001\mo2\dy22\hr16\min55} {\printim\yr2001\mo2\dy2\hr8\min52}{\version3}{\edmins4}{\nofpages3}{\nofwords1575}{\nofchars8978}{\*\company Microsoft Corp.}{\nofcharsws11025}{\vern8247}}\margl1354\margr1354\margt1901\margb1901  \widowctrl\ftnbj\aenddoc\noxlattoyen\expshrtn\noultrlspc\dntblnsbdb\nospaceforul\hyphcaps0\formshade\horzdoc\dgmargin\dghspace180\dgvspace180\dghorigin1354\dgvorigin1901\dghshow1\dgvshow1 \jexpand\viewkind1\viewscale100\pgbrdrhead\pgbrdrfoot\splytwnine\ftnlytwnine\htmautsp\nolnhtadjtbl\useltbaln\alntblind\lytcalctblwd\lyttblrtgr\lnbrkrule \fet0\sectd \psz1\linex0\headery0\footery1915\titlepg\sectdefaultcl {\headerf \pard\plain  \s26\ql \li0\ri0\widctlpar\tqc\tx4320\tqr\tx8640\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\deleted\revauthdel2\revdttmdel-2041400267  \par }{ \par }\pard \s26\qc \li0\ri0\widctlpar\tqc\tx4320\tqr\tx8640\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 {\deleted\fs28\cf6\revauthdel2\revdttmdel-2041400267 DRAFT 2/2/02}{\fs28\cf6  \par }}{\*\pnseclvl1\pnucrm\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl2\pnucltr\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl3\pndec\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl4\pnlcltr\pnstart1\pnindent720\pnhang{\pntxta )}} {\*\pnseclvl5\pndec\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl6\pnlcltr\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl7\pnlcrm\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl8 \pnlcltr\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl9\pnlcrm\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}\pard\plain \s26\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0  \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\fs22 END-USER LICENSE AGREEMENT }{\b\fs22\kerning44  \par }\pard\plain \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\fs22\cf1 Microsoft HSC Production Toolset   \par }{\fs20\lang1024\langfe1024\noproof {\shp{\*\shpinst\shpleft0\shptop168\shpright360\shpbottom168\shpfhdr0\shpbxcolumn\shpbxignore\shpbypara\shpbyignore\shpwr3\shpwrk0\shpfblwtxt0\shpz2\shplid1026 {\sp{\sn shapeType}{\sv 20}}{\sp{\sn fFlipH}{\sv 0}}{\sp{\sn fFlipV}{\sv 0}}{\sp{\sn shapePath}{\sv 4}}{\sp{\sn fFillOK}{\sv 0}}{\sp{\sn fFilled}{\sv 0}} {\sp{\sn fArrowheadsOK}{\sv 1}}{\sp{\sn fLayoutInCell}{\sv 1}}{\sp{\sn fLayoutInCell}{\sv 1}}}{\shprslt{\*\do\dobxcolumn\dobypara\dodhgt8194\dpline\dpptx0\dppty0\dpptx360\dppty0\dpx0\dpy168\dpxsize360\dpysize0\dplinew15\dplinecor0\dplinecog0\dplinecob0}}} {\shp{\*\shpinst\shpleft360\shptop168\shpright9720\shpbottom168\shpfhdr0\shpbxcolumn\shpbxignore\shpbypara\shpbyignore\shpwr3\shpwrk0\shpfblwtxt0\shpz0\shplid1027{\sp{\sn shapeType}{\sv 20}}{\sp{\sn fFlipH}{\sv 0}}{\sp{\sn fFlipV}{\sv 0}} {\sp{\sn shapePath}{\sv 4}}{\sp{\sn fFillOK}{\sv 0}}{\sp{\sn fFilled}{\sv 0}}{\sp{\sn fArrowheadsOK}{\sv 1}}{\sp{\sn fLayoutInCell}{\sv 1}}{\sp{\sn fLayoutInCell}{\sv 1}}}{\shprslt{\*\do\dobxcolumn\dobypara\dodhgt8192\dpline\dpptx0\dppty0\dpptx9360\dppty0 \dpx360\dpy168\dpxsize9360\dpysize0\dplinew15\dplinecor0\dplinecog0\dplinecob0}}}}{\fs22\cf1  \par }{\b\fs22 IMPORTANT\emdash READ CAREFULLY}{\fs22 :  This End-User License Agreement (\'93EULA\'94 ) is a legal agreement between you (either an individual or a single entity) and Microsoft Corporation for the Microsoft software product identified above, which includes computer software and may include associated media, printed materials, and \'93 online\'94 or electronic documentation (\'93SOFTWARE PRODUCT\'94).  An amendment or addendum to this EULA may accompany the SOFTWARE PRODUCT.  }{\b\fs22  BY INSTALLING, COPYING, OR OTHERWISE USING THE SOFTWARE PRODUCT, YOU AGREE TO BE BOUND B Y TERMS OF THIS EULA.  IF YOU DO NOT AGREE, DO NOT INSTALL, COPY, OR USE THE SOFTWARE PRODUCT.  In addition, by installing, copying, or otherwise using any updates of the SOFTWARE PRODUCT that you receive separately as part of the SOFTWARE PRODUCT ( \lquote \lquote UPDATES\rquote \rquote  ), you agree to be bound by any additional license terms that accompany such UPDATES. If you do not agree to the additional license terms that accompany such UPDATES, you may not install, copy, or otherwise use such UPDATES. \par }{\fs20\lang1024\langfe1024\noproof {\shp{\*\shpinst\shpleft0\shptop108\shpright9720\shpbottom108\shpfhdr0\shpbxcolumn\shpbxignore\shpbypara\shpbyignore\shpwr3\shpwrk0\shpfblwtxt0\shpz1\shplid1028 {\sp{\sn shapeType}{\sv 20}}{\sp{\sn fFlipH}{\sv 0}}{\sp{\sn fFlipV}{\sv 0}}{\sp{\sn shapePath}{\sv 4}}{\sp{\sn fFillOK}{\sv 0}}{\sp{\sn fFilled}{\sv 0}} {\sp{\sn fArrowheadsOK}{\sv 1}}{\sp{\sn fLayoutInCell}{\sv 1}}{\sp{\sn fLayoutInCell}{\sv 1}}}{\shprslt{\*\do\dobxcolumn\dobypara\dodhgt8193\dpline\dpptx0\dppty0\dpptx9720\dppty0\dpx0\dpy108\dpxsize9720\dpysize0\dplinew15\dplinecor0\dplinecog0\dplinecob0} }}}{\b\fs22  \par }{\fs22 SOFTWARE PRODUCT LICENSE \par The SOFTWARE PRODUCT is protected by copyright laws and international copyright treaties as well as other intellectual property laws and treaties.  The SOFTWARE PRODUCT is licensed, not sold. \par 1.\tab }{\b\fs22 GRANT OF LICENSE}{\fs22 .  Microsoft grants you the following rights provided you comply with all terms and conditions of this EULA: \par {\listtext\pard\plain\f3\fs22 \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \ql \fi-360\li720\ri0\widctlpar\jclisttab\tx720\aspalpha\aspnum\faauto\ls5 \jclisttab\tx720\aspalpha\aspnum\faauto\ls5\pnrauth1\pnrdate642948106\pnrstart0\pnrxst1\pnrxst0\pnrxst183\pnrxst240\pnrstop4\pnrstart1\pnrrgb0\pnrrgb0\pnrrgb0\pnrrgb0\pnrrgb0\pnrrgb0\pnrrgb0\pnrrgb0\pnrrgb0\pnrstop9\pnrstart2\pnrnfc23\pnrnfc23 \pnrnfc23\pnrnfc23\pnrnfc23\pnrnfc23\pnrnfc23\pnrnfc23\pnrnfc23\pnrnfc0\pnrnfc0\pnrnfc1\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrstop18\pnrstart3\pnrpnbr1\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0 \pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrstop36 \adjustright\rin0\lin720\itap0 {\b\fs22 SOFTWARE PRODUCT.  }{\fs22 You may install and use an unlimited number of copies, for your internal use only, of the SOFTWARE PRODUCT on computers, including workstations, terminals or other digital  electronic devices residing on your premises ("Computers") for purposes of designing, testing and customizing your Help and Support content }{\fs22\revised\revauth1\revdttm642948127 (including }{\fs22 updates}{\fs22\revised\revauth1\revdttm642948127   thereof)}{\fs22  with content specific to your hardware or  software application(s) for use with any ver sion or edition of Windows ME and /or Windows 2000 operating system products and/or any version or edition of any Microsoft operating system product that is a successor to the foregoing (each a \'93Microsoft Operating System Product\'94). }{\b\fs22   \par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 {\b\fs22 2. DESCRIPTION OF OTHER RIGHTS AND LIMITATIONS \par }\pard \ql \fi720\li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 {\b\fs22 2.1}{\fs22 .\tab }{\b\fs22 TRANSFER}{\fs22  .  The initial user of the SOFTWARE PRODUCT may make a one-time transfer of the SOFTWARE PRODUCT to another end user.  The transf er has to include all component parts, media, printed materials, this EULA, and if applicable, the Certificate of Authenticity.  The transfer may not be an indirect transfer, such as a consignment.  Prior to the transfer, the end user receiving the transf erred SOFTWARE PRODUCT must agree to all the EULA terms}{\b\i\fs22 .   \par 2.2}{\i\fs22 .}{\b\i\fs22   \tab }{\b\fs22 RENTAL }{\fs22   You may not rent, lease, or lend the SOFTWARE PRODUCT. \par }{\b\fs22 2.3}{\fs22 .\tab }{\b\fs22 LIMITATION ON REVERSE ENGINEERING, DECOMPILATION, AND DISASSEMBLY}{\fs22 .  You may not reverse engineer, decompile, or disassembl e the SOFTWARE PRODUCT, except and only to the extent that it is expressly permitted by applicable law notwithstanding this limitation.  \par }{\b\fs22 2.4}{\fs22 \tab }{\b\fs22 TERMINATION}{\fs22 .  Without prejudice to any other rights, Microsoft may cancel this EULA if you do not abide by the term s and conditions of this EULA, in which case you must destroy all copies of the SOFTWARE PRODUCT and all of its component parts.  \par  \par }{\b\fs22 2.5}{\fs22 . \tab }{\b\fs22 TRADEMARKS  }{\fs22 This EULA does not grant you any rights in connection with any trademarks or service marks of Microsoft. \par }{\b\fs22 2.6.}{\fs22 \tab }{\b\fs22 COPYRIGHT}{\fs22   All title and intellectual property rights in and to the SOFTWARE PRODUCT (including but not limited to any images, photographs, animations, video, audio, music, texts and \'93applets\'94  incorporated into the SOFTWARE PRODUCT), accompanying printe d materials, and any copies of the SOFTWARE PRODUCT are owned by Microsoft or its suppliers.  All title and intellectual property rights in and to the content which may be accessed through use of the SOFTWARE PRODUCT is the property of the respective cont ent owner and may be protected by applicable copyright or other intellectual property laws and treaties.  This EULA grants you no rights to use such content.  All rights not expressly granted are reserved by Microsoft. \par }{\b\fs22 2.7.}{\fs22 \tab }{\b\fs22 SUPPORT SERVICES}{\fs22 . Microsoft may but is not obligated to provide you with support services related to the SOFTWARE PRODUCT (\'93Support Services\'94 ). Use of Support Services is governed by the Microsoft policies and programs described in the user manual, in \'93online\'94 documentati on and/or other Microsoft-provided materials. Any supplemental software code provided to you as part of the Support Services shall be considered part of the SOFTWARE PRODUCT and subject to the terms and conditions of this EULA. With respect to technical i formation you provide to Microsoft as part of the Support Services, Microsoft may use such information for its business purposes, including for product support and development. Microsoft will not utilize such technical information in a form that personall y identifies you \par }{\b\fs22 2.8\tab CONSENT TO USE OF DATA.  }{\fs22  You agree that Microsoft and its affiliates may collect and use technical information you provide as a part of support services related to the SOFTWARE PRODUCT.  Microsoft agrees not to use this information in a form that personally identifies you. \par }{\b\fs22 2.9. }{\fs22 \tab }{\b\fs22 BACKUP COPY}{\fs22 .}{\b\fs22  }{\fs22  After installation of this SOFTWARE PRODUCT pursuant to this EULA, you may keep the original media on which the SOFTWARE PRODUCT was provided by Microsoft solely for backup or archival purposes. If t he original media is required to use the SOFTWARE PRODUCT on the COMPUTER, you may make one copy of the SOFTWARE PRODUCT solely for backup or archival purposes. Except as expressly provided in this EULA, you may not otherwise make copies of the SOFTWARE P RODUCT or the printed materials accompanying the SOFTWARE PRODUCT. \par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 {\b\fs22  3.   DISCLAIMER OF WARRANTIES.    TO THE MAXIMUM EXTENT PERMITTED BY APPLICABLE LAW, MICROSOFT AND ITS SUPPLIERS PROVIDE THE PRODUCT AND ANY (IF ANY) SUPPORT SERVICES RELATED TO THE PRODUCT (\'93SUPPORT SERVICES\'94 ) AS IS AND WITH ALL FAULTS, AND HEREBY DISCLAIM WITH RESPECT TO THE PRODUCT AND SUPPORT SERVICES ALL WARRANTIES AND CONDITIONS, WHETHER EXPRESS, IMPLIED OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, ANY (IF ANY) WARRANTIES, DUTIES OR CON DITIONS OF OR RELATED TO: MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, LACK OF VIRUSES, ACCURACY OR COMPLETENESS OF RESPONSES, RESULTS, WORKMANLIKE EFFORT AND LACK OF NEGLIGENCE.  ALSO, THERE IS NO WARRANTY, DUTY OR CONDITION OF TITLE, QUIET ENJOYME NT, QUIET POSSESSION, CORRESPONDENCE TO DESCRIPTION OR NON-INFRINGEMENT.  THE ENTIRE RISK AS TO THE QUALITY, OR ARISING OUT OF THE USE OR PERFORMANCE OF THE PRODUCT AND ANY SUPPORT SERVICES, REMAINS WITH YOU. \par }\pard\plain \s29\qj \li0\ri0\widctlpar\tx450\tx900\tx1350\tx1800\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \b\fs19\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\fs22 4.  EXCLUSION OF INCIDENTAL, CONSEQUENTIAL AND C ERTAIN OTHER DAMAGES.  TO THE MAXIMUM EXTENT PERMITTED BY APPLICABLE LAW, IN NO EVENT SHALL MICROSOFT OR ITS SUPPLIERS BE LIABLE FOR ANY DIRECT, SPECIAL, INCIDENTAL, INDIRECT, PUNITIVE, CONSEQUENTIAL OR OTHER DAMAGES WHATSOEVER (INCLUDING, BUT NOT LIMITED TO, DAMAGES FOR: LOSS OF PROFITS, LOSS OF CONFIDENTIAL OR OTHER INFORMATION, BUSINESS INTERRUPTION, PERSONAL INJURY, LOSS OF PRIVACY, FAILURE TO MEET ANY DUTY (INCLUDING OF GOOD FAITH OR OF REASONABLE CARE), NEGLIGENCE, AND ANY OTHER PECUNIARY OR OTHER LO S WHATSOEVER) ARISING OUT OF OR IN ANY WAY RELATED TO THE USE OF OR INABILITY TO USE THE PRODUCT OR SUPPORT SERVICES, THE PROVISION OF OR FAILURE TO PROVIDE SUPPORT SERVICES, OR OTHERWISE UNDER OR IN CONNECTION WITH ANY PROVISION OF THIS AGREEMENT, EVEN I  THE EVENT OF THE FAULT, TORT (INCLUDING NEGLIGENCE), STRICT LIABILITY, BREACH OF CONTRACT OR BREACH OF WARRANTY OF MICROSOFT OR ANY SUPPLIER, AND EVEN IF MICROSOFT OR ANY SUPPLIER HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.  BECAUSE SOME STATES/ JURISDICTIONS DO NOT ALLOW THE EXCLUSION OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES, THE ABOVE LIMITATION MAY NOT APPLY TO YOU. \par 5.\tab LIMITATION OF LIABILITY AND REMEDIES. NOTWITHSTANDING ANY DAMAGES THAT YOU MIGHT INCUR FOR ANY REASON  WHATSOEVER (INCLUDING, WITHOUT LIMITATION, ALL DAMAGES REFERENCED ABOVE AND ALL DIRECT OR GENERAL DAMAGES), THE ENTIRE LIABILITY OF MICROSOFT AND ANY OF ITS SUPPLIERS UNDER ANY PROVISION OF THIS AGREEMENT AND YOUR EXCLUSIVE REMEDY FOR ALL OF THE FOREGOING SHALL BE LIMITED TO ACTUAL DAMAGES INCURRED BY YOU BASED ON REASONABLE RELIANCE UP TO THE GREATER OF THE AMOUNT ACTUALLY PAID BY YOU FOR THE PRODUCT OR FIVE DOLLARS (US$5.00).  THE FOREGOING LIMITATIONS, EXCLUSIONS AND DISCLAIMERS (INCLUDING SECTIONS 3 AN D 4 ABOVE) SHALL APPLY TO THE MAXIMUM EXTENT PERMITTED BY APPLICABLE LAW, EVEN IF ANY REMEDY FAILS ITS ESSENTIAL PURPOSE. \par }\pard\plain \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\fs22 6.\tab }{\b\fs22\cf1 U.S. GOVERNMENT RIGHTS}{\fs22\cf1  . All SOFTWARE PRODUCT provided to the U.S. Government pursuant to solicitations issued on or after December 1 , 1995 is provided with the commercial license rights and restrictions described elsewhere herein.  All SOFTWARE PRODUCT provided to the U.S. Government pursuant to solicitations issued prior to December 1, 1995 is provided with "Restricted Rights" as pro ided for in FAR, 48 CFR 52.227-14 (JUNE 1987) or DFAR, 48 CFR 252.227-7013 (OCT 1988), as applicable.  The reseller is responsible for ensuring SOFTWARE PRODUCT is marked with the "Restricted Rights Notice" or "Restricted Rights Legend," as required.  All  rights not expressly granted are reserved. \par }{\b\fs22 7.\tab EXPORT RESTRICTIONS.  }{\fs22 You acknowledge that SOFTWARE PRODUCT is}{\b\fs22  }{\fs22 subject to U.S. export jurisdiction.  You agree to comply with all applicable international and national laws that apply to the SOFTWARE PRODUCT, i ncluding the U.S. Export Administration Regulations, as well as end-user, end-use and destination restrictions issued by U.S. and other governments. For additional information, see }{\field\flddirty{\*\fldinst {\fs22   HYPERLINK "http://www.microsoft.com/exporting/" }{\fs22\revised\revdttm-2041400268 {\*\datafield  00d0c9ea79f9bace118c8200aa004ba90b02000000170000002400000068007400740070003a002f002f007700770077002e006d006900630072006f0073006f00660074002e0063006f006d002f006500780070006f007200740069006e0067002f000000e0c9ea79f9bace118c8200aa004ba90b48000000680074007400 70003a002f002f007700770077002e006d006900630072006f0073006f00660074002e0063006f006d002f006500780070006f007200740069006e0067002f00000000}}}{\fldrslt {\cs28\fs22\ul\cf2 http://www.microsoft.com/exporting/}}}{\fs22 . \par }{\b\fs22 8}{\fs22 .\tab }{\b\fs22 APPLICABLE LAW.  }{\fs22  If you acquired this SOFTWARE PRODUCT in the United States, this EULA is governed by the laws of the State of Washington.  If you acquired this SOFTWARE PRODUCT in Canada, unless expressly prohibited by local law, this EUL A is governed by the laws in force in the Province of Ontario, Canada; and, in respect of any dispute which may arise hereunder, you consent to the jurisdiction of the federal and provincial courts sitting in Toronto, Ontario.  If this SOFTWARE PRODUCT wa s acquired outside the United States, then local law may apply. \par }{\b\fs22 9}{\fs22 .\tab }{\b\fs22 ENTIRE AGREEMENT.  This EULA (including any addendum or amendment to this EULA which is included with the SOFTWARE PRODUCT) are the entire agreement between you and Microsoft relating to the  SOFTWARE PRODUCT and the support services (if any) and they supersede all prior or contemporaneous oral or written communications, proposals and representations with respect to the SOFTWARE PRODUCT or any other subject matter covered by this EULA.  To th e extent the terms of any Microsoft policies or programs for support services conflict with the terms of this EULA, the terms of this EULA shall control. \par }}
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\pchealth\authtools\prodtools\unused\reports\package_description.xml ===
< ? x m l   v e r s i o n = " 1 . 0 "   ? > 
 
 < H E L P C E N T E R P A C K A G E > 
 
         < V E R S I O N   V A L U E = " 1 . 0 "   / > 
 
         < P R O D U C T   I D = " W i n d o w s _ X P _ P E R "   / > 
 
         < S K U   V A L U E = ' P e r s o n a l _ 3 2 '   D I S P L A Y N A M E = ' W i n d o w s   X P   H o m e   E d i t i o n ' / > 
 
         < L A N G U A G E   V A L U E = ' 1 0 3 3 ' / > 
 
         < M E T A D A T A > 
 
                 < H H T   F I L E = " P e r s o n a l _ 3 2 . h h t "   / > 
 
         < / M E T A D A T A > 
 
 
 
 < / H E L P C E N T E R P A C K A G E > 
 
 
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\pchealth\client\datacoll\dataspec\dataspec.xml ===
<?xml version="1.0" ?>
<DataSpec GUID="47DE97C8-F86B-11d2-9628-00C04F68F2AF">
	<WQL Namespace="root/pchealth">select * from PCH_ProgramGroup</WQL>
	<WQL Namespace="root/pchealth">select * from PCH_NetworkConnection</WQL>
	<WQL Namespace="root/pchealth">select * from PCH_PrintJob</WQL>
	<WQL Namespace="root/pchealth">select * from PCH_NetworkProtocol</WQL>
	<WQL Namespace="root/pchealth">select * from PCH_Drive</WQL>
	<WQL Namespace="root/pchealth">select * from PCH_Codec</WQL>
	<WQL Namespace="root/pchealth">select * from PCH_CDROM</WQL>
	<WQL Namespace="root/pchealth">select * from PCH_Startup</WQL>
	<WQL Namespace="root/pchealth">select * from PCH_NetworkAdapter</WQL>
	<WQL Namespace="root/pchealth">select * from PCH_SysInfo</WQL>
	<WQL Namespace="root/pchealth">select * from PCH_Driver</WQL>
	<WQL Namespace="root/pchealth">select * from PCH_Device</WQL>
	<WQL Namespace="root/pchealth">select * from PCH_RunningTask</WQL>
</DataSpec>
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\pchealth\client\datacoll\neptdspc\dataspec.xml ===
<?xml version="1.0" ?>
<DataSpec GUID="47DE97C8-F86B-11d2-9628-00C04F68F2AF">
	<WQL Namespace="root/pchealth" Class="PCH_NetworkConnection">select * from PCH_NetworkConnection</WQL>
	<WQL Namespace="root/pchealth" Class="PCH_PrintJob">select * from PCH_PrintJob</WQL>
	<WQL Namespace="root/pchealth" Class="PCH_Drive">select * from PCH_Drive</WQL>
	<WQL Namespace="root/pchealth" Class="PCH_Codec">select * from PCH_Codec</WQL>
	<WQL Namespace="root/pchealth" Class="PCH_OleRegistration">select * from PCH_OleRegistration</WQL>
	<WQL Namespace="root/pchealth" Class="PCH_CDRom">select * from PCH_CDRom</WQL>
	<WQL Namespace="root/pchealth" Class="PCH_Printer">select * from PCH_Printer</WQL>
	<WQL Namespace="root/pchealth" Class="PCH_PrinterDriver">select * from PCH_PrinterDriver</WQL>
	<WQL Namespace="root/pchealth" Class="PCH_Winsock">select * from PCH_Winsock</WQL>
	<WQL Namespace="root/pchealth" Class="PCH_NetworkAdapter">select * from PCH_NetworkAdapter</WQL>
	<WQL Namespace="root/pchealth" Class="PCH_BIOS">select * from PCH_BIOS</WQL>
	<WQL Namespace="root/pchealth" Class="PCH_SysInfo">select * from PCH_SysInfo</WQL>
	<WQL Namespace="root/pchealth" Class="PCH_Startup">select * from PCH_Startup</WQL>
	<WQL Namespace="root/pchealth" Class="PCH_Fileupload">select * from PCH_Fileupload where path = "c:\\autoexec.bat"</WQL>
	<WQL Namespace="root/pchealth" Class="PCH_Fileupload">select * from PCH_Fileupload where path = "c:\\config.sys"</WQL>
	<WQL Namespace="root/pchealth" Class="PCH_Fileupload">select * from PCH_Fileupload where path = "c:\\detlog.txt"</WQL>
	<WQL Namespace="root/pchealth" Class="PCH_Fileupload">select * from PCH_Fileupload where path = "%windir%\\win.ini"</WQL>
	<WQL Namespace="root/pchealth" Class="PCH_Fileupload">select * from PCH_Fileupload where path = "%windir%\\wulog.txt"</WQL>
	<WQL Namespace="root/pchealth" Class="PCH_DeviceDriver">select * from PCH_DeviceDriver</WQL>
	<WQL Namespace="root/pchealth" Class="PCH_Device">select * from PCH_Device</WQL>
	<WQL Namespace="root/pchealth" Class="PCH_ResourceDMA">select * from PCH_ResourceDMA</WQL>
	<WQL Namespace="root/pchealth" Class="PCH_ResourceIRQ">select * from PCH_ResourceIRQ</WQL>
	<WQL Namespace="root/pchealth" Class="PCH_ResourceIORange">select * from PCH_ResourceIORange</WQL>
	<WQL Namespace="root/pchealth" Class="PCH_ResourceMemRange">select * from PCH_ResourceMemRange</WQL>
</DataSpec>
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\pchealth\core\symres\utest\stack.txt ===
KERNEL32.DLL 4.10.1998 2 19BF7
FAULTTEST.EXE - 1 19A
FAULTTEST.EXE - 1 1CA
FAULTTEST.EXE - 1 221
FAULTTEST.EXE - 1 32F
KERNEL32.DLL 4.10.1998 2 12537
KERNEL32.DLL 4.10.1998 2 123E9
KERNEL32.DLL 4.10.1998 2 10DAC
HELLO.DLL - 1 24  
FAULTTEST.EXE - 1 126
FAULTTEST.EXE - 1 187
FAULTTEST.EXE - 1 1AA
FAULTTEST.EXE - 1 1B8
KERNEL32.DLL 4.10.1998 2 FEF7
KERNEL32.DLL 4.10.1998 2 D966
HELLO5 - 1 24
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\pchealth\helpctr\readme.txt ===
This directory is the main directory for Help Center application which includes SAF.
There are sub-directories underneath this to create other components like the Shell, NameSpace, SAF, Content Store, etc.
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\pchealth\helpctr\bugrept\whistler\brreadme.txt ===
BRreadme.txt
---------------------------------------------------------
       MICROSOFT PCHealth Bug Reporting README FILE
  for Bug Reporting Web Update #2, version 4.90.00.2404
                    October 27, 1999
  (c) Microsoft Corporation, 1999. All rights reserved.
---------------------------------------------------------

This document provides late breaking or other information 
that is relevant to the PCHealth bug reporting page, and
is current as of the date above. After that date, you may
find more current information and resources on the
Windows Beta Web site at:

   http://winbeta.microsoft.com/bugrep

You can also receive support from the following newsgroup:

   microsoft.beta.millennium.pchealth.help_support_tool

NEWS FLASH: "Help Center" on the Start->Programs menu
offically changed its name to "Help and Support" starting
with build 2399.
_______________________________________________________
CONTENTS

1. INSTALLING MICROSOFT BUG REPORTING PAGE UPDATE

   1.1  Close the Help and Support application
   1.2  Download and run installation program, brupdate.exe,
        from above web site for build 4.90.00.2404 by clicking
        on the <Download> button
   1.3  Click <Yes> to accept any VeriSign certificates, then
        click <OK> when installation is complete


2. HOW TO FILE A BUG REPORT

   2.1  Click on Start->Programs->Help and Support
   2.2  Click on "Report a Millennium bug" at the bottom of
        the page, or click on "Get support" at the top right
        of the page and then click on "Microsoft Corporation"
        on the "Get help from Vendors" page
   2.3  Fill out all fields on bug report form 
   2.4  Add any additional files necessary for the bug report
   2.5  Check the "Save copy to disk" box if you want to save
        a copy of your bug report to disk
   2.6  Beta users who wish to do batch uploads can uncheck
        the "Submit to Microsoft now" checkbox
   2.7  Click on <Done> button or select Alt+D

   Data collection will typically take one to two minutes.
   Creating a CAB file takes a few seconds to many seconds
   depending on how many files you have attached and their
   overall size.  Transmitting the bug file to Microsoft
   takes anywhere from a few seconds to several minutes
   depending on the size of the CAB file and your Internet
   connection speed.


3. HOW TO VIEW SUBMITTED REPORTS

   3.1  Click on Start->Programs->Help and Support
   3.2  Click on "Get support" in top right corner
   3.3  Click on "Check Status..." in the bottom left
   3.4  Scroll up and down as necessary
   3.5  Click on title to see bug report details

   You must have submitted bug reports successfully before
   you will see anything on the "Check Status..." screen.


4. FIX HIGHLIGHTS FOR THIS WEB RELEASE (version 4.90.00.2404)

   4.1  Bug tracking improvements
        * "Check Status" fixed for build 2399 and later
   4.2  User Interface improvements
        * Added link on page to bug reporting link on Winbeta
          web site
        * Bug reporting page version is now displayed at the
          bottom of the page        
   4.3  Data collection improvements
        * Data collection errors are now skipped.  The errors
          are now detected internally and recorded in the
          submitted data.
        * Fixed "Invalid procedure call or argument (5)" error
          for Beta 1
        * Additional log files are now collected from the system
          to assist Microsoft with tracking down causes for bugs:
          hcupdate.log, %windir%\system\wbem\logs\*.log
   4.4  Bug transmission improvements
	None

   If you encounter any data collection errors with this update,
   please post your results to the help_support_tool newsgroup.


5. FIX HIGHLIGHTS FOR PREVIOUS WEB RELEASE (version 4.90.00.2400)

   5.1  Bug tracking improvements
        * Date/time returned with tracking number
        * Incident tracking enabled; you can now view a list
          of the bugs you are submitting by clicking on "Get
          Support" at the top of the HelpCenter and then clicking
          on "Check Status..." at the bottom of the "Get help from
          Vendors" page
        * Ability to Save and/or Submit without two data
          collections taking place
   5.2  User Interface improvements
        * Insertion bar auto-positioned into BetaID field
        * Last edited control maintains focus when you Alt+Tab
          away from bug reporting page and Alt+Tab back
        * Increased field sizes to 2000 characters, except for
          Problem Title, which is 255
        * Auto-add .CAB file extension for saved bug reports
        * If an error occurs in a field, the cursor is auto-
          positioned into the field which caused the error
        * All known script errors fixed
        * Display a list of the default files collected
        * Improved interface for adding attached files
        * Miscellaneous UI enhancements
   5.3  Data collection improvements
        * IE 5.0 data collected for improved symptom tracking
          in Internet Explorer related bugs
        * Operating System version and language collected even
          if "Share this information with Microsoft" is unchecked
        * All attached files are now stored in the CAB file and
          not in the Incident.xml
   5.4  Bug transmission improvements
        * Proxy upload problem (Transmitting 0%) is fixed
        * user.dat and system.dat registry files collected only
          if "Setup" area is selected
	* More detailed transmission status displayed based on
          number of bytes transmitted out of total bytes


6. KNOWN ISSUES

   6.1  This update is not yet localized into the five Beta1
        languages (German, Japanese, Korean, Chinese, and
        Taiwan)
   6.2  No keyboard access to all controls on the page
        * Text control size buttons
        * List of files collected
   6.3  Privacy links do not work in build 2394 & 2399 [Fixed
        in 2403]
   6.4  Some script errors may still be present
        * Please continue reporting these problems
   6.5  Batch upload script is not user friendly and does not
        integrate with incident history
   6.6  Incident view page is missing some style information
        and does not display like the main Bug Reporting page
   6.7  Title field auto-truncates to 255 characters without
        warning
   6.8  All text fields allow you to type or paste data larger
        than the maximum allowed size limit (e.g. 2000
        characters) and only warn of truncation after
        truncation has occurred
   6.9  No scroll bars on text fields in incident view page
   6.10 Printing all text on bug reporting pages when text
        extends beyond vertical size of text field is
        difficult
   6.11 You must still be connected to the Internet prior to
        submitting a bug, but not prior to launching the
        Help Center
   6.12 There is still a 10MB limit on compressed size of
        uploaded CAB file
   6.13 Submission time stamp is not returned on thank you page
   6.14 No process defined for migrating bug tracking data from
        one build to the next
   6.15 Need to auto-generate saved CAB filename as title plus
        .CAB extension
   6.16 When path to added files exceeds approximately 60
        characters, rightmost portion of path and filename
        are not viewable in add files list
   6.17 Prevent recording of incident when there is not enough
        space on disk to save CAB file
   6.18 Identical files can be added to the add file list
   6.19 <Submit> button name is preferred over <Done>
   6.20 There is currently no way to "save" your page settings
        after exiting the bug reporting page (Beta ID, save to
        disk, etc)
   6.21 Some users are still getting "Active 0%", which
        indicates they have a job stuck in their upload queue

   If you are seeing the "Active 0%" problem, post to the
   help_support_tool newsgroup for assistance.


7. UNSCHEDULED/UNPLANNED FEATURES AND REQUESTS

   We have received requests for other features.  We will
   consider such requests but make no guarantee we will
   implement them.

   7.1  Ability to resolve or close incidents
   7.2  Ability to check on status of submitted incidents
   7.3  Ability to append updated data to a bug
   7.4  Ability to migrate incidents to new Millennium builds
        for clean installs or uninstall/reinstall
   7.5  Ability to go to website to view all Millennium bugs
        or to query on bug titles or bug descriptions
   7.6  Ability to see bug statistics of other users on website
   7.7  Ability to view "Top 100" bugs on website
   7.8  Improved batch upload capabilities integrated into
        incident reporting mechanism
   7.9  Desktop shortcut or Start Menu link to Bug Reporting
        page
   7.10 DOS based bug reporting tools for no boot and Windows
        setup bugs
   7.11 Ability to edit multiple bug reports simultaneously
   7.12 Collect log files or other data specific to problem area
        selected, to further assist with troubleshooting bugs
   7.13 Allow multi-file selection when adding files
   7.14 Full path to CAB file not displayed in incident view
        page
   7.15 No hot link to CAB file from incident view page
   7.16 Implement more intuitive save feature for CAB files


8. BUG FIX SUMMARY

Fixed Build	Date		Title
04.90.00.2404	10/22/99	FIXED : Help Center UI: External link to Microsoft Privacy page does not work
04.90.00.2404	10/22/99	FIXED : BugReport: Need to add link to bug reporting update page
04.90.00.2403	10/22/99	FIXED : HelpCtr Bug Reporting: Incident doesn't show up in check status windows after filing a bug
04.90.00.2404	10/22/99	FIXED : DCR: BugReport: We should display bug reporting page version on the page at the bottom
04.90.00.2404	10/22/99	FIXED : HelpCenter: "Invalid procedure call (5)" error collecting data
04.90.00.2404	10/25/99	FIXED : Bugrep Update: no finished message when brupdate.exe is finished
04.90.00.2402	10/22/99	FIXED : BugReporting: Submission Timestamp not returned upon completion of upload on build 2399
04.90.00.2404	10/25/99	FIXED : Bug Submission Needs to Collect HCUpdate.Log As Part of Standard Escalation
04.90.00.2404	10/25/99	FIXED : We need to collect WBEM logs under %windir%\system\wbem\logs if the folder+logs exist
_______________________________________________________
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\pchealth\helpctr\bugrept\whistler\bug_upload_collect.xml ===
<?xml version="1.0" ?>
<DataSpec GUID="47DE97C8-F86B-11d2-9628-00C04F68F2AF">
	<WQL Namespace="root/cimv2" Class="Win32_CodecFile">select Group, Description, Version, CreationDate, FileSize, Manufacturer, Name FROM win32_CodecFile</WQL>
        <WQL Namespace="root/cimv2" Class="Win32_ComputerSystem">Select Name, BootupState FROM Win32_ComputerSystem</WQL>
	<WQL Namespace="root/cimv2" Class="Win32_DeviceMemoryAddress">Select StartingAddress, EndingAddress, Description FROM Win32_DeviceMemoryAddress</WQL>
	<WQL Namespace="root/cimv2" Class="Win32_DMAChannel">Select DMAChannel, Name FROM Win32_DMAChannel</WQL>
	<WQL Namespace="root/cimv2" Class="Win32_IRQResource">Select IRQNumber, Name FROM Win32_IRQResource</WQL>
	<WQLOLD Namespace="root/cimv2" Class="Win32_LogicalDisk">Select Description, DeviceID, FileSystem, FreeSpace, Size VolumeDirty FROM Win32_LogicalDisk where MediaType = 3</WQLOLD>
        <WQL Namespace="root/cimv2" Class="Win32_LogicalDisk">Select Description, DeviceID, FileSystem, FreeSpace, Size FROM Win32_LogicalDisk where DriveType = 3</WQL>
	<WQL Namespace="root/cimv2" Class="Win32_LogicalMemoryConfiguration">Select Name, TotalPhysicalMemory FROM Win32_LogicalMemoryConfiguration</WQL>
	<WQL Namespace="root/cimv2" Class="Win32_NetworkProtocol">Select Name, ConnectionlessService, GuaranteesDelivery, GuaranteesSequencing from Win32_NetworkProtocol</WQL>
	<WQL Namespace="root/cimv2" Class="Win32_OperatingSystem">Select Name, Caption, BuildNumber,OSLanguage FROM Win32_OperatingSystem</WQL>
        <WQL Namespace="root/cimv2" Class="Win32_PNPAllocatedResource"> Select Antecedent, Dependent FROM Win32_PNPAllocatedResource</WQL>
	<WQLOLD Namespace="root/cimv2" Class="Win32_PNPEntity">select Name, Description from Win32_PNPEntity</WQLOLD>
        <WQL Namespace="root/cimv2" Class="Win32_PNPEntity">select DeviceID, Name, Description, PNPDeviceID from Win32_PNPEntity</WQL>
	<WQL Namespace="root/cimv2" Class="Win32_PortResource">Select StartingAddress, EndingAddress, Name FROM Win32_PortResource</WQL>
	<WQL Namespace="root/Cimv2" Class="Win32_Printer">select Attributes, DeviceID, PortName, PNPDeviceID, SpoolEnabled from Win32_Printer</WQL>
	<WQL Namespace="root/cimv2" Class="Win32_ProgramGroup">Select GroupName, Name, UserName FROM Win32_ProgramGroup</WQL>
	<WQL Namespace="root/cimv2" Class="Win32_StartupCommand">Select Name, Command, Location, User FROM Win32_StartupCommand</WQL>
	<WQL Namespace="root/cimv2" Class="Win32_CDROMDrive">Select ConfigManagerErrorCode, Manufacturer, Name, PNPDeviceID FROM Win32_CDROMDrive</WQL>
	<WQL Namespace="root/cimv2" Class="Win32_SoundDevice">Select ConfigManagerErrorCode, DeviceID, ProductName, Name, PNPDeviceID FROM Win32_SoundDevice</WQL>
	<WQL Namespace="root/cimv2" Class="Win32_VideoController">select AcceleratorCapabilities, AdapterCompatibility, AdapterDACType, AdapterRAM, CapabilityDescription, ConfigManagerErrorCode, CurrentHorizontalResolution, CurrentVerticalResolution, DeviceID, DriverDate, DriverVersion, InstalledDisplayDrivers, Name, PNPDeviceID, VideoModeDescription FROM Win32_VideoController</WQL>
	<WQL Namespace="root/cimv2" Class="Win32_InfraredDevice">Select ConfigManagerErrorCode, DeviceID, Name FROM Win32_InfraredDevice"</WQL>
	<WQL Namespace="root/cimv2" Class="Win32_Keyboard">Select ConfigManagerErrorCode, DeviceID, Name, PNPDeviceID FROM Win32_Keyboard"</WQL>
	<WQL Namespace="root/cimv2" Class="Win32_PointingDevice">Select ConfigManagerErrorCode, DeviceID, Name, PNPDeviceID FROM Win32_PointingDevice</WQL>
	<WQL Namespace="root/cimv2" Class="Win32_POTSModem">Select ConfigManagerErrorCode, DeviceID, Name, PNPDeviceID FROM Win32_POTSMODEM</WQL>
	<WQL Namespace="root/cimv2" Class="Win32_NetworkAdapter">Select AdapterTypeID, ConfigManagerErrorCode, DeviceID, Name, NetConnectionStatus, PNPDeviceID, ProductName FROM Win32_NetworkAdapter</WQL>
	<WQL Namespace="root/cimv2" Class="Win32_NetworkAdapterConfiguration">Select DHCPEnabled, DNSDomain, IPEnabled FROM Win32_NetworkAdapterConfiguration</WQL>
	<WQL Namespace="root/cimv2" Class="Win32_USBController">Select ConfigManagerErrorCode, DeviceID, Manufacturer, PNPDeviceID From Win32_USBController</WQL>
	<WQL Namespace="root/cimv2" Class="Win32_USBHub">Select ConfigManagerErrorCode, PNPDeviceID FROM Win32_USBHub</WQL>
	<WQL Namespace="root/cimv2" Class="Win32_SCSIController">Select ConfigManagerErrorCode, DeviceID, PNPDeviceID FROM Win32_SCSIController</WQL>
	<WQL Namespace="root/cimv2" Class="Win32_Processor">Select Family FROM Win32_Processor</WQL>
</DataSpec>
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\pchealth\helpctr\bugrept\whistler\bug_upload_nocollect.xml ===
<?xml version="1.0" ?>
<DataSpec GUID="47DE97C8-F86B-11d2-9628-00C04F68F2AF">
    <WQL Namespace="root/pchealth" Class="PCH_SysInfo">select * from PCH_SysInfo</WQL>
</DataSpec>
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\pchealth\helpctr\bugrept\whistler\list.txt ===
bugrept.cab,Windows Whistler Bug Reporting,http://www.microsoft.com/windows
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\pchealth\helpctr\bugrept\whistler\saf1.xml ===
<?xml version="1.0" encoding="utf-8" ?>
<SAFConfig>
	<LocalizationComment>ProductID and ProductDescription should be localized</LocalizationComment>
	<ProductID>Microsoft Whistler Beta</ProductID>
	<ProductDescription>Beta test of the Whistler OS</ProductDescription>
	<EntryURL>hcp://CN=Microsoft%20Corporation,L=Redmond,S=Washington,C=US/bugrep.htm</EntryURL>
	<VendorIcon>hcp://CN=Microsoft%20Corporation,L=Redmond,S=Washington,C=US/logo.gif</VendorIcon>
</SAFConfig>
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\pchealth\helpctr\content\config.xml ===
<?xml version="1.0" encoding="utf-8" ?>
<UPLOADLIBRARYCONFIG>
    <QUEUE LOCATION="%WINDIR%\PCHealth\UploadLB\Queue" SIZE="100MB"/>
    <TIMING>
        <WAKEUP TIME="15m"/>
        <WAITBETWEENJOBS TIME="60s"/>
        <BANDWIDTHUSAGE PERCENTAGE="20"/>
		<REQUESTTIMEOUT TIME="20s"/>
    </TIMING>
    <PACKETS>
        <CONNECTIONTYPE SPEED="MODEM" SIZE="4KB"/>
        <CONNECTIONTYPE SPEED="LAN" SIZE="16KB"/>
    </PACKETS>
</UPLOADLIBRARYCONFIG>
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\pchealth\helpctr\content\fhdsp.xml ===
<FAULTSPEC>
    <EXEINFO STATUS="Enabled"/>
    <DLLINFO STATUS="Enabled"/>
    <EXCEPTIONINFO STATUS="Enabled"/>
    <FAULTTHREAD CONTEXT="Enabled" CALLSTACK="20" />
    <OTHERTHREADS CONTEXT="Enabled" CALLSTACK="20" />
    <PCHBIN FILENAME="PCHEALTH.EXE" />
    <PCHBIN FILENAME="PCHFH.EXE" />
    <PCHBIN FILENAME="UPLOADM.EXE" />
    <PCHBIN FILENAME="PCHSCHD.EXE" />
</FAULTSPEC>
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\pchealth\helpctr\bugrept\whistler\signcab.txt ===
***************************** PLEASE READ ********************************************

The bugrept.cab file built in this directory should be real-signed by http://prslab, and then,
checked into %sdxroot%\admin\pchealth\redist\bugrept.cab. Detailed steps are listed below:

1. go to http://prslab/codesign/tool.htm, click "Create Request", fill the form as below:

Job Description: bug reporting page for whistler
Certificate type: Microsoft External Code Distribution
Virus Checker: Cheyenne (innoculan)
Virus Checker Engine Version: 4.0
Macro Virus Check:  Yes
Encryption: Not High Crypto
Operation System: 32-bit Windows
Product Version: <Whistler Version & build number>
Language: English

Fill in >= 2 MS full-time employees e-mail aliases

Y2k Compliant: TRUE

Add then submit two files: 
        bugrept.cab
        list.txt

2. http://prslab will send a notice once the bugrept.cab is real-signed.

3. in razzle window:
    cd /d %sdxroot%\admin\pchealth\redist
    sd edit bugrept.cab
    copy <real-signed bugrept.cab> .
    sd submit bugrept.cab

The last step checks in a real-signed bugrept.cab.
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\pchealth\helpctr\bugrept\whistler\package_description.xml ===
<?xml version="1.0" encoding="utf-8" ?>
<HELPCENTERPACKAGE>
	<SKU VALUE="ALL"/>
	<LANGUAGE VALUE="ALL"/>
	<VERSION VALUE="5.00.00.60000" /> 
	<PRODUCT ID= "26C23154-C560-4c9b-92D2-A0603D46C419" /> 

    <CONFIG>
		<SAF ACTION="ADD" FILE="saf1.xml"/>
    </CONFIG>
    <INSTALL_CONTENT>
		<FILE ACTION="ADD" SOURCE="bugrep.htm" URI="bugrep.htm"/>
		<FILE ACTION="ADD" SOURCE="inc_head.htm" URI="inc_head.htm"/>
		<FILE ACTION="ADD" SOURCE="inc_tail.htm" URI="inc_tail.htm"/>
		<FILE ACTION="ADD" SOURCE="bugrep.css" URI="bugrep.css"/>
		<FILE ACTION="ADD" SOURCE="errcodes.vbs" URI="errcodes.vbs"/>
		<FILE ACTION="ADD" SOURCE="bug_upload_collect.xml" URI="bug_upload_collect.xml"/>
		<FILE ACTION="ADD" SOURCE="bug_upload_nocollect.xml" URI="bug_upload_nocollect.xml"/>
		<FILE ACTION="ADD" SOURCE="star.gif" URI="star.gif"/>
		<FILE ACTION="ADD" SOURCE="size_up.gif" URI="size_up.gif"/>
		<FILE ACTION="ADD" SOURCE="size_down.gif" URI="size_down.gif"/>
		<FILE ACTION="ADD" SOURCE="logo.gif" URI="logo.gif"/>
		<FILE ACTION="ADD" SOURCE="space.gif" URI="space.gif"/>
    </INSTALL_CONTENT>
    <TRUSTED_CONTENT>
        <TRUSTED ACTION="ADD" URI="hcp://CN=Microsoft%20Corporation,L=Redmond,S=Washington,C=US/"/>
    </TRUSTED_CONTENT>
</HELPCENTERPACKAGE>
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\pchealth\helpctr\content\dataspec.xml ===
<?xml version="1.0" ?>
<DataSpec GUID="47DE97C8-F86B-11d2-9628-00C04F68F2AF">
	<WQL Namespace="root/cimv2" Class="Win32_CodecFile">select Group, Description, Version, CreationDate, FileSize, Manufacturer, Name FROM win32_CodecFile</WQL>
        <WQL Namespace="root/cimv2" Class="Win32_ComputerSystem">Select Name, BootupState FROM Win32_ComputerSystem</WQL>
	<WQL Namespace="root/cimv2" Class="Win32_DeviceMemoryAddress">Select StartingAddress, EndingAddress, Description FROM Win32_DeviceMemoryAddress</WQL>
	<WQL Namespace="root/cimv2" Class="Win32_DMAChannel">Select DMAChannel, Name FROM Win32_DMAChannel</WQL>
	<WQL Namespace="root/cimv2" Class="Win32_IRQResource">Select IRQNumber, Name FROM Win32_IRQResource</WQL>
	<WQLOLD Namespace="root/cimv2" Class="Win32_LogicalDisk">Select Description, DeviceID, FileSystem, FreeSpace, Size FROM Win32_LogicalDisk where MediaType = 3</WQLOLD>
        <WQL Namespace="root/cimv2" Class="Win32_LogicalDisk">Select Description, DeviceID, FileSystem, FreeSpace, Size FROM Win32_LogicalDisk where DriveType = 3</WQL>
	<WQL Namespace="root/cimv2" Class="Win32_LogicalMemoryConfiguration">Select Name, TotalPhysicalMemory FROM Win32_LogicalMemoryConfiguration</WQL>
	<WQL Namespace="root/cimv2" Class="Win32_NetworkProtocol">Select Name, ConnectionlessService, GuaranteesDelivery, GuaranteesSequencing from Win32_NetworkProtocol</WQL>
	<WQL Namespace="root/cimv2" Class="Win32_OperatingSystem">Select Name, Caption, BuildNumber,OSLanguage FROM Win32_OperatingSystem</WQL>
        <WQL Namespace="root/cimv2" Class="Win32_PNPAllocatedResource"> Select Antecedent, Dependent FROM Win32_PNPAllocatedResource</WQL>
	<WQLOLD Namespace="root/cimv2" Class="Win32_PNPEntity">select Name, Description from Win32_PNPEntity</WQLOLD>
        <WQL Namespace="root/cimv2" Class="Win32_PNPEntity">select DeviceID, Name, Description from Win32_PNPEntity</WQL>
	<WQL Namespace="root/cimv2" Class="Win32_PortResource">Select StartingAddress, EndingAddress, Name FROM Win32_PortResource</WQL>
	<WQL Namespace="root/Cimv2" Class="Win32_Printer">select Attributes, DeviceID, PortName, SpoolEnabled from Win32_Printer</WQL>
	<WQL Namespace="root/cimv2" Class="Win32_ProgramGroup">Select GroupName, Name, UserName FROM Win32_ProgramGroup</WQL>
	<WQL Namespace="root/cimv2" Class="Win32_StartupCommand">Select Name, Command, Location, User FROM Win32_StartupCommand</WQL>
</DataSpec>
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\pchealth\helpctr\content\systempages\helpctr.xml ===
<Mars_App>
   <!-- the "Panels" tag contains all panels that will be created initially -->
   <Panels>
      <!-- The navigation bar, always at the top -->
      <Panel PanelType="Trident" Trusted="true" AutoSize="true">
         <Name>NavBar</Name>
         <Layout>
            <Position>Top</Position>
            <Width MIN="540">0</Width>
         </Layout>
         <StartUrl>hcp://system/panels/NavBar.htm</StartUrl>
      </Panel>
      <!--  -->

      <!-- The optional context pane, always to the left -->
      <Panel PanelType="WebBrowser" Trusted="false">
         <Name>Context</Name>
         <Layout>
            <Position>Left</Position>
            <Width MIN="1">310</Width>
         </Layout>
         <StartUrl>hcp://system/panels/Context.htm</StartUrl>
      </Panel>
      <!--  -->

      <!-- The optional little nav bar, always on top of the content -->
      <Panel PanelType="Trident" Trusted="true" AutoSize="true">
         <Name>MiniNavBar</Name>
         <Layout>
            <Position>Top</Position>
         </Layout>
         <StartUrl>hcp://system/panels/MiniNavBar.htm</StartUrl>
      </Panel>
      <!--  -->

      <!-- Finally out content area -->
      <Panel PanelType="WebBrowser" Trusted="false">
         <Name>Contents</Name>
         <Layout>
            <Position>Window</Position>
            <Width  MIN="50">0</Width>
            <Height MIN="50">0</Height>
         </Layout>
         <StartUrl>hcp://system/panels/firstpage.htm</StartUrl>
      </Panel>
      <!--  -->

      <!-- Ops, another one, for CHM viewing -->
      <Panel PanelType="CustomControl" Trusted="false">
         <Name>HHWindow</Name>
         <Layout>
            <Position>Window</Position>
            <Width  MIN="50">0</Width>
            <Height MIN="50">0</Height>
         </Layout>
         <StartUrl>{FC7D9E06-3F9E-11d3-93C0-00C04F72DAF7}</StartUrl>
      </Panel>
      <!--  -->

      <!--  -->

   </Panels>

   <!-- places describes which panels are initially made visible -->
   <Places>
      <Place>
         <Name>FullWindow</Name>
            <PlacePanel DefaultFocusPanel="true"                              > <Name>NavBar  </Name> </PlacePanel>
            <PlacePanel                          PersistVisibility="donttouch"> <Name>Contents</Name> </PlacePanel>
            <PlacePanel StartVisible="false"     PersistVisibility="donttouch"> <Name>HHWindow</Name> </PlacePanel>
      </Place>

      <Place>
         <Name>Normal</Name>
            <PlacePanel DefaultFocusPanel="true"                           	  > <Name>NavBar    </Name> </PlacePanel>
            <PlacePanel                                                    	  > <Name>Context   </Name> </PlacePanel>
            <PlacePanel                                                    	  > <Name>MiniNavBar</Name> </PlacePanel>
            <PlacePanel                          PersistVisibility="donttouch"> <Name>Contents	 </Name> </PlacePanel>
            <PlacePanel StartVisible="false"     PersistVisibility="donttouch"> <Name>HHWindow	 </Name> </PlacePanel>
      </Place>

      <Place>
         <Name>ContentOnly</Name>
            <PlacePanel                                                       > <Name>MiniNavBar</Name> </PlacePanel>
            <PlacePanel DefaultFocusPanel="true" PersistVisibility="donttouch"> <Name>Contents  </Name> </PlacePanel>
            <PlacePanel StartVisible="false"     PersistVisibility="donttouch"> <Name>HHWindow  </Name> </PlacePanel>
      </Place>

      <Place>
         <Name>KioskMode</Name>
            <PlacePanel DefaultFocusPanel="true" PersistVisibility="donttouch"> <Name>Contents</Name> </PlacePanel>
            <PlacePanel StartVisible="false"     PersistVisibility="donttouch"> <Name>HHWindow</Name> </PlacePanel>
      </Place>

   </Places>
</Mars_App>
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\pchealth\helpctr\content\html_unittests\toolbar.xml ===
<?xml version="1.0" encoding="UTF-8"?>
<TOOLBAR HEIGHT="30" ICONSIZE="24" AUTOSIZE="false">
	<BUTTON ID="BACK" ACCESSKEY="" ENABLED="false" VISIBLE="true" TYPE="BACK">
		<IMAGE_NORMAL>#BACK</IMAGE_NORMAL>
		<IMAGE_HOT>#BACK</IMAGE_HOT>
		<TEXT>Back</TEXT>
		<TOOLTIP>Go back to the previous page</TOOLTIP>
	</BUTTON>
	<BUTTON ID="FORWARD" ACCESSKEY="" ENABLED="false" VISIBLE="true" TYPE="FORWARD">
		<IMAGE_NORMAL>#FORWARD</IMAGE_NORMAL>
		<IMAGE_HOT>#FORWARD</IMAGE_HOT>
		<TOOLTIP>After you move back, move forward one page</TOOLTIP>
	</BUTTON>
	<BUTTON ID="HOME" ACCESSKEY="H" ENABLED="true" VISIBLE="true" TYPE="GENERIC">
		<IMAGE_NORMAL>#HOME</IMAGE_NORMAL>
		<IMAGE_HOT>#HOME</IMAGE_HOT>
		<TOOLTIP>Go to the Help and Support home page</TOOLTIP>
	</BUTTON>
	<BUTTON ID="SEP1" VISIBLE="true" TYPE="SEPARATOR"/>
	<BUTTON ID="INDEX" ACCESSKEY="I" ENABLED="true" VISIBLE="true" TYPE="GENERIC">
		<IMAGE_NORMAL>#INDEX</IMAGE_NORMAL>
		<IMAGE_HOT>#INDEX</IMAGE_HOT>
		<TOOLTIP>Browse for Help topics in the Index</TOOLTIP>
	</BUTTON>
	<BUTTON ID="FAVORITES" ENABLED="true" VISIBLE="true" TYPE="GENERIC">
		<IMAGE_NORMAL>#FAVORITES</IMAGE_NORMAL>
		<IMAGE_HOT>#FAVORITES</IMAGE_HOT>
		<TOOLTIP>Quickly view Help pages that you've saved</TOOLTIP>
	</BUTTON>
	<BUTTON ID="HISTORY" ENABLED="true" VISIBLE="true" TYPE="GENERIC">
		<IMAGE_NORMAL>#HISTORY</IMAGE_NORMAL>
		<IMAGE_HOT>#HISTORY</IMAGE_HOT>
		<TOOLTIP>View pages that you've read during this Help session</TOOLTIP>
	</BUTTON>
	<BUTTON ID="SEP2" VISIBLE="true" TYPE="SEPARATOR"/>
	<BUTTON ID="OPTIONS" ENABLED="true" VISIBLE="true" TYPE="GENERIC">
		<IMAGE_NORMAL>#OPTIONS</IMAGE_NORMAL>
		<IMAGE_HOT>#OPTIONS</IMAGE_HOT>
		<TEXT>Options</TEXT>
		<TOOLTIP>Change Help options, such as installing other Whistler Help</TOOLTIP>
	</BUTTON>
	<BUTTON ID="SUPPORT" ENABLED="true" VISIBLE="true" TYPE="GENERIC">
		<IMAGE_NORMAL>#SUPPORT</IMAGE_NORMAL>
		<IMAGE_HOT>#SUPPORT</IMAGE_HOT>
		<TEXT>Support</TEXT>
		<TOOLTIP>Get help online with Remote Assistance or contact a support professional</TOOLTIP>
	</BUTTON>
	<BUTTON ID="Test" ENABLED="true" VISIBLE="true" TYPE="GENERIC">
		<IMAGE_NORMAL>tb_ext_def_24.bmp</IMAGE_NORMAL>
		<IMAGE_HOT>tb_ext_hot_24.bmp</IMAGE_HOT>
		<TEXT>test</TEXT>
	</BUTTON>
</TOOLBAR>
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\pchealth\helpctr\content\systempages\dfs\viewmode.xml ===
<?xml version="1.0" encoding="UTF-8"?>
<HelpSession>
	<ApplyTo>
		<WindowSettings Noresize="true">
			<Left>center</Left>
			<Top>center</Top>
			<Width>600</Width>
			<Height>490</Height>
			<Layout>kiosk</Layout> 
		</WindowSettings>
	</ApplyTo>
</HelpSession>
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\pchealth\helpctr\content\systempages\panels\navbar.xml ===
<?xml version="1.0" encoding="UTF-8"?>
<TOOLBAR ICONSIZE="24">
	<BUTTON ID="BACK" ENABLED="false" VISIBLE="true" TYPE="BACK" SYSTEMMENU="true">
		<IMAGE_NORMAL>#BACK</IMAGE_NORMAL>
		<IMAGE_HOT>#BACK</IMAGE_HOT>
		<TEXT>Back</TEXT>
		<TOOLTIP>Go back to the previous page.</TOOLTIP>
	</BUTTON>
	<BUTTON ID="FORWARD" ENABLED="false" VISIBLE="true" TYPE="FORWARD" HIDETEXT="true" SYSTEMMENU="true">
		<IMAGE_NORMAL>#FORWARD</IMAGE_NORMAL>
		<IMAGE_HOT>#FORWARD</IMAGE_HOT>
		<TEXT>Forward</TEXT>
		<TOOLTIP>After you move back, move forward one page.</TOOLTIP>
	</BUTTON>
	<BUTTON ID="HOME" ACCESSKEY="H" ENABLED="true" VISIBLE="true" TYPE="GENERIC" HIDETEXT="true" SYSTEMMENU="true">
		<IMAGE_NORMAL>#HOME</IMAGE_NORMAL>
		<IMAGE_HOT>#HOME</IMAGE_HOT>
		<TEXT>&amp;Home</TEXT>
		<TOOLTIP>Go to the Help and Support home page.</TOOLTIP>
	</BUTTON>
	<BUTTON ID="SEP1" VISIBLE="true" TYPE="SEPARATOR" SYSTEMMENU="true" />
	<BUTTON ID="INDEX" ACCESSKEY="N" ENABLED="true" VISIBLE="true" TYPE="GENERIC" SYSTEMMENU="true">
		<IMAGE_NORMAL>#INDEX</IMAGE_NORMAL>
		<IMAGE_HOT>#INDEX</IMAGE_HOT>
		<TEXT>I&amp;ndex</TEXT>
		<TOOLTIP>Browse for Help topics in the Index.</TOOLTIP>
	</BUTTON>
	<BUTTON ID="FAVORITES" ACCESSKEY="A" ENABLED="true" VISIBLE="true" TYPE="GENERIC" SYSTEMMENU="true">
		<IMAGE_NORMAL>#FAVORITES</IMAGE_NORMAL>
		<IMAGE_HOT>#FAVORITES</IMAGE_HOT>
		<TEXT>F&amp;avorites</TEXT>
		<TOOLTIP>Quickly view Help pages that you've saved.</TOOLTIP>
	</BUTTON>
	<BUTTON ID="HISTORY" ACCESSKEY="Y" ENABLED="true" VISIBLE="true" TYPE="GENERIC" SYSTEMMENU="true">
		<IMAGE_NORMAL>#HISTORY</IMAGE_NORMAL>
		<IMAGE_HOT>#HISTORY</IMAGE_HOT>
		<TEXT>Histor&amp;y</TEXT>
		<TOOLTIP>View pages that you've read during this Help session.</TOOLTIP>
	</BUTTON>
	<BUTTON ID="SEP2" VISIBLE="true" TYPE="SEPARATOR" SYSTEMMENU="true"/>
	<BUTTON ID="SUPPORT" ACCESSKEY="U" ENABLED="true" VISIBLE="true" TYPE="GENERIC" SYSTEMMENU="true">
		<IMAGE_NORMAL>#SUPPORT</IMAGE_NORMAL>
		<IMAGE_HOT>#SUPPORT</IMAGE_HOT>
		<TEXT>S&amp;upport</TEXT>
		<TOOLTIP>Get help online with Remote Assistance or contact a support professional.</TOOLTIP>
	</BUTTON>
	<BUTTON ID="OPTIONS" ACCESSKEY="O" ENABLED="true" VISIBLE="true" TYPE="GENERIC" SYSTEMMENU="true">
		<IMAGE_NORMAL>#OPTIONS</IMAGE_NORMAL>
		<IMAGE_HOT>#OPTIONS</IMAGE_HOT>
		<TEXT>&amp;Options</TEXT>
		<TOOLTIP>Pick from different options to customize your Help and Support Center experience.</TOOLTIP>
	</BUTTON>
</TOOLBAR>
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\pchealth\helpctr\content\systempages\panels\mininavbar.xml ===
<?xml version="1.0" encoding="UTF-8"?>
<TOOLBAR ICONSIZE="24">
	<BUTTON ID="BACK" ENABLED="false" VISIBLE="false" TYPE="BACK">
		<IMAGE_NORMAL>#BACK</IMAGE_NORMAL>
		<IMAGE_HOT>#BACK</IMAGE_HOT>
		<TEXT>Back</TEXT>
		<TOOLTIP>Go back to the previous page.</TOOLTIP>
	</BUTTON>
	<BUTTON ID="FORWARD" ENABLED="false" VISIBLE="false" TYPE="FORWARD" HIDETEXT="true">
		<IMAGE_NORMAL>#FORWARD</IMAGE_NORMAL>
		<IMAGE_HOT>#FORWARD</IMAGE_HOT>
		<TEXT>Forward</TEXT>
		<TOOLTIP>After you move back, move forward one page.</TOOLTIP>
	</BUTTON>
	<BUTTON ID="SEP1" VISIBLE="false" TYPE="SEPARATOR"/>

	<BUTTON ID="ADDFAVORITE" ACCESSKEY="f" ENABLED="false" VISIBLE="true" TYPE="GENERIC">
		<IMAGE_NORMAL>#ADDFAV</IMAGE_NORMAL>
		<IMAGE_HOT>#ADDFAV</IMAGE_HOT>
		<TEXT>Add to &amp;Favorites</TEXT>
		<TOOLTIP>Adds this page to your Help favorites.</TOOLTIP>
	</BUTTON>

	<BUTTON ID="LAYOUT_SMALL" ACCESSKEY="V" ENABLED="true" VISIBLE="true" TYPE="GENERIC">
		<IMAGE_NORMAL>#LAYOUT_SMALL</IMAGE_NORMAL>
		<IMAGE_HOT>#LAYOUT_SMALL</IMAGE_HOT>
		<TEXT>Change &amp;View</TEXT>
		<TOOLTIP>Displays only the content below.</TOOLTIP>
	</BUTTON>
	<BUTTON ID="LAYOUT_LARGE" ACCESSKEY="V" ENABLED="true" VISIBLE="false" TYPE="GENERIC">
		<IMAGE_NORMAL>#LAYOUT_LARGE</IMAGE_NORMAL>
		<IMAGE_HOT>#LAYOUT_LARGE</IMAGE_HOT>
		<TEXT>Change &amp;View</TEXT>
		<TOOLTIP>Displays the full Help and Support window.</TOOLTIP>
	</BUTTON>

	<BUTTON ID="PRINT" ACCESSKEY="P" ENABLED="true" VISIBLE="true" TYPE="GENERIC">
		<IMAGE_NORMAL>#PRINT</IMAGE_NORMAL>
		<IMAGE_HOT>#PRINT</IMAGE_HOT>
		<TEXT>&amp;Print...</TEXT>
		<TOOLTIP>Prints the content you see below.</TOOLTIP>
	</BUTTON>

	<BUTTON ID="LOCATE" ACCESSKEY="C" ENABLED="true" VISIBLE="true" TYPE="GENERIC">
		<IMAGE_NORMAL>#LOCATE</IMAGE_NORMAL>
		<IMAGE_HOT>#LOCATE</IMAGE_HOT>
		<TEXT>Locate in &amp;Contents</TEXT>
		<TOOLTIP>Quickly locate this topic in the table of contents.</TOOLTIP>
	</BUTTON>
</TOOLBAR>
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\pchealth\helpctr\content\windowsnewsgroups\windows_newsgroups.xml ===
<?xml version="1.0"?>
<!-- edited with XML Spy v3.5 NT (http://www.xmlspy.com) by Davide Massarenti (private) -->
<SAFConfig>
	<LocalizationComment>ProductName and ProductDescription should be localized</LocalizationComment>
	<EntryURL>app:http://go.microsoft.com/fwlink/?LinkId=832</EntryURL>
	<ProductID>Windows_Newsgroups</ProductID>
	<ProductName>Visit the Windows Server Community</ProductName>
	<ProductDescription>Connects you to the Microsoft Communities Web site, where you can communicate with your peers about server issues.</ProductDescription>
	<CompanyName>Microsoft Corporation</CompanyName>
	<VendorIcon/>
</SAFConfig>
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\pchealth\helpctr\content\windowsnewsgroups\package_description.xml ===
< ? x m l   v e r s i o n = " 1 . 0 "   e n c o d i n g = " U T F - 1 6 " ? > 
 
 < H E L P C E N T E R P A C K A G E > 
 
 < V E R S I O N   V A L U E = " 1 . 0 . 0 . 0 "   / > 
 
 < L A N G U A G E   V A L U E = " A L L "   / > 
 
 < S K U   V A L U E = " S E R V E R "   / > 
 
 < P R O D U C T   I D = " M S _ N e w s g r o u p s "   / > 
 
 < C O N F I G > 
 
       < S A F   A C T I O N = " A D D "   F I L E = " w i n d o w s _ n e w s g r o u p s . x m l " / > 
 
 < / C O N F I G > 
 
 < / H E L P C E N T E R P A C K A G E > 
 
 
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\pchealth\helpctr\content\xml_schema\hss_style.xml ===
<?xml version="1.0" encoding="UTF-8"?>
<STYLESHEET>
	<THEME NAME="Luna">
		<CLASS NAME=".sys-font-body" TYPE="FONT">
			<!--used throughout the hsc, primary font that all information uses-->
			<FAMILY>messagebox</FAMILY>
			<SIZE/>
			<STYLE/>
			<WEIGHT/>
		</CLASS>
		<CLASS NAME=".sys-font-body-bold" TYPE="FONT">
			<!--bold variant of the body text font-->
			<FAMILY>messagebox</FAMILY>
			<SIZE/>
			<STYLE/>
			<WEIGHT>bold</WEIGHT>
		</CLASS>
		<CLASS NAME=".sys-font-heading1" TYPE="FONT">
			<!--used for the HSC logo in the header, largest font in HSC-->
			<FAMILY>Franklin Gothic Medium</FAMILY>
			<SIZE>18pt</SIZE>
			<STYLE/>
			<WEIGHT>normal</WEIGHT>
		</CLASS>
		<CLASS NAME=".sys-font-heading2" TYPE="FONT">
			<!--used on splash pages and the homepage-->
			<FAMILY>Franklin Gothic Medium</FAMILY>
			<SIZE>18pt</SIZE>
			<STYLE/>
			<WEIGHT>normal</WEIGHT>
		</CLASS>
		<CLASS NAME=".sys-font-heading3" TYPE="FONT">
			<!--used on subsite and centers content pages and search label in header-->
			<FAMILY>Franklin Gothic Medium</FAMILY>
			<SIZE>14pt</SIZE>
			<STYLE/>
			<WEIGHT>normal</WEIGHT>
		</CLASS>
		<CLASS NAME=".sys-font-heading4" TYPE="FONT">
			<!--used on splash pages as smaller message text-->
			<FAMILY>Verdana</FAMILY>
			<SIZE>10pt</SIZE>
			<STYLE/>
			<WEIGHT>normal</WEIGHT>
		</CLASS>
		<CLASS NAME=".sys-bottompane-header-color" TYPE="COLOR">
			<!--text color in bottom nav pane-->
			<VALUE>#215DC6</VALUE>
			<VALUE_100/>
			<PERCENT>0</PERCENT>
		</CLASS>
		<CLASS NAME=".sys-color-body" TYPE="COLOR">
			<!--color of normal text (usually black)-->
			<VALUE>#000000</VALUE>
			<VALUE_100/>
			<PERCENT>0</PERCENT>
		</CLASS>
		<CLASS NAME=".sys-color-body-alert" TYPE="COLOR">
			<!--used when the body text color needs to indicate an alert (usually red)-->
			<VALUE>#FF0000</VALUE>
			<VALUE_100/>
			<PERCENT>0</PERCENT>
		</CLASS>
		<CLASS NAME=".sys-color-body-helpee" TYPE="COLOR">
			<!--color of normal text (usually dark grey)-->
			<VALUE>#848E94</VALUE>
			<VALUE_100/>
			<PERCENT>0</PERCENT>
		</CLASS>
		<CLASS NAME=".sys-color-body-helper" TYPE="COLOR">
			<!--color of normal text (usually dark blue)-->
			<VALUE>#0309C0</VALUE>
			<VALUE_100/>
			<PERCENT>0</PERCENT>
		</CLASS>
		<CLASS NAME=".sys-color-body-ok" TYPE="COLOR">
			<!--used when the body text color needs to indicate status ok (usually green)-->
			<VALUE>#009900</VALUE>
			<VALUE_100/>
			<PERCENT>0</PERCENT>
		</CLASS>
		<CLASS NAME=".sys-color-body-sec" TYPE="COLOR">
			<!--used for text that is gray or demoted, such as secondary descriptive text-->
			<VALUE>#808080</VALUE>
			<VALUE_100/>
			<PERCENT>0</PERCENT>
		</CLASS>
		<CLASS NAME=".sys-header-color" TYPE="COLOR">
			<!--used for any text that is not a link and is meant to be demoted-->
			<VALUE>#D6DFF5</VALUE>
			<VALUE_100/>
			<PERCENT>0</PERCENT>
		</CLASS>
		<CLASS NAME=".sys-header-color-logo" TYPE="COLOR">
			<!--used for the 'Help and Support Center' logo in the header-->
			<VALUE>#FFFFFF</VALUE>
			<VALUE_100/>
			<PERCENT>0</PERCENT>
		</CLASS>
		<CLASS NAME=".sys-homepage-color" TYPE="COLOR">
			<!--used for any non-hyperlink text on the homepage-->
			<VALUE>#D6DFF5</VALUE>
			<VALUE_100/>
			<PERCENT>0</PERCENT>
		</CLASS>
		<CLASS NAME=".sys-lhp-color" TYPE="COLOR">
			<!--any text that is in the lhp, not included in the task panes-->
			<VALUE>#FFFFFF</VALUE>
			<VALUE_100/>
			<PERCENT>0</PERCENT>
		</CLASS>
		<CLASS NAME=".sys-rhp-color-title" TYPE="COLOR">
			<!--color used for titles in the content pages in the RHP-->
			<VALUE>#5A7EDC</VALUE>
			<VALUE_100/>
			<PERCENT>0</PERCENT>
		</CLASS>
		<CLASS NAME=".sys-rhp-splash-color" TYPE="COLOR">
			<!--color of smaller message text on subsite and center splash pages-->
			<VALUE>#FFFFFF</VALUE>
			<VALUE_100/>
			<PERCENT>0</PERCENT>
		</CLASS>
		<CLASS NAME=".sys-rhp-splash-color-title" TYPE="COLOR">
			<!--color of text on subsite and center splash pages-->
			<VALUE>#FFFFFF</VALUE>
			<VALUE_100/>
			<PERCENT>0</PERCENT>
		</CLASS>
		<CLASS NAME=".sys-toppane-header-color" TYPE="COLOR">
			<!--text color in top nav pane-->
			<VALUE>#FFFFFF</VALUE>
			<VALUE_100/>
			<PERCENT>0</PERCENT>
		</CLASS>
		<CLASS NAME=".sys-bottompane-bgcolor" TYPE="BGCOLOR">
			<!--primary fill color-->
			<VALUE>#EDF2FC</VALUE>
			<VALUE_100/>
			<PERCENT>0</PERCENT>
		</CLASS>
		<CLASS NAME=".sys-header-bgcolor" TYPE="BGCOLOR">
			<!--used to flat fill the header area with a solid color-->
			<VALUE>#003399</VALUE>
			<VALUE_100/>
			<PERCENT>0</PERCENT>
		</CLASS>
		<CLASS NAME=".sys-homepage-bgcolor" TYPE="BGCOLOR">
			<!--color fill on the homepage background-->
			<VALUE>#6375D6</VALUE>
			<VALUE_100/>
			<PERCENT>0</PERCENT>
		</CLASS>
		<CLASS NAME=".sys-inlineform-bgcolor1" TYPE="BGCOLOR">
			<!--alert or modal dialogs in the rhp-->
			<VALUE>#FFF7E7</VALUE>
			<VALUE_100/>
			<PERCENT>0</PERCENT>
		</CLASS>
		<CLASS NAME=".sys-inlineform-bgcolor2" TYPE="BGCOLOR">
			<!--forms or neutral tone dialogs in the rhp-->
			<VALUE>#D6DFF5</VALUE>
			<VALUE_100/>
			<PERCENT>0</PERCENT>
		</CLASS>
		<CLASS NAME=".sys-inlineform-bgcolor3" TYPE="BGCOLOR">
			<!--table header for status in the rhp-->
			<VALUE>#1051BD</VALUE>
			<VALUE_100/>
			<PERCENT>0</PERCENT>
		</CLASS>
		<CLASS NAME=".sys-lhp-bgcolor-scope" TYPE="BGCOLOR">
			<!--color used in the search scope area, just above the navigation panes-->
			<VALUE>#8CAAE6</VALUE>
			<VALUE_100/>
			<PERCENT>0</PERCENT>
		</CLASS>
		<CLASS NAME=".sys-rhp-bgcolor" TYPE="BGCOLOR">
			<!--color used to fill the background of the content pages in the RHP (normally white)-->
			<VALUE>#FFFFFF</VALUE>
			<VALUE_100/>
			<PERCENT>0</PERCENT>
		</CLASS>
		<CLASS NAME=".sys-rhp-splash-bgcolor" TYPE="BGCOLOR">
			<!--color of background of the splash pages in the RHP-->
			<VALUE>#6487DC</VALUE>
			<VALUE_100/>
			<PERCENT>0</PERCENT>
		</CLASS>
		<CLASS NAME=".sys-table-cell-bgcolor1" TYPE="BGCOLOR">
			<!--alternating color 1 for table rows-->
			<VALUE>#FFFFFF</VALUE>
			<VALUE_100/>
			<PERCENT>0</PERCENT>
		</CLASS>
		<CLASS NAME=".sys-table-cell-bgcolor2" TYPE="BGCOLOR">
			<!--alternating color 2 for table rows-->
			<VALUE>#D6DFF5</VALUE>
			<VALUE_100/>
			<PERCENT>0</PERCENT>
		</CLASS>
		<CLASS NAME=".sys-table-cell-bgcolor3" TYPE="BGCOLOR">
			<!--color for vertical cells in tables and Remote Assistance-->
			<VALUE>#C6D3F7</VALUE>
			<VALUE_100/>
			<PERCENT>0</PERCENT>
		</CLASS>
		<CLASS NAME=".sys-table-cell-bgcolor4" TYPE="BGCOLOR">
			<!--color for empty helper screen in Remote Assistance-->
			<VALUE>#EFF3FF</VALUE>
			<VALUE_100/>
			<PERCENT>0</PERCENT>
		</CLASS>
		<CLASS NAME=".sys-table-header-bgcolor1" TYPE="BGCOLOR">
			<!--primary header color for tables of data-->
			<VALUE>#6681D9</VALUE>
			<VALUE_100/>
			<PERCENT>0</PERCENT>
		</CLASS>
		<CLASS NAME=".sys-table-header-bgcolor2" TYPE="BGCOLOR">
			<!--secondary header color for tables of data, column header color-->
			<VALUE>#6681D9</VALUE>
			<VALUE_100/>
			<PERCENT>0</PERCENT>
		</CLASS>
		<CLASS NAME=".sys-toppane-bgcolor" TYPE="BGCOLOR">
			<!--primary fill color-->
			<VALUE>#EDF2FC</VALUE>
			<VALUE_100/>
			<PERCENT>0</PERCENT>
		</CLASS>
		<CLASS NAME=".sys-toppane-selection" TYPE="BGCOLOR">
			<!--color for selected nodes in the pane-->
			<VALUE>#C7D8FA</VALUE>
			<VALUE_100/>
			<PERCENT>0</PERCENT>
		</CLASS>
		<CLASS NAME=".sys-bottompane-color-border" TYPE="BORDER">
			<!--outline color-->
			<VALUE>#FFFFFF</VALUE>
			<VALUE_100/>
			<PERCENT>0</PERCENT>
		</CLASS>
		<CLASS NAME=".sys-table-color-border" TYPE="BORDER">
			<!--color for all table cell outlines-->
			<VALUE>#6681D9</VALUE>
			<VALUE_100/>
			<PERCENT>0</PERCENT>
		</CLASS>
		<CLASS NAME=".sys-toppane-color-border" TYPE="BORDER">
			<!--outline color-->
			<VALUE>#5582D2</VALUE>
			<VALUE_100/>
			<PERCENT>0</PERCENT>
		</CLASS>
		<CLASS NAME=".sys-bottompane-header-bgcolor" TYPE="GRADIENT">
			<!--left to right gradient colors in the header-->
			<COLOR_START>
				<VALUE>#FFFFFF</VALUE>
				<VALUE_100/>
				<PERCENT>0</PERCENT>
			</COLOR_START>
			<COLOR_END>
				<VALUE>#C5D2F0</VALUE>
				<VALUE_100/>
				<PERCENT>0</PERCENT>
			</COLOR_END>
			<HORIZONTAL>TRUE</HORIZONTAL>
			<RETURNTOZERO>FALSE</RETURNTOZERO>
		</CLASS>
		<CLASS NAME=".sys-header-gradient-H" TYPE="GRADIENT">
			<!--used to separate tool bar from content area-->
			<COLOR_START>
				<VALUE>#2E52AF</VALUE>
				<VALUE_100/>
				<PERCENT>0</PERCENT>
			</COLOR_START>
			<COLOR_END>
				<VALUE>#D8EAF3</VALUE>
				<VALUE_100/>
				<PERCENT>0</PERCENT>
			</COLOR_END>
			<HORIZONTAL>TRUE</HORIZONTAL>
			<RETURNTOZERO>TRUE</RETURNTOZERO>
		</CLASS>
		<CLASS NAME=".sys-header-gradient-V" TYPE="GRADIENT">
			<!--used to separate left pane from right pane-->
			<COLOR_START>
				<VALUE>#8CAAE6</VALUE>
				<VALUE_100/>
				<PERCENT>0</PERCENT>
			</COLOR_START>
			<COLOR_END>
				<VALUE>#C8DEFF</VALUE>
				<VALUE_100/>
				<PERCENT>0</PERCENT>
			</COLOR_END>
			<HORIZONTAL>FALSE</HORIZONTAL>
			<RETURNTOZERO>TRUE</RETURNTOZERO>
		</CLASS>
		<CLASS NAME=".sys-background-strong" TYPE="GRADIENT">
			<!--strong background, doesn't get wiped out by High-Contrast-->
			<COLOR_START>
				<VALUE>#8CAAE6</VALUE>
				<VALUE_100/>
				<PERCENT>0</PERCENT>
			</COLOR_START>
			<COLOR_END>
				<VALUE>#8CAAE6</VALUE>
				<VALUE_100/>
				<PERCENT>0</PERCENT>
			</COLOR_END>
			<HORIZONTAL>TRUE</HORIZONTAL>
			<RETURNTOZERO>FALSE</RETURNTOZERO>
		</CLASS>
		<CLASS NAME=".sys-lhp-bgcolor" TYPE="GRADIENT">
			<!--top to bottom gradient colors in the left hand pane background-->
			<COLOR_START>
				<VALUE>#8CAAE6</VALUE>
				<VALUE_100/>
				<PERCENT>0</PERCENT>
			</COLOR_START>
			<COLOR_END>
				<VALUE>#6487DC</VALUE>
				<VALUE_100/>
				<PERCENT>0</PERCENT>
			</COLOR_END>
			<HORIZONTAL>FALSE</HORIZONTAL>
			<RETURNTOZERO>FALSE</RETURNTOZERO>
		</CLASS>
		<CLASS NAME=".sys-RA-gradient-H" TYPE="GRADIENT">
			<COLOR_START>
				<VALUE>#A4B9EA</VALUE>
				<VALUE_100/>
				<PERCENT>0</PERCENT>
			</COLOR_START>
			<COLOR_END>
				<VALUE>#7396DF</VALUE>
				<VALUE_100/>
				<PERCENT>0</PERCENT>
			</COLOR_END>
			<HORIZONTAL>TRUE</HORIZONTAL>
			<RETURNTOZERO>FALSE</RETURNTOZERO>
		</CLASS>
		<CLASS NAME=".sys-RA-gradient-V" TYPE="GRADIENT">
			<COLOR_START>
				<VALUE>#7396DF</VALUE>
				<VALUE_100/>
				<PERCENT>0</PERCENT>
			</COLOR_START>
			<COLOR_END>
				<VALUE>#A4B9EA</VALUE>
				<VALUE_100/>
				<PERCENT>0</PERCENT>
			</COLOR_END>
			<HORIZONTAL>FALSE</HORIZONTAL>
			<RETURNTOZERO>TRUE</RETURNTOZERO>
		</CLASS>
		<CLASS NAME=".sys-table-cell-bgcolor5" TYPE="GRADIENT">
			<!--color for content panes in Remote Assistance (will be removed if no gradient)-->
			<COLOR_START>
				<VALUE>#C5D2F0</VALUE>
				<VALUE_100/>
				<PERCENT>0</PERCENT>
			</COLOR_START>
			<COLOR_END>
				<VALUE>#FFFFFF</VALUE>
				<VALUE_100/>
				<PERCENT>0</PERCENT>
			</COLOR_END>
			<HORIZONTAL>TRUE</HORIZONTAL>
			<RETURNTOZERO>FALSE</RETURNTOZERO>
		</CLASS>
		<CLASS NAME=".sys-toppane-header-bgcolor" TYPE="GRADIENT">
			<!--left to right gradient colors in the header-->
			<COLOR_START>
				<VALUE>#0148B2</VALUE>
				<VALUE_100/>
				<PERCENT>0</PERCENT>
			</COLOR_START>
			<COLOR_END>
				<VALUE>#285BC5</VALUE>
				<VALUE_100/>
				<PERCENT>0</PERCENT>
			</COLOR_END>
			<HORIZONTAL>TRUE</HORIZONTAL>
			<RETURNTOZERO>FALSE</RETURNTOZERO>
		</CLASS>
		<CLASS NAME=".sys-link-header" TYPE="HYPERLINK">
			<!--the 'set search options' link in the header-->
			<NORMAL>
				<VALUE>#FFFFFF</VALUE>
				<VALUE_100/>
				<PERCENT>0</PERCENT>
			</NORMAL>
			<HOVER>
				<VALUE>#FFFFFF</VALUE>
				<VALUE_100/>
				<PERCENT>0</PERCENT>
			</HOVER>
			<ACTIVE>
				<VALUE/>
				<VALUE_100/>
				<PERCENT>0</PERCENT>
			</ACTIVE>
			<UNDERLINEALWAYS>FALSE</UNDERLINEALWAYS>
		</CLASS>
		<CLASS NAME=".sys-link-homepage" TYPE="HYPERLINK">
			<!--hyperlinks on the homepage, where the background is not white (Luna=blue)-->
			<NORMAL>
				<VALUE>#FFFFFF</VALUE>
				<VALUE_100/>
				<PERCENT>0</PERCENT>
			</NORMAL>
			<HOVER>
				<VALUE>#FFFFFF</VALUE>
				<VALUE_100/>
				<PERCENT>0</PERCENT>
			</HOVER>
			<ACTIVE>
				<VALUE>black</VALUE>
				<VALUE_100/>
				<PERCENT>0</PERCENT>
			</ACTIVE>
			<UNDERLINEALWAYS>FALSE</UNDERLINEALWAYS>
		</CLASS>
		<CLASS NAME=".sys-link-normal" TYPE="HYPERLINK">
			<!--links in RHP, normal blue hyperlinks used throughout hsc-->
			<NORMAL>
				<VALUE>#3333FF</VALUE>
				<VALUE_100/>
				<PERCENT>0</PERCENT>
			</NORMAL>
			<HOVER>
				<VALUE>#6666FF</VALUE>
				<VALUE_100/>
				<PERCENT>0</PERCENT>
			</HOVER>
			<ACTIVE>
				<VALUE/>
				<VALUE_100/>
				<PERCENT>0</PERCENT>
			</ACTIVE>
			<UNDERLINEALWAYS>FALSE</UNDERLINEALWAYS>
		</CLASS>
		<CLASS NAME=".sys-link-splash" TYPE="HYPERLINK">
			<!--links in splash pages-->
			<NORMAL>
				<VALUE>#FFFFFF</VALUE>
				<VALUE_100/>
				<PERCENT>0</PERCENT>
			</NORMAL>
			<HOVER>
				<VALUE>#FFFFFF</VALUE>
				<VALUE_100/>
				<PERCENT>0</PERCENT>
			</HOVER>
			<ACTIVE>
				<VALUE>black</VALUE>
				<VALUE_100/>
				<PERCENT>0</PERCENT>
			</ACTIVE>
			<UNDERLINEALWAYS>TRUE</UNDERLINEALWAYS>
		</CLASS>
	</THEME>
	<THEME NAME="Classic">
		<CLASS NAME=".sys-font-body" TYPE="FONT">
			<!--used throughout the hsc, primary font that all information uses-->
			<FAMILY>messagebox</FAMILY>
			<SIZE/>
			<STYLE/>
			<WEIGHT/>
		</CLASS>
		<CLASS NAME=".sys-font-body-bold" TYPE="FONT">
			<!--bold variant of the body text font-->
			<FAMILY>messagebox</FAMILY>
			<SIZE/>
			<STYLE/>
			<WEIGHT>bold</WEIGHT>
		</CLASS>
		<CLASS NAME=".sys-font-heading1" TYPE="FONT">
			<!--used for the HSC logo in the header, largest font in HSC-->
			<FAMILY>Franklin Gothic Medium</FAMILY>
			<SIZE>18pt</SIZE>
			<STYLE/>
			<WEIGHT>normal</WEIGHT>
		</CLASS>
		<CLASS NAME=".sys-font-heading2" TYPE="FONT">
			<!--used on splash pages and the homepage-->
			<FAMILY>Franklin Gothic Medium</FAMILY>
			<SIZE>18pt</SIZE>
			<STYLE/>
			<WEIGHT>normal</WEIGHT>
		</CLASS>
		<CLASS NAME=".sys-font-heading3" TYPE="FONT">
			<!--used on subsite and centers content pages and search label in header-->
			<FAMILY>Franklin Gothic Medium</FAMILY>
			<SIZE>14pt</SIZE>
			<STYLE/>
			<WEIGHT>normal</WEIGHT>
		</CLASS>
		<CLASS NAME=".sys-font-heading4" TYPE="FONT">
			<!--used on splash pages as smaller message text-->
			<FAMILY>Verdana</FAMILY>
			<SIZE>10pt</SIZE>
			<STYLE/>
			<WEIGHT>normal</WEIGHT>
		</CLASS>
		<CLASS NAME=".sys-bottompane-header-color" TYPE="COLOR">
			<!--text color in bottom nav pane-->
			<VALUE>windowtext</VALUE>
			<VALUE_100/>
			<PERCENT>0</PERCENT>
		</CLASS>
		<CLASS NAME=".sys-color-body" TYPE="COLOR">
			<!--color of normal text (usually black)-->
			<VALUE>windowtext</VALUE>
			<VALUE_100/>
			<PERCENT>0</PERCENT>
		</CLASS>
		<CLASS NAME=".sys-color-body-alert" TYPE="COLOR">
			<!--used when the body text color needs to indicate an alert (usually red)-->
			<VALUE>#FF0000</VALUE>
			<VALUE_100/>
			<PERCENT>0</PERCENT>
		</CLASS>
		<CLASS NAME=".sys-color-body-helpee" TYPE="COLOR">
			<!--color of normal text (usually dark grey)-->
			<VALUE>windowtext</VALUE>
			<VALUE_100>highlight</VALUE_100>
			<PERCENT>25</PERCENT>
		</CLASS>
		<CLASS NAME=".sys-color-body-helper" TYPE="COLOR">
			<!--color of normal text (usually dark blue)-->
			<VALUE>windowtext</VALUE>
			<VALUE_100/>
			<PERCENT>0</PERCENT>
		</CLASS>
		<CLASS NAME=".sys-color-body-ok" TYPE="COLOR">
			<!--used when the body text color needs to indicate status ok (usually green)-->
			<VALUE>#009900</VALUE>
			<VALUE_100/>
			<PERCENT>0</PERCENT>
		</CLASS>
		<CLASS NAME=".sys-color-body-sec" TYPE="COLOR">
			<!--used for text that is gray or demoted, such as secondary descriptive text-->
			<VALUE>#808080</VALUE>
			<VALUE_100/>
			<PERCENT>0</PERCENT>
		</CLASS>
		<CLASS NAME=".sys-header-color" TYPE="COLOR">
			<!--used for any text that is not a link and is meant to be demoted-->
			<VALUE>activecaption</VALUE>
			<VALUE_100>window</VALUE_100>
			<PERCENT>50</PERCENT>
		</CLASS>
		<CLASS NAME=".sys-header-color-logo" TYPE="COLOR">
			<!--used for the 'Help and Support Center' logo in the header-->
			<VALUE>captiontext</VALUE>
			<VALUE_100/>
			<PERCENT>0</PERCENT>
		</CLASS>
		<CLASS NAME=".sys-homepage-color" TYPE="COLOR">
			<!--used for any non-hyperlink text on the homepage-->
			<VALUE>windowtext</VALUE>
			<VALUE_100/>
			<PERCENT>0</PERCENT>
		</CLASS>
		<CLASS NAME=".sys-lhp-color" TYPE="COLOR">
			<!--any text that is in the lhp, not included in the task panes-->
			<VALUE>window</VALUE>
			<VALUE_100/>
			<PERCENT>0</PERCENT>
		</CLASS>
		<CLASS NAME=".sys-rhp-color-title" TYPE="COLOR">
			<!--color used for titles in the content pages in the RHP-->
			<VALUE>activecaption</VALUE>
			<VALUE_100/>
			<PERCENT>0</PERCENT>
		</CLASS>
		<CLASS NAME=".sys-rhp-splash-color" TYPE="COLOR">
			<!--color of smaller message text on subsite and center splash pages-->
			<VALUE>windowtext</VALUE>
			<VALUE_100/>
			<PERCENT>0</PERCENT>
		</CLASS>
		<CLASS NAME=".sys-rhp-splash-color-title" TYPE="COLOR">
			<!--color of text on subsite and center splash pages-->
			<VALUE>windowtext</VALUE>
			<VALUE_100/>
			<PERCENT>0</PERCENT>
		</CLASS>
		<CLASS NAME=".sys-toppane-header-color" TYPE="COLOR">
			<!--text color in top nav pane-->
			<VALUE>captiontext</VALUE>
			<VALUE_100/>
			<PERCENT>0</PERCENT>
		</CLASS>
		<CLASS NAME=".sys-bottompane-bgcolor" TYPE="BGCOLOR">
			<!--primary fill color-->
			<VALUE>window</VALUE>
			<VALUE_100/>
			<PERCENT>0</PERCENT>
		</CLASS>
		<CLASS NAME=".sys-header-bgcolor" TYPE="BGCOLOR">
			<!--used to flat fill the header area with a solid color-->
			<VALUE>activecaption</VALUE>
			<VALUE_100/>
			<PERCENT>0</PERCENT>
		</CLASS>
		<CLASS NAME=".sys-homepage-bgcolor" TYPE="BGCOLOR">
			<!--color fill on the homepage background-->
			<VALUE>window</VALUE>
			<VALUE_100/>
			<PERCENT>0</PERCENT>
		</CLASS>
		<CLASS NAME=".sys-inlineform-bgcolor1" TYPE="BGCOLOR">
			<!--alert or modal dialogs in the rhp-->
			<VALUE>window</VALUE>
			<VALUE_100/>
			<PERCENT>0</PERCENT>
		</CLASS>
		<CLASS NAME=".sys-inlineform-bgcolor2" TYPE="BGCOLOR">
			<!--forms or neutral tone dialogs in the rhp-->
			<VALUE>buttonface</VALUE>
			<VALUE_100/>
			<PERCENT>0</PERCENT>
		</CLASS>
		<CLASS NAME=".sys-inlineform-bgcolor3" TYPE="BGCOLOR">
			<!--table header for status in the rhp-->
			<VALUE>buttonface</VALUE>
			<VALUE_100/>
			<PERCENT>0</PERCENT>
		</CLASS>
		<CLASS NAME=".sys-lhp-bgcolor-scope" TYPE="BGCOLOR">
			<!--color used in the search scope area, just above the navigation panes-->
			<VALUE>window</VALUE>
			<VALUE_100/>
			<PERCENT>0</PERCENT>
		</CLASS>
		<CLASS NAME=".sys-rhp-bgcolor" TYPE="BGCOLOR">
			<!--color used to fill the background of the content pages in the RHP (normally white)-->
			<VALUE>window</VALUE>
			<VALUE_100/>
			<PERCENT>0</PERCENT>
		</CLASS>
		<CLASS NAME=".sys-rhp-splash-bgcolor" TYPE="BGCOLOR">
			<!--color of background of the splash pages in the RHP-->
			<VALUE>window</VALUE>
			<VALUE_100/>
			<PERCENT>0</PERCENT>
		</CLASS>
		<CLASS NAME=".sys-table-cell-bgcolor1" TYPE="BGCOLOR">
			<!--alternating color 1 for table rows-->
			<VALUE>window</VALUE>
			<VALUE_100/>
			<PERCENT>0</PERCENT>
		</CLASS>
		<CLASS NAME=".sys-table-cell-bgcolor2" TYPE="BGCOLOR">
			<!--alternating color 2 for table rows-->
			<VALUE>infobackground</VALUE>
			<VALUE_100/>
			<PERCENT>0</PERCENT>
		</CLASS>
		<CLASS NAME=".sys-table-cell-bgcolor3" TYPE="BGCOLOR">
			<!--color for vertical cells in tables and Remote Assistance-->
			<VALUE>buttonface</VALUE>
			<VALUE_100/>
			<PERCENT>0</PERCENT>
		</CLASS>
		<CLASS NAME=".sys-table-cell-bgcolor4" TYPE="BGCOLOR">
			<!--color for empty helper screen in Remote Assistance-->
			<VALUE>window</VALUE>
			<VALUE_100/>
			<PERCENT>0</PERCENT>
		</CLASS>
		<CLASS NAME=".sys-table-header-bgcolor1" TYPE="BGCOLOR">
			<!--primary header color for tables of data-->
			<VALUE>activecaption</VALUE>
			<VALUE_100/>
			<PERCENT>0</PERCENT>
		</CLASS>
		<CLASS NAME=".sys-table-header-bgcolor2" TYPE="BGCOLOR">
			<!--secondary header color for tables of data, column header color-->
			<VALUE>buttonface</VALUE>
			<VALUE_100/>
			<PERCENT>0</PERCENT>
		</CLASS>
		<CLASS NAME=".sys-toppane-bgcolor" TYPE="BGCOLOR">
			<!--primary fill color-->
			<VALUE>window</VALUE>
			<VALUE_100/>
			<PERCENT>0</PERCENT>
		</CLASS>
		<CLASS NAME=".sys-toppane-selection" TYPE="BGCOLOR">
			<!--color for selected nodes in the pane-->
			<VALUE>buttonface</VALUE>
			<VALUE_100/>
			<PERCENT>0</PERCENT>
		</CLASS>
		<CLASS NAME=".sys-bottompane-color-border" TYPE="BORDER">
			<!--outline color-->
			<VALUE>buttonface</VALUE>
			<VALUE_100/>
			<PERCENT>0</PERCENT>
		</CLASS>
		<CLASS NAME=".sys-table-color-border" TYPE="BORDER">
			<!--color for all table cell outlines-->
			<VALUE>buttonface</VALUE>
			<VALUE_100/>
			<PERCENT>0</PERCENT>
		</CLASS>
		<CLASS NAME=".sys-toppane-color-border" TYPE="BORDER">
			<!--outline color-->
			<VALUE>activecaption</VALUE>
			<VALUE_100/>
			<PERCENT>0</PERCENT>
		</CLASS>
		<CLASS NAME=".sys-bottompane-header-bgcolor" TYPE="GRADIENT">
			<!--left to right gradient colors in the header-->
			<COLOR_START>
				<VALUE>buttonface</VALUE>
				<VALUE_100/>
				<PERCENT>0</PERCENT>
			</COLOR_START>
			<COLOR_END>
				<VALUE>buttonface</VALUE>
				<VALUE_100/>
				<PERCENT>0</PERCENT>
			</COLOR_END>
			<HORIZONTAL>TRUE</HORIZONTAL>
			<RETURNTOZERO>FALSE</RETURNTOZERO>
		</CLASS>
		<CLASS NAME=".sys-header-gradient-H" TYPE="GRADIENT">
			<!--used to separate tool bar from content area-->
			<COLOR_START>
				<VALUE>activecaption</VALUE>
				<VALUE_100/>
				<PERCENT>0</PERCENT>
			</COLOR_START>
			<COLOR_END>
				<VALUE>window</VALUE>
				<VALUE_100/>
				<PERCENT>0</PERCENT>
			</COLOR_END>
			<HORIZONTAL>TRUE</HORIZONTAL>
			<RETURNTOZERO>TRUE</RETURNTOZERO>
		</CLASS>
		<CLASS NAME=".sys-header-gradient-V" TYPE="GRADIENT">
			<!--used to separate left pane from right pane-->
			<COLOR_START>
				<VALUE>window</VALUE>
				<VALUE_100/>
				<PERCENT>0</PERCENT>
			</COLOR_START>
			<COLOR_END>
				<VALUE>buttonface</VALUE>
				<VALUE_100/>
				<PERCENT>0</PERCENT>
			</COLOR_END>
			<HORIZONTAL>FALSE</HORIZONTAL>
			<RETURNTOZERO>TRUE</RETURNTOZERO>
		</CLASS>
		<CLASS NAME=".sys-background-strong" TYPE="GRADIENT">
			<!--strong background, doesn't get wiped out by High-Contrast-->
			<COLOR_START>
				<VALUE>window</VALUE>
				<VALUE_100/>
				<PERCENT>0</PERCENT>
			</COLOR_START>
			<COLOR_END>
				<VALUE>window</VALUE>
				<VALUE_100/>
				<PERCENT>0</PERCENT>
			</COLOR_END>
			<HORIZONTAL>TRUE</HORIZONTAL>
			<RETURNTOZERO>FALSE</RETURNTOZERO>
		</CLASS>
		<CLASS NAME=".sys-lhp-bgcolor" TYPE="GRADIENT">
			<!--top to bottom gradient colors in the left hand pane background-->
			<COLOR_START>
				<VALUE>window</VALUE>
				<VALUE_100/>
				<PERCENT>0</PERCENT>
			</COLOR_START>
			<COLOR_END>
				<VALUE>window</VALUE>
				<VALUE_100/>
				<PERCENT>0</PERCENT>
			</COLOR_END>
			<HORIZONTAL>FALSE</HORIZONTAL>
			<RETURNTOZERO>FALSE</RETURNTOZERO>
		</CLASS>
		<CLASS NAME=".sys-RA-gradient-H" TYPE="GRADIENT">
			<COLOR_START>
				<VALUE>window</VALUE>
				<VALUE_100/>
				<PERCENT>0</PERCENT>
			</COLOR_START>
			<COLOR_END>
				<VALUE>window</VALUE>
				<VALUE_100/>
				<PERCENT>0</PERCENT>
			</COLOR_END>
			<HORIZONTAL>TRUE</HORIZONTAL>
			<RETURNTOZERO>FALSE</RETURNTOZERO>
		</CLASS>
		<CLASS NAME=".sys-RA-gradient-V" TYPE="GRADIENT">
			<COLOR_START>
				<VALUE>window</VALUE>
				<VALUE_100/>
				<PERCENT>0</PERCENT>
			</COLOR_START>
			<COLOR_END>
				<VALUE>window</VALUE>
				<VALUE_100/>
				<PERCENT>0</PERCENT>
			</COLOR_END>
			<HORIZONTAL>FALSE</HORIZONTAL>
			<RETURNTOZERO>TRUE</RETURNTOZERO>
		</CLASS>
		<CLASS NAME=".sys-table-cell-bgcolor5" TYPE="GRADIENT">
			<!--color for content panes in Remote Assistance (will be removed if no gradient)-->
			<COLOR_START>
				<VALUE>window</VALUE>
				<VALUE_100/>
				<PERCENT>0</PERCENT>
			</COLOR_START>
			<COLOR_END>
				<VALUE>window</VALUE>
				<VALUE_100/>
				<PERCENT>0</PERCENT>
			</COLOR_END>
			<HORIZONTAL>TRUE</HORIZONTAL>
			<RETURNTOZERO>FALSE</RETURNTOZERO>
		</CLASS>
		<CLASS NAME=".sys-toppane-header-bgcolor" TYPE="GRADIENT">
			<!--left to right gradient colors in the header-->
			<COLOR_START>
				<VALUE>activecaption</VALUE>
				<VALUE_100/>
				<PERCENT>0</PERCENT>
			</COLOR_START>
			<COLOR_END>
				<VALUE>activecaption</VALUE>
				<VALUE_100/>
				<PERCENT>0</PERCENT>
			</COLOR_END>
			<HORIZONTAL>TRUE</HORIZONTAL>
			<RETURNTOZERO>FALSE</RETURNTOZERO>
		</CLASS>
		<CLASS NAME=".sys-link-header" TYPE="HYPERLINK">
			<!--the 'set search options' link in the header-->
			<NORMAL>
				<VALUE>captiontext</VALUE>
				<VALUE_100/>
				<PERCENT>0</PERCENT>
			</NORMAL>
			<HOVER>
				<VALUE>captiontext</VALUE>
				<VALUE_100/>
				<PERCENT>0</PERCENT>
			</HOVER>
			<ACTIVE>
				<VALUE/>
				<VALUE_100/>
				<PERCENT>0</PERCENT>
			</ACTIVE>
			<UNDERLINEALWAYS>FALSE</UNDERLINEALWAYS>
		</CLASS>
		<CLASS NAME=".sys-link-homepage" TYPE="HYPERLINK">
			<!--hyperlinks on the homepage, where the background is not white (Luna=blue)-->
			<NORMAL>
				<VALUE>highlight</VALUE>
				<VALUE_100/>
				<PERCENT>0</PERCENT>
			</NORMAL>
			<HOVER>
				<VALUE>highlight</VALUE>
				<VALUE_100/>
				<PERCENT>0</PERCENT>
			</HOVER>
			<ACTIVE>
				<VALUE/>
				<VALUE_100/>
				<PERCENT>0</PERCENT>
			</ACTIVE>
			<UNDERLINEALWAYS>FALSE</UNDERLINEALWAYS>
		</CLASS>
		<CLASS NAME=".sys-link-normal" TYPE="HYPERLINK">
			<!--links in RHP, normal blue hyperlinks used throughout hsc-->
			<NORMAL>
				<VALUE>highlight</VALUE>
				<VALUE_100/>
				<PERCENT>0</PERCENT>
			</NORMAL>
			<HOVER>
				<VALUE>highlight</VALUE>
				<VALUE_100/>
				<PERCENT>0</PERCENT>
			</HOVER>
			<ACTIVE>
				<VALUE/>
				<VALUE_100/>
				<PERCENT>0</PERCENT>
			</ACTIVE>
			<UNDERLINEALWAYS>FALSE</UNDERLINEALWAYS>
		</CLASS>
		<CLASS NAME=".sys-link-splash" TYPE="HYPERLINK">
			<!--links in splash pages-->
			<NORMAL>
				<VALUE>highlight</VALUE>
				<VALUE_100/>
				<PERCENT>0</PERCENT>
			</NORMAL>
			<HOVER>
				<VALUE>highlight</VALUE>
				<VALUE_100/>
				<PERCENT>0</PERCENT>
			</HOVER>
			<ACTIVE>
				<VALUE/>
				<VALUE_100/>
				<PERCENT>0</PERCENT>
			</ACTIVE>
			<UNDERLINEALWAYS>FALSE</UNDERLINEALWAYS>
		</CLASS>
	</THEME>
</STYLESHEET>
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\pchealth\helpctr\content\systempages\sysinfo\loc_strings.xml ===
< ? x m l   v e r s i o n = " 1 . 0 "   ? > 
 
 < l o c a l i z a b l e > 
 
     < g e n e r i c _ e r r > A n   e r r o r   h a s   o c c u r e d . < / g e n e r i c _ e r r > 
 
     < s p e c i f i c _ e r r > T h e   f o l l o w i n g   e r r o r   h a s   o c c u r e d :   < / s p e c i f i c _ e r r > 
 
     < a d m i n o n l y > T h i s   f e a t u r e   i s   a v a i l a b l e   t o   l o c a l   a d m i n i s t r a t o r s   o n l y . < / a d m i n o n l y > 
 
     < l o c a l o n l y > a v a i l a b l e   o n l y   w h e n   c o n n e c t e d   l o c a l l y < / l o c a l o n l y > 
 
     < o n l y i n h e l p c t r > T h i s   p a g e   m u s t   b e   v i e w e d   u s i n g   H e l p   C e n t e r . < / o n l y i n h e l p c t r > 
 
     < r e m o t e _ c o n n e c t _ f a i l e d > T h e   c o n n e c t i o n   t o   % a r g 1 %   c o u l d   n o t   b e   e s t a b l i s h e d .   C h e c k   t o   s e e   t h a t   t h e   n e t w o r k   p a t h   n a m e   i s   c o r r e c t ,   t h a t   y o u   h a v e   s u f f i c i e n t   p e r m i s s i o n   t o   a c c e s s   W i n d o w s   M a n a g e m e n t   I n s t r u m e n t a t i o n ,   a n d   t h a t   W i n d o w s   M a n a g e m e n t   I n s t r u m e n t a t i o n   i s   i n s t a l l e d   o n   t h e   c o m p u t e r . < / r e m o t e _ c o n n e c t _ f a i l e d > 
 
     < r e m o t e _ a c c e s s _ d e n i e d > A c c e s s   d e n i e d   t o   W i n d o w s   M a n a g e m e n t   I n s t r u m e n t a t i o n   s e r v e r   o n   % a r g 1 % .   H a v e   a n   a d m i n i s t r a t o r   c h a n g e   y o u r   a c c e s s   p e r m i s s i o n s . < / r e m o t e _ a c c e s s _ d e n i e d > 
 
     < w a i t > P l e a s e   w a i t   w h i l e   i n f o r m a t i o n   i s   b e i n g   c o l l e c t e d . . . < / w a i t > 
 
     < c o l l e c t i n g _ i n f o > c o l l e c t i n g   % a r g 1 %   i n f o r m a t i o n < / c o l l e c t i n g _ i n f o > 
 
     < n o t _ i m p l e m e n t e d > N o t   I m p l e m e n t e d . < / n o t _ i m p l e m e n t e d > 
 
     < d e s c _ s u p p o r t e d > M i c r o s o f t   h a s   t e s t e d   t h i s   p r o d u c t   a n d   c e r t i f i e s   t h a t   i t   w o r k s   w i t h   W i n d o w s   X P . < / d e s c _ s u p p o r t e d > 
 
     < d e s c _ n o t s u p p o r t e d > M i c r o s o f t   h a s   n o t   t e s t e d   t h i s   p r o d u c t   t o   d e t e r m i n e   i f   i t   w o r k s   w i t h   W i n d o w s   X P . < / d e s c _ n o t s u p p o r t e d > 
 
     < l o c a l _ c o m p u t e r _ i n f o > M y   C o m p u t e r   I n f o r m a t i o n < / l o c a l _ c o m p u t e r _ i n f o > 
 
     < r e m o t e _ c o m p u t e r _ i n f o > C o m p u t e r   I n f o r m a t i o n   f o r   < / r e m o t e _ c o m p u t e r _ i n f o > 
 
     < l o c a l _ a d v a n c e d _ i n f o > A d v a n c e d   S y s t e m   I n f o r m a t i o n < / l o c a l _ a d v a n c e d _ i n f o > 
 
     < r e m o t e _ a d v a n c e d _ i n f o > A d v a n c e d   S y s t e m   I n f o r m a t i o n   f o r   < / r e m o t e _ a d v a n c e d _ i n f o > 
 
     < r e f r e s h > R e f r e s h   s c r e e n < / r e f r e s h > 
 
     < n o n e > N o n e < / n o n e > 
 
     < i n s t a l l e d > I n s t a l l e d < / i n s t a l l e d > 
 
     < n o t _ i n s t a l l e d > N o t   I n s t a l l e d < / n o t _ i n s t a l l e d > 
 
     < b y t e s > B y t e s < / b y t e s > 
 
     < k b > K B < / k b > 
 
     < m b > M B < / m b > 
 
     < g b > G B < / g b > 
 
     < w i n d o w s _ u p d a t e > W i n d o w s   U p d a t e < / w i n d o w s _ u p d a t e > 
 
     < d e f r a g > D e f r a g < / d e f r a g > 
 
     < c l e a n u p > C l e a n u p < / c l e a n u p > 
 
     < H C L _ D e s c > L o o k   f o r   d r i v e r < / H C L _ D e s c > 
 
     < v i e w _ h e l p > V i e w   H e l p   T o p i c < / v i e w _ h e l p > 
 
     < t s h o o t e r > T r o u b l e s h o o t e r < / t s h o o t e r > 
 
     
 
     < m a i n _ p g _ d e s c > Y o u   c a n   c h e c k   w h a t   p r o g r a m s   a n d   h a r d w a r e   a r e   i n s t a l l e d   o n   t h i s   c o m p u t e r ,   t h e   a m o u n t   o f   m e m o r y   a v a i l a b l e ,   o r   r e v i e w   d i a g n o s t i c   i n f o r m a t i o n   a b o u t   t h e   h e a l t h   o f   t h i s   c o m p u t e r   s y s t e m . < / m a i n _ p g _ d e s c > 
 
     < v i e w _ g e n e r a l _ s y s i n f o > V i e w   g e n e r a l   s y s t e m   i n f o r m a t i o n   a b o u t   t h i s   c o m p u t e r < / v i e w _ g e n e r a l _ s y s i n f o > 
 
     < v i e w _ s t a t u s _ h r d w r _ s f t w r > V i e w   t h e   s t a t u s   o f   m y   s y s t e m   h a r d w a r e   a n d   s o f t w a r e < / v i e w _ s t a t u s _ h r d w r _ s f t w r > 
 
     < f i n d _ h r d w r _ i n f o > F i n d   i n f o r m a t i o n   a b o u t   t h e   h a r d w a r e   i n s t a l l e d   o n   t h i s   c o m p u t e r < / f i n d _ h r d w r _ i n f o > 
 
     < v i e w _ m s _ s f t w r > V i e w   a   l i s t   o f   M i c r o s o f t   s o f t w a r e   i n s t a l l e d   o n   t h i s   c o m p u t e r < / v i e w _ m s _ s f t w r > 
 
     < v i e w _ a d v a n c e d _ s y s i n f o > V i e w   A d v a n c e d   S y s t e m   I n f o r m a t i o n < / v i e w _ a d v a n c e d _ s y s i n f o > 
 
     
 
     < p r o p e r t i e s > G e n e r a l < / p r o p e r t i e s > 
 
     < d e s c _ p r o p e r t i e s > 
 
         S e e   w h a t   o p e r a t i n g   s y s t e m   y o u   h a v e   i n s t a l l e d ,   y o u r   p r o c e s s o r   s p e e d ,   a n d   h o w   m u c h   d i s k   s p a c e   i s   a v a i l a b l e . 
 
     < / d e s c _ p r o p e r t i e s > 
 
     < h e a l t h > S t a t u s < / h e a l t h > 
 
     < d e s c _ h e a l t h > 
 
         R e a d   i n f o r m a t i o n   a n d   t i p s   t h a t   c a n   h e l p   y o u   s o l v e   e x i s t i n g   p r o b l e m s   a n d   a v o i d   i s s u e s . 
 
     < / d e s c _ h e a l t h > 
 
     < h a r d w a r e > H a r d w a r e < / h a r d w a r e > 
 
     < d e s c _ h a r d w a r e > 
 
         S c a n   f o r   i n f o r m a t i o n   a b o u t   a d a p t e r s ,   c a r d s ,   a n d   o t h e r   h a r d w a r e   t h a t   i s   i n s t a l l e d   o n   t h i s   c o m p u t e r . 
 
     < / d e s c _ h a r d w a r e > 
 
     < s o f t w a r e > S o f t w a r e < / s o f t w a r e > 
 
     < d e s c _ s o f t w a r e > 
 
         S e e   p r o g r a m s   r e g i s t e r e d   b y   p r o d u c t   i d e n t i f i c a t i o n   ( P I D )   n u m b e r   a n d   p r o g r a m s   t h a t   r u n   a u t o m a t i c a l l y   f r o m   S t a r t u p . 
 
     < / d e s c _ s o f t w a r e > 
 
     < d e s c _ a d v a n c e d > 
 
         L i n k   t o   a d v a n c e d   s y s t e m   d a t a   t h a t   a   s u p p o r t   p r o f e s s i o n a l   c a n   u s e   t o   h e l p . 
 
     < / d e s c _ a d v a n c e d > 
 
 
 
     < s p e c i f i c a t i o n s > S p e c i f i c a t i o n s < / s p e c i f i c a t i o n s > 
 
     < s y s t e m _ m o d e l > S y s t e m   M o d e l < / s y s t e m _ m o d e l > 
 
     < B I O S _ v e r s i o n > B I O S   V e r s i o n < / B I O S _ v e r s i o n > 
 
     < p r o c e s s o r > P r o c e s s o r < / p r o c e s s o r > 
 
     < v e r s i o n > V e r s i o n < / v e r s i o n > 
 
     < s p e e d > S p e e d < / s p e e d > 
 
     < m h z > M H z < / m h z > 
 
     < o p e r a t i n g _ s y s t e m > O p e r a t i n g   S y s t e m < / o p e r a t i n g _ s y s t e m > 
 
     < a c t i v a t i o n _ s t a t u s > N o t   A c t i v a t e d   ( E x p i r e s   i n   % a r g 1 %   D a y s ) < / a c t i v a t i o n _ s t a t u s > 
 
     < s e r v i c e _ p a c k > S e r v i c e   P a c k < / s e r v i c e _ p a c k > 
 
     < l o c a t i o n > L o c a t i o n < / l o c a t i o n > 
 
     < p i d > P I D < / p i d > 
 
     < h o t _ f i x > H o t   F i x < / h o t _ f i x > 
 
     < l a n g u a g e > L a n g u a g e < / l a n g u a g e > 
 
     
 
     < w o r k s t a t i o n _ s t a n d a l o n e > W o r k s t a t i o n   ( s t a n d a l o n e ) < / w o r k s t a t i o n _ s t a n d a l o n e > 
 
     < w o r k s t a t i o n > W o r k s t a t i o n < / w o r k s t a t i o n > 
 
     < s e r v e r _ s t a n d a l o n e > S e r v e r   ( s t a n d a l o n e ) < / s e r v e r _ s t a n d a l o n e > 
 
     < s e r v e r > S e r v e r < / s e r v e r > 
 
     < b a c k u p _ d o m a i n _ c o n t r o l l e r > B a c k u p   D o m a i n   C o n t r o l l e r < / b a c k u p _ d o m a i n _ c o n t r o l l e r > 
 
     < p r i m a r y _ d o m a i n _ c o n t r o l l e r > P r i m a r y   D o m a i n   C o n t r o l l e r < / p r i m a r y _ d o m a i n _ c o n t r o l l e r > 
 
     
 
     < g e n e r a l _ c o m p u t e r _ i n f o > G e n e r a l   C o m p u t e r < / g e n e r a l _ c o m p u t e r _ i n f o > 
 
     < g e n e r a l _ c o m p u t e r _ i n f o _ c a p t i o n > G e n e r a l   C o m p u t e r   I n f o < / g e n e r a l _ c o m p u t e r _ i n f o _ c a p t i o n > 
 
     < s y s t e m _ n a m e > S y s t e m   N a m e < / s y s t e m _ n a m e > 
 
     < d o m a i n > D o m a i n < / d o m a i n > 
 
     < t i m e _ z o n e > T i m e   Z o n e < / t i m e _ z o n e > 
 
     < c o u n t r y _ r e g i o n > C o u n t r y   /   R e g i o n < / c o u n t r y _ r e g i o n > 
 
     < c o n n e c t i o n > C o n n e c t i o n < / c o n n e c t i o n > 
 
     < p r o x y _ s r v e r > P r o x y   S e r v e r < / p r o x y _ s r v e r > 
 
     < a u t o > A u t o < / a u t o > 
 
     < I P _ a d d r e s s > I P   A d d r e s s < / I P _ a d d r e s s > 
 
     < I P X _ a d d r e s s > I P X   A d d r e s s < / I P X _ a d d r e s s > 
 
     < n o t _ e n a b l e d > N o t   E n a b l e d < / n o t _ e n a b l e d > 
 
     
 
     < l o c a l e 0 4 0 9 > E n g l i s h < / l o c a l e 0 4 0 9 > 
 
     < l o c a l e 0 4 0 c > F r e n c h < / l o c a l e 0 4 0 c > 
 
     < l o c a l e 0 c 0 a > S p a n i s h < / l o c a l e 0 c 0 a > 
 
     < l o c a l e 0 4 1 0 > I t a l i a n < / l o c a l e 0 4 1 0 > 
 
     < l o c a l e 0 4 1 D > S w e d i s h < / l o c a l e 0 4 1 D > 
 
     < l o c a l e 0 4 1 3 > D u t c h < / l o c a l e 0 4 1 3 > 
 
     < l o c a l e 0 4 1 6 > B r a z i l i a n < / l o c a l e 0 4 1 6 > 
 
     < l o c a l e 0 4 0 b > F i n n i s h < / l o c a l e 0 4 0 b > 
 
     < l o c a l e 0 4 1 4 > N o r w e g i a n < / l o c a l e 0 4 1 4 > 
 
     < l o c a l e 0 4 0 6 > D a n i s h < / l o c a l e 0 4 0 6 > 
 
     < l o c a l e 0 4 0 e > H u n g a r i a n < / l o c a l e 0 4 0 e > 
 
     < l o c a l e 0 4 1 5 > P o l i s h < / l o c a l e 0 4 1 5 > 
 
     < l o c a l e 0 4 1 9 > R u s s i a n < / l o c a l e 0 4 1 9 > 
 
     < l o c a l e 0 4 0 5 > C z e c h < / l o c a l e 0 4 0 5 > 
 
     < l o c a l e 0 4 0 8 > G r e e k < / l o c a l e 0 4 0 8 > 
 
     < l o c a l e 0 8 1 6 > P o r t u g u e s e < / l o c a l e 0 8 1 6 >     
 
     < l o c a l e 0 4 1 f > T u r k i s h < / l o c a l e 0 4 1 f > 
 
     < l o c a l e 0 4 1 1 > J a p a n e s e < / l o c a l e 0 4 1 1 > 
 
     < l o c a l e 0 4 1 2 > K o r e a n < / l o c a l e 0 4 1 2 > 
 
     < l o c a l e 0 4 0 7 > G e r m a n < / l o c a l e 0 4 0 7 > 
 
     < l o c a l e 0 8 0 4 > C h i n e s e   ( S i m p l i f i e d ) < / l o c a l e 0 8 0 4 > 
 
     < l o c a l e 0 4 0 4 > C h i n e s e   ( T r a d i t i o n a l ) < / l o c a l e 0 4 0 4 > 
 
     < l o c a l e 0 4 0 1 > A r a b i c < / l o c a l e 0 4 0 1 > 
 
     < l o c a l e 0 4 0 d > H e b r e w < / l o c a l e 0 4 0 d > 
 
 	         
 
     < c o u n t r y 6 1 > A u s t r a l i a < / c o u n t r y 6 1 > 
 
     < c o u n t r y 4 3 > A u s t r i a < / c o u n t r y 4 3 > 
 
     < c o u n t r y 3 2 > B e l g i u m < / c o u n t r y 3 2 > 
 
     < c o u n t r y 5 5 > B r a z i l < / c o u n t r y 5 5 > 
 
     < c o u n t r y 2 > C a n a d a < / c o u n t r y 2 > 
 
     < c o u n t r y 4 5 > D e n m a r k < / c o u n t r y 4 5 > 
 
     < c o u n t r y 3 5 8 > F i n l a n d < / c o u n t r y 3 5 8 > 
 
     < c o u n t r y 3 3 > F r a n c e < / c o u n t r y 3 3 > 
 
     < c o u n t r y 4 9 > G e r m a n y < / c o u n t r y 4 9 > 
 
     < c o u n t r y 3 5 4 > I c e l a n d < / c o u n t r y 3 5 4 > 
 
     < c o u n t r y 3 5 3 > I r e l a n d < / c o u n t r y 3 5 3 > 
 
     < c o u n t r y 3 9 > I t a l y < / c o u n t r y 3 9 > 
 
     < c o u n t r y 8 1 > J a p a n < / c o u n t r y 8 1 > 
 
     < c o u n t r y 5 2 > M e x i c o < / c o u n t r y 5 2 > 
 
     < c o u n t r y 3 1 > N e t h e r l a n d s < / c o u n t r y 3 1 > 
 
     < c o u n t r y 6 4 > N e w   Z e a l a n d < / c o u n t r y 6 4 > 
 
     < c o u n t r y 4 7 > N o r w a y < / c o u n t r y 4 7 > 
 
     < c o u n t r y 3 5 1 > P o r t u g a l < / c o u n t r y 3 5 1 > 
 
     < c o u n t r y 8 6 > P e o p l e   R e p u b l i c   o f   C h i n a < / c o u n t r y 8 6 > 
 
     < c o u n t r y 8 2 > S o u t h   K o r e a < / c o u n t r y 8 2 > 
 
     < c o u n t r y 3 4 > S p a i n < / c o u n t r y 3 4 > 
 
     < c o u n t r y 4 6 > S w e d e n < / c o u n t r y 4 6 > 
 
     < c o u n t r y 4 1 > S w i t z e r l a n d < / c o u n t r y 4 1 > 
 
     < c o u n t r y 8 8 6 > T a i w a n < / c o u n t r y 8 8 6 > 
 
     < c o u n t r y 4 4 > U n i t e d   K i n g d o m < / c o u n t r y 4 4 > 
 
     < c o u n t r y 1 > U n i t e d   S t a t e s < / c o u n t r y 1 > 
 
         
 
     
 
     < m e m o r y > M e m o r y   ( R A M ) < / m e m o r y > 
 
     < t o t a l _ c a p a c i t y > T o t a l   C a p a c i t y < / t o t a l _ c a p a c i t y > 
 
     < s u m _ h a r d _ d i s k s > S u m   o f   H a r d   D i s k s < / s u m _ h a r d _ d i s k s > 
 
     < s y s t e m _ s o f t w a r e > S y s t e m   S o f t w a r e < / s y s t e m _ s o f t w a r e > 
 
     < d a t e _ c r e a t e d > D a t e   C r e a t e d < / d a t e _ c r e a t e d > 
 
     < u p d a t e > U p d a t e < / u p d a t e > 
 
     < h e l p > H e l p < / h e l p > 
 
     < a v a i l a b l e > A v a i l a b l e < / a v a i l a b l e > 
 
     < n o _ i n f o > N o   I n f o r m a t i o n < / n o _ i n f o > 
 
     < b i o s > B I O S < / b i o s > 
 
     < h a r d w a r e > H a r d w a r e < / h a r d w a r e > 
 
     < c o m p o n e n t > C o m p o n e n t < / c o m p o n e n t > 
 
     < s t a t u s > S t a t u s < / s t a t u s > 
 
     < v i d e o _ c a r d > V i d e o   C a r d < / v i d e o _ c a r d > 
 
     < s o u n d _ c a r d > S o u n d   C a r d < / s o u n d _ c a r d > 
 
     < u s b _ c o n t r o l l e r > U S B   C o n t r o l l e r < / u s b _ c o n t r o l l e r > 
 
     < s c s i _ a d a p t e r > S C S I   A d a p t e r < / s c s i _ a d a p t e r > 
 
     < n w _ c a r d > N e t w o r k   C a r d < / n w _ c a r d > 
 
     < s u p p o r t e d > S u p p o r t e d < / s u p p o r t e d > 
 
     < n o t _ s u p p o r t e d > N o t   S u p p o r t e d < / n o t _ s u p p o r t e d > 
 
     < r e c o m m e n d e d > R e c o m m e n d e d < / r e c o m m e n d e d > 
 
     < n o t _ r e q > N o t   R e q u i r e d < / n o t _ r e q > 
 
     < h a r d _ d i s k > H a r d   D i s k < / h a r d _ d i s k > 
 
     < d i s k _ p a r t i t i o n > D i s k   P a r t i t i o n < / d i s k _ p a r t i t i o n > 
 
     < u s a g e > U s a g e < / u s a g e > 
 
     < u s a g e _ l o w > L o w < / u s a g e _ l o w > 
 
     < u s a g e _ m e d > M e d i u m < / u s a g e _ m e d > 
 
     < u s a g e _ h i g h > H i g h < / u s a g e _ h i g h > 
 
     < u s a g e _ c r i t i c a l > C r i t i c a l < / u s a g e _ c r i t i c a l > 
 
     < p a r t i t i o n e d > p a r t i t i o n e d < / p a r t i t i o n e d > 
 
     < n o n p a r t i t i o n e d > n o n - p a r t i t i o n e d < / n o n p a r t i t i o n e d > 
 
     < l o c a l _ d i s k > L o c a l   D i s k < / l o c a l _ d i s k > 
 
     < m o r e _ i n f o > M o r e   I n f o < / m o r e _ i n f o > 
 
     < r a m > R a n d o m   A c c e s s   M e m o r y   ( R A M ) < / r a m > 
 
     < m e m _ d e t e c t e d > M e m o r y   ( R A M )   D e t e c t e d < / m e m _ d e t e c t e d > 
 
     < m i n _ r e q > M i n i m u m   R e q u i r e m e n t < / m i n _ r e q > 
 
     < m i n _ r e q _ v a l u e > N o t   I m p l e m e n t e d < / m i n _ r e q _ v a l u e > 
 
     < c a p a c i t y > C a p a c i t y < / c a p a c i t y > 
 
     < u s e d > U s e d < / u s e d > 
 
     < f r e e > F r e e < / f r e e > 
 
     < d i s p l a y > D i s p l a y < / d i s p l a y > 
 
     < t y p e > T y p e < / t y p e > 
 
     < c o l o r > C o l o r < / c o l o r > 
 
     < r e s o l u t i o n > R e s o l u t i o n < / r e s o l u t i o n > 
 
     < s c r e e n _ s a v e r > S c r e e n   S a v e r < / s c r e e n _ s a v e r > 
 
     < n o t _ a c t i v e > N o t   A c t i v e < / n o t _ a c t i v e > 
 
     < a c t i v e > A c t i v e < / a c t i v e > 
 
     < c o l o r s _ 1 6 > 1 6   C o l o r s < / c o l o r s _ 1 6 > 
 
     < c o l o r s _ 2 5 6 > 2 5 6   C o l o r s < / c o l o r s _ 2 5 6 > 
 
     < c o l o r s _ h i g h > H i g h   C o l o r   ( 1 6   B i t ) < / c o l o r s _ h i g h > 
 
     < c o l o r s _ t r u e _ 2 4 > T r u e   C o l o r   ( 2 4   B i t ) < / c o l o r s _ t r u e _ 2 4 > 
 
     < c o l o r s _ t r u e _ 3 2 > T r u e   C o l o r   ( 3 2   B i t ) < / c o l o r s _ t r u e _ 3 2 > 
 
     < o t h e r > [ o t h e r ] < / o t h e r > 
 
     < u n k n o w n > U n k n o w n < / u n k n o w n > 
 
     < m a n u f a c t u r e r > M a n u f a c t u r e r < / m a n u f a c t u r e r > 
 
     < m o d e l > M o d e l < / m o d e l > 
 
     < d r i v e r > D r i v e r < / d r i v e r > 
 
     < m o d e m > M o d e m < / m o d e m > 
 
     < c d r o m _ d r i v e > C D - R O M   D r i v e < / c d r o m _ d r i v e > 
 
     < l o c a l _ d i s k s > L o c a l   D i s k s < / l o c a l _ d i s k s > 
 
     < f l o p p y _ d r i v e > F l o p p y   D r i v e < / f l o p p y _ d r i v e > 
 
     < p r i n t e r s > P r i n t e r s < / p r i n t e r s > 
 
     < d e f a u l t _ p r i n t e r > D e f a u l t   P r i n t e r < / d e f a u l t _ p r i n t e r > 
 
     < r e g i s t e r e d _ s o f t w a r e > M i c r o s o f t   R e g i s t e r e d   S o f t w a r e < / r e g i s t e r e d _ s o f t w a r e > 
 
     < p r o d u c t _ i d e n t i f i c a t i o n > P r o d u c t   I d e n t i f i c a t i o n   ( P I D ) < / p r o d u c t _ i d e n t i f i c a t i o n > 
 
     < s h o w _ a d v a n c e d > S h o w   A d v a n c e d < / s h o w _ a d v a n c e d > 
 
     < h i d e _ a d v a n c e d > H i d e   A d v a n c e d < / h i d e _ a d v a n c e d > 
 
     < s t a r t u p _ p r o g _ g r > S t a r t u p   P r o g r a m   G r o u p < / s t a r t u p _ p r o g _ g r > 
 
     < i n s t a l l _ d a t e > I n s t a l l   D a t e < / i n s t a l l _ d a t e > 
 
     < s e r v i c e s > S e r v i c e s < / s e r v i c e s > 
 
     < s e r v i c e > S e r v i c e < / s e r v i c e > 
 
     < e x e c u t a b l e > E x e c u t a b l e < / e x e c u t a b l e > 
 
     < s t a r t u p > S t a r t u p < / s t a r t u p > 
 
     < e r r o r _ l o g > E r r o r   L o g < / e r r o r _ l o g > 
 
     < w a t s o n _ l o g > W i n d o w s   W a t s o n   C r a s h < / w a t s o n _ l o g > 
 
     < w a t s o n _ l o g _ c a p t i o n > W i n d o w s   W a t s o n   C r a s h   I n f o r m a t i o n < / w a t s o n _ l o g _ c a p t i o n > 
 
     < d a t e t i m e > D a t e   -   T i m e < / d a t e t i m e > 
 
     < s o u r c e > S o u r c e < / s o u r c e > 
 
     < d e s c r i p t i o n > D e s c r i p t i o n < / d e s c r i p t i o n > 
 
     < e r r o r > E r r o r < / e r r o r > 
 
     < w a r n i n g > W a r n i n g < / w a r n i n g > 
 
     < i n f o r m a t i o n > I n f o r m a t i o n < / i n f o r m a t i o n > 
 
     
 
     < h e l p _ s u p p o r t _ s e r v i c e s > H e l p   a n d   S u p p o r t   C e n t e r < / h e l p _ s u p p o r t _ s e r v i c e s > 
 
     < v i e w _ c o m p u t e r _ i n f o r m a t i o n > T y p e   t h e   p a t h   t o   t h e   c o m p u t e r . < / v i e w _ c o m p u t e r _ i n f o r m a t i o n > 
 
     < m y _ c o m p u t e r > M y   C o m p u t e r < / m y _ c o m p u t e r > 
 
     < r e m o t e _ c o m p u t e r > R e m o t e   C o m p u t e r < / r e m o t e _ c o m p u t e r > 
 
     < n a m e > R e m o t e   C o m p u t e r   N a m e < / n a m e > 
 
     < o p e n > O p e n < / o p e n > 
 
     < c a n c e l > C a n c e l < / c a n c e l > 
 
     
 
     < a d v a n c e d _ s y s t e m _ i n f o > A d v a n c e d   S y s t e m   I n f o r m a t i o n < / a d v a n c e d _ s y s t e m _ i n f o > 
 
     < w h a t _ d o _ y o u _ w a n t _ t o d o > W h a t   d o   y o u   w a n t   t o   d o ? < / w h a t _ d o _ y o u _ w a n t _ t o d o > 
 
     < a d v a n c e d _ s y s t e m _ i n f o _ d e s c > H e r e   a r e   l i n k s   t o   s y s t e m   i n f o r m a t i o n   t h a t   y o u   o r   a   s u p p o r t   p r o f e s s i o n a l   m i g h t   n e e d   t o   t r o u b l e s h o o t   a   p r o b l e m   o r   a s s e s s   c o m p u t e r   s y s t e m   h e a l t h . < / a d v a n c e d _ s y s t e m _ i n f o _ d e s c > 
 
 
 
     < v i e w _ d e t a i l e d _ s y s i n f o > V i e w   d e t a i l e d   s y s t e m   i n f o r m a t i o n   ( M s i n f o 3 2 . e x e ) < / v i e w _ d e t a i l e d _ s y s i n f o > 
 
     < v i e w _ r u n n i n g _ s e r v i c e s > V i e w   r u n n i n g   s e r v i c e s < / v i e w _ r u n n i n g _ s e r v i c e s > 
 
     < v i e w _ p o l i c y > V i e w   G r o u p   P o l i c y   s e t t i n g s   a p p l i e d < / v i e w _ p o l i c y > 
 
     < v i e w _ e r r _ l o g > V i e w   t h e   e r r o r   l o g < / v i e w _ e r r _ l o g > 
 
     < r e m o t e _ v i e w > V i e w   i n f o r m a t i o n   f o r   a n o t h e r   c o m p u t e r < / r e m o t e _ v i e w > 
 
 
 
     < d e s c _ d e t a i l e d _ s y s i n f o > 
 
         D i s p l a y   d e t a i l e d   i n f o r m a t i o n   a b o u t   y o u r   o p e r a t i n g   s y s t e m   c o n f i g u r a t i o n ,   i n c l u d i n g   y o u r   b r o w s e r ,   h a r d w a r e ,   a n d   s o f t w a r e . 
 
     < / d e s c _ d e t a i l e d _ s y s i n f o > 
 
 
 
     < d e s c _ r u n n i n g _ s e r v i c e s > 
 
         D i s p l a y   i n f o r m a t i o n   a b o u t   t h e   c u r r e n t   s t a t u s   o f   y o u r   c o m p u t e r ' s   s e r v i c e s . 
 
     < / d e s c _ r u n n i n g _ s e r v i c e s > 
 
 
 
     < d e s c _ p o l i c y > 
 
         D i s p l a y   i n f o r m a t i o n   a b o u t   t h e   G r o u p   P o l i c y   s e t t i n g s   f o r   t h i s   c o m p u t e r   a n d   y o u . 
 
     < / d e s c _ p o l i c y > 
 
 
 
     < d e s c _ e r r _ l o g > 
 
         D i s p l a y   a   l i s t   o f   e r r o r s   t h a t   o c c u r r e d   o n   y o u r   c o m p u t e r ,   i n c l u d i n g   r e l a t e d   m e s s a g e s ,   i n f o r m a t i o n   a b o u t   t h e i r   s o u r c e ,   a n d   t h e   t i m e   t h e y   o c c u r r e d . 
 
     < / d e s c _ e r r _ l o g > 
 
     
 
     < d e s c _ r e m o t e _ v i e w > 
 
         D i s p l a y   M y   C o m p u t e r   I n f o r m a t i o n   f o r   a   c o m p u t e r   y o u   a r e   c o n n e c t e d   t o   o v e r   a   n e t w o r k . 
 
     < / d e s c _ r e m o t e _ v i e w > 
 
 
 
   
 
     < c l e a n u p _ l i n k > S t a r t   D i s k   C l e a n u p   u t i l i t y < / c l e a n u p _ l i n k > 
 
     < c l e a n u p _ d e s c > D i s k   C l e a n u p   s e a r c h e s   y o u r   h a r d   d i s k ,   t h e n   s h o w s   y o u   t e m p o r a r y   f i l e s ,   I n t e r n e t   c a c h e   f i l e s ,   a n d   u n n e c e s s a r y   p r o g r a m   f i l e s   t h a t   y o u   c a n   s a f e l y   d e l e t e . < / c l e a n u p _ d e s c > 
 
     < d e f r a g _ r e a d _ m o r e > R e a d   m o r e   a b o u t   d e f r a g m e n t i n g < / d e f r a g _ r e a d _ m o r e > 
 
     < d e f r a g _ d e s c > D i s k   D e f r a g m e n t e r   r e a r r a n g e s   f i l e s ,   p r o g r a m s ,   a n d   u n u s e d   s p a c e   o n   y o u r   c o m p u t e r ' s   h a r d   d i s k ,   s o   t h a t   p r o g r a m s   r u n   f a s t e r   a n d   f i l e s   o p e n   m o r e   q u i c k l y .   D i s k   D e f r a g m e n t e r   d o e s   n o t   a f f e c t   a n y t h i n g   t h a t   y o u   s e e   o n   t h e   s c r e e n ,   s u c h   a s   f i l e s   i n   M y   D o c u m e n t s   o r   s h o r t c u t s   o n   t h e   P r o g r a m s   m e n u . < / d e f r a g _ d e s c > 
 
     
 
     < s y s t e m _ c o n f i g _ u t i l > S y s t e m   C o n f i g u r a t i o n   U t i l i t y < / s y s t e m _ c o n f i g _ u t i l > 
 
     < o p e n _ s y s t e m _ c o n f i g _ u t i l > O p e n   S y s t e m   C o n f i g u r a t i o n   U t i l i t y < / o p e n _ s y s t e m _ c o n f i g _ u t i l > 
 
     < s y s t e m _ c o n f i g _ u t i l _ d e s c > S y s t e m   C o n f i g u r a t i o n   U t i l i t y   ( M s c o n f i g . e x e )   a u t o m a t e s   t h e   r o u t i n e   t r o u b l e s h o o t i n g   s t e p s   t h a t   M i c r o s o f t   T e c h n i c a l   S u p p o r t   e n g i n e e r s   u s e   w h e n   d i a g n o s i n g   i s s u e s   w i t h   s y s t e m   c o n f i g u r a t i o n . < / s y s t e m _ c o n f i g _ u t i l _ d e s c > 
 
     
 
     < e v t _ e r r _ l o g > E r r o r   L o g < / e v t _ e r r _ l o g > 
 
     
 
     < p o l i c y > P o l i c y < / p o l i c y > 
 
 
 
     < d e f e c t i v e _ a p p s _ t i t l e > O b s o l e t e   A p p l i c a t i o n   a n d   D e v i c e   D r i v e r s < / d e f e c t i v e _ a p p s _ t i t l e > 
 
     < d e f e c t i v e _ a p p _ n a m e > A p p / D e v i c e < / d e f e c t i v e _ a p p _ n a m e > 
 
     < d e f e c t i v e _ d r i v e r _ n a m e > D r i v e r   F i l e   N a m e < / d e f e c t i v e _ d r i v e r _ n a m e > 
 
     < d e f e c t i v e _ a p p _ m a n u f a c t u r e r > M a n u f a c t u r e r < / d e f e c t i v e _ a p p _ m a n u f a c t u r e r > 
 
     
 
 < / l o c a l i z a b l e >     
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\pchealth\helpctr\pss\content\pss.xml ===
<?xml version="1.0" encoding="utf-8" ?>
<SAFConfig>
<EntryURL>hcp://CN=Microsoft Corporation,L=Redmond,S=Washington,C=US/Connection.htm</EntryURL>
<ProductName>Get help from Microsoft</ProductName>
<ProductDescription>Ask a support professional for help by using Microsoft Online Assisted Support.</ProductDescription>
<ProductID>PSS Online Assisted Support</ProductID>
</SAFConfig>
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\pchealth\helpctr\pss\content\pssmachinesnapshot-less.xml ===
<?xml version="1.0" ?>
<DataSpec GUID="47DE97C8-F86B-11d2-9628-00C04F68F2AF">
    <WQL Namespace="root/cimv2\applications\microsoftIE" Class="MicrosoftIE_Cache">
      select * from MicrosoftIE_Cache</WQL>
    <WQL Namespace="root/cimv2\applications\microsoftIE" Class="MicrosoftIE_Certificate">
      select * from MicrosoftIE_Certificate</WQL>
    <WQL Namespace="root/cimv2\applications\microsoftIE" Class="MicrosoftIE_ConnectionSettings">
      select * from MicrosoftIE_ConnectionSettings</WQL>
    <WQL Namespace="root/cimv2\applications\microsoftIE" Class="MicrosoftIE_ConnectionSummary">
      select * from MicrosoftIE_ConnectionSummary</WQL>
    <WQL Namespace="root/cimv2\applications\microsoftIE" Class="MicrosoftIE_ElementSetting">
      select * from MicrosoftIE_ElementSetting</WQL>
    <WQL Namespace="root/cimv2\applications\microsoftIE" Class="MicrosoftIE_FileVersion">
      select * from MicrosoftIE_FileVersion</WQL>
    <WQL Namespace="root/cimv2\applications\microsoftIE" Class="MicrosoftIE_InternetExplorer">
      select * from MicrosoftIE_InternetExplorer</WQL>
    <WQL Namespace="root/cimv2\applications\microsoftIE" Class="MicrosoftIE_LanSettings">
      select * from MicrosoftIE_LanSettings</WQL>
    <WQL Namespace="root/cimv2\applications\microsoftIE" Class="MicrosoftIE_Object">
      select * from MicrosoftIE_Object</WQL>
    <WQL Namespace="root/cimv2\applications\microsoftIE" Class="MicrosoftIE_Publisher">
      select * from MicrosoftIE_Publisher</WQL>
    <WQL Namespace="root/cimv2\applications\microsoftIE" Class="MicrosoftIE_Security">
      select * from MicrosoftIE_Security</WQL>
    <WQL Namespace="root/cimv2\applications\microsoftIE" Class="MicrosoftIE_Summary">
      select * from MicrosoftIE_Summary</WQL>
<WQL Namespace="root/cimv2" Class="Win32_PageFileUsage">SELECT Caption FROM Win32_PageFileUsage</WQL>
<WQL Namespace="root/cimv2" Class="Win32_Processor">SELECT Description, Manufacturer, MaxClockSpeed FROM Win32_Processor</WQL>
<WQL Namespace="root/cimv2" Class="Win32_TimeZone">SELECT * FROM Win32_TimeZone</WQL>
<WQL Namespace="root/cimv2" Class="Win32_PhysicalMemory">SELECT Capacity FROM Win32_PhysicalMemory</WQL>
<WQL Namespace="root/cimv2" Class="Win32_ComputerSystem">SELECT Name, Manufacturer, Model, SystemType, UserName FROM Win32_ComputerSystem</WQL>
<WQL Namespace="root/cimv2" Class="Win32_PageFileUsage">SELECT Caption FROM Win32_PageFileUsage</WQL>
<WQL Namespace="root/cimv2" Class="Win32_TimeZone">SELECT * FROM Win32_TimeZone</WQL>
<WQL Namespace="root/cimv2" Class="Win32_PhysicalMemory">SELECT Capacity FROM Win32_PhysicalMemory</WQL>
<WQL Namespace="root/cimv2" Class="Win32_CIMLogicalDeviceCIMDataFile">SELECT * FROM Win32_CIMLogicalDeviceCIMDataFile</WQL>
<WQL Namespace="root/cimv2" Class="Win32_PnPAllocatedResource">SELECT * FROM Win32_PnPAllocatedResource</WQL>
<WQL Namespace="root/cimv2" Class="Win32_CIMLogicalDeviceCIMDataFile">SELECT * FROM Win32_CIMLogicalDeviceCIMDataFile</WQL>
<WQL Namespace="root/cimv2" Class="Win32_SoundDevice">SELECT Caption, Manufacturer, Status, PNPDeviceID FROM Win32_SoundDevice</WQL>
<WQL Namespace="root/cimv2" Class="Win32_VideoController">SELECT Name, PNPDeviceID, VideoProcessor, AdapterCompatibility, Description, AdapterRAM, InstalledDisplayDrivers, DriverVersion, InfFilename, InfSection, NumberOfColorPlanes, CurrentNumberOfColors, CurrentHorizontalResolution, CurrentVerticalResolution, CurrentRefreshRate, CurrentBitsPerPixel FROM Win32_VideoController</WQL>
<WQL Namespace="root/cimv2" Class="Win32_InfraredDevice">SELECT Caption FROM Win32_InfraredDevice</WQL>
<WQL Namespace="root/cimv2" Class="Win32_Printer">SELECT Name, DriverName, PortName, ServerName FROM Win32_Printer</WQL>
<WQL Namespace="root/cimv2" Class="Win32_USBController">SELECT Caption, PNPDeviceID, __PATH FROM Win32_USBController</WQL>
<WQL Namespace="root/cimv2" Class="Win32_USBControllerDevice">SELECT * FROM Win32_USBControllerDevice</WQL>
<WQL Namespace="root/cimv2" Class="Win32_Environment">SELECT Name, VariableValue, UserName FROM Win32_Environment</WQL>
<WQL Namespace="root/cimv2" Class="Win32_PrintJob">SELECT Document, Size, Owner, Notify, Status, TimeSubmitted, StartTime, UntilTime, ElapsedTime, PagesPrinted, JobId, Priority, Parameters, DriverName, PrintProcessor, HostPrintQueue, DataType, Name FROM Win32_PrintJob</WQL>
<WQL Namespace="root/cimv2" Class="Win32_Service">SELECT DisplayName, Name, State, StartMode, ServiceType, PathName, ErrorControl, StartName, TagId FROM Win32_Service</WQL>
<WQL Namespace="root/cimv2" Class="Win32_ProgramGroup">SELECT GroupName, Name, UserName FROM Win32_ProgramGroup</WQL>
<WQL Namespace="root/cimv2" Class="Win32_NTLogEvent">SELECT TimeGenerated, SourceName, Message FROM Win32_NTLogEvent WHERE EventIdentifier = 1002</WQL>
<WQL Namespace="root/cimv2" Class="Win32_Keyboard">SELECT Description, Name, Layout, PNPDeviceID, NumberOfFunctionKeys FROM Win32_Keyboard</WQL>
<WQL Namespace="root/cimv2" Class="Win32_PointingDevice">SELECT HardwareType, NumberOfButtons, Status, PNPDeviceID, PowerManagementSupported, DoubleSpeedThreshold, Handedness FROM Win32_PointingDevice</WQL>
<WQL Namespace="root/cimv2" Class="Win32_SerialPort">SELECT Name, Status, PNPDeviceID, MaximumInputBufferSize, MaximumOutputBufferSize, SettableBaudRate, SettableDataBits, SettableFlowControl, SettableParity, SettableParityCheck, SettableStopBits, SettableRLSD, SupportsRLSD, Supports16BitMode, SupportsSpecialCharacters, DeviceID FROM Win32_SerialPort</WQL>
<WQL Namespace="root/cimv2" Class="Win32_SerialPortConfiguration">SELECT BaudRate, BitsPerByte, StopBits, Parity, IsBusy, AbortReadWriteOnError, BinaryModeEnabled, ContinueXMitOnXOff, CTSOutflowControl, DiscardNULLBytes, DSROutflowControl, DSRSensitivity, DTRFlowControlType, EOFCharacter, ErrorReplaceCharacter, ErrorReplacementEnabled, EventCharacter, ParityCheckEnabled, RTSFlowControlType, XOffCharacter, XOffXMitThreshold, XOnCharacter, XOnXMitThreshold, XOnXOffInFlowControl, XOnXOffOutFlowControl, Name FROM Win32_SerialPortConfiguration</WQL>
<WQL Namespace="root/cimv2" Class="Win32_ParallelPort">SELECT Name, PNPDeviceID FROM Win32_ParallelPort</WQL>
<WQL Namespace="root/cimv2" Class="Win32_DiskDrive">SELECT Description, Manufacturer, Model, BytesPerSector, MediaLoaded, MediaType, Partitions, SCSIBus, SCSILogicalUnit, SCSIPort, SCSITargetId, SectorsPerTrack, Size, TotalCylinders, TotalSectors, TotalTracks, TracksPerCylinder, PNPDeviceID, Index FROM Win32_DiskDrive</WQL>
<WQL Namespace="root/cimv2" Class="Win32_DiskPartition">SELECT Caption, Size, StartingOffset, DiskIndex FROM Win32_DiskPartition</WQL>
<WQL Namespace="root/cimv2" Class="Win32_SCSIController">SELECT Caption, Manufacturer, Status, PNPDeviceID FROM Win32_SCSIController</WQL>
<WQL Namespace="root/cimv2" Class="Win32_IDEController">SELECT Caption, Manufacturer, Status, PNPDeviceID FROM Win32_IDEController</WQL>
<WQL Namespace="root/cimv2" Class="Win32_BIOS">SELECT Version, SMBIOSPresent, SMBIOSBIOSVersion, ReleaseDate FROM Win32_BIOS</WQL>
</DataSpec>
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\pchealth\helpctr\pss\content\pssmachinesnapshot-wo-com.xml ===
<?xml version="1.0" ?>
<DataSpec GUID="47DE97C8-F86B-11d2-9628-00C04F68F2AF">
    <WQL Namespace="root/cimv2\applications\microsoftIE" Class="MicrosoftIE_Cache">
      select * from MicrosoftIE_Cache</WQL>
    <WQL Namespace="root/cimv2\applications\microsoftIE" Class="MicrosoftIE_Certificate">
      select * from MicrosoftIE_Certificate</WQL>
    <WQL Namespace="root/cimv2\applications\microsoftIE" Class="MicrosoftIE_ConnectionSettings">
      select * from MicrosoftIE_ConnectionSettings</WQL>
    <WQL Namespace="root/cimv2\applications\microsoftIE" Class="MicrosoftIE_ConnectionSummary">
      select * from MicrosoftIE_ConnectionSummary</WQL>
    <WQL Namespace="root/cimv2\applications\microsoftIE" Class="MicrosoftIE_ElementSetting">
      select * from MicrosoftIE_ElementSetting</WQL>
    <WQL Namespace="root/cimv2\applications\microsoftIE" Class="MicrosoftIE_FileVersion">
      select * from MicrosoftIE_FileVersion</WQL>
    <WQL Namespace="root/cimv2\applications\microsoftIE" Class="MicrosoftIE_InternetExplorer">
      select * from MicrosoftIE_InternetExplorer</WQL>
    <WQL Namespace="root/cimv2\applications\microsoftIE" Class="MicrosoftIE_LanSettings">
      select * from MicrosoftIE_LanSettings</WQL>
    <WQL Namespace="root/cimv2\applications\microsoftIE" Class="MicrosoftIE_Object">
      select * from MicrosoftIE_Object</WQL>
    <WQL Namespace="root/cimv2\applications\microsoftIE" Class="MicrosoftIE_Publisher">
      select * from MicrosoftIE_Publisher</WQL>
    <WQL Namespace="root/cimv2\applications\microsoftIE" Class="MicrosoftIE_Security">
      select * from MicrosoftIE_Security</WQL>
    <WQL Namespace="root/cimv2\applications\microsoftIE" Class="MicrosoftIE_Summary">
      select * from MicrosoftIE_Summary</WQL>
<WQL Namespace="root/cimv2" Class="Win32_PageFileUsage">SELECT Caption FROM Win32_PageFileUsage</WQL>
<WQL Namespace="root/cimv2" Class="Win32_Processor">SELECT Description, Manufacturer, MaxClockSpeed FROM Win32_Processor</WQL>
<WQL Namespace="root/cimv2" Class="Win32_PhysicalMemory">SELECT Capacity FROM Win32_PhysicalMemory</WQL>
<WQL Namespace="root/cimv2" Class="Win32_ComputerSystem">SELECT Name, Manufacturer, Model, SystemType, UserName FROM Win32_ComputerSystem</WQL>
<WQL Namespace="root/cimv2" Class="Win32_TimeZone">SELECT * FROM Win32_TimeZone</WQL>
<WQL Namespace="root/cimv2" Class="Win32_DeviceMemoryAddress">SELECT * FROM Win32_DeviceMemoryAddress</WQL>
<WQL Namespace="root/cimv2" Class="Win32_DMAChannel">SELECT * FROM Win32_DMAChannel</WQL>
<WQL Namespace="root/cimv2" Class="Win32_IRQResource">SELECT * FROM Win32_IRQResource</WQL>
<WQL Namespace="root/cimv2" Class="Win32_PnPAllocatedResource">SELECT * FROM Win32_PnPAllocatedResource</WQL>
<WQL Namespace="root/cimv2" Class="Win32_PnPSignedDriver">SELECT DeviceName, IsSigned, DeviceClass, DriverVersion, DriverDate, MFG, InfName, DriverName, DeviceID FROM Win32_PnPSignedDriver</WQL>
<WQL Namespace="root/cimv2" Class="Win32_SoundDevice">SELECT Caption, Manufacturer, Status, PNPDeviceID FROM Win32_SoundDevice</WQL>
<WQL Namespace="root/cimv2" Class="Win32_VideoController">SELECT Name, PNPDeviceID, VideoProcessor, AdapterCompatibility, Description, AdapterRAM, InstalledDisplayDrivers, DriverVersion, InfFilename, InfSection, NumberOfColorPlanes, CurrentNumberOfColors, CurrentHorizontalResolution, CurrentVerticalResolution, CurrentRefreshRate, CurrentBitsPerPixel FROM Win32_VideoController</WQL>
<WQL Namespace="root/cimv2" Class="Win32_InfraredDevice">SELECT Caption FROM Win32_InfraredDevice</WQL>
<WQL Namespace="root/cimv2" Class="Win32_Printer">SELECT Name, DriverName, PortName, ServerName FROM Win32_Printer</WQL>
<WQL Namespace="root/cimv2" Class="Win32_USBController">SELECT Caption, PNPDeviceID, __PATH FROM Win32_USBController</WQL>
<WQL Namespace="root/cimv2" Class="Win32_USBControllerDevice">SELECT * FROM Win32_USBControllerDevice</WQL>
<WQL Namespace="root/cimv2" Class="Win32_CDRomDrive">SELECT Drive, Description, MediaLoaded, MediaType, Name, Manufacturer, Status, TransferRate, SCSITargetId, PNPDeviceID FROM Win32_CDRomDrive</WQL>
<WQL Namespace="root/cimv2" Class="Win32_CIMLogicalDeviceCIMDataFile">SELECT * FROM Win32_CIMLogicalDeviceCIMDataFile</WQL>
<WQL Namespace="root/cimv2" Class="Win32_PnPEntity">SELECT Caption, PNPDeviceID, ConfigManagerErrorCode FROM Win32_PnPEntity</WQL>
<WQL Namespace="root/cimv2" Class="Win32_PnPAllocatedResource">SELECT * FROM Win32_PnPAllocatedResource</WQL>
<WQL Namespace="root/cimv2" Class="Win32_PnPSignedDriver">SELECT DeviceName, IsSigned, DeviceClass, DriverVersion, DriverDate, MFG, InfName, DriverName, DeviceID FROM Win32_PnPSignedDriver</WQL>
<WQL Namespace="root/cimv2" Class="Win32_CODECFile">SELECT EightDotThreeFileName, Manufacturer, Description, Status, Name, Version, FileSize, CreationDate, Group FROM Win32_CODECFile</WQL>
<WQL Namespace="root/cimv2" Class="Win32_Environment">SELECT Name, VariableValue, UserName FROM Win32_Environment</WQL>
<WQL Namespace="root/cimv2" Class="Win32_PrintJob">SELECT Document, Size, Owner, Notify, Status, TimeSubmitted, StartTime, UntilTime, ElapsedTime, PagesPrinted, JobId, Priority, Parameters, DriverName, PrintProcessor, HostPrintQueue, DataType, Name FROM Win32_PrintJob</WQL>
<WQL Namespace="root/cimv2" Class="Win32_Service">SELECT DisplayName, Name, State, StartMode, ServiceType, PathName, ErrorControl, StartName, TagId FROM Win32_Service</WQL>
<WQL Namespace="root/cimv2" Class="Win32_OperatingSystem">SELECT * FROM Win32_OperatingSystem</WQL>
<WQL Namespace="root/cimv2" Class="Win32_Process">SELECT Name, ExecutablePath, ProcessID, Priority, MinimumWorkingSetSize, MaximumWorkingSetSize, CreationDate FROM Win32_Process</WQL>
<WQL Namespace="root/cimv2" Class="Win32_LogicalDisk">SELECT DriveType, DeviceID, Description, Compressed, FileSystem, Size, FreeSpace, VolumeName, VolumeSerialNumber, PNPDeviceID, ProviderName FROM Win32_LogicalDisk</WQL>
<WQL Namespace="root/cimv2" Class="Win32_NetworkAdapterConfiguration">SELECT ServiceName, IPAddress, IPSubnet, DefaultIPGateway, DHCPEnabled, DHCPServer, DHCPLeaseExpires, DHCPLeaseObtained, MACAddress, Index FROM Win32_NetworkAdapterConfiguration</WQL>
<WQL Namespace="root/cimv2" Class="Win32_NetworkConnection">SELECT LocalName, RemoteName, ResourceType, ConnectionType, UserName FROM Win32_NetworkConnection</WQL>
<WQL Namespace="root/cimv2" Class="Win32_NetworkProtocol">SELECT Name, ConnectionlessService, GuaranteesDelivery, GuaranteesSequencing, MaximumAddressSize, MaximumMessageSize, MessageOriented, MinimumAddressSize, PseudoStreamOriented, SupportsBroadcasting, SupportsConnectData, SupportsDisconnectData, SupportsEncryption, SupportsExpeditedData, SupportsGracefulClosing, SupportsGuaranteedBandwidth, SupportsMulticasting FROM Win32_NetworkProtocol</WQL>
<WQL Namespace="root/cimv2" Class="Win32_NTLogEvent">SELECT TimeGenerated, SourceName, Message FROM Win32_NTLogEvent WHERE EventIdentifier = 1000</WQL>
<WQL Namespace="root/cimv2" Class="Win32_NTLogEvent">SELECT TimeGenerated, SourceName, Message FROM Win32_NTLogEvent WHERE EventIdentifier = 1001</WQL>
<WQL Namespace="root/cimv2" Class="Win32_NTLogEvent">SELECT TimeGenerated, SourceName, Message FROM Win32_NTLogEvent WHERE EventIdentifier = 1002</WQL>
<WQL Namespace="root/cimv2" Class="Win32_Keyboard">SELECT Description, Name, Layout, PNPDeviceID, NumberOfFunctionKeys FROM Win32_Keyboard</WQL>
<WQL Namespace="root/cimv2" Class="Win32_PointingDevice">SELECT HardwareType, NumberOfButtons, Status, PNPDeviceID, PowerManagementSupported, DoubleSpeedThreshold, Handedness FROM Win32_PointingDevice</WQL>
<WQL Namespace="root/cimv2" Class="Win32_SerialPort">SELECT Name, Status, PNPDeviceID, MaximumInputBufferSize, MaximumOutputBufferSize, SettableBaudRate, SettableDataBits, SettableFlowControl, SettableParity, SettableParityCheck, SettableStopBits, SettableRLSD, SupportsRLSD, Supports16BitMode, SupportsSpecialCharacters, DeviceID FROM Win32_SerialPort</WQL>
<WQL Namespace="root/cimv2" Class="Win32_SerialPortConfiguration">SELECT BaudRate, BitsPerByte, StopBits, Parity, IsBusy, AbortReadWriteOnError, BinaryModeEnabled, ContinueXMitOnXOff, CTSOutflowControl, DiscardNULLBytes, DSROutflowControl, DSRSensitivity, DTRFlowControlType, EOFCharacter, ErrorReplaceCharacter, ErrorReplacementEnabled, EventCharacter, ParityCheckEnabled, RTSFlowControlType, XOffCharacter, XOffXMitThreshold, XOnCharacter, XOnXMitThreshold, XOnXOffInFlowControl, XOnXOffOutFlowControl, Name FROM Win32_SerialPortConfiguration</WQL>
<WQL Namespace="root/cimv2" Class="Win32_ParallelPort">SELECT Name, PNPDeviceID FROM Win32_ParallelPort</WQL>
<WQL Namespace="root/cimv2" Class="Win32_DiskDrive">SELECT Description, Manufacturer, Model, BytesPerSector, MediaLoaded, MediaType, Partitions, SCSIBus, SCSILogicalUnit, SCSIPort, SCSITargetId, SectorsPerTrack, Size, TotalCylinders, TotalSectors, TotalTracks, TracksPerCylinder, PNPDeviceID, Index FROM Win32_DiskDrive</WQL>
<WQL Namespace="root/cimv2" Class="Win32_DiskPartition">SELECT Caption, Size, StartingOffset, DiskIndex FROM Win32_DiskPartition</WQL>
<WQL Namespace="root/cimv2" Class="Win32_IDEController">SELECT Caption, Manufacturer, Status, PNPDeviceID FROM Win32_IDEController</WQL>
<WQL Namespace="root/cimv2" Class="Win32_BIOS">SELECT Version, SMBIOSPresent, SMBIOSBIOSVersion, ReleaseDate FROM Win32_BIOS</WQL>
<WQL Namespace="root/cimv2" Class="Win32_PortResource">SELECT * FROM Win32_PortResource</WQL>
<WQL Namespace="root/cimv2" Class="Win32_POTSModem">SELECT Caption, Description, DeviceID, DeviceType, AttachedTo, AnswerMode, PNPDeviceID, ProviderName, ModemInfPath, ModemInfSection, BlindOff, BlindOn, CompressionOff, CompressionOn, ErrorControlForced, ErrorControlOff, ErrorControlOn, FlowControlHard, FlowControlOff, FlowControlSoft, DCB, Default, InactivityTimeout, ModulationBell, ModulationCCITT, Prefix, Properties, Pulse, Reset, ResponsesKeyName, SpeakerModeDial, SpeakerModeOff, SpeakerModeOn, SpeakerModeSetup, SpeakerVolumeHigh, SpeakerVolumeLow, SpeakerVolumeMed, StringFormat, Terminator, Tone FROM Win32_POTSModem</WQL>
<WQL Namespace="root/cimv2" Class="Win32_StartupCommand">SELECT Caption, Command, User, Location FROM Win32_StartupCommand</WQL>
<WQL Namespace="root/cimv2" Class="Win32_SystemDriver">SELECT Name, Description, PathName, ServiceType, Started, StartMode, State, Status, ErrorControl, AcceptPause, AcceptStop FROM Win32_SystemDriver</WQL>
<WQL Namespace="root/cimv2" Class="Win32_ProgramGroup">SELECT GroupName, Name, UserName FROM Win32_ProgramGroup</WQL>
<WQL Namespace="root/cimv2" Class="Win32_SCSIController">SELECT Caption, Manufacturer, Status, PNPDeviceID FROM Win32_SCSIController</WQL>
</DataSpec>
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\pchealth\helpctr\pss\content\package_description.xml ===
< ? x m l   v e r s i o n = " 1 . 0 "   e n c o d i n g = " U T F - 1 6 " ? > 
 
 < H E L P C E N T E R P A C K A G E > 
 
         < S K U   V A L U E = " A L L " / > 
 
         < L A N G U A G E   V A L U E = " A L L " / > 
 
         < V E R S I O N   V A L U E = " 0 1 . 0 1 . 0 1 . 2 2 "   / > 
 
         < P R O D U C T   I D = " P S S   O n l i n e   A s s i s t e d   S u p p o r t "   / > 
 
         < C O N F I G > 
 
                 < S A F   A C T I O N = " A D D "   F I L E = " p s s . x m l " / > 
 
         < / C O N F I G > 
 
         < I N S T A L L _ C O N T E N T > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " p s s m a c h i n e s n a p s h o t . x m l "   U R I = " p s s m a c h i n e s n a p s h o t . x m l " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " p s s m a c h i n e s n a p s h o t - l e s s . x m l "   U R I = " p s s m a c h i n e s n a p s h o t - l e s s . x m l " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " p s s m a c h i n e s n a p s h o t - w o - c o m . x m l "   U R I = " p s s m a c h i n e s n a p s h o t - w o - c o m . x m l " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " O f f l i n e O p t i o n s . h t m "   U R I = " O f f l i n e O p t i o n s . h t m " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " O f f l i n e D C . h t m "   U R I = " O f f l i n e D C . h t m " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " C o n n e c t i o n . h t m "   U R I = " C o n n e c t i o n . h t m " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " s p a c e r . g i f "   U R I = " s p a c e r . g i f " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " r 3 _ c 2 . g i f "   U R I = " r 3 _ c 2 . g i f " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " r 1 _ c 3 . g i f "   U R I = " r 1 _ c 3 . g i f " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " r 1 _ c 2 . g i f "   U R I = " r 1 _ c 2 . g i f " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " r 1 _ c 1 . g i f "   U R I = " r 1 _ c 1 . g i f " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " I n f o _ I c o n . g i f "   U R I = " I n f o _ I c o n . g i f " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " G R e c t . g i f "   U R I = " G R e c t . g i f " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " G A r r o w . g i f "   U R I = " G A r r o w . g i f " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " s t a t u s _ o k . g i f "   U R I = " s t a t u s _ o k . g i f " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " P S S . c s s "   U R I = " P S S . c s s " / > 
 
         < / I N S T A L L _ C O N T E N T > 
 
         < T R U S T E D _ C O N T E N T > 
 
                 < T R U S T E D   A C T I O N = " A D D "   U R I = " h c p : / / C N = M i c r o s o f t % 2 0 C o r p o r a t i o n , L = R e d m o n d , S = W a s h i n g t o n , C = U S / "   / > 
 
                 < T R U S T E D   A C T I O N = " A D D "   U R I = " h t t p s : / / w e b r e s p o n s e . o n e . m i c r o s o f t . c o m / " / > 
 
                 < T R U S T E D   A C T I O N = " A D D "   U R I = " h t t p s : / / r a . m i c r o s o f t . c o m / " / > 
 
                 < T R U S T E D   A C T I O N = " A D D "   U R I = " h t t p : / / w i n d o w s . m i c r o s o f t . c o m / w i n d o w s x p " / > 
 
         < / T R U S T E D _ C O N T E N T > 
 
         < S E A R C H E N G I N E S > 
 
                 < W R A P P E R 
 
                 	 C L S I D       =   " { 8 3 3 E 4 0 1 6 - A F F 7 - 4 A C 3 - A A C 2 - 9 F 2 4 C 1 4 5 7 B C E } " 
 
                 	 I D     =   " D 2 3 D 0 0 2 8 - A 5 4 3 - 4 7 6 7 - B 4 A A - 1 5 8 1 D 8 E 1 C D B 2 " 
 
                 	 N A M E         =   " N e t   S e a r c h   W r a p p e r " 
 
                 	 A C T I O N     =   " A D D " > 
 
                 	 < D A T A > 
 
                 	 	 < C O N F I G _ D A T A 
 
                 	 	 	 S T A N D A R D _ S E A R C H = " 0 " 
 
                 	 	 	 S E R V E R _ U R L = " h t t p : / / g o . m i c r o s o f t . c o m / f w l i n k / ? l i n k i d = 2 7 2 & a m p ; c l c i d = 0 x 4 0 9 " 
 
                 	 	 	 R E M O T E C O N F I G _ S E R V E R _ U R L   =   " h t t p : / / g o . m i c r o s o f t . c o m / f w l i n k / ? l i n k i d = 2 7 7 & a m p ; c l c i d = 0 x 4 0 9 " 
 
                 	 	 	 U P D A T E _ F R E Q U E N C Y = " 7 " > 
 
 	         
 
                 	 	 	 < S E A R C H E N G I N E _ O W N E R > M i c r o s o f t   C o r p o r a t i o n < / S E A R C H E N G I N E _ O W N E R > 
 
                 	 	 	 < S E A R C H E N G I N E _ N A M E > M i c r o s o f t   K n o w l e d g e   B a s e < / S E A R C H E N G I N E _ N A M E > 
 
                 	 	 	 < S E A R C H E N G I N E _ D E S C R I P T I O N > D i s p l a y s   r e l e v a n t   t o p i c s   o r   a r t i c l e s   f r o m   t h e   M i c r o s o f t   K n o w l e d g e   B a s e   W e b   s i t e .   T h e   K n o w l e d g e   B a s e   i s   a   s o u r c e   o f   t e c h n i c a l   s u p p o r t   i n f o r m a t i o n   a n d   s e l f - h e l p   t o o l s   f o r   M i c r o s o f t   p r o d u c t s . < / S E A R C H E N G I N E _ D E S C R I P T I O N > 
 
 	         
 
                 	 	 	 	 < P A R A M _ I T E M   N A M E = " T i t l e s "   T Y P E = " P A R A M _ B O O L "   V I S I B L E = " t r u e " > 
 
                 	 	 	 	 	 < D E S C R I P T I O N > S e a r c h   i n   t i t l e   o n l y < / D E S C R I P T I O N > 
 
                 	 	 	 	 	 < P A R A M _ V A L U E   V A L U E = " f a l s e "   D E F A U L T = " t r u e " / > 
 
                 	 	 	 	 < / P A R A M _ I T E M > 
 
 	         
 
                 	 	 	 	 < P A R A M _ I T E M   N A M E = " P r o d u c t "   T Y P E = " P A R A M _ L I S T "   V I S I B L E = " t r u e " > 
 
 	         
 
                 	 	 	 	 	 < D E S C R I P T I O N > S e l e c t   a   p r o d u c t   o r   t o p i c : < / D E S C R I P T I O N > 
 
 	         
 
                 	 	 	 	 	 < P A R A M _ V A L U E   V A L U E = " m s a l l " > 
 
                 	 	 	 	 	 	 < D I S P L A Y S T R I N G > A l l   W i n d o w s   P r o d u c t s < / D I S P L A Y S T R I N G > 
 
                 	 	 	 	 	 < / P A R A M _ V A L U E > 
 
 	         
 
                 	 	 	 	 	 < P A R A M _ V A L U E   V A L U E = " e n a b l e " > 
 
                 	 	 	 	 	 	 < D I S P L A Y S T R I N G > A c c e s s i b i l i t y < / D I S P L A Y S T R I N G > 
 
                 	 	 	 	 	 < / P A R A M _ V A L U E > 
 
 	         
 
                 	 	 	 	 	 < P A R A M _ V A L U E   V A L U E = " a s p " > 
 
                 	 	 	 	 	 	 < D I S P L A Y S T R I N G > A c t i v e   S e r v e r   P a g e s < / D I S P L A Y S T R I N G > 
 
                 	 	 	 	 	 < / P A R A M _ V A L U E > 
 
 	         
 
                 	 	 	 	 	 < P A R A M _ V A L U E   V A L U E = " i e x " > 
 
                 	 	 	 	 	 	 < D I S P L A Y S T R I N G > C h a t < / D I S P L A Y S T R I N G > 
 
                 	 	 	 	 	 < / P A R A M _ V A L U E > 
 
 	         
 
                 	 	 	 	 	 < P A R A M _ V A L U E   V A L U E = " c o m p l u s " > 
 
                 	 	 	 	 	 	 < D I S P L A Y S T R I N G > C O M + < / D I S P L A Y S T R I N G > 
 
                 	 	 	 	 	 < / P A R A M _ V A L U E > 
 
 	         
 
                 	 	 	 	 	 < P A R A M _ V A L U E   V A L U E = " o e m " > 
 
                 	 	 	 	 	 	 < D I S P L A Y S T R I N G > D e v i c e   D r i v e r s < / D I S P L A Y S T R I N G > 
 
                 	 	 	 	 	 < / P A R A M _ V A L U E > 
 
 	         
 
                 	 	 	 	 	 < P A R A M _ V A L U E   V A L U E = " d r x " > 
 
                 	 	 	 	 	 	 < D I S P L A Y S T R I N G > D i r e c t X   ( H o m e   U s e r ) < / D I S P L A Y S T R I N G > 
 
                 	 	 	 	 	 < / P A R A M _ V A L U E > 
 
 	         
 
                 	 	 	 	 	 < P A R A M _ V A L U E   V A L U E = " g m s " > 
 
                 	 	 	 	 	 	 < D I S P L A Y S T R I N G > G a m e s < / D I S P L A Y S T R I N G > 
 
                 	 	 	 	 	 < / P A R A M _ V A L U E > 
 
 	         
 
                 	 	 	 	 	 < P A R A M _ V A L U E   V A L U E = " g w i n " > 
 
                 	 	 	 	 	 	 < D I S P L A Y S T R I N G > G e t t i n g   t h e   M o s t   O u t   o f   W i n d o w s < / D I S P L A Y S T R I N G > 
 
                 	 	 	 	 	 < / P A R A M _ V A L U E > 
 
 	         
 
                 	 	 	 	 	 < P A R A M _ V A L U E   V A L U E = " h d w " > 
 
                 	 	 	 	 	 	 < D I S P L A Y S T R I N G > H a r d w a r e   P r o d u c t s < / D I S P L A Y S T R I N G > 
 
                 	 	 	 	 	 < / P A R A M _ V A L U E > 
 
 	         
 
                 	 	 	 	 	 < P A R A M _ V A L U E   V A L U E = " g s h p " > 
 
                 	 	 	 	 	 	 < D I S P L A Y S T R I N G > H o m e   P u b l i s h i n g < / D I S P L A Y S T R I N G > 
 
                 	 	 	 	 	 < / P A R A M _ V A L U E > 
 
 	         
 
                 	 	 	 	 	 < P A R A M _ V A L U E   V A L U E = " i s " > 
 
                 	 	 	 	 	 	 < D I S P L A Y S T R I N G > I n d e x   S e r v e r < / D I S P L A Y S T R I N G > 
 
                 	 	 	 	 	 < / P A R A M _ V A L U E > 
 
 	         
 
                 	 	 	 	 	 < P A R A M _ V A L U E   V A L U E = " i e " > 
 
                 	 	 	 	 	 	 < D I S P L A Y S T R I N G > I n t e r n e t   E x p l o r e r < / D I S P L A Y S T R I N G > 
 
                 	 	 	 	 	 < / P A R A M _ V A L U E > 
 
 	         
 
                 	 	 	 	 	 < P A R A M _ V A L U E   V A L U E = " i e a k " > 
 
                 	 	 	 	 	 	 < D I S P L A Y S T R I N G > I n t e r n e t   E x p l o r e r   A d m i n i s t r a t i o n   K i t < / D I S P L A Y S T R I N G > 
 
                 	 	 	 	 	 < / P A R A M _ V A L U E > 
 
 	         
 
                 	 	 	 	 	 < P A R A M _ V A L U E   V A L U E = " i i s 5 0 " > 
 
                 	 	 	 	 	 	 < D I S P L A Y S T R I N G > I n t e r n e t   I n f o r m a t i o n   S e r v i c e s < / D I S P L A Y S T R I N G > 
 
                 	 	 	 	 	 < / P A R A M _ V A L U E > 
 
 	         
 
                 	 	 	 	 	 < P A R A M _ V A L U E   V A L U E = " i m n " > 
 
                 	 	 	 	 	 	 < D I S P L A Y S T R I N G > I n t e r n e t   M a i l   a n d   N e w s < / D I S P L A Y S T R I N G > 
 
                 	 	 	 	 	 < / P A R A M _ V A L U E > 
 
 	         
 
                 	 	 	 	 	 < P A R A M _ V A L U E   V A L U E = " n k e y " > 
 
                 	 	 	 	 	 	 < D I S P L A Y S T R I N G > K e y b o a r d s < / D I S P L A Y S T R I N G > 
 
                 	 	 	 	 	 < / P A R A M _ V A L U E > 
 
 	         
 
                 	 	 	 	 	 < P A R A M _ V A L U E   V A L U E = " m d a c " > 
 
                 	 	 	 	 	 	 < D I S P L A Y S T R I N G > M D A C < / D I S P L A Y S T R I N G > 
 
                 	 	 	 	 	 < / P A R A M _ V A L U E > 
 
 	         
 
                 	 	 	 	 	 < P A R A M _ V A L U E   V A L U E = " m s q " > 
 
                 	 	 	 	 	 	 < D I S P L A Y S T R I N G > M e s s a g e   Q u e u e < / D I S P L A Y S T R I N G > 
 
                 	 	 	 	 	 < / P A R A M _ V A L U E > 
 
 	         
 
                 	 	 	 	 	 < P A R A M _ V A L U E   V A L U E = " M M C " > 
 
                 	 	 	 	 	 	 < D I S P L A Y S T R I N G > M i c r o s o f t   M a n a g e m e n t   C o n s o l e < / D I S P L A Y S T R I N G > 
 
                 	 	 	 	 	 < / P A R A M _ V A L U E > 
 
 	         
 
                 	 	 	 	 	 < P A R A M _ V A L U E   V A L U E = " m s d o s " > 
 
                 	 	 	 	 	 	 < D I S P L A Y S T R I N G > M S - D O S < / D I S P L A Y S T R I N G > 
 
                 	 	 	 	 	 < / P A R A M _ V A L U E > 
 
 	         
 
                 	 	 	 	 	 < P A R A M _ V A L U E   V A L U E = " n m t " > 
 
                 	 	 	 	 	 	 < D I S P L A Y S T R I N G > N e t M e e t i n g < / D I S P L A Y S T R I N G > 
 
                 	 	 	 	 	 < / P A R A M _ V A L U E > 
 
 	         
 
                 	 	 	 	 	 < P A R A M _ V A L U E   V A L U E = " n t w k " > 
 
                 	 	 	 	 	 	 < D I S P L A Y S T R I N G > N e t w o r k i n g < / D I S P L A Y S T R I N G > 
 
                 	 	 	 	 	 < / P A R A M _ V A L U E > 
 
 	         
 
                 	 	 	 	 	 < P A R A M _ V A L U E   V A L U E = " o d b c " > 
 
                 	 	 	 	 	 	 < D I S P L A Y S T R I N G > O D B C < / D I S P L A Y S T R I N G > 
 
                 	 	 	 	 	 < / P A R A M _ V A L U E > 
 
 	         
 
                 	 	 	 	 	 < P A R A M _ V A L U E   V A L U E = " o e x " > 
 
                 	 	 	 	 	 	 < D I S P L A Y S T R I N G > O u t l o o k   E x p r e s s < / D I S P L A Y S T R I N G > 
 
                 	 	 	 	 	 < / P A R A M _ V A L U E > 
 
 	         
 
                 	 	 	 	 	 < P A R A M _ V A L U E   V A L U E = " m o s " > 
 
                 	 	 	 	 	 	 < D I S P L A Y S T R I N G > P o i n t i n g   D e v i c e s   ( M i c e ) < / D I S P L A Y S T R I N G > 
 
                 	 	 	 	 	 < / P A R A M _ V A L U E > 
 
 	         
 
                 	 	 	 	 	 < P A R A M _ V A L U E   V A L U E = " p r n t " > 
 
                 	 	 	 	 	 	 < D I S P L A Y S T R I N G > P r i n t i n g < / D I S P L A Y S T R I N G > 
 
                 	 	 	 	 	 < / P A R A M _ V A L U E > 
 
 	         
 
                 	 	 	 	 	 < P A R A M _ V A L U E   V A L U E = " s e t i n s t " > 
 
                 	 	 	 	 	 	 < D I S P L A Y S T R I N G > S e t u p   a n d   I n s t a l l a t i o n < / D I S P L A Y S T R I N G > 
 
                 	 	 	 	 	 < / P A R A M _ V A L U E > 
 
 	         
 
                 	 	 	 	 	 < P A R A M _ V A L U E   V A L U E = " s o u n d " > 
 
                 	 	 	 	 	 	 < D I S P L A Y S T R I N G > S o u n d < / D I S P L A Y S T R I N G > 
 
                 	 	 	 	 	 < / P A R A M _ V A L U E > 
 
 	         
 
                 	 	 	 	 	 < P A R A M _ V A L U E   V A L U E = " t e r m s v r " > 
 
                 	 	 	 	 	 	 < D I S P L A Y S T R I N G > T e r m i n a l   S e r v e r < / D I S P L A Y S T R I N G > 
 
                 	 	 	 	 	 < / P A R A M _ V A L U E > 
 
 	         
 
                 	 	 	 	 	 < P A R A M _ V A L U E   V A L U E = " t r b l " > 
 
                 	 	 	 	 	 	 < D I S P L A Y S T R I N G > T r o u b l e s h o o t i n g   W i z a r d s < / D I S P L A Y S T R I N G > 
 
                 	 	 	 	 	 < / P A R A M _ V A L U E > 
 
 	         
 
                 	 	 	 	 	 < P A R A M _ V A L U E   V A L U E = " w i n 2 0 0 0 "   D E F A U L T = " t r u e " > 
 
                 	 	 	 	 	 	 < D I S P L A Y S T R I N G > W i n d o w s   2 0 0 0 < / D I S P L A Y S T R I N G > 
 
                 	 	 	 	 	 < / P A R A M _ V A L U E > 
 
 	         
 
                 	 	 	 	 	 < P A R A M _ V A L U E   V A L U E = " W i n 2 0 0 0 D e v " > 
 
                 	 	 	 	 	 	 < D I S P L A Y S T R I N G > W i n d o w s   2 0 0 0   D e v e l o p e r < / D I S P L A Y S T R I N G > 
 
                 	 	 	 	 	 < / P A R A M _ V A L U E > 
 
 	         
 
                 	 	 	 	 	 < P A R A M _ V A L U E   V A L U E = " W 2 k H m U s e " > 
 
                 	 	 	 	 	 	 < D I S P L A Y S T R I N G > W i n d o w s   2 0 0 0   H o m e   U s e r s < / D I S P L A Y S T R I N G > 
 
                 	 	 	 	 	 < / P A R A M _ V A L U E > 
 
 	         
 
                 	 	 	 	 	 < P A R A M _ V A L U E   V A L U E = " w c e " > 
 
                 	 	 	 	 	 	 < D I S P L A Y S T R I N G > W i n d o w s   C E < / D I S P L A Y S T R I N G > 
 
                 	 	 	 	 	 < / P A R A M _ V A L U E > 
 
 	         
 
                 	 	 	 	 	 < P A R A M _ V A L U E   V A L U E = " w i n c e h h " > 
 
                 	 	 	 	 	 	 < D I S P L A Y S T R I N G > W i n d o w s   C E   f o r   t h e   H a n d h e l d   P C < / D I S P L A Y S T R I N G > 
 
                 	 	 	 	 	 < / P A R A M _ V A L U E > 
 
 	         
 
                 	 	 	 	 	 < P A R A M _ V A L U E   V A L U E = " w i n c e p c " > 
 
                 	 	 	 	 	 	 < D I S P L A Y S T R I N G > W i n d o w s   C E   f o r   t h e   P a l m - s i z e   P C < / D I S P L A Y S T R I N G > 
 
                 	 	 	 	 	 < / P A R A M _ V A L U E > 
 
 	         
 
                 	 	 	 	 	 < P A R A M _ V A L U E   V A L U E = " w m p " > 
 
                 	 	 	 	 	 	 < D I S P L A Y S T R I N G > W i n d o w s   M e d i a   P l a y e r < / D I S P L A Y S T R I N G > 
 
                 	 	 	 	 	 < / P A R A M _ V A L U E > 
 
 	         
 
                 	 	 	 	 	 < P A R A M _ V A L U E   V A L U E = " w m s " > 
 
                 	 	 	 	 	 	 < D I S P L A Y S T R I N G > W i n d o w s   M e d i a   S e r v i c e s < / D I S P L A Y S T R I N G > 
 
                 	 	 	 	 	 < / P A R A M _ V A L U E > 
 
 	         
 
                 	 	 	 	 	 < P A R A M _ V A L U E   V A L U E = " w u p d " > 
 
                 	 	 	 	 	 	 < D I S P L A Y S T R I N G > W i n d o w s   U p d a t e < / D I S P L A Y S T R I N G > 
 
                 	 	 	 	 	 < / P A R A M _ V A L U E > 
 
 	         
 
                 	 	 	 	 < / P A R A M _ I T E M > 
 
 	         
 
                 	 	 	 	 < P A R A M _ I T E M   N A M E = " K e y w o r d T y p e "   T Y P E = " P A R A M _ L I S T "   V I S I B L E = " t r u e " > 
 
 	         
 
                 	 	 	 	 	 < D E S C R I P T I O N > S e a r c h   f o r : < / D E S C R I P T I O N > 
 
                 	 	 	 	 	 < P A R A M _ V A L U E   V A L U E = " A L L " > 
 
                 	 	 	 	 	 	 < D I S P L A Y S T R I N G > A l l   o f   t h e   w o r d s < / D I S P L A Y S T R I N G > 
 
                 	 	 	 	 	 < / P A R A M _ V A L U E > 
 
 	         
 
                 	 	 	 	 	 < P A R A M _ V A L U E   V A L U E = " A N Y "   D E F A U L T = " t r u e " > 
 
                 	 	 	 	 	 	 < D I S P L A Y S T R I N G > A n y   o f   t h e   w o r d s < / D I S P L A Y S T R I N G > 
 
                 	 	 	 	 	 < / P A R A M _ V A L U E > 
 
 	         
 
                 	 	 	 	 	 < P A R A M _ V A L U E   V A L U E = " P H R A S E " > 
 
                 	 	 	 	 	 	 < D I S P L A Y S T R I N G > T h e   e x a c t   p h r a s e < / D I S P L A Y S T R I N G > 
 
                 	 	 	 	 	 < / P A R A M _ V A L U E > 
 
 	         
 
                 	 	 	 	 	 < P A R A M _ V A L U E   V A L U E = " B O O L E A N " > 
 
                 	 	 	 	 	 	 < D I S P L A Y S T R I N G > T h e   B o o l e a n   p h r a s e < / D I S P L A Y S T R I N G > 
 
                 	 	 	 	 	 < / P A R A M _ V A L U E > 
 
 	         
 
                 	 	 	 	 < / P A R A M _ I T E M > 
 
 	         
 
                 	 	 < / C O N F I G _ D A T A > 
 
 	         
 
                 	 < / D A T A > 
 
                 < / W R A P P E R > 
 
         < / S E A R C H E N G I N E S > 
 
 < / H E L P C E N T E R P A C K A G E > 
 
 
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\pchealth\helpctr\pss\content\pssmachinesnapshot.xml ===
<?xml version="1.0" ?>
<DataSpec GUID="47DE97C8-F86B-11d2-9628-00C04F68F2AF">
    <WQL Namespace="root/cimv2\applications\microsoftIE" Class="MicrosoftIE_Cache">
      select * from MicrosoftIE_Cache</WQL>
    <WQL Namespace="root/cimv2\applications\microsoftIE" Class="MicrosoftIE_Certificate">
      select * from MicrosoftIE_Certificate</WQL>
    <WQL Namespace="root/cimv2\applications\microsoftIE" Class="MicrosoftIE_ConnectionSettings">
      select * from MicrosoftIE_ConnectionSettings</WQL>
    <WQL Namespace="root/cimv2\applications\microsoftIE" Class="MicrosoftIE_ConnectionSummary">
      select * from MicrosoftIE_ConnectionSummary</WQL>
    <WQL Namespace="root/cimv2\applications\microsoftIE" Class="MicrosoftIE_ElementSetting">
      select * from MicrosoftIE_ElementSetting</WQL>
    <WQL Namespace="root/cimv2\applications\microsoftIE" Class="MicrosoftIE_FileVersion">
      select * from MicrosoftIE_FileVersion</WQL>
    <WQL Namespace="root/cimv2\applications\microsoftIE" Class="MicrosoftIE_InternetExplorer">
      select * from MicrosoftIE_InternetExplorer</WQL>
    <WQL Namespace="root/cimv2\applications\microsoftIE" Class="MicrosoftIE_LanSettings">
      select * from MicrosoftIE_LanSettings</WQL>
    <WQL Namespace="root/cimv2\applications\microsoftIE" Class="MicrosoftIE_Object">
      select * from MicrosoftIE_Object</WQL>
    <WQL Namespace="root/cimv2\applications\microsoftIE" Class="MicrosoftIE_Publisher">
      select * from MicrosoftIE_Publisher</WQL>
    <WQL Namespace="root/cimv2\applications\microsoftIE" Class="MicrosoftIE_Security">
      select * from MicrosoftIE_Security</WQL>
    <WQL Namespace="root/cimv2\applications\microsoftIE" Class="MicrosoftIE_Summary">
      select * from MicrosoftIE_Summary</WQL>
<WQL Namespace="root/cimv2" Class="Win32_PageFileUsage">SELECT Caption FROM Win32_PageFileUsage</WQL>
<WQL Namespace="root/cimv2" Class="Win32_Processor">SELECT Description, Manufacturer, MaxClockSpeed FROM Win32_Processor</WQL>
<WQL Namespace="root/cimv2" Class="Win32_PhysicalMemory">SELECT Capacity FROM Win32_PhysicalMemory</WQL>
<WQL Namespace="root/cimv2" Class="Win32_ComputerSystem">SELECT Name, Manufacturer, Model, SystemType, UserName FROM Win32_ComputerSystem</WQL>
<WQL Namespace="root/cimv2" Class="Win32_TimeZone">SELECT * FROM Win32_TimeZone</WQL>
<WQL Namespace="root/cimv2" Class="Win32_DeviceMemoryAddress">SELECT * FROM Win32_DeviceMemoryAddress</WQL>
<WQL Namespace="root/cimv2" Class="Win32_DMAChannel">SELECT * FROM Win32_DMAChannel</WQL>
<WQL Namespace="root/cimv2" Class="Win32_IRQResource">SELECT * FROM Win32_IRQResource</WQL>
<WQL Namespace="root/cimv2" Class="Win32_PnPAllocatedResource">SELECT * FROM Win32_PnPAllocatedResource</WQL>
<WQL Namespace="root/cimv2" Class="Win32_PnPSignedDriver">SELECT DeviceName, IsSigned, DeviceClass, DriverVersion, DriverDate, MFG, InfName, DriverName, DeviceID FROM Win32_PnPSignedDriver</WQL>
<WQL Namespace="root/cimv2" Class="Win32_SoundDevice">SELECT Caption, Manufacturer, Status, PNPDeviceID FROM Win32_SoundDevice</WQL>
<WQL Namespace="root/cimv2" Class="Win32_VideoController">SELECT Name, PNPDeviceID, VideoProcessor, AdapterCompatibility, Description, AdapterRAM, InstalledDisplayDrivers, DriverVersion, InfFilename, InfSection, NumberOfColorPlanes, CurrentNumberOfColors, CurrentHorizontalResolution, CurrentVerticalResolution, CurrentRefreshRate, CurrentBitsPerPixel FROM Win32_VideoController</WQL>
<WQL Namespace="root/cimv2" Class="Win32_InfraredDevice">SELECT Caption FROM Win32_InfraredDevice</WQL>
<WQL Namespace="root/cimv2" Class="Win32_Printer">SELECT Name, DriverName, PortName, ServerName FROM Win32_Printer</WQL>
<WQL Namespace="root/cimv2" Class="Win32_USBController">SELECT Caption, PNPDeviceID, __PATH FROM Win32_USBController</WQL>
<WQL Namespace="root/cimv2" Class="Win32_USBControllerDevice">SELECT * FROM Win32_USBControllerDevice</WQL>
<WQL Namespace="root/cimv2" Class="Win32_CDRomDrive">SELECT Drive, Description, MediaLoaded, MediaType, Name, Manufacturer, Status, TransferRate, SCSITargetId, PNPDeviceID FROM Win32_CDRomDrive</WQL>
<WQL Namespace="root/cimv2" Class="Win32_CIMLogicalDeviceCIMDataFile">SELECT * FROM Win32_CIMLogicalDeviceCIMDataFile</WQL>
<WQL Namespace="root/cimv2" Class="Win32_PnPEntity">SELECT Caption, PNPDeviceID, ConfigManagerErrorCode FROM Win32_PnPEntity</WQL>
<WQL Namespace="root/cimv2" Class="Win32_PnPAllocatedResource">SELECT * FROM Win32_PnPAllocatedResource</WQL>
<WQL Namespace="root/cimv2" Class="Win32_PnPSignedDriver">SELECT DeviceName, IsSigned, DeviceClass, DriverVersion, DriverDate, MFG, InfName, DriverName, DeviceID FROM Win32_PnPSignedDriver</WQL>
<WQL Namespace="root/cimv2" Class="Win32_CODECFile">SELECT EightDotThreeFileName, Manufacturer, Description, Status, Name, Version, FileSize, CreationDate, Group FROM Win32_CODECFile</WQL>
<WQL Namespace="root/cimv2" Class="Win32_Environment">SELECT Name, VariableValue, UserName FROM Win32_Environment</WQL>
<WQL Namespace="root/cimv2" Class="Win32_PrintJob">SELECT Document, Size, Owner, Notify, Status, TimeSubmitted, StartTime, UntilTime, ElapsedTime, PagesPrinted, JobId, Priority, Parameters, DriverName, PrintProcessor, HostPrintQueue, DataType, Name FROM Win32_PrintJob</WQL>
<WQL Namespace="root/cimv2" Class="Win32_Service">SELECT DisplayName, Name, State, StartMode, ServiceType, PathName, ErrorControl, StartName, TagId FROM Win32_Service</WQL>
<WQL Namespace="root/cimv2" Class="Win32_OperatingSystem">SELECT * FROM Win32_OperatingSystem</WQL>
<WQL Namespace="root/cimv2" Class="Win32_Process">SELECT Name, ExecutablePath, ProcessID, Priority, MinimumWorkingSetSize, MaximumWorkingSetSize, CreationDate FROM Win32_Process</WQL>
<WQL Namespace="root/cimv2" Class="Win32_LogicalDisk">SELECT DriveType, DeviceID, Description, Compressed, FileSystem, Size, FreeSpace, VolumeName, VolumeSerialNumber, PNPDeviceID, ProviderName FROM Win32_LogicalDisk</WQL>
<WQL Namespace="root/cimv2" Class="Win32_NetworkAdapterConfiguration">SELECT ServiceName, IPAddress, IPSubnet, DefaultIPGateway, DHCPEnabled, DHCPServer, DHCPLeaseExpires, DHCPLeaseObtained, MACAddress, Index FROM Win32_NetworkAdapterConfiguration</WQL>
<WQL Namespace="root/cimv2" Class="Win32_NetworkConnection">SELECT LocalName, RemoteName, ResourceType, ConnectionType, UserName FROM Win32_NetworkConnection</WQL>
<WQL Namespace="root/cimv2" Class="Win32_NetworkProtocol">SELECT Name, ConnectionlessService, GuaranteesDelivery, GuaranteesSequencing, MaximumAddressSize, MaximumMessageSize, MessageOriented, MinimumAddressSize, PseudoStreamOriented, SupportsBroadcasting, SupportsConnectData, SupportsDisconnectData, SupportsEncryption, SupportsExpeditedData, SupportsGracefulClosing, SupportsGuaranteedBandwidth, SupportsMulticasting FROM Win32_NetworkProtocol</WQL>
<WQL Namespace="root/cimv2" Class="Win32_NTLogEvent">SELECT TimeGenerated, SourceName, Message FROM Win32_NTLogEvent WHERE EventIdentifier = 1000</WQL>
<WQL Namespace="root/cimv2" Class="Win32_NTLogEvent">SELECT TimeGenerated, SourceName, Message FROM Win32_NTLogEvent WHERE EventIdentifier = 1001</WQL>
<WQL Namespace="root/cimv2" Class="Win32_NTLogEvent">SELECT TimeGenerated, SourceName, Message FROM Win32_NTLogEvent WHERE EventIdentifier = 1002</WQL>
<WQL Namespace="root/cimv2" Class="Win32_Keyboard">SELECT Description, Name, Layout, PNPDeviceID, NumberOfFunctionKeys FROM Win32_Keyboard</WQL>
<WQL Namespace="root/cimv2" Class="Win32_PointingDevice">SELECT HardwareType, NumberOfButtons, Status, PNPDeviceID, PowerManagementSupported, DoubleSpeedThreshold, Handedness FROM Win32_PointingDevice</WQL>
<WQL Namespace="root/cimv2" Class="Win32_SerialPort">SELECT Name, Status, PNPDeviceID, MaximumInputBufferSize, MaximumOutputBufferSize, SettableBaudRate, SettableDataBits, SettableFlowControl, SettableParity, SettableParityCheck, SettableStopBits, SettableRLSD, SupportsRLSD, Supports16BitMode, SupportsSpecialCharacters, DeviceID FROM Win32_SerialPort</WQL>
<WQL Namespace="root/cimv2" Class="Win32_SerialPortConfiguration">SELECT BaudRate, BitsPerByte, StopBits, Parity, IsBusy, AbortReadWriteOnError, BinaryModeEnabled, ContinueXMitOnXOff, CTSOutflowControl, DiscardNULLBytes, DSROutflowControl, DSRSensitivity, DTRFlowControlType, EOFCharacter, ErrorReplaceCharacter, ErrorReplacementEnabled, EventCharacter, ParityCheckEnabled, RTSFlowControlType, XOffCharacter, XOffXMitThreshold, XOnCharacter, XOnXMitThreshold, XOnXOffInFlowControl, XOnXOffOutFlowControl, Name FROM Win32_SerialPortConfiguration</WQL>
<WQL Namespace="root/cimv2" Class="Win32_ParallelPort">SELECT Name, PNPDeviceID FROM Win32_ParallelPort</WQL>
<WQL Namespace="root/cimv2" Class="Win32_DiskDrive">SELECT Description, Manufacturer, Model, BytesPerSector, MediaLoaded, MediaType, Partitions, SCSIBus, SCSILogicalUnit, SCSIPort, SCSITargetId, SectorsPerTrack, Size, TotalCylinders, TotalSectors, TotalTracks, TracksPerCylinder, PNPDeviceID, Index FROM Win32_DiskDrive</WQL>
<WQL Namespace="root/cimv2" Class="Win32_DiskPartition">SELECT Caption, Size, StartingOffset, DiskIndex FROM Win32_DiskPartition</WQL>
<WQL Namespace="root/cimv2" Class="Win32_IDEController">SELECT Caption, Manufacturer, Status, PNPDeviceID FROM Win32_IDEController</WQL>
<WQL Namespace="root/cimv2" Class="Win32_BIOS">SELECT Version, SMBIOSPresent, SMBIOSBIOSVersion, ReleaseDate FROM Win32_BIOS</WQL>
<WQL Namespace="root/cimv2" Class="Win32_PortResource">SELECT * FROM Win32_PortResource</WQL>
<WQL Namespace="root/cimv2" Class="Win32_POTSModem">SELECT Caption, Description, DeviceID, DeviceType, AttachedTo, AnswerMode, PNPDeviceID, ProviderName, ModemInfPath, ModemInfSection, BlindOff, BlindOn, CompressionOff, CompressionOn, ErrorControlForced, ErrorControlOff, ErrorControlOn, FlowControlHard, FlowControlOff, FlowControlSoft, DCB, Default, InactivityTimeout, ModulationBell, ModulationCCITT, Prefix, Properties, Pulse, Reset, ResponsesKeyName, SpeakerModeDial, SpeakerModeOff, SpeakerModeOn, SpeakerModeSetup, SpeakerVolumeHigh, SpeakerVolumeLow, SpeakerVolumeMed, StringFormat, Terminator, Tone FROM Win32_POTSModem</WQL>
<WQL Namespace="root/cimv2" Class="Win32_StartupCommand">SELECT Caption, Command, User, Location FROM Win32_StartupCommand</WQL>
<WQL Namespace="root/cimv2" Class="Win32_SystemDriver">SELECT Name, Description, PathName, ServiceType, Started, StartMode, State, Status, ErrorControl, AcceptPause, AcceptStop FROM Win32_SystemDriver</WQL>
<WQL Namespace="root/cimv2" Class="Win32_ProgramGroup">SELECT GroupName, Name, UserName FROM Win32_ProgramGroup</WQL>
<WQL Namespace="root/cimv2" Class="Win32_ClassicCOMClassSetting">SELECT Caption, LocalServer32, Insertable, Control FROM Win32_ClassicCOMClassSetting</WQL>
<WQL Namespace="root/cimv2" Class="Win32_SCSIController">SELECT Caption, Manufacturer, Status, PNPDeviceID FROM Win32_SCSIController</WQL>
</DataSpec>
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\pchealth\helpctr\pss\content\brz\package_description.xml ===
< ? x m l   v e r s i o n = " 1 . 0 "   e n c o d i n g = " U T F - 1 6 " ? > 
 
 < H E L P C E N T E R P A C K A G E > 
 
         < S K U   V A L U E = " A L L " / > 
 
         < L A N G U A G E   V A L U E = " A L L " / > 
 
         < V E R S I O N   V A L U E = " 0 1 . 0 1 . 0 1 . 2 2 "   / > 
 
         < P R O D U C T   I D = " P S S   O n l i n e   A s s i s t e d   S u p p o r t "   / > 
 
         < C O N F I G > 
 
                 < S A F   A C T I O N = " A D D "   F I L E = " p s s . x m l " / > 
 
         < / C O N F I G > 
 
         < I N S T A L L _ C O N T E N T > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " p s s m a c h i n e s n a p s h o t . x m l "   U R I = " p s s m a c h i n e s n a p s h o t . x m l " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " p s s m a c h i n e s n a p s h o t - l e s s . x m l "   U R I = " p s s m a c h i n e s n a p s h o t - l e s s . x m l " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " p s s m a c h i n e s n a p s h o t - w o - c o m . x m l "   U R I = " p s s m a c h i n e s n a p s h o t - w o - c o m . x m l " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " O f f l i n e O p t i o n s . h t m "   U R I = " O f f l i n e O p t i o n s . h t m " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " O f f l i n e D C . h t m "   U R I = " O f f l i n e D C . h t m " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " C o n n e c t i o n . h t m "   U R I = " C o n n e c t i o n . h t m " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " s p a c e r . g i f "   U R I = " s p a c e r . g i f " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " r 3 _ c 2 . g i f "   U R I = " r 3 _ c 2 . g i f " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " r 1 _ c 3 . g i f "   U R I = " r 1 _ c 3 . g i f " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " r 1 _ c 2 . g i f "   U R I = " r 1 _ c 2 . g i f " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " r 1 _ c 1 . g i f "   U R I = " r 1 _ c 1 . g i f " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " I n f o _ I c o n . g i f "   U R I = " I n f o _ I c o n . g i f " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " G R e c t . g i f "   U R I = " G R e c t . g i f " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " G A r r o w . g i f "   U R I = " G A r r o w . g i f " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " s t a t u s _ o k . g i f "   U R I = " s t a t u s _ o k . g i f " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " P S S . c s s "   U R I = " P S S . c s s " / > 
 
         < / I N S T A L L _ C O N T E N T > 
 
         < T R U S T E D _ C O N T E N T > 
 
                 < T R U S T E D   A C T I O N = " A D D "   U R I = " h c p : / / C N = M i c r o s o f t % 2 0 C o r p o r a t i o n , L = R e d m o n d , S = W a s h i n g t o n , C = U S / "   / > 
 
                 < T R U S T E D   A C T I O N = " A D D "   U R I = " h t t p s : / / w e b r e s p o n s e . o n e . m i c r o s o f t . c o m / " / > 
 
         < / T R U S T E D _ C O N T E N T > 
 
         < S E A R C H E N G I N E S > 
 
                 < W R A P P E R 
 
                 	 C L S I D       =   " { 8 3 3 E 4 0 1 6 - A F F 7 - 4 A C 3 - A A C 2 - 9 F 2 4 C 1 4 5 7 B C E } " 
 
                 	 I D     =   " D 2 3 D 0 0 2 8 - A 5 4 3 - 4 7 6 7 - B 4 A A - 1 5 8 1 D 8 E 1 C D B 2 " 
 
                 	 N A M E         =   " N e t   S e a r c h   W r a p p e r " 
 
                 	 A C T I O N     =   " A D D " > 
 
                 	 < D A T A > 
 
 < C O N F I G _ D A T A   S E R V E R _ U R L = " h t t p : / / g o . m i c r o s o f t . c o m / f w l i n k / ? l i n k i d = 2 7 2 & a m p ; c l c i d = 0 x 4 0 9 "   S T A N D A R D _ S E A R C H = " 0 "   S E A R C H E N G I N E _ O W N E R = " M i c r o s o f t   C o r p o r a t i o n "   R E M O T E C O N F I G _ S E R V E R _ U R L = " h t t p : / / g o . m i c r o s o f t . c o m / f w l i n k / ? l i n k i d = 2 7 7 & a m p ; c l c i d = 0 x 4 0 9 "   U P D A T E _ F R E Q U E N C Y = " 7 "   x m l n s = " u r n : s c h e m a s - m i c r o s o f t - c o m / p s s / S D X M L / s e a r c h p r o d l i s t " > < S E A R C H E N G I N E _ N A M E > M i c r o s o f t   K n o w l e d g e   B a s e < / S E A R C H E N G I N E _ N A M E > < S E A R C H E N G I N E _ D E S C R I P T I O N > E x i b e   a r t i g o s   o u   t  p i c o s   r e l e v a n t e s   d o   s i t e   d a   K n o w l e d g e   B a s e   d a   M i c r o s o f t   n a   W e b .   A   K n o w l e d g e   B a s e      u m a   f o n t e   d e   i n f o r m a   e s   d e   s u p o r t e   t  c n i c o   e   f e r r a m e n t a s   d e   a u t o - a j u d a   p a r a   o s   p r o d u t o s   M i c r o s o f t . < / S E A R C H E N G I N E _ D E S C R I P T I O N > < P A R A M _ I T E M   N A M E = " P r o d u c t "   T Y P E = " P A R A M _ L I S T "   V I S I B L E = " t r u e " > < P A R A M _ V A L U E   V A L U E = " a l l B r a " > < D I S P L A Y S T R I N G > -   T o d o s   o s   P r o d u t o s   M i c r o s o f t   - < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " a c c I N 2 " > < D I S P L A Y S T R I N G > A c c e s s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " a c c 2 0 0 0 I N 2 " > < D I S P L A Y S T R I N G > A c c e s s   2 0 0 0 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " a c c 9 5 I N T " > < D I S P L A Y S T R I N G > A c c e s s   9 5 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " a c c 9 7 I N T " > < D I S P L A Y S T R I N G > A c c e s s   9 7 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " a o e B r a " > < D I S P L A Y S T R I N G > A g e   o f   E m p i r e s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " y 2 k B r a " > < D I S P L A Y S T R I N G > A n o   2 0 0 0 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " b a c I N T " > < D I S P L A Y S T R I N G > B a c k O f f i c e   S e r v e r < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " C l i p B r a " > < D I S P L A Y S T R I N G > C l i p   G a l l e r y < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " c f l t B r a " > < D I S P L A Y S T R I N G > C o m b a t   F l i g h t   S i m u l a t o r < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " d o s B r a " > < D I S P L A Y S T R I N G > D O S < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " e n c B r a " > < D I S P L A Y S T R I N G > E n c a r t a < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " x l w 2 K B r a " > < D I S P L A Y S T R I N G > E x c e l   2 0 0 0 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " x l w 9 5 B r a " > < D I S P L A Y S T R I N G > E x c e l   7 . 0   f o r   W i n d o w s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " x l w 9 7 I N 2 " > < D I S P L A Y S T R I N G > E x c e l   9 7   f o r   W i n d o w s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " x l w B r a " > < D I S P L A Y S T R I N G > E x c e l   f o r   W i n d o w s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " e c h I N 1 " > < D I S P L A Y S T R I N G > E x c h a n g e   S e r v e r < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " f l t B r a " > < D I S P L A Y S T R I N G > F l i g h t   S i m u l a t o r s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " f p w I N 2 " > < D I S P L A Y S T R I N G > F r o n t P a g e   f o r   W i n d o w s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " i e I N T " > < D I S P L A Y S T R I N G > I n t e r n e t   E x p l o r e r < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " m n y I N T " > < D I S P L A Y S T R I N G > M o n e y < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " m m B r a " > < D I S P L A Y S T R I N G > M u l t i m d i a < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " n m t I N T " > < D I S P L A Y S T R I N G > N e t M e e t i n g < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " o f w 2 k I N 2 " > < D I S P L A Y S T R I N G > O f f i c e   2 0 0 0 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " o f w 9 5 I N 2 " > < D I S P L A Y S T R I N G > O f f i c e   7 . 0   f o r   W i n d o w s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " o f w 9 7 I N 2 " > < D I S P L A Y S T R I N G > O f f i c e   9 7   f o r   W i n d o w s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " o f w I N 2 " > < D I S P L A Y S T R I N G > O f f i c e   f o r   W i n d o w s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " o u t I N 2 " > < D I S P L A Y S T R I N G > O u t l o o k < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " o u t 2 K I N 2 " > < D I S P L A Y S T R I N G > O u t l o o k   2 0 0 0 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " o u t 9 7 I N 2 " > < D I S P L A Y S T R I N G > O u t l o o k   9 7 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " o u t 9 8 I N T " > < D I S P L A Y S T R I N G > O u t l o o k   9 8 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " o e x I N 1 " > < D I S P L A Y S T R I N G > O u t l o o k   E x p r e s s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " P D 2 k I N 1 " > < D I S P L A Y S T R I N G > P h o t o D r a w   2 0 0 0 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " p i c I N T " > < D I S P L A Y S T R I N G > P i c t u r e   I t ! < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " p p t 2 0 0 0 I N 2 " > < D I S P L A Y S T R I N G > P o w e r P o i n t   2 0 0 0 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " p p t I N 2 " > < D I S P L A Y S T R I N G > P o w e r P o i n t   f o r   W i n d o w s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " P R J 4 X I N 1 " > < D I S P L A Y S T R I N G > P r o j e c t   f o r   W i n d o w s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " P r o o f B r a " > < D I S P L A Y S T R I N G > P r o o f i n g   T o o l s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " p u b I N T " > < D I S P L A Y S T R I N G > P u b l i s h e r < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " s c h I N T " > < D I S P L A Y S T R I N G > S c h e d u l e < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " s w p I N T " > < D I S P L A Y S T R I N G > S i d e W i n d e r   G a m e   C o n t r o l l e r s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " v s t I N T " > < D I S P L A Y S T R I N G > V i s u a l   S t u d i o < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " w i n 2 0 0 0 I N 2 " > < D I S P L A Y S T R I N G > W i n d o w s   2 0 0 0 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " w i n I N 2 " > < D I S P L A Y S T R I N G > W i n d o w s   3 . x < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " w 9 5 I N 3 " > < D I S P L A Y S T R I N G > W i n d o w s   9 5 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " w 9 8 I N 3 " > < D I S P L A Y S T R I N G > W i n d o w s   9 8 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " n t s I N 2 " > < D I S P L A Y S T R I N G > W i n d o w s   N T   S e r v e r < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " w r d I N 2 " > < D I S P L A Y S T R I N G > W o r d   f o r   W i n d o w s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < / P A R A M _ I T E M > < P A R A M _ I T E M   N A M E = " K e y w o r d T y p e "   T Y P E = " P A R A M _ L I S T "   V I S I B L E = " t r u e " > < D E S C R I P T I O N > P r o c u r a r : < / D E S C R I P T I O N > < P A R A M _ V A L U E   V A L U E = " A L L "   D E F A U L T = " t r u e " > < D I S P L A Y S T R I N G > T o d a s   a s   p a l a v r a s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " A N Y " > < D I S P L A Y S T R I N G > Q u a l q u e r   p a l a v r a < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " P H R A S E " > < D I S P L A Y S T R I N G > A   f r a s e   e x a t a < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " B O O L E A N " > < D I S P L A Y S T R I N G > A   f r a s e   b o o l e a n a < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < / P A R A M _ I T E M > < P A R A M _ I T E M   N A M E = " T i t l e s "   T Y P E = " P A R A M _ B O O L "   V I S I B L E = " t r u e " > < D E S C R I P T I O N > P e s q u i s a r   s o m e n t e   n o   t  t u l o < / D E S C R I P T I O N > < P A R A M _ V A L U E   V A L U E = " f a l s e "   D E F A U L T = " t r u e "   / > < / P A R A M _ I T E M > < / C O N F I G _ D A T A > 
 
         
 
                 	 < / D A T A > 
 
                 < / W R A P P E R > 
 
         < / S E A R C H E N G I N E S > 
 
 < / H E L P C E N T E R P A C K A G E > 
 
 
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\pchealth\helpctr\pss\content\cht\package_description.xml ===
< ? x m l   v e r s i o n = " 1 . 0 "   e n c o d i n g = " U T F - 1 6 " ? > 
 
 < H E L P C E N T E R P A C K A G E > 
 
         < S K U   V A L U E = " A L L " / > 
 
         < L A N G U A G E   V A L U E = " A L L " / > 
 
         < V E R S I O N   V A L U E = " 0 1 . 0 1 . 0 1 . 2 2 "   / > 
 
         < P R O D U C T   I D = " P S S   O n l i n e   A s s i s t e d   S u p p o r t "   / > 
 
         < C O N F I G > 
 
                 < S A F   A C T I O N = " A D D "   F I L E = " p s s . x m l " / > 
 
         < / C O N F I G > 
 
         < I N S T A L L _ C O N T E N T > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " p s s m a c h i n e s n a p s h o t . x m l "   U R I = " p s s m a c h i n e s n a p s h o t . x m l " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " p s s m a c h i n e s n a p s h o t - l e s s . x m l "   U R I = " p s s m a c h i n e s n a p s h o t - l e s s . x m l " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " p s s m a c h i n e s n a p s h o t - w o - c o m . x m l "   U R I = " p s s m a c h i n e s n a p s h o t - w o - c o m . x m l " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " O f f l i n e O p t i o n s . h t m "   U R I = " O f f l i n e O p t i o n s . h t m " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " O f f l i n e D C . h t m "   U R I = " O f f l i n e D C . h t m " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " C o n n e c t i o n . h t m "   U R I = " C o n n e c t i o n . h t m " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " s p a c e r . g i f "   U R I = " s p a c e r . g i f " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " r 3 _ c 2 . g i f "   U R I = " r 3 _ c 2 . g i f " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " r 1 _ c 3 . g i f "   U R I = " r 1 _ c 3 . g i f " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " r 1 _ c 2 . g i f "   U R I = " r 1 _ c 2 . g i f " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " r 1 _ c 1 . g i f "   U R I = " r 1 _ c 1 . g i f " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " I n f o _ I c o n . g i f "   U R I = " I n f o _ I c o n . g i f " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " G R e c t . g i f "   U R I = " G R e c t . g i f " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " G A r r o w . g i f "   U R I = " G A r r o w . g i f " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " s t a t u s _ o k . g i f "   U R I = " s t a t u s _ o k . g i f " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " P S S . c s s "   U R I = " P S S . c s s " / > 
 
         < / I N S T A L L _ C O N T E N T > 
 
         < T R U S T E D _ C O N T E N T > 
 
                 < T R U S T E D   A C T I O N = " A D D "   U R I = " h c p : / / C N = M i c r o s o f t % 2 0 C o r p o r a t i o n , L = R e d m o n d , S = W a s h i n g t o n , C = U S / "   / > 
 
                 < T R U S T E D   A C T I O N = " A D D "   U R I = " h t t p s : / / w e b r e s p o n s e . o n e . m i c r o s o f t . c o m / " / > 
 
         < / T R U S T E D _ C O N T E N T > 
 
         < S E A R C H E N G I N E S > 
 
                 < W R A P P E R 
 
                 	 C L S I D       =   " { 8 3 3 E 4 0 1 6 - A F F 7 - 4 A C 3 - A A C 2 - 9 F 2 4 C 1 4 5 7 B C E } " 
 
                 	 I D     =   " D 2 3 D 0 0 2 8 - A 5 4 3 - 4 7 6 7 - B 4 A A - 1 5 8 1 D 8 E 1 C D B 2 " 
 
                 	 N A M E         =   " N e t   S e a r c h   W r a p p e r " 
 
                 	 A C T I O N     =   " A D D " > 
 
                 	 < D A T A > 
 
 < C O N F I G _ D A T A   S E R V E R _ U R L = " h t t p : / / g o . m i c r o s o f t . c o m / f w l i n k / ? l i n k i d = 2 7 2 & a m p ; c l c i d = 0 x 4 0 9 "   S T A N D A R D _ S E A R C H = " 0 "   S E A R C H E N G I N E _ O W N E R = " M i c r o s o f t   C o r p o r a t i o n "   R E M O T E C O N F I G _ S E R V E R _ U R L = " h t t p : / / g o . m i c r o s o f t . c o m / f w l i n k / ? l i n k i d = 2 7 7 & a m p ; c l c i d = 0 x 4 0 9 "   U P D A T E _ F R E Q U E N C Y = " 7 "   x m l n s = " u r n : s c h e m a s - m i c r o s o f t - c o m / p s s / S D X M L / s e a r c h p r o d l i s t " > < S E A R C H E N G I N E _ N A M E > M i c r o s o f t   K n o w l e d g e   B a s e < / S E A R C H E N G I N E _ N A M E > < S E A R C H E N G I N E _ D E S C R I P T I O N > o:y  M i c r o s o f t   K n o w l e d g e   B a s e   }zvvܕ;NLbez0K n o w l e d g e   B a s e   /fbS/ecǌ
vǌn_N/f  M i c r o s o f t   "uTvꁩR]wQ0< / S E A R C H E N G I N E _ D E S C R I P T I O N > < P A R A M _ I T E M   N A M E = " P r o d u c t "   T Y P E = " P A R A M _ L I S T "   V I S I B L E = " t r u e " > < P A R A M _ V A L U E   V A L U E = " m s a l l I N T " > < D I S P L A Y S T R I N G > -   A l l   M i c r o s o f t   P r o d u c t s   - < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " a c c 2 0 0 0 I N 1 " > < D I S P L A Y S T R I N G > A c c e s s   2 0 0 0 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " x l w 2 K I N 3 " > < D I S P L A Y S T R I N G > E x c e l   2 0 0 0 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " e c h I N 1 " > < D I S P L A Y S T R I N G > E x c h a n g e   S e r v e r < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " f p 2 0 0 0 I N 2 " > < D I S P L A Y S T R I N G > F r o n t P a g e   2 0 0 0 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " i s I N T " > < D I S P L A Y S T R I N G > I n d e x   S e r v e r < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " i e I N T " > < D I S P L A Y S T R I N G > I n t e r n e t   E x p l o r e r < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " i i s I N 2 " > < D I S P L A Y S T R I N G > I n t e r n e t   I n f o r m a t i o n   S e r v e r < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " m s q I N 2 " > < D I S P L A Y S T R I N G > M e s s a g e   Q u e u e < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " o f w 2 k I N 3 " > < D I S P L A Y S T R I N G > O f f i c e   2 0 0 0 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " o u t 2 K I N 1 " > < D I S P L A Y S T R I N G > O u t l o o k   2 0 0 0 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " o e x I N 1 " > < D I S P L A Y S T R I N G > O u t l o o k   E x p r e s s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " P D 2 k I N 1 " > < D I S P L A Y S T R I N G > P h o t o D r a w   2 0 0 0 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " P R J 4 X I N 1 " > < D I S P L A Y S T R I N G > P r o j e c t   f o r   W i n d o w s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " p r s I N T " > < D I S P L A Y S T R I N G > P r o x y   S e r v e r < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " p u b 2 0 0 0 I N T " > < D I S P L A Y S T R I N G > P u b l i s h e r   2 0 0 0 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " s i t e I N T " > < D I S P L A Y S T R I N G > S i t e   S e r v e r < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " s b s I N 1 " > < D I S P L A Y S T R I N G > S m a l l   B u s i n e s s   S e r v e r < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " s n a I N T " > < D I S P L A Y S T R I N G > S N A   S e r v e r < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " s q l I N T " > < D I S P L A Y S T R I N G > S Q L   S e r v e r < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " s m s I N 1 " > < D I S P L A Y S T R I N G > S y s t e m s   M a n a g e m e n t   S e r v e r < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " v b b I N T " > < D I S P L A Y S T R I N G > V i s u a l   B a s i c < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " v c c I N 1 " > < D I S P L A Y S T R I N G > V i s u a l   C < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " f o x I N T " > < D I S P L A Y S T R I N G > V i s u a l   F o x P r o < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " v i d I N T " > < D I S P L A Y S T R I N G > V i s u a l   I n t e r D e v < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " v s t I N T " > < D I S P L A Y S T R I N G > V i s u a l   S t u d i o < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " w i n 2 0 0 0 I N 1 " > < D I S P L A Y S T R I N G > W i n d o w s   2 0 0 0 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " w 9 8 s e I N 1 " > < D I S P L A Y S T R I N G > W i n d o w s   9 8   S e c o n d   E d i t i o n < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " n t s 4 0 I N T " > < D I S P L A Y S T R I N G > W i n d o w s   N T   S e r v e r   4 . 0 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " n t w 4 0 I N T " > < D I S P L A Y S T R I N G > W i n d o w s   N T   W o r k s t a t i o n   4 . 0 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " w r d 2 0 I N 1 " > < D I S P L A Y S T R I N G > W o r d   2 0 0 0 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < / P A R A M _ I T E M > < P A R A M _ I T E M   N A M E = " K e y w o r d T y p e "   T Y P E = " P A R A M _ L I S T "   V I S I B L E = " t r u e " > < D E S C R I P T I O N > d\: < / D E S C R I P T I O N > < P A R A M _ V A L U E   V A L U E = " A L L "   D E F A U L T = " t r u e " > < D I S P L A Y S T R I N G > @b	gW[< / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " A N Y " > < D I S P L A Y S T R I N G > NUOW[< / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " P H R A S E " > < D I S P L A Y S T R I N G > |x&{TvW[^< / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " B O O L E A N " > < D I S P L A Y S T R I N G > ^gW[^< / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < / P A R A M _ I T E M > < P A R A M _ I T E M   N A M E = " T i t l e s "   T Y P E = " P A R A M _ B O O L "   V I S I B L E = " t r u e " > < D E S C R I P T I O N > S(WjL-Nd\< / D E S C R I P T I O N > < P A R A M _ V A L U E   V A L U E = " f a l s e "   D E F A U L T = " t r u e "   / > < / P A R A M _ I T E M > < / C O N F I G _ D A T A > 
 
         
 
                 	 < / D A T A > 
 
                 < / W R A P P E R > 
 
         < / S E A R C H E N G I N E S > 
 
 < / H E L P C E N T E R P A C K A G E > 
 
 
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\pchealth\helpctr\pss\content\chs\package_description.xml ===
< ? x m l   v e r s i o n = " 1 . 0 "   e n c o d i n g = " U T F - 1 6 " ? > 
 
 < H E L P C E N T E R P A C K A G E > 
 
         < S K U   V A L U E = " A L L " / > 
 
         < L A N G U A G E   V A L U E = " A L L " / > 
 
         < V E R S I O N   V A L U E = " 0 1 . 0 1 . 0 1 . 2 2 "   / > 
 
         < P R O D U C T   I D = " P S S   O n l i n e   A s s i s t e d   S u p p o r t "   / > 
 
         < C O N F I G > 
 
                 < S A F   A C T I O N = " A D D "   F I L E = " p s s . x m l " / > 
 
         < / C O N F I G > 
 
         < I N S T A L L _ C O N T E N T > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " p s s m a c h i n e s n a p s h o t . x m l "   U R I = " p s s m a c h i n e s n a p s h o t . x m l " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " p s s m a c h i n e s n a p s h o t - l e s s . x m l "   U R I = " p s s m a c h i n e s n a p s h o t - l e s s . x m l " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " p s s m a c h i n e s n a p s h o t - w o - c o m . x m l "   U R I = " p s s m a c h i n e s n a p s h o t - w o - c o m . x m l " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " O f f l i n e O p t i o n s . h t m "   U R I = " O f f l i n e O p t i o n s . h t m " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " O f f l i n e D C . h t m "   U R I = " O f f l i n e D C . h t m " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " C o n n e c t i o n . h t m "   U R I = " C o n n e c t i o n . h t m " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " s p a c e r . g i f "   U R I = " s p a c e r . g i f " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " r 3 _ c 2 . g i f "   U R I = " r 3 _ c 2 . g i f " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " r 1 _ c 3 . g i f "   U R I = " r 1 _ c 3 . g i f " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " r 1 _ c 2 . g i f "   U R I = " r 1 _ c 2 . g i f " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " r 1 _ c 1 . g i f "   U R I = " r 1 _ c 1 . g i f " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " I n f o _ I c o n . g i f "   U R I = " I n f o _ I c o n . g i f " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " G R e c t . g i f "   U R I = " G R e c t . g i f " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " G A r r o w . g i f "   U R I = " G A r r o w . g i f " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " s t a t u s _ o k . g i f "   U R I = " s t a t u s _ o k . g i f " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " P S S . c s s "   U R I = " P S S . c s s " / > 
 
         < / I N S T A L L _ C O N T E N T > 
 
         < T R U S T E D _ C O N T E N T > 
 
                 < T R U S T E D   A C T I O N = " A D D "   U R I = " h c p : / / C N = M i c r o s o f t % 2 0 C o r p o r a t i o n , L = R e d m o n d , S = W a s h i n g t o n , C = U S / "   / > 
 
                 < T R U S T E D   A C T I O N = " A D D "   U R I = " h t t p s : / / w e b r e s p o n s e . o n e . m i c r o s o f t . c o m / " / > 
 
         < / T R U S T E D _ C O N T E N T > 
 
         < S E A R C H E N G I N E S > 
 
                 < W R A P P E R 
 
                 	 C L S I D       =   " { 8 3 3 E 4 0 1 6 - A F F 7 - 4 A C 3 - A A C 2 - 9 F 2 4 C 1 4 5 7 B C E } " 
 
                 	 I D     =   " D 2 3 D 0 0 2 8 - A 5 4 3 - 4 7 6 7 - B 4 A A - 1 5 8 1 D 8 E 1 C D B 2 " 
 
                 	 N A M E         =   " N e t   S e a r c h   W r a p p e r " 
 
                 	 A C T I O N     =   " A D D " > 
 
                 	 < D A T A > 
 
 < C O N F I G _ D A T A   S E R V E R _ U R L = " h t t p : / / g o . m i c r o s o f t . c o m / f w l i n k / ? l i n k i d = 2 7 2 & a m p ; c l c i d = 0 x 4 0 9 "   S T A N D A R D _ S E A R C H = " 0 "   S E A R C H E N G I N E _ O W N E R = " M i c r o s o f t   C o r p o r a t i o n "   R E M O T E C O N F I G _ S E R V E R _ U R L = " h t t p : / / g o . m i c r o s o f t . c o m / f w l i n k / ? l i n k i d = 2 7 7 & a m p ; c l c i d = 0 x 4 0 9 "   U P D A T E _ F R E Q U E N C Y = " 7 "   x m l n s = " u r n : s c h e m a s - m i c r o s o f t - c o m / p s s / S D X M L / s e a r c h p r o d l i s t " > < S E A R C H E N G I N E _ N A M E > M i c r o s o f t   K n o w l e d g e   B a s e < / S E A R C H E N G I N E _ N A M E > < S E A R C H E N G I N E _ D E S C R I P T I O N > N  M i c r o s o f t   K n o w l e d g e   B a s e   Qz>f:y	gsQ;Nbez0K n o w l e d g e   B a s e   cOb/g/ecOo`T  M i c r o s o f t   NTb/ec]wQ0< / S E A R C H E N G I N E _ D E S C R I P T I O N > < P A R A M _ I T E M   N A M E = " P r o d u c t "   T Y P E = " P A R A M _ L I S T "   V I S I B L E = " t r u e " > < P A R A M _ V A L U E   V A L U E = " m s a l l I N T " > < D I S P L A Y S T R I N G > -   A l l   M i c r o s o f t   P r o d u c t s   - < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " a c c I N 1 " > < D I S P L A Y S T R I N G > A c c e s s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " a c c 2 0 0 0 I N 1 " > < D I S P L A Y S T R I N G > A c c e s s   2 0 0 0 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " a c c 9 5 I N T " > < D I S P L A Y S T R I N G > A c c e s s   9 5 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " a c c 9 7 I N T " > < D I S P L A Y S T R I N G > A c c e s s   9 7 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " a d k I N T " > < D I S P L A Y S T R I N G > A c t i v e X   S D K < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " a o e I N T " > < D I S P L A Y S T R I N G > A g e   o f   E m p i r e s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " a r c I N T " > < D I S P L A Y S T R I N G > A r c a d e < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " a s h c a l l I N T " > < D I S P L A Y S T R I N G > A s h e r o n   s   C a l l < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " b a c I N T " > < D I S P L A Y S T R I N G > B a c k O f f i c e   S e r v e r < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " b b 3 d I N T " > < D I S P L A Y S T R I N G > B a s e b a l l < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " c a r t I N T " > < D I S P L A Y S T R I N G > C A R T   P r e c i s i o n   R a c i n g < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " c l c I N T " > < D I S P L A Y S T R I N G > C l o s e   C o m b a t < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " c f l t I N T " > < D I S P L A Y S T R I N G > C o m b a t   F l i g h t   S i m u l a t o r < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " c i s I N T " > < D I S P L A Y S T R I N G > C o m m e r c i a l   I n t e r n e t   S y s t e m < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " d s d k I N T " > < D I S P L A Y S T R I N G > D i r e c t X   S D K < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " e n c I N T " > < D I S P L A Y S T R I N G > E n c a r t a < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " e t p p c I N T " > < D I S P L A Y S T R I N G > E n t e r t a i n m e n t   P a c k :   T h e   P u z z l e   C o l l e c t i o n < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " x l w 2 K I N 1 " > < D I S P L A Y S T R I N G > E x c e l   2 0 0 0 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " x l w 9 5 I N 1 " > < D I S P L A Y S T R I N G > E x c e l   7 . 0   f o r   W i n d o w s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " x l w 9 7 I N 1 " > < D I S P L A Y S T R I N G > E x c e l   9 7   f o r   W i n d o w s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " x l m 9 8 I N 1 " > < D I S P L A Y S T R I N G > E x c e l   9 8   f o r   M a c i n t o s h < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " e x c h 2 k I N 1 " > < D I S P L A Y S T R I N G > E x c h a n g e   2 0 0 0   S e r v e r < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " e d k I N T " > < D I S P L A Y S T R I N G > E x c h a n g e   D e v e l o p m e n t   K i t < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " e c h I N 1 " > < D I S P L A Y S T R I N G > E x c h a n g e   S e r v e r < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " f l t I N T " > < D I S P L A Y S T R I N G > F l i g h t   S i m u l a t o r s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " f p 2 0 0 0 I N 1 " > < D I S P L A Y S T R I N G > F r o n t P a g e   2 0 0 0 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " f p s e 9 8 I N T " > < D I S P L A Y S T R I N G > F r o n t P a g e   9 8   S e r v e r   E x t e n s i o n s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " f p w I N 1 " > < D I S P L A Y S T R I N G > F r o n t P a g e   f o r   W i n d o w s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " g m s I N 1 " > < D I S P L A Y S T R I N G > G a m e s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " g l f I N 1 " > < D I S P L A Y S T R I N G > G o l f < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " i s I N T " > < D I S P L A Y S T R I N G > I n d e x   S e r v e r < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " i e 9 5 I N T " > < D I S P L A Y S T R I N G > I n t e r n e t   E x p l o r e r   f o r   W i n d o w s   9 5 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " i e 9 5 3 0 2 I N T " > < D I S P L A Y S T R I N G > I n t e r n e t   E x p l o r e r   f o r   W i n d o w s   9 5   3 . 0 2 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " i e 9 5 4 0 I N T " > < D I S P L A Y S T R I N G > I n t e r n e t   E x p l o r e r   f o r   W i n d o w s   9 5   4 . 0 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " i e n t 3 I N T " > < D I S P L A Y S T R I N G > I n t e r n e t   E x p l o r e r   f o r   W i n d o w s   N T   3 . 5 1 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " i e n t 4 I N T " > < D I S P L A Y S T R I N G > I n t e r n e t   E x p l o r e r   f o r   W i n d o w s   N T   4 . 0 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " i i s I N 2 " > < D I S P L A Y S T R I N G > I n t e r n e t   I n f o r m a t i o n   S e r v e r < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " j a v I N T " > < D I S P L A Y S T R I N G > J a v a   T e c h n o l o g i e s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " m i d I N T " > < D I S P L A Y S T R I N G > M i d t o w n   M a d n e s s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " m t m I N T " > < D I S P L A Y S T R I N G > M o n s t e r   T r u c k   M a d n e s s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " m o t I N T " > < D I S P L A Y S T R I N G > M o t o c r o s s   M a d n e s s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " n m t I N T " > < D I S P L A Y S T R I N G > N e t M e e t i n g < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " o f w 2 k I N 1 " > < D I S P L A Y S T R I N G > O f f i c e   2 0 0 0 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " o f w 9 5 I N 1 " > < D I S P L A Y S T R I N G > O f f i c e   7 . 0   f o r   W i n d o w s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " o f w 9 7 I N 1 " > < D I S P L A Y S T R I N G > O f f i c e   9 7   f o r   W i n d o w s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " o f m 9 8 I N 1 " > < D I S P L A Y S T R I N G > O f f i c e   9 8   M a c i n t o s h   E d i t i o n < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " o f d I N 1 " > < D I S P L A Y S T R I N G > O f f i c e   D e v e l o p m e n t < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " o f m I N 1 " > < D I S P L A Y S T R I N G > O f f i c e   f o r   M a c i n t o s h < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " o f w I N 1 " > < D I S P L A Y S T R I N G > O f f i c e   f o r   W i n d o w s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " o l e I N T " > < D I S P L A Y S T R I N G > O L E   P r o g r a m m i n g < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " o u t I N 1 " > < D I S P L A Y S T R I N G > O u t l o o k < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " o u t 2 K I N 1 " > < D I S P L A Y S T R I N G > O u t l o o k   2 0 0 0 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " o u t 9 7 I N 1 " > < D I S P L A Y S T R I N G > O u t l o o k   9 7 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " o u t 9 8 I N T " > < D I S P L A Y S T R I N G > O u t l o o k   9 8 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " o e x I N 1 " > < D I S P L A Y S T R I N G > O u t l o o k   E x p r e s s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " o w r I N T " > < D I S P L A Y S T R I N G > O u t w a r s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " p b o x I N T " > < D I S P L A Y S T R I N G > P a n d o r a   s   B o x < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " p p t 2 0 0 0 I N 1 " > < D I S P L A Y S T R I N G > P o w e r P o i n t   2 0 0 0 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " p p m I N 1 " > < D I S P L A Y S T R I N G > P o w e r P o i n t   f o r   M a c i n t o s h < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " P R J 9 8 I N T " > < D I S P L A Y S T R I N G > P r o j e c t   9 8 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " P R J 4 X I N 1 " > < D I S P L A Y S T R I N G > P r o j e c t   f o r   W i n d o w s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " P R J 4 x I N 2 " > < D I S P L A Y S T R I N G > P r o j e c t   f o r   W i n d o w s   4 . x < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " p u b 2 0 0 0 I N T " > < D I S P L A Y S T R I N G > P u b l i s h e r   2 0 0 0 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " s i t e I N T " > < D I S P L A Y S T R I N G > S i t e   S e r v e r < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " c o m I N T " > < D I S P L A Y S T R I N G > S i t e   S e r v e r   3 . 0   C o m m e r c e   E d i t i o n < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " s q l I N T " > < D I S P L A Y S T R I N G > S Q L   S e r v e r < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " u r b I N T " > < D I S P L A Y S T R I N G > U r b a n   A s s a u l t < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " v c c I N 1 " > < D I S P L A Y S T R I N G > V i s u a l   C < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " v s t I N T " > < D I S P L A Y S T R I N G > V i s u a l   S t u d i o < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " w i n 2 0 0 0 I N 1 " > < D I S P L A Y S T R I N G > W i n d o w s   2 0 0 0 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " w 9 8 I N 1 " > < D I S P L A Y S T R I N G > W i n d o w s   9 8 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " w 9 8 s e I N 1 " > < D I S P L A Y S T R I N G > W i n d o w s   9 8   S e c o n d   E d i t i o n < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " w i n c e v c I N 1 " > < D I S P L A Y S T R I N G > W i n d o w s   C E   T o o l k i t   f o r   V i s u a l   C < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " n t s I N 1 " > < D I S P L A Y S T R I N G > W i n d o w s   N T   S e r v e r < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " n t s 4 0 I N T " > < D I S P L A Y S T R I N G > W i n d o w s   N T   S e r v e r   4 . 0 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " n t w I N T " > < D I S P L A Y S T R I N G > W i n d o w s   N T   W o r k s t a t i o n < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " n t w 3 5 1 I N T " > < D I S P L A Y S T R I N G > W i n d o w s   N T   W o r k s t a t i o n   3 . 5 1 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " n t w 4 0 I N T " > < D I S P L A Y S T R I N G > W i n d o w s   N T   W o r k s t a t i o n   4 . 0 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " w r d 2 0 I N 1 " > < D I S P L A Y S T R I N G > W o r d   2 0 0 0 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " w r m 5 I N 1 " > < D I S P L A Y S T R I N G > W o r d   5 . 0   f o r   M a c i n t o s h < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " w r m 6 I N 1 " > < D I S P L A Y S T R I N G > W o r d   6 . 0   f o r   M a c i n t o s h < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " w r d 6 w i n I N 1 " > < D I S P L A Y S T R I N G > W o r d   6 . 0   f o r   W i n d o w s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " w r d 9 5 I N 1 " > < D I S P L A Y S T R I N G > W o r d   7 . 0   f o r   W i n d o w s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " w r d 9 7 I N 1 " > < D I S P L A Y S T R I N G > W o r d   9 7   f o r   W i n d o w s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " w r m 9 8 I N 1 " > < D I S P L A Y S T R I N G > W o r d   9 8   M a c i n t o s h   E d i t i o n < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " w r m I N 1 " > < D I S P L A Y S T R I N G > W o r d   f o r   M a c i n t o s h < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " w r d I N 1 " > < D I S P L A Y S T R I N G > W o r d   f o r   W i n d o w s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " w k m I N T " > < D I S P L A Y S T R I N G > W o r k s   f o r   M a c i n t o s h < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " w r k I N 1 " > < D I S P L A Y S T R I N G > W o r k s   f o r   W i n d o w s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < / P A R A M _ I T E M > < P A R A M _ I T E M   N A M E = " K e y w o r d T y p e "   T Y P E = " P A R A M _ L I S T "   V I S I B L E = " t r u e " > < D E S C R I P T I O N > d"}: < / D E S C R I P T I O N > < P A R A M _ V A L U E   V A L U E = " A L L "   D E F A U L T = " t r u e " > < D I S P L A Y S T R I N G > @b	gW[< / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " A N Y " > < D I S P L A Y S T R I N G > NUOW[< / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " P H R A S E " > < D I S P L A Y S T R I N G > [hQ9SMvw< / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " B O O L E A N " > < D I S P L A Y S T R I N G > ;w< / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < / P A R A M _ I T E M > < P A R A M _ I T E M   N A M E = " T i t l e s "   T Y P E = " P A R A M _ B O O L "   V I S I B L E = " t r u e " > < D E S C R I P T I O N > S(Wh-Nd"}< / D E S C R I P T I O N > < P A R A M _ V A L U E   V A L U E = " f a l s e "   D E F A U L T = " t r u e "   / > < / P A R A M _ I T E M > < / C O N F I G _ D A T A > 
 
         
 
                 	 < / D A T A > 
 
                 < / W R A P P E R > 
 
         < / S E A R C H E N G I N E S > 
 
 < / H E L P C E N T E R P A C K A G E > 
 
 
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\pchealth\helpctr\pss\content\cze\package_description.xml ===
< ? x m l   v e r s i o n = " 1 . 0 "   e n c o d i n g = " U T F - 1 6 " ? > 
 
 < H E L P C E N T E R P A C K A G E > 
 
         < S K U   V A L U E = " A L L " / > 
 
         < L A N G U A G E   V A L U E = " A L L " / > 
 
         < V E R S I O N   V A L U E = " 0 1 . 0 1 . 0 1 . 2 2 "   / > 
 
         < P R O D U C T   I D = " P S S   O n l i n e   A s s i s t e d   S u p p o r t "   / > 
 
         < C O N F I G > 
 
                 < S A F   A C T I O N = " A D D "   F I L E = " p s s . x m l " / > 
 
         < / C O N F I G > 
 
         < I N S T A L L _ C O N T E N T > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " p s s m a c h i n e s n a p s h o t . x m l "   U R I = " p s s m a c h i n e s n a p s h o t . x m l " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " p s s m a c h i n e s n a p s h o t - l e s s . x m l "   U R I = " p s s m a c h i n e s n a p s h o t - l e s s . x m l " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " p s s m a c h i n e s n a p s h o t - w o - c o m . x m l "   U R I = " p s s m a c h i n e s n a p s h o t - w o - c o m . x m l " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " O f f l i n e O p t i o n s . h t m "   U R I = " O f f l i n e O p t i o n s . h t m " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " O f f l i n e D C . h t m "   U R I = " O f f l i n e D C . h t m " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " C o n n e c t i o n . h t m "   U R I = " C o n n e c t i o n . h t m " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " s p a c e r . g i f "   U R I = " s p a c e r . g i f " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " r 3 _ c 2 . g i f "   U R I = " r 3 _ c 2 . g i f " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " r 1 _ c 3 . g i f "   U R I = " r 1 _ c 3 . g i f " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " r 1 _ c 2 . g i f "   U R I = " r 1 _ c 2 . g i f " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " r 1 _ c 1 . g i f "   U R I = " r 1 _ c 1 . g i f " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " I n f o _ I c o n . g i f "   U R I = " I n f o _ I c o n . g i f " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " G R e c t . g i f "   U R I = " G R e c t . g i f " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " G A r r o w . g i f "   U R I = " G A r r o w . g i f " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " s t a t u s _ o k . g i f "   U R I = " s t a t u s _ o k . g i f " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " P S S . c s s "   U R I = " P S S . c s s " / > 
 
         < / I N S T A L L _ C O N T E N T > 
 
         < T R U S T E D _ C O N T E N T > 
 
                 < T R U S T E D   A C T I O N = " A D D "   U R I = " h c p : / / C N = M i c r o s o f t % 2 0 C o r p o r a t i o n , L = R e d m o n d , S = W a s h i n g t o n , C = U S / "   / > 
 
                 < T R U S T E D   A C T I O N = " A D D "   U R I = " h t t p s : / / w e b r e s p o n s e . o n e . m i c r o s o f t . c o m / " / > 
 
         < / T R U S T E D _ C O N T E N T > 
 
         < S E A R C H E N G I N E S > 
 
                 < W R A P P E R 
 
                 	 C L S I D       =   " { 8 3 3 E 4 0 1 6 - A F F 7 - 4 A C 3 - A A C 2 - 9 F 2 4 C 1 4 5 7 B C E } " 
 
                 	 I D     =   " D 2 3 D 0 0 2 8 - A 5 4 3 - 4 7 6 7 - B 4 A A - 1 5 8 1 D 8 E 1 C D B 2 " 
 
                 	 N A M E         =   " N e t   S e a r c h   W r a p p e r " 
 
                 	 A C T I O N     =   " A D D " > 
 
                 	 < D A T A > 
 
 < C O N F I G _ D A T A   S E R V E R _ U R L = " h t t p : / / g o . m i c r o s o f t . c o m / f w l i n k / ? l i n k i d = 2 7 2 & a m p ; c l c i d = 0 x 4 0 9 "   S T A N D A R D _ S E A R C H = " 0 "   S E A R C H E N G I N E _ O W N E R = " M i c r o s o f t   C o r p o r a t i o n "   R E M O T E C O N F I G _ S E R V E R _ U R L = " h t t p : / / g o . m i c r o s o f t . c o m / f w l i n k / ? l i n k i d = 2 7 7 & a m p ; c l c i d = 0 x 4 0 9 "   U P D A T E _ F R E Q U E N C Y = " 7 "   x m l n s = " u r n : s c h e m a s - m i c r o s o f t - c o m / p s s / S D X M L / s e a r c h p r o d l i s t " > < S E A R C H E N G I N E _ N A M E > M i c r o s o f t   K n o w l e d g e   B a s e < / S E A R C H E N G I N E _ N A M E > < S E A R C H E N G I N E _ D E S C R I P T I O N > Z o b r a z    r e l e v a n t n    t  m a t a   n e b o   
l  n k y   z   w e b o v  c h   s t r  n e k   d a t a b  z e   M i c r o s o f t   K n o w l e d g e   B a s e .   D a t a b  z e   K n o w l e d g e   B a s e   j e   z d r o j   i n f o r m a c    o d b o r n    p o m o c i   a   n  s t r o j o  v l a s t n    p o m o c i   p r o   p r o d u k t y   s p o l e 
n o s t i   M i c r o s o f t . < / S E A R C H E N G I N E _ D E S C R I P T I O N > < P A R A M _ I T E M   N A M E = " P r o d u c t "   T Y P E = " P A R A M _ L I S T "   V I S I B L E = " t r u e " > < P A R A M _ V A L U E   V A L U E = " m s a l l I N T " > < D I S P L A Y S T R I N G > -   A l l   M i c r o s o f t   P r o d u c t s   - < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " a c c I N 1 " > < D I S P L A Y S T R I N G > A c c e s s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " e n c I N T " > < D I S P L A Y S T R I N G > E n c a r t a < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " x l w I N 1 " > < D I S P L A Y S T R I N G > E x c e l   f o r   W i n d o w s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " e c h I N 1 " > < D I S P L A Y S T R I N G > E x c h a n g e   S e r v e r < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " f p w I N 1 " > < D I S P L A Y S T R I N G > F r o n t P a g e   f o r   W i n d o w s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " g m s I N 1 " > < D I S P L A Y S T R I N G > G a m e s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " h d w I N T " > < D I S P L A Y S T R I N G > H a r d w a r e   P r o d u c t s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " i e I N T " > < D I S P L A Y S T R I N G > I n t e r n e t   E x p l o r e r < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " o f w I N 1 " > < D I S P L A Y S T R I N G > O f f i c e   f o r   W i n d o w s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " o u t I N 1 " > < D I S P L A Y S T R I N G > O u t l o o k < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " o e x I N 1 " > < D I S P L A Y S T R I N G > O u t l o o k   E x p r e s s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " P D 2 k I N 1 " > < D I S P L A Y S T R I N G > P h o t o D r a w   2 0 0 0 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " p p t I N 1 " > < D I S P L A Y S T R I N G > P o w e r P o i n t   f o r   W i n d o w s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " P R J I N T " > < D I S P L A Y S T R I N G > P r o j e c t   f o r   W i n d o w s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " s q l I N T " > < D I S P L A Y S T R I N G > S Q L   S e r v e r < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " v i s i o 2 k I N 1 " > < D I S P L A Y S T R I N G > V i s i o   2 0 0 0 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " v b b I N T " > < D I S P L A Y S T R I N G > V i s u a l   B a s i c < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " w i n 2 0 0 0 I N 1 " > < D I S P L A Y S T R I N G > W i n d o w s   2 0 0 0 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " w i n I N 1 " > < D I S P L A Y S T R I N G > W i n d o w s   3 . x < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " w 9 5 I N 1 " > < D I S P L A Y S T R I N G > W i n d o w s   9 5 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " w 9 8 I N 1 " > < D I S P L A Y S T R I N G > W i n d o w s   9 8 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " w 9 8 s e I N 1 " > < D I S P L A Y S T R I N G > W i n d o w s   9 8   S e c o n d   E d i t i o n < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " w c e I N T " > < D I S P L A Y S T R I N G > W i n d o w s   C E < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " w m p I N T " > < D I S P L A Y S T R I N G > W i n d o w s   M e d i a   P l a y e r < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " n t s I N 1 " > < D I S P L A Y S T R I N G > W i n d o w s   N T   S e r v e r < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " n t w I N T " > < D I S P L A Y S T R I N G > W i n d o w s   N T   W o r k s t a t i o n < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " w r d I N 1 " > < D I S P L A Y S T R I N G > W o r d   f o r   W i n d o w s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " w r k I N 1 " > < D I S P L A Y S T R I N G > W o r k s   f o r   W i n d o w s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < / P A R A M _ I T E M > < P A R A M _ I T E M   N A M E = " K e y w o r d T y p e "   T Y P E = " P A R A M _ L I S T "   V I S I B L E = " t r u e " > < D E S C R I P T I O N > V y h l e d a t : < / D E S C R I P T I O N > < P A R A M _ V A L U E   V A L U E = " A L L "   D E F A U L T = " t r u e " > < D I S P L A Y S T R I N G > V ae c h n a   s l o v a < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " A N Y " > < D I S P L A Y S T R I N G > L i b o v o l n    s l o v a < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " P H R A S E " > < D I S P L A Y S T R I N G > P Ye s n    v  r a z < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " B O O L E A N " > < D I S P L A Y S T R I N G > L o g i c k    v  r a z < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < / P A R A M _ I T E M > < P A R A M _ I T E M   N A M E = " T i t l e s "   T Y P E = " P A R A M _ B O O L "   V I S I B L E = " t r u e " > < D E S C R I P T I O N > H l e d a t   p o u z e   v   n  z v e c h < / D E S C R I P T I O N > < P A R A M _ V A L U E   V A L U E = " f a l s e "   D E F A U L T = " t r u e "   / > < / P A R A M _ I T E M > < / C O N F I G _ D A T A > 
 
         
 
                 	 < / D A T A > 
 
                 < / W R A P P E R > 
 
         < / S E A R C H E N G I N E S > 
 
 < / H E L P C E N T E R P A C K A G E > 
 
 
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\pchealth\helpctr\pss\content\dan\package_description.xml ===
< ? x m l   v e r s i o n = " 1 . 0 "   e n c o d i n g = " U T F - 1 6 " ? > 
 
 < H E L P C E N T E R P A C K A G E > 
 
         < S K U   V A L U E = " A L L " / > 
 
         < L A N G U A G E   V A L U E = " A L L " / > 
 
         < V E R S I O N   V A L U E = " 0 1 . 0 1 . 0 1 . 2 2 "   / > 
 
         < P R O D U C T   I D = " P S S   O n l i n e   A s s i s t e d   S u p p o r t "   / > 
 
         < C O N F I G > 
 
                 < S A F   A C T I O N = " A D D "   F I L E = " p s s . x m l " / > 
 
         < / C O N F I G > 
 
         < I N S T A L L _ C O N T E N T > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " p s s m a c h i n e s n a p s h o t . x m l "   U R I = " p s s m a c h i n e s n a p s h o t . x m l " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " p s s m a c h i n e s n a p s h o t - l e s s . x m l "   U R I = " p s s m a c h i n e s n a p s h o t - l e s s . x m l " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " p s s m a c h i n e s n a p s h o t - w o - c o m . x m l "   U R I = " p s s m a c h i n e s n a p s h o t - w o - c o m . x m l " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " O f f l i n e O p t i o n s . h t m "   U R I = " O f f l i n e O p t i o n s . h t m " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " O f f l i n e D C . h t m "   U R I = " O f f l i n e D C . h t m " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " C o n n e c t i o n . h t m "   U R I = " C o n n e c t i o n . h t m " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " s p a c e r . g i f "   U R I = " s p a c e r . g i f " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " r 3 _ c 2 . g i f "   U R I = " r 3 _ c 2 . g i f " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " r 1 _ c 3 . g i f "   U R I = " r 1 _ c 3 . g i f " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " r 1 _ c 2 . g i f "   U R I = " r 1 _ c 2 . g i f " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " r 1 _ c 1 . g i f "   U R I = " r 1 _ c 1 . g i f " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " I n f o _ I c o n . g i f "   U R I = " I n f o _ I c o n . g i f " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " G R e c t . g i f "   U R I = " G R e c t . g i f " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " G A r r o w . g i f "   U R I = " G A r r o w . g i f " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " s t a t u s _ o k . g i f "   U R I = " s t a t u s _ o k . g i f " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " P S S . c s s "   U R I = " P S S . c s s " / > 
 
         < / I N S T A L L _ C O N T E N T > 
 
         < T R U S T E D _ C O N T E N T > 
 
                 < T R U S T E D   A C T I O N = " A D D "   U R I = " h c p : / / C N = M i c r o s o f t % 2 0 C o r p o r a t i o n , L = R e d m o n d , S = W a s h i n g t o n , C = U S / "   / > 
 
                 < T R U S T E D   A C T I O N = " A D D "   U R I = " h t t p s : / / w e b r e s p o n s e . o n e . m i c r o s o f t . c o m / " / > 
 
         < / T R U S T E D _ C O N T E N T > 
 
         < S E A R C H E N G I N E S > 
 
                 < W R A P P E R 
 
                 	 C L S I D       =   " { 8 3 3 E 4 0 1 6 - A F F 7 - 4 A C 3 - A A C 2 - 9 F 2 4 C 1 4 5 7 B C E } " 
 
                 	 I D     =   " D 2 3 D 0 0 2 8 - A 5 4 3 - 4 7 6 7 - B 4 A A - 1 5 8 1 D 8 E 1 C D B 2 " 
 
                 	 N A M E         =   " N e t   S e a r c h   W r a p p e r " 
 
                 	 A C T I O N     =   " A D D " > 
 
                 	 < D A T A > 
 
 < C O N F I G _ D A T A   S E R V E R _ U R L = " h t t p : / / g o . m i c r o s o f t . c o m / f w l i n k / ? l i n k i d = 2 7 2 & a m p ; c l c i d = 0 x 4 0 9 "   S T A N D A R D _ S E A R C H = " 0 "   S E A R C H E N G I N E _ O W N E R = " M i c r o s o f t   C o r p o r a t i o n "   R E M O T E C O N F I G _ S E R V E R _ U R L = " h t t p : / / g o . m i c r o s o f t . c o m / f w l i n k / ? l i n k i d = 2 7 7 & a m p ; c l c i d = 0 x 4 0 9 "   U P D A T E _ F R E Q U E N C Y = " 7 "   x m l n s = " u r n : s c h e m a s - m i c r o s o f t - c o m / p s s / S D X M L / s e a r c h p r o d l i s t " > < S E A R C H E N G I N E _ N A M E > M i c r o s o f t   K n o w l e d g e   B a s e < / S E A R C H E N G I N E _ N A M E > < S E A R C H E N G I N E _ D E S C R I P T I O N > V i s e r   r e l e v a n t e   e m n e r   e l l e r   a r t i k l e r   f r a   w e b s t e d e t   M i c r o s o f t   K n o w l e d g e   B a s e .   M i c r o s o f t   K n o w l e d g e   B a s e   e r   e n   k i l d e   t i l   o p l y s n i n g e r   o m   t e k n i s k   s u p p o r t   o g   v  r k t  j e r ,   s o m   d u   k a n   b r u g e   t i l   a t   l  s e   p r o b l e m e t   m e d ,   t i l   M i c r o s o f t - p r o d u k t e r . < / S E A R C H E N G I N E _ D E S C R I P T I O N > < P A R A M _ I T E M   N A M E = " P r o d u c t "   T Y P E = " P A R A M _ L I S T "   V I S I B L E = " t r u e " > < P A R A M _ V A L U E   V A L U E = " m s a l l I N T " > < D I S P L A Y S T R I N G > -   A l l   M i c r o s o f t   P r o d u c t s   - < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " a c c I N 1 " > < D I S P L A Y S T R I N G > A c c e s s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " e n c I N T " > < D I S P L A Y S T R I N G > E n c a r t a < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " x l w I N 1 " > < D I S P L A Y S T R I N G > E x c e l   f o r   W i n d o w s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " e c h I N 1 " > < D I S P L A Y S T R I N G > E x c h a n g e   S e r v e r < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " f p w I N 1 " > < D I S P L A Y S T R I N G > F r o n t P a g e   f o r   W i n d o w s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " g m s I N 1 " > < D I S P L A Y S T R I N G > G a m e s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " h d w I N T " > < D I S P L A Y S T R I N G > H a r d w a r e   P r o d u c t s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " i e I N T " > < D I S P L A Y S T R I N G > I n t e r n e t   E x p l o r e r < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " o f w I N 1 " > < D I S P L A Y S T R I N G > O f f i c e   f o r   W i n d o w s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " o u t I N 1 " > < D I S P L A Y S T R I N G > O u t l o o k < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " o e x I N 1 " > < D I S P L A Y S T R I N G > O u t l o o k   E x p r e s s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " P D 2 k I N 1 " > < D I S P L A Y S T R I N G > P h o t o D r a w   2 0 0 0 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " p p t I N 1 " > < D I S P L A Y S T R I N G > P o w e r P o i n t   f o r   W i n d o w s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " P R J I N T " > < D I S P L A Y S T R I N G > P r o j e c t   f o r   W i n d o w s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " s q l I N T " > < D I S P L A Y S T R I N G > S Q L   S e r v e r < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " v i s i o 2 k I N 1 " > < D I S P L A Y S T R I N G > V i s i o   2 0 0 0 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " v b b I N T " > < D I S P L A Y S T R I N G > V i s u a l   B a s i c < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " w i n 2 0 0 0 I N 1 " > < D I S P L A Y S T R I N G > W i n d o w s   2 0 0 0 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " w i n I N 1 " > < D I S P L A Y S T R I N G > W i n d o w s   3 . x < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " w 9 5 I N 1 " > < D I S P L A Y S T R I N G > W i n d o w s   9 5 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " w 9 8 I N 1 " > < D I S P L A Y S T R I N G > W i n d o w s   9 8 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " w 9 8 s e I N 1 " > < D I S P L A Y S T R I N G > W i n d o w s   9 8   S e c o n d   E d i t i o n < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " w c e I N T " > < D I S P L A Y S T R I N G > W i n d o w s   C E < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " w m p I N T " > < D I S P L A Y S T R I N G > W i n d o w s   M e d i a   P l a y e r < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " n t s I N 1 " > < D I S P L A Y S T R I N G > W i n d o w s   N T   S e r v e r < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " n t w I N T " > < D I S P L A Y S T R I N G > W i n d o w s   N T   W o r k s t a t i o n < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " w r d I N 1 " > < D I S P L A Y S T R I N G > W o r d   f o r   W i n d o w s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " w r k I N 1 " > < D I S P L A Y S T R I N G > W o r k s   f o r   W i n d o w s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < / P A R A M _ I T E M > < P A R A M _ I T E M   N A M E = " K e y w o r d T y p e "   T Y P E = " P A R A M _ L I S T "   V I S I B L E = " t r u e " > < D E S C R I P T I O N > S  g   e f t e r : < / D E S C R I P T I O N > < P A R A M _ V A L U E   V A L U E = " A L L "   D E F A U L T = " t r u e " > < D I S P L A Y S T R I N G > A l l e   o r d e n e < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " A N Y " > < D I S P L A Y S T R I N G > E t h v e r t   a f   o r d e n e < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " P H R A S E " > < D I S P L A Y S T R I N G > D e n   n  j a g t i g e   s  t n i n g < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " B O O L E A N " > < D I S P L A Y S T R I N G > D e n   b o o l e s k e   s  t n i n g < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < / P A R A M _ I T E M > < P A R A M _ I T E M   N A M E = " T i t l e s "   T Y P E = " P A R A M _ B O O L "   V I S I B L E = " t r u e " > < D E S C R I P T I O N > S  g   k u n   i   t i t l e n < / D E S C R I P T I O N > < P A R A M _ V A L U E   V A L U E = " f a l s e "   D E F A U L T = " t r u e "   / > < / P A R A M _ I T E M > < / C O N F I G _ D A T A > 
 
         
 
                 	 < / D A T A > 
 
                 < / W R A P P E R > 
 
         < / S E A R C H E N G I N E S > 
 
 < / H E L P C E N T E R P A C K A G E > 
 
 
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\pchealth\helpctr\pss\content\fin\package_description.xml ===
< ? x m l   v e r s i o n = " 1 . 0 "   e n c o d i n g = " U T F - 1 6 " ? > 
 
 < H E L P C E N T E R P A C K A G E > 
 
         < S K U   V A L U E = " A L L " / > 
 
         < L A N G U A G E   V A L U E = " A L L " / > 
 
         < V E R S I O N   V A L U E = " 0 1 . 0 1 . 0 1 . 2 2 "   / > 
 
         < P R O D U C T   I D = " P S S   O n l i n e   A s s i s t e d   S u p p o r t "   / > 
 
         < C O N F I G > 
 
                 < S A F   A C T I O N = " A D D "   F I L E = " p s s . x m l " / > 
 
         < / C O N F I G > 
 
         < I N S T A L L _ C O N T E N T > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " p s s m a c h i n e s n a p s h o t . x m l "   U R I = " p s s m a c h i n e s n a p s h o t . x m l " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " p s s m a c h i n e s n a p s h o t - l e s s . x m l "   U R I = " p s s m a c h i n e s n a p s h o t - l e s s . x m l " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " p s s m a c h i n e s n a p s h o t - w o - c o m . x m l "   U R I = " p s s m a c h i n e s n a p s h o t - w o - c o m . x m l " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " O f f l i n e O p t i o n s . h t m "   U R I = " O f f l i n e O p t i o n s . h t m " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " O f f l i n e D C . h t m "   U R I = " O f f l i n e D C . h t m " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " C o n n e c t i o n . h t m "   U R I = " C o n n e c t i o n . h t m " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " s p a c e r . g i f "   U R I = " s p a c e r . g i f " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " r 3 _ c 2 . g i f "   U R I = " r 3 _ c 2 . g i f " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " r 1 _ c 3 . g i f "   U R I = " r 1 _ c 3 . g i f " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " r 1 _ c 2 . g i f "   U R I = " r 1 _ c 2 . g i f " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " r 1 _ c 1 . g i f "   U R I = " r 1 _ c 1 . g i f " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " I n f o _ I c o n . g i f "   U R I = " I n f o _ I c o n . g i f " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " G R e c t . g i f "   U R I = " G R e c t . g i f " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " G A r r o w . g i f "   U R I = " G A r r o w . g i f " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " s t a t u s _ o k . g i f "   U R I = " s t a t u s _ o k . g i f " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " P S S . c s s "   U R I = " P S S . c s s " / > 
 
         < / I N S T A L L _ C O N T E N T > 
 
         < T R U S T E D _ C O N T E N T > 
 
                 < T R U S T E D   A C T I O N = " A D D "   U R I = " h c p : / / C N = M i c r o s o f t % 2 0 C o r p o r a t i o n , L = R e d m o n d , S = W a s h i n g t o n , C = U S / "   / > 
 
                 < T R U S T E D   A C T I O N = " A D D "   U R I = " h t t p s : / / w e b r e s p o n s e . o n e . m i c r o s o f t . c o m / " / > 
 
         < / T R U S T E D _ C O N T E N T > 
 
         < S E A R C H E N G I N E S > 
 
                 < W R A P P E R 
 
                 	 C L S I D       =   " { 8 3 3 E 4 0 1 6 - A F F 7 - 4 A C 3 - A A C 2 - 9 F 2 4 C 1 4 5 7 B C E } " 
 
                 	 I D     =   " D 2 3 D 0 0 2 8 - A 5 4 3 - 4 7 6 7 - B 4 A A - 1 5 8 1 D 8 E 1 C D B 2 " 
 
                 	 N A M E         =   " N e t   S e a r c h   W r a p p e r " 
 
                 	 A C T I O N     =   " A D D " > 
 
                 	 < D A T A > 
 
 < C O N F I G _ D A T A   S E R V E R _ U R L = " h t t p : / / g o . m i c r o s o f t . c o m / f w l i n k / ? l i n k i d = 2 7 2 & a m p ; c l c i d = 0 x 4 0 9 "   S T A N D A R D _ S E A R C H = " 0 "   S E A R C H E N G I N E _ O W N E R = " M i c r o s o f t   C o r p o r a t i o n "   R E M O T E C O N F I G _ S E R V E R _ U R L = " h t t p : / / g o . m i c r o s o f t . c o m / f w l i n k / ? l i n k i d = 2 7 7 & a m p ; c l c i d = 0 x 4 0 9 "   U P D A T E _ F R E Q U E N C Y = " 7 "   x m l n s = " u r n : s c h e m a s - m i c r o s o f t - c o m / p s s / S D X M L / s e a r c h p r o d l i s t " > < S E A R C H E N G I N E _ N A M E > M i c r o s o f t   K n o w l e d g e   B a s e < / S E A R C H E N G I N E _ N A M E > < S E A R C H E N G I N E _ D E S C R I P T I O N > N  y t t     s o v e l t u v i a   a i h e i t a   j a   a r t i k k e l e j a   M i c r o s o f t i n   K n o w l e d g e   B a s e   - s i v u s t o s t a .   K y s e e s s    o n   t e k n i s t e n   t u k i t i e t o j e n   l  h d e . < / S E A R C H E N G I N E _ D E S C R I P T I O N > < P A R A M _ I T E M   N A M E = " P r o d u c t "   T Y P E = " P A R A M _ L I S T "   V I S I B L E = " t r u e " > < P A R A M _ V A L U E   V A L U E = " m s a l l I N T " > < D I S P L A Y S T R I N G > -   A l l   M i c r o s o f t   P r o d u c t s   - < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " a c c I N 1 " > < D I S P L A Y S T R I N G > A c c e s s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " e n c I N T " > < D I S P L A Y S T R I N G > E n c a r t a < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " x l w I N 1 " > < D I S P L A Y S T R I N G > E x c e l   f o r   W i n d o w s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " e c h I N 1 " > < D I S P L A Y S T R I N G > E x c h a n g e   S e r v e r < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " f p w I N 1 " > < D I S P L A Y S T R I N G > F r o n t P a g e   f o r   W i n d o w s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " g m s I N 1 " > < D I S P L A Y S T R I N G > G a m e s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " h d w I N T " > < D I S P L A Y S T R I N G > H a r d w a r e   P r o d u c t s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " i e I N T " > < D I S P L A Y S T R I N G > I n t e r n e t   E x p l o r e r < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " o f w I N 1 " > < D I S P L A Y S T R I N G > O f f i c e   f o r   W i n d o w s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " o u t I N 1 " > < D I S P L A Y S T R I N G > O u t l o o k < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " o e x I N 1 " > < D I S P L A Y S T R I N G > O u t l o o k   E x p r e s s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " P D 2 k I N 1 " > < D I S P L A Y S T R I N G > P h o t o D r a w   2 0 0 0 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " p p t I N 1 " > < D I S P L A Y S T R I N G > P o w e r P o i n t   f o r   W i n d o w s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " P R J I N T " > < D I S P L A Y S T R I N G > P r o j e c t   f o r   W i n d o w s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " s q l I N T " > < D I S P L A Y S T R I N G > S Q L   S e r v e r < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " v i s i o 2 k I N 1 " > < D I S P L A Y S T R I N G > V i s i o   2 0 0 0 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " v b b I N T " > < D I S P L A Y S T R I N G > V i s u a l   B a s i c < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " w i n 2 0 0 0 I N 1 " > < D I S P L A Y S T R I N G > W i n d o w s   2 0 0 0 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " w i n I N 1 " > < D I S P L A Y S T R I N G > W i n d o w s   3 . x < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " w 9 5 I N 1 " > < D I S P L A Y S T R I N G > W i n d o w s   9 5 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " w 9 8 I N 1 " > < D I S P L A Y S T R I N G > W i n d o w s   9 8 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " w 9 8 s e I N 1 " > < D I S P L A Y S T R I N G > W i n d o w s   9 8   S e c o n d   E d i t i o n < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " w c e I N T " > < D I S P L A Y S T R I N G > W i n d o w s   C E < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " w m p I N T " > < D I S P L A Y S T R I N G > W i n d o w s   M e d i a   P l a y e r < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " n t s I N 1 " > < D I S P L A Y S T R I N G > W i n d o w s   N T   S e r v e r < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " n t w I N T " > < D I S P L A Y S T R I N G > W i n d o w s   N T   W o r k s t a t i o n < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " w r d I N 1 " > < D I S P L A Y S T R I N G > W o r d   f o r   W i n d o w s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " w r k I N 1 " > < D I S P L A Y S T R I N G > W o r k s   f o r   W i n d o w s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < / P A R A M _ I T E M > < P A R A M _ I T E M   N A M E = " K e y w o r d T y p e "   T Y P E = " P A R A M _ L I S T "   V I S I B L E = " t r u e " > < D E S C R I P T I O N > E t s i t t  v  : < / D E S C R I P T I O N > < P A R A M _ V A L U E   V A L U E = " A L L "   D E F A U L T = " t r u e " > < D I S P L A Y S T R I N G > K a i k k i   s a n a t < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " A N Y " > < D I S P L A Y S T R I N G > M i k    t a h a n s a   s a n a < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " P H R A S E " > < D I S P L A Y S T R I N G > K o k o   l a u s e < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " B O O L E A N " > < D I S P L A Y S T R I N G > L o o g i s e t   o p e r a a t t o r i t < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < / P A R A M _ I T E M > < P A R A M _ I T E M   N A M E = " T i t l e s "   T Y P E = " P A R A M _ B O O L "   V I S I B L E = " t r u e " > < D E S C R I P T I O N > E t s i   v a i n   o t s i k o i s t a < / D E S C R I P T I O N > < P A R A M _ V A L U E   V A L U E = " f a l s e "   D E F A U L T = " t r u e "   / > < / P A R A M _ I T E M > < / C O N F I G _ D A T A > 
 
         
 
                 	 < / D A T A > 
 
                 < / W R A P P E R > 
 
         < / S E A R C H E N G I N E S > 
 
 < / H E L P C E N T E R P A C K A G E > 
 
 
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\pchealth\helpctr\pss\content\dut\package_description.xml ===
< ? x m l   v e r s i o n = " 1 . 0 "   e n c o d i n g = " U T F - 1 6 " ? > 
 
 < H E L P C E N T E R P A C K A G E > 
 
         < S K U   V A L U E = " A L L " / > 
 
         < L A N G U A G E   V A L U E = " A L L " / > 
 
         < V E R S I O N   V A L U E = " 0 1 . 0 1 . 0 1 . 2 2 "   / > 
 
         < P R O D U C T   I D = " P S S   O n l i n e   A s s i s t e d   S u p p o r t "   / > 
 
         < C O N F I G > 
 
                 < S A F   A C T I O N = " A D D "   F I L E = " p s s . x m l " / > 
 
         < / C O N F I G > 
 
         < I N S T A L L _ C O N T E N T > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " p s s m a c h i n e s n a p s h o t . x m l "   U R I = " p s s m a c h i n e s n a p s h o t . x m l " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " p s s m a c h i n e s n a p s h o t - l e s s . x m l "   U R I = " p s s m a c h i n e s n a p s h o t - l e s s . x m l " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " p s s m a c h i n e s n a p s h o t - w o - c o m . x m l "   U R I = " p s s m a c h i n e s n a p s h o t - w o - c o m . x m l " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " O f f l i n e O p t i o n s . h t m "   U R I = " O f f l i n e O p t i o n s . h t m " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " O f f l i n e D C . h t m "   U R I = " O f f l i n e D C . h t m " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " C o n n e c t i o n . h t m "   U R I = " C o n n e c t i o n . h t m " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " s p a c e r . g i f "   U R I = " s p a c e r . g i f " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " r 3 _ c 2 . g i f "   U R I = " r 3 _ c 2 . g i f " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " r 1 _ c 3 . g i f "   U R I = " r 1 _ c 3 . g i f " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " r 1 _ c 2 . g i f "   U R I = " r 1 _ c 2 . g i f " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " r 1 _ c 1 . g i f "   U R I = " r 1 _ c 1 . g i f " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " I n f o _ I c o n . g i f "   U R I = " I n f o _ I c o n . g i f " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " G R e c t . g i f "   U R I = " G R e c t . g i f " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " G A r r o w . g i f "   U R I = " G A r r o w . g i f " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " s t a t u s _ o k . g i f "   U R I = " s t a t u s _ o k . g i f " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " P S S . c s s "   U R I = " P S S . c s s " / > 
 
         < / I N S T A L L _ C O N T E N T > 
 
         < T R U S T E D _ C O N T E N T > 
 
                 < T R U S T E D   A C T I O N = " A D D "   U R I = " h c p : / / C N = M i c r o s o f t % 2 0 C o r p o r a t i o n , L = R e d m o n d , S = W a s h i n g t o n , C = U S / "   / > 
 
                 < T R U S T E D   A C T I O N = " A D D "   U R I = " h t t p s : / / w e b r e s p o n s e . o n e . m i c r o s o f t . c o m / " / > 
 
         < / T R U S T E D _ C O N T E N T > 
 
         < S E A R C H E N G I N E S > 
 
                 < W R A P P E R 
 
                 	 C L S I D       =   " { 8 3 3 E 4 0 1 6 - A F F 7 - 4 A C 3 - A A C 2 - 9 F 2 4 C 1 4 5 7 B C E } " 
 
                 	 I D     =   " D 2 3 D 0 0 2 8 - A 5 4 3 - 4 7 6 7 - B 4 A A - 1 5 8 1 D 8 E 1 C D B 2 " 
 
                 	 N A M E         =   " N e t   S e a r c h   W r a p p e r " 
 
                 	 A C T I O N     =   " A D D " > 
 
                 	 < D A T A > 
 
 < C O N F I G _ D A T A   S E R V E R _ U R L = " h t t p : / / g o . m i c r o s o f t . c o m / f w l i n k / ? l i n k i d = 2 7 2 & a m p ; c l c i d = 0 x 4 0 9 "   S T A N D A R D _ S E A R C H = " 0 "   S E A R C H E N G I N E _ O W N E R = " M i c r o s o f t   C o r p o r a t i o n "   R E M O T E C O N F I G _ S E R V E R _ U R L = " h t t p : / / g o . m i c r o s o f t . c o m / f w l i n k / ? l i n k i d = 2 7 7 & a m p ; c l c i d = 0 x 4 0 9 "   U P D A T E _ F R E Q U E N C Y = " 7 "   x m l n s = " u r n : s c h e m a s - m i c r o s o f t - c o m / p s s / S D X M L / s e a r c h p r o d l i s t " > < S E A R C H E N G I N E _ N A M E > M i c r o s o f t   K n o w l e d g e   B a s e < / S E A R C H E N G I N E _ N A M E > < S E A R C H E N G I N E _ D E S C R I P T I O N > H i e r m e e   w o r d e n   r e l e v a n t e   o n d e r w e r p e n   o f   a r t i k e l e n   v a n   d e   M i c r o s o f t   K n o w l e d g e   B a s e - w e b s i t e   w e e r g e g e v e n .   D e   K n o w l e d g e   B a s e   i s   e e n   b r o n   v a n   g e g e v e n s   v o o r   t e c h n i s c h e   o n d e r s t e u n i n g   e n   h u l p p r o g r a m m a ' s   v o o r   M i c r o s o f t - p r o d u c t e n . < / S E A R C H E N G I N E _ D E S C R I P T I O N > < P A R A M _ I T E M   N A M E = " P r o d u c t "   T Y P E = " P A R A M _ L I S T "   V I S I B L E = " t r u e " > < P A R A M _ V A L U E   V A L U E = " a c c I N 2 " > < D I S P L A Y S T R I N G > A c c e s s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " a c c 2 0 0 0 I N 2 " > < D I S P L A Y S T R I N G > A c c e s s   2 0 0 0 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " a c c 2 0 0 2 I N T " > < D I S P L A Y S T R I N G > A c c e s s   2 0 0 2 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " a c c 9 5 I N T " > < D I S P L A Y S T R I N G > A c c e s s   9 5 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " a c c 9 7 I N T " > < D I S P L A Y S T R I N G > A c c e s s   9 7 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " e n a b l e I N T " > < D I S P L A Y S T R I N G > A c c e s s i b i l i t y < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " a m p s I N T " > < D I S P L A Y S T R I N G > A c t i M a t e s   P r o d u c t e n   e n   S o f t w a r e < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " a d o I N 2 " > < D I S P L A Y S T R I N G > A c t i v e X   D a t a   O b j e c t s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " a o e I N T " > < D I S P L A Y S T R I N G > A g e   o f   E m p i r e s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " m s a l l I N T " > < D I S P L A Y S T R I N G > A l l e   M i c r o s o f t   p r o d u c t e n < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " b a c I N T " > < D I S P L A Y S T R I N G > B a c k O f f i c e   S e r v e r < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " b b 3 d I N T " > < D I S P L A Y S T R I N G > B a s e b a l l < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " c a r t I N T " > < D I S P L A Y S T R I N G > C A R T   P r e c i s i o n   R a c i n g < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " i e x I N T " > < D I S P L A Y S T R I N G > C h a t < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " c l c I N T " > < D I S P L A Y S T R I N G > C l o s e   C o m b a t < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " c f l t I N T " > < D I S P L A Y S T R I N G > C o m b a t   F l i g h t   S i m u l a t o r < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " c r w I N T " > < D I S P L A Y S T R I N G > C r e a t i v e   W r i t e r   2 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " d s s I N T " > < D I S P L A Y S T R I N G > D i g i t a l   S o u n d   S y s t e m   8 0 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " d s d k I N T " > < D I S P L A Y S T R I N G > D i r e c t X   S D K < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " e n c I N T " > < D I S P L A Y S T R I N G > E n c a r t a < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " e t p p c I N T " > < D I S P L A Y S T R I N G > E n t e r t a i n m e n t   P a c k :   T h e   P u z z l e   C o l l e c t i o n < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " x l w 2 K I N 2 " > < D I S P L A Y S T R I N G > E x c e l   2 0 0 0 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " x l 2 0 0 2 I N T " > < D I S P L A Y S T R I N G > E x c e l   2 0 0 2 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " x l m 5 N L " > < D I S P L A Y S T R I N G > E x c e l   5 . 0   v o o r   M a c i n t o s h < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " x l w 9 5 I N 2 " > < D I S P L A Y S T R I N G > E x c e l   7 . 0   v o o r   W i n d o w s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " x l w 9 7 I N 2 " > < D I S P L A Y S T R I N G > E x c e l   9 7   v o o r   W i n d o w s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " x l m 9 8 I N 2 " > < D I S P L A Y S T R I N G > E x c e l   9 8   v o o r   M a c i n t o s h < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " x l m I N 2 " > < D I S P L A Y S T R I N G > E x c e l   v o o r   M a c i n t o s h < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " x l w I N 2 " > < D I S P L A Y S T R I N G > E x c e l   v o o r   W i n d o w s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " e d k I N T " > < D I S P L A Y S T R I N G > E x c h a n g e   D e v e l o p m e n t   K i t < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " e c h I N 1 " > < D I S P L A Y S T R I N G > E x c h a n g e   S e r v e r < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " f l t I N T " > < D I S P L A Y S T R I N G > F l i g h t   S i m u l a t o r s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " f p w 1 x I N 2 " > < D I S P L A Y S T R I N G > F r o n t P a g e   1 . x   f o r   W i n d o w s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " f p 2 0 0 0 I N 2 " > < D I S P L A Y S T R I N G > F r o n t P a g e   2 0 0 0 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " f p 2 0 0 2 I N T " > < D I S P L A Y S T R I N G > F r o n t P a g e   2 0 0 2 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " f p s e 9 8 N L " > < D I S P L A Y S T R I N G > F r o n t P a g e   9 8   S e r v e r   E x t e n s i o n s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " f p m I N 2 " > < D I S P L A Y S T R I N G > F r o n t P a g e   v o o r   M a c i n t o s h < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " f p w I N 2 " > < D I S P L A Y S T R I N G > F r o n t P a g e   v o o r   W i n d o w s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " g m s I N 2 " > < D I S P L A Y S T R I N G > G a m e s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " g l f I N 2 " > < D I S P L A Y S T R I N G > G o l f < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " g s g I N T " > < D I S P L A Y S T R I N G > G r e e t i n g s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " h d w I N T " > < D I S P L A Y S T R I N G > H a r d w a r e   P r o d u c t s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " g s h p I N T " > < D I S P L A Y S T R I N G > H o m e   P u b l i s h i n g < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " i m I N T " > < D I S P L A Y S T R I N G > I n t e l l i M o u s e < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " m a c p o i n t I N T " > < D I S P L A Y S T R I N G > I n t e l l i P o i n t   f o r   M a c i n t o s h < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " i e I N T " > < D I S P L A Y S T R I N G > I n t e r n e t   E x p l o r e r < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " m s i e 5 I N T " > < D I S P L A Y S T R I N G > I n t e r n e t   E x p l o r e r   5 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " i e a k I N T " > < D I S P L A Y S T R I N G > I n t e r n e t   E x p l o r e r   A d m i n i s t r a t i o n   K i t < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " i e m a c I N T " > < D I S P L A Y S T R I N G > I n t e r n e t   E x p l o r e r   v o o r   M a c i n t o s h < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " i e u n i x I N T " > < D I S P L A Y S T R I N G > I n t e r n e t   E x p l o r e r   v o o r   U N I X < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " i e w 3 1 I N T " > < D I S P L A Y S T R I N G > I n t e r n e t   E x p l o r e r   v o o r   W i n d o w s   3 . 1 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " i e 9 5 I N T " > < D I S P L A Y S T R I N G > I n t e r n e t   E x p l o r e r   v o o r   W i n d o w s   9 5 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " i e 9 5 3 0 2 I N T " > < D I S P L A Y S T R I N G > I n t e r n e t   E x p l o r e r   v o o r   W i n d o w s   9 5   3 . 0 2 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " i e 9 5 4 0 I N T " > < D I S P L A Y S T R I N G > I n t e r n e t   E x p l o r e r   v o o r   W i n d o w s   9 5   4 . 0 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " i e n t 3 I N T " > < D I S P L A Y S T R I N G > I n t e r n e t   E x p l o r e r   v o o r   W i n d o w s   N T   3 . 5 1 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " i e n t 4 I N T " > < D I S P L A Y S T R I N G > I n t e r n e t   E x p l o r e r   v o o r   W i n d o w s   N T   4 . 0 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " i i s I N 2 " > < D I S P L A Y S T R I N G > I n t e r n e t   I n f o r m a t i o n   S e r v e r < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " i m n N L " > < D I S P L A Y S T R I N G > I n t e r n e t   M a i l   e n   N e w s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " i m n m a c N L " > < D I S P L A Y S T R I N G > I n t e r n e t   M a i l   e n   N e w s   f o r   M a c i n t o s h < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " i m n w 3 1 N L " > < D I S P L A Y S T R I N G > I n t e r n e t   M a i l   e n   N e w s   f o r   W i n d o w s   3 . 1 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " i m n 9 5 N L " > < D I S P L A Y S T R I N G > I n t e r n e t   M a i l   e n   N e w s   v o o r   W i n d o w s   9 5 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " i m n n t 4 N L " > < D I S P L A Y S T R I N G > I n t e r n e t   M a i l   e n   N e w s   v o o r   W i n d o w s   N T   4 . 0 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " n k e y I N T " > < D I S P L A Y S T R I N G > K e y b o a r d s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " l a n I N T " > < D I S P L A Y S T R I N G > L A N   M a n a g e r < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " m s v I N T " > < D I S P L A Y S T R I N G > M a i l   S e r v e r < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " m r s I N T " > < D I S P L A Y S T R I N G > M e r c h a n t   S e r v e r < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " m s q I N 2 " > < D I S P L A Y S T R I N G > M e s s a g e   Q u e u e < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " m s d k I N T " > < D I S P L A Y S T R I N G > M e s s a g i n g   S D K < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " M S R E A D I N 2 " > < D I S P L A Y S T R I N G > M i c r o s o f t   R e a d e r < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " m i d I N T " > < D I S P L A Y S T R I N G > M i d t o w n   M a d n e s s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " m n y I N T " > < D I S P L A Y S T R I N G > M o n e y < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " m n y c I N T " > < D I S P L A Y S T R I N G > M o n e y C e n t r a l < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " m t m I N T " > < D I S P L A Y S T R I N G > M o n s t e r   T r u c k   M a d n e s s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " m o t I N T " > < D I S P L A Y S T R I N G > M o t o c r o s s   M a d n e s s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " m s d n I N T " > < D I S P L A Y S T R I N G > M S D N < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " m s n I N T " > < D I S P L A Y S T R I N G > M S N   -   T h e   M i c r o s o f t   N e t w o r k < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " g m z N L " > < D I S P L A Y S T R I N G > M S N   G a m i n g   Z o n e < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " n m t I N T " > < D I S P L A Y S T R I N G > N e t M e e t i n g < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " t h e I N T " > < D I S P L A Y S T R I N G > N e t S h o w   T h e a t e r   S e r v e r < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " n t w k I N T " > < D I S P L A Y S T R I N G > N e t w o r k i n g < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " o d b c I N 2 " > < D I S P L A Y S T R I N G > O D B C < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " o f w 2 k I N 2 " > < D I S P L A Y S T R I N G > O f f i c e   2 0 0 0 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " o f w 9 5 I N 2 " > < D I S P L A Y S T R I N G > O f f i c e   7 . 0   v o o r   W i n d o w s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " o f w 9 7 I N 2 " > < D I S P L A Y S T R I N G > O f f i c e   9 7   v o o r   W i n d o w s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " o f m 9 8 I N 2 " > < D I S P L A Y S T R I N G > O f f i c e   9 8   M a c i n t o s h   E d i t i o n < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " o f d I N 2 " > < D I S P L A Y S T R I N G > O f f i c e   D e v e l o p m e n t < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " o f u d I N T " > < D I S P L A Y S T R I N G > O f f i c e   U p d a t e < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " o f m I N 2 " > < D I S P L A Y S T R I N G > O f f i c e   v o o r   M a c i n t o s h < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " o f w I N 2 " > < D I S P L A Y S T R I N G > O f f i c e   v o o r   W i n d o w s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " o f f x p I N 1 " > < D I S P L A Y S T R I N G > O f f i c e   X P   S u i t e < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " o l e I N T " > < D I S P L A Y S T R I N G > O L E   P r o g r a m m i n g < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " o u t I N 2 " > < D I S P L A Y S T R I N G > O u t l o o k < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " o u t 2 K I N 2 " > < D I S P L A Y S T R I N G > O u t l o o k   2 0 0 0 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " o l 2 0 0 2 I N T " > < D I S P L A Y S T R I N G > O u t l o o k   2 0 0 2 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " o u t 9 7 I N 2 " > < D I S P L A Y S T R I N G > O u t l o o k   9 7 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " o u t 9 8 I N T " > < D I S P L A Y S T R I N G > O u t l o o k   9 8 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " o e x I N 1 " > < D I S P L A Y S T R I N G > O u t l o o k   E x p r e s s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " o w r I N T " > < D I S P L A Y S T R I N G > O u t w a r s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " p b o x I N T " > < D I S P L A Y S T R I N G > P a n d o r a   s   B o x < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " P D 2 k I N 1 " > < D I S P L A Y S T R I N G > P h o t o D r a w   2 0 0 0 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " p i c I N T " > < D I S P L A Y S T R I N G > P i c t u r e   I t ! < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " p s d k I N T " > < D I S P L A Y S T R I N G > P l a t f o r m   S D K < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " p l 9 8 I N T " > < D I S P L A Y S T R I N G > P l u s !   9 8 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " p p t 2 0 0 0 I N 2 " > < D I S P L A Y S T R I N G > P o w e r P o i n t   2 0 0 0 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " p p t 2 0 0 2 I N T " > < D I S P L A Y S T R I N G > P o w e r P o i n t   2 0 0 2 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " p p m I N 2 " > < D I S P L A Y S T R I N G > P o w e r P o i n t   v o o r   M a c i n t o s h < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " p p t I N 2 " > < D I S P L A Y S T R I N G > P o w e r P o i n t   v o o r   W i n d o w s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " p r n t I N T " > < D I S P L A Y S T R I N G > P r i n t i n g < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " P R J 9 8 I N T " > < D I S P L A Y S T R I N G > P r o j e c t   9 8 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " P R J M I N T " > < D I S P L A Y S T R I N G > P r o j e c t   v o o r   M a c i n t o s h < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " P R J 4 M I N 2 " > < D I S P L A Y S T R I N G > P r o j e c t   v o o r   M a c i n t o s h   4 . 0 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " P R J 4 X I N 1 " > < D I S P L A Y S T R I N G > P r o j e c t   v o o r   W i n d o w s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " P R J 4 x I N 2 " > < D I S P L A Y S T R I N G > P r o j e c t   v o o r   W i n d o w s   4 . x < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " p r s I N T " > < D I S P L A Y S T R I N G > P r o x y   S e r v e r < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " p u b I N T " > < D I S P L A Y S T R I N G > P u b l i s h e r < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " p u b 2 0 0 0 I N T " > < D I S P L A Y S T R I N G > P u b l i s h e r   2 0 0 0 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " p u b 2 0 0 2 I N T " > < D I S P L A Y S T R I N G > P u b l i s h e r   2 0 0 2 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " r e f I N T " > < D I S P L A Y S T R I N G > R e f e r e n c e   P r o d u c t s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " s c h I N T " > < D I S P L A Y S T R I N G > S c h e d u l e < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " s b s s I N T " > < D I S P L A Y S T R I N G > S c h o l a s t i c   M a g i c   S c h o o l   B u s   S e r i e s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " s p a c k I N T " > < D I S P L A Y S T R I N G > S e r v i c e   P a c k s   e n   S e r v i c e   R e l e a s e s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " s e t i n s t I N T " > < D I S P L A Y S T R I N G > S e t u p   e n   I n s t a l l a t i e < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " s p t s I N T " > < D I S P L A Y S T R I N G > S h a r e P o i n t   T e a m   S e r v i c e s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " s w p I N T " > < D I S P L A Y S T R I N G > S i d e W i n d e r   G a m e   C o n t r o l l e r s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " s i t e I N T " > < D I S P L A Y S T R I N G > S i t e   S e r v e r < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " c o m I N T " > < D I S P L A Y S T R I N G > S i t e   S e r v e r   3 . 0   C o m m e r c e   E d i t i o n < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " s b s I N 1 " > < D I S P L A Y S T R I N G > S m a l l   B u s i n e s s   S e r v e r < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " s n a I N T " > < D I S P L A Y S T R I N G > S N A   S e r v e r < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " s o f t I N T " > < D I S P L A Y S T R I N G > S o f t I m a g e < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " s o u n d I N T " > < D I S P L A Y S T R I N G > S o u n d < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " s q l I N T " > < D I S P L A Y S T R I N G > S Q L   S e r v e r < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " s m s I N 1 " > < D I S P L A Y S T R I N G > S y s t e m s   M a n a g e m e n t   S e r v e r < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " t m g I N T " > < D I S P L A Y S T R I N G > T e a m   M a n a g e r < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " t e r m s v r I N T " > < D I S P L A Y S T R I N G > T e r m i n a l   S e r v e r < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " t r s I N T " > < D I S P L A Y S T R I N G > T r a n s a c t i o n   S e r v e r < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " t r b l I N T " > < D I S P L A Y S T R I N G > T r o u b l e s h o o t i n g   W i z a r d s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " u r b I N T " > < D I S P L A Y S T R I N G > U r b a n   A s s a u l t < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " v b b I N T " > < D I S P L A Y S T R I N G > V i s u a l   B a s i c < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " v c c I N 2 " > < D I S P L A Y S T R I N G > V i s u a l   C < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " f o x I N T " > < D I S P L A Y S T R I N G > V i s u a l   F o x P r o < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " v i d I N T " > < D I S P L A Y S T R I N G > V i s u a l   I n t e r D e v < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " v j j I N 1 " > < D I S P L A Y S T R I N G > V i s u a l   J < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " v s s I N T " > < D I S P L A Y S T R I N G > V i s u a l   S o u r c e S a f e < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " v s t I N T " > < D I S P L A Y S T R I N G > V i s u a l   S t u d i o < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " v s t 9 7 I N T " > < D I S P L A Y S T R I N G > V i s u a l   S t u d i o   9 7 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " v t t I N T " > < D I S P L A Y S T R I N G > V i s u a l   T e s t < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " V i z a c t I N T " > < D I S P L A Y S T R I N G > V i z a c t   2 0 0 0 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " w e b c l s I N T " > < D I S P L A Y S T R I N G > W e b C l a s s e s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " w m o s I N T " > < D I S P L A Y S T R I N G > W h e e l   M o u s e < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " s d k 6 I N T " > < D I S P L A Y S T R I N G > W i n d o w s   1 6 - b i t   S D K < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " w i n 2 0 0 0 N L " > < D I S P L A Y S T R I N G > W i n d o w s   2 0 0 0 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " W i n 2 0 0 0 D e v I N T " > < D I S P L A Y S T R I N G > W i n d o w s   2 0 0 0   -   D e v e l o p e r < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " w i n I N 2 " > < D I S P L A Y S T R I N G > W i n d o w s   3 . x < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " s d k 3 I N T " > < D I S P L A Y S T R I N G > W i n d o w s   3 2 - b i t   S D K < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " w 9 5 I N 2 " > < D I S P L A Y S T R I N G > W i n d o w s   9 5 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " w 9 8 I N 2 " > < D I S P L A Y S T R I N G > W i n d o w s   9 8 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " w 9 8 s e I N 2 " > < D I S P L A Y S T R I N G > W i n d o w s   9 8   S e c o n d   E d i t i o n < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " w c e I N T " > < D I S P L A Y S T R I N G > W i n d o w s   C E < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " w i n c e d d k I N T " > < D I S P L A Y S T R I N G > W i n d o w s   C E   P l a t f o r m   B u i l d e r < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " w i n c e v b I N T " > < D I S P L A Y S T R I N G > W i n d o w s   C E   T o o l k i t   v o o r   V i s u a l   B a s i c < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " w i n c e v c I N 2 " > < D I S P L A Y S T R I N G > W i n d o w s   C E   T o o l k i t   v o o r   V i s u a l   C < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " d d k I N T " > < D I S P L A Y S T R I N G > W i n d o w s   D D K s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " W i n D N A I N T " > < D I S P L A Y S T R I N G > W i n d o w s   D N A < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " w m p I N T " > < D I S P L A Y S T R I N G > W i n d o w s   M e d i a   P l a y e r < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " w m s I N T " > < D I S P L A Y S T R I N G > W i n d o w s   M e d i a   S e r v i c e s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " n t s I N 1 " > < D I S P L A Y S T R I N G > W i n d o w s   N T   S e r v e r < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " n t s 3 5 1 I N T " > < D I S P L A Y S T R I N G > W i n d o w s   N T   S e r v e r   3 . 5 1 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " n t s 4 0 I N T " > < D I S P L A Y S T R I N G > W i n d o w s   N T   S e r v e r   4 . 0 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " n t w I N T " > < D I S P L A Y S T R I N G > W i n d o w s   N T   W o r k s t a t i o n < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " n t w 3 5 1 I N T " > < D I S P L A Y S T R I N G > W i n d o w s   N T   W o r k s t a t i o n   3 . 5 1 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " n t w 4 0 I N T " > < D I S P L A Y S T R I N G > W i n d o w s   N T   W o r k s t a t i o n   4 . 0 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " w u p d I N T " > < D I S P L A Y S T R I N G > W i n d o w s   U p d a t e < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " w r d 2 0 I N 2 " > < D I S P L A Y S T R I N G > W o r d   2 0 0 0 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " w d 2 0 0 2 I N T " > < D I S P L A Y S T R I N G > W o r d   2 0 0 2 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " w r m 5 I N 2 " > < D I S P L A Y S T R I N G > W o r d   5 . 0   v o o r   M a c i n t o s h < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " w r m 6 I N 2 " > < D I S P L A Y S T R I N G > W o r d   6 . 0   v o o r   M a c i n t o s h < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " w r d 6 w i n I N 2 " > < D I S P L A Y S T R I N G > W o r d   6 . 0   v o o r   W i n d o w s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " w r d 9 5 I N 2 " > < D I S P L A Y S T R I N G > W o r d   7 . 0   v o o r   W i n d o w s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " w r d 9 7 I N 2 " > < D I S P L A Y S T R I N G > W o r d   9 7   v o o r   W i n d o w s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " w r m 9 8 I N 2 " > < D I S P L A Y S T R I N G > W o r d   9 8   M a c i n t o s h   E d i t i o n < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " w r m I N 2 " > < D I S P L A Y S T R I N G > W o r d   v o o r   M a c i n t o s h < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " w r d I N 2 " > < D I S P L A Y S T R I N G > W o r d   v o o r   W i n d o w s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " w k m I N T " > < D I S P L A Y S T R I N G > W o r k s   v o o r   M a c i n t o s h < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " w r k I N 2 " > < D I S P L A Y S T R I N G > W o r k s   v o o r   W i n d o w s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < / P A R A M _ I T E M > < P A R A M _ I T E M   N A M E = " K e y w o r d T y p e "   T Y P E = " P A R A M _ L I S T "   V I S I B L E = " t r u e " > < D E S C R I P T I O N > Z o e k e n   n a a r : < / D E S C R I P T I O N > < P A R A M _ V A L U E   V A L U E = " A L L "   D E F A U L T = " t r u e " > < D I S P L A Y S T R I N G > A l l e   w o o r d e n < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " A N Y " > < D I S P L A Y S T R I N G > E e n   v a n   d e   w o o r d e n < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " P H R A S E " > < D I S P L A Y S T R I N G > D e   e x a c t e   u i t d r u k k i n g < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " B O O L E A N " > < D I S P L A Y S T R I N G > D e   B o o l e s e   u i t d r u k k i n g < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < / P A R A M _ I T E M > < P A R A M _ I T E M   N A M E = " T i t l e s "   T Y P E = " P A R A M _ B O O L "   V I S I B L E = " t r u e " > < D E S C R I P T I O N > A l l e e n   i n   t i t e l   z o e k e n < / D E S C R I P T I O N > < P A R A M _ V A L U E   V A L U E = " f a l s e "   D E F A U L T = " t r u e "   / > < / P A R A M _ I T E M > < / C O N F I G _ D A T A > 
 
         
 
                 	 < / D A T A > 
 
                 < / W R A P P E R > 
 
         < / S E A R C H E N G I N E S > 
 
 < / H E L P C E N T E R P A C K A G E > 
 
 
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\pchealth\helpctr\pss\content\ger\package_description.xml ===
< ? x m l   v e r s i o n = " 1 . 0 "   e n c o d i n g = " U T F - 1 6 " ? > 
 
 < H E L P C E N T E R P A C K A G E > 
 
         < S K U   V A L U E = " A L L " / > 
 
         < L A N G U A G E   V A L U E = " A L L " / > 
 
         < V E R S I O N   V A L U E = " 0 1 . 0 1 . 0 1 . 2 2 "   / > 
 
         < P R O D U C T   I D = " P S S   O n l i n e   A s s i s t e d   S u p p o r t "   / > 
 
         < C O N F I G > 
 
                 < S A F   A C T I O N = " A D D "   F I L E = " p s s . x m l " / > 
 
         < / C O N F I G > 
 
         < I N S T A L L _ C O N T E N T > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " p s s m a c h i n e s n a p s h o t . x m l "   U R I = " p s s m a c h i n e s n a p s h o t . x m l " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " p s s m a c h i n e s n a p s h o t - l e s s . x m l "   U R I = " p s s m a c h i n e s n a p s h o t - l e s s . x m l " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " p s s m a c h i n e s n a p s h o t - w o - c o m . x m l "   U R I = " p s s m a c h i n e s n a p s h o t - w o - c o m . x m l " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " O f f l i n e O p t i o n s . h t m "   U R I = " O f f l i n e O p t i o n s . h t m " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " O f f l i n e D C . h t m "   U R I = " O f f l i n e D C . h t m " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " C o n n e c t i o n . h t m "   U R I = " C o n n e c t i o n . h t m " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " s p a c e r . g i f "   U R I = " s p a c e r . g i f " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " r 3 _ c 2 . g i f "   U R I = " r 3 _ c 2 . g i f " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " r 1 _ c 3 . g i f "   U R I = " r 1 _ c 3 . g i f " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " r 1 _ c 2 . g i f "   U R I = " r 1 _ c 2 . g i f " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " r 1 _ c 1 . g i f "   U R I = " r 1 _ c 1 . g i f " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " I n f o _ I c o n . g i f "   U R I = " I n f o _ I c o n . g i f " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " G R e c t . g i f "   U R I = " G R e c t . g i f " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " G A r r o w . g i f "   U R I = " G A r r o w . g i f " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " s t a t u s _ o k . g i f "   U R I = " s t a t u s _ o k . g i f " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " P S S . c s s "   U R I = " P S S . c s s " / > 
 
         < / I N S T A L L _ C O N T E N T > 
 
         < T R U S T E D _ C O N T E N T > 
 
                 < T R U S T E D   A C T I O N = " A D D "   U R I = " h c p : / / C N = M i c r o s o f t % 2 0 C o r p o r a t i o n , L = R e d m o n d , S = W a s h i n g t o n , C = U S / "   / > 
 
                 < T R U S T E D   A C T I O N = " A D D "   U R I = " h t t p s : / / w e b r e s p o n s e . o n e . m i c r o s o f t . c o m / " / > 
 
         < / T R U S T E D _ C O N T E N T > 
 
         < S E A R C H E N G I N E S > 
 
                 < W R A P P E R 
 
                 	 C L S I D       =   " { 8 3 3 E 4 0 1 6 - A F F 7 - 4 A C 3 - A A C 2 - 9 F 2 4 C 1 4 5 7 B C E } " 
 
                 	 I D     =   " D 2 3 D 0 0 2 8 - A 5 4 3 - 4 7 6 7 - B 4 A A - 1 5 8 1 D 8 E 1 C D B 2 " 
 
                 	 N A M E         =   " N e t   S e a r c h   W r a p p e r " 
 
                 	 A C T I O N     =   " A D D " > 
 
                 	 < D A T A > 
 
 < C O N F I G _ D A T A   S E R V E R _ U R L = " h t t p : / / g o . m i c r o s o f t . c o m / f w l i n k / ? l i n k i d = 2 7 2 & a m p ; c l c i d = 0 x 4 0 9 "   S T A N D A R D _ S E A R C H = " 0 "   S E A R C H E N G I N E _ O W N E R = " M i c r o s o f t   C o r p o r a t i o n "   R E M O T E C O N F I G _ S E R V E R _ U R L = " h t t p : / / g o . m i c r o s o f t . c o m / f w l i n k / ? l i n k i d = 2 7 7 & a m p ; c l c i d = 0 x 4 0 9 "   U P D A T E _ F R E Q U E N C Y = " 7 "   x m l n s = " u r n : s c h e m a s - m i c r o s o f t - c o m / p s s / S D X M L / s e a r c h p r o d l i s t " > < S E A R C H E N G I N E _ N A M E > M i c r o s o f t   K n o w l e d g e   B a s e < / S E A R C H E N G I N E _ N A M E > < S E A R C H E N G I N E _ D E S C R I P T I O N > Z e i g t   r e l e v a n t e   T h e m e n   u n d   A r t i k e l   v o n   d e r   M i c r o s o f t   K n o w l e d g e   B a s e - W e b s i t e   a n .   D i e   K n o w l e d g e   B a s e   e n t h  l t   t e c h n i s c h e   S u p p o r t i n f o r m a t i o n e n   u n d   S e l b s t h i l f e t o o l s   f  r   M i c r o s o f t - P r o d u k t e . < / S E A R C H E N G I N E _ D E S C R I P T I O N > < P A R A M _ I T E M   N A M E = " P r o d u c t "   T Y P E = " P A R A M _ L I S T "   V I S I B L E = " t r u e " > < P A R A M _ V A L U E   V A L U E = " W A C C 2 0 0 0 G e r " > < D I S P L A Y S T R I N G > A c c e s s   2 0 0 0 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " a c c 1 0 k b G e r " > < D I S P L A Y S T R I N G > A c c e s s   2 0 0 2 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " B W A C C A D K G e r " > < D I S P L A Y S T R I N G > A c c e s s   D e v e l o p e r   s   T o o l k i t < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " B W A C C E S S G e r " > < D I S P L A Y S T R I N G > A c c e s s   f & a m p ; u u m l ; r   W i n d o w s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " W A O E G e r " > < D I S P L A Y S T R I N G > A g e   o f   E m p i r e s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " C l i p o r g K B G e r " > < D I S P L A Y S T R I N G > C l i p   O r g a n i z e r   2 0 0 2 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " W x l 2 0 0 0 G e r " > < D I S P L A Y S T R I N G > E x c e l   2 0 0 0 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " x l 1 0 k b G e r " > < D I S P L A Y S T R I N G > E x c e l   2 0 0 2 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " M E X C E L G e r " > < D I S P L A Y S T R I N G > E x c e l   f & a m p ; u u m l ; r   M a c i n t o s h < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " W E X C E L G e r " > < D I S P L A Y S T R I N G > E x c e l   f & a m p ; u u m l ; r   W i n d o w s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " W E N T M S G S V G e r " > < D I S P L A Y S T R I N G > E x c h a n g e < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " D F L T S I M G e r " > < D I S P L A Y S T R I N G > F l u g s i m u l a t o r < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " B D F O X P R O G e r " > < D I S P L A Y S T R I N G > F o x P r o   f & a m p ; u u m l ; r   D O S < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " B M F O X P R O G e r " > < D I S P L A Y S T R I N G > F o x P r o   f & a m p ; u u m l ; r   M a c i n t o s h < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " B U F O X P R O G e r " > < D I S P L A Y S T R I N G > F o x P r o   f & a m p ; u u m l ; r   U n i x < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " B W F O X P R O G e r " > < D I S P L A Y S T R I N G > F o x P r o   f & a m p ; u u m l ; r   W i n d o w s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " W F R N T P A G G e r " > < D I S P L A Y S T R I N G > F r o n t P a g e < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " W f p 2 0 0 0 G e r " > < D I S P L A Y S T R I N G > F r o n t P a g e   2 0 0 0 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " f p 1 0 k b G e r " > < D I S P L A Y S T R I N G > F r o n t P a g e   2 0 0 2 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " O M S G O L F G e r " > < D I S P L A Y S T R I N G > G o l f < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " W I E X P L O R G e r " > < D I S P L A Y S T R I N G > I n t e r n e t   E x p l o r e r < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " W M A I L N E W G e r " > < D I S P L A Y S T R I N G > I n t e r n e t   M a i l   & a m p ;   N e w s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " W M W r i t e r G e r " > < D I S P L A Y S T R I N G > J u n i o r   S c h r e i b s t u d i o < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " W M A I L G e r " > < D I S P L A Y S T R I N G > M a i l   o r   S c h e d u l e   o r   P l u s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " H M O U S E G e r " > < D I S P L A Y S T R I N G > M a u s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " W M E C H W 4 G e r " > < D I S P L A Y S T R I N G > M e c h W a r r i o r   4 :   V e n g e a n c e < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " W M O N E Y G e r " > < D I S P L A Y S T R I N G > M o n e y < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " O M S D O S G e r " > < D I S P L A Y S T R I N G > M S - D O S < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " W E N C A R T A G e r " > < D I S P L A Y S T R I N G > M u l t i m e d i a   C D s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " H N A T K Y B R D G e r " > < D I S P L A Y S T R I N G > N a t u r a l   K e y b o a r d < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " W N E T M E E T G e r " > < D I S P L A Y S T R I N G > N e t M e e t i n g < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " W O F F 2 0 0 0 G e r " > < D I S P L A Y S T R I N G > O f f i c e   2 0 0 0 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " M O F F I C E G e r " > < D I S P L A Y S T R I N G > O f f i c e   f & a m p ; u u m l ; r   M a c i n t o s h < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " W O F F I C E G e r " > < D I S P L A Y S T R I N G > O f f i c e   f & a m p ; u u m l ; r   W i n d o w s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " o f f 1 0 k b G e r " > < D I S P L A Y S T R I N G > O f f i c e   X P < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " w O u t l o o k G e r " > < D I S P L A Y S T R I N G > O u t l o o k < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " w O L 2 0 0 0 G e r " > < D I S P L A Y S T R I N G > O u t l o o k   2 0 0 0 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " o l 1 0 k b G e r " > < D I S P L A Y S T R I N G > O u t l o o k   2 0 0 2 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " W O E G e r " > < D I S P L A Y S T R I N G > O u t l o o k   E x p r e s s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " W I N T " > < D I S P L A Y S T R I N G > P h o t o D r a w < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " W P o c k e t P C G e r " > < D I S P L A Y S T R I N G > P o c k e t   P C < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " W p p 2 0 0 0 G e r " > < D I S P L A Y S T R I N G > P o w e r P o i n t   2 0 0 0 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " p p t 1 0 k b G e r " > < D I S P L A Y S T R I N G > P o w e r P o i n t   2 0 0 2 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " M P O W E R P T G e r " > < D I S P L A Y S T R I N G > P o w e r P o i n t   f & a m p ; u u m l ; r   M a c i n t o s h < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " W P O W E R P T G e r " > < D I S P L A Y S T R I N G > P o w e r P o i n t   f & a m p ; u u m l ; r   W i n d o w s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " M P R O J E C T G e r " > < D I S P L A Y S T R I N G > P r o j e c t   f & a m p ; u u m l ; r   M a c i n t o s h < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " W W I N P R O J G e r " > < D I S P L A Y S T R I N G > P r o j e c t   f & a m p ; u u m l ; r   W i n d o w s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " W P R O X Y G e r " > < D I S P L A Y S T R I N G > P r o x y   S e r v e r < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " S h a r e p o i n t k b G e r " > < D I S P L A Y S T R I N G > S h a r e P o i n t   T e a m   S e r v i c e s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " h j o y s t i c k G e r " > < D I S P L A Y S T R I N G > S i d e W i n d e r   P r o d u k t e < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " O S Q L S V R G e r " > < D I S P L A Y S T R I N G > S Q L   S e r v e r < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " W V I D E O G e r " > < D I S P L A Y S T R I N G > V i d e o   f & a m p ; u u m l ; r   W i n d o w s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " B B A S I C G e r " > < D I S P L A Y S T R I N G > V i s u a l   B a s i c   f & a m p ; u u m l ; r   D O S < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " B V B A S I C G e r " > < D I S P L A Y S T R I N G > V i s u a l   B a s i c   f & a m p ; u u m l ; r   W i n d o w s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " W V I S U A L C G e r " > < D I S P L A Y S T R I N G > V i s u a l   C < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " W V F O X S T D G e r " > < D I S P L A Y S T R I N G > V i s u a l   F o x P r o < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " W W I N N T G e r " > < D I S P L A Y S T R I N G > W i n   N T   W o r k s t a t i o n < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " W P R I N T S Y S G e r " > < D I S P L A Y S T R I N G > W i n   P r i n t i n g   S y s t e m < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " W W i n 2 0 0 0 G e r " > < D I S P L A Y S T R I N G > W i n d o w s   2 0 0 0 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " W W I N 3 G e r " > < D I S P L A Y S T R I N G > W i n d o w s   3 . x < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " w w 9 5 G e r " > < D I S P L A Y S T R I N G > W i n d o w s   9 5 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " W W I N D O W 9 G e r " > < D I S P L A Y S T R I N G > W i n d o w s   9 8 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " W W F W G e r " > < D I S P L A Y S T R I N G > W i n d o w s   f & a m p ; u u m l ; r   W o r k g r o u p s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " w i n m e I N T " > < D I S P L A Y S T R I N G > W i n d o w s   M i l l e n n i u m   E d i t i o n < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " W N T A D V G e r " > < D I S P L A Y S T R I N G > W i n d o w s   N T   S e r v e r < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " W S O U N D S Y S G e r " > < D I S P L A Y S T R I N G > W i n d o w s   S o u n d   S y s t e m < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " W w d 2 0 0 0 G e r " > < D I S P L A Y S T R I N G > W o r d   2 0 0 0 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " w d 1 0 k b G e r " > < D I S P L A Y S T R I N G > W o r d   2 0 0 2 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " W M W o r d G e r " > < D I S P L A Y S T R I N G > W o r d   6 . 0   b i s   W o r d   9 7 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " M W O R D G e r " > < D I S P L A Y S T R I N G > W o r d   f & a m p ; u u m l ; r   M a c i n t o s h < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " D W O R D G e r " > < D I S P L A Y S T R I N G > W o r d   f & a m p ; u u m l ; r   M S - D O S < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " W W i n w o r d G e r " > < D I S P L A Y S T R I N G > W o r d   f & a m p ; u u m l ; r   W i n d o w s   2 . 0 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " D W O R K S G e r " > < D I S P L A Y S T R I N G > W o r k s   f & a m p ; u u m l ; r   D O S < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " M W O R K S 3 G e r " > < D I S P L A Y S T R I N G > W o r k s   f & a m p ; u u m l ; r   M a c i n t o s h < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " W W O R K S G e r " > < D I S P L A Y S T R I N G > W o r k s   f & a m p ; u u m l ; r   W i n d o w s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < / P A R A M _ I T E M > < P A R A M _ I T E M   N A M E = " K e y w o r d T y p e "   T Y P E = " P A R A M _ L I S T "   V I S I B L E = " t r u e " > < D E S C R I P T I O N > S u c h e n   n a c h : < / D E S C R I P T I O N > < P A R A M _ V A L U E   V A L U E = " A L L "   D E F A U L T = " t r u e " > < D I S P L A Y S T R I N G > A l l e n   W  r t e r n < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " A N Y " > < D I S P L A Y S T R I N G > B e l i e b i g e n   W  r t e r n < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " P H R A S E " > < D I S P L A Y S T R I N G > E x a k t e m   A u s d r u c k < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " B O O L E A N " > < D I S P L A Y S T R I N G > B o o l e s c h e m   A u s d r u c k < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < / P A R A M _ I T E M > < P A R A M _ I T E M   N A M E = " T i t l e s "   T Y P E = " P A R A M _ B O O L "   V I S I B L E = " t r u e " > < D E S C R I P T I O N > N u r    b e r s c h r i f t e n   d u r c h s u c h e n < / D E S C R I P T I O N > < P A R A M _ V A L U E   V A L U E = " f a l s e "   D E F A U L T = " t r u e "   / > < / P A R A M _ I T E M > < / C O N F I G _ D A T A > 
 
 	 < / D A T A > 
 
                 < / W R A P P E R > 
 
         < / S E A R C H E N G I N E S > 
 
 < / H E L P C E N T E R P A C K A G E > 
 
 
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\pchealth\helpctr\pss\content\hun\package_description.xml ===
< ? x m l   v e r s i o n = " 1 . 0 "   e n c o d i n g = " U T F - 1 6 " ? > 
 
 < H E L P C E N T E R P A C K A G E > 
 
         < S K U   V A L U E = " A L L " / > 
 
         < L A N G U A G E   V A L U E = " A L L " / > 
 
         < V E R S I O N   V A L U E = " 0 1 . 0 1 . 0 1 . 2 2 "   / > 
 
         < P R O D U C T   I D = " P S S   O n l i n e   A s s i s t e d   S u p p o r t "   / > 
 
         < C O N F I G > 
 
                 < S A F   A C T I O N = " A D D "   F I L E = " p s s . x m l " / > 
 
         < / C O N F I G > 
 
         < I N S T A L L _ C O N T E N T > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " p s s m a c h i n e s n a p s h o t . x m l "   U R I = " p s s m a c h i n e s n a p s h o t . x m l " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " p s s m a c h i n e s n a p s h o t - l e s s . x m l "   U R I = " p s s m a c h i n e s n a p s h o t - l e s s . x m l " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " p s s m a c h i n e s n a p s h o t - w o - c o m . x m l "   U R I = " p s s m a c h i n e s n a p s h o t - w o - c o m . x m l " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " O f f l i n e O p t i o n s . h t m "   U R I = " O f f l i n e O p t i o n s . h t m " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " O f f l i n e D C . h t m "   U R I = " O f f l i n e D C . h t m " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " C o n n e c t i o n . h t m "   U R I = " C o n n e c t i o n . h t m " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " s p a c e r . g i f "   U R I = " s p a c e r . g i f " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " r 3 _ c 2 . g i f "   U R I = " r 3 _ c 2 . g i f " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " r 1 _ c 3 . g i f "   U R I = " r 1 _ c 3 . g i f " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " r 1 _ c 2 . g i f "   U R I = " r 1 _ c 2 . g i f " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " r 1 _ c 1 . g i f "   U R I = " r 1 _ c 1 . g i f " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " I n f o _ I c o n . g i f "   U R I = " I n f o _ I c o n . g i f " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " G R e c t . g i f "   U R I = " G R e c t . g i f " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " G A r r o w . g i f "   U R I = " G A r r o w . g i f " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " s t a t u s _ o k . g i f "   U R I = " s t a t u s _ o k . g i f " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " P S S . c s s "   U R I = " P S S . c s s " / > 
 
         < / I N S T A L L _ C O N T E N T > 
 
         < T R U S T E D _ C O N T E N T > 
 
                 < T R U S T E D   A C T I O N = " A D D "   U R I = " h c p : / / C N = M i c r o s o f t % 2 0 C o r p o r a t i o n , L = R e d m o n d , S = W a s h i n g t o n , C = U S / "   / > 
 
                 < T R U S T E D   A C T I O N = " A D D "   U R I = " h t t p s : / / w e b r e s p o n s e . o n e . m i c r o s o f t . c o m / " / > 
 
         < / T R U S T E D _ C O N T E N T > 
 
         < S E A R C H E N G I N E S > 
 
                 < W R A P P E R 
 
                 	 C L S I D       =   " { 8 3 3 E 4 0 1 6 - A F F 7 - 4 A C 3 - A A C 2 - 9 F 2 4 C 1 4 5 7 B C E } " 
 
                 	 I D     =   " D 2 3 D 0 0 2 8 - A 5 4 3 - 4 7 6 7 - B 4 A A - 1 5 8 1 D 8 E 1 C D B 2 " 
 
                 	 N A M E         =   " N e t   S e a r c h   W r a p p e r " 
 
                 	 A C T I O N     =   " A D D " > 
 
                 	 < D A T A > 
 
 < C O N F I G _ D A T A   S E R V E R _ U R L = " h t t p : / / g o . m i c r o s o f t . c o m / f w l i n k / ? l i n k i d = 2 7 2 & a m p ; c l c i d = 0 x 4 0 9 "   S T A N D A R D _ S E A R C H = " 0 "   S E A R C H E N G I N E _ O W N E R = " M i c r o s o f t   C o r p o r a t i o n "   R E M O T E C O N F I G _ S E R V E R _ U R L = " h t t p : / / g o . m i c r o s o f t . c o m / f w l i n k / ? l i n k i d = 2 7 7 & a m p ; c l c i d = 0 x 4 0 9 "   U P D A T E _ F R E Q U E N C Y = " 7 "   x m l n s = " u r n : s c h e m a s - m i c r o s o f t - c o m / p s s / S D X M L / s e a r c h p r o d l i s t " > < S E A R C H E N G I N E _ N A M E > M i c r o s o f t   K n o w l e d g e   B a s e < / S E A R C H E N G I N E _ N A M E > < S E A R C H E N G I N E _ D E S C R I P T I O N > A   M i c r o s o f t   K n o w l e d g e   B a s e   v o n a t k o z    t  m a k  r e i n e k   v a g y   c i k k e i n e k   m e g j e l e n  t  s e .   A   K n o w l e d g e   B a s e   a   M i c r o s o f t - t e r m  k e k k e l   k a p c s o l a t o s   t e c h n i k a i   t a n  c s a d  s i   i n f o r m  c i  k    s    n s e g  t Q  e s z k  z  k   f o r r  s a . < / S E A R C H E N G I N E _ D E S C R I P T I O N > < P A R A M _ I T E M   N A M E = " P r o d u c t "   T Y P E = " P A R A M _ L I S T "   V I S I B L E = " t r u e " > < P A R A M _ V A L U E   V A L U E = " m s a l l I N T " > < D I S P L A Y S T R I N G > -   A l l   M i c r o s o f t   P r o d u c t s   - < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " a c c I N 1 " > < D I S P L A Y S T R I N G > A c c e s s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " e n c I N T " > < D I S P L A Y S T R I N G > E n c a r t a < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " x l w I N 1 " > < D I S P L A Y S T R I N G > E x c e l   f o r   W i n d o w s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " e c h I N 1 " > < D I S P L A Y S T R I N G > E x c h a n g e   S e r v e r < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " f p w I N 1 " > < D I S P L A Y S T R I N G > F r o n t P a g e   f o r   W i n d o w s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " g m s I N 1 " > < D I S P L A Y S T R I N G > G a m e s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " h d w I N T " > < D I S P L A Y S T R I N G > H a r d w a r e   P r o d u c t s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " i e I N T " > < D I S P L A Y S T R I N G > I n t e r n e t   E x p l o r e r < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " o f w I N 1 " > < D I S P L A Y S T R I N G > O f f i c e   f o r   W i n d o w s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " o u t I N 1 " > < D I S P L A Y S T R I N G > O u t l o o k < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " o e x I N 1 " > < D I S P L A Y S T R I N G > O u t l o o k   E x p r e s s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " P D 2 k I N 1 " > < D I S P L A Y S T R I N G > P h o t o D r a w   2 0 0 0 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " p p t I N 1 " > < D I S P L A Y S T R I N G > P o w e r P o i n t   f o r   W i n d o w s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " P R J I N T " > < D I S P L A Y S T R I N G > P r o j e c t   f o r   W i n d o w s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " s q l I N T " > < D I S P L A Y S T R I N G > S Q L   S e r v e r < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " v i s i o 2 k I N 1 " > < D I S P L A Y S T R I N G > V i s i o   2 0 0 0 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " v b b I N T " > < D I S P L A Y S T R I N G > V i s u a l   B a s i c < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " w i n 2 0 0 0 I N 1 " > < D I S P L A Y S T R I N G > W i n d o w s   2 0 0 0 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " w i n I N 1 " > < D I S P L A Y S T R I N G > W i n d o w s   3 . x < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " w 9 5 I N 1 " > < D I S P L A Y S T R I N G > W i n d o w s   9 5 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " w 9 8 I N 1 " > < D I S P L A Y S T R I N G > W i n d o w s   9 8 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " w 9 8 s e I N 1 " > < D I S P L A Y S T R I N G > W i n d o w s   9 8   S e c o n d   E d i t i o n < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " w c e I N T " > < D I S P L A Y S T R I N G > W i n d o w s   C E < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " w m p I N T " > < D I S P L A Y S T R I N G > W i n d o w s   M e d i a   P l a y e r < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " n t s I N 1 " > < D I S P L A Y S T R I N G > W i n d o w s   N T   S e r v e r < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " n t w I N T " > < D I S P L A Y S T R I N G > W i n d o w s   N T   W o r k s t a t i o n < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " w r d I N 1 " > < D I S P L A Y S T R I N G > W o r d   f o r   W i n d o w s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " w r k I N 1 " > < D I S P L A Y S T R I N G > W o r k s   f o r   W i n d o w s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < / P A R A M _ I T E M > < P A R A M _ I T E M   N A M E = " K e y w o r d T y p e "   T Y P E = " P A R A M _ L I S T "   V I S I B L E = " t r u e " > < D E S C R I P T I O N > K e r e s  s : < / D E S C R I P T I O N > < P A R A M _ V A L U E   V A L U E = " A L L "   D E F A U L T = " t r u e " > < D I S P L A Y S T R I N G > M i n d e n   s z  < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " A N Y " > < D I S P L A Y S T R I N G > B  r m e l y   s z  < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " P H R A S E " > < D I S P L A Y S T R I N G > T e l j e s   e g y e z  s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " B O O L E A N " > < D I S P L A Y S T R I N G > L o g i k a i   k i f e j e z  s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < / P A R A M _ I T E M > < P A R A M _ I T E M   N A M E = " T i t l e s "   T Y P E = " P A R A M _ B O O L "   V I S I B L E = " t r u e " > < D E S C R I P T I O N > K e r e s  s   c s a k   a   c  m e k b e n < / D E S C R I P T I O N > < P A R A M _ V A L U E   V A L U E = " f a l s e "   D E F A U L T = " t r u e "   / > < / P A R A M _ I T E M > < / C O N F I G _ D A T A > 
 
         
 
                 	 < / D A T A > 
 
                 < / W R A P P E R > 
 
         < / S E A R C H E N G I N E S > 
 
 < / H E L P C E N T E R P A C K A G E > 
 
 
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\pchealth\helpctr\pss\content\grk\package_description.xml ===
< ? x m l   v e r s i o n = " 1 . 0 "   e n c o d i n g = " U T F - 1 6 " ? > 
 
 < H E L P C E N T E R P A C K A G E > 
 
         < S K U   V A L U E = " A L L " / > 
 
         < L A N G U A G E   V A L U E = " A L L " / > 
 
         < V E R S I O N   V A L U E = " 0 1 . 0 1 . 0 1 . 2 2 "   / > 
 
         < P R O D U C T   I D = " P S S   O n l i n e   A s s i s t e d   S u p p o r t "   / > 
 
         < C O N F I G > 
 
                 < S A F   A C T I O N = " A D D "   F I L E = " p s s . x m l " / > 
 
         < / C O N F I G > 
 
         < I N S T A L L _ C O N T E N T > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " p s s m a c h i n e s n a p s h o t . x m l "   U R I = " p s s m a c h i n e s n a p s h o t . x m l " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " p s s m a c h i n e s n a p s h o t - l e s s . x m l "   U R I = " p s s m a c h i n e s n a p s h o t - l e s s . x m l " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " p s s m a c h i n e s n a p s h o t - w o - c o m . x m l "   U R I = " p s s m a c h i n e s n a p s h o t - w o - c o m . x m l " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " O f f l i n e O p t i o n s . h t m "   U R I = " O f f l i n e O p t i o n s . h t m " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " O f f l i n e D C . h t m "   U R I = " O f f l i n e D C . h t m " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " C o n n e c t i o n . h t m "   U R I = " C o n n e c t i o n . h t m " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " s p a c e r . g i f "   U R I = " s p a c e r . g i f " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " r 3 _ c 2 . g i f "   U R I = " r 3 _ c 2 . g i f " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " r 1 _ c 3 . g i f "   U R I = " r 1 _ c 3 . g i f " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " r 1 _ c 2 . g i f "   U R I = " r 1 _ c 2 . g i f " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " r 1 _ c 1 . g i f "   U R I = " r 1 _ c 1 . g i f " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " I n f o _ I c o n . g i f "   U R I = " I n f o _ I c o n . g i f " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " G R e c t . g i f "   U R I = " G R e c t . g i f " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " G A r r o w . g i f "   U R I = " G A r r o w . g i f " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " s t a t u s _ o k . g i f "   U R I = " s t a t u s _ o k . g i f " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " P S S . c s s "   U R I = " P S S . c s s " / > 
 
         < / I N S T A L L _ C O N T E N T > 
 
         < T R U S T E D _ C O N T E N T > 
 
                 < T R U S T E D   A C T I O N = " A D D "   U R I = " h c p : / / C N = M i c r o s o f t % 2 0 C o r p o r a t i o n , L = R e d m o n d , S = W a s h i n g t o n , C = U S / "   / > 
 
                 < T R U S T E D   A C T I O N = " A D D "   U R I = " h t t p s : / / w e b r e s p o n s e . o n e . m i c r o s o f t . c o m / " / > 
 
         < / T R U S T E D _ C O N T E N T > 
 
         < S E A R C H E N G I N E S > 
 
                 < W R A P P E R 
 
                 	 C L S I D       =   " { 8 3 3 E 4 0 1 6 - A F F 7 - 4 A C 3 - A A C 2 - 9 F 2 4 C 1 4 5 7 B C E } " 
 
                 	 I D     =   " D 2 3 D 0 0 2 8 - A 5 4 3 - 4 7 6 7 - B 4 A A - 1 5 8 1 D 8 E 1 C D B 2 " 
 
                 	 N A M E         =   " N e t   S e a r c h   W r a p p e r " 
 
                 	 A C T I O N     =   " A D D " > 
 
                 	 < D A T A > 
 
 < C O N F I G _ D A T A   S E R V E R _ U R L = " h t t p : / / g o . m i c r o s o f t . c o m / f w l i n k / ? l i n k i d = 2 7 2 & a m p ; c l c i d = 0 x 4 0 9 "   S T A N D A R D _ S E A R C H = " 0 "   S E A R C H E N G I N E _ O W N E R = " M i c r o s o f t   C o r p o r a t i o n "   R E M O T E C O N F I G _ S E R V E R _ U R L = " h t t p : / / g o . m i c r o s o f t . c o m / f w l i n k / ? l i n k i d = 2 7 7 & a m p ; c l c i d = 0 x 4 0 9 "   U P D A T E _ F R E Q U E N C Y = " 7 "   x m l n s = " u r n : s c h e m a s - m i c r o s o f t - c o m / p s s / S D X M L / s e a r c h p r o d l i s t " > < S E A R C H E N G I N E _ N A M E > M i c r o s o f t   K n o w l e d g e   B a s e < / S E A R C H E N G I N E _ N A M E > < S E A R C H E N G I N E _ D E S C R I P T I O N >                 w e b   M i c r o s o f t   K n o w l e d g e   B a s e .   H   K n o w l e d g e   B a s e                                     M i c r o s o f t . < / S E A R C H E N G I N E _ D E S C R I P T I O N > < P A R A M _ I T E M   N A M E = " P r o d u c t "   T Y P E = " P A R A M _ L I S T "   V I S I B L E = " t r u e " > < P A R A M _ V A L U E   V A L U E = " m s a l l I N T " > < D I S P L A Y S T R I N G > -   A l l   M i c r o s o f t   P r o d u c t s   - < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " a c c I N 1 " > < D I S P L A Y S T R I N G > A c c e s s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " e n c I N T " > < D I S P L A Y S T R I N G > E n c a r t a < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " x l w I N 1 " > < D I S P L A Y S T R I N G > E x c e l   f o r   W i n d o w s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " e c h I N 1 " > < D I S P L A Y S T R I N G > E x c h a n g e   S e r v e r < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " f p w I N 1 " > < D I S P L A Y S T R I N G > F r o n t P a g e   f o r   W i n d o w s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " g m s I N 1 " > < D I S P L A Y S T R I N G > G a m e s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " h d w I N T " > < D I S P L A Y S T R I N G > H a r d w a r e   P r o d u c t s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " i e I N T " > < D I S P L A Y S T R I N G > I n t e r n e t   E x p l o r e r < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " o f w I N 1 " > < D I S P L A Y S T R I N G > O f f i c e   f o r   W i n d o w s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " o f f x p I N 1 " > < D I S P L A Y S T R I N G > O f f i c e   X P   S u i t e < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " o u t I N 1 " > < D I S P L A Y S T R I N G > O u t l o o k < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " o e x I N 1 " > < D I S P L A Y S T R I N G > O u t l o o k   E x p r e s s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " P D 2 k I N 1 " > < D I S P L A Y S T R I N G > P h o t o D r a w   2 0 0 0 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " p p t I N 1 " > < D I S P L A Y S T R I N G > P o w e r P o i n t   f o r   W i n d o w s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " P R J I N T " > < D I S P L A Y S T R I N G > P r o j e c t   f o r   W i n d o w s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " s q l I N T " > < D I S P L A Y S T R I N G > S Q L   S e r v e r < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " v i s i o 2 k I N 1 " > < D I S P L A Y S T R I N G > V i s i o   2 0 0 0 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " v b b I N T " > < D I S P L A Y S T R I N G > V i s u a l   B a s i c < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " w i n 2 0 0 0 I N 1 " > < D I S P L A Y S T R I N G > W i n d o w s   2 0 0 0 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " w i n I N 1 " > < D I S P L A Y S T R I N G > W i n d o w s   3 . x < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " w 9 5 I N 1 " > < D I S P L A Y S T R I N G > W i n d o w s   9 5 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " w 9 8 I N 1 " > < D I S P L A Y S T R I N G > W i n d o w s   9 8 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " w 9 8 s e I N 1 " > < D I S P L A Y S T R I N G > W i n d o w s   9 8   S e c o n d   E d i t i o n < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " w c e I N T " > < D I S P L A Y S T R I N G > W i n d o w s   C E < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " w m p I N T " > < D I S P L A Y S T R I N G > W i n d o w s   M e d i a   P l a y e r < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " n t s I N 1 " > < D I S P L A Y S T R I N G > W i n d o w s   N T   S e r v e r < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " n t w I N T " > < D I S P L A Y S T R I N G > W i n d o w s   N T   W o r k s t a t i o n < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " w r d I N 1 " > < D I S P L A Y S T R I N G > W o r d   f o r   W i n d o w s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " w r k I N 1 " > < D I S P L A Y S T R I N G > W o r k s   f o r   W i n d o w s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < / P A R A M _ I T E M > < P A R A M _ I T E M   N A M E = " K e y w o r d T y p e "   T Y P E = " P A R A M _ L I S T "   V I S I B L E = " t r u e " > < D E S C R I P T I O N >   : < / D E S C R I P T I O N > < P A R A M _ V A L U E   V A L U E = " A L L "   D E F A U L T = " t r u e " > < D I S P L A Y S T R I N G >     < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " A N Y " > < D I S P L A Y S T R I N G >   < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " P H R A S E " > < D I S P L A Y S T R I N G >     < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " B O O L E A N " > < D I S P L A Y S T R I N G >   B o o l e a n   < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < / P A R A M _ I T E M > < P A R A M _ I T E M   N A M E = " T i t l e s "   T Y P E = " P A R A M _ B O O L "   V I S I B L E = " t r u e " > < D E S C R I P T I O N >       < / D E S C R I P T I O N > < P A R A M _ V A L U E   V A L U E = " f a l s e "   D E F A U L T = " t r u e "   / > < / P A R A M _ I T E M > < / C O N F I G _ D A T A > 
 
         
 
                 	 < / D A T A > 
 
                 < / W R A P P E R > 
 
         < / S E A R C H E N G I N E S > 
 
 < / H E L P C E N T E R P A C K A G E > 
 
 
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\pchealth\helpctr\pss\content\frn\package_description.xml ===
< ? x m l   v e r s i o n = " 1 . 0 "   e n c o d i n g = " U T F - 1 6 " ? > 
 
 < H E L P C E N T E R P A C K A G E > 
 
         < S K U   V A L U E = " A L L " / > 
 
         < L A N G U A G E   V A L U E = " A L L " / > 
 
         < V E R S I O N   V A L U E = " 0 1 . 0 1 . 0 1 . 2 2 "   / > 
 
         < P R O D U C T   I D = " P S S   O n l i n e   A s s i s t e d   S u p p o r t "   / > 
 
         < C O N F I G > 
 
                 < S A F   A C T I O N = " A D D "   F I L E = " p s s . x m l " / > 
 
         < / C O N F I G > 
 
         < I N S T A L L _ C O N T E N T > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " p s s m a c h i n e s n a p s h o t . x m l "   U R I = " p s s m a c h i n e s n a p s h o t . x m l " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " p s s m a c h i n e s n a p s h o t - l e s s . x m l "   U R I = " p s s m a c h i n e s n a p s h o t - l e s s . x m l " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " p s s m a c h i n e s n a p s h o t - w o - c o m . x m l "   U R I = " p s s m a c h i n e s n a p s h o t - w o - c o m . x m l " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " O f f l i n e O p t i o n s . h t m "   U R I = " O f f l i n e O p t i o n s . h t m " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " O f f l i n e D C . h t m "   U R I = " O f f l i n e D C . h t m " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " C o n n e c t i o n . h t m "   U R I = " C o n n e c t i o n . h t m " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " s p a c e r . g i f "   U R I = " s p a c e r . g i f " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " r 3 _ c 2 . g i f "   U R I = " r 3 _ c 2 . g i f " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " r 1 _ c 3 . g i f "   U R I = " r 1 _ c 3 . g i f " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " r 1 _ c 2 . g i f "   U R I = " r 1 _ c 2 . g i f " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " r 1 _ c 1 . g i f "   U R I = " r 1 _ c 1 . g i f " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " I n f o _ I c o n . g i f "   U R I = " I n f o _ I c o n . g i f " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " G R e c t . g i f "   U R I = " G R e c t . g i f " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " G A r r o w . g i f "   U R I = " G A r r o w . g i f " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " s t a t u s _ o k . g i f "   U R I = " s t a t u s _ o k . g i f " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " P S S . c s s "   U R I = " P S S . c s s " / > 
 
         < / I N S T A L L _ C O N T E N T > 
 
         < T R U S T E D _ C O N T E N T > 
 
                 < T R U S T E D   A C T I O N = " A D D "   U R I = " h c p : / / C N = M i c r o s o f t % 2 0 C o r p o r a t i o n , L = R e d m o n d , S = W a s h i n g t o n , C = U S / "   / > 
 
                 < T R U S T E D   A C T I O N = " A D D "   U R I = " h t t p s : / / w e b r e s p o n s e . o n e . m i c r o s o f t . c o m / " / > 
 
         < / T R U S T E D _ C O N T E N T > 
 
         < S E A R C H E N G I N E S > 
 
                 < W R A P P E R 
 
                 	 C L S I D       =   " { 8 3 3 E 4 0 1 6 - A F F 7 - 4 A C 3 - A A C 2 - 9 F 2 4 C 1 4 5 7 B C E } " 
 
                 	 I D     =   " D 2 3 D 0 0 2 8 - A 5 4 3 - 4 7 6 7 - B 4 A A - 1 5 8 1 D 8 E 1 C D B 2 " 
 
                 	 N A M E         =   " N e t   S e a r c h   W r a p p e r " 
 
                 	 A C T I O N     =   " A D D " > 
 
                 	 < D A T A > 
 
 < C O N F I G _ D A T A   S E R V E R _ U R L = " h t t p : / / g o . m i c r o s o f t . c o m / f w l i n k / ? l i n k i d = 2 7 2 & a m p ; c l c i d = 0 x 4 0 9 "   S T A N D A R D _ S E A R C H = " 0 "   S E A R C H E N G I N E _ O W N E R = " M i c r o s o f t   C o r p o r a t i o n "   R E M O T E C O N F I G _ S E R V E R _ U R L = " h t t p : / / g o . m i c r o s o f t . c o m / f w l i n k / ? l i n k i d = 2 7 7 & a m p ; c l c i d = 0 x 4 0 9 "   U P D A T E _ F R E Q U E N C Y = " 7 "   x m l n s = " u r n : s c h e m a s - m i c r o s o f t - c o m / p s s / S D X M L / s e a r c h p r o d l i s t " > < S E A R C H E N G I N E _ N A M E > B a s e   d e   c o n n a i s s a n c e s   M i c r o s o f t < / S E A R C H E N G I N E _ N A M E > < S E A R C H E N G I N E _ D E S C R I P T I O N > A f f i c h e   l e s   r u b r i q u e s   o u   l e s   a r t i c l e s   a p p r o p r i  s      p a r t i r   d u   s i t e   W e b   d e   l a   b a s e   d e   c o n n a i s s a n c e s   M i c r o s o f t .   L a   b a s e   d e   c o n n a i s s a n c e s   e s t   u n e   s o u r c e   d ' i n f o r m a t i o n   d e   s u p p o r t   t e c h n i q u e   e t   d ' o u t i l s   p o u r   s ' a i d e r   s o i - m  m e   s u r   l e s   p r o d u i t s   M i c r o s o f t . < / S E A R C H E N G I N E _ D E S C R I P T I O N > < P A R A M _ I T E M   N A M E = " P r o d u c t "   T Y P E = " P A R A M _ L I S T "   V I S I B L E = " t r u e " > < P A R A M _ V A L U E   V A L U E = " m s a l l I N T " > < D I S P L A Y S T R I N G > -   T o u s   l e s   p r o d u i t s   M i c r o s o f t   - < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " a c c 2 0 0 0 F r a " > < D I S P L A Y S T R I N G > A c c e s s   2 0 0 0 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " a c c 2 0 0 2 I N T " > < D I S P L A Y S T R I N G > A c c e s s   2 0 0 2 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " a c c 9 5 F r a " > < D I S P L A Y S T R I N G > A c c e s s   9 5 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " a c c 9 7 F r a " > < D I S P L A Y S T R I N G > A c c e s s   9 7 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " a s p I N 2 " > < D I S P L A Y S T R I N G > A c t i v e   S e r v e r   P a g e s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " a d k I N T " > < D I S P L A Y S T R I N G > A c t i v e X   S D K < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " a d o I N 1 " > < D I S P L A Y S T R I N G > A D O < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " a o e I N T " > < D I S P L A Y S T R I N G > A g e   o f   E m p i r e s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " a g s d k I N T " > < D I S P L A Y S T R I N G > A g e n t   S D K < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " A p p C t r F r a " > < D I S P L A Y S T R I N G > A p p l i c a t i o n   C e n t e r   2 0 0 0 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " a r c I N T " > < D I S P L A Y S T R I N G > A r c a d e < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " a s h c a l l I N T " > < D I S P L A Y S T R I N G > A s h e r o n   s   C a l l < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " A U T O E X P F r a " > < D I S P L A Y S T R I N G > A u t o r o u t e   E x p r e s s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " b a c F r a " > < D I S P L A Y S T R I N G > B a c k O f f i c e   S e r v e r < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " b s c F r a " > < D I S P L A Y S T R I N G > B A S I C   & a m p ;   Q u i c k B A S I C < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " i e x I N T " > < D I S P L A Y S T R I N G > C h a t < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " n k e y F r a " > < D I S P L A Y S T R I N G > C l a v i e r s   M i c r o s o f t < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " c l c I N T " > < D I S P L A Y S T R I N G > C l o s e   C o m b a t < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " c d o I N T " > < D I S P L A Y S T R I N G > C o l l a b o r a t i o n   D a t a   O b j e c t s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " c o m p l u s F r a " > < D I S P L A Y S T R I N G > C O M < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " t r a n I N T " > < D I S P L A Y S T R I N G > C O M   T r a n s a c t i o n   I n t e g r a t o r < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " c f l t I N T " > < D I S P L A Y S T R I N G > C o m b a t   F l i g h t   S i m u l a t o r < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " c o m m 2 k I N T " > < D I S P L A Y S T R I N G > C o m m e r c e   S e r v e r   2 0 0 0 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " c i s I N T " > < D I S P L A Y S T R I N G > C o m m e r c i a l   I n t e r n e t   S y s t e m < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " c s F r a " > < D I S P L A Y S T R I N G > C r i m s o n   S k i e s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " d s d k I N T " > < D I S P L A Y S T R I N G > D i r e c t X   S D K < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " e n c F r a " > < D I S P L A Y S T R I N G > E n c a r t a < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " E L L F r a " > < D I S P L A Y S T R I N G > E n c a r t a   E n g l i s h   L e a r n i n g < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " x l w 2 K F r a " > < D I S P L A Y S T R I N G > E x c e l   2 0 0 0 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " X L 2 0 0 1 F r a " > < D I S P L A Y S T R I N G > E x c e l   2 0 0 1   p o u r   M a c < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " x l 2 0 0 2 I N T " > < D I S P L A Y S T R I N G > E x c e l   2 0 0 2 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " x l w 9 7 F r a " > < D I S P L A Y S T R I N G > E x c e l   9 7   p o u r   W i n d o w s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " x l m 9 8 F r a " > < D I S P L A Y S T R I N G > E x c e l   9 8   p o u r   M a c i n t o s h < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " x l m F r a " > < D I S P L A Y S T R I N G > E x c e l   p o u r   M a c i n t o s h < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " x l w F r a " > < D I S P L A Y S T R I N G > E x c e l   p o u r   W i n d o w s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " e x c h 2 k I N 2 " > < D I S P L A Y S T R I N G > E x c h a n g e   2 0 0 0   S e r v e r < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " e d k I N T " > < D I S P L A Y S T R I N G > E x c h a n g e   D e v e l o p m e n t   K i t < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " e c h I N 2 " > < D I S P L A Y S T R I N G > E x c h a n g e   S e r v e r   5 . 5   e t   v e r s i o n s   p r c d e n t e s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " f l t F r a " > < D I S P L A Y S T R I N G > F l i g h t   S i m u l a t o r < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " f o r F r a " > < D I S P L A Y S T R I N G > F o r t r a n   P o w e r S t a t i o n < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " f p 2 0 0 0 I N 3 " > < D I S P L A Y S T R I N G > F r o n t P a g e   2 0 0 0 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " f p 2 0 0 2 I N T " > < D I S P L A Y S T R I N G > F r o n t P a g e   2 0 0 2 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " f p 9 7 F r a " > < D I S P L A Y S T R I N G > F r o n t P a g e   9 7   f o r   W i n d o w s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " f p 9 8 F r a " > < D I S P L A Y S T R I N G > F r o n t P a g e   9 8   f o r   W i n d o w s   9 8 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " f p s e 9 8 F r a " > < D I S P L A Y S T R I N G > F r o n t P a g e   9 8   S e r v e r   E x t e n s i o n s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " f p m F r a " > < D I S P L A Y S T R I N G > F r o n t P a g e   p o u r   M a c i n t o s h < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " f p w F r a " > < D I S P L A Y S T R I N G > F r o n t P a g e   p o u r   W i n d o w s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " g l f I N 1 " > < D I S P L A Y S T R I N G > G o l f < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " i m F r a " > < D I S P L A Y S T R I N G > I n t e l l i M o u s e < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " m a c p o i n t F r a " > < D I S P L A Y S T R I N G > I n t e l l i P o i n t < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " i e I N T " > < D I S P L A Y S T R I N G > I n t e r n e t   E x p l o r e r < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " i e a k I N T " > < D I S P L A Y S T R I N G > I n t e r n e t   E x p l o r e r   A d m i n i s t r a t i o n   K i t < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " i i s I N 3 " > < D I S P L A Y S T R I N G > I n t e r n e t   I n f o r m a t i o n   S e r v e r   4 . 0 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " i i s 5 0 I N 2 " > < D I S P L A Y S T R I N G > I n t e r n e t   I n f o r m a t i o n   S e r v i c e s   5 . 0 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " i s a I N T " > < D I S P L A Y S T R I N G > I n t e r n e t   S e r v e r   A P I < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " j a v I N T " > < D I S P L A Y S T R I N G > J a v a   T e c h n o l o g i e s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " g m s I N 1 " > < D I S P L A Y S T R I N G > J e u x   M i c r o s o f t < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " l a n F r a " > < D I S P L A Y S T R I N G > L A N   M a n a g e r < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " L S 2 0 0 0 I N T " > < D I S P L A Y S T R I N G > L i n k s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " m s v F r a " > < D I S P L A Y S T R I N G > M a i l   S e r v e r < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " m p I N T " > < D I S P L A Y S T R I N G > M a p P o i n t < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " m a s t I N T " > < D I S P L A Y S T R I N G > M a s t e r i n g   S e r i e s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " m s q I N 1 " > < D I S P L A Y S T R I N G > M e s s a g e   Q u e u e < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " m s d k I N T " > < D I S P L A Y S T R I N G > M e s s a g i n g   S D K < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " m g s F r a " > < D I S P L A Y S T R I N G > M e t a l   G e a r   S o l i d < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " M M C I N T " > < D I S P L A Y S T R I N G > M i c r o s o f t   M a n a g e m e n t   C o n s o l e < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " P R J 2 K F r a " > < D I S P L A Y S T R I N G > M i c r o s o f t   P r o j e c t   2 0 0 0 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " P R J 9 8 F r a " > < D I S P L A Y S T R I N G > M i c r o s o f t   P r o j e c t   9 8 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " P R J 4 M F r a " > < D I S P L A Y S T R I N G > M i c r o s o f t   P r o j e c t   p o u r   M a c i n t o s h   4 . 0 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " M S R E A D I N 2 " > < D I S P L A Y S T R I N G > M i c r o s o f t   R e a d e r < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " m i d I N T " > < D I S P L A Y S T R I N G > M i d t o w n   M a d n e s s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " m n y F r a " > < D I S P L A Y S T R I N G > M o n e y < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " m n y c I N T " > < D I S P L A Y S T R I N G > M o n e y C e n t r a l < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " m t m I N T " > < D I S P L A Y S T R I N G > M o n s t e r   T r u c k   M a d n e s s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " m o t I N T " > < D I S P L A Y S T R I N G > M o t o c r o s s   M a d n e s s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " m s d n I N T " > < D I S P L A Y S T R I N G > M S D N < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " m s d o s I N T " > < D I S P L A Y S T R I N G > M S - D O S < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " m s n I N T " > < D I S P L A Y S T R I N G > M S N   F r a n c e < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " t r s F r a " > < D I S P L A Y S T R I N G > M T S   -   M i c r o s o f t   T r a n s a c t i o n   S e r v e r < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " n m t F r a " > < D I S P L A Y S T R I N G > N e t M e e t i n g < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " o d b c F r a " > < D I S P L A Y S T R I N G > O D B C < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " o f w 2 k F r a " > < D I S P L A Y S T R I N G > O f f i c e   2 0 0 0 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " o f f 2 0 0 1 I N T " > < D I S P L A Y S T R I N G > O f f i c e   2 0 0 1   p o u r   M a c < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " o f w 9 5 F r a " > < D I S P L A Y S T R I N G > O f f i c e   7 . 0   p o u r   W i n d o w s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " o f w 9 7 F r a " > < D I S P L A Y S T R I N G > O f f i c e   9 7   p o u r   W i n d o w s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " o f m 9 8 F r a " > < D I S P L A Y S T R I N G > O f f i c e   9 8   M a c i n t o s h   E d i t i o n < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " o f d F r a " > < D I S P L A Y S T R I N G > O f f i c e   D e v e l o p m e n t < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " o f m F r a " > < D I S P L A Y S T R I N G > O f f i c e   p o u r   M a c i n t o s h < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " o f w F r a " > < D I S P L A Y S T R I N G > O f f i c e   p o u r   W i n d o w s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " o f f x p s e t F r a " > < D I S P L A Y S T R I N G > O f f i c e   X P   I n s t a l l a t i o n < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " o f f x p I N 1 " > < D I S P L A Y S T R I N G > O f f i c e   X P   S u i t e < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " o l e I N T " > < D I S P L A Y S T R I N G > O L E   P r o g r a m m i n g < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " o u t F r a " > < D I S P L A Y S T R I N G > O u t l o o k < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " o u t 2 K F r a " > < D I S P L A Y S T R I N G > O u t l o o k   2 0 0 0 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " o l 2 0 0 2 I N T " > < D I S P L A Y S T R I N G > O u t l o o k   2 0 0 2 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " o u t 9 7 F r a " > < D I S P L A Y S T R I N G > O u t l o o k   9 7 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " o u t 9 8 F r a " > < D I S P L A Y S T R I N G > O u t l o o k   9 8 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " o e x I N 2 " > < D I S P L A Y S T R I N G > O u t l o o k   E x p r e s s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " p b o x I N T " > < D I S P L A Y S T R I N G > P a n d o r a   s   B o x < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " P D 2 K I N 2 " > < D I S P L A Y S T R I N G > P h o t o D r a w   2 0 0 0 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " p i c F r a " > < D I S P L A Y S T R I N G > P i c t u r e   I t ! < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " p s d k F r a " > < D I S P L A Y S T R I N G > P l a t f o r m   S D K < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " p l 9 8 F r a " > < D I S P L A Y S T R I N G > P l u s !   9 8 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " p p t 2 0 0 0 F r a " > < D I S P L A Y S T R I N G > P o w e r P o i n t   2 0 0 0 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " P P T 2 0 0 1 F r a " > < D I S P L A Y S T R I N G > P o w e r P o i n t   2 0 0 1   f o r   M a c < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " p p t 2 0 0 2 I N T " > < D I S P L A Y S T R I N G > P o w e r P o i n t   2 0 0 2 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " p p m F r a " > < D I S P L A Y S T R I N G > P o w e r P o i n t   9 8   M a c i n t o s h   E d i t i o n < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " p p t F r a " > < D I S P L A Y S T R I N G > P o w e r P o i n t   f o r   W i n d o w s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " h d w F r a " > < D I S P L A Y S T R I N G > P r o d u i t s   m a t r i e l s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " k i d F r a " > < D I S P L A Y S T R I N G > P r o d u i t s   p o u r   e n f a n t s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " r e f F r a " > < D I S P L A Y S T R I N G > P r o d u i t s   R e f e r e n c e < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " p r s I N T " > < D I S P L A Y S T R I N G > P r o x y   S e r v e r < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " p u b F r a " > < D I S P L A Y S T R I N G > P u b l i s h e r < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " p u b 2 0 0 0 F r a " > < D I S P L A Y S T R I N G > P u b l i s h e r   2 0 0 0 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " p u b 2 0 0 2 I N T " > < D I S P L A Y S T R I N G > P u b l i s h e r   2 0 0 2 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " s c h F r a " > < D I S P L A Y S T R I N G > S c h e d u l e < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " s p t s I N T " > < D I S P L A Y S T R I N G > S h a r e P o i n t   T e a m   S e r v i c e s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " s w p F r a " > < D I S P L A Y S T R I N G > S i d e W i n d e r   M a n e t t e s   d e   J e u x < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " s i t e I N T " > < D I S P L A Y S T R I N G > S i t e   S e r v e r < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " c o m I N T " > < D I S P L A Y S T R I N G > S i t e   S e r v e r   3 . 0   C o m m e r c e   E d i t i o n < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " s b s I N 1 " > < D I S P L A Y S T R I N G > S m a l l   B u s i n e s s   S e r v e r < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " s n a I N T " > < D I S P L A Y S T R I N G > S N A   S e r v e r < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " s q l F r a " > < D I S P L A Y S T R I N G > S Q L   S e r v e r < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " s m s I N 1 " > < D I S P L A Y S T R I N G > S y s t e m s   M a n a g e m e n t   S e r v e r   1 . 2 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " S M S 2 0 0 I N T " > < D I S P L A Y S T R I N G > S y s t e m s   M a n a g e m e n t   S e r v e r   2 . 0 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " t e r m s v r F r a " > < D I S P L A Y S T R I N G > T e r m i n a l   S e r v e r < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " v i s i o 2 k I N 2 " > < D I S P L A Y S T R I N G > V i s i o   2 0 0 0 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " v b b F r a " > < D I S P L A Y S T R I N G > V i s u a l   B a s i c < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " v b a s i c 1 6 k b F r a " > < D I S P L A Y S T R I N G > V i s u a l   B a s i c   1 6 - b i t   E d i t i o n s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " v b a F r a " > < D I S P L A Y S T R I N G > V i s u a l   B a s i c   f o r   A p p l i c a t i o n s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " v c c I N 1 " > < D I S P L A Y S T R I N G > V i s u a l   C < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " v c c 1 6 I N T " > < D I S P L A Y S T R I N G > V i s u a l   C   a n d   C   -   1 6   b i t < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " f o x I N T " > < D I S P L A Y S T R I N G > V i s u a l   F o x P r o < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " v i d I N T " > < D I S P L A Y S T R I N G > V i s u a l   I n t e r D e v < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " v j j I N 2 " > < D I S P L A Y S T R I N G > V i s u a l   J < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " v s s I N T " > < D I S P L A Y S T R I N G > V i s u a l   S o u r c e S a f e < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " v s t I N T " > < D I S P L A Y S T R I N G > V i s u a l   S t u d i o < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " v s t 9 7 I N T " > < D I S P L A Y S T R I N G > V i s u a l   S t u d i o   9 7 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " w i n 2 0 0 0 F r a " > < D I S P L A Y S T R I N G > W i n d o w s   2 0 0 0 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " w i n F r a " > < D I S P L A Y S T R I N G > W i n d o w s   3 . x < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " s d k 3 F r a " > < D I S P L A Y S T R I N G > W i n d o w s   3 2 - b i t   S D K < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " w 9 5 I N 1 " > < D I S P L A Y S T R I N G > W i n d o w s   9 5 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " w 9 8 I N 1 " > < D I S P L A Y S T R I N G > W i n d o w s   9 8 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " w 9 8 s e I N 1 " > < D I S P L A Y S T R I N G > W i n d o w s   9 8   S e c o n d   E d i t i o n < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " w c e F r a " > < D I S P L A Y S T R I N G > W i n d o w s   C E   /   P o c k e t   P C < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " w i n c e d d k I N T " > < D I S P L A Y S T R I N G > W i n d o w s   C E   P l a t f o r m   B u i l d e r < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " w i n c e v b I N T " > < D I S P L A Y S T R I N G > W i n d o w s   C E   T o o l k i t   f o r   V i s u a l   B a s i c < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " w i n c e v c I N 1 " > < D I S P L A Y S T R I N G > W i n d o w s   C E   T o o l k i t   f o r   V i s u a l   C < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " d d k F r a " > < D I S P L A Y S T R I N G > W i n d o w s   D D K s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " W i n D N A F r a " > < D I S P L A Y S T R I N G > W i n d o w s   D N A < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " w m p I N T " > < D I S P L A Y S T R I N G > W i n d o w s   M e d i a   P l a y e r < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " w m s I N T " > < D I S P L A Y S T R I N G > W i n d o w s   M e d i a   S e r v i c e s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " w i n m e I N T " > < D I S P L A Y S T R I N G > W i n d o w s   M i l l e n n i u m   E d i t i o n < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " n t s 4 0 F r a " > < D I S P L A Y S T R I N G > W i n d o w s   N T   S e r v e r   4 . 0 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " n t w 4 0 F r a " > < D I S P L A Y S T R I N G > W i n d o w s   N T   W o r k s t a t i o n   4 . 0 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " w u p d I N T " > < D I S P L A Y S T R I N G > W i n d o w s   U p d a t e < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " w r d 2 0 F r a " > < D I S P L A Y S T R I N G > W o r d   2 0 0 0 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " W D 2 0 0 1 F r a " > < D I S P L A Y S T R I N G > W o r d   2 0 0 1   p o u r   M a c < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " w d 2 0 0 2 I N T " > < D I S P L A Y S T R I N G > W o r d   2 0 0 2 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " w r d 9 7 F r a " > < D I S P L A Y S T R I N G > W o r d   9 7   p o u r   W i n d o w s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " w r m 9 8 F r a " > < D I S P L A Y S T R I N G > W o r d   9 8   M a c i n t o s h   E d i t i o n < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " w r m F r a " > < D I S P L A Y S T R I N G > W o r d   p o u r   M a c i n t o s h < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " w r d F r a " > < D I S P L A Y S T R I N G > W o r d   p o u r   W i n d o w s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " w r d 9 5 F r a " > < D I S P L A Y S T R I N G > W o r d   p o u r   W i n d o w s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " w k m F r a " > < D I S P L A Y S T R I N G > W o r k s   p o u r   M a c i n t o s h < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " w r k F r a " > < D I S P L A Y S T R I N G > W o r k s   p o u r   W i n d o w s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < / P A R A M _ I T E M > < P A R A M _ I T E M   N A M E = " K e y w o r d T y p e "   T Y P E = " P A R A M _ L I S T "   V I S I B L E = " t r u e " > < D E S C R I P T I O N > R e c h e r c h e r  : < / D E S C R I P T I O N > < P A R A M _ V A L U E   V A L U E = " A L L "   D E F A U L T = " t r u e " > < D I S P L A Y S T R I N G > T o u s   l e s   m o t s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " A N Y " > < D I S P L A Y S T R I N G > N ' i m p o r t e   q u e l   m o t < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " P H R A S E " > < D I S P L A Y S T R I N G > L a   p h r a s e   e x a c t e < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " B O O L E A N " > < D I S P L A Y S T R I N G > L a   p h r a s e   b o o l  e n n e < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < / P A R A M _ I T E M > < P A R A M _ I T E M   N A M E = " T i t l e s "   T Y P E = " P A R A M _ B O O L "   V I S I B L E = " t r u e " > < D E S C R I P T I O N > R e c h e r c h e r   d a n s   T i t r e   u n i q u e m e n t < / D E S C R I P T I O N > < P A R A M _ V A L U E   V A L U E = " f a l s e "   D E F A U L T = " t r u e "   / > < / P A R A M _ I T E M > < / C O N F I G _ D A T A > 
 
         
 
                 	 < / D A T A > 
 
                 < / W R A P P E R > 
 
         < / S E A R C H E N G I N E S > 
 
 < / H E L P C E N T E R P A C K A G E > 
 
 
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\pchealth\helpctr\pss\content\jpn\package_description.xml ===
< ? x m l   v e r s i o n = " 1 . 0 "   e n c o d i n g = " U T F - 1 6 " ? > 
 
 < H E L P C E N T E R P A C K A G E > 
 
         < S K U   V A L U E = " A L L " / > 
 
         < L A N G U A G E   V A L U E = " A L L " / > 
 
         < V E R S I O N   V A L U E = " 0 1 . 0 1 . 0 1 . 2 2 "   / > 
 
         < P R O D U C T   I D = " P S S   O n l i n e   A s s i s t e d   S u p p o r t "   / > 
 
         < C O N F I G > 
 
                 < S A F   A C T I O N = " A D D "   F I L E = " p s s . x m l " / > 
 
         < / C O N F I G > 
 
         < I N S T A L L _ C O N T E N T > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " p s s m a c h i n e s n a p s h o t . x m l "   U R I = " p s s m a c h i n e s n a p s h o t . x m l " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " p s s m a c h i n e s n a p s h o t - l e s s . x m l "   U R I = " p s s m a c h i n e s n a p s h o t - l e s s . x m l " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " p s s m a c h i n e s n a p s h o t - w o - c o m . x m l "   U R I = " p s s m a c h i n e s n a p s h o t - w o - c o m . x m l " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " O f f l i n e O p t i o n s . h t m "   U R I = " O f f l i n e O p t i o n s . h t m " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " O f f l i n e D C . h t m "   U R I = " O f f l i n e D C . h t m " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " C o n n e c t i o n . h t m "   U R I = " C o n n e c t i o n . h t m " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " s p a c e r . g i f "   U R I = " s p a c e r . g i f " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " r 3 _ c 2 . g i f "   U R I = " r 3 _ c 2 . g i f " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " r 1 _ c 3 . g i f "   U R I = " r 1 _ c 3 . g i f " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " r 1 _ c 2 . g i f "   U R I = " r 1 _ c 2 . g i f " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " r 1 _ c 1 . g i f "   U R I = " r 1 _ c 1 . g i f " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " I n f o _ I c o n . g i f "   U R I = " I n f o _ I c o n . g i f " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " G R e c t . g i f "   U R I = " G R e c t . g i f " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " G A r r o w . g i f "   U R I = " G A r r o w . g i f " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " s t a t u s _ o k . g i f "   U R I = " s t a t u s _ o k . g i f " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " P S S . c s s "   U R I = " P S S . c s s " / > 
 
         < / I N S T A L L _ C O N T E N T > 
 
         < T R U S T E D _ C O N T E N T > 
 
                 < T R U S T E D   A C T I O N = " A D D "   U R I = " h c p : / / C N = M i c r o s o f t % 2 0 C o r p o r a t i o n , L = R e d m o n d , S = W a s h i n g t o n , C = U S / "   / > 
 
                 < T R U S T E D   A C T I O N = " A D D "   U R I = " h t t p s : / / w e b r e s p o n s e . o n e . m i c r o s o f t . c o m / " / > 
 
         < / T R U S T E D _ C O N T E N T > 
 
         < S E A R C H E N G I N E S > 
 
                 < W R A P P E R 
 
                 	 C L S I D       =   " { 8 3 3 E 4 0 1 6 - A F F 7 - 4 A C 3 - A A C 2 - 9 F 2 4 C 1 4 5 7 B C E } " 
 
                 	 I D     =   " D 2 3 D 0 0 2 8 - A 5 4 3 - 4 7 6 7 - B 4 A A - 1 5 8 1 D 8 E 1 C D B 2 " 
 
                 	 N A M E         =   " N e t   S e a r c h   W r a p p e r " 
 
                 	 A C T I O N     =   " A D D " > 
 
                 	 < D A T A > 
 
 < C O N F I G _ D A T A   S E R V E R _ U R L = " h t t p : / / g o . m i c r o s o f t . c o m / f w l i n k / ? l i n k i d = 2 7 2 & a m p ; c l c i d = 0 x 4 0 9 "   S T A N D A R D _ S E A R C H = " 0 "   S E A R C H E N G I N E _ O W N E R = " M i c r o s o f t   C o r p o r a t i o n "   R E M O T E C O N F I G _ S E R V E R _ U R L = " h t t p : / / g o . m i c r o s o f t . c o m / f w l i n k / ? l i n k i d = 2 7 7 & a m p ; c l c i d = 0 x 4 0 9 "   U P D A T E _ F R E Q U E N C Y = " 7 "   x m l n s = " u r n : s c h e m a s - m i c r o s o f t - c o m / p s s / S D X M L / s e a r c h p r o d l i s t " > < S E A R C H E N G I N E _ N A M E > M i c r o s o f t   0000bS`1X  ( K B ) < / S E A R C H E N G I N E _ N A M E > < S E A R C H E N G I N E _ D E S C R I P T I O N > M i c r o s o f t   0000bS`1X  ( K B )   W e b   000K00#n0B0000000N0h:yW0~0Y000000bS`1Xo00M i c r o s o f t   n0Tn000000  0000`1XJ00s0000  000  000n0`1Xng0Y00< / S E A R C H E N G I N E _ D E S C R I P T I O N > < P A R A M _ I T E M   N A M E = " P r o d u c t "   T Y P E = " P A R A M _ L I S T "   V I S I B L E = " t r u e " > < P A R A M _ V A L U E   V A L U E = " a c c J P N " > < D I S P L A Y S T R I N G > A c c e s s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " a x s f J P N " > < D I S P L A Y S T R I N G > A c t i v e   S e r v e r   P a g e s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " a d k I N T " > < D I S P L A Y S T R I N G > A c t i v e X   S o f t w a r e   D e v e l o p m e n t   K i t < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " m s a l l I N T " > < D I S P L A Y S T R I N G >  S   % `% W% i  T% l% a%  %  !#< / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " a p p c e n t e r J P N " > < D I S P L A Y S T R I N G > A p p l i c a t i o n   C e n t e r   2 0 0 0 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " b o s J P N " > < D I S P L A Y S T R I N G > B a c k O f f i c e   S e r v e r < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " b s c I N T " > < D I S P L A Y S T R I N G > B A S I C / Q B / V B D O S < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " b i z t a l k J P N " > < D I S P L A Y S T R I N G > B i z T a l k   S e r v e r < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " c h a t J P N " > < D I S P L A Y S T R I N G > C h a t < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " c o m m e r c e J P N " > < D I S P L A Y S T R I N G > C o m m e r c e   S e r v e r < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " d s d k I N T " > < D I S P L A Y S T R I N G > D i r e c t X   S D K < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " h a g a k i s J P N " > < D I S P L A Y S T R I N G >  P%     X  ^  W  I < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " e n c a r t a J P N " > < D I S P L A Y S T R I N G > E N C A R T A   /   B o o k s h e l f < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " e x c e l J P N " > < D I S P L A Y S T R I N G > E x c e l   f o r   W i n d o w s   o r   M a c i n t o s h < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " e x c h a n g e J P N " > < D I S P L A Y S T R I N G > E x c h a n g e   S e r v e r < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " f o r I N T " > < D I S P L A Y S T R I N G > F o r t r a n   P o w e r S t a t i o n / F O R T R A N < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " F r o n t P a g e J P N " > < D I S P L A Y S T R I N G > F r o n t P a g e < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " g a m e J P N " > < D I S P L A Y S T R I N G > G a m e   /   S i m u l a t o r < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " i e J P N " > < D I S P L A Y S T R I N G > I n t e r n e t   E x p l o r e r < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " i i s J P N " > < D I S P L A Y S T R I N G > I n t e r n e t   I n f o r m a t i o n   S e r v e r < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " i m a i l J P N " > < D I S P L A Y S T R I N G > I n t e r n e t   M a i l   a n d   N e w s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " i s a s v r J P N " > < D I S P L A Y S T R I N G > I n t e r n e t   S e c u r i t y   a n d   A c c e l e r a t i o n   S e r v e r < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " k e y b o a r d J P N " > < D I S P L A Y S T R I N G > K e y b o a r d   /   I n t e l l i   T y p e < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " m a c m a i l J P N " > < D I S P L A Y S T R I N G > M a i l   f o r   A p p l e T a l k   N e t w o r k s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " p c m a i l J P N " > < D I S P L A Y S T R I N G > M a i l   f o r   P C   N e t w o r k s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " m g t w a y J P N " > < D I S P L A Y S T R I N G > M a i l   G a t e w a y s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " m s q I N 2 " > < D I S P L A Y S T R I N G > M e s s a g e   Q u e u e   S e r v e r < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " o f c I N T " > < D I S P L A Y S T R I N G > M o n e y < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " m o u s e J P N " > < D I S P L A Y S T R I N G > M o u s e   /   I n t e l l i   P o i n t < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " h t m l h e l p J P N " > < D I S P L A Y S T R I N G > M S D N      C  u     < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " m s d o s J P N " > < D I S P L A Y S T R I N G > M S - D O S < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " m s i m e J P N " > < D I S P L A Y S T R I N G > M S - I M E < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " n e t m e e t i n g J P N " > < D I S P L A Y S T R I N G > N e t M e e t i n g < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " n e t s h o w J P N " > < D I S P L A Y S T R I N G > N e t S h o w < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " o f f c e d e v J P N " > < D I S P L A Y S T R I N G > O f f i c e   D e v e l o p e r < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " o f f i c e J P N " > < D I S P L A Y S T R I N G > O f f i c e   f o r   W i n d o w s   o r   M a c i n t o s h < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " o u t l o o k J P N " > < D I S P L A Y S T R I N G > O u t l o o k < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " o e J P N " > < D I S P L A Y S T R I N G > O u t l o o k   E x p r e s s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " W I N T " > < D I S P L A Y S T R I N G > P h o t o D r a w < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " p i c t u r e i t J P N " > < D I S P L A Y S T R I N G > P i c t u r e   I t ! < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " p o w e r p o i n t J P N " > < D I S P L A Y S T R I N G > P o w e r P o i n t   f o r   W i n d o w s   o r   M a c i n t o s h < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " p r o j e c t J P N " > < D I S P L A Y S T R I N G > P r o j e c t < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " p r o x y s v r J P N " > < D I S P L A Y S T R I N G > P r o x y   S e r v e r < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " p u b l i s h e r J P N " > < D I S P L A Y S T R I N G > P u b l i s h e r < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " s p p s J P N " > < D I S P L A Y S T R I N G > S h a r e P o i n t   P o r t a l   S e r v e r < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " j o y s t i c k J P N " > < D I S P L A Y S T R I N G > S i d e W i n d e r   /   G a m e   C o n t r o l   S o f t w a r e < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " s i t e s r v J P N " > < D I S P L A Y S T R I N G > S i t e   S e r v e r < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " s b s I N 2 " > < D I S P L A Y S T R I N G > S m a l l   B u s i n e s s   S e r v e r < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " s n a J P N " > < D I S P L A Y S T R I N G > S N A   S e r v e r < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " s q l s e r v e r J P N " > < D I S P L A Y S T R I N G > S Q L   S e r v e r < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " s m s I N 2 " > < D I S P L A Y S T R I N G > S y s t e m s   M a n a g e m e n t   S e r v e r < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " t r s I N T " > < D I S P L A Y S T R I N G > T r a n s a c t i o n   S e r v e r < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " w i n m i s c J P N " > < D I S P L A Y S T R I N G > V i d e o   f o r   W i n d o w s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " v i s i o J P N " > < D I S P L A Y S T R I N G > V i s i o < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " v b J P N " > < D I S P L A Y S T R I N G > V i s u a l   B a s i c < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " v b a J P N " > < D I S P L A Y S T R I N G > V i s u a l   B a s i c   f o r   A p p l i c a t i o n s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " v c J P N " > < D I S P L A Y S T R I N G > V i s u a l   C < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " v i n t e r d e v J P N " > < D I S P L A Y S T R I N G > V i s u a l   I n t e r D e v < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " j a v I N T " > < D I S P L A Y S T R I N G > V i s u a l   J < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " v s s I N T " > < D I S P L A Y S T R I N G > V i s u a l   S o u r c e S a f e < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " v s t u d i o J P N " > < D I S P L A Y S T R I N G > V i s u a l   S t u d i o < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " w i n 1 6 s d k J P N " > < D I S P L A Y S T R I N G > W i n d o w s   1 6 - b i t   S D K < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " w i n 2 0 0 0 b e t a I N T " > < D I S P L A Y S T R I N G > W i n d o w s   2 0 0 0 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " w i n I N 2 " > < D I S P L A Y S T R I N G > W i n d o w s   3 . x < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " w i n 3 2 J P N " > < D I S P L A Y S T R I N G > W i n d o w s   3 2 - b i t   S D K / D D K < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " w i n 9 5 x J P N " > < D I S P L A Y S T R I N G > W i n d o w s   9 5 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " w i n 9 8 x J P N " > < D I S P L A Y S T R I N G > W i n d o w s   9 8 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " w i n m i l J P N " > < D I S P L A Y S T R I N G > W i n d o w s   M e < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " w m p J P N " > < D I S P L A Y S T R I N G > W i n d o w s   M e d i a   P l a y e r < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " w m t I N T " > < D I S P L A Y S T R I N G > W i n d o w s   M e d i a   T e c h n o l o g i e s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " w i n n t J P N " > < D I S P L A Y S T R I N G > W i n d o w s   N T < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " w o r d J P N " > < D I S P L A Y S T R I N G > W o r d   f o r   W i n d o w s   o r   M a c i n t o s h < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " w o r k s J P N " > < D I S P L A Y S T R I N G > W o r k s   /   F a m i l y   P a c k a g e < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < / P A R A M _ I T E M > < P A R A M _ I T E M   N A M E = " K e y w o r d T y p e "   T Y P E = " P A R A M _ L I S T "   V I S I B L E = " t r u e " > < D E S C R I P T I O N > i"}el: < / D E S C R I P T I O N > < P A R A M _ V A L U E   V A L U E = " A L L "   D E F A U L T = " t r u e " > < D I S P L A Y S T R I N G > Y0y0f0n0XS0+T0i"}< / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " A N Y " > < D I S P L A Y S T R I N G > 1   d0N
Nn0XS0+T0i"}< / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " P H R A S E " > < D I S P L A Y S T R I N G > Si"}< / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " B O O L E A N " > < D I S P L A Y S T R I N G > b5_i"}  ( o{P[O(u) < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < / P A R A M _ I T E M > < P A R A M _ I T E M   N A M E = " T i t l e s "   T Y P E = " P A R A M _ B O O L "   V I S I B L E = " t r u e " > < D E S C R I P T I O N > 0000n00i"}Y00< / D E S C R I P T I O N > < P A R A M _ V A L U E   V A L U E = " f a l s e "   D E F A U L T = " t r u e "   / > < / P A R A M _ I T E M > < / C O N F I G _ D A T A > 
 
         
 
                 	 < / D A T A > 
 
                 < / W R A P P E R > 
 
         < / S E A R C H E N G I N E S > 
 
 < / H E L P C E N T E R P A C K A G E > 
 
 
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\pchealth\helpctr\pss\content\itn\package_description.xml ===
< ? x m l   v e r s i o n = " 1 . 0 "   e n c o d i n g = " U T F - 1 6 " ? > 
 
 < H E L P C E N T E R P A C K A G E > 
 
         < S K U   V A L U E = " A L L " / > 
 
         < L A N G U A G E   V A L U E = " A L L " / > 
 
         < V E R S I O N   V A L U E = " 0 1 . 0 1 . 0 1 . 2 2 "   / > 
 
         < P R O D U C T   I D = " P S S   O n l i n e   A s s i s t e d   S u p p o r t "   / > 
 
         < C O N F I G > 
 
                 < S A F   A C T I O N = " A D D "   F I L E = " p s s . x m l " / > 
 
         < / C O N F I G > 
 
         < I N S T A L L _ C O N T E N T > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " p s s m a c h i n e s n a p s h o t . x m l "   U R I = " p s s m a c h i n e s n a p s h o t . x m l " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " p s s m a c h i n e s n a p s h o t - l e s s . x m l "   U R I = " p s s m a c h i n e s n a p s h o t - l e s s . x m l " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " p s s m a c h i n e s n a p s h o t - w o - c o m . x m l "   U R I = " p s s m a c h i n e s n a p s h o t - w o - c o m . x m l " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " O f f l i n e O p t i o n s . h t m "   U R I = " O f f l i n e O p t i o n s . h t m " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " O f f l i n e D C . h t m "   U R I = " O f f l i n e D C . h t m " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " C o n n e c t i o n . h t m "   U R I = " C o n n e c t i o n . h t m " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " s p a c e r . g i f "   U R I = " s p a c e r . g i f " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " r 3 _ c 2 . g i f "   U R I = " r 3 _ c 2 . g i f " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " r 1 _ c 3 . g i f "   U R I = " r 1 _ c 3 . g i f " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " r 1 _ c 2 . g i f "   U R I = " r 1 _ c 2 . g i f " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " r 1 _ c 1 . g i f "   U R I = " r 1 _ c 1 . g i f " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " I n f o _ I c o n . g i f "   U R I = " I n f o _ I c o n . g i f " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " G R e c t . g i f "   U R I = " G R e c t . g i f " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " G A r r o w . g i f "   U R I = " G A r r o w . g i f " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " s t a t u s _ o k . g i f "   U R I = " s t a t u s _ o k . g i f " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " P S S . c s s "   U R I = " P S S . c s s " / > 
 
         < / I N S T A L L _ C O N T E N T > 
 
         < T R U S T E D _ C O N T E N T > 
 
                 < T R U S T E D   A C T I O N = " A D D "   U R I = " h c p : / / C N = M i c r o s o f t % 2 0 C o r p o r a t i o n , L = R e d m o n d , S = W a s h i n g t o n , C = U S / "   / > 
 
                 < T R U S T E D   A C T I O N = " A D D "   U R I = " h t t p s : / / w e b r e s p o n s e . o n e . m i c r o s o f t . c o m / " / > 
 
         < / T R U S T E D _ C O N T E N T > 
 
         < S E A R C H E N G I N E S > 
 
                 < W R A P P E R 
 
                 	 C L S I D       =   " { 8 3 3 E 4 0 1 6 - A F F 7 - 4 A C 3 - A A C 2 - 9 F 2 4 C 1 4 5 7 B C E } " 
 
                 	 I D     =   " D 2 3 D 0 0 2 8 - A 5 4 3 - 4 7 6 7 - B 4 A A - 1 5 8 1 D 8 E 1 C D B 2 " 
 
                 	 N A M E         =   " N e t   S e a r c h   W r a p p e r " 
 
                 	 A C T I O N     =   " A D D " > 
 
                 	 < D A T A > 
 
 < C O N F I G _ D A T A   S E R V E R _ U R L = " h t t p : / / g o . m i c r o s o f t . c o m / f w l i n k / ? l i n k i d = 2 7 2 & a m p ; c l c i d = 0 x 4 0 9 "   S T A N D A R D _ S E A R C H = " 0 "   S E A R C H E N G I N E _ O W N E R = " M i c r o s o f t   C o r p o r a t i o n "   R E M O T E C O N F I G _ S E R V E R _ U R L = " h t t p : / / g o . m i c r o s o f t . c o m / f w l i n k / ? l i n k i d = 2 7 7 & a m p ; c l c i d = 0 x 4 0 9 "   U P D A T E _ F R E Q U E N C Y = " 7 "   x m l n s = " u r n : s c h e m a s - m i c r o s o f t - c o m / p s s / S D X M L / s e a r c h p r o d l i s t " > < S E A R C H E N G I N E _ N A M E > M i c r o s o f t   K n o w l e d g e   B a s e < / S E A R C H E N G I N E _ N A M E > < S E A R C H E N G I N E _ D E S C R I P T I O N > V i s u a l i z z a   g l i   a r g o m e n t i   e   g l i   a r t i c o l i   p e r t i n e n t i   d i s p o n i b i l i   s u l   s i t o   W e b   d i   M i c r o s o f t   K n o w l e d g e   B a s e .   L a   K n o w l e d g e   B a s e      u n a   f o n t e   d i   n o t i z i e   d i   c a r a t t e r e   t e c n i c o ,   s t r u m e n t i   e   u t i l i t    p e r   i   p r o d o t t i   M i c r o s o f t . < / S E A R C H E N G I N E _ D E S C R I P T I O N > < P A R A M _ I T E M   N A M E = " P r o d u c t "   T Y P E = " P A R A M _ L I S T "   V I S I B L E = " t r u e " > < P A R A M _ V A L U E   V A L U E = " a c c I N 2 " > < D I S P L A Y S T R I N G > A c c e s s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " a c c 2 0 0 2 I N T " > < D I S P L A Y S T R I N G > A c c e s s   2 0 0 2 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " b s c I N T " > < D I S P L A Y S T R I N G > B A S I C   & a m p ;   Q u i c k B A S I C < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " x l 2 0 0 2 I N T " > < D I S P L A Y S T R I N G > E x c e l   2 0 0 2 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " x l m I N 2 " > < D I S P L A Y S T R I N G > E x c e l   f o r   M a c i n t o s h < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " x l w I N 2 " > < D I S P L A Y S T R I N G > E x c e l   f o r   W i n d o w s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " e d k I N T " > < D I S P L A Y S T R I N G > E x c h a n g e   D e v e l o p m e n t   K i t < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " e c h I N 1 " > < D I S P L A Y S T R I N G > E x c h a n g e   S e r v e r < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " f o r I N T " > < D I S P L A Y S T R I N G > F o r t r a n   P o w e r S t a t i o n < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " f p 2 0 0 2 I N T " > < D I S P L A Y S T R I N G > F r o n t P a g e   2 0 0 2 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " f p m I N 2 " > < D I S P L A Y S T R I N G > F r o n t P a g e   f o r   M a c i n t o s h < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " f p w I N 2 " > < D I S P L A Y S T R I N G > F r o n t P a g e   f o r   W i n d o w s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " g l f I N 2 " > < D I S P L A Y S T R I N G > G o l f < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " i m I N T " > < D I S P L A Y S T R I N G > I n t e l l i M o u s e < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " i e I N T " > < D I S P L A Y S T R I N G > I n t e r n e t   E x p l o r e r < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " i i s I N 2 " > < D I S P L A Y S T R I N G > I n t e r n e t   I n f o r m a t i o n   S e r v e r < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " j a v I N T " > < D I S P L A Y S T R I N G > J a v a   T e c h n o l o g i e s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " m s m I t a " > < D I S P L A Y S T R I N G > M a c r o   A s s e m b l e r < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " m s v I N T " > < D I S P L A Y S T R I N G > M a i l   S e r v e r < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " M S R E A D I N 2 " > < D I S P L A Y S T R I N G > M i c r o s o f t   R e a d e r < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " m n y I N T " > < D I S P L A Y S T R I N G > M o n e y < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " m s d n I N T " > < D I S P L A Y S T R I N G > M S D N < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " o d b c I N 2 " > < D I S P L A Y S T R I N G > O D B C < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " o f w 2 k I N 2 " > < D I S P L A Y S T R I N G > O f f i c e   2 0 0 0 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " o f w 9 5 I N 2 " > < D I S P L A Y S T R I N G > O f f i c e   7 . 0   f o r   W i n d o w s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " o f w 9 7 I N 2 " > < D I S P L A Y S T R I N G > O f f i c e   9 7   f o r   W i n d o w s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " o f m 9 8 I N 2 " > < D I S P L A Y S T R I N G > O f f i c e   9 8   M a c i n t o s h   E d i t i o n < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " o f d I N 2 " > < D I S P L A Y S T R I N G > O f f i c e   D e v e l o p m e n t < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " o f m I N 2 " > < D I S P L A Y S T R I N G > O f f i c e   f o r   M a c i n t o s h < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " o f w I N 2 " > < D I S P L A Y S T R I N G > O f f i c e   f o r   W i n d o w s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " o f u d I N T " > < D I S P L A Y S T R I N G > O f f i c e   U p d a t e < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " o f f x p I N 1 " > < D I S P L A Y S T R I N G > O f f i c e   X P   S u i t e < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " o u t I N 3 " > < D I S P L A Y S T R I N G > O u t l o o k < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " o u t 2 K I N 3 " > < D I S P L A Y S T R I N G > O u t l o o k   2 0 0 0 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " o l 2 0 0 2 I N T " > < D I S P L A Y S T R I N G > O u t l o o k   2 0 0 2 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " o u t 9 7 I t a " > < D I S P L A Y S T R I N G > O u t l o o k   9 7 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " o u t 9 8 I N T " > < D I S P L A Y S T R I N G > O u t l o o k   9 8 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " o e x I N 2 " > < D I S P L A Y S T R I N G > O u t l o o k   E x p r e s s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " p p t 2 0 0 0 I N 2 " > < D I S P L A Y S T R I N G > P o w e r P o i n t   2 0 0 0 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " p p t 2 0 0 2 I N T " > < D I S P L A Y S T R I N G > P o w e r P o i n t   2 0 0 2 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " p p m I N 2 " > < D I S P L A Y S T R I N G > P o w e r P o i n t   f o r   M a c i n t o s h < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " p p t I N 2 " > < D I S P L A Y S T R I N G > P o w e r P o i n t   f o r   W i n d o w s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " P R J 9 8 I N T " > < D I S P L A Y S T R I N G > P r o j e c t   9 8 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " P R J M I N T " > < D I S P L A Y S T R I N G > P r o j e c t   f o r   M a c i n t o s h < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " P R J 4 M I N 2 " > < D I S P L A Y S T R I N G > P r o j e c t   f o r   M a c i n t o s h   4 . 0 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " P R J 4 X I N 1 " > < D I S P L A Y S T R I N G > P r o j e c t   f o r   W i n d o w s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " P R J 4 x I N 2 " > < D I S P L A Y S T R I N G > P r o j e c t   f o r   W i n d o w s   4 . x < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " p r s I N T " > < D I S P L A Y S T R I N G > P r o x y   S e r v e r < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " p u b I N T " > < D I S P L A Y S T R I N G > P u b l i s h e r < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " p u b 2 0 0 0 I N T " > < D I S P L A Y S T R I N G > P u b l i s h e r   2 0 0 0 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " p u b 2 0 0 2 I N T " > < D I S P L A Y S T R I N G > P u b l i s h e r   2 0 0 2 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " s c h I N T " > < D I S P L A Y S T R I N G > S c h e d u l e < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " s p t s I N T " > < D I S P L A Y S T R I N G > S h a r e P o i n t   T e a m   S e r v i c e s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " s w p I N T " > < D I S P L A Y S T R I N G > S i d e W i n d e r   G a m e   C o n t r o l l e r s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " s n a I N T " > < D I S P L A Y S T R I N G > S N A   S e r v e r < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " s q l I N T " > < D I S P L A Y S T R I N G > S Q L   S e r v e r < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " s m s I N 1 " > < D I S P L A Y S T R I N G > S y s t e m s   M a n a g e m e n t   S e r v e r < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " m s a l l I N T " > < D I S P L A Y S T R I N G > T u t t i   i   P r o d o t t i   M i c r o s o f t < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " v b b I N T " > < D I S P L A Y S T R I N G > V i s u a l   B a s i c < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " v b a I N T " > < D I S P L A Y S T R I N G > V i s u a l   B a s i c   f o r   A p p l i c a t i o n s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " v c c I N 2 " > < D I S P L A Y S T R I N G > V i s u a l   C < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " v j j I N 1 " > < D I S P L A Y S T R I N G > V i s u a l   J < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " v s s I N T " > < D I S P L A Y S T R I N G > V i s u a l   S o u r c e S a f e < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " v s t I N T " > < D I S P L A Y S T R I N G > V i s u a l   S t u d i o < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " v s t 9 7 I N T " > < D I S P L A Y S T R I N G > V i s u a l   S t u d i o   9 7 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " w m o s I N T " > < D I S P L A Y S T R I N G > W h e e l   M o u s e < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " w i n 2 0 0 0 I t a " > < D I S P L A Y S T R I N G > W i n d o w s   2 0 0 0 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " w i n I N 2 " > < D I S P L A Y S T R I N G > W i n d o w s   3 . x < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " w 9 5 I N 2 " > < D I S P L A Y S T R I N G > W i n d o w s   9 5 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " w 9 8 I N 2 " > < D I S P L A Y S T R I N G > W i n d o w s   9 8 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " w c e I N T " > < D I S P L A Y S T R I N G > W i n d o w s   C E < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " w i n m e I N T " > < D I S P L A Y S T R I N G > W i n d o w s   M i l l e n n i u m   E d i t i o n < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " n t s I N 1 " > < D I S P L A Y S T R I N G > W i n d o w s   N T   S e r v e r < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " n t w I N T " > < D I S P L A Y S T R I N G > W i n d o w s   N T   W o r k s t a t i o n < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " w r d 2 0 I N 2 " > < D I S P L A Y S T R I N G > W o r d   2 0 0 0 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " w d 2 0 0 2 I N T " > < D I S P L A Y S T R I N G > W o r d   2 0 0 2 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " w r m 5 I N 2 " > < D I S P L A Y S T R I N G > W o r d   5 . 0   f o r   M a c i n t o s h < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " w r m 6 I N 2 " > < D I S P L A Y S T R I N G > W o r d   6 . 0   f o r   M a c i n t o s h < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " w r d 6 w i n I N 2 " > < D I S P L A Y S T R I N G > W o r d   6 . 0   f o r   W i n d o w s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " w r d 9 5 I N 2 " > < D I S P L A Y S T R I N G > W o r d   7 . 0   f o r   W i n d o w s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " w r d 9 7 I N 2 " > < D I S P L A Y S T R I N G > W o r d   9 7   f o r   W i n d o w s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " w r m 9 8 I N 2 " > < D I S P L A Y S T R I N G > W o r d   9 8   M a c i n t o s h   E d i t i o n < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " w r m I N 2 " > < D I S P L A Y S T R I N G > W o r d   f o r   M a c i n t o s h < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " w r d I N 2 " > < D I S P L A Y S T R I N G > W o r d   f o r   W i n d o w s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " w k m I N T " > < D I S P L A Y S T R I N G > W o r k s   f o r   M a c i n t o s h < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " w r k I N 2 " > < D I S P L A Y S T R I N G > W o r k s   f o r   W i n d o w s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < / P A R A M _ I T E M > < P A R A M _ I T E M   N A M E = " K e y w o r d T y p e "   T Y P E = " P A R A M _ L I S T "   V I S I B L E = " t r u e " > < D E S C R I P T I O N > C e r c a : < / D E S C R I P T I O N > < P A R A M _ V A L U E   V A L U E = " A L L "   D E F A U L T = " t r u e " > < D I S P L A Y S T R I N G > T u t t e   l e   p a r o l e < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " A N Y " > < D I S P L A Y S T R I N G > U n a   d e l l e   p a r o l e < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " P H R A S E " > < D I S P L A Y S T R I N G > L a   f r a s e   e s a t t a < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " B O O L E A N " > < D I S P L A Y S T R I N G > L a   f r a s e   b o o l e a n a < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < / P A R A M _ I T E M > < P A R A M _ I T E M   N A M E = " T i t l e s "   T Y P E = " P A R A M _ B O O L "   V I S I B L E = " t r u e " > < D E S C R I P T I O N > C e r c a   s o l o   n e l   t i t o l o < / D E S C R I P T I O N > < P A R A M _ V A L U E   V A L U E = " f a l s e "   D E F A U L T = " t r u e "   / > < / P A R A M _ I T E M > < / C O N F I G _ D A T A > 
 
 	 < / D A T A > 
 
                 < / W R A P P E R > 
 
         < / S E A R C H E N G I N E S > 
 
 < / H E L P C E N T E R P A C K A G E > 
 
 
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\pchealth\helpctr\pss\content\nor\package_description.xml ===
< ? x m l   v e r s i o n = " 1 . 0 "   e n c o d i n g = " U T F - 1 6 " ? > 
 
 < H E L P C E N T E R P A C K A G E > 
 
         < S K U   V A L U E = " A L L " / > 
 
         < L A N G U A G E   V A L U E = " A L L " / > 
 
         < V E R S I O N   V A L U E = " 0 1 . 0 1 . 0 1 . 2 2 "   / > 
 
         < P R O D U C T   I D = " P S S   O n l i n e   A s s i s t e d   S u p p o r t "   / > 
 
         < C O N F I G > 
 
                 < S A F   A C T I O N = " A D D "   F I L E = " p s s . x m l " / > 
 
         < / C O N F I G > 
 
         < I N S T A L L _ C O N T E N T > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " p s s m a c h i n e s n a p s h o t . x m l "   U R I = " p s s m a c h i n e s n a p s h o t . x m l " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " p s s m a c h i n e s n a p s h o t - l e s s . x m l "   U R I = " p s s m a c h i n e s n a p s h o t - l e s s . x m l " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " p s s m a c h i n e s n a p s h o t - w o - c o m . x m l "   U R I = " p s s m a c h i n e s n a p s h o t - w o - c o m . x m l " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " O f f l i n e O p t i o n s . h t m "   U R I = " O f f l i n e O p t i o n s . h t m " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " O f f l i n e D C . h t m "   U R I = " O f f l i n e D C . h t m " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " C o n n e c t i o n . h t m "   U R I = " C o n n e c t i o n . h t m " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " s p a c e r . g i f "   U R I = " s p a c e r . g i f " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " r 3 _ c 2 . g i f "   U R I = " r 3 _ c 2 . g i f " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " r 1 _ c 3 . g i f "   U R I = " r 1 _ c 3 . g i f " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " r 1 _ c 2 . g i f "   U R I = " r 1 _ c 2 . g i f " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " r 1 _ c 1 . g i f "   U R I = " r 1 _ c 1 . g i f " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " I n f o _ I c o n . g i f "   U R I = " I n f o _ I c o n . g i f " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " G R e c t . g i f "   U R I = " G R e c t . g i f " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " G A r r o w . g i f "   U R I = " G A r r o w . g i f " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " s t a t u s _ o k . g i f "   U R I = " s t a t u s _ o k . g i f " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " P S S . c s s "   U R I = " P S S . c s s " / > 
 
         < / I N S T A L L _ C O N T E N T > 
 
         < T R U S T E D _ C O N T E N T > 
 
                 < T R U S T E D   A C T I O N = " A D D "   U R I = " h c p : / / C N = M i c r o s o f t % 2 0 C o r p o r a t i o n , L = R e d m o n d , S = W a s h i n g t o n , C = U S / "   / > 
 
                 < T R U S T E D   A C T I O N = " A D D "   U R I = " h t t p s : / / w e b r e s p o n s e . o n e . m i c r o s o f t . c o m / " / > 
 
         < / T R U S T E D _ C O N T E N T > 
 
         < S E A R C H E N G I N E S > 
 
                 < W R A P P E R 
 
                 	 C L S I D       =   " { 8 3 3 E 4 0 1 6 - A F F 7 - 4 A C 3 - A A C 2 - 9 F 2 4 C 1 4 5 7 B C E } " 
 
                 	 I D     =   " D 2 3 D 0 0 2 8 - A 5 4 3 - 4 7 6 7 - B 4 A A - 1 5 8 1 D 8 E 1 C D B 2 " 
 
                 	 N A M E         =   " N e t   S e a r c h   W r a p p e r " 
 
                 	 A C T I O N     =   " A D D " > 
 
                 	 < D A T A > 
 
 < C O N F I G _ D A T A   S E R V E R _ U R L = " h t t p : / / g o . m i c r o s o f t . c o m / f w l i n k / ? l i n k i d = 2 7 2 & a m p ; c l c i d = 0 x 4 0 9 "   S T A N D A R D _ S E A R C H = " 0 "   S E A R C H E N G I N E _ O W N E R = " M i c r o s o f t   C o r p o r a t i o n "   R E M O T E C O N F I G _ S E R V E R _ U R L = " h t t p : / / g o . m i c r o s o f t . c o m / f w l i n k / ? l i n k i d = 2 7 7 & a m p ; c l c i d = 0 x 4 0 9 "   U P D A T E _ F R E Q U E N C Y = " 7 "   x m l n s = " u r n : s c h e m a s - m i c r o s o f t - c o m / p s s / S D X M L / s e a r c h p r o d l i s t " > < S E A R C H E N G I N E _ N A M E > M i c r o s o f t   K n o w l e d g e   B a s e < / S E A R C H E N G I N E _ N A M E > < S E A R C H E N G I N E _ D E S C R I P T I O N > V i s e r   r e l e v a n t e   e m n e r   e l l e r   a r t i k l e r   f r a   W e b - o m r  d e t   M i c r o s o f t   K n o w l e d g e   B a s e .   K n o w l e d g e   B a s e   e r   e n   k i l d e   f o r   t e k n i s k   s t  t t e i n f o r m a s j o n   o g   s e l v h j e l p s v e r k t  y   f o r   M i c r o s o f t - p r o d u k t e r . < / S E A R C H E N G I N E _ D E S C R I P T I O N > < P A R A M _ I T E M   N A M E = " P r o d u c t "   T Y P E = " P A R A M _ L I S T "   V I S I B L E = " t r u e " > < P A R A M _ V A L U E   V A L U E = " m s a l l I N T " > < D I S P L A Y S T R I N G > -   A l l   M i c r o s o f t   P r o d u c t s   - < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " a c c I N 1 " > < D I S P L A Y S T R I N G > A c c e s s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " e n c I N T " > < D I S P L A Y S T R I N G > E n c a r t a < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " x l w I N 1 " > < D I S P L A Y S T R I N G > E x c e l   f o r   W i n d o w s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " e c h I N 1 " > < D I S P L A Y S T R I N G > E x c h a n g e   S e r v e r < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " f p w I N 1 " > < D I S P L A Y S T R I N G > F r o n t P a g e   f o r   W i n d o w s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " g m s I N 1 " > < D I S P L A Y S T R I N G > G a m e s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " h d w I N T " > < D I S P L A Y S T R I N G > H a r d w a r e   P r o d u c t s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " i e I N T " > < D I S P L A Y S T R I N G > I n t e r n e t   E x p l o r e r < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " o f w I N 1 " > < D I S P L A Y S T R I N G > O f f i c e   f o r   W i n d o w s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " o u t I N 1 " > < D I S P L A Y S T R I N G > O u t l o o k < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " o e x I N 1 " > < D I S P L A Y S T R I N G > O u t l o o k   E x p r e s s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " P D 2 k I N 1 " > < D I S P L A Y S T R I N G > P h o t o D r a w   2 0 0 0 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " p p t I N 1 " > < D I S P L A Y S T R I N G > P o w e r P o i n t   f o r   W i n d o w s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " P R J I N T " > < D I S P L A Y S T R I N G > P r o j e c t   f o r   W i n d o w s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " s q l I N T " > < D I S P L A Y S T R I N G > S Q L   S e r v e r < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " v i s i o 2 k I N 1 " > < D I S P L A Y S T R I N G > V i s i o   2 0 0 0 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " v b b I N T " > < D I S P L A Y S T R I N G > V i s u a l   B a s i c < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " w i n 2 0 0 0 I N 1 " > < D I S P L A Y S T R I N G > W i n d o w s   2 0 0 0 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " w i n I N 1 " > < D I S P L A Y S T R I N G > W i n d o w s   3 . x < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " w 9 5 I N 1 " > < D I S P L A Y S T R I N G > W i n d o w s   9 5 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " w 9 8 I N 1 " > < D I S P L A Y S T R I N G > W i n d o w s   9 8 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " w 9 8 s e I N 1 " > < D I S P L A Y S T R I N G > W i n d o w s   9 8   S e c o n d   E d i t i o n < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " w c e I N T " > < D I S P L A Y S T R I N G > W i n d o w s   C E < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " w m p I N T " > < D I S P L A Y S T R I N G > W i n d o w s   M e d i a   P l a y e r < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " n t s I N 1 " > < D I S P L A Y S T R I N G > W i n d o w s   N T   S e r v e r < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " n t w I N T " > < D I S P L A Y S T R I N G > W i n d o w s   N T   W o r k s t a t i o n < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " w r d I N 1 " > < D I S P L A Y S T R I N G > W o r d   f o r   W i n d o w s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " w r k I N 1 " > < D I S P L A Y S T R I N G > W o r k s   f o r   W i n d o w s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < / P A R A M _ I T E M > < P A R A M _ I T E M   N A M E = " K e y w o r d T y p e "   T Y P E = " P A R A M _ L I S T "   V I S I B L E = " t r u e " > < D E S C R I P T I O N > S  k   e t t e r : < / D E S C R I P T I O N > < P A R A M _ V A L U E   V A L U E = " A L L "   D E F A U L T = " t r u e " > < D I S P L A Y S T R I N G > A l l e   o r d e n e < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " A N Y " > < D I S P L A Y S T R I N G > E t t   e l l e r   f l e r e   a v   o r d e n e < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " P H R A S E " > < D I S P L A Y S T R I N G > D e n   n  y a k t i g e   f r a s e n < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " B O O L E A N " > < D I S P L A Y S T R I N G > D e n   b o o l s k e   f r a s e n < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < / P A R A M _ I T E M > < P A R A M _ I T E M   N A M E = " T i t l e s "   T Y P E = " P A R A M _ B O O L "   V I S I B L E = " t r u e " > < D E S C R I P T I O N > S  k   b a r e   i   t i t t e l < / D E S C R I P T I O N > < P A R A M _ V A L U E   V A L U E = " f a l s e "   D E F A U L T = " t r u e "   / > < / P A R A M _ I T E M > < / C O N F I G _ D A T A > 
 
         
 
                 	 < / D A T A > 
 
                 < / W R A P P E R > 
 
         < / S E A R C H E N G I N E S > 
 
 < / H E L P C E N T E R P A C K A G E > 
 
 
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\pchealth\helpctr\pss\content\kor\package_description.xml ===
< ? x m l   v e r s i o n = " 1 . 0 "   e n c o d i n g = " U T F - 1 6 " ? > 
 
 < H E L P C E N T E R P A C K A G E > 
 
         < S K U   V A L U E = " A L L " / > 
 
         < L A N G U A G E   V A L U E = " A L L " / > 
 
         < V E R S I O N   V A L U E = " 0 1 . 0 1 . 0 1 . 2 2 "   / > 
 
         < P R O D U C T   I D = " P S S   O n l i n e   A s s i s t e d   S u p p o r t "   / > 
 
         < C O N F I G > 
 
                 < S A F   A C T I O N = " A D D "   F I L E = " p s s . x m l " / > 
 
         < / C O N F I G > 
 
         < I N S T A L L _ C O N T E N T > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " p s s m a c h i n e s n a p s h o t . x m l "   U R I = " p s s m a c h i n e s n a p s h o t . x m l " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " p s s m a c h i n e s n a p s h o t - l e s s . x m l "   U R I = " p s s m a c h i n e s n a p s h o t - l e s s . x m l " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " p s s m a c h i n e s n a p s h o t - w o - c o m . x m l "   U R I = " p s s m a c h i n e s n a p s h o t - w o - c o m . x m l " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " O f f l i n e O p t i o n s . h t m "   U R I = " O f f l i n e O p t i o n s . h t m " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " O f f l i n e D C . h t m "   U R I = " O f f l i n e D C . h t m " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " C o n n e c t i o n . h t m "   U R I = " C o n n e c t i o n . h t m " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " s p a c e r . g i f "   U R I = " s p a c e r . g i f " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " r 3 _ c 2 . g i f "   U R I = " r 3 _ c 2 . g i f " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " r 1 _ c 3 . g i f "   U R I = " r 1 _ c 3 . g i f " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " r 1 _ c 2 . g i f "   U R I = " r 1 _ c 2 . g i f " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " r 1 _ c 1 . g i f "   U R I = " r 1 _ c 1 . g i f " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " I n f o _ I c o n . g i f "   U R I = " I n f o _ I c o n . g i f " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " G R e c t . g i f "   U R I = " G R e c t . g i f " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " G A r r o w . g i f "   U R I = " G A r r o w . g i f " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " s t a t u s _ o k . g i f "   U R I = " s t a t u s _ o k . g i f " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " P S S . c s s "   U R I = " P S S . c s s " / > 
 
         < / I N S T A L L _ C O N T E N T > 
 
         < T R U S T E D _ C O N T E N T > 
 
                 < T R U S T E D   A C T I O N = " A D D "   U R I = " h c p : / / C N = M i c r o s o f t % 2 0 C o r p o r a t i o n , L = R e d m o n d , S = W a s h i n g t o n , C = U S / "   / > 
 
                 < T R U S T E D   A C T I O N = " A D D "   U R I = " h t t p s : / / w e b r e s p o n s e . o n e . m i c r o s o f t . c o m / " / > 
 
         < / T R U S T E D _ C O N T E N T > 
 
         < S E A R C H E N G I N E S > 
 
                 < W R A P P E R 
 
                 	 C L S I D       =   " { 8 3 3 E 4 0 1 6 - A F F 7 - 4 A C 3 - A A C 2 - 9 F 2 4 C 1 4 5 7 B C E } " 
 
                 	 I D     =   " D 2 3 D 0 0 2 8 - A 5 4 3 - 4 7 6 7 - B 4 A A - 1 5 8 1 D 8 E 1 C D B 2 " 
 
                 	 N A M E         =   " N e t   S e a r c h   W r a p p e r " 
 
                 	 A C T I O N     =   " A D D " > 
 
                 	 < D A T A > 
 
 < C O N F I G _ D A T A   S E R V E R _ U R L = " h t t p : / / g o . m i c r o s o f t . c o m / f w l i n k / ? l i n k i d = 2 7 2 & a m p ; c l c i d = 0 x 4 0 9 "   S T A N D A R D _ S E A R C H = " 0 "   S E A R C H E N G I N E _ O W N E R = " M i c r o s o f t   C o r p o r a t i o n "   R E M O T E C O N F I G _ S E R V E R _ U R L = " h t t p : / / g o . m i c r o s o f t . c o m / f w l i n k / ? l i n k i d = 2 7 7 & a m p ; c l c i d = 0 x 4 0 9 "   U P D A T E _ F R E Q U E N C Y = " 7 "   x m l n s = " u r n : s c h e m a s - m i c r o s o f t - c o m / p s s / S D X M L / s e a r c h p r o d l i s t " > < S E A R C H E N G I N E _ N A M E > M i c r o s o f t   K n o w l e d g e   B a s e < / S E A R C H E N G I N E _ N A M E > < S E A R C H E N G I N E _ D E S C R I P T I O N > M i c r o s o f t   K n o w l e d g e   B a s e     tǸ   (  mթtǘ  8|  \iȲ.   M i c r o s o f t   K n o w l e d g e   B a s e   M i c r o s o f t   Ȉ   \  0     @       ĳlX   ǩ\  ̸Ȳ. < / S E A R C H E N G I N E _ D E S C R I P T I O N > < P A R A M _ I T E M   N A M E = " P r o d u c t "   T Y P E = " P A R A M _ L I S T "   V I S I B L E = " t r u e " > < P A R A M _ V A L U E   V A L U E = " m s a l l I N T " > < D I S P L A Y S T R I N G > -   A l l   M i c r o s o f t   P r o d u c t s   - < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " a c c k o r " > < D I S P L A Y S T R I N G > A c c e s s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " a c c 2 0 0 0 k o r " > < D I S P L A Y S T R I N G > A c c e s s   2 0 0 0 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " a c c 2 0 0 2 I N T " > < D I S P L A Y S T R I N G > A c c e s s   2 0 0 2 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " a c c 9 5 k o r " > < D I S P L A Y S T R I N G > A c c e s s   9 5 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " a c c 9 7 k o r " > < D I S P L A Y S T R I N G > A c c e s s   9 7 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " a s p I N 2 " > < D I S P L A Y S T R I N G > A c t i v e   S e r v e r   P a g e s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " c o m m 2 k I N T " > < D I S P L A Y S T R I N G > C o m m e r c e   S e r v e r   2 0 0 0 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " c i s I N T " > < D I S P L A Y S T R I N G > C o m m e r c i a l   I n t e r n e t   S y s t e m < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " x l w 2 K k o r " > < D I S P L A Y S T R I N G > E x c e l   2 0 0 0 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " x l 2 0 0 2 I N T " > < D I S P L A Y S T R I N G > E x c e l   2 0 0 2 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " x l w 9 5 k o r " > < D I S P L A Y S T R I N G > E x c e l   9 5   f o r   W i n d o w s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " x l w 9 7 k o r " > < D I S P L A Y S T R I N G > E x c e l   9 7   f o r   W i n d o w s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " x l w k o r " > < D I S P L A Y S T R I N G > E x c e l   f o r   W i n d o w s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " e x c h 2 k I N 2 " > < D I S P L A Y S T R I N G > E x c h a n g e   2 0 0 0   S e r v e r < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " e c h I N 2 " > < D I S P L A Y S T R I N G > E x c h a n g e   S e r v e r   5 . 5   a n d   E a r l i e r   V e r s i o n s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " f p 2 0 0 0 I N 3 " > < D I S P L A Y S T R I N G > F r o n t P a g e   2 0 0 0 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " f p 2 0 0 2 I N T " > < D I S P L A Y S T R I N G > F r o n t P a g e   2 0 0 2 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " f p 9 7 k o r " > < D I S P L A Y S T R I N G > F r o n t P a g e   9 7   f o r   W i n d o w s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " f p w k o r " > < D I S P L A Y S T R I N G > F r o n t P a g e   f o r   W i n d o w s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " i e I N T " > < D I S P L A Y S T R I N G > I n t e r n e t   E x p l o r e r < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " i i s I N 3 " > < D I S P L A Y S T R I N G > I n t e r n e t   I n f o r m a t i o n   S e r v e r   4 . 0 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " i i s 5 0 I N 2 " > < D I S P L A Y S T R I N G > I n t e r n e t   I n f o r m a t i o n   S e r v i c e s   5 . 0 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " I S A S k o r " > < D I S P L A Y S T R I N G > I n t e r n e t   S e c u r i t y   a n d   A c c e l e r a t i o n   S e r v e r   2 0 0 0 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " n m t I N T " > < D I S P L A Y S T R I N G > N e t M e e t i n g < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " o f w 2 k k o r " > < D I S P L A Y S T R I N G > O f f i c e   2 0 0 0   S u i t e < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " o f w 9 7 k o r " > < D I S P L A Y S T R I N G > O f f i c e   9 7   f o r   W i n d o w s   S u i t e < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " o f w k o r " > < D I S P L A Y S T R I N G > O f f i c e   f o r   W i n d o w s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " o f f x p I N 2 " > < D I S P L A Y S T R I N G > O f f i c e   X P   S u i t e < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " o u t I N 3 " > < D I S P L A Y S T R I N G > O u t l o o k < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " o u t 2 K I N 3 " > < D I S P L A Y S T R I N G > O u t l o o k   2 0 0 0 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " o l 2 0 0 2 I N T " > < D I S P L A Y S T R I N G > O u t l o o k   2 0 0 2 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " o u t 9 7 k o r " > < D I S P L A Y S T R I N G > O u t l o o k   9 7 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " o u t 9 8 I N T " > < D I S P L A Y S T R I N G > O u t l o o k   9 8 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " o e x I N 2 " > < D I S P L A Y S T R I N G > O u t l o o k   E x p r e s s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " P D 2 K I N 2 " > < D I S P L A Y S T R I N G > P h o t o D r a w   2 0 0 0 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " p i c I N T " > < D I S P L A Y S T R I N G > P i c t u r e   I t ! < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " s d k 3 I N T " > < D I S P L A Y S T R I N G > P l a t f o r m   S D K < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " p p t 2 0 0 0 k o r " > < D I S P L A Y S T R I N G > P o w e r P o i n t   2 0 0 0 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " p p t 2 0 0 2 I N T " > < D I S P L A Y S T R I N G > P o w e r P o i n t   2 0 0 2 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " p p t 9 7 k o r " > < D I S P L A Y S T R I N G > P o w e r P o i n t   9 7   f o r   W i n d o w s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " p p m k o r " > < D I S P L A Y S T R I N G > P o w e r P o i n t   9 8   M a c i n t o s h   E d i t i o n < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " p p t k o r " > < D I S P L A Y S T R I N G > P o w e r P o i n t   f o r   W i n d o w s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " P R J 2 K k o r " > < D I S P L A Y S T R I N G > P r o j e c t   2 0 0 0 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " P R J 9 8 k o r " > < D I S P L A Y S T R I N G > P r o j e c t   9 8 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " p r s k o r " > < D I S P L A Y S T R I N G > P r o x y   S e r v e r < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " p u b k o r " > < D I S P L A Y S T R I N G > P u b l i s h e r < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " p u b 2 0 0 0 k o r " > < D I S P L A Y S T R I N G > P u b l i s h e r   2 0 0 0 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " p u b 2 0 0 2 I N T " > < D I S P L A Y S T R I N G > P u b l i s h e r   2 0 0 2 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " s p t s I N T " > < D I S P L A Y S T R I N G > S h a r e P o i n t   T e a m   S e r v i c e s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " s b s k o r " > < D I S P L A Y S T R I N G > S m a l l   B u s i n e s s   S e r v e r < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " s n a I N T " > < D I S P L A Y S T R I N G > S N A   S e r v e r < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " s q l I N T " > < D I S P L A Y S T R I N G > S Q L   S e r v e r < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " s m s I N 2 " > < D I S P L A Y S T R I N G > S y s t e m s   M a n a g e m e n t   S e r v e r   2 . 0 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " v i s i o 2 k I N 2 " > < D I S P L A Y S T R I N G > V i s i o   2 0 0 0 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " v s o 2 0 0 2 k o r " > < D I S P L A Y S T R I N G > V i s i o   2 0 0 2 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " v b b I N T " > < D I S P L A Y S T R I N G > V i s u a l   B a s i c < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " v c c I N 1 " > < D I S P L A Y S T R I N G > V i s u a l   C < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " f o x I N T " > < D I S P L A Y S T R I N G > V i s u a l   F o x P r o < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " v i d k o r " > < D I S P L A Y S T R I N G > V i s u a l   I n t e r D e v < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " v j j I N 2 " > < D I S P L A Y S T R I N G > V i s u a l   J < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " v s t I N T " > < D I S P L A Y S T R I N G > V i s u a l   S t u d i o   6 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " w i n 2 0 0 0 b e t a I N T " > < D I S P L A Y S T R I N G > W i n d o w s   2 0 0 0 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " w 9 5 k o r " > < D I S P L A Y S T R I N G > W i n d o w s   9 5 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " w 9 8 I N 1 " > < D I S P L A Y S T R I N G > W i n d o w s   9 8 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " w m p I N T " > < D I S P L A Y S T R I N G > W i n d o w s   M e d i a   P l a y e r < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " w m s I N T " > < D I S P L A Y S T R I N G > W i n d o w s   M e d i a   S e r v i c e s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " w i n m e I N T " > < D I S P L A Y S T R I N G > W i n d o w s   M i l l e n n i u m   E d i t i o n < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " n t w 3 5 1 k o r " > < D I S P L A Y S T R I N G > W i n d o w s   N T   3 . 5 1 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " n t w 4 0 k o r " > < D I S P L A Y S T R I N G > W i n d o w s   N T   4 . 0 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " w r d 2 0 k o r " > < D I S P L A Y S T R I N G > W o r d   2 0 0 0 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " w d 2 0 0 2 I N T " > < D I S P L A Y S T R I N G > W o r d   2 0 0 2 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " w r d 9 7 k o r " > < D I S P L A Y S T R I N G > W o r d   9 7   f o r   W i n d o w s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " w r d k o r " > < D I S P L A Y S T R I N G > W o r d   f o r   W i n d o w s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < / P A R A M _ I T E M > < P A R A M _ I T E M   N A M E = " K e y w o r d T y p e "   T Y P E = " P A R A M _ L I S T "   V I S I B L E = " t r u e " > < D E S C R I P T I O N >    : < / D E S C R I P T I O N > < P A R A M _ V A L U E   V A L U E = " A L L "   D E F A U L T = " t r u e " > < D I S P L A Y S T R I N G > 貴  \  >0  ( A N D ) < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " A N Y " > < D I S P L A Y S T R I N G > 貴  \  >0  ( O R ) < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " P H R A S E " > < D I S P L A Y S T R I N G > UXՌ  |XXՔ  l< / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " B O O L E A N " > < D I S P L A Y S T R I N G >   l< / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < / P A R A M _ I T E M > < P A R A M _ I T E M   N A M E = " T i t l e s "   T Y P E = " P A R A M _ B O O L "   V I S I B L E = " t r u e " > < D E S C R I P T I O N > ȩ̹  < / D E S C R I P T I O N > < P A R A M _ V A L U E   V A L U E = " f a l s e "   D E F A U L T = " t r u e "   / > < / P A R A M _ I T E M > < / C O N F I G _ D A T A > 
 
         
 
                 	 < / D A T A > 
 
                 < / W R A P P E R > 
 
         < / S E A R C H E N G I N E S > 
 
 < / H E L P C E N T E R P A C K A G E > 
 
 
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\pchealth\helpctr\pss\content\por\package_description.xml ===
< ? x m l   v e r s i o n = " 1 . 0 "   e n c o d i n g = " U T F - 1 6 " ? > 
 
 < H E L P C E N T E R P A C K A G E > 
 
         < S K U   V A L U E = " A L L " / > 
 
         < L A N G U A G E   V A L U E = " A L L " / > 
 
         < V E R S I O N   V A L U E = " 0 1 . 0 1 . 0 1 . 2 2 "   / > 
 
         < P R O D U C T   I D = " P S S   O n l i n e   A s s i s t e d   S u p p o r t "   / > 
 
         < C O N F I G > 
 
                 < S A F   A C T I O N = " A D D "   F I L E = " p s s . x m l " / > 
 
         < / C O N F I G > 
 
         < I N S T A L L _ C O N T E N T > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " p s s m a c h i n e s n a p s h o t . x m l "   U R I = " p s s m a c h i n e s n a p s h o t . x m l " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " p s s m a c h i n e s n a p s h o t - l e s s . x m l "   U R I = " p s s m a c h i n e s n a p s h o t - l e s s . x m l " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " p s s m a c h i n e s n a p s h o t - w o - c o m . x m l "   U R I = " p s s m a c h i n e s n a p s h o t - w o - c o m . x m l " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " O f f l i n e O p t i o n s . h t m "   U R I = " O f f l i n e O p t i o n s . h t m " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " O f f l i n e D C . h t m "   U R I = " O f f l i n e D C . h t m " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " C o n n e c t i o n . h t m "   U R I = " C o n n e c t i o n . h t m " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " s p a c e r . g i f "   U R I = " s p a c e r . g i f " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " r 3 _ c 2 . g i f "   U R I = " r 3 _ c 2 . g i f " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " r 1 _ c 3 . g i f "   U R I = " r 1 _ c 3 . g i f " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " r 1 _ c 2 . g i f "   U R I = " r 1 _ c 2 . g i f " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " r 1 _ c 1 . g i f "   U R I = " r 1 _ c 1 . g i f " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " I n f o _ I c o n . g i f "   U R I = " I n f o _ I c o n . g i f " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " G R e c t . g i f "   U R I = " G R e c t . g i f " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " G A r r o w . g i f "   U R I = " G A r r o w . g i f " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " s t a t u s _ o k . g i f "   U R I = " s t a t u s _ o k . g i f " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " P S S . c s s "   U R I = " P S S . c s s " / > 
 
         < / I N S T A L L _ C O N T E N T > 
 
         < T R U S T E D _ C O N T E N T > 
 
                 < T R U S T E D   A C T I O N = " A D D "   U R I = " h c p : / / C N = M i c r o s o f t % 2 0 C o r p o r a t i o n , L = R e d m o n d , S = W a s h i n g t o n , C = U S / "   / > 
 
                 < T R U S T E D   A C T I O N = " A D D "   U R I = " h t t p s : / / w e b r e s p o n s e . o n e . m i c r o s o f t . c o m / " / > 
 
         < / T R U S T E D _ C O N T E N T > 
 
         < S E A R C H E N G I N E S > 
 
                 < W R A P P E R 
 
                 	 C L S I D       =   " { 8 3 3 E 4 0 1 6 - A F F 7 - 4 A C 3 - A A C 2 - 9 F 2 4 C 1 4 5 7 B C E } " 
 
                 	 I D     =   " D 2 3 D 0 0 2 8 - A 5 4 3 - 4 7 6 7 - B 4 A A - 1 5 8 1 D 8 E 1 C D B 2 " 
 
                 	 N A M E         =   " N e t   S e a r c h   W r a p p e r " 
 
                 	 A C T I O N     =   " A D D " > 
 
                 	 < D A T A > 
 
 < C O N F I G _ D A T A   S E R V E R _ U R L = " h t t p : / / g o . m i c r o s o f t . c o m / f w l i n k / ? l i n k i d = 2 7 2 & a m p ; c l c i d = 0 x 4 0 9 "   S T A N D A R D _ S E A R C H = " 0 "   S E A R C H E N G I N E _ O W N E R = " M i c r o s o f t   C o r p o r a t i o n "   R E M O T E C O N F I G _ S E R V E R _ U R L = " h t t p : / / g o . m i c r o s o f t . c o m / f w l i n k / ? l i n k i d = 2 7 7 & a m p ; c l c i d = 0 x 4 0 9 "   U P D A T E _ F R E Q U E N C Y = " 7 "   x m l n s = " u r n : s c h e m a s - m i c r o s o f t - c o m / p s s / S D X M L / s e a r c h p r o d l i s t " > < S E A R C H E N G I N E _ N A M E > M i c r o s o f t   K n o w l e d g e   B a s e < / S E A R C H E N G I N E _ N A M E > < S E A R C H E N G I N E _ D E S C R I P T I O N > A p r e s e n t a   t  p i c o s   e   a r t i g o s   r e l e v a n t e s   d o   W e b   s i t e   d a   M i c r o s o f t   K n o w l e d g e   B a s e .   A   K n o w l e d g e   B a s e      u m a   f o n t e   d e   i n f o r m a   e s   d e   s u p o r t e   t  c n i c o   e   f e r r a m e n t a s   d e   a j u d a   a u t  n o m a   p a r a   p r o d u t o s   M i c r o s o f t . < / S E A R C H E N G I N E _ D E S C R I P T I O N > < P A R A M _ I T E M   N A M E = " P r o d u c t "   T Y P E = " P A R A M _ L I S T "   V I S I B L E = " t r u e " > < P A R A M _ V A L U E   V A L U E = " m s a l l I N T " > < D I S P L A Y S T R I N G > -   T o d o s   P r o d u t o s   d a   M i c r o s o f t   - < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " a c c I N 1 " > < D I S P L A Y S T R I N G > A c c e s s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " a c c 2 0 0 0 I N 1 " > < D I S P L A Y S T R I N G > A c c e s s   2 0 0 0 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " a c c 9 7 I N T " > < D I S P L A Y S T R I N G > A c c e s s   9 7 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " b a c I N T " > < D I S P L A Y S T R I N G > B a c k O f f i c e   S e r v e r < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " x l w 2 K I N 1 " > < D I S P L A Y S T R I N G > E x c e l   2 0 0 0 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " x l w 9 5 I N 1 " > < D I S P L A Y S T R I N G > E x c e l   7 . 0   p a r a   W i n d o w s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " x l w 9 7 I N 1 " > < D I S P L A Y S T R I N G > E x c e l   9 7   p a r a   W i n d o w s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " e x c h 2 k I N 1 " > < D I S P L A Y S T R I N G > E x c h a n g e   2 0 0 0   S e r v e r < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " e d k I N T " > < D I S P L A Y S T R I N G > E x c h a n g e   D e v e l o p m e n t   K i t < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " e c h I N 1 " > < D I S P L A Y S T R I N G > E x c h a n g e   S e r v e r < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " f p 2 0 0 0 I N 1 " > < D I S P L A Y S T R I N G > F r o n t P a g e   2 0 0 0 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " i e I N T " > < D I S P L A Y S T R I N G > I n t e r n e t   E x p l o r e r < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " o f w 2 k I N 1 " > < D I S P L A Y S T R I N G > O f f i c e   2 0 0 0 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " o f w 9 7 I N 1 " > < D I S P L A Y S T R I N G > O f f i c e   9 7   p a r a   W i n d o w s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " o f w I N 1 " > < D I S P L A Y S T R I N G > O f f i c e   f o r   W i n d o w s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " o f f x p I N 2 " > < D I S P L A Y S T R I N G > O f f i c e   X P   S u i t e < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " o u t 2 K I N 1 " > < D I S P L A Y S T R I N G > O u t l o o k   2 0 0 0 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " o u t 9 7 I N 1 " > < D I S P L A Y S T R I N G > O u t l o o k   9 7 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " o u t 9 8 I N T " > < D I S P L A Y S T R I N G > O u t l o o k   9 8 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " o e x I N 1 " > < D I S P L A Y S T R I N G > O u t l o o k   E x p r e s s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " p p t 2 0 0 0 I N 1 " > < D I S P L A Y S T R I N G > P o w e r P o i n t   2 0 0 0 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " p p t I N 1 " > < D I S P L A Y S T R I N G > P o w e r P o i n t   p a r a   W i n d o w s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " p u b 2 0 0 0 I N T " > < D I S P L A Y S T R I N G > P u b l i s h e r   2 0 0 0 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " s q l I N T " > < D I S P L A Y S T R I N G > S Q L   S e r v e r < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " w i n 2 0 0 0 I N 1 " > < D I S P L A Y S T R I N G > W i n d o w s   2 0 0 0 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " w 9 5 I N 1 " > < D I S P L A Y S T R I N G > W i n d o w s   9 5 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " w 9 8 I N 1 " > < D I S P L A Y S T R I N G > W i n d o w s   9 8 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " w 9 8 s e I N 1 " > < D I S P L A Y S T R I N G > W i n d o w s   9 8   s e g u n d a   e d i o < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " n t s 4 0 I N T " > < D I S P L A Y S T R I N G > W i n d o w s   N T   S e r v e r   4 . 0 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " n t w 4 0 I N T " > < D I S P L A Y S T R I N G > W i n d o w s   N T   W o r k s t a t i o n   4 . 0 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " w r d 2 0 I N 1 " > < D I S P L A Y S T R I N G > W o r d   2 0 0 0 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " w r d 9 5 I N 1 " > < D I S P L A Y S T R I N G > W o r d   7 . 0   p a r a   W i n d o w s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " w r d 9 7 I N 1 " > < D I S P L A Y S T R I N G > W o r d   9 7   p a r a   W i n d o w s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " w r d I N 1 " > < D I S P L A Y S T R I N G > W o r d   p a r a   W i n d o w s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < / P A R A M _ I T E M > < P A R A M _ I T E M   N A M E = " K e y w o r d T y p e "   T Y P E = " P A R A M _ L I S T "   V I S I B L E = " t r u e " > < D E S C R I P T I O N > P r o c u r a r : < / D E S C R I P T I O N > < P A R A M _ V A L U E   V A L U E = " A L L "   D E F A U L T = " t r u e " > < D I S P L A Y S T R I N G > T o d a s   a s   p a l a v r a s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " A N Y " > < D I S P L A Y S T R I N G > Q u a l q u e r   d a s   p a l a v r a s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " P H R A S E " > < D I S P L A Y S T R I N G > A   e x p r e s s  o   e x a c t a < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " B O O L E A N " > < D I S P L A Y S T R I N G > A   e x p r e s s  o   b o o l e a n a < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < / P A R A M _ I T E M > < P A R A M _ I T E M   N A M E = " T i t l e s "   T Y P E = " P A R A M _ B O O L "   V I S I B L E = " t r u e " > < D E S C R I P T I O N > P r o c u r a r   a p e n a s   n o   t  t u l o < / D E S C R I P T I O N > < P A R A M _ V A L U E   V A L U E = " f a l s e "   D E F A U L T = " t r u e "   / > < / P A R A M _ I T E M > < / C O N F I G _ D A T A > 
 
         
 
                 	 < / D A T A > 
 
                 < / W R A P P E R > 
 
         < / S E A R C H E N G I N E S > 
 
 < / H E L P C E N T E R P A C K A G E > 
 
 
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\pchealth\helpctr\pss\content\pol\package_description.xml ===
< ? x m l   v e r s i o n = " 1 . 0 "   e n c o d i n g = " U T F - 1 6 " ? > 
 
 < H E L P C E N T E R P A C K A G E > 
 
         < S K U   V A L U E = " A L L " / > 
 
         < L A N G U A G E   V A L U E = " A L L " / > 
 
         < V E R S I O N   V A L U E = " 0 1 . 0 1 . 0 1 . 2 2 "   / > 
 
         < P R O D U C T   I D = " P S S   O n l i n e   A s s i s t e d   S u p p o r t "   / > 
 
         < C O N F I G > 
 
                 < S A F   A C T I O N = " A D D "   F I L E = " p s s . x m l " / > 
 
         < / C O N F I G > 
 
         < I N S T A L L _ C O N T E N T > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " p s s m a c h i n e s n a p s h o t . x m l "   U R I = " p s s m a c h i n e s n a p s h o t . x m l " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " p s s m a c h i n e s n a p s h o t - l e s s . x m l "   U R I = " p s s m a c h i n e s n a p s h o t - l e s s . x m l " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " p s s m a c h i n e s n a p s h o t - w o - c o m . x m l "   U R I = " p s s m a c h i n e s n a p s h o t - w o - c o m . x m l " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " O f f l i n e O p t i o n s . h t m "   U R I = " O f f l i n e O p t i o n s . h t m " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " O f f l i n e D C . h t m "   U R I = " O f f l i n e D C . h t m " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " C o n n e c t i o n . h t m "   U R I = " C o n n e c t i o n . h t m " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " s p a c e r . g i f "   U R I = " s p a c e r . g i f " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " r 3 _ c 2 . g i f "   U R I = " r 3 _ c 2 . g i f " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " r 1 _ c 3 . g i f "   U R I = " r 1 _ c 3 . g i f " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " r 1 _ c 2 . g i f "   U R I = " r 1 _ c 2 . g i f " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " r 1 _ c 1 . g i f "   U R I = " r 1 _ c 1 . g i f " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " I n f o _ I c o n . g i f "   U R I = " I n f o _ I c o n . g i f " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " G R e c t . g i f "   U R I = " G R e c t . g i f " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " G A r r o w . g i f "   U R I = " G A r r o w . g i f " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " s t a t u s _ o k . g i f "   U R I = " s t a t u s _ o k . g i f " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " P S S . c s s "   U R I = " P S S . c s s " / > 
 
         < / I N S T A L L _ C O N T E N T > 
 
         < T R U S T E D _ C O N T E N T > 
 
                 < T R U S T E D   A C T I O N = " A D D "   U R I = " h c p : / / C N = M i c r o s o f t % 2 0 C o r p o r a t i o n , L = R e d m o n d , S = W a s h i n g t o n , C = U S / "   / > 
 
                 < T R U S T E D   A C T I O N = " A D D "   U R I = " h t t p s : / / w e b r e s p o n s e . o n e . m i c r o s o f t . c o m / " / > 
 
         < / T R U S T E D _ C O N T E N T > 
 
         < S E A R C H E N G I N E S > 
 
                 < W R A P P E R 
 
                 	 C L S I D       =   " { 8 3 3 E 4 0 1 6 - A F F 7 - 4 A C 3 - A A C 2 - 9 F 2 4 C 1 4 5 7 B C E } " 
 
                 	 I D     =   " D 2 3 D 0 0 2 8 - A 5 4 3 - 4 7 6 7 - B 4 A A - 1 5 8 1 D 8 E 1 C D B 2 " 
 
                 	 N A M E         =   " N e t   S e a r c h   W r a p p e r " 
 
                 	 A C T I O N     =   " A D D " > 
 
                 	 < D A T A > 
 
 < C O N F I G _ D A T A   S E R V E R _ U R L = " h t t p : / / g o . m i c r o s o f t . c o m / f w l i n k / ? l i n k i d = 2 7 2 & a m p ; c l c i d = 0 x 4 0 9 "   S T A N D A R D _ S E A R C H = " 0 "   S E A R C H E N G I N E _ O W N E R = " M i c r o s o f t   C o r p o r a t i o n "   R E M O T E C O N F I G _ S E R V E R _ U R L = " h t t p : / / g o . m i c r o s o f t . c o m / f w l i n k / ? l i n k i d = 2 7 7 & a m p ; c l c i d = 0 x 4 0 9 "   U P D A T E _ F R E Q U E N C Y = " 7 "   x m l n s = " u r n : s c h e m a s - m i c r o s o f t - c o m / p s s / S D X M L / s e a r c h p r o d l i s t " > < S E A R C H E N G I N E _ N A M E > M i c r o s o f t   K n o w l e d g e   B a s e < / S E A R C H E N G I N E _ N A M E > < S E A R C H E N G I N E _ D E S C R I P T I O N > W y [w i e t l a   s t o s o w n e   t e m a t y   i   a r t y k u By   z   w i t r y n y   s i e c i   W e b   M i c r o s o f t   K n o w l e d g e   B a s e .   B a z a   w i e d z y   j e s t   zr  d Be m   i n f o r m a c j i   p o m o c y   t e c h n i c z n e j   i   n a r z d z i   p o m o c y   d l a   p r o d u k t  w   f i r m y   M i c r o s o f t . < / S E A R C H E N G I N E _ D E S C R I P T I O N > < P A R A M _ I T E M   N A M E = " P r o d u c t "   T Y P E = " P A R A M _ L I S T "   V I S I B L E = " t r u e " > < P A R A M _ V A L U E   V A L U E = " m s a l l I N T " > < D I S P L A Y S T R I N G > -   A l l   M i c r o s o f t   P r o d u c t s   - < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " a c c I N 1 " > < D I S P L A Y S T R I N G > A c c e s s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " e n c I N T " > < D I S P L A Y S T R I N G > E n c a r t a < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " x l w I N 1 " > < D I S P L A Y S T R I N G > E x c e l   f o r   W i n d o w s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " e c h I N 1 " > < D I S P L A Y S T R I N G > E x c h a n g e   S e r v e r < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " f p w I N 1 " > < D I S P L A Y S T R I N G > F r o n t P a g e   f o r   W i n d o w s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " g m s I N 1 " > < D I S P L A Y S T R I N G > G a m e s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " h d w I N T " > < D I S P L A Y S T R I N G > H a r d w a r e   P r o d u c t s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " i e I N T " > < D I S P L A Y S T R I N G > I n t e r n e t   E x p l o r e r < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " o f w I N 1 " > < D I S P L A Y S T R I N G > O f f i c e   f o r   W i n d o w s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " o u t I N 1 " > < D I S P L A Y S T R I N G > O u t l o o k < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " o e x I N 1 " > < D I S P L A Y S T R I N G > O u t l o o k   E x p r e s s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " P D 2 k I N 1 " > < D I S P L A Y S T R I N G > P h o t o D r a w   2 0 0 0 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " p p t I N 1 " > < D I S P L A Y S T R I N G > P o w e r P o i n t   f o r   W i n d o w s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " P R J I N T " > < D I S P L A Y S T R I N G > P r o j e c t   f o r   W i n d o w s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " s q l I N T " > < D I S P L A Y S T R I N G > S Q L   S e r v e r < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " v i s i o 2 k I N 1 " > < D I S P L A Y S T R I N G > V i s i o   2 0 0 0 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " v b b I N T " > < D I S P L A Y S T R I N G > V i s u a l   B a s i c < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " w i n 2 0 0 0 I N 1 " > < D I S P L A Y S T R I N G > W i n d o w s   2 0 0 0 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " w i n I N 1 " > < D I S P L A Y S T R I N G > W i n d o w s   3 . x < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " w 9 5 I N 1 " > < D I S P L A Y S T R I N G > W i n d o w s   9 5 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " w 9 8 I N 1 " > < D I S P L A Y S T R I N G > W i n d o w s   9 8 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " w 9 8 s e I N 1 " > < D I S P L A Y S T R I N G > W i n d o w s   9 8   S e c o n d   E d i t i o n < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " w c e I N T " > < D I S P L A Y S T R I N G > W i n d o w s   C E < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " w m p I N T " > < D I S P L A Y S T R I N G > W i n d o w s   M e d i a   P l a y e r < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " n t s I N 1 " > < D I S P L A Y S T R I N G > W i n d o w s   N T   S e r v e r < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " n t w I N T " > < D I S P L A Y S T R I N G > W i n d o w s   N T   W o r k s t a t i o n < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " w r d I N 1 " > < D I S P L A Y S T R I N G > W o r d   f o r   W i n d o w s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " w r k I N 1 " > < D I S P L A Y S T R I N G > W o r k s   f o r   W i n d o w s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < / P A R A M _ I T E M > < P A R A M _ I T E M   N A M E = " K e y w o r d T y p e "   T Y P E = " P A R A M _ L I S T "   V I S I B L E = " t r u e " > < D E S C R I P T I O N > W y s z u k a j : < / D E S C R I P T I O N > < P A R A M _ V A L U E   V A L U E = " A L L "   D E F A U L T = " t r u e " > < D I S P L A Y S T R I N G > W s z y s t k i e   w y r a z y < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " A N Y " > < D I S P L A Y S T R I N G > D o w o l n y   w y r a z < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " P H R A S E " > < D I S P L A Y S T R I N G > D o k Ba d n a   f r a z a < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " B O O L E A N " > < D I S P L A Y S T R I N G > F r a z a   l o g i c z n a < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < / P A R A M _ I T E M > < P A R A M _ I T E M   N A M E = " T i t l e s "   T Y P E = " P A R A M _ B O O L "   V I S I B L E = " t r u e " > < D E S C R I P T I O N > P r z e s z u k a j   t y l k o   t y t u By < / D E S C R I P T I O N > < P A R A M _ V A L U E   V A L U E = " f a l s e "   D E F A U L T = " t r u e "   / > < / P A R A M _ I T E M > < / C O N F I G _ D A T A > 
 
         
 
                 	 < / D A T A > 
 
                 < / W R A P P E R > 
 
         < / S E A R C H E N G I N E S > 
 
 < / H E L P C E N T E R P A C K A G E > 
 
 
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\pchealth\helpctr\pss\content\rus\package_description.xml ===
< ? x m l   v e r s i o n = " 1 . 0 "   e n c o d i n g = " U T F - 1 6 " ? > 
 
 < H E L P C E N T E R P A C K A G E > 
 
         < S K U   V A L U E = " A L L " / > 
 
         < L A N G U A G E   V A L U E = " A L L " / > 
 
         < V E R S I O N   V A L U E = " 0 1 . 0 1 . 0 1 . 2 2 "   / > 
 
         < P R O D U C T   I D = " P S S   O n l i n e   A s s i s t e d   S u p p o r t "   / > 
 
         < C O N F I G > 
 
                 < S A F   A C T I O N = " A D D "   F I L E = " p s s . x m l " / > 
 
         < / C O N F I G > 
 
         < I N S T A L L _ C O N T E N T > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " p s s m a c h i n e s n a p s h o t . x m l "   U R I = " p s s m a c h i n e s n a p s h o t . x m l " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " p s s m a c h i n e s n a p s h o t - l e s s . x m l "   U R I = " p s s m a c h i n e s n a p s h o t - l e s s . x m l " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " p s s m a c h i n e s n a p s h o t - w o - c o m . x m l "   U R I = " p s s m a c h i n e s n a p s h o t - w o - c o m . x m l " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " O f f l i n e O p t i o n s . h t m "   U R I = " O f f l i n e O p t i o n s . h t m " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " O f f l i n e D C . h t m "   U R I = " O f f l i n e D C . h t m " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " C o n n e c t i o n . h t m "   U R I = " C o n n e c t i o n . h t m " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " s p a c e r . g i f "   U R I = " s p a c e r . g i f " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " r 3 _ c 2 . g i f "   U R I = " r 3 _ c 2 . g i f " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " r 1 _ c 3 . g i f "   U R I = " r 1 _ c 3 . g i f " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " r 1 _ c 2 . g i f "   U R I = " r 1 _ c 2 . g i f " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " r 1 _ c 1 . g i f "   U R I = " r 1 _ c 1 . g i f " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " I n f o _ I c o n . g i f "   U R I = " I n f o _ I c o n . g i f " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " G R e c t . g i f "   U R I = " G R e c t . g i f " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " G A r r o w . g i f "   U R I = " G A r r o w . g i f " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " s t a t u s _ o k . g i f "   U R I = " s t a t u s _ o k . g i f " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " P S S . c s s "   U R I = " P S S . c s s " / > 
 
         < / I N S T A L L _ C O N T E N T > 
 
         < T R U S T E D _ C O N T E N T > 
 
                 < T R U S T E D   A C T I O N = " A D D "   U R I = " h c p : / / C N = M i c r o s o f t % 2 0 C o r p o r a t i o n , L = R e d m o n d , S = W a s h i n g t o n , C = U S / "   / > 
 
                 < T R U S T E D   A C T I O N = " A D D "   U R I = " h t t p s : / / w e b r e s p o n s e . o n e . m i c r o s o f t . c o m / " / > 
 
         < / T R U S T E D _ C O N T E N T > 
 
         < S E A R C H E N G I N E S > 
 
                 < W R A P P E R 
 
                 	 C L S I D       =   " { 8 3 3 E 4 0 1 6 - A F F 7 - 4 A C 3 - A A C 2 - 9 F 2 4 C 1 4 5 7 B C E } " 
 
                 	 I D     =   " D 2 3 D 0 0 2 8 - A 5 4 3 - 4 7 6 7 - B 4 A A - 1 5 8 1 D 8 E 1 C D B 2 " 
 
                 	 N A M E         =   " N e t   S e a r c h   W r a p p e r " 
 
                 	 A C T I O N     =   " A D D " > 
 
                 	 < D A T A > 
 
 < C O N F I G _ D A T A   S E R V E R _ U R L = " h t t p : / / g o . m i c r o s o f t . c o m / f w l i n k / ? l i n k i d = 2 7 2 & a m p ; c l c i d = 0 x 4 0 9 "   S T A N D A R D _ S E A R C H = " 0 "   S E A R C H E N G I N E _ O W N E R = " M i c r o s o f t   C o r p o r a t i o n "   R E M O T E C O N F I G _ S E R V E R _ U R L = " h t t p : / / g o . m i c r o s o f t . c o m / f w l i n k / ? l i n k i d = 2 7 7 & a m p ; c l c i d = 0 x 4 0 9 "   U P D A T E _ F R E Q U E N C Y = " 7 "   x m l n s = " u r n : s c h e m a s - m i c r o s o f t - c o m / p s s / S D X M L / s e a r c h p r o d l i s t " > < S E A R C H E N G I N E _ N A M E > 070  7=0=89  09:@>A>DB< / S E A R C H E N G I N E _ N A M E > < S E A R C H E N G I N E _ D E S C R I P T I O N > >8A:  B5E=8G5A:>9  8=D>@<0F88  2  1075  7=0=89  09:@>A>DB.   070  7=0=89  09:@>A>DB  -   MB>  8AB>G=8:  B5E=8G5A:>9  8=D>@<0F88  8  A@54AB2  A0<>AB>OB5;L=>3>  @5H5=8O  ?@>1;5<  A  ?@>4C:B0<8  :>@?>@0F88  09:@>A>DB. < / S E A R C H E N G I N E _ D E S C R I P T I O N > < P A R A M _ I T E M   N A M E = " P r o d u c t "   T Y P E = " P A R A M _ L I S T "   V I S I B L E = " t r u e " > < P A R A M _ V A L U E   V A L U E = " m s a l l I N T " > < D I S P L A Y S T R I N G > -   A l l   M i c r o s o f t   P r o d u c t s   - < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " a c c I N 1 " > < D I S P L A Y S T R I N G > A c c e s s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " e n c I N T " > < D I S P L A Y S T R I N G > E n c a r t a < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " x l w I N 1 " > < D I S P L A Y S T R I N G > E x c e l   f o r   W i n d o w s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " e c h I N 1 " > < D I S P L A Y S T R I N G > E x c h a n g e   S e r v e r < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " f p w I N 1 " > < D I S P L A Y S T R I N G > F r o n t P a g e   f o r   W i n d o w s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " g m s I N 1 " > < D I S P L A Y S T R I N G > G a m e s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " h d w I N T " > < D I S P L A Y S T R I N G > H a r d w a r e   P r o d u c t s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " i e I N T " > < D I S P L A Y S T R I N G > I n t e r n e t   E x p l o r e r < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " o f w I N 1 " > < D I S P L A Y S T R I N G > O f f i c e   f o r   W i n d o w s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " o u t I N 1 " > < D I S P L A Y S T R I N G > O u t l o o k < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " o e x I N 1 " > < D I S P L A Y S T R I N G > O u t l o o k   E x p r e s s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " P D 2 k I N 1 " > < D I S P L A Y S T R I N G > P h o t o D r a w   2 0 0 0 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " p p t I N 1 " > < D I S P L A Y S T R I N G > P o w e r P o i n t   f o r   W i n d o w s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " P R J I N T " > < D I S P L A Y S T R I N G > P r o j e c t   f o r   W i n d o w s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " s q l I N T " > < D I S P L A Y S T R I N G > S Q L   S e r v e r < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " v i s i o 2 k I N 1 " > < D I S P L A Y S T R I N G > V i s i o   2 0 0 0 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " v b b I N T " > < D I S P L A Y S T R I N G > V i s u a l   B a s i c < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " w i n 2 0 0 0 I N 1 " > < D I S P L A Y S T R I N G > W i n d o w s   2 0 0 0 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " w i n I N 1 " > < D I S P L A Y S T R I N G > W i n d o w s   3 . x < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " w 9 5 I N 1 " > < D I S P L A Y S T R I N G > W i n d o w s   9 5 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " w 9 8 I N 1 " > < D I S P L A Y S T R I N G > W i n d o w s   9 8 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " w 9 8 s e I N 1 " > < D I S P L A Y S T R I N G > W i n d o w s   9 8   S e c o n d   E d i t i o n < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " w c e I N T " > < D I S P L A Y S T R I N G > W i n d o w s   C E < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " w m p I N T " > < D I S P L A Y S T R I N G > W i n d o w s   M e d i a   P l a y e r < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " n t s I N 1 " > < D I S P L A Y S T R I N G > W i n d o w s   N T   S e r v e r < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " n t w I N T " > < D I S P L A Y S T R I N G > W i n d o w s   N T   W o r k s t a t i o n < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " w r d I N 1 " > < D I S P L A Y S T R I N G > W o r d   f o r   W i n d o w s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " w r k I N 1 " > < D I S P L A Y S T R I N G > W o r k s   f o r   W i n d o w s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < / P A R A M _ I T E M > < P A R A M _ I T E M   N A M E = " K e y w o r d T y p e "   T Y P E = " P A R A M _ L I S T "   V I S I B L E = " t r u e " > < D E S C R I P T I O N > A:0BL: < / D E S C R I P T I O N > < P A R A M _ V A L U E   V A L U E = " A L L "   D E F A U L T = " t r u e " > < D I S P L A Y S T R I N G > A5  A;>20< / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " A N Y " > < D I S P L A Y S T R I N G > N1>5  87  A;>2< / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " P H R A S E " > < D I S P L A Y S T R I N G > $@07C  F5;8:><< / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " B O O L E A N " > < D I S P L A Y S T R I N G > >38G5A:>5  2K@065=85< / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < / P A R A M _ I T E M > < P A R A M _ I T E M   N A M E = " T i t l e s "   T Y P E = " P A R A M _ B O O L "   V I S I B L E = " t r u e " > < D E S C R I P T I O N > >8A:  B>;L:>  2  703>;>2:5< / D E S C R I P T I O N > < P A R A M _ V A L U E   V A L U E = " f a l s e "   D E F A U L T = " t r u e "   / > < / P A R A M _ I T E M > < / C O N F I G _ D A T A > 
 
         
 
                 	 < / D A T A > 
 
                 < / W R A P P E R > 
 
         < / S E A R C H E N G I N E S > 
 
 < / H E L P C E N T E R P A C K A G E > 
 
 
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\pchealth\helpctr\pss\content\spa\package_description.xml ===
< ? x m l   v e r s i o n = " 1 . 0 "   e n c o d i n g = " U T F - 1 6 " ? > 
 
 < H E L P C E N T E R P A C K A G E > 
 
         < S K U   V A L U E = " A L L " / > 
 
         < L A N G U A G E   V A L U E = " A L L " / > 
 
         < V E R S I O N   V A L U E = " 0 1 . 0 1 . 0 1 . 2 2 "   / > 
 
         < P R O D U C T   I D = " P S S   O n l i n e   A s s i s t e d   S u p p o r t "   / > 
 
         < C O N F I G > 
 
                 < S A F   A C T I O N = " A D D "   F I L E = " p s s . x m l " / > 
 
         < / C O N F I G > 
 
         < I N S T A L L _ C O N T E N T > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " p s s m a c h i n e s n a p s h o t . x m l "   U R I = " p s s m a c h i n e s n a p s h o t . x m l " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " p s s m a c h i n e s n a p s h o t - l e s s . x m l "   U R I = " p s s m a c h i n e s n a p s h o t - l e s s . x m l " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " p s s m a c h i n e s n a p s h o t - w o - c o m . x m l "   U R I = " p s s m a c h i n e s n a p s h o t - w o - c o m . x m l " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " O f f l i n e O p t i o n s . h t m "   U R I = " O f f l i n e O p t i o n s . h t m " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " O f f l i n e D C . h t m "   U R I = " O f f l i n e D C . h t m " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " C o n n e c t i o n . h t m "   U R I = " C o n n e c t i o n . h t m " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " s p a c e r . g i f "   U R I = " s p a c e r . g i f " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " r 3 _ c 2 . g i f "   U R I = " r 3 _ c 2 . g i f " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " r 1 _ c 3 . g i f "   U R I = " r 1 _ c 3 . g i f " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " r 1 _ c 2 . g i f "   U R I = " r 1 _ c 2 . g i f " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " r 1 _ c 1 . g i f "   U R I = " r 1 _ c 1 . g i f " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " I n f o _ I c o n . g i f "   U R I = " I n f o _ I c o n . g i f " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " G R e c t . g i f "   U R I = " G R e c t . g i f " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " G A r r o w . g i f "   U R I = " G A r r o w . g i f " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " s t a t u s _ o k . g i f "   U R I = " s t a t u s _ o k . g i f " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " P S S . c s s "   U R I = " P S S . c s s " / > 
 
         < / I N S T A L L _ C O N T E N T > 
 
         < T R U S T E D _ C O N T E N T > 
 
                 < T R U S T E D   A C T I O N = " A D D "   U R I = " h c p : / / C N = M i c r o s o f t % 2 0 C o r p o r a t i o n , L = R e d m o n d , S = W a s h i n g t o n , C = U S / "   / > 
 
                 < T R U S T E D   A C T I O N = " A D D "   U R I = " h t t p s : / / w e b r e s p o n s e . o n e . m i c r o s o f t . c o m / " / > 
 
         < / T R U S T E D _ C O N T E N T > 
 
         < S E A R C H E N G I N E S > 
 
                 < W R A P P E R 
 
                 	 C L S I D       =   " { 8 3 3 E 4 0 1 6 - A F F 7 - 4 A C 3 - A A C 2 - 9 F 2 4 C 1 4 5 7 B C E } " 
 
                 	 I D     =   " D 2 3 D 0 0 2 8 - A 5 4 3 - 4 7 6 7 - B 4 A A - 1 5 8 1 D 8 E 1 C D B 2 " 
 
                 	 N A M E         =   " N e t   S e a r c h   W r a p p e r " 
 
                 	 A C T I O N     =   " A D D " > 
 
                 	 < D A T A > 
 
 < C O N F I G _ D A T A   S E R V E R _ U R L = " h t t p : / / g o . m i c r o s o f t . c o m / f w l i n k / ? l i n k i d = 2 7 2 & a m p ; c l c i d = 0 x 4 0 9 "   S T A N D A R D _ S E A R C H = " 0 "   S E A R C H E N G I N E _ O W N E R = " M i c r o s o f t   C o r p o r a t i o n "   R E M O T E C O N F I G _ S E R V E R _ U R L = " h t t p : / / g o . m i c r o s o f t . c o m / f w l i n k / ? l i n k i d = 2 7 7 & a m p ; c l c i d = 0 x 4 0 9 "   U P D A T E _ F R E Q U E N C Y = " 7 "   x m l n s = " u r n : s c h e m a s - m i c r o s o f t - c o m / p s s / S D X M L / s e a r c h p r o d l i s t " > 
 
 	 < S E A R C H E N G I N E _ N A M E > K n o w l e d g e   B a s e   d e   M i c r o s o f t < / S E A R C H E N G I N E _ N A M E > 
 
 	 < S E A R C H E N G I N E _ D E S C R I P T I O N > M u e s t r a   t e m a s   o   a r t  c u l o s   r e l e v a n t e s   d e l   s i t i o   W e b   K n o w l e d g e   B a s e   d e   M i c r o s o f t .   K n o w l e d g e   B a s e   e s   u n a   f u e n t e   d e   i n f o r m a c i  n   d e   s o p o r t e   t  c n i c o   y   h e r r a m i e n t a s   d e   a u t o a y u d a   p a r a   p r o d u c t o s   M i c r o s o f t . < / S E A R C H E N G I N E _ D E S C R I P T I O N > 
 
 	 < P A R A M _ I T E M   N A M E = " P r o d u c t "   T Y P E = " P A R A M _ L I S T "   V I S I B L E = " t r u e " > 
 
 	 	 < D E S C R I P T I O N > S e l e c c i o n e   u n   p r o d u c t o   o   t e m a < / D E S C R I P T I O N > 
 
 	 	 < P A R A M _ V A L U E   V A L U E = " w i n x p I N T " > 
 
 	 	 	 < D I S P L A Y S T R I N G > W i n d o w s   X P < / D I S P L A Y S T R I N G > 
 
 	 	 < / P A R A M _ V A L U E > 
 
 	 < / P A R A M _ I T E M > 
 
 	 < P A R A M _ I T E M   N A M E = " K e y w o r d T y p e "   T Y P E = " P A R A M _ L I S T "   V I S I B L E = " t r u e " > 
 
 	 	 < D E S C R I P T I O N > B u s c a r : < / D E S C R I P T I O N > 
 
 	 	 < P A R A M _ V A L U E   V A L U E = " A L L "   D E F A U L T = " t r u e " > 
 
 	 	 	 < D I S P L A Y S T R I N G > T o d a s   l a s   p a l a b r a s < / D I S P L A Y S T R I N G > 
 
 	 	 < / P A R A M _ V A L U E > 
 
 	 	 < P A R A M _ V A L U E   V A L U E = " A N Y " > 
 
 	 	 	 < D I S P L A Y S T R I N G > C u a l q u i e r   p a l a b r a < / D I S P L A Y S T R I N G > 
 
 	 	 < / P A R A M _ V A L U E > 
 
 	 	 < P A R A M _ V A L U E   V A L U E = " P H R A S E " > 
 
 	 	 	 < D I S P L A Y S T R I N G > F r a s e   e x a c t a < / D I S P L A Y S T R I N G > 
 
 	 	 < / P A R A M _ V A L U E > 
 
 	 	 < P A R A M _ V A L U E   V A L U E = " B O O L E A N " > 
 
 	 	 	 < D I S P L A Y S T R I N G > F r a s e   d e   t i p o   b o o l e a n o < / D I S P L A Y S T R I N G > 
 
 	 	 < / P A R A M _ V A L U E > 
 
 	 < / P A R A M _ I T E M > 
 
 	 < P A R A M _ I T E M   N A M E = " T i t l e s "   T Y P E = " P A R A M _ B O O L "   V I S I B L E = " t r u e " > 
 
 	 	 < D E S C R I P T I O N > B u s c a r   s  l o   e n   e l   T  t u l o < / D E S C R I P T I O N > 
 
 	 	 < P A R A M _ V A L U E   V A L U E = " f a l s e "   D E F A U L T = " t r u e " / > 
 
 	 < / P A R A M _ I T E M > 
 
 < / C O N F I G _ D A T A > 
 
         
 
                 	 < / D A T A > 
 
                 < / W R A P P E R > 
 
         < / S E A R C H E N G I N E S > 
 
 < / H E L P C E N T E R P A C K A G E > 
 
 
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\pchealth\helpctr\pss\content\swe\package_description.xml ===
< ? x m l   v e r s i o n = " 1 . 0 "   e n c o d i n g = " U T F - 1 6 " ? > 
 
 < H E L P C E N T E R P A C K A G E > 
 
         < S K U   V A L U E = " A L L " / > 
 
         < L A N G U A G E   V A L U E = " A L L " / > 
 
         < V E R S I O N   V A L U E = " 0 1 . 0 1 . 0 1 . 2 2 "   / > 
 
         < P R O D U C T   I D = " P S S   O n l i n e   A s s i s t e d   S u p p o r t "   / > 
 
         < C O N F I G > 
 
                 < S A F   A C T I O N = " A D D "   F I L E = " p s s . x m l " / > 
 
         < / C O N F I G > 
 
         < I N S T A L L _ C O N T E N T > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " p s s m a c h i n e s n a p s h o t . x m l "   U R I = " p s s m a c h i n e s n a p s h o t . x m l " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " p s s m a c h i n e s n a p s h o t - l e s s . x m l "   U R I = " p s s m a c h i n e s n a p s h o t - l e s s . x m l " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " p s s m a c h i n e s n a p s h o t - w o - c o m . x m l "   U R I = " p s s m a c h i n e s n a p s h o t - w o - c o m . x m l " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " O f f l i n e O p t i o n s . h t m "   U R I = " O f f l i n e O p t i o n s . h t m " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " O f f l i n e D C . h t m "   U R I = " O f f l i n e D C . h t m " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " C o n n e c t i o n . h t m "   U R I = " C o n n e c t i o n . h t m " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " s p a c e r . g i f "   U R I = " s p a c e r . g i f " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " r 3 _ c 2 . g i f "   U R I = " r 3 _ c 2 . g i f " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " r 1 _ c 3 . g i f "   U R I = " r 1 _ c 3 . g i f " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " r 1 _ c 2 . g i f "   U R I = " r 1 _ c 2 . g i f " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " r 1 _ c 1 . g i f "   U R I = " r 1 _ c 1 . g i f " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " I n f o _ I c o n . g i f "   U R I = " I n f o _ I c o n . g i f " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " G R e c t . g i f "   U R I = " G R e c t . g i f " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " G A r r o w . g i f "   U R I = " G A r r o w . g i f " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " s t a t u s _ o k . g i f "   U R I = " s t a t u s _ o k . g i f " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " P S S . c s s "   U R I = " P S S . c s s " / > 
 
         < / I N S T A L L _ C O N T E N T > 
 
         < T R U S T E D _ C O N T E N T > 
 
                 < T R U S T E D   A C T I O N = " A D D "   U R I = " h c p : / / C N = M i c r o s o f t % 2 0 C o r p o r a t i o n , L = R e d m o n d , S = W a s h i n g t o n , C = U S / "   / > 
 
                 < T R U S T E D   A C T I O N = " A D D "   U R I = " h t t p s : / / w e b r e s p o n s e . o n e . m i c r o s o f t . c o m / " / > 
 
         < / T R U S T E D _ C O N T E N T > 
 
         < S E A R C H E N G I N E S > 
 
                 < W R A P P E R 
 
                 	 C L S I D       =   " { 8 3 3 E 4 0 1 6 - A F F 7 - 4 A C 3 - A A C 2 - 9 F 2 4 C 1 4 5 7 B C E } " 
 
                 	 I D     =   " D 2 3 D 0 0 2 8 - A 5 4 3 - 4 7 6 7 - B 4 A A - 1 5 8 1 D 8 E 1 C D B 2 " 
 
                 	 N A M E         =   " N e t   S e a r c h   W r a p p e r " 
 
                 	 A C T I O N     =   " A D D " > 
 
                 	 < D A T A > 
 
 < C O N F I G _ D A T A   S E R V E R _ U R L = " h t t p : / / g o . m i c r o s o f t . c o m / f w l i n k / ? l i n k i d = 2 7 2 & a m p ; c l c i d = 0 x 4 0 9 "   S T A N D A R D _ S E A R C H = " 0 "   S E A R C H E N G I N E _ O W N E R = " M i c r o s o f t   C o r p o r a t i o n "   R E M O T E C O N F I G _ S E R V E R _ U R L = " h t t p : / / g o . m i c r o s o f t . c o m / f w l i n k / ? l i n k i d = 2 7 7 & a m p ; c l c i d = 0 x 4 0 9 "   U P D A T E _ F R E Q U E N C Y = " 7 "   x m l n s = " u r n : s c h e m a s - m i c r o s o f t - c o m / p s s / S D X M L / s e a r c h p r o d l i s t " > < S E A R C H E N G I N E _ N A M E > M i c r o s o f t   K n o w l e d g e   B a s e < / S E A R C H E N G I N E _ N A M E > < S E A R C H E N G I N E _ D E S C R I P T I O N > V i s a r   r e l e v a n t a    m n e n   o c h   a r t i k l a r   f r  n   w e b b p l a t s e n   M i c r o s o f t   K n o w l e d g e   B a s e .   K n o w l e d g e   B a s e    r   e n   k  l l a   f  r   t e k n i s k   s u p p o r t i n f o r m a t i o n   o c h   s j  l v h j  l p v e r k t y g   f  r   M i c r o s o f t - p r o d u k t e r . < / S E A R C H E N G I N E _ D E S C R I P T I O N > < P A R A M _ I T E M   N A M E = " P r o d u c t "   T Y P E = " P A R A M _ L I S T "   V I S I B L E = " t r u e " > < P A R A M _ V A L U E   V A L U E = " m s a l l I N T " > < D I S P L A Y S T R I N G > -   A l l a   M i c r o s o f t - p r o d u k t e r   - < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " a c c I N 1 " > < D I S P L A Y S T R I N G > A c c e s s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " e n c I N T " > < D I S P L A Y S T R I N G > E n c a r t a < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " x l w I N 1 " > < D I S P L A Y S T R I N G > E x c e l   f o r   W i n d o w s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " e c h I N 1 " > < D I S P L A Y S T R I N G > E x c h a n g e   S e r v e r < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " f p w I N 1 " > < D I S P L A Y S T R I N G > F r o n t P a g e   f o r   W i n d o w s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " g m s I N 1 " > < D I S P L A Y S T R I N G > G a m e s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " h d w I N T " > < D I S P L A Y S T R I N G > H a r d w a r e   P r o d u c t s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " i e I N T " > < D I S P L A Y S T R I N G > I n t e r n e t   E x p l o r e r < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " o f w I N 1 " > < D I S P L A Y S T R I N G > O f f i c e   f o r   W i n d o w s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " o u t I N 1 " > < D I S P L A Y S T R I N G > O u t l o o k < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " o e x I N 1 " > < D I S P L A Y S T R I N G > O u t l o o k   E x p r e s s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " P D 2 k I N 1 " > < D I S P L A Y S T R I N G > P h o t o D r a w   2 0 0 0 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " p p t I N 1 " > < D I S P L A Y S T R I N G > P o w e r P o i n t   f o r   W i n d o w s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " P R J I N T " > < D I S P L A Y S T R I N G > P r o j e c t   f o r   W i n d o w s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " s q l I N T " > < D I S P L A Y S T R I N G > S Q L   S e r v e r < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " v i s i o 2 k I N 1 " > < D I S P L A Y S T R I N G > V i s i o   2 0 0 0 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " v b b I N T " > < D I S P L A Y S T R I N G > V i s u a l   B a s i c < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " w i n 2 0 0 0 I N 1 " > < D I S P L A Y S T R I N G > W i n d o w s   2 0 0 0 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " w i n I N 1 " > < D I S P L A Y S T R I N G > W i n d o w s   3 . x < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " w 9 5 I N 1 " > < D I S P L A Y S T R I N G > W i n d o w s   9 5 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " w 9 8 I N 1 " > < D I S P L A Y S T R I N G > W i n d o w s   9 8 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " w 9 8 s e I N 1 " > < D I S P L A Y S T R I N G > W i n d o w s   9 8   S e c o n d   E d i t i o n < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " w c e I N T " > < D I S P L A Y S T R I N G > W i n d o w s   C E < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " w m p I N T " > < D I S P L A Y S T R I N G > W i n d o w s   M e d i a   P l a y e r < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " n t s I N 1 " > < D I S P L A Y S T R I N G > W i n d o w s   N T   S e r v e r < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " n t w I N T " > < D I S P L A Y S T R I N G > W i n d o w s   N T   W o r k s t a t i o n < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " w r d I N 1 " > < D I S P L A Y S T R I N G > W o r d   f o r   W i n d o w s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " w r k I N 1 " > < D I S P L A Y S T R I N G > W o r k s   f o r   W i n d o w s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < / P A R A M _ I T E M > < P A R A M _ I T E M   N A M E = " K e y w o r d T y p e "   T Y P E = " P A R A M _ L I S T "   V I S I B L E = " t r u e " > < D E S C R I P T I O N > S  k   e f t e r : < / D E S C R I P T I O N > < P A R A M _ V A L U E   V A L U E = " A L L "   D E F A U L T = " t r u e " > < D I S P L A Y S T R I N G > A l l a   o r d < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " A N Y " > < D I S P L A Y S T R I N G > N  g o t   a v   o r d e n < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " P H R A S E " > < D I S P L A Y S T R I N G > E x a k t   f r a s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " B O O L E A N " > < D I S P L A Y S T R I N G > B o o l e s k   f r a s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < / P A R A M _ I T E M > < P A R A M _ I T E M   N A M E = " T i t l e s "   T Y P E = " P A R A M _ B O O L "   V I S I B L E = " t r u e " > < D E S C R I P T I O N > S  k   e n d a s t   i   r u b r i k e r < / D E S C R I P T I O N > < P A R A M _ V A L U E   V A L U E = " f a l s e "   D E F A U L T = " t r u e "   / > < / P A R A M _ I T E M > < / C O N F I G _ D A T A > 
 
         
 
                 	 < / D A T A > 
 
                 < / W R A P P E R > 
 
         < / S E A R C H E N G I N E S > 
 
 < / H E L P C E N T E R P A C K A G E > 
 
 
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\pchealth\helpctr\pss\content\trk\package_description.xml ===
< ? x m l   v e r s i o n = " 1 . 0 "   e n c o d i n g = " U T F - 1 6 " ? > 
 
 < H E L P C E N T E R P A C K A G E > 
 
         < S K U   V A L U E = " A L L " / > 
 
         < L A N G U A G E   V A L U E = " A L L " / > 
 
         < V E R S I O N   V A L U E = " 0 1 . 0 1 . 0 1 . 2 2 "   / > 
 
         < P R O D U C T   I D = " P S S   O n l i n e   A s s i s t e d   S u p p o r t "   / > 
 
         < C O N F I G > 
 
                 < S A F   A C T I O N = " A D D "   F I L E = " p s s . x m l " / > 
 
         < / C O N F I G > 
 
         < I N S T A L L _ C O N T E N T > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " p s s m a c h i n e s n a p s h o t . x m l "   U R I = " p s s m a c h i n e s n a p s h o t . x m l " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " p s s m a c h i n e s n a p s h o t - l e s s . x m l "   U R I = " p s s m a c h i n e s n a p s h o t - l e s s . x m l " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " p s s m a c h i n e s n a p s h o t - w o - c o m . x m l "   U R I = " p s s m a c h i n e s n a p s h o t - w o - c o m . x m l " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " O f f l i n e O p t i o n s . h t m "   U R I = " O f f l i n e O p t i o n s . h t m " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " O f f l i n e D C . h t m "   U R I = " O f f l i n e D C . h t m " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " C o n n e c t i o n . h t m "   U R I = " C o n n e c t i o n . h t m " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " s p a c e r . g i f "   U R I = " s p a c e r . g i f " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " r 3 _ c 2 . g i f "   U R I = " r 3 _ c 2 . g i f " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " r 1 _ c 3 . g i f "   U R I = " r 1 _ c 3 . g i f " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " r 1 _ c 2 . g i f "   U R I = " r 1 _ c 2 . g i f " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " r 1 _ c 1 . g i f "   U R I = " r 1 _ c 1 . g i f " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " I n f o _ I c o n . g i f "   U R I = " I n f o _ I c o n . g i f " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " G R e c t . g i f "   U R I = " G R e c t . g i f " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " G A r r o w . g i f "   U R I = " G A r r o w . g i f " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " s t a t u s _ o k . g i f "   U R I = " s t a t u s _ o k . g i f " / > 
 
                 < F I L E   A C T I O N = " A D D "   S O U R C E = " P S S . c s s "   U R I = " P S S . c s s " / > 
 
         < / I N S T A L L _ C O N T E N T > 
 
         < T R U S T E D _ C O N T E N T > 
 
                 < T R U S T E D   A C T I O N = " A D D "   U R I = " h c p : / / C N = M i c r o s o f t % 2 0 C o r p o r a t i o n , L = R e d m o n d , S = W a s h i n g t o n , C = U S / "   / > 
 
                 < T R U S T E D   A C T I O N = " A D D "   U R I = " h t t p s : / / w e b r e s p o n s e . o n e . m i c r o s o f t . c o m / " / > 
 
         < / T R U S T E D _ C O N T E N T > 
 
         < S E A R C H E N G I N E S > 
 
                 < W R A P P E R 
 
                 	 C L S I D       =   " { 8 3 3 E 4 0 1 6 - A F F 7 - 4 A C 3 - A A C 2 - 9 F 2 4 C 1 4 5 7 B C E } " 
 
                 	 I D     =   " D 2 3 D 0 0 2 8 - A 5 4 3 - 4 7 6 7 - B 4 A A - 1 5 8 1 D 8 E 1 C D B 2 " 
 
                 	 N A M E         =   " N e t   S e a r c h   W r a p p e r " 
 
                 	 A C T I O N     =   " A D D " > 
 
                 	 < D A T A > 
 
 < C O N F I G _ D A T A   S E R V E R _ U R L = " h t t p : / / g o . m i c r o s o f t . c o m / f w l i n k / ? l i n k i d = 2 7 2 & a m p ; c l c i d = 0 x 4 0 9 "   S T A N D A R D _ S E A R C H = " 0 "   S E A R C H E N G I N E _ O W N E R = " M i c r o s o f t   C o r p o r a t i o n "   R E M O T E C O N F I G _ S E R V E R _ U R L = " h t t p : / / g o . m i c r o s o f t . c o m / f w l i n k / ? l i n k i d = 2 7 7 & a m p ; c l c i d = 0 x 4 0 9 "   U P D A T E _ F R E Q U E N C Y = " 7 "   x m l n s = " u r n : s c h e m a s - m i c r o s o f t - c o m / p s s / S D X M L / s e a r c h p r o d l i s t " > < S E A R C H E N G I N E _ N A M E > M i c r o s o f t   B i l g i   D e p o s u < / S E A R C H E N G I N E _ N A M E > < S E A R C H E N G I N E _ D E S C R I P T I O N > M i c r o s o f t   B i l g i   D e p o s u   W e b   s i t e s i n d e n   i l g i l i   k o n u   v e   m a k a l e l e r i   g  r  n t  l e r .   B i l g i   D e p o s u ,   t e k n i k   d e s t e k   b i l g i s i   v e   M i c r o s o f t    r  n l e r i   i  i n   k e n d i   k e n d i n e   y a r d 1m   a r a  l a r 1n 1n   k a y n a 1d 1r . < / S E A R C H E N G I N E _ D E S C R I P T I O N > < P A R A M _ I T E M   N A M E = " P r o d u c t "   T Y P E = " P A R A M _ L I S T "   V I S I B L E = " t r u e " > < P A R A M _ V A L U E   V A L U E = " m s a l l E N G " > < D I S P L A Y S T R I N G > -   A l l   M i c r o s o f t   P r o d u c t s   - < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " a c c E N G " > < D I S P L A Y S T R I N G > A c c e s s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " a c c 2 0 0 0 E N G " > < D I S P L A Y S T R I N G > A c c e s s   2 0 0 0 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " a c c 2 0 0 2 E N G " > < D I S P L A Y S T R I N G > A c c e s s   2 0 0 2 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " a c c 9 5 E N G " > < D I S P L A Y S T R I N G > A c c e s s   9 5 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " a c c 9 7 E N G " > < D I S P L A Y S T R I N G > A c c e s s   9 7 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " e n a b l e E N G " > < D I S P L A Y S T R I N G > A c c e s s i b i l i t y < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " a m p s E N G " > < D I S P L A Y S T R I N G > A c t i M a t e s   P r o d u c t s   a n d   S o f t w a r e < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " a s p E N G " > < D I S P L A Y S T R I N G > A c t i v e   S e r v e r   P a g e s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " a d k E N G " > < D I S P L A Y S T R I N G > A c t i v e X   S D K < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " a d o E N G " > < D I S P L A Y S T R I N G > A D O < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " a o e E N G " > < D I S P L A Y S T R I N G > A g e   o f   E m p i r e s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " a g s d k E N G " > < D I S P L A Y S T R I N G > A g e n t   S D K < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " a l l e g E N G " > < D I S P L A Y S T R I N G > A l l e g i a n c e < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " A p p C t r E N G " > < D I S P L A Y S T R I N G > A p p l i c a t i o n   C e n t e r   2 0 0 0 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " a r c E N G " > < D I S P L A Y S T R I N G > A r c a d e < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " a s h c a l l E N G " > < D I S P L A Y S T R I N G > A s h e r o n   s   C a l l < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " a u t E N G " > < D I S P L A Y S T R I N G > A u t o m a p < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " b a c E N G " > < D I S P L A Y S T R I N G > B a c k O f f i c e   S e r v e r < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " b b 3 d E N G " > < D I S P L A Y S T R I N G > B a s e b a l l < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " b s c E N G " > < D I S P L A Y S T R I N G > B A S I C   & a m p ;   Q u i c k B A S I C < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " b k s E N G " > < D I S P L A Y S T R I N G > B o o k s h e l f < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " c a r t E N G " > < D I S P L A Y S T R I N G > C A R T   P r e c i s i o n   R a c i n g < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " i e x E N G " > < D I S P L A Y S T R I N G > C h a t < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " c l c E N G " > < D I S P L A Y S T R I N G > C l o s e   C o m b a t < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " c d o E N G " > < D I S P L A Y S T R I N G > C o l l a b o r a t i o n   D a t a   O b j e c t s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " t r a n E N G " > < D I S P L A Y S T R I N G > C O M   T r a n s a c t i o n   I n t e g r a t o r < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " c f l t E N G " > < D I S P L A Y S T R I N G > C o m b a t   F l i g h t   S i m u l a t o r < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " c o m m 2 k E N G " > < D I S P L A Y S T R I N G > C o m m e r c e   S e r v e r   2 0 0 0 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " c i s E N G " > < D I S P L A Y S T R I N G > C o m m e r c i a l   I n t e r n e t   S y s t e m < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " c p h o n E N G " > < D I S P L A Y S T R I N G > C o r d l e s s   P h o n e   S y s t e m < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " c r w E N G " > < D I S P L A Y S T R I N G > C r e a t i v e   W r i t e r   2 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " c s E N G " > < D I S P L A Y S T R I N G > C r i m s o n   S k i e s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " d k f E N G " > < D I S P L A Y S T R I N G > D e s k t o p   F i n a n c e < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " d s s E N G " > < D I S P L A Y S T R I N G > D i g i t a l   S o u n d   S y s t e m   8 0 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " d s d k E N G " > < D I S P L A Y S T R I N G > D i r e c t X   S D K < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " w i n c e v b E N G " > < D I S P L A Y S T R I N G > E m b e d e d   V i s u a l   B a s i c   3 . 0   a n d   W i n d o w s   C E   T o o l k i t   f o r   V i s u a l   B a s i c < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " e n c E N G " > < D I S P L A Y S T R I N G > E n c a r t a < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " E L L E N G " > < D I S P L A Y S T R I N G > E n c a r t a   L a n g u a g e   L e a r n i n g < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " e t p p c E N G " > < D I S P L A Y S T R I N G > E n t e r t a i n m e n t   P a c k :   T h e   P u z z l e   C o l l e c t i o n < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " x l w 2 K E N G " > < D I S P L A Y S T R I N G > E x c e l   2 0 0 0 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " x l 2 0 0 2 E N G " > < D I S P L A Y S T R I N G > E x c e l   2 0 0 2 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " x l w 9 5 E N G " > < D I S P L A Y S T R I N G > E x c e l   9 5   f o r   W i n d o w s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " x l w E N G " > < D I S P L A Y S T R I N G > E x c e l   f o r   W i n d o w s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " e x c h 2 k E N G " > < D I S P L A Y S T R I N G > E x c h a n g e   2 0 0 0   S e r v e r < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " e d k E N G " > < D I S P L A Y S T R I N G > E x c h a n g e   D e v e l o p m e n t   K i t < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " e c h E N G " > < D I S P L A Y S T R I N G > E x c h a n g e   S e r v e r   5 . 5   a n d   E a r l i e r   V e r s i o n s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " f a c e E N G " > < D I S P L A Y S T R I N G > F i g h t e r   A c e < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " f l t E N G " > < D I S P L A Y S T R I N G > F l i g h t   S i m u l a t o r s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " f o r E N G " > < D I S P L A Y S T R I N G > F o r t r a n   P o w e r S t a t i o n < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " f p 2 0 0 0 E N G " > < D I S P L A Y S T R I N G > F r o n t P a g e   2 0 0 0 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " f p 2 0 0 2 E N G " > < D I S P L A Y S T R I N G > F r o n t P a g e   2 0 0 2 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " f p 9 7 E N G " > < D I S P L A Y S T R I N G > F r o n t P a g e   9 7   f o r   W i n d o w s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " f p 9 8 E N G " > < D I S P L A Y S T R I N G > F r o n t P a g e   9 8   f o r   W i n d o w s   9 8 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " f p s e 9 8 E N G " > < D I S P L A Y S T R I N G > F r o n t P a g e   9 8   S e r v e r   E x t e n s i o n s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " f p m E N G " > < D I S P L A Y S T R I N G > F r o n t P a g e   f o r   M a c i n t o s h < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " f p w E N G " > < D I S P L A Y S T R I N G > F r o n t P a g e   f o r   W i n d o w s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " g m s E N G " > < D I S P L A Y S T R I N G > G a m e s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " g w i n E N G " > < D I S P L A Y S T R I N G > G e t t i n g   t h e   M o s t   O u t   o f   W i n d o w s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " g l f E N G " > < D I S P L A Y S T R I N G > G o l f < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " g s g E N G " > < D I S P L A Y S T R I N G > G r e e t i n g s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " h d w E N G " > < D I S P L A Y S T R I N G > H a r d w a r e   P r o d u c t s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " g s h p E N G " > < D I S P L A Y S T R I N G > H o m e   P u b l i s h i n g < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " i m c E N G " > < D I S P L A Y S T R I N G > I m a g e   C o m p o s e r < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " i s E N G " > < D I S P L A Y S T R I N G > I n d e x   S e r v e r < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " i m E N G " > < D I S P L A Y S T R I N G > I n t e l l i M o u s e < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " m a c p o i n t E N G " > < D I S P L A Y S T R I N G > I n t e l l i P o i n t   f o r   M a c i n t o s h < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " i c p E N G " > < D I S P L A Y S T R I N G > I n t e r n e t   C o n t r o l   P a c k < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " i e E N G " > < D I S P L A Y S T R I N G > I n t e r n e t   E x p l o r e r < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " i e a k E N G " > < D I S P L A Y S T R I N G > I n t e r n e t   E x p l o r e r   A d m i n i s t r a t i o n   K i t < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " i i s E N G " > < D I S P L A Y S T R I N G > I n t e r n e t   I n f o r m a t i o n   S e r v e r   4 . 0 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " i i s 5 0 E N G " > < D I S P L A Y S T R I N G > I n t e r n e t   I n f o r m a t i o n   S e r v i c e s   5 . 0 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " i m n E N G " > < D I S P L A Y S T R I N G > I n t e r n e t   M a i l   a n d   N e w s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " i m n m a c E N G " > < D I S P L A Y S T R I N G > I n t e r n e t   M a i l   a n d   N e w s   f o r   M a c i n t o s h < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " i m n w 3 1 E N G " > < D I S P L A Y S T R I N G > I n t e r n e t   M a i l   a n d   N e w s   f o r   W i n d o w s   3 . 1 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " i m n 9 5 E N G " > < D I S P L A Y S T R I N G > I n t e r n e t   M a i l   a n d   N e w s   f o r   W i n d o w s   9 5 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " i m n n t 4 E N G " > < D I S P L A Y S T R I N G > I n t e r n e t   M a i l   a n d   N e w s   f o r   W i n d o w s   N T   4 . 0 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " I S A S E N G " > < D I S P L A Y S T R I N G > I n t e r n e t   S e c u r i t y   a n d   A c c e l e r a t i o n   S e r v e r   2 0 0 0 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " i s a E N G " > < D I S P L A Y S T R I N G > I n t e r n e t   S e r v e r   A P I < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " j a v E N G " > < D I S P L A Y S T R I N G > J a v a   T e c h n o l o g i e s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " n k e y E N G " > < D I S P L A Y S T R I N G > K e y b o a r d s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " k i d E N G " > < D I S P L A Y S T R I N G > K i d s   P r o d u c t s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " k m m c E N G " > < D I S P L A Y S T R I N G > K i l l i n g   M o o n   f o r   M a c i n t o s h < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " l a n E N G " > < D I S P L A Y S T R I N G > L A N   M a n a g e r < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " l n k s E N G " > < D I S P L A Y S T R I N G > L i n k s   & a m p ;   A c c e s s   G a m e s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " L S 2 0 0 0 E N G " > < D I S P L A Y S T R I N G > L i n k s   L S   2 0 0 0 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " l n k m E N G " > < D I S P L A Y S T R I N G > L i n k s   L S   f o r   M a c i n t o s h < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " l m E N G " > < D I S P L A Y S T R I N G > L i q u i d   M o t i o n < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " m s v E N G " > < D I S P L A Y S T R I N G > M a i l   S e r v e r < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " m p E N G " > < D I S P L A Y S T R I N G > M a p P o i n t < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " m a s t E N G " > < D I S P L A Y S T R I N G > M a s t e r i n g   S e r i e s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " m r s E N G " > < D I S P L A Y S T R I N G > M e r c h a n t   S e r v e r < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " m s q E N G " > < D I S P L A Y S T R I N G > M e s s a g e   Q u e u e < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " m s d k E N G " > < D I S P L A Y S T R I N G > M e s s a g i n g   S D K < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " m g s E N G " > < D I S P L A Y S T R I N G > M e t a l   G e a r   S o l i d < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " B i z P l a n E N G " > < D I S P L A Y S T R I N G > M i c r o s o f t   B u s i n e s s   P l a n n e r < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " M M C E N G " > < D I S P L A Y S T R I N G > M i c r o s o f t   M a n a g e m e n t   C o n s o l e < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " m s p r E N G " > < D I S P L A Y S T R I N G > M i c r o s o f t   P r e s s   B o o k s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " M S R E A D E N G " > < D I S P L A Y S T R I N G > M i c r o s o f t   R e a d e r < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " m i d E N G " > < D I S P L A Y S T R I N G > M i d t o w n   M a d n e s s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " m t m E N G " > < D I S P L A Y S T R I N G > M o n s t e r   T r u c k   M a d n e s s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " m o t E N G " > < D I S P L A Y S T R I N G > M o t o c r o s s   M a d n e s s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " m s d n E N G " > < D I S P L A Y S T R I N G > M S D N < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " m s d o s E N G " > < D I S P L A Y S T R I N G > M S - D O S < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " m s n E N G " > < D I S P L A Y S T R I N G > M S N   -   T h e   M i c r o s o f t   N e t w o r k < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " g m z E N G " > < D I S P L A Y S T R I N G > M S N   G a m i n g   Z o n e < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " t r s E N G " > < D I S P L A Y S T R I N G > M T S   -   M i c r o s o f t   T r a n s a c t i o n   S e r v e r < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " p f g E N G " > < D I S P L A Y S T R I N G > M y   P e r s o n a l   T u t o r < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " n b a 2 k E N G " > < D I S P L A Y S T R I N G > N B A   I n s i d e   D r i v e   2 0 0 0 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " n m t E N G " > < D I S P L A Y S T R I N G > N e t M e e t i n g < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " t h e E N G " > < D I S P L A Y S T R I N G > N e t S h o w   T h e a t e r   S e r v e r < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " n t w k E N G " > < D I S P L A Y S T R I N G > N e t w o r k i n g < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " n f l 2 k E N G " > < D I S P L A Y S T R I N G > N F L   F e v e r   2 0 0 0 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " W i n d n a 2 E N G " > < D I S P L A Y S T R I N G > N - t i e r   D e v e l o p m e n t < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " o d b c E N G " > < D I S P L A Y S T R I N G > O D B C < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " o f w 2 k E N G " > < D I S P L A Y S T R I N G > O f f i c e   2 0 0 0   S u i t e < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " o f f 2 0 0 1 E N G " > < D I S P L A Y S T R I N G > O f f i c e   2 0 0 1   f o r   M a c < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " o f w E N G " > < D I S P L A Y S T R I N G > O f f i c e   f o r   W i n d o w s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " o f f x p s e t E N G " > < D I S P L A Y S T R I N G > O f f i c e   X P   S e t u p < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " o f f x p E N G " > < D I S P L A Y S T R I N G > O f f i c e   X P   S u i t e < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " o l e E N G " > < D I S P L A Y S T R I N G > O L E   P r o g r a m m i n g < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " o f c E N G " > < D I S P L A Y S T R I N G > O p e n   F i n a n c i a l   C o n n e c t i v i t y < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " o u t E N G " > < D I S P L A Y S T R I N G > O u t l o o k < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " o u t 2 K E N G " > < D I S P L A Y S T R I N G > O u t l o o k   2 0 0 0 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " o l 2 0 0 2 E N G " > < D I S P L A Y S T R I N G > O u t l o o k   2 0 0 2 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " o u t 9 7 E N G " > < D I S P L A Y S T R I N G > O u t l o o k   9 7 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " o u t 9 8 E N G " > < D I S P L A Y S T R I N G > O u t l o o k   9 8 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " o e x E N G " > < D I S P L A Y S T R I N G > O u t l o o k   E x p r e s s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " o w r E N G " > < D I S P L A Y S T R I N G > O u t w a r s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " p b o x E N G " > < D I S P L A Y S T R I N G > P a n d o r a   s   B o x < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " P D 2 K E N G " > < D I S P L A Y S T R I N G > P h o t o D r a w   2 0 0 0 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " p i c E N G " > < D I S P L A Y S T R I N G > P i c t u r e   I t ! < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " p s d k E N G " > < D I S P L A Y S T R I N G > P l a t f o r m   S D K < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " p l 9 8 E N G " > < D I S P L A Y S T R I N G > P l u s !   9 8 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " p l s k E N G " > < D I S P L A Y S T R I N G > P l u s !   F o r   K i d s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " p p t 2 0 0 0 E N G " > < D I S P L A Y S T R I N G > P o w e r P o i n t   2 0 0 0 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " p p t 2 0 0 2 E N G " > < D I S P L A Y S T R I N G > P o w e r P o i n t   2 0 0 2 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " p p t 9 7 E N G " > < D I S P L A Y S T R I N G > P o w e r P o i n t   9 7   f o r   W i n d o w s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " p p t E N G " > < D I S P L A Y S T R I N G > P o w e r P o i n t   f o r   W i n d o w s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " p r n t E N G " > < D I S P L A Y S T R I N G > P r i n t i n g < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " p r s E N G " > < D I S P L A Y S T R I N G > P r o x y   S e r v e r < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " p u b E N G " > < D I S P L A Y S T R I N G > P u b l i s h e r < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " p u b 2 0 0 0 E N G " > < D I S P L A Y S T R I N G > P u b l i s h e r   2 0 0 0 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " p u b 2 0 0 2 E N G " > < D I S P L A Y S T R I N G > P u b l i s h e r   2 0 0 2 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " r e f E N G " > < D I S P L A Y S T R I N G > R e f e r e n c e   P r o d u c t s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " s c h E N G " > < D I S P L A Y S T R I N G > S c h e d u l e < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " s b s s E N G " > < D I S P L A Y S T R I N G > S c h o l a s t i c   M a g i c   S c h o o l   B u s   S e r i e s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " s e t i n s t E N G " > < D I S P L A Y S T R I N G > S e t u p   a n d   I n s t a l l a t i o n < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " s p t s E N G " > < D I S P L A Y S T R I N G > S h a r e P o i n t   T e a m   S e r v i c e s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " s w p E N G " > < D I S P L A Y S T R I N G > S i d e W i n d e r   G a m e   C o n t r o l l e r s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " s i t e E N G " > < D I S P L A Y S T R I N G > S i t e   S e r v e r < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " c o m E N G " > < D I S P L A Y S T R I N G > S i t e   S e r v e r   3 . 0   C o m m e r c e   E d i t i o n < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " s b s E N G " > < D I S P L A Y S T R I N G > S m a l l   B u s i n e s s   S e r v e r < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " s n a E N G " > < D I S P L A Y S T R I N G > S N A   S e r v e r < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " s o u n d E N G " > < D I S P L A Y S T R I N G > S o u n d < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " s q l E N G " > < D I S P L A Y S T R I N G > S Q L   S e r v e r < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " s t r E N G " > < D I S P L A Y S T R I N G > S t a r L a n c e r < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " s a n d t E N G " > < D I S P L A Y S T R I N G > S t r e e t s   a n d   T r i p s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " s m s E N G " > < D I S P L A Y S T R I N G > S y s t e m s   M a n a g e m e n t   S e r v e r   1 . 2 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " S M S 2 0 0 E N G " > < D I S P L A Y S T R I N G > S y s t e m s   M a n a g e m e n t   S e r v e r   2 . 0 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " t m g E N G " > < D I S P L A Y S T R I N G > T e a m   M a n a g e r < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " t e r m s v r E N G " > < D I S P L A Y S T R I N G > T e r m i n a l   S e r v e r < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " t r b l E N G " > < D I S P L A Y S T R I N G > T r o u b l e s h o o t i n g   W i z a r d s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " u r b E N G " > < D I S P L A Y S T R I N G > U r b a n   A s s a u l t < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " v i s i o 2 k E N G " > < D I S P L A Y S T R I N G > V i s i o   2 0 0 0 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " v i s i o 2 k e n t E N G " > < D I S P L A Y S T R I N G > V i s i o   2 0 0 0   E n t e r p r i s e   E d i t i o n < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " v i s i o 2 k p r o E N G " > < D I S P L A Y S T R I N G > V i s i o   2 0 0 0   P r o f e s s i o n a l   E d i t i o n < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " v i s i o 2 k s t d E N G " > < D I S P L A Y S T R I N G > V i s i o   2 0 0 0   S t a n d a r d   E d i t i o n < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " v i s i o 2 k t e k E N G " > < D I S P L A Y S T R I N G > V i s i o   2 0 0 0   T e c h n i c a l   E d i t i o n < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " v i s i o 5 e n t E N G " > < D I S P L A Y S T R I N G > V i s i o   E n t e r p r i s e   5 . 0 x < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " v n e E N G " > < D I S P L A Y S T R I N G > V i s i o   N e t w o r k   E q u i p m e n t < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " v i s i o 5 p r o E N G " > < D I S P L A Y S T R I N G > V i s i o   P r o f e s s i o n a l   5 . 0 x < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " v i s i o 5 s t d E N G " > < D I S P L A Y S T R I N G > V i s i o   S t a n d a r d   5 . 0 x < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " v i s i o 5 t e k E N G " > < D I S P L A Y S T R I N G > V i s i o   T e c h n i c a l   5 . 0 x < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " v b b E N G " > < D I S P L A Y S T R I N G > V i s u a l   B a s i c < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " v b a s i c 1 6 k b E N G " > < D I S P L A Y S T R I N G > V i s u a l   B a s i c   1 6 - b i t   E d i t i o n s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " v c c E N G " > < D I S P L A Y S T R I N G > V i s u a l   C < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " v c c 1 6 E N G " > < D I S P L A Y S T R I N G > V i s u a l   C   a n d   C   -   1 6   b i t < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " f o x E N G " > < D I S P L A Y S T R I N G > V i s u a l   F o x P r o < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " v i d E N G " > < D I S P L A Y S T R I N G > V i s u a l   I n t e r D e v < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " v j j E N G " > < D I S P L A Y S T R I N G > V i s u a l   J < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " v s s E N G " > < D I S P L A Y S T R I N G > V i s u a l   S o u r c e S a f e < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " v s t E N G " > < D I S P L A Y S T R I N G > V i s u a l   S t u d i o < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " v s t 9 7 E N G " > < D I S P L A Y S T R I N G > V i s u a l   S t u d i o   9 7 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " v t t E N G " > < D I S P L A Y S T R I N G > V i s u a l   T e s t < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " w m o s E N G " > < D I S P L A Y S T R I N G > W h e e l   M o u s e < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " s d k 6 E N G " > < D I S P L A Y S T R I N G > W i n d o w s   1 6 - b i t   S D K < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " w i n 2 0 0 0 E N G " > < D I S P L A Y S T R I N G > W i n d o w s   2 0 0 0 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " W i n 2 0 0 0 D e v E N G " > < D I S P L A Y S T R I N G > W i n d o w s   2 0 0 0   -   D e v e l o p e r < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " W 2 k H m U s e E N G " > < D I S P L A Y S T R I N G > W i n d o w s   2 0 0 0   H o m e   U s e r s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " w i n E N G " > < D I S P L A Y S T R I N G > W i n d o w s   3 . x < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " s d k 3 E N G " > < D I S P L A Y S T R I N G > W i n d o w s   3 2 - b i t   S D K < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " w 9 8 E N G " > < D I S P L A Y S T R I N G > W i n d o w s   9 8 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " w 9 8 s e E N G " > < D I S P L A Y S T R I N G > W i n d o w s   9 8   S e c o n d   E d i t i o n < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " w i n c e d d k E N G " > < D I S P L A Y S T R I N G > W i n d o w s   C E   P l a t f o r m   B u i l d e r < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " w i n c e v c E N G " > < D I S P L A Y S T R I N G > W i n d o w s   C E   T o o l k i t   f o r   V i s u a l   C < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " d d k E N G " > < D I S P L A Y S T R I N G > W i n d o w s   D D K s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " W i n D N A E N G " > < D I S P L A Y S T R I N G > W i n d o w s   D N A < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " w m p E N G " > < D I S P L A Y S T R I N G > W i n d o w s   M e d i a   P l a y e r < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " w m s E N G " > < D I S P L A Y S T R I N G > W i n d o w s   M e d i a   S e r v i c e s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " w i n m e E N G " > < D I S P L A Y S T R I N G > W i n d o w s   M i l l e n n i u m   E d i t i o n < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " n t s 3 5 1 E N G " > < D I S P L A Y S T R I N G > W i n d o w s   N T   S e r v e r   3 . 5 1 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " n t s 4 0 E N G " > < D I S P L A Y S T R I N G > W i n d o w s   N T   S e r v e r   4 . 0 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " n t w 3 5 1 E N G " > < D I S P L A Y S T R I N G > W i n d o w s   N T   W o r k s t a t i o n   3 . 5 1 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " n t w 4 0 E N G " > < D I S P L A Y S T R I N G > W i n d o w s   N T   W o r k s t a t i o n   4 . 0 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " w u p d E N G " > < D I S P L A Y S T R I N G > W i n d o w s   U p d a t e < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " w r d 2 0 E N G " > < D I S P L A Y S T R I N G > W o r d   2 0 0 0 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " w d 2 0 0 2 E N G " > < D I S P L A Y S T R I N G > W o r d   2 0 0 2 < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " w r d 9 7 E N G " > < D I S P L A Y S T R I N G > W o r d   9 7   f o r   W i n d o w s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " w r d E N G " > < D I S P L A Y S T R I N G > W o r d   f o r   W i n d o w s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " w k m E N G " > < D I S P L A Y S T R I N G > W o r k s   f o r   M a c i n t o s h < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " w r k E N G " > < D I S P L A Y S T R I N G > W o r k s   f o r   W i n d o w s < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < / P A R A M _ I T E M > < P A R A M _ I T E M   N A M E = " K e y w o r d T y p e "   T Y P E = " P A R A M _ L I S T "   V I S I B L E = " t r u e " > < D E S C R I P T I O N > A r a n a n : < / D E S C R I P T I O N > < P A R A M _ V A L U E   V A L U E = " A L L "   D E F A U L T = " t r u e " > < D I S P L A Y S T R I N G > T  m   s  z c  k l e r < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " A N Y " > < D I S P L A Y S T R I N G > H e r h a n g i   b i r   s  z c  k < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " P H R A S E " > < D I S P L A Y S T R I N G > Y a z 1l d 11  g i b i < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < P A R A M _ V A L U E   V A L U E = " B O O L E A N " > < D I S P L A Y S T R I N G > B o o l e a n   d e y i m i < / D I S P L A Y S T R I N G > < / P A R A M _ V A L U E > < / P A R A M _ I T E M > < P A R A M _ I T E M   N A M E = " T i t l e s "   T Y P E = " P A R A M _ B O O L "   V I S I B L E = " t r u e " > < D E S C R I P T I O N > Y a l n 1z c a   B a _l 1k t a   a r a < / D E S C R I P T I O N > < P A R A M _ V A L U E   V A L U E = " f a l s e "   D E F A U L T = " t r u e "   / > < / P A R A M _ I T E M > < / C O N F I G _ D A T A > 
 
         
 
                 	 < / D A T A > 
 
                 < / W R A P P E R > 
 
         < / S E A R C H E N G I N E S > 
 
 < / H E L P C E N T E R P A C K A G E > 
 
 
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\pchealth\helpctr\rc\bdychannel\safstore.xml ===
< ? x m l   v e r s i o n = " 1 . 0 "   e n c o d i n g = " u n i c o d e " ? > 
 
 < S A F R E G > 
 
 < V E N D O R   I D = " C N = M i c r o s o f t   C o r p o r a t i o n , L = R e d m o n d , S = W a s h i n g t o n , C = U S "   N A M E = " M i c r o s o f t   C o r p o r a t i o n "   P U B L I C K E Y = " "   U S E R A C C O U N T = " S U P P O R T _ 3 8 8 9 4 5 a 0 " > 
 
 < P R O D U C T   I D = " M i c r o s o f t   W h i s t l e r   B e t a "   I C O N = " h c p : / / C N = M i c r o s o f t % 2 0 C o r p o r a t i o n , L = R e d m o n d , S = W a s h i n g t o n , C = U S / l o g o . g i f "   U R L = " h c p : / / C N = M i c r o s o f t % 2 0 C o r p o r a t i o n , L = R e d m o n d , S = W a s h i n g t o n , C = U S / b u g r e p . h t m "   S E C U R I T Y = " " > 
 
 < ! [ C D A T A [ B e t a   t e s t   o f   t h e   W h i s t l e r   O S ] ] > < / P R O D U C T > 
 
 < P R O D U C T   I D = " M i c r o s o f t   B u d d y H e l p   C h a n n e l "   I C O N = " h c p : / / C N = M i c r o s o f t % 2 0 C o r p o r a t i o n , L = R e d m o n d , S = W a s h i n g t o n , C = U S / l o g o . g i f "   U R L = " h c p : / / C N = M i c r o s o f t % 2 0 C o r p o r a t i o n , L = R e d m o n d , S = W a s h i n g t o n , C = U S / r c B u d d y / r c B u d d y . h t m "   S E C U R I T Y = " " > 
 
 	 	 	 < ! [ C D A T A [ R e m o t e   C o n t r o l   B u d d y   H e l p   C h a n n e l ] ] > < / P R O D U C T > 
 
 < / V E N D O R > 
 
   
 
 < / S A F R E G > 
 
 
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\pchealth\helpctr\rc\bdychannel\setup\list.txt ===
rcbuddy.cab,Windows Remote Control Buddy Channel,http://www.microsoft.com/windows
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\pchealth\helpctr\rc\bdychannel\setup\rcbuddy.xml ===
<?xml version="1.0" ?>
<SAFConfig>
    <LocalizationComment>ProductDescription should be localized</LocalizationComment>
	<EntryURL>hcp://CN=Microsoft%20Corporation,L=Redmond,S=Washington,C=US/Remote%20Assistance/Escalation/Common/rcscreen1.htm</EntryURL>
	<ProductID>Microsoft Remote Assistance</ProductID>
	<ProductDescription>Microsoft Remote Assistance</ProductDescription>
	<CompanyName>Microsoft Corporation</CompanyName>
	<VendorIcon>hcp://CN=Microsoft%20Corporation,L=Redmond,S=Washington,C=US/logo.gif</VendorIcon>
</SAFConfig>
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\pchealth\helpctr\rc\bdychannel\setup\windows_newsgroups.xml ===
<?xml version="1.0" ?>
<SAFConfig>
    <LocalizationComment>ProductID and ProductDescription should be localized</LocalizationComment>
	<EntryURL>hcp://system/blurbs/windows_newsgroups.htm</EntryURL>
	<ProductID>Windows Newsgroups</ProductID>
	<ProductDescription>Windows Newsgroups</ProductDescription>
	<CompanyName>Microsoft Corporation</CompanyName>
	<VendorIcon></VendorIcon>
</SAFConfig>
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\pchealth\helpctr\rc\bdychannel\setup\signcab.txt ===
***************************** PLEASE READ ********************************************

The uploadx.cab file built in this directory should be real-signed by http://prslab, and then,
checked into %inetroot%\pfsrv\OffLoad\Web\uploadx.cab. Detailed steps are listed below:

0.0 copy list.txt and rcbuddy.cab to ..\testsign
0.1 cd ..\testsign
0.2 run signfiles.bat - result should be 0 for successful signing 

1. go to http://prslab/codesign/tool.htm, click "Create Request", fill the form as below:

Job Description: Remote Control Channel for Whistler
Certificate type: Microsoft External Code Distribution
Virus Checker: Cheyenne (innoculan)
Virus Checker Engine Version: 4.0
Macro Virus Check:  Yes
Encryption: Not High Crypto
Operation System: 32-bit Windows
Product Version: <Whistler Version & build number>
Language: English

Fill in >= 2 MS full-time employees e-mail aliases

Y2k Compliant: TRUE

Add then submit two files: 
        rcBuddy.cab
        list.txt

2. http://prslab will send a notice once the bugrept.cab is real-signed.

3. in razzle window:
    cd /d %sdxroot%\admin\pchealth\helpctr\rc\bdyChannel\redist
    sd edit rcBuddy.cab
    copy <real-signed rcBuddy.cab> .
    sd submit rcBuddy.cab

The last step checks in a real-signed uploadx.cab.
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\pchealth\helpctr\rc\bdychannel\setup\package_description.xml ===
<?xml version="1.0" ?>
<HELPCENTERPACKAGE>
<VERSION VALUE="1.0.1.0" />
<PRODUCT ID="MS_RemoteAssistance" />
<CONFIG>
   <SAF ACTION="ADD" FILE="rcBuddy.xml"/>
   <SAF ACTION="ADD" FILE="windows_newsgroups.xml"/>
</CONFIG>
<INSTALL_CONTENT>
   <FILE ACTION="ADD" SOURCE="RAClientLayout.xml" URI="Remote Assistance\RAClientLayout.xml"/>
   <FILE ACTION="ADD" SOURCE="RAIMLayout.xml" URI="Remote Assistance\RAIMLayout.xml"/>
   <FILE ACTION="ADD" SOURCE="RAHelpeeAcceptLayout.xml" URI="Remote Assistance\RAHelpeeAcceptLayout.xml"/>
   <FILE ACTION="ADD" SOURCE="rcBuddy.htm" URI="Remote Assistance\rcBuddy.htm"/>
   <FILE ACTION="ADD" SOURCE="confirm.htm" URI="Remote Assistance\confirm.htm"/>
   <FILE ACTION="ADD" SOURCE="helpeeaccept.htm" URI="Remote Assistance\helpeeaccept.htm"/>
   <FILE ACTION="ADD" SOURCE="rcstatus.htm" URI="Remote Assistance\rcstatus.htm"/>
   <FILE ACTION="ADD" SOURCE="rcscreen1.htm" URI="Remote Assistance\Escalation\Common\rcscreen1.htm"/>
   <FILE ACTION="ADD" SOURCE="rcscreen2.htm" URI="Remote Assistance\Escalation\Common\rcscreen2.htm"/>
   <FILE ACTION="ADD" SOURCE="rcscreen3.htm" URI="Remote Assistance\Escalation\Common\rcscreen3.htm"/>
   <FILE ACTION="ADD" SOURCE="Remote_Assistance_Graphic.png" URI="Remote Assistance\Escalation\Common\Remote_Assistance_Graphic.png"/>
   <FILE ACTION="ADD" SOURCE="Envelope.gif" URI="Remote Assistance\Escalation\Common\Envelope.gif"/>
   <FILE ACTION="ADD" SOURCE="floppy.gif" URI="Remote Assistance\Escalation\Common\floppy.gif"/>
   <FILE ACTION="ADD" SOURCE="IM_icon.gif" URI="Remote Assistance\Escalation\Common\IM_icon.gif"/>
   <FILE ACTION="ADD" SOURCE="icon_extweb.gif" URI="Remote Assistance\Escalation\Common\icon_extweb.gif"/>
   <FILE ACTION="ADD" SOURCE="rcscreen4.htm" URI="Remote Assistance\Escalation\Email\rcscreen4.htm"/>
   <FILE ACTION="ADD" SOURCE="rcscreen5.htm" URI="Remote Assistance\Escalation\Email\rcscreen5.htm"/>
   <FILE ACTION="ADD" SOURCE="rcscreen6.htm" URI="Remote Assistance\Escalation\Email\rcscreen6.htm"/>
   <FILE ACTION="ADD" SOURCE="rcscreen7.htm" URI="Remote Assistance\Escalation\Email\rcscreen7.htm"/>
   <FILE ACTION="ADD" SOURCE="rcscreen8.htm" URI="Remote Assistance\Escalation\Email\rcscreen8.htm"/>
   <FILE ACTION="ADD" SOURCE="rcscreen9.htm" URI="Remote Assistance\Escalation\Email\rcscreen9.htm"/>
   <FILE ACTION="ADD" SOURCE="check.gif" URI="Remote Assistance\Escalation\Email\check.gif"/>
   <FILE ACTION="ADD" SOURCE="help.gif" URI="Remote Assistance\Escalation\Email\help.gif"/>
   <FILE ACTION="ADD" SOURCE="rcscreenshot3.gif" URI="Remote Assistance\Escalation\Email\rcscreenshot3.gif"/>
   <FILE ACTION="ADD" SOURCE="rcIM.htm" URI="Remote Assistance\Escalation\IM\rcIM.htm"/>
   <FILE ACTION="ADD" SOURCE="UnSolicitedRCUI.htm" URI="Remote Assistance\Escalation\Unsolicited\UnSolicitedRCUI.htm"/>
   <FILE ACTION="ADD" SOURCE="rctoolScreen1.htm" URI="Remote Assistance\Interaction\Client\rctoolScreen1.htm"/>
   <FILE ACTION="ADD" SOURCE="RAClient.htm" URI="Remote Assistance\Interaction\Client\RAClient.htm"/>
   <FILE ACTION="ADD" SOURCE="Setting.htm" URI="Remote Assistance\Interaction\Client\setting.htm"/>
   <FILE ACTION="ADD" SOURCE="RAToolBar.htm" URI="Remote Assistance\Interaction\Client\RAToolBar.htm"/>
   <FILE ACTION="ADD" SOURCE="RAStatusBar.htm" URI="Remote Assistance\Interaction\Client\RAStatusBar.htm"/>
   <FILE ACTION="ADD" SOURCE="RAChatClient.htm" URI="Remote Assistance\Interaction\Client\RAChatClient.htm"/>
   <FILE ACTION="ADD" SOURCE="RAClient.js" URI="Remote Assistance\Interaction\Client\RAClient.js"/>
   <FILE ACTION="ADD" SOURCE="DownArrow.gif" URI="Remote Assistance\Interaction\Client\DownArrow.gif"/> 
   <FILE ACTION="ADD" SOURCE="UpArrow.gif" URI="Remote Assistance\Interaction\Client\UpArrow.gif"/>
   <FILE ACTION="ADD" SOURCE="TakeControl.gif" URI="Remote Assistance\Interaction\Client\TakeControl.gif"/>
   <FILE ACTION="ADD" SOURCE="Animation.gif" URI="Remote Assistance\Interaction\Client\Animation.gif"/>
   <FILE ACTION="ADD" SOURCE="connected.gif" URI="Remote Assistance\Interaction\Client\connected.gif"/>
   <FILE ACTION="ADD" SOURCE="combobox_line.gif" URI="Remote Assistance\Interaction\Client\combobox_line.gif"/>
   <FILE ACTION="ADD" SOURCE="RAServer.htm" URI="Remote Assistance\Interaction\Server\RAServer.htm"/> 
   <FILE ACTION="ADD" SOURCE="RAChatServerTop.htm" URI="Remote Assistance\Interaction\Server\RAChatServerTop.htm"/>
   <FILE ACTION="ADD" SOURCE="RAChatServerBottom.htm" URI="Remote Assistance\Interaction\Server\RAChatServerBottom.htm"/>
   <FILE ACTION="ADD" SOURCE="RAServerToolBar.htm" URI="Remote Assistance\Interaction\Server\RAServerToolBar.htm"/>
   <FILE ACTION="ADD" SOURCE="SettingServer.htm" URI="Remote Assistance\Interaction\Server\SettingServer.htm"/>
   <FILE ACTION="ADD" SOURCE="RAServer.js" URI="Remote Assistance\Interaction\Server\RAServer.js"/>
   <FILE ACTION="ADD" SOURCE="StopControl.gif" URI="Remote Assistance\Interaction\Server\StopControl.gif"/>
   <FILE ACTION="ADD" SOURCE="Helpee_line.gif" URI="Remote Assistance\Interaction\Server\Helpee_line.gif"/>
   <FILE ACTION="ADD" SOURCE="RCFileXfer.htm" URI="Remote Assistance\Interaction\Common\RCFileXfer.htm"/>
   <FILE ACTION="ADD" SOURCE="RAControl.js" URI="Remote Assistance\Interaction\Common\RAControl.js"/>
   <FILE ACTION="ADD" SOURCE="ErrorMsgs.htm" URI="Remote Assistance\Interaction\Common\ErrorMsgs.htm"/>
   <FILE ACTION="ADD" SOURCE="hide-chat.gif" URI="Remote Assistance\Interaction\Common\hide-chat.gif"/>
   <FILE ACTION="ADD" SOURCE="show-chat.gif" URI="Remote Assistance\Interaction\Common\show-chat.gif"/>
   <FILE ACTION="ADD" SOURCE="Options.gif" URI="Remote Assistance\Interaction\Common\Options.gif"/>
   <FILE ACTION="ADD" SOURCE="Quit.gif" URI="Remote Assistance\Interaction\Common\Quit.gif"/>
   <FILE ACTION="ADD" SOURCE="SendChat.gif" URI="Remote Assistance\Interaction\Common\SendChat.gif"/>
   <FILE ACTION="ADD" SOURCE="SendFile.gif" URI="Remote Assistance\Interaction\Common\SendFile.gif"/>  
   <FILE ACTION="ADD" SOURCE="SendVoice.gif" URI="Remote Assistance\Interaction\Common\SendVoice.gif"/>
   <FILE ACTION="ADD" SOURCE="SendVoiceOn.gif" URI="Remote Assistance\Interaction\Common\SendVoiceOn.gif"/>
   <FILE ACTION="ADD" SOURCE="rcbuddy.css" URI="Remote Assistance\Css\rcbuddy.css"/>
   <FILE ACTION="ADD" SOURCE="rc.css" URI="Remote Assistance\Css\rc.css"/>
   <FILE ACTION="ADD" SOURCE="common.js" URI="Remote Assistance\Common\common.js"/>
   <FILE ACTION="ADD" SOURCE="constants.js" URI="Remote Assistance\Common\constants.js"/>
   <FILE ACTION="ADD" SOURCE="RAHelp.htm" URI="Remote Assistance\Common\RAHelp.htm"/>  
   <FILE ACTION="ADD" SOURCE="ConnIssue.htm" URI="Remote Assistance\Common\ConnIssue.htm"/>
   <FILE ACTION="ADD" SOURCE="SecIssue.htm" URI="Remote Assistance\Common\SecIssue.htm"/>
   <FILE ACTION="ADD" SOURCE="icon_warning_32x.gif" URI="Remote Assistance\Common\icon_warning_32x.gif"/>
   <FILE ACTION="ADD" SOURCE="icon_information_32x.gif" URI="Remote Assistance\Common\icon_information_32x.gif"/> 
</INSTALL_CONTENT>
<TRUSTED_CONTENT>
    <TRUSTED ACTION="ADD" URI="hcp://CN=Microsoft%20Corporation,L=Redmond,S=Washington,C=US/Remote%20Assistance"/>
    <TRUSTED ACTION="ADD" URI="hcp://CN=Microsoft%20Corporation,L=Redmond,S=Washington,C=US/Communities"/>
</TRUSTED_CONTENT>
</HELPCENTERPACKAGE>
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\pchealth\helpctr\rc\bdychannel\testsign\readme.txt ===
Instructions for Using the Tools Directory to Test Sign Code

------------
Test the Tools on your machine:
------------

  1. You should have Internet Explorer 3.02 with the Authenticode2 Update.

  2. Copy the entire Tools directory to your local hard drive.

  3. Run Signfiles.bat (it is best to do this from the command prompt)

  4. If everything works, you should "test sign" Notepad.exe

  Mouse over the Description (Microsoft Notapad) to see the URL
  Click on the descriptio to go to the site

------------
To test sign your own code:
------------

  1. Drop your files into the Tools directory (don't use subdirectories)

  2. Modify the list.txt and list your files with their informaiton.

  The list.txt file is in the following format:
  
    filename,description,url

    You need one line in the list.txt file for each file to be signed
    (Need return at the end of each line)

    The filename is listed with extension. The file must be 32-bit. 
    Currently, the tool only works with .exe .dll .ocx and .cab files

    The description is a text description. (approx: 45 Characters max)

    The URL points to a web site where someone downloading goes to for info.
  The URL must start with http://

  The list.txt file requires a single blank line at the end of the file.
  (This is important, refer to the sample used to sign notepad.exe)

  3. Run signfiles.bat

------------
Common problems:
------------

  Error: URL on the last file doesn't work.
  Resolution:  Need the extra blank line at the end of the list.txt

  Error: 0x80070005 (attempting to sign a read-only file)
  Resolution: uncheck the read-only attribute

  Error: 0x80070057 (attempting to sign a 16-bit file)
  Resolution: Only 32-bit files can be signed.  

------------
More Information:
------------

This file has been intentionally kept brief.  For Information on submitting
files for "real signing," addition information on error resulution, and
other signing information see:

http://wprs/CODE_Startup.htm

Code signing should not be taken lightly.  It is the process of putting
an official company stamp on code.  Reading the information on the 
above web site is highly suggested.
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\pchealth\helpctr\rc\bdychannel\testsign\faq.txt ===
General Introduction to Code Signing

-----------------
Document Overview
-----------------
This guide presents general information about how to use the tools provided
with IE30 to generate and use cryptographic certificates with IE30.  It does 
not attempt to provide an in-depth discussion of public key cryptography, 
X.509 certificates, or certification policy.  See the recommended reading 
list for suggested books and documents that will help you understand those 
and other background issues.

Following this introduction, this guide is divided into the following 
sections:

- Terminology
 
 Describes the terms used in this document that may be new to you.
 
- Procedural Overview
 
 This section gives a brief description of each step of the signing 
procedure and an example of how it would be used by walking through a 
sample session from start to finish.
 
- Required Files List
 
- Recommended Reading

Terminology
-----------
X.509 Certificate - A cryptographic certificate that associates an entity's 
name with its public key.

PKCS 7 "SIGNED DATA" - A widely used convention for containing the data used 
to sign an image or a document, typically including the certificate of the
signer and a statement about the image made by the signer.

WIN_CERTIFICATE - A new Win32 defined data structure that contains either a 
PKCS 7 signed data object or an X.509 Certificate.

Certification Authority (CA) - An entity that is making a statement
(represented by an X.509 Certificate) about the authenticity of some
other certificate.

SPC - Software Publishing Certificate.  A statement that the recipient is an 
approved software vendor, represented as an X.509 certificate.

PE Image - Portable Executable Image, the standard Win32 executable 
format.

Trust provider - A part of the operating system that verifies whether or not 
a given image is trusted based on the certificates it contains.

Procedural Overview
-------------------
We will now walk through an example of how to sign an image.  Assume we are
going to sign an image named image.exe.

This procedure is meant to illustrate the steps involved in signing an image 
file.  Since creating a verifiable certificate assumes the existance of a 
fairly complex CA infrastructure, it is not possible to provide all of the 
pieces necessary for a fully trustworthy signature at this time.  In 
particular, there does not exist a "top-level" certifying authority, which 
would ultimately vouch for the integrity of the entire certificate chain.  
Since such a top-level authority is a necessary part of the signing and 
verification operations, the toolkit provided will create a pseudo top-level 
entity when necessary.  This will be called the root authority or root key.

The present tools therefore allow any user of this development release to
authorize themselves as a "Software Publisher" for test purposes and to
sign their code, allowing for extensive testing of the tools and code
used but not actually providing a secure infrastructure. In future releases,
the tools will require software publishers to obtain certificates from
companies whose function is to verify the identity of the publishers,
providing end-users with a high level of assurance about the authenticity
and origin of code that they recieve.

This sample root key will be used to generate an SPC (Software Publishing 
Certificate), which is used to actually sign image files.

[
note: before proceeding, verify that the underlying crypto-api is
functioning by running:
c:>init *   (will generate keys)
c:>api *    (will spew out SUCCESS messages until killed)
]

1) The first step is to run the MakeCert utility.  MakeCert will perform the 
following tasks:

-  Create the end-user's public/private keypair suitable for digital 
signatures, and associate the keypair with a friendly name.
 
-  Associate the new keypair with an X.500 Distinguished Name, and
 
-  Create an X.509 certificate signed by the root key that binds your name to 
the public part of the newly created keypair.

A typical invocation of MakeCert is as follows:

c:\>makecert -u:MyKey -n:CN=MySoftwareCompany Cert.cer

Cert.crt now contains an X.509 certificate that binds your newly created key 
with your name.  This certificate is itself signed by the example root key 
described above.

A public key/private key pair will be generated and assigned the name
specified in the "-u" switch, or if such a key already exists, it will
be re-used.

Note that the name must be of the form "CN=[name-string]", as required by
the ITU x.509 standard.

2) The next step is to wrap the X.509 certificate created in step 1 into a 
PKCS 7 signed-data object.  PKCS 7 objects are commonly used as "carriers" for 
X.509 certificates, because it is possible to put several X.509 certificates 
in a single PKCS 7 object.

In addition to the users's certificate, the root certificate will also be 
inserted into the PKCS 7 object.  This will allow passing around the entire 
certificate chain in a single container.

Do this with the Cert2SPC utility, as follows:

c:\>Cert2SPC Root.cer Cert.cer Cert.spc

Cert.spc now contains the Software Publishing Certificate in the correct 
format.

3) The next step is to use the certificate just created to sign an actual 
image file.  Do this with the SignCode tool.  It takes as input the Cert.spc 
file created in step 2, the name of the key pair created in step 1, and the 
name of the image file to sign.

SignCode will perform the following tasks:

-  Create a cryptographic digest of the passed image file.
 
-  Sign the digest with the passed private key information.
 
-  Extract the X.509 certificates from the passed Cert.spc file.
 
-  Create a new PKCS 7 signed-data object containing the serial number of the 
passed X.509 certificate and the signed digest information.
 
-  Embed the PKCS 7 object into the passed image file.

c:\>SignCode -prog image.exe -spc cert.spc -pvk MyKey

If SignCode is successful, image.exe will have a PKCS7 certificate embedded in 
it.  Verify this by running PeSigMgr.exe on the image:

c:\>PeSigMgr -l image.exe

  Certificate   0 Revision 256 Type    PKCS7

4) Now, check the validity of the image.  Do this with the ChkTrust utility.

c:\>ChkTrust image.exe

ChkTrust performs the following tasks:

-  Extract the PKCS 7 signed data object from the image.
 
-  Extract the X.509 certificates from the PKCS 7 object.
 
-  Compute a new cryptographic checksum of the image file and compare it with 
the signed checksum in the PKCS 7 object.
 
-  If the image checks out, validate that the signer's X.509 certificate 
points back to the root certificate, and that the root key used was correct.

If all this succeeds, the system has verified that the image has not been 
tampered with, and that whoever published this piece of software was 
authorized to do so by the root authority.

List of Required Files
----------------------
WINTRUST.DLL
DIGSIG.DLL
OSSAPI.DLL
OSSMEM.DLL
SOEDBER.DLL
MSVCRT20.DLL
MSVCRT40.DLL
MAKECERT.EXE
CERT2SPC.EXE
SIGNCODE.EXE
PESIGMGR.EXE
CHKTRUST.EXE
ROOT.CER
ROOT.PVK
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\pchealth\helpctr\rc\content\redist\list.txt ===
rcbuddy.cab,Windows Remote Control Buddy Channel,http://www.microsoft.com/windows
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\pchealth\helpctr\rc\content\interaction\raclientlayout.xml ===
<?xml version="1.0" encoding="UTF-8"?>
<HelpSession>
	<ApplyTo Language="MUI">
		<WindowSettings>
            <Title>Remote Assistance</Title>
			<Left>100</Left>
			<Top>100</Top>
			<Width>425</Width>
			<Height>227</Height>
			<Layout>Kiosk</Layout>
		</WindowSettings>
	</ApplyTo>
	<ApplyTo>
		<WindowSettings>
            <Title>Remote Assistance</Title>
			<Left>100</Left>
			<Top>100</Top>
			<Width>425</Width>
			<Height>227</Height>
			<Layout>Kiosk</Layout>
		</WindowSettings>
	</ApplyTo>
</HelpSession>
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\pchealth\helpctr\rc\content\interaction\rahelpeeacceptlayout.xml ===
<?xml version="1.0" encoding="UTF-8"?>
<HelpSession>
    <ApplyTo Language="MUI">
        <WindowSettings>
            <Title>Remote Assistance</Title>
            <Left>100</Left>
            <Top>100</Top>
            <Width>405</Width>
            <Height>178</Height>
            <Layout>Kiosk</Layout>
        </WindowSettings>
    </ApplyTo>
    <ApplyTo>
        <WindowSettings>
            <Title>Remote Assistance</Title>
            <Left>100</Left>
            <Top>100</Top>
            <Width>405</Width>
            <Height>178</Height>
            <Layout>Kiosk</Layout>
        </WindowSettings>
    </ApplyTo>
</HelpSession>
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\pchealth\helpctr\rc\content\redist\signcab.txt ===
***************************** PLEASE READ ********************************************

The uploadx.cab file built in this directory should be real-signed by http://prslab, and then,
checked into %inetroot%\pfsrv\OffLoad\Web\uploadx.cab. Detailed steps are listed below:

0.0 copy list.txt and rcbuddy.cab to ..\testsign
0.1 cd ..\testsign
0.2 run signfiles.bat - result should be 0 for successful signing 

1. go to http://prslab/codesign/tool.htm, click "Create Request", fill the form as below:

Job Description: Remote Control Channel for Whistler
Certificate type: Microsoft External Code Distribution
Virus Checker: Cheyenne (innoculan)
Virus Checker Engine Version: 4.0
Macro Virus Check:  Yes
Encryption: Not High Crypto
Operation System: 32-bit Windows
Product Version: <Whistler Version & build number>
Language: English

Fill in >= 2 MS full-time employees e-mail aliases

Y2k Compliant: TRUE

Add then submit two files: 
        rcBuddy.cab
        list.txt

2. http://prslab will send a notice once the bugrept.cab is real-signed.

3. in razzle window:
    cd /d %sdxroot%\admin\pchealth\helpctr\rc\bdyChannel\redist
    sd edit rcBuddy.cab
    copy <real-signed rcBuddy.cab> .
    sd submit rcBuddy.cab

The last step checks in a real-signed uploadx.cab.
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\pchealth\helpctr\rc\content\interaction\raura.xml ===
<?xml version="1.0" encoding="UTF-8"?>
<HelpSession>
	<ApplyTo Language="MUI">
		<WindowSettings Noresize="true">
			<Title>Remote Assistance</Title>
			<Left>100</Left>
			<Top>100</Top>
			<Width>410</Width>
			<Height>135</Height>
			<Layout>Kiosk</Layout>
		</WindowSettings>
	</ApplyTo>
	<ApplyTo>
		<WindowSettings Noresize="true">
  			<Title>Remote Assistance</Title>
			<Left>100</Left>
			<Top>100</Top>
			<Width>410</Width>
			<Height>135</Height>
			<Layout>Kiosk</Layout>
		</WindowSettings>
	</ApplyTo>
</HelpSession>
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\pchealth\helpctr\rc\content\interaction\raimlayout.xml ===
<?xml version="1.0" encoding="UTF-8"?>
<HelpSession>
	<ApplyTo Language="MUI">
		<WindowSettings Noresize="true">
         		<Title>Remote Assistance</Title>
			<Left>100</Left>
			<Top>100</Top>
			<Width>425</Width>
			<Height>145</Height>
			<Layout>Kiosk</Layout>
		</WindowSettings>
	</ApplyTo>
	<ApplyTo>
		<WindowSettings Noresize="true">
			<Title>Remote Assistance</Title>
			<Left>100</Left>
			<Top>100</Top>
			<Width>425</Width>
			<Height>145</Height>
			<Layout>Kiosk</Layout>
		</WindowSettings>
	</ApplyTo>
</HelpSession>
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\pchealth\helpctr\rc\content\interaction\ratoolbar.xml ===
<?xml version="1.0" encoding="UTF-8"?>
<TOOLBAR HEIGHT="30" ICONSIZE="24" AUTOSIZE="false">
	<BUTTON ID="btnTakeControl" NAME="btnTakeControl" ACCESSKEY="C" ENABLED="true" VISIBLE="true" TYPE="GENERIC">
		<IMAGE_NORMAL ID="imgTakeControl_1" NAME="imgTakeControl_1">TakeControl.bmp</IMAGE_NORMAL>
		<TEXT ID="btnTakeControl_1" NAME="btnTakeControl_1">Take &amp;Control</TEXT>
        <TOOLTIP ID="TTTakeControl_1" NAME="TTTakeControl_1">Take control of the remote computer </TOOLTIP>
	</BUTTON>

    <BUTTON ID="btnReleaseControl" NAME="btnReleaseControl" ACCESSKEY="C" ENABLED="true" VISIBLE="false" TYPE="GENERIC">
		<IMAGE_NORMAL ID="imgReleaseControl_1" NAME="imgReleaseControl_1">TakeControl.bmp</IMAGE_NORMAL>
		<TEXT ID="imgReleaseControl_1" NAME="imgReleaseControl_1">Release &amp;Control</TEXT>
        <TOOLTIP ID="TTReleaseControl_1" NAME="TTReleaseControl_1">Release control of the remote computer </TOOLTIP>
	</BUTTON>

    <BUTTON ID="btnSendFile_1" NAME="btnSendFile_1" ACCESSKEY="F" ENABLED="true" VISIBLE="true" TYPE="GENERIC">
		<IMAGE_NORMAL ID="imgSendFile" NAME="imgSendFile">../Common/SendFile.bmp</IMAGE_NORMAL>
		<TEXT ID="txtSendFile" NAME="txtSendFile">Send a &amp;File</TEXT>
        <TOOLTIP ID="TTSendFile" NAME="TTSendFile">Send a file or photo to the other person's computer</TOOLTIP>
	</BUTTON>

    <BUTTON ID="btnVoice" NAME="btnVoice" ACCESSKEY="T" ENABLED="true" VISIBLE="true" TYPE="GENERIC">
		<IMAGE_NORMAL ID="imgVoicePic" NAME="imgVoicePic">../Common/SendVoice.bmp</IMAGE_NORMAL>
		<TEXT ID="txtVoice" NAME="txtVoice">Start &amp;Talking</TEXT>
        <TOOLTIP ID="TTVoice" NAME="TTVoice">Establish an audio connection with the other person</TOOLTIP>
	</BUTTON>

    <BUTTON ID="btnVoiceStop" NAME="btnVoiceStop" ACCESSKEY="T" ENABLED="true" VISIBLE="false" TYPE="GENERIC">
		<IMAGE_NORMAL ID="imgVoicePic" NAME="imgVoicePic">../Common/SendVoice.bmp</IMAGE_NORMAL>
		<TEXT ID="txtVoiceStop" NAME="txtVoiceStop">Stop &amp;Talking</TEXT>
        <TOOLTIP ID="TTVoiceStop" NAME="TTVoiceStop">Release the audio connection with the other person</TOOLTIP>
	</BUTTON>

    <BUTTON ID="btnOptions" NAME="btnOptions" ACCESSKEY="S" ENABLED="true" VISIBLE="true" TYPE="GENERIC">
		<IMAGE_NORMAL ID="imgSettings" NAME="imgSettings">../Common/Options.bmp</IMAGE_NORMAL>
		<TEXT ID="txtSettings" NAME="txtSettings">&amp;Settings</TEXT>
        <TOOLTIP ID="TTSettings" NAME="TTSettings">Adjust your audio settings</TOOLTIP>
	</BUTTON>

    <BUTTON ID="btnQuit_1" NAME="btnQuit_1" ACCESSKEY="D" ENABLED="true" VISIBLE="true" TYPE="GENERIC">
		<IMAGE_NORMAL ID="imgQuit" NAME="imgQuit">../Common/Quit.bmp</IMAGE_NORMAL>
		<TEXT ID="txtDisconnect" NAME="txtDisconnect">&amp;Disconnect</TEXT>
        <TOOLTIP ID="TTDisconnect" NAME="TTDisconnect">End this Remote Assistance session</TOOLTIP>
	</BUTTON>


    <BUTTON ID="btnHelp" NAME="btnHelp" ACCESSKEY="H" ENABLED="true" VISIBLE="true" TYPE="GENERIC">
		<IMAGE_NORMAL ID="imgHelpCenter" NAME="imgHelpCenter">../Common/HelpCenter.bmp</IMAGE_NORMAL>
		<TEXT ID="txtHelp" NAME="txtHelp">&amp;Help</TEXT>
        <TOOLTIP ID="TTHelp" NAME="TTHelp">Get help on using Remote Assistance</TOOLTIP>
	</BUTTON>

</TOOLBAR>
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\pchealth\helpctr\rc\content\redist\rcbuddy.xml ===
<?xml version="1.0" ?>
<SAFConfig>
    <LocalizationComment>ProductDescription should be localized</LocalizationComment>
	<EntryURL>hcp://CN=Microsoft%20Corporation,L=Redmond,S=Washington,C=US/Remote%20Assistance/Escalation/Common/rcscreen1.htm</EntryURL>
	<ProductID>Microsoft Remote Assistance</ProductID>
        <ProductName>Get Remote Assistance</ProductName>
	<ProductDescription>Invite someone to connect to your computer.</ProductDescription>
	<CompanyName>Microsoft Corporation</CompanyName>
	<VendorIcon>hcp://CN=Microsoft%20Corporation,L=Redmond,S=Washington,C=US/logo.gif</VendorIcon>
</SAFConfig>
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\pchealth\helpctr\rc\web\brz\config.1046.xml ===
<?xml version="1.0" encoding="UTF-8"?>
<CONFIG_DATA SERVER_URL="http://go.microsoft.com/fwlink/?linkid=272&amp;clcid=0x409" STANDARD_SEARCH="0" SEARCHENGINE_OWNER="Microsoft Corporation" REMOTECONFIG_SERVER_URL="http://go.microsoft.com/fwlink/?linkid=277&amp;clcid=0x409" UPDATE_FREQUENCY="7" xmlns="urn:schemas-microsoft-com/pss/SDXML/searchprodlist">
	<SEARCHENGINE_NAME>Microsoft Knowledge Base</SEARCHENGINE_NAME>
	<SEARCHENGINE_DESCRIPTION>Exibe artigos ou tópicos relevantes do site da Knowledge Base da Microsoft na Web. A Knowledge Base é uma fonte de informações de suporte técnico e ferramentas de auto-ajuda para os produtos Microsoft.</SEARCHENGINE_DESCRIPTION>
	<PARAM_ITEM NAME="Product" TYPE="PARAM_LIST" VISIBLE="true">
		<DESCRIPTION>Selecione um produto ou tópico</DESCRIPTION>
	</PARAM_ITEM>
	<PARAM_ITEM NAME="KeywordType" TYPE="PARAM_LIST" VISIBLE="true">
		<DESCRIPTION>Procurar:</DESCRIPTION>
		<PARAM_VALUE VALUE="ALL" DEFAULT="true">
			<DISPLAYSTRING>Todas as palavras</DISPLAYSTRING>
		</PARAM_VALUE>
		<PARAM_VALUE VALUE="ANY">
			<DISPLAYSTRING>Qualquer palavra</DISPLAYSTRING>
		</PARAM_VALUE>
		<PARAM_VALUE VALUE="PHRASE">
			<DISPLAYSTRING>A frase exata</DISPLAYSTRING>
		</PARAM_VALUE>
		<PARAM_VALUE VALUE="BOOLEAN">
			<DISPLAYSTRING>A frase booleana</DISPLAYSTRING>
		</PARAM_VALUE>
	</PARAM_ITEM>
	<PARAM_ITEM NAME="Titles" TYPE="PARAM_BOOL" VISIBLE="true">
		<DESCRIPTION>Pesquisar somente no título</DESCRIPTION>
		<PARAM_VALUE VALUE="false" DEFAULT="true"/>
	</PARAM_ITEM>
</CONFIG_DATA>
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\pchealth\helpctr\rc\web\chs\config.2052.xml ===
﻿<?xml version="1.0" encoding="UTF-8"?>
<CONFIG_DATA SERVER_URL="http://go.microsoft.com/fwlink/?linkid=272&amp;clcid=0x409" STANDARD_SEARCH="0" SEARCHENGINE_OWNER="Microsoft Corporation" REMOTECONFIG_SERVER_URL="http://go.microsoft.com/fwlink/?linkid=277&amp;clcid=0x409" UPDATE_FREQUENCY="7" xmlns="urn:schemas-microsoft-com/pss/SDXML/searchprodlist">
	<SEARCHENGINE_NAME>Microsoft Knowledge Base</SEARCHENGINE_NAME>
	<SEARCHENGINE_DESCRIPTION>从 Microsoft Knowledge Base 网站显示有关主题或文章。Knowledge Base 提供技术支持信息和 Microsoft 产品自我支持工具。</SEARCHENGINE_DESCRIPTION>
	<PARAM_ITEM NAME="Product" TYPE="PARAM_LIST" VISIBLE="true">
		<DESCRIPTION>选择产品或主题</DESCRIPTION>
	</PARAM_ITEM>
	<PARAM_ITEM NAME="KeywordType" TYPE="PARAM_LIST" VISIBLE="true">
		<DESCRIPTION>搜索:</DESCRIPTION>
		<PARAM_VALUE VALUE="ALL" DEFAULT="true">
			<DISPLAYSTRING>所有字</DISPLAYSTRING>
		</PARAM_VALUE>
		<PARAM_VALUE VALUE="ANY">
			<DISPLAYSTRING>任何字</DISPLAYSTRING>
		</PARAM_VALUE>
		<PARAM_VALUE VALUE="PHRASE">
			<DISPLAYSTRING>完全匹配的短语</DISPLAYSTRING>
		</PARAM_VALUE>
		<PARAM_VALUE VALUE="BOOLEAN">
			<DISPLAYSTRING>逻辑短语</DISPLAYSTRING>
		</PARAM_VALUE>
	</PARAM_ITEM>
	<PARAM_ITEM NAME="Titles" TYPE="PARAM_BOOL" VISIBLE="true">
		<DESCRIPTION>只在标题中搜索</DESCRIPTION>
		<PARAM_VALUE VALUE="false" DEFAULT="true"/>
	</PARAM_ITEM>
</CONFIG_DATA>
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\pchealth\helpctr\rc\web\cht\config.1028.xml ===
﻿<?xml version="1.0" encoding="UTF-8"?>
<CONFIG_DATA SERVER_URL="http://go.microsoft.com/fwlink/?linkid=272&amp;clcid=0x409" STANDARD_SEARCH="0" SEARCHENGINE_OWNER="Microsoft Corporation" REMOTECONFIG_SERVER_URL="http://go.microsoft.com/fwlink/?linkid=277&amp;clcid=0x409" UPDATE_FREQUENCY="7" xmlns="urn:schemas-microsoft-com/pss/SDXML/searchprodlist">
   <SEARCHENGINE_NAME>Microsoft Knowledge Base</SEARCHENGINE_NAME>
   <SEARCHENGINE_DESCRIPTION>顯示 Microsoft Knowledge Base 網站的相關主題或文章。Knowledge Base 是技術支援資訊的資源，也是 Microsoft 產品的自助工具。</SEARCHENGINE_DESCRIPTION>


	<PARAM_ITEM NAME="Product" TYPE="PARAM_LIST" VISIBLE="true">
		<DESCRIPTION>選擇一個產品或主題</DESCRIPTION>
	</PARAM_ITEM>

	<PARAM_ITEM NAME="KeywordType" TYPE="PARAM_LIST" VISIBLE="true">
      		<DESCRIPTION>搜尋:</DESCRIPTION>
      		<PARAM_VALUE VALUE="ALL" DEFAULT="true">
        		 <DISPLAYSTRING>所有字</DISPLAYSTRING>
      		</PARAM_VALUE>
      		<PARAM_VALUE VALUE="ANY" >
         		<DISPLAYSTRING>任何字</DISPLAYSTRING>
      		</PARAM_VALUE>
      		<PARAM_VALUE VALUE="PHRASE">
         		<DISPLAYSTRING>精確符合的字詞</DISPLAYSTRING>
      		</PARAM_VALUE>
      		<PARAM_VALUE VALUE="BOOLEAN">
        		<DISPLAYSTRING>布林字詞</DISPLAYSTRING>
      		</PARAM_VALUE>
   	</PARAM_ITEM>

	<PARAM_ITEM NAME="Titles" TYPE="PARAM_BOOL" VISIBLE="true">
      		<DESCRIPTION>只在標題中搜尋</DESCRIPTION>
      		<PARAM_VALUE VALUE="false" DEFAULT="true"/>
   	</PARAM_ITEM>

</CONFIG_DATA>
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\pchealth\helpctr\rc\web\cze\config.1029.xml ===
<?xml version="1.0" encoding="UTF-8"?>
<CONFIG_DATA SERVER_URL="http://go.microsoft.com/fwlink/?linkid=272&amp;clcid=0x409" STANDARD_SEARCH="0" SEARCHENGINE_OWNER="Microsoft Corporation" REMOTECONFIG_SERVER_URL="http://go.microsoft.com/fwlink/?linkid=277&amp;clcid=0x409" UPDATE_FREQUENCY="7" xmlns="urn:schemas-microsoft-com/pss/SDXML/searchprodlist">
	<SEARCHENGINE_NAME>Microsoft Knowledge Base</SEARCHENGINE_NAME>
	<SEARCHENGINE_DESCRIPTION>Zobrazí relevantní témata nebo články z webových stránek databáze Microsoft Knowledge Base. Databáze Knowledge Base je zdroj informací odborné pomoci a nástrojů vlastní pomoci pro produkty společnosti Microsoft.</SEARCHENGINE_DESCRIPTION>
	<PARAM_ITEM NAME="Product" TYPE="PARAM_LIST" VISIBLE="true">
		<DESCRIPTION>Vyberte produkt nebo téma</DESCRIPTION>
	</PARAM_ITEM>
	<PARAM_ITEM NAME="KeywordType" TYPE="PARAM_LIST" VISIBLE="true">
		<DESCRIPTION>Vyhledat:</DESCRIPTION>
		<PARAM_VALUE VALUE="ALL" DEFAULT="true">
			<DISPLAYSTRING>Všechna slova</DISPLAYSTRING>
		</PARAM_VALUE>
		<PARAM_VALUE VALUE="ANY">
			<DISPLAYSTRING>Libovolná slova</DISPLAYSTRING>
		</PARAM_VALUE>
		<PARAM_VALUE VALUE="PHRASE">
			<DISPLAYSTRING>Přesný výraz</DISPLAYSTRING>
		</PARAM_VALUE>
		<PARAM_VALUE VALUE="BOOLEAN">
			<DISPLAYSTRING>Logický výraz</DISPLAYSTRING>
		</PARAM_VALUE>
	</PARAM_ITEM>
	<PARAM_ITEM NAME="Titles" TYPE="PARAM_BOOL" VISIBLE="true">
		<DESCRIPTION>Hledat pouze v názvech</DESCRIPTION>
		<PARAM_VALUE VALUE="false" DEFAULT="true"/>
	</PARAM_ITEM>
</CONFIG_DATA>
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\pchealth\helpctr\rc\web\dan\config.1030.xml ===
<?xml version="1.0" encoding="UTF-8"?>
<CONFIG_DATA SERVER_URL="http://go.microsoft.com/fwlink/?linkid=272&amp;clcid=0x409" STANDARD_SEARCH="0" SEARCHENGINE_OWNER="Microsoft Corporation" REMOTECONFIG_SERVER_URL="http://go.microsoft.com/fwlink/?linkid=277&amp;clcid=0x409" UPDATE_FREQUENCY="7" xmlns="urn:schemas-microsoft-com/pss/SDXML/searchprodlist">
	<SEARCHENGINE_NAME>Microsoft Knowledge Base</SEARCHENGINE_NAME>
	<SEARCHENGINE_DESCRIPTION>Viser relevante emner eller artikler fra webstedet Microsoft Knowledge Base. Microsoft Knowledge Base er en kilde til oplysninger om teknisk support og værktøjer, som du kan bruge til at løse problemet med, til Microsoft-produkter.</SEARCHENGINE_DESCRIPTION>
	<PARAM_ITEM NAME="Product" TYPE="PARAM_LIST" VISIBLE="true">
		<DESCRIPTION>Vælg et produkt eller emne</DESCRIPTION>
	</PARAM_ITEM>
	<PARAM_ITEM NAME="KeywordType" TYPE="PARAM_LIST" VISIBLE="true">
		<DESCRIPTION>Søg efter:</DESCRIPTION>
		<PARAM_VALUE VALUE="ALL" DEFAULT="true">
			<DISPLAYSTRING>Alle ordene</DISPLAYSTRING>
		</PARAM_VALUE>
		<PARAM_VALUE VALUE="ANY">
			<DISPLAYSTRING>Ethvert af ordene</DISPLAYSTRING>
		</PARAM_VALUE>
		<PARAM_VALUE VALUE="PHRASE">
			<DISPLAYSTRING>Den nøjagtige sætning</DISPLAYSTRING>
		</PARAM_VALUE>
		<PARAM_VALUE VALUE="BOOLEAN">
			<DISPLAYSTRING>Den booleske sætning</DISPLAYSTRING>
		</PARAM_VALUE>
	</PARAM_ITEM>
	<PARAM_ITEM NAME="Titles" TYPE="PARAM_BOOL" VISIBLE="true">
		<DESCRIPTION>Søg kun i titlen</DESCRIPTION>
		<PARAM_VALUE VALUE="false" DEFAULT="true"/>
	</PARAM_ITEM>
</CONFIG_DATA>
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\pchealth\helpctr\rc\web\dut\config.1043.xml ===
<?xml version="1.0" encoding="UTF-8"?>
<CONFIG_DATA SERVER_URL="http://go.microsoft.com/fwlink/?linkid=272&amp;clcid=0x409" STANDARD_SEARCH="0" SEARCHENGINE_OWNER="Microsoft Corporation" REMOTECONFIG_SERVER_URL="http://go.microsoft.com/fwlink/?linkid=277&amp;clcid=0x409" UPDATE_FREQUENCY="7" xmlns="urn:schemas-microsoft-com/pss/SDXML/searchprodlist">
	<SEARCHENGINE_NAME>Microsoft Knowledge Base</SEARCHENGINE_NAME>
	<SEARCHENGINE_DESCRIPTION>Hiermee worden relevante onderwerpen of artikelen van de Microsoft Knowledge Base-website weergegeven. De Knowledge Base is een bron van gegevens voor technische ondersteuning en hulpprogramma's voor Microsoft-producten.</SEARCHENGINE_DESCRIPTION>
	<PARAM_ITEM NAME="Product" TYPE="PARAM_LIST" VISIBLE="true">
		<DESCRIPTION>Kies een product of onderwerp</DESCRIPTION>
	</PARAM_ITEM>
	<PARAM_ITEM NAME="KeywordType" TYPE="PARAM_LIST" VISIBLE="true">
		<DESCRIPTION>Zoeken naar:</DESCRIPTION>
		<PARAM_VALUE VALUE="ALL" DEFAULT="true">
			<DISPLAYSTRING>Alle woorden</DISPLAYSTRING>
		</PARAM_VALUE>
		<PARAM_VALUE VALUE="ANY">
			<DISPLAYSTRING>Een van de woorden</DISPLAYSTRING>
		</PARAM_VALUE>
		<PARAM_VALUE VALUE="PHRASE">
			<DISPLAYSTRING>De exacte uitdrukking</DISPLAYSTRING>
		</PARAM_VALUE>
		<PARAM_VALUE VALUE="BOOLEAN">
			<DISPLAYSTRING>De Boolese uitdrukking</DISPLAYSTRING>
		</PARAM_VALUE>
	</PARAM_ITEM>
	<PARAM_ITEM NAME="Titles" TYPE="PARAM_BOOL" VISIBLE="true">
		<DESCRIPTION>Alleen in titel zoeken</DESCRIPTION>
		<PARAM_VALUE VALUE="false" DEFAULT="true"/>
	</PARAM_ITEM>
</CONFIG_DATA>
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\pchealth\helpctr\rc\web\fin\config.1035.xml ===
<?xml version="1.0" encoding="UTF-8"?>
<CONFIG_DATA SERVER_URL="http://go.microsoft.com/fwlink/?linkid=272&amp;clcid=0x409" STANDARD_SEARCH="0" SEARCHENGINE_OWNER="Microsoft Corporation" REMOTECONFIG_SERVER_URL="http://go.microsoft.com/fwlink/?linkid=277&amp;clcid=0x409" UPDATE_FREQUENCY="7" xmlns="urn:schemas-microsoft-com/pss/SDXML/searchprodlist">
	<SEARCHENGINE_NAME>Microsoft Knowledge Base</SEARCHENGINE_NAME>
	<SEARCHENGINE_DESCRIPTION>Näyttää soveltuvia aiheita ja artikkeleja Microsoftin Knowledge Base -sivustosta. Kyseessä on teknisten tukitietojen lähde.</SEARCHENGINE_DESCRIPTION>
	<PARAM_ITEM NAME="Product" TYPE="PARAM_LIST" VISIBLE="true">
		<DESCRIPTION>Valitse tuote tai aihe</DESCRIPTION>
	</PARAM_ITEM>
	<PARAM_ITEM NAME="KeywordType" TYPE="PARAM_LIST" VISIBLE="true">
		<DESCRIPTION>Etsittävä:</DESCRIPTION>
		<PARAM_VALUE VALUE="ALL" DEFAULT="true">
			<DISPLAYSTRING>Kaikki sanat</DISPLAYSTRING>
		</PARAM_VALUE>
		<PARAM_VALUE VALUE="ANY">
			<DISPLAYSTRING>Mikä tahansa sana</DISPLAYSTRING>
		</PARAM_VALUE>
		<PARAM_VALUE VALUE="PHRASE">
			<DISPLAYSTRING>Koko lause</DISPLAYSTRING>
		</PARAM_VALUE>
		<PARAM_VALUE VALUE="BOOLEAN">
			<DISPLAYSTRING>Loogiset operaattorit</DISPLAYSTRING>
		</PARAM_VALUE>
	</PARAM_ITEM>
	<PARAM_ITEM NAME="Titles" TYPE="PARAM_BOOL" VISIBLE="true">
		<DESCRIPTION>Etsi vain otsikoista</DESCRIPTION>
		<PARAM_VALUE VALUE="false" DEFAULT="true"/>
	</PARAM_ITEM>
</CONFIG_DATA>
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\pchealth\helpctr\rc\web\frn\config.1036.xml ===
<?xml version="1.0" encoding="UTF-8"?>
<CONFIG_DATA SERVER_URL="http://go.microsoft.com/fwlink/?linkid=272&amp;clcid=0x409" STANDARD_SEARCH="0" SEARCHENGINE_OWNER="Microsoft Corporation" REMOTECONFIG_SERVER_URL="http://go.microsoft.com/fwlink/?linkid=277&amp;clcid=0x409" UPDATE_FREQUENCY="7" xmlns="urn:schemas-microsoft-com/pss/SDXML/searchprodlist">
	<SEARCHENGINE_NAME>Base de connaissances Microsoft</SEARCHENGINE_NAME>
	<SEARCHENGINE_DESCRIPTION>Affiche les rubriques ou les articles appropriés à partir du site Web de la base de connaissances Microsoft. La base de connaissances est une source d'information de support technique et d'outils pour s'aider soi-même sur les produits Microsoft.</SEARCHENGINE_DESCRIPTION>
	<PARAM_ITEM NAME="Product" TYPE="PARAM_LIST" VISIBLE="true">
		<DESCRIPTION>Sélectionnez un produit ou une rubrique</DESCRIPTION>
	</PARAM_ITEM>
	<PARAM_ITEM NAME="KeywordType" TYPE="PARAM_LIST" VISIBLE="true">
		<DESCRIPTION>Rechercher :</DESCRIPTION>
		<PARAM_VALUE VALUE="ALL" DEFAULT="true">
			<DISPLAYSTRING>Tous les mots</DISPLAYSTRING>
		</PARAM_VALUE>
		<PARAM_VALUE VALUE="ANY">
			<DISPLAYSTRING>N'importe quel mot</DISPLAYSTRING>
		</PARAM_VALUE>
		<PARAM_VALUE VALUE="PHRASE">
			<DISPLAYSTRING>La phrase exacte</DISPLAYSTRING>
		</PARAM_VALUE>
		<PARAM_VALUE VALUE="BOOLEAN">
			<DISPLAYSTRING>La phrase booléenne</DISPLAYSTRING>
		</PARAM_VALUE>
	</PARAM_ITEM>
	<PARAM_ITEM NAME="Titles" TYPE="PARAM_BOOL" VISIBLE="true">
		<DESCRIPTION>Rechercher dans Titre uniquement</DESCRIPTION>
		<PARAM_VALUE VALUE="false" DEFAULT="true"/>
	</PARAM_ITEM>
</CONFIG_DATA>
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\pchealth\helpctr\rc\web\ger\config.1031.xml ===
<?xml version="1.0" encoding="UTF-8"?>
<CONFIG_DATA SERVER_URL="http://go.microsoft.com/fwlink/?linkid=272&amp;clcid=0x409" STANDARD_SEARCH="0" SEARCHENGINE_OWNER="Microsoft Corporation" REMOTECONFIG_SERVER_URL="http://go.microsoft.com/fwlink/?linkid=277&amp;clcid=0x409" UPDATE_FREQUENCY="7" xmlns="urn:schemas-microsoft-com/pss/SDXML/searchprodlist">
	<SEARCHENGINE_NAME>Microsoft Knowledge Base</SEARCHENGINE_NAME>
	<SEARCHENGINE_DESCRIPTION>Zeigt relevante Themen und Artikel von der Microsoft Knowledge Base-Website an. Die Knowledge Base enthält technische Supportinformationen und Selbsthilfetools für Microsoft-Produkte.</SEARCHENGINE_DESCRIPTION>
	<PARAM_ITEM NAME="Product" TYPE="PARAM_LIST" VISIBLE="true">
		<DESCRIPTION>Wählen Sie ein Produkt oder Thema</DESCRIPTION>
	</PARAM_ITEM>
	<PARAM_ITEM NAME="KeywordType" TYPE="PARAM_LIST" VISIBLE="true">
		<DESCRIPTION>Suchen nach:</DESCRIPTION>
		<PARAM_VALUE VALUE="ALL" DEFAULT="true">
			<DISPLAYSTRING>Allen Wörtern</DISPLAYSTRING>
		</PARAM_VALUE>
		<PARAM_VALUE VALUE="ANY">
			<DISPLAYSTRING>Beliebigen Wörtern</DISPLAYSTRING>
		</PARAM_VALUE>
		<PARAM_VALUE VALUE="PHRASE">
			<DISPLAYSTRING>Exaktem Ausdruck</DISPLAYSTRING>
		</PARAM_VALUE>
		<PARAM_VALUE VALUE="BOOLEAN">
			<DISPLAYSTRING>Booleschem Ausdruck</DISPLAYSTRING>
		</PARAM_VALUE>
	</PARAM_ITEM>
	<PARAM_ITEM NAME="Titles" TYPE="PARAM_BOOL" VISIBLE="true">
		<DESCRIPTION>Nur Überschriften durchsuchen</DESCRIPTION>
		<PARAM_VALUE VALUE="false" DEFAULT="true"/>
	</PARAM_ITEM>
</CONFIG_DATA>
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\pchealth\helpctr\rc\web\grk\config.1032.xml ===
<?xml version="1.0" encoding="UTF-8"?>
<CONFIG_DATA SERVER_URL="http://go.microsoft.com/fwlink/?linkid=272&amp;clcid=0x409" STANDARD_SEARCH="0" SEARCHENGINE_OWNER="Microsoft Corporation" REMOTECONFIG_SERVER_URL="http://go.microsoft.com/fwlink/?linkid=277&amp;clcid=0x409" UPDATE_FREQUENCY="7" xmlns="urn:schemas-microsoft-com/pss/SDXML/searchprodlist">
	<SEARCHENGINE_NAME>Microsoft Knowledge Base</SEARCHENGINE_NAME>
	<SEARCHENGINE_DESCRIPTION>Εμφανίζει σχετικά θέματα ή άρθρα από την τοποθεσία web Microsoft Knowledge Base. H Knowledge Base είναι μια πηγή πληροφοριών τεχνικής υποστήριξης και εργαλείων που μπορείτε να χρησιμοποιήσετε μόνοι σας για προϊόντα της Microsoft.</SEARCHENGINE_DESCRIPTION>
	<PARAM_ITEM NAME="Product" TYPE="PARAM_LIST" VISIBLE="true">
		<DESCRIPTION>Επιλέξτε ένα προϊόν ή θέμα</DESCRIPTION>
	</PARAM_ITEM>
	<PARAM_ITEM NAME="KeywordType" TYPE="PARAM_LIST" VISIBLE="true">
		<DESCRIPTION>Αναζήτηση του:</DESCRIPTION>
		<PARAM_VALUE VALUE="ALL" DEFAULT="true">
			<DISPLAYSTRING>Όλες οι λέξεις</DISPLAYSTRING>
		</PARAM_VALUE>
		<PARAM_VALUE VALUE="ANY">
			<DISPLAYSTRING>Οποιαδήποτε λέξη</DISPLAYSTRING>
		</PARAM_VALUE>
		<PARAM_VALUE VALUE="PHRASE">
			<DISPLAYSTRING>Η φράση ακριβώς</DISPLAYSTRING>
		</PARAM_VALUE>
		<PARAM_VALUE VALUE="BOOLEAN">
			<DISPLAYSTRING>Η Boolean φράση</DISPLAYSTRING>
		</PARAM_VALUE>
	</PARAM_ITEM>
	<PARAM_ITEM NAME="Titles" TYPE="PARAM_BOOL" VISIBLE="true">
		<DESCRIPTION>Αναζήτηση μόνο στον τίτλο</DESCRIPTION>
		<PARAM_VALUE VALUE="false" DEFAULT="true"/>
	</PARAM_ITEM>
</CONFIG_DATA>
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\pchealth\helpctr\rc\web\hun\config.1038.xml ===
<?xml version="1.0" encoding="UTF-8"?>
<CONFIG_DATA SERVER_URL="http://go.microsoft.com/fwlink/?linkid=272&amp;clcid=0x409" STANDARD_SEARCH="0" SEARCHENGINE_OWNER="Microsoft Corporation" REMOTECONFIG_SERVER_URL="http://go.microsoft.com/fwlink/?linkid=277&amp;clcid=0x409" UPDATE_FREQUENCY="7" xmlns="urn:schemas-microsoft-com/pss/SDXML/searchprodlist">
	<SEARCHENGINE_NAME>Microsoft Knowledge Base</SEARCHENGINE_NAME>
	<SEARCHENGINE_DESCRIPTION>A Microsoft Knowledge Base vonatkozó témaköreinek vagy cikkeinek megjelenítése. A Knowledge Base a Microsoft-termékekkel kapcsolatos technikai tanácsadási információk és önsegítő eszközök forrása.</SEARCHENGINE_DESCRIPTION>
	<PARAM_ITEM NAME="Product" TYPE="PARAM_LIST" VISIBLE="true">
		<DESCRIPTION>Válasszon terméket vagy témát</DESCRIPTION>
	</PARAM_ITEM>
	<PARAM_ITEM NAME="KeywordType" TYPE="PARAM_LIST" VISIBLE="true">
		<DESCRIPTION>Keresés:</DESCRIPTION>
		<PARAM_VALUE VALUE="ALL" DEFAULT="true">
			<DISPLAYSTRING>Minden szó</DISPLAYSTRING>
		</PARAM_VALUE>
		<PARAM_VALUE VALUE="ANY">
			<DISPLAYSTRING>Bármely szó</DISPLAYSTRING>
		</PARAM_VALUE>
		<PARAM_VALUE VALUE="PHRASE">
			<DISPLAYSTRING>Teljes egyezés</DISPLAYSTRING>
		</PARAM_VALUE>
		<PARAM_VALUE VALUE="BOOLEAN">
			<DISPLAYSTRING>Logikai kifejezés</DISPLAYSTRING>
		</PARAM_VALUE>
	</PARAM_ITEM>
	<PARAM_ITEM NAME="Titles" TYPE="PARAM_BOOL" VISIBLE="true">
		<DESCRIPTION>Keresés csak a címekben</DESCRIPTION>
		<PARAM_VALUE VALUE="false" DEFAULT="true"/>
	</PARAM_ITEM>
</CONFIG_DATA>
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\pchealth\helpctr\rc\web\itn\config.1040.xml ===
<?xml version="1.0" encoding="UTF-8"?>
<CONFIG_DATA SERVER_URL="http://go.microsoft.com/fwlink/?linkid=272&amp;clcid=0x409" STANDARD_SEARCH="0" SEARCHENGINE_OWNER="Microsoft Corporation" REMOTECONFIG_SERVER_URL="http://go.microsoft.com/fwlink/?linkid=277&amp;clcid=0x409" UPDATE_FREQUENCY="7" xmlns="urn:schemas-microsoft-com/pss/SDXML/searchprodlist">
	<SEARCHENGINE_NAME>Microsoft Knowledge Base</SEARCHENGINE_NAME>
	<SEARCHENGINE_DESCRIPTION>Visualizza gli argomenti e gli articoli pertinenti disponibili sul sito Web di Microsoft Knowledge Base. La Knowledge Base è una fonte di notizie di carattere tecnico, strumenti e utilità per i prodotti Microsoft.</SEARCHENGINE_DESCRIPTION>
	<PARAM_ITEM NAME="Product" TYPE="PARAM_LIST" VISIBLE="true">
		<DESCRIPTION>Selezionare un prodotto o un argomento</DESCRIPTION>
	</PARAM_ITEM>
	<PARAM_ITEM NAME="KeywordType" TYPE="PARAM_LIST" VISIBLE="true">
		<DESCRIPTION>Cerca:</DESCRIPTION>
		<PARAM_VALUE VALUE="ALL" DEFAULT="true">
			<DISPLAYSTRING>Tutte le parole</DISPLAYSTRING>
		</PARAM_VALUE>
		<PARAM_VALUE VALUE="ANY">
			<DISPLAYSTRING>Una delle parole</DISPLAYSTRING>
		</PARAM_VALUE>
		<PARAM_VALUE VALUE="PHRASE">
			<DISPLAYSTRING>La frase esatta</DISPLAYSTRING>
		</PARAM_VALUE>
		<PARAM_VALUE VALUE="BOOLEAN">
			<DISPLAYSTRING>La frase booleana</DISPLAYSTRING>
		</PARAM_VALUE>
	</PARAM_ITEM>
	<PARAM_ITEM NAME="Titles" TYPE="PARAM_BOOL" VISIBLE="true">
		<DESCRIPTION>Cerca solo nel titolo</DESCRIPTION>
		<PARAM_VALUE VALUE="false" DEFAULT="true"/>
	</PARAM_ITEM>
</CONFIG_DATA>
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\pchealth\helpctr\rc\web\jpn\config.1041.xml ===
<?xml version="1.0" encoding="UTF-8"?>
<CONFIG_DATA SERVER_URL="http://go.microsoft.com/fwlink/?linkid=272&amp;clcid=0x409" STANDARD_SEARCH="0" SEARCHENGINE_OWNER="Microsoft Corporation" REMOTECONFIG_SERVER_URL="http://go.microsoft.com/fwlink/?linkid=277&amp;clcid=0x409" UPDATE_FREQUENCY="7" xmlns="urn:schemas-microsoft-com/pss/SDXML/searchprodlist">
	<SEARCHENGINE_NAME>Microsoft サポート技術情報 (KB)</SEARCHENGINE_NAME>
	<SEARCHENGINE_DESCRIPTION>Microsoft サポート技術情報 (KB) Web サイトから関連のあるトピックや記事を表示します。サポート技術情報は、Microsoft の製品のテクニカル サポート情報およびセルフ ヘルプ ツールの情報源です。</SEARCHENGINE_DESCRIPTION>
	<PARAM_ITEM NAME="Product" TYPE="PARAM_LIST" VISIBLE="true">
		<DESCRIPTION>製品またはトピックの選択</DESCRIPTION>
	</PARAM_ITEM>
	<PARAM_ITEM NAME="KeywordType" TYPE="PARAM_LIST" VISIBLE="true">
		<DESCRIPTION>検索方法:</DESCRIPTION>
		<PARAM_VALUE VALUE="ALL" DEFAULT="true">
			<DISPLAYSTRING>すべての単語を含む検索</DISPLAYSTRING>
		</PARAM_VALUE>
		<PARAM_VALUE VALUE="ANY">
			<DISPLAYSTRING>1 つ以上の単語を含む検索</DISPLAYSTRING>
		</PARAM_VALUE>
		<PARAM_VALUE VALUE="PHRASE">
			<DISPLAYSTRING>語句検索</DISPLAYSTRING>
		</PARAM_VALUE>
		<PARAM_VALUE VALUE="BOOLEAN">
			<DISPLAYSTRING>拡張検索 (演算子使用)</DISPLAYSTRING>
		</PARAM_VALUE>
	</PARAM_ITEM>
	<PARAM_ITEM NAME="Titles" TYPE="PARAM_BOOL" VISIBLE="true">
		<DESCRIPTION>タイトルのみ検索する</DESCRIPTION>
		<PARAM_VALUE VALUE="false" DEFAULT="true"/>
	</PARAM_ITEM>
</CONFIG_DATA>
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\pchealth\helpctr\rc\web\kor\config.1042.xml ===
<?xml version="1.0" encoding="UTF-8"?>
<CONFIG_DATA SERVER_URL="http://go.microsoft.com/fwlink/?linkid=272&amp;clcid=0x409" STANDARD_SEARCH="0" SEARCHENGINE_OWNER="Microsoft Corporation" REMOTECONFIG_SERVER_URL="http://go.microsoft.com/fwlink/?linkid=277&amp;clcid=0x409" UPDATE_FREQUENCY="7" xmlns="urn:schemas-microsoft-com/pss/SDXML/searchprodlist">
	<SEARCHENGINE_NAME>Microsoft Knowledge Base</SEARCHENGINE_NAME>
	<SEARCHENGINE_DESCRIPTION>Microsoft Knowledge Base 웹 사이트에서 관련된 항목이나 문서를 표시합니다. Microsoft Knowledge Base는 Microsoft 제품에 대한 기술 지원 정보와 자가 진단 도구의 유용한 자료입니다.</SEARCHENGINE_DESCRIPTION>
	<PARAM_ITEM NAME="Product" TYPE="PARAM_LIST" VISIBLE="true">
		<DESCRIPTION>제품이나 항목을 선택하십시오.</DESCRIPTION>
	</PARAM_ITEM>
	<PARAM_ITEM NAME="KeywordType" TYPE="PARAM_LIST" VISIBLE="true">
		<DESCRIPTION>검색 대상:</DESCRIPTION>
		<PARAM_VALUE VALUE="ALL" DEFAULT="true">
			<DISPLAYSTRING>단어 단위로 찾기 (AND)</DISPLAYSTRING>
		</PARAM_VALUE>
		<PARAM_VALUE VALUE="ANY">
			<DISPLAYSTRING>단어 단위로 찾기 (OR)</DISPLAYSTRING>
		</PARAM_VALUE>
		<PARAM_VALUE VALUE="PHRASE">
			<DISPLAYSTRING>정확하게 일치하는 구</DISPLAYSTRING>
		</PARAM_VALUE>
		<PARAM_VALUE VALUE="BOOLEAN">
			<DISPLAYSTRING>부울 구</DISPLAYSTRING>
		</PARAM_VALUE>
	</PARAM_ITEM>
	<PARAM_ITEM NAME="Titles" TYPE="PARAM_BOOL" VISIBLE="true">
		<DESCRIPTION>제목만 검색</DESCRIPTION>
		<PARAM_VALUE VALUE="false" DEFAULT="true"/>
	</PARAM_ITEM>
</CONFIG_DATA>
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\pchealth\helpctr\rc\web\nor\config.1044.xml ===
<?xml version="1.0" encoding="UTF-8"?>
<CONFIG_DATA SERVER_URL="http://go.microsoft.com/fwlink/?linkid=272&amp;clcid=0x409" STANDARD_SEARCH="0" SEARCHENGINE_OWNER="Microsoft Corporation" REMOTECONFIG_SERVER_URL="http://go.microsoft.com/fwlink/?linkid=277&amp;clcid=0x409" UPDATE_FREQUENCY="7" xmlns="urn:schemas-microsoft-com/pss/SDXML/searchprodlist">
	<SEARCHENGINE_NAME>Microsoft Knowledge Base</SEARCHENGINE_NAME>
	<SEARCHENGINE_DESCRIPTION>Viser relevante emner eller artikler fra Web-området Microsoft Knowledge Base. Knowledge Base er en kilde for teknisk støtteinformasjon og selvhjelpsverktøy for Microsoft-produkter.</SEARCHENGINE_DESCRIPTION>
	<PARAM_ITEM NAME="Product" TYPE="PARAM_LIST" VISIBLE="true">
		<DESCRIPTION>Velg et produkt eller emne</DESCRIPTION>
	</PARAM_ITEM>
	<PARAM_ITEM NAME="KeywordType" TYPE="PARAM_LIST" VISIBLE="true">
		<DESCRIPTION>Søk etter:</DESCRIPTION>
		<PARAM_VALUE VALUE="ALL" DEFAULT="true">
			<DISPLAYSTRING>Alle ordene</DISPLAYSTRING>
		</PARAM_VALUE>
		<PARAM_VALUE VALUE="ANY">
			<DISPLAYSTRING>Ett eller flere av ordene</DISPLAYSTRING>
		</PARAM_VALUE>
		<PARAM_VALUE VALUE="PHRASE">
			<DISPLAYSTRING>Den nøyaktige frasen</DISPLAYSTRING>
		</PARAM_VALUE>
		<PARAM_VALUE VALUE="BOOLEAN">
			<DISPLAYSTRING>Den boolske frasen</DISPLAYSTRING>
		</PARAM_VALUE>
	</PARAM_ITEM>
	<PARAM_ITEM NAME="Titles" TYPE="PARAM_BOOL" VISIBLE="true">
		<DESCRIPTION>Søk bare i tittel</DESCRIPTION>
		<PARAM_VALUE VALUE="false" DEFAULT="true"/>
	</PARAM_ITEM>
</CONFIG_DATA>
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\pchealth\helpctr\rc\web\pol\config.1045.xml ===
<?xml version="1.0" encoding="UTF-8"?>
<CONFIG_DATA SERVER_URL="http://go.microsoft.com/fwlink/?linkid=272&amp;clcid=0x409" STANDARD_SEARCH="0" SEARCHENGINE_OWNER="Microsoft Corporation" REMOTECONFIG_SERVER_URL="http://go.microsoft.com/fwlink/?linkid=277&amp;clcid=0x409" UPDATE_FREQUENCY="7" xmlns="urn:schemas-microsoft-com/pss/SDXML/searchprodlist">
	<SEARCHENGINE_NAME>Microsoft Knowledge Base</SEARCHENGINE_NAME>
	<SEARCHENGINE_DESCRIPTION>Wyświetla stosowne tematy i artykuły z witryny sieci Web Microsoft Knowledge Base. Baza wiedzy jest źródłem informacji pomocy technicznej i narzędzi pomocy dla produktów firmy Microsoft.</SEARCHENGINE_DESCRIPTION>
	<PARAM_ITEM NAME="Product" TYPE="PARAM_LIST" VISIBLE="true">
		<DESCRIPTION>Wybierz produkt lub temat</DESCRIPTION>
	</PARAM_ITEM>
	<PARAM_ITEM NAME="KeywordType" TYPE="PARAM_LIST" VISIBLE="true">
		<DESCRIPTION>Wyszukaj:</DESCRIPTION>
		<PARAM_VALUE VALUE="ALL" DEFAULT="true">
			<DISPLAYSTRING>Wszystkie wyrazy</DISPLAYSTRING>
		</PARAM_VALUE>
		<PARAM_VALUE VALUE="ANY">
			<DISPLAYSTRING>Dowolny wyraz</DISPLAYSTRING>
		</PARAM_VALUE>
		<PARAM_VALUE VALUE="PHRASE">
			<DISPLAYSTRING>Dokładna fraza</DISPLAYSTRING>
		</PARAM_VALUE>
		<PARAM_VALUE VALUE="BOOLEAN">
			<DISPLAYSTRING>Fraza logiczna</DISPLAYSTRING>
		</PARAM_VALUE>
	</PARAM_ITEM>
	<PARAM_ITEM NAME="Titles" TYPE="PARAM_BOOL" VISIBLE="true">
		<DESCRIPTION>Przeszukaj tylko tytuły</DESCRIPTION>
		<PARAM_VALUE VALUE="false" DEFAULT="true"/>
	</PARAM_ITEM>
</CONFIG_DATA>
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\pchealth\helpctr\rc\web\por\config.2070.xml ===
<?xml version="1.0" encoding="UTF-8"?>
<CONFIG_DATA SERVER_URL="http://go.microsoft.com/fwlink/?linkid=272&amp;clcid=0x409" STANDARD_SEARCH="0" SEARCHENGINE_OWNER="Microsoft Corporation" REMOTECONFIG_SERVER_URL="http://go.microsoft.com/fwlink/?linkid=277&amp;clcid=0x409" UPDATE_FREQUENCY="7" xmlns="urn:schemas-microsoft-com/pss/SDXML/searchprodlist">
	<SEARCHENGINE_NAME>Microsoft Knowledge Base</SEARCHENGINE_NAME>
	<SEARCHENGINE_DESCRIPTION>Apresenta tópicos e artigos relevantes do Web site da Microsoft Knowledge Base. A Knowledge Base é uma fonte de informações de suporte técnico e ferramentas de ajuda autónoma para produtos Microsoft.</SEARCHENGINE_DESCRIPTION>
	<PARAM_ITEM NAME="Product" TYPE="PARAM_LIST" VISIBLE="true">
		<DESCRIPTION>Seleccionar um produto ou tópico</DESCRIPTION>
	</PARAM_ITEM>
	<PARAM_ITEM NAME="KeywordType" TYPE="PARAM_LIST" VISIBLE="true">
		<DESCRIPTION>Procurar:</DESCRIPTION>
		<PARAM_VALUE VALUE="ALL" DEFAULT="true">
			<DISPLAYSTRING>Todas as palavras</DISPLAYSTRING>
		</PARAM_VALUE>
		<PARAM_VALUE VALUE="ANY">
			<DISPLAYSTRING>Qualquer das palavras</DISPLAYSTRING>
		</PARAM_VALUE>
		<PARAM_VALUE VALUE="PHRASE">
			<DISPLAYSTRING>A expressão exacta</DISPLAYSTRING>
		</PARAM_VALUE>
		<PARAM_VALUE VALUE="BOOLEAN">
			<DISPLAYSTRING>A expressão booleana</DISPLAYSTRING>
		</PARAM_VALUE>
	</PARAM_ITEM>
	<PARAM_ITEM NAME="Titles" TYPE="PARAM_BOOL" VISIBLE="true">
		<DESCRIPTION>Procurar apenas no título</DESCRIPTION>
		<PARAM_VALUE VALUE="false" DEFAULT="true"/>
	</PARAM_ITEM>
</CONFIG_DATA>
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\pchealth\helpctr\rc\web\rus\config.1049.xml ===
<?xml version="1.0" encoding="UTF-8"?>
<CONFIG_DATA SERVER_URL="http://go.microsoft.com/fwlink/?linkid=272&amp;clcid=0x409" STANDARD_SEARCH="0" SEARCHENGINE_OWNER="Microsoft Corporation" REMOTECONFIG_SERVER_URL="http://go.microsoft.com/fwlink/?linkid=277&amp;clcid=0x409" UPDATE_FREQUENCY="7" xmlns="urn:schemas-microsoft-com/pss/SDXML/searchprodlist">
	<SEARCHENGINE_NAME>База знаний Майкрософт</SEARCHENGINE_NAME>
	<SEARCHENGINE_DESCRIPTION>Поиск технической информации в базе знаний Майкрософт. База знаний Майкрософт - это источник технической информации и средств самостоятельного решения проблем с продуктами корпорации Майкрософт.</SEARCHENGINE_DESCRIPTION>
	<PARAM_ITEM NAME="Product" TYPE="PARAM_LIST" VISIBLE="true">
		<DESCRIPTION>Выберите продукт или заголовок</DESCRIPTION>
	</PARAM_ITEM>
	<PARAM_ITEM NAME="KeywordType" TYPE="PARAM_LIST" VISIBLE="true">
		<DESCRIPTION>Искать:</DESCRIPTION>
		<PARAM_VALUE VALUE="ALL" DEFAULT="true">
			<DISPLAYSTRING>Все слова</DISPLAYSTRING>
		</PARAM_VALUE>
		<PARAM_VALUE VALUE="ANY">
			<DISPLAYSTRING>Любое из слов</DISPLAYSTRING>
		</PARAM_VALUE>
		<PARAM_VALUE VALUE="PHRASE">
			<DISPLAYSTRING>Фразу целиком</DISPLAYSTRING>
		</PARAM_VALUE>
		<PARAM_VALUE VALUE="BOOLEAN">
			<DISPLAYSTRING>Логическое выражение</DISPLAYSTRING>
		</PARAM_VALUE>
	</PARAM_ITEM>
	<PARAM_ITEM NAME="Titles" TYPE="PARAM_BOOL" VISIBLE="true">
		<DESCRIPTION>Поиск только в заголовке</DESCRIPTION>
		<PARAM_VALUE VALUE="false" DEFAULT="true"/>
	</PARAM_ITEM>
</CONFIG_DATA>
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\pchealth\helpctr\rc\web\spa\config.3082.xml ===
<?xml version="1.0" encoding="UTF-8"?>
<CONFIG_DATA SERVER_URL="http://go.microsoft.com/fwlink/?linkid=272&amp;clcid=0x409" STANDARD_SEARCH="0" SEARCHENGINE_OWNER="Microsoft Corporation" REMOTECONFIG_SERVER_URL="http://go.microsoft.com/fwlink/?linkid=277&amp;clcid=0x409" UPDATE_FREQUENCY="7" xmlns="urn:schemas-microsoft-com/pss/SDXML/searchprodlist">
	<SEARCHENGINE_NAME>Knowledge Base de Microsoft</SEARCHENGINE_NAME>
	<SEARCHENGINE_DESCRIPTION>Muestra temas o artículos relevantes del sitio Web Knowledge Base de Microsoft. Knowledge Base es una fuente de información de soporte técnico y herramientas de autoayuda para productos Microsoft.</SEARCHENGINE_DESCRIPTION>
	<PARAM_ITEM NAME="Product" TYPE="PARAM_LIST" VISIBLE="true">
		<DESCRIPTION>Seleccione un producto o tema</DESCRIPTION>
	</PARAM_ITEM>
	<PARAM_ITEM NAME="KeywordType" TYPE="PARAM_LIST" VISIBLE="true">
		<DESCRIPTION>Buscar:</DESCRIPTION>
		<PARAM_VALUE VALUE="ALL" DEFAULT="true">
			<DISPLAYSTRING>Todas las palabras</DISPLAYSTRING>
		</PARAM_VALUE>
		<PARAM_VALUE VALUE="ANY">
			<DISPLAYSTRING>Cualquier palabra</DISPLAYSTRING>
		</PARAM_VALUE>
		<PARAM_VALUE VALUE="PHRASE">
			<DISPLAYSTRING>Frase exacta</DISPLAYSTRING>
		</PARAM_VALUE>
		<PARAM_VALUE VALUE="BOOLEAN">
			<DISPLAYSTRING>Frase de tipo booleano</DISPLAYSTRING>
		</PARAM_VALUE>
	</PARAM_ITEM>
	<PARAM_ITEM NAME="Titles" TYPE="PARAM_BOOL" VISIBLE="true">
		<DESCRIPTION>Buscar sólo en el Título</DESCRIPTION>
		<PARAM_VALUE VALUE="false" DEFAULT="true"/>
	</PARAM_ITEM>
</CONFIG_DATA>
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\pchealth\helpctr\rc\web\swe\config.1053.xml ===
<?xml version="1.0" encoding="UTF-8"?>
<CONFIG_DATA SERVER_URL="http://go.microsoft.com/fwlink/?linkid=272&amp;clcid=0x409" STANDARD_SEARCH="0" SEARCHENGINE_OWNER="Microsoft Corporation" REMOTECONFIG_SERVER_URL="http://go.microsoft.com/fwlink/?linkid=277&amp;clcid=0x409" UPDATE_FREQUENCY="7" xmlns="urn:schemas-microsoft-com/pss/SDXML/searchprodlist">
	<SEARCHENGINE_NAME>Microsoft Knowledge Base</SEARCHENGINE_NAME>
	<SEARCHENGINE_DESCRIPTION>Visar relevanta ämnen och artiklar från webbplatsen Microsoft Knowledge Base. Knowledge Base är en källa för teknisk supportinformation och självhjälpverktyg för Microsoft-produkter.</SEARCHENGINE_DESCRIPTION>
	<PARAM_ITEM NAME="Product" TYPE="PARAM_LIST" VISIBLE="true">
		<DESCRIPTION>Välj en produkt eller ett ämne</DESCRIPTION>
	</PARAM_ITEM>
	<PARAM_ITEM NAME="KeywordType" TYPE="PARAM_LIST" VISIBLE="true">
		<DESCRIPTION>Sök efter:</DESCRIPTION>
		<PARAM_VALUE VALUE="ALL" DEFAULT="true">
			<DISPLAYSTRING>Alla ord</DISPLAYSTRING>
		</PARAM_VALUE>
		<PARAM_VALUE VALUE="ANY">
			<DISPLAYSTRING>Något av orden</DISPLAYSTRING>
		</PARAM_VALUE>
		<PARAM_VALUE VALUE="PHRASE">
			<DISPLAYSTRING>Exakt fras</DISPLAYSTRING>
		</PARAM_VALUE>
		<PARAM_VALUE VALUE="BOOLEAN">
			<DISPLAYSTRING>Boolesk fras</DISPLAYSTRING>
		</PARAM_VALUE>
	</PARAM_ITEM>
	<PARAM_ITEM NAME="Titles" TYPE="PARAM_BOOL" VISIBLE="true">
		<DESCRIPTION>Sök endast i rubriker</DESCRIPTION>
		<PARAM_VALUE VALUE="false" DEFAULT="true"/>
	</PARAM_ITEM>
</CONFIG_DATA>
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\pchealth\helpctr\rc\web\trk\config.1055.xml ===
<?xml version="1.0" encoding="UTF-8"?>
<CONFIG_DATA SERVER_URL="http://go.microsoft.com/fwlink/?linkid=272&amp;clcid=0x409" STANDARD_SEARCH="0" SEARCHENGINE_OWNER="Microsoft Corporation" REMOTECONFIG_SERVER_URL="http://go.microsoft.com/fwlink/?linkid=277&amp;clcid=0x409" UPDATE_FREQUENCY="7" xmlns="urn:schemas-microsoft-com/pss/SDXML/searchprodlist">
	<SEARCHENGINE_NAME>Microsoft Bilgi Deposu</SEARCHENGINE_NAME>
	<SEARCHENGINE_DESCRIPTION>Microsoft Bilgi Deposu Web sitesinden ilgili konu ve makaleleri görüntüler. Bilgi Deposu, teknik destek bilgisi ve Microsoft ürünleri için kendi kendine yardım araçlarının kaynağıdır.</SEARCHENGINE_DESCRIPTION>
	<PARAM_ITEM NAME="Product" TYPE="PARAM_LIST" VISIBLE="true">
		<DESCRIPTION>Bir ürün ya da konu seçin</DESCRIPTION>
	</PARAM_ITEM>
	<PARAM_ITEM NAME="KeywordType" TYPE="PARAM_LIST" VISIBLE="true">
		<DESCRIPTION>Aranan:</DESCRIPTION>
		<PARAM_VALUE VALUE="ALL" DEFAULT="true">
			<DISPLAYSTRING>Tüm sözcükler</DISPLAYSTRING>
		</PARAM_VALUE>
		<PARAM_VALUE VALUE="ANY">
			<DISPLAYSTRING>Herhangi bir sözcük</DISPLAYSTRING>
		</PARAM_VALUE>
		<PARAM_VALUE VALUE="PHRASE">
			<DISPLAYSTRING>Yazıldığı gibi</DISPLAYSTRING>
		</PARAM_VALUE>
		<PARAM_VALUE VALUE="BOOLEAN">
			<DISPLAYSTRING>Boolean deyimi</DISPLAYSTRING>
		</PARAM_VALUE>
	</PARAM_ITEM>
	<PARAM_ITEM NAME="Titles" TYPE="PARAM_BOOL" VISIBLE="true">
		<DESCRIPTION>Yalnızca Başlıkta ara</DESCRIPTION>
		<PARAM_VALUE VALUE="false" DEFAULT="true"/>
	</PARAM_ITEM>
</CONFIG_DATA>
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\pchealth\helpctr\registration_samples\oem cab creation.rtf ===
{\rtf1\ansi\ansicpg1252\uc1 \deff0\deflang1033\deflangfe1033{\fonttbl{\f0\froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}{\f1\fswiss\fcharset0\fprq2{\*\panose 020b0604020202020204}Arial;} {\f32\froman\fcharset238\fprq2 Times New Roman CE;}{\f33\froman\fcharset204\fprq2 Times New Roman Cyr;}{\f35\froman\fcharset161\fprq2 Times New Roman Greek;}{\f36\froman\fcharset162\fprq2 Times New Roman Tur;} {\f37\froman\fcharset177\fprq2 Times New Roman (Hebrew);}{\f38\froman\fcharset178\fprq2 Times New Roman (Arabic);}{\f39\froman\fcharset186\fprq2 Times New Roman Baltic;}{\f40\fswiss\fcharset238\fprq2 Arial CE;}{\f41\fswiss\fcharset204\fprq2 Arial Cyr;} {\f43\fswiss\fcharset161\fprq2 Arial Greek;}{\f44\fswiss\fcharset162\fprq2 Arial Tur;}{\f45\fswiss\fcharset177\fprq2 Arial (Hebrew);}{\f46\fswiss\fcharset178\fprq2 Arial (Arabic);}{\f47\fswiss\fcharset186\fprq2 Arial Baltic;}} {\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0; \red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;}{\stylesheet{\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0  \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \snext0 Normal;}{\*\cs10 \additive Default Paragraph Font;}}{\info{\author Vijay Baliga}{\operator Vijay Baliga}{\creatim\yr2000\mo11\dy21\hr11\min21}{\revtim\yr2000\mo11\dy21\hr11\min21}{\version2} {\edmins0}{\nofpages1}{\nofwords228}{\nofchars1300}{\nofcharsws1596}{\vern8247}}\widowctrl\ftnbj\aenddoc\noxlattoyen\expshrtn\noultrlspc\dntblnsbdb\nospaceforul\hyphcaps0\horzdoc\dghspace120\dgvspace120\dghorigin1701\dgvorigin1984\dghshow0\dgvshow3 \jcompress\viewkind4\viewscale100\nolnhtadjtbl \fet0\sectd \linex0\sectdefaultcl {\*\pnseclvl1\pnucrm\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl2\pnucltr\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl3\pndec\pnstart1\pnindent720\pnhang {\pntxta .}}{\*\pnseclvl4\pnlcltr\pnstart1\pnindent720\pnhang{\pntxta )}}{\*\pnseclvl5\pndec\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl6\pnlcltr\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl7 \pnlcrm\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl8\pnlcltr\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl9\pnlcrm\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}\pard\plain  \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\f1\fs20 How to create and sign an OEM help package \par  \par }{\f1\fs20 This document covers how to create and sign the help packages with the two test OEMs - HSSTest and Healthfest.  These help packages are for internal Microsoft testing purposes only and may not be distributed outside of Microsoft. \par  \par This document assumes you already know how to create a Help Package.  If you don't, email gschua for docs/help. \par  \par To create/sign your help package as OEM HSSTest, do the following: \par \tab  \par \tab 1.  Create all necessary help package files and place them in a folder by themselves. \par \tab 2.  Open a CMD prompt and navigate to the folder. \par \tab 3.  Run \\\\pchcert\\certs\\makehsstestcab.bat <help package filename> \par \tab 4. Collect your newly created help package from your %temp% folder. \par  \par Prior to installing your help package, HSSTest will need to be recognized as an OEM.  To do this, you need to run addoemhsstest.vbs on the target machine to receive your help package.  Then install your HSSTest help package. \par  \par To create/sign your help package as OEM Healthfest, do the following: \par  \par \tab 1.  Create all necessary help package files and place them in a folder by themselves. \par \tab 2.  Open a CMD prompt and navigate to the folder. \par \tab 3.  Run \\\\pchcert\\certs\\makehealthfest.cab <help package filename> \par \tab 4. Collect your newly created help package from your %temp% folder. \par  \par Prior to installing your help package, Healthfest will need to be recognized as an OEM.  To do this, you need to run addoemhealthftest.vbs on the target machine to receive your help package.  Then install your Healthfest help package. \par  \par Questions?  Call caryp at x68964 \par  \par  \par }}
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\pchealth\helpctr\service\jetblue\database_schema.txt ===
##################################################################################################################################
#                                                                                                                                #
# Table: DbParameters                                                                                                            #
#                                                                                                                                #
# Columns                                                                                                                        #
#-------------------#------------#-------------------#---------------------------------------------------------------------------#
#                   #            #                   #                                                                           #
# Name              # Type       # Flags             # Description                                                               #
#-------------------#------------#-------------------#---------------------------------------------------------------------------#
# Name              # Text       #                   # Name of the parameter.                                                    #
# Value             # LongText   # Null              # Its value.                                                                #
#-------------------#------------#-------------------#---------------------------------------------------------------------------#
#                                                                                                                                #
# Indexes                                                                                                                        #
#----------#---------------------#-----------------------------------------#-----------------------------------------------------#
#          #                     #                                         #                                                     #
# Name     # Definition          # Kind                                    # Description                                         #
#----------#---------------------#-----------------------------------------#-----------------------------------------------------#
# ByName   # +Name               # Primary & Unique                        # Used to look up a parameter.                        #
#----------#---------------------#-----------------------------------------#-----------------------------------------------------#
##################################################################################################################################


##################################################################################################################################
#                                                                                                                                #
# Table: ContentOwners                                                                                                           #
#                                                                                                                                #
# Columns                                                                                                                        #
#-------------------#------------#-------------------#---------------------------------------------------------------------------#
#                   #            #                   #                                                                           #
# Name              # Type       # Flags             # Description                                                               #
#-------------------#------------#-------------------#---------------------------------------------------------------------------#
# DN                # Text       #                   # Qualified name of the owner, constructed from the Digital Certificate.    #
# ID_owner          # AutoNumber #                   # ID associated with the owner.                                             #
# IsOEM             # Bool       #                   # This is an OEM, so it can create nodes.                                   #
#-------------------#------------#-------------------#---------------------------------------------------------------------------#
#                                                                                                                                #
# Indexes                                                                                                                        #
#------------#-------------------#-----------------------------------------#-----------------------------------------------------#
#            #                   #                                         #                                                     #
# Name       # Definition        # Kind                                    # Description                                         #
#------------#-------------------#-----------------------------------------#-----------------------------------------------------#
# ByVendorID # +DN               # Primary & Unique                        # Used to look up an owner.                           #
# Owner      # +ID_owner         # Unique                                  #                                                     #
#------------#-------------------#-----------------------------------------#-----------------------------------------------------#
##################################################################################################################################


##################################################################################################################################
#                                                                                                                                #
# Table: SynSets                                                                                                                 #
#                                                                                                                                #
# Columns                                                                                                                        #
#-------------------#------------#-------------------#---------------------------------------------------------------------------#
#                   #            #                   #                                                                           #
# Name              # Type       # Flags             # Description                                                               #
#-------------------#------------#-------------------#---------------------------------------------------------------------------#
# Name              # Text       #                   # SynSet name.                                                              #
# ID_owner          # Number     #                   # Owner of the SynSet.                                                      #
# ID_synset         # Number     # Autoincrement     # SynSet number.                                                            #
#-------------------#------------#-------------------#---------------------------------------------------------------------------#
#                                                                                                                                #
# Indexes                                                                                                                        #
#-----------#--------------------#-----------------------------------------#-----------------------------------------------------#
#           #                    #                                         #                                                     #
# Name      # Definition         # Kind                                    # Description                                         #
#-----------#--------------------#-----------------------------------------#-----------------------------------------------------#
# ByPair    # +Name+ID_owner     # Primary & Unique                        # Used during add/remove.                             #
#-----------#--------------------#-----------------------------------------#-----------------------------------------------------#
##################################################################################################################################


##################################################################################################################################
#                                                                                                                                #
# Table: HelpImage                                                                                                               #
#                                                                                                                                #
# Columns                                                                                                                        #
#-------------------#------------#-------------------#---------------------------------------------------------------------------#
#                   #            #                   #                                                                           #
# Name              # Type       # Flags             # Description                                                               #
#-------------------#------------#-------------------#---------------------------------------------------------------------------#
# ID_owner          # Number     #                   # Owner of the Help Image.                                                  #
# File              # Text       #                   # Name of the file that is part of the Help Image.                          #
#-------------------#------------#-------------------#---------------------------------------------------------------------------#
#                                                                                                                                #
# Indexes                                                                                                                        #
#-----------#--------------------#-----------------------------------------#-----------------------------------------------------#
#           #                    #                                         #                                                     #
# Name      # Definition         # Kind                                    # Description                                         #
#-----------#--------------------#-----------------------------------------#-----------------------------------------------------#
# ByFile    # +File              # Primary & Unique                        # Used during add/remove.                             #
#-----------#--------------------#-----------------------------------------#-----------------------------------------------------#
##################################################################################################################################


##################################################################################################################################
#                                                                                                                                #
# Table: Scope                                                                                                                   #
#                                                                                                                                #
# Columns                                                                                                                        #
#-------------------#------------#-------------------#---------------------------------------------------------------------------#
#                   #            #                   #                                                                           #
# Name              # Type       # Flags             # Description                                                               #
#-------------------#------------#-------------------#---------------------------------------------------------------------------#
# ID_owner          # Number     #                   # Owner of the scope.                                                       #
# ID_scope          # Number     # Autoincrement     # Identifier for the scope.                                                 #
# Name              # Text       #                   # Name of the application.                                                  #
# Category          # LongText   #                   # Position in the taxomony.                                                 #
#-------------------#------------#-------------------#---------------------------------------------------------------------------#
#                                                                                                                                #
# Indexes                                                                                                                        #
#----------------#---------------------#-----------------------------------#-----------------------------------------------------#
#                #                     #                                   #                                                     #
# Name           # Definition          # Kind                              # Description                                         #
#----------------#---------------------#-----------------------------------#-----------------------------------------------------#
# ByName         # +Name               # Primary & Unique                  # Used to locate a scope.                             #
# ByScope        # +ID_scope           # Unique                            #                                                     #
# OwnedScopes    # +ID_owner           # External to ContentOwners         # Used to look up all the scopes of an owner.         #
#----------------#---------------------#-----------------------------------#-----------------------------------------------------#
##################################################################################################################################


##################################################################################################################################
#                                                                                                                                #
# Table: IndexFiles                                                                                                              #
#                                                                                                                                #
# Columns                                                                                                                        #
#-------------------#------------#-------------------#---------------------------------------------------------------------------#
#                   #            #                   #                                                                           #
# Name              # Type       # Flags             # Description                                                               #
#-------------------#------------#-------------------#---------------------------------------------------------------------------#
# ID_owner          # Number     #                   # Owner of the HHK.                                                         #
# ID_scope          # Number     #                   # Scope of the HHK.                                                         #
# Storage           # LongText   # Null              # Location and name of the CHM.                                             #
# File              # LongText   # Null              # Name of the HHK file inside the CHM.                                      #
#-------------------#------------#-------------------#---------------------------------------------------------------------------#
#                                                                                                                                #
# Indexes                                                                                                                        #
#-----------#--------------------#-----------------------------------------#-----------------------------------------------------#
#           #                    #                                         #                                                     #
# Name      # Definition         # Kind                                    # Description                                         #
#-----------#--------------------#-----------------------------------------#-----------------------------------------------------#
# ByScope   # +ID_scope          #                                         # Used during add/remove.                             #
#-----------#--------------------#-----------------------------------------#-----------------------------------------------------#
##################################################################################################################################


##################################################################################################################################
#                                                                                                                                #
# Table: FullTextSearch                                                                                                          #
#                                                                                                                                #
# Columns                                                                                                                        #
#-------------------#------------#-------------------#---------------------------------------------------------------------------#
#                   #            #                   #                                                                           #
# Name              # Type       # Flags             # Description                                                               #
#-------------------#------------#-------------------#---------------------------------------------------------------------------#
# ID_owner          # Number     #                   # Owner of the CHM.                                                         #
# ID_scope          # Number     #                   # Scope of the CHM.                                                         #
# CHM               # LongText   # Null              # Location and name of the associated CHM.                                  #
# CHQ               # LongText   # Null              # Location and name of the CHQ.                                             #
#-------------------#------------#-------------------#---------------------------------------------------------------------------#
#                                                                                                                                #
# Indexes                                                                                                                        #
#-----------#--------------------#-----------------------------------------#-----------------------------------------------------#
#           #                    #                                         #                                                     #
# Name      # Definition         # Kind                                    # Description                                         #
#-----------#--------------------#-----------------------------------------#-----------------------------------------------------#
# ByScope   # +ID_scope          #                                         # Used during add/remove.                             #
#-----------#--------------------#-----------------------------------------#-----------------------------------------------------#
##################################################################################################################################


##################################################################################################################################
#                                                                                                                                #
# Table: Taxonomy                                                                                                                #
#                                                                                                                                #
# Columns                                                                                                                        #
#-------------------#------------#-------------------#---------------------------------------------------------------------------#
#                   #            #                   #                                                                           #
# Name              # Type       # Flags             # Description                                                               #
#-------------------#------------#-------------------#---------------------------------------------------------------------------#
# ID_node           # Number     # Autoincrement     # Identifier for the node.                                                  #
# Pos               # Number     #                   # Order in which to display the node.                                       #
# ID_parent         # Number     # Null              # Parent of the current node.                                               #
# ID_owner          # Number     #                   # Owner of the node.                                                        #
# Entry             # Text       #                   # Single component in the taxonomy path.                                    #
# Title             # LongText   # Null              # Display string.                                                           #
# Description       # LongText   # Null              # Description of the node.                                                  #
# DescriptionURI    # LongText   # Null              # Alternative description of the node, as an HTML page to display.          #
# IconURI           # LongText   # Null              # Optional icon for the node.                                               #
# Visible           # Bool       #                   # Boolean value to determine whether it should be visible under XMLTOC.     #
# Subsite           # Bool       #                   # Boolean value to determine whether this is a data island or not.          #
# NavModel          # Long       #                   # Type of the navigation model.                                             #
#-------------------#------------#-------------------#---------------------------------------------------------------------------#
#                                                                                                                                #
# Indexes                                                                                                                        #
#----------------#---------------------#-----------------------------------#-----------------------------------------------------#
#                #                     #                                   #                                                     #
# Name           # Definition          # Kind                              # Description                                         #
#----------------#---------------------#-----------------------------------#-----------------------------------------------------#
# SubNode        # +ID_parent +Entry   # Primary & Unique                  # Used to locate a node under a certain parent.       #
# Children       # +ID_parent          # External to Taxonomy              # Used to find all the subnodes of a specified node.  #
# Node           # +ID_node            # Unique                            # Used to locate a specific node.                     #
#----------------#---------------------#-----------------------------------#-----------------------------------------------------#
##################################################################################################################################


##################################################################################################################################
#                                                                                                                                #
# Table: Topics                                                                                                                  #
#                                                                                                                                #
# Columns                                                                                                                        #
#-------------------#------------#-------------------#---------------------------------------------------------------------------#
#                   #            #                   #                                                                           #
# Name              # Type       # Flags             # Description                                                               #
#-------------------#------------#-------------------#---------------------------------------------------------------------------#
# ID_topic          # Number     # Autoincrement     # Unique Identified for the topic.                                          #
# ID_node           # Number     #                   # Position on the taxonomy.                                                 #
# ID_owner          # Number     #                   # Owner of the topic.                                                       #
# Pos               # Number     #                   # Order in which to display the topic.                                      #
# Title             # LongText   # Null              # Display string.                                                           #
# URI               # LongText   # Null              # Hyperlink for the contents.                                               #
# Description       # LongText   # Null              # Long description of the topic.                                            #
# IconURI           # LongText   # Null              # Optional icon for the node.                                               #
# Type              # Number     #                   # The type of topic.                                                        #
# Visible           # Bool       #                   # Boolean value to determine whether it should be visible under XMLTOC.     #
#-------------------#------------#-------------------#---------------------------------------------------------------------------#
#                                                                                                                                #
# Indexes                                                                                                                        #
#-----------------#---------------#----------------------------------------#-----------------------------------------------------#
#                 #               #                                        #                                                     #
# Name            # Definition    # Kind                                   # Description                                         #
#-----------------#---------------#----------------------------------------#-----------------------------------------------------#
# SingleTopic     # +ID_topic     # Primary & Unique                       # Used during search, to find a topic.                #
# TopicsUnderNode # +ID_node      # External to Taxonomy                   # Used to located all the topics under a certain node.#
# ByURI           # +URI          #                                        # Used to locate the topics for an URL.               #
#-----------------#---------------#----------------------------------------#-----------------------------------------------------#
##################################################################################################################################


##################################################################################################################################
#                                                                                                                                #
# Table: Synonyms                                                                                                                #
#                                                                                                                                #
# Columns                                                                                                                        #
#-------------------#------------#-------------------#---------------------------------------------------------------------------#
#                   #            #                   #                                                                           #
# Name              # Type       # Flags             # Description                                                               #
#-------------------#------------#-------------------#---------------------------------------------------------------------------#
# Keyword           # Text       #                   # Keyword name.                                                             #
# ID_synset         # Number     #                   # Synset number.                                                            #
# ID_owner          # Number     #                   # Owner of the synset.                                                      #
#-------------------#------------#-------------------#---------------------------------------------------------------------------#
#                                                                                                                                #
# Indexes                                                                                                                        #
#--------#-----------------------#-----------------------------------------#-----------------------------------------------------#
#        #                       #                                         #                                                     #
# Name   # Definition            # Kind                                    # Description                                         #
#--------#-----------------------#-----------------------------------------#-----------------------------------------------------#
# ByPair # +Keyword+ID_synset    # Primary & Unique                        # Used to look up the owner of a synset.              #
# ByName # +Keyword              #                                         # Used to look up the ID of a synset.                 #
#--------#-----------------------#-----------------------------------------#-----------------------------------------------------#
##################################################################################################################################


##################################################################################################################################
#                                                                                                                                #
# Table: Keywords                                                                                                                #
#                                                                                                                                #
# Columns                                                                                                                        #
#-------------------#------------#-------------------#---------------------------------------------------------------------------#
#                   #            #                   #                                                                           #
# Name              # Type       # Flags             # Description                                                               #
#-------------------#------------#-------------------#---------------------------------------------------------------------------#
# Keyword           # Text       #                   # Keyword name.                                                             #
# ID_keyword        # Number     # Autoincrement     # Keyword number.                                                           #
#-------------------#------------#-------------------#---------------------------------------------------------------------------#
#                                                                                                                                #
# Indexes                                                                                                                        #
#--------#-----------------------#-----------------------------------------#-----------------------------------------------------#
#        #                       #                                         #                                                     #
# Name   # Definition            # Kind                                    # Description                                         #
#--------#-----------------------#-----------------------------------------#-----------------------------------------------------#
# ByName # +Keyword              # Primary & Unique                        # Used to look up the ID of a keyword.                #
#--------#-----------------------#-----------------------------------------#-----------------------------------------------------#
##################################################################################################################################


##################################################################################################################################
#                                                                                                                                #
# Table: Matches                                                                                                                 #
#                                                                                                                                #
# Columns                                                                                                                        #
#-------------------#------------#-------------------#---------------------------------------------------------------------------#
#                   #            #                   #                                                                           #
# Name              # Type       # Flags             # Description                                                               #
#-------------------#------------#-------------------#---------------------------------------------------------------------------#
# ID_topic          # Number     #                   # External Key into "Topics" table.                                         #
# ID_keyword        # Number     #                   # External Key into "Keywords" table.                                       #
# Priority          # Number     #                   # To sort results.                                                          #
# HHK               # Bool       #                   # Boolean value to determine whether it should make it to the Merged HHK.   #
#-------------------#------------#-------------------#---------------------------------------------------------------------------#
#                                                                                                                                #
# Indexes                                                                                                                        #
#-----------#-----------------------#--------------------------------------#-----------------------------------------------------#
#           #                       #                                      #                                                     #
# Name      # Definition            # Kind                                 # Description                                         #
#-----------#-----------------------#--------------------------------------#-----------------------------------------------------#
# Pair      # +ID_keyword +ID_topic # Primary & Unique                     # Used to locate the topics associated with a keyword.#
# ByKeyword # +ID_keyword           # External to Keywords                 # Used to locate the topics associated with a keyword.#
# ByTopic   # +ID_topic             # External to Topics                   # Used to locate the keywords accociated with a topic.#
#-----------#-----------------------#--------------------------------------#-----------------------------------------------------#
##################################################################################################################################


/////////////////////////////////////////////////////////////////////////////////
//                                                                             //
// OLD OLD OLD OLD OLD OLD OLD OLD OLD OLD OLD OLD OLD OLD OLD OLD OLD OLD OLD //
//                                                                             //
/////////////////////////////////////////////////////////////////////////////////

DbParameters:
        Name        Text
        Value       LongText

ContentOwners:
        OWID        AutoNumber
        DN          Text

NodeOwners:
        NOID        AutoNumber
        OWID        Number

SuperKeywords:
        KID         AutoNumber
        EID         Number
        Keyword     Text

Matches:
        OID         Number          External Key into topics database
        KID         Number          Unique Keyword, which was originally submitted for the match.
        EID         Number          Equivalent Keyword ID associated with the match.
        HHK         Yes/No          Boolean value to determine whether it should make it to the Merged HHK
        Title       LongText        Alternative title to be shown

Topics:
        OID         AutoNumber      Unique ID entered when creating this TOC from the parsing process
        Category    LongText        Path to the node in the taxonomy.
        Entry       Text
        URI         HyperLink
        Title       Text
        Description LongText
        Type        Number
        OWID        Number
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\pchealth\helpctr\service\lame\feedback.xml ===
<?xml version="1.0" ?>
<DataSpec GUID="47DE97C8-F86B-11d2-9628-00C04F68F2AF">
	<WQL Namespace="root/cimv2" Class="PCH_SysInfo">
      select Version, OSLanguage, Name from win32_OperatingSystem</WQL>
</DataSpec>
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\pchealth\helpctr\service\saf\channels\test\config.xml ===
<?xml version="1.0" encoding="utf-8" ?>
<SAFConfig>
	<ProductID>Microsoft Word</ProductID>
	<ProductDescription>Word Processor</ProductDescription>
	<EntryURL>http://www.microsoft.com/office/word</EntryURL>
    <VendorIcon>http://steveshi-2/helpportal/images/go_to_4.gif</VendorIcon>
</SAFConfig>
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\pchealth\helpctr\service\saf\channels\test\config2.xml ===
<?xml version="1.0" encoding="utf-8" ?>
<SAFConfig>
	<ProductID>Microsoft Project</ProductID>
	<ProductDescription>Project Manager</ProductDescription>
	<EntryURL>http://www.microsoft.com/office/project</EntryURL>
    <VendorIcon>http://steveshi-2/helpportal/images/go_to_4.gif</VendorIcon>
</SAFConfig>
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\pchealth\helpctr\service\scriptingframework\unittest\sup1_dataspec.xml ===
<?xml version="1.0" ?>
<DataSpec GUID="47DE97C8-F86B-11d2-9628-00C04F68F2AF">
	<WQL Namespace="root/cimv2" Class="WIN32_LogicalDisk">select * from WIN32_LogicalDisk</WQL>
	<WQL Namespace="root/cimv2" Class="WIN32_Environment"/>
</DataSpec>
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\pchealth\helpctr\service\scriptingframework\unittest\sup1_history.xml ===
<?xml version="1.0" ?>
<DataSpec GUID="47DE97C8-F86B-11d2-9628-00C04F68F2AF">
	<WQL Namespace="root/cimv2" Class="WIN32_LogicalDisk"/>
	<WQL Namespace="root/cimv2" Class="WIN32_Environment"/>
	<WQL Namespace="root/cimv2" Class="WIN32_LogicalDisk2"/>
</DataSpec>
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\pchealth\helpctr\service\searchenginelib\registration_sample\package_description.xml ===
<?xml version="1.0" ?>
<HELPCENTERPACKAGE>
    <SKU VALUE="ALL"/>
    <LANGUAGE VALUE="ALL"/>
    <VERSION VALUE="1.0.0.0" /> 
    <PRODUCT ID="Custom FTS wrapper" /> 
	<METADATA>
	    <HHT FILE="custom.hht" /> 
    </METADATA>
    <SEARCHENGINES>
		<WRAPPER CLSID="BUILTIN_FULLTEXTSEARCH" ID="Test" NAME="FTS custom" ACTION="ADD">
			<DATA>
				<NAME>FTS custom</NAME>
				<DESCRIPTION>Some text to describe the wrapper</DESCRIPTION>
				<SCOPE>custom</SCOPE>
				<HELP_URL>http://www.microsoft.com</HELP_URL>
			</DATA>
		</WRAPPER>
    </SEARCHENGINES>
</HELPCENTERPACKAGE>
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\pchealth\helpctr\service\searchenginelib\testwrapper\setest\package_description.xml ===
<?xml version="1.0" encoding="utf-8" ?>
<HELPCENTERPACKAGE>
    <VERSION VALUE="1.1.2468.0" />
    <PRODUCT ID="Microsoft Core Help Center Content" />
	<SEARCHENGINES>
		<WRAPPER CLSID ="{FE6581C0-1773-47FD-894C-4CD9CD2275B3}"
				 NAME  ="This is a test search engine"
				 ACTION="ADD" />
	</SEARCHENGINES>
</HELPCENTERPACKAGE>
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\pchealth\helpctr\service\searchenginelib\testwrapper\reg\package_description.xml ===
<?xml version="1.0" encoding="utf-8" ?>
<HELPCENTERPACKAGE>
    <VERSION VALUE="1.1.2468.0" />
    <PRODUCT ID="Microsoft Core Help Center Content" />
	<SEARCHENGINES>
		<WRAPPER CLSID ="{FE6581C0-1773-47FD-894C-4CD9CD2275B3}"
			 ID    ="F91BA5D6-A8F1-4d28-BDD1-31B262FD3BB3"
			 NAME  ="This is a test search engine"
			 ACTION="ADD">
			<DATA>
				This is just test data.
				<abc>Will this work?</abc>
				<def ghi="123">Will this fail?</def>
			</DATA>
		</WRAPPER>
	</SEARCHENGINES>
</HELPCENTERPACKAGE>
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\pchealth\helpctr\service\security\unittest\test1.xml ===
<?xml version="1.0" ?> 
<SecurityDescriptor Revision="1" Control="2" OwnerDefaulted="0" GroupDefaulted="1" DaclDefaulted="1" SaclDefaulted="2">
  <Owner>Administrator</Owner>
  <Group>Administrators</Group>
  <DiscretionaryAcl>
    <AccessControlList AclRevision="2">
      <Entries>
        <AccessControlEntry AccessMask="10" AceFlags="11" AceType="12" Flags="13">
		  <Trustee>redmond\dmassare</Trustee>
		  <ObjectType>Test ObjectType1</ObjectType>
		  <InheritedOjectType>Test InheritedOjectType1</InheritedOjectType>
		</AccessControlEntry>
      </Entries>
    </AccessControlList>
  </DiscretionaryAcl>
</SecurityDescriptor>
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\pchealth\helpctr\service\trustedscripts\testpackage\package_description.xml ===
<?xml version="1.0" encoding="utf-8" ?>
<HELPCENTERPACKAGE>
    <DBG_VENDORID>CN=HSSTest,L=Redmond,S=Washington,C=US</DBG_VENDORID>
	<SKU VALUE="ALL"/>
	<LANGUAGE VALUE="ALL"/>
 	<VERSION VALUE="1.0.0.0" /> 
	<PRODUCT ID="Test_Trusted_Scripts"/> 
    <CONFIG>
		<SAF ACTION="ADD" FILE="saf.xml"/>
    </CONFIG>
    <TRUSTED_CONTENT>
        <TRUSTED ACTION="ADD" URI="/TestTrustedScript"/>
    </TRUSTED_CONTENT>
</HELPCENTERPACKAGE>
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\pchealth\helpctr\service\trustedscripts\testpackage\saf.xml ===
<?xml version="1.0" encoding="utf-8" ?>
<SAFConfig>
	<ProductID>Test_Trusted_Scripts</ProductID>
	<ProductDescription>Test Channel for Trusted Scripts</ProductDescription>
	<EntryURL>hcp://CN=HSSTest,L=Redmond,S=Washington,C=US/TestTrustedScript/test.htm</EntryURL>
	<VendorIcon>hcp://CN=HSSTest,L=Redmond,S=Washington,C=US/TestTrustedScript/logo.gif</VendorIcon>
	<PublicKey>06020000002400005253413100020000010001009153c6ab78cf7adb6ea5bf47f2a43553e02040032b5eb2f577149a30cedf78b1277382fb3fbc4fb04b39168b411ddf4003bce6f9c5d6ec5eb9c674c20eef9dc2</PublicKey>
</SAFConfig>
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\pchealth\pchmars\marsprop.ini ===
[mars]
Test1=VT_I4
Test2=VT_BSTR
Test3=VT_DISPATCH
bFirstTime=VT_BOOL
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\pchealth\pchmars\mars.ini ===
;; --------------------------------------------------------------------
;; --------------------------------------------------------------------
;;
;; This file must be in Windows directory to take effect.
;;
;; To use, add up the flags that you want enabled (listed in the comments)
;; and then set the appropriate flag key to that value.  If this
;; file is not found, then the flags will be assumed to have the value
;; listed as default.

;; NOTE TO DEVS: To change default behavior modify appropriate #define in
;; mars\lib\debug.cpp   Also note change here.

[MARSCORE]

; BreakFlags:
;    0x00000001     Break on ASSERTs        BF_ASSERT
;    0x00000002     Break on TF_ERROR       BF_ONTRACEERROR
;    0x00000004     Break on TF_WARNING     BF_ONTRACEWARNING
;    0x00000008     Break on Leaks          BF_LEAKS
;    0x00000010     Break on RIPS           BF_RIPS
;    0x00000020     Break on script breaks  BF_SCRIPT
;    0x00000040     Break on variable       BF_VALIDATEVARS
;                   validation failures
;    0x00000080     Break on TraceResult    BF_TRACERESULT
;                   failures
;    0x00000100     if BF_ASSERT is set,    BF_POPUPASSERT
;                   prompt via messagebox
;                   whether or not to break
;
;    Default:  0x0000001b       (BF_ASSERT | BF_ONTRACEERROR | BF_LEAKS | BF_RIPS)
;
;    NOTE: This setting will have no effect in retail builds.

BreakFlags=0x0000001b


; TraceFlags:
;    0x0000000000000001     Always show message       TF_ALWAYS
;    0x0000000000000002     This is an error cond.    TF_ERROR
;    0x0000000000000004     This is a warning         TF_WARNING
;    0x0000000000000008     Function Entry/Exit       TF_FUNCENTER
;    0x0000000000000010     IUnknown Entry/Exit       TF_PUNKENTER
;    0x0000000000000020     Show variable             TF_VALIDATEVARS
;                           validation failures
;    0x0000000000000040     Show RIP messages         TF_RIP
;    0x0000000000000080     Show TraceResults         TF_TRACERESULT
;    0x0000000000000100     Show function name for    TF_FUNCNAMES
;                           each trace (need symbols)
;
;    0x0000000000001000     Panel related messages    TF_PANEL
;    0x0000000000002000     Place related messages    TF_PLACE
;    0x0000000000004000     Passport Login messages   TF_PPLOGIN
;    0x0000000000008000     TravelLog messages        TF_TRAVELLOG
;    0x0000000000010000     Download Manager messages TF_DLMGR
;    0x0000000000020000     Topics messages           TF_TOPICS
;    0x0000000000040000     XML Parsing messages      TF_XMLPARSING
;    0x0000000000080000     MARS protocol/store msgs  TF_PROT_STORE
;    0x0000000000100000                               TF_DYNCONTENT
;    0x0000000000200000                               TF_SCRIPT
;    0x0000000000400000                               TF_PALETTE
;    0x0000000000800000                               TF_UIACT_AND_KBD
;    0x0000000001000000     Memory usage stats        TF_MEMUSAGE
;    0x0000000002000000     dhtml Behaviors           TF_BEHAVIORS
;    0x0000000004000000     Notifications messages    TF_NOTIFICATIONS
;    0x0000000008000000     Parental Controls system  TF_PARENTALCONTROLS
;    0x0000000010000000     Mars logging              TF_LOGGING
;    0x0000000020000000     IntelliForms              TF_IFORMS
;    0x0000000040000000     Messenger                 TF_MESSENGER
;
;    Default:   0x0000000000200047      (TF_ALWAYS | TF_ERROR | TF_WARNING |
;                                        TF_RIP | TF_SCRIPT)

TraceFlags=0x0000000000200047

; If either TF_FUNCENTER or TF_PUNKENTER is set, then TraceExcludeFiles and
; TraceIncludeFiles can be used to refine the files which will have FunctionTracing
; turned on.  Note that if a TraceExcludeFiles entry is found, then the TraceIncludeFiles
; entry will be ignored.  Write file names in ALL LOWERCASE.  Full path from mars is
; only necessary if there are multiple files with the same name in different directories.
;
; TraceExcludeFiles=\marscore\panel.cpp;\marscore\external.cpp
; TraceIncludeFiles=\lib\debug.cpp


; ScriptTraceFlags
;    0x00000001     Always show message       STF_ALWAYS
;    0x00000002     This is an error cond.    STF_ERROR
;    0x00000004     This is a warning         STF_WARNING
;    0x00000008     LogScriptEvent coverage messages in debug uicvg builds
;
;    Default:       0x00000007  (STF_ALWAYS | STF_ERROR | STF_WARNING)

ScriptTraceFlags=0x00000007

; ConsoleWidth
;
; Here you can set the number of characters in your debug output console.  This is used in the
; character wrapping calculations for pretty output.  If you hate the wrapping like *foolish tnoonan*
; then you can set this to a really large value to turn off the wrapping!  Any value smaller than
; 73 characters will be read as 73 characters.
;
; Default:  80

ConsoleWidth=80


; AtlTraceFlags
;    (Application defined categories)
;    0x00000001     atlTraceUser
;    0x00000002     atlTraceUser2
;    0x00000004     atlTraceUser3
;    0x00000008     atlTraceUser4
;    (ATL defined categories)
;    0x00000020     atlTraceGeneral
;    0x00000040     atlTraceCOM
;    0x00000080     atlTraceQI
;    0x00000100     atlTraceRegistrar
;    0x00000200     atlTraceRefcount
;    0x00000400     atlTraceWindowing
;    0x00000800     atlTraceControls
;    0x00001000     atlTraceHosting
;    0x00002000     atlTraceDBClient
;    0x00004000     atlTraceDBProvider
;    0x00008000     atlTraceSnapin
;    0x00010000     atlTraceNotImpl
;
;    Default:  0x00000000

AtlTraceFlags=0x00000000

; DebugOMFlags:
;    0x00000001     Enable the debug OM     DF_OM_ENABLED
;                   functionality
;    0x00000002     Enable logging          DF_OM_LOG
;    0x00000004     Enable the console spew DF_CON_ENABLED
;                   window
;    0x00000008     waits for a keypress    DF_CON_WAITONEXIT
;                   before closing the
;                   console window
;    0x00000010     Also spew to StdOut     DF_STDOUT
;
;
;    Default:   (DF_OM_ENABLED | DF_OM_LOG | DF_CON_ENABLED | DF_CON_WAITONEXIT)

DebugOMFlags=0x0000000f


[MARS]

; BreakFlags:
;    0x00000001     Break on ASSERTs        BF_ASSERT
;    0x00000002     Break on TF_ERROR       BF_ONTRACEERROR
;    0x00000004     Break on TF_WARNING     BF_ONTRACEWARNING
;
;    Default:  0x00000001       (BF_ASSERT)

BreakFlags=0x00000001


; TraceFlags:
;    0x00000001     Always show message     TF_ALWAYS
;    0x00000002     This is an error cond.  TF_ERROR
;    0x00000004     This is a warning       TF_WARNING
;    0x00000008     Function Entry/Exit     TF_FUNCENTER
;    0x00000010     IUnknown Entry/Exit     TF_PUNKENTER
;    0x00001000     Ignore other instances  TF_OPENNEWPROCESS
;
;    Default:   0x00000007      (TF_ALWAYS | TF_ERROR | TF_WARNING)

TraceFlags=0x00000007

; ConsoleWidth
;
; Here you can set the number of characters in your debug output console.  This is used in the
; character wrapping calculations for pretty output.  If you hate the wrapping like *foolish tnoonan*
; then you can set this to a really large value to turn off the wrapping!  Any value smaller than
; 73 characters will be read as 73 characters.
;
; Default:  80

ConsoleWidth=80


; AtlTraceFlags
;    (Application defined categories)
;    0x00000001     atlTraceUser
;    0x00000002     atlTraceUser2
;    0x00000004     atlTraceUser3
;    0x00000008     atlTraceUser4
;    (ATL defined categories)
;    0x00000020     atlTraceGeneral
;    0x00000040     atlTraceCOM
;    0x00000080     atlTraceQI
;    0x00000100     atlTraceRegistrar
;    0x00000200     atlTraceRefcount
;    0x00000400     atlTraceWindowing
;    0x00000800     atlTraceControls
;    0x00001000     atlTraceHosting
;    0x00002000     atlTraceDBClient
;    0x00004000     atlTraceDBProvider
;    0x00008000     atlTraceSnapin
;    0x00010000     atlTraceNotImpl
;
;    Default:  0x00000000

AtlTraceFlags=0x00000000
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\pchealth\pchmars\marscore\parser\readme.txt ===
XML Parsing:
	To be fast, xml parsing in MARS should use IXMLParser instead of
the full IXMLDomDocument.  The IXMLDomDocument prepares a full structure
which can be walked through while the IXMLParser just calls back functions
like CreateNode and BeginChildren, allowing the client to create his own
structure or ignore the calls as it choses.

We've provided a helper class, CMarsXMLFactory, to handle the IXMLParser
callbacks.  CMarsXMLFactory communicates with you, the client, through
a CXMLElement class; you should derive your application-specific class from
CXMLElement.  The CXMLElement way is a structured way that makes it a little
simpler to handle the parsing than using the callbacks.  If you feel that it
is too restrictive, however, you should feel free to make your own callback
IXMLNodeFactory class.

CMarsXMLFactory as well as the base class CXMLElement are declared/defined
in parser.h/parser.cpp.  ALso provided is the CXMLGenericElement class, which
basically recreates the DOM all over again - you pass it allowed children and
attributes, and it will handle AddChild, SetAttribute, etc, for nodes of the
given name.  This class should only be used when you're using it on simple types
like <name> or <width> or something; I suggest you do not use it on any tag type
with a large amount of semantic content; implement those yourself!

An example using the CMarsXMLFactory is some code used to load the mars panel
scheme from an xml file.  That code is in marsload.h/marsload.cpp.
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\pchealth\redist\skulist.txt ===
#
# <SKU> <Cabinet> <ProdFilt> <Desktop flag> <Server flag> <Embedded flag>
#
Personal_32            pchdt_p3.cab  @p:@3:       true   false  false
Professional_32        pchdt_w3.cab  @w!p:@3:     true   false  false
Server_32              pchdt_s3.cab  @s!e!b!l:@3: false  true   false
Blade_32               pchdt_b3.cab  @b:@3:       false  true   false
SmallBusinessServer_32 pchdt_l3.cab  @l:@3:       false  true   false
AdvancedServer_32      pchdt_e3.cab  @e!d:@3:     false  true   false
DataCenter_32          pchdt_d3.cab  @d:@3:       false  true   false
#	
#Personal_64           pchdt_p6.cab  @p:@6:       true   false  false
Professional_64        pchdt_w6.cab  @w!p:@6:     true   false  false
#Server_64             pchdt_s6.cab  @s!e!b:@6:   false  true   false
#Blade_64              pchdt_b6.cab  @b:@6:       false  true   false
AdvancedServer_64      pchdt_e6.cab  @e!d:@6:     false  true   false
DataCenter_64          pchdt_d6.cab  @d:@6:       false  true   false
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\pchealth\redist\how_to_add_a_new_sku_to_the_system.rtf ===
{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fnil\fcharset0 Courier New;}} {\colortbl ;\red255\green0\blue0;\red128\green0\blue128;\red0\green128\blue128;} \viewkind4\uc1\pard\lang1033\b\f0\fs32\par To introduce a new SKU to the system, you need to follow these steps:\b0\fs40\par \fs20\par 1) Select a new unique identifier for the SKU, like \cf1 WebServer_32\cf0  or \cf1 Personal_64\cf0 , and a unique file name, like \cf1 pchdt_t3.cab\cf0 .\par 2) Edit the file \cf2 $/admin/pchealth/redist/SKUlist.txt\cf0 , where you have to insert a new record, to describe the changes.\par    The record must be in the form "<SKU> <Cabinet> <ProdFilt> <Desktop flag> <Server flag> <Embedded flag>":\par    \par       \cf1 WebServer_32 \cf0 pchdt_\cf1 t3\cf0 .cab\tab\cf1 @t:@3:\cf0  \cf1 false true \cf0 false\par    Remember that the cabinet name is the new file that will be added to the build,\par    the prodfilt is used during build to convert the .INX to an .INF and\par    the boolean flags determine the type of the SKU (DESKTOP or SERVER).\par 3) Create a new HHT package for the SKU database. This package will live under a sub-directory of\par      \cf2 $/admin/pchealth/HelpCtr/Content/database/\par \cf0\par    The directory is normally named after the SKU id:\par      \cf2 $/admin/pchealth/HelpCtr/Content/database/\cf1 WebServer_32\par \cf0\par    The HHT package (normally called 'hcdata.cab') must be compliant with the HCUpdate specifications, see these XML schemas:\cf2\par      $/admin/pchealth/HelpCtr/Content/XML_Schema/Package_Description.dtd\par      $/admin/pchealth/HelpCtr/Content/XML_Schema/HHT.dtd\cf0\par    In the required 'package_description.xml' file, update the \cf3 PRODUCT[@ID]\cf0 , \cf3 SKU[@VALUE] \cf0 and \cf3 SKU[@DISPLAYNAME] \cf0 and make sure the HHT file list is correct:\par \tab <?xml version="1.0" ?>\par \tab <HELPCENTERPACKAGE>\par \tab\tab <VERSION VALUE="1.0" />\par \tab\tab\cf1 <PRODUCT ID="Whistler_WB" />\par \tab\tab <SKU VALUE='WebServer_32' DISPLAYNAME='Whistler Web Server'/>\par \cf0\tab\tab <LANGUAGE VALUE='1033'/>\par \cf1\tab\tab <METADATA>\par \tab\tab\tab <HHT FILE="WebServer_32.hht" />\par \tab\tab\tab <HHT FILE="ToolsCtr.hht" />\par \tab\tab </METADATA>\cf0\par \tab </HELPCENTERPACKAGE>\par 4) Edit the file \cf2 $/admin/pchealth/setup/lst/helpctr.lst \cf0 to insert a new record for the SKU:\par \tab CompHC_db HCdata.cab HCdata.edb HCdat_\cf1 t3\cf0 .edb Database HHT \cf1 WebServer_32 \cf0 $HC_DB/\cf1 WebServer_32\cf0\par 5) Go to \cf2 $/admin/pchealth/setup \cf0 and execute the command:\par \tab createsetup all\par    The command will update three files:\par \cf2\tab $/admin/pchealth/redist/SetupImage.lst\par \tab $/MergedComponents/SetupInfs/PCHealth.inx\par \tab $/MergedComponents/SetupInfs/usa/PCHealth.txt\cf0\par 6) Edit the file \cf2 $/MergedComponents/SetupInfs/layout.inx\cf0 , to make sure that the new pchdt_*.cab is included in the build.\par    You should use the same prodfilt flags as in pchealth.inx:\par       \cf1 @t:@3\cf0 :pchdt_\cf1 t3\cf0 .cab\par 7) Edit the file \cf2 $/MergedComponents/SetupInfs/pchmui.inx\cf0  and apply similar changes:\par \tab [SourceDisksFiles]\par \tab ...\par \tab\cf1 @t:@3:\cf0 pchdt_\cf1 t3\cf0 .cab=55\par \tab ...\par \tab [DB.files.install]\par \tab ...\par \tab\cf1 @t:@3:\cf0 pchdt_\cf1 t3\cf0 .cab,pchdt_\cf1 t3\cf0 .cab.mu_\par \tab ...\par \tab [RunPostSetupCommandsSection] \par \tab ...\par \tab\cf1 @t:@3:\cf0 "%10%\\PCHealth\\HelpCtr\\Binaries\\HelpSvc /MUI_install %LCID% %10%\\PCHealth\\MUI\\%LCID%\\pchdt_\cf1 t3\cf0 .cab"\par \tab ...\par 8) Edit the file \cf2 $/admin/pchealth/build/placefile\cf0 , to binplace the new file:\par       pchdt_\cf1 t3\cf0 .cab          retail      ; --NOT-LOCALIZED--\par 9) Go to \cf2 $/admin/pchealth/redist \cf0 and create a new sub-directory "sku_<new ID>", using the others as a template (three files).\par    The file "makefile.inc" needs to be updated to use the new ID:\par    \tab HssSetupTool.exe -root $(_NTPOSTBLD)\\build_logs -log hss_\cf1 wb\cf0 .log -dblog createdb_\cf1 wb\cf0 .log COMPILE $(_NTTREE) \cf1 WebServer_32\par \cf0\par    The file "sources" needs to be updated to binplace the proper cabinet:\par MISCFILES = \\\par !if $(386)\par     $(O)\\pchdt_\cf1 t3\cf0 .cab\par !elseif $(WIN64)\par !endif\par 10) Edit \cf2 $/admin/pchealth/redist/dirs\cf0 , to build the new directory.\par 11) Finally edit the postbuild script: \cf2 $/tools/postbuildscripts/helpsupportservices.cmd\par \cf0\tab if ( $platform =~ /x86/i )\par \tab\{\par \tab     &ConditionalCompileSKU( "per", "Personal_32"      , "pchdt_p3.cab"    ) or exit( 1 );\par \tab     &ConditionalCompileSKU( "pro", "Professional_32"  , "pchdt_w3.cab"    ) or exit( 1 );\par \tab     &ConditionalCompileSKU( "bla", "Blade_32"         , "pchdt_b3.cab"    ) or exit( 1 );\par \cf1\tab     &ConditionalCompileSKU( "wb" , "WebServer_32"     , "pchdt_t3.cab"    ) or exit( 1 );\cf0\par \tab     &ConditionalCompileSKU( "srv", "Server_32"        , "pchdt_s3.cab"    ) or exit( 1 );\par \tab     &ConditionalCompileSKU( "ads", "AdvancedServer_32", "pchdt_e3.cab"    ) or exit( 1 );\par \tab     &ConditionalCompileSKU( "dtc", "DataCenter_32"    , "pchdt_d3.cab"    ) or exit( 1 );\par \tab\}\par     The first parameter should match the one in \cf2 $/tools/prodskus.txt\par \cf0\par To test the whole thing:\par \tab cd %SDXROOT%\\admin\\pchealth\par \tab scorchtree\par \tab cd %SDXROOT%\\admin\\pchealth\\helpctr\\rc\\content\par \tab build /cZP\par \tab cd %SDXROOT%\\admin\\pchealth\\helpctr\\pss\\content\par \tab build /cZP\par \tab cd %SDXROOT%\\admin\\pchealth\\redist\par \tab build /cZP\par     The logs will be created under \cf2 %_NTPOSTBLD%\\build_logs\cf0\par
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\pchealth\sr\kernel\srdesign.rtf ===
{\rtf1\ansi\ansicpg1252\deff0\deflang1033\deflangfe1033{\fonttbl{\f0\fswiss\fprq2\fcharset0 Verdana;}{\f1\fswiss\fprq2\fcharset0 Arial;}{\f2\fnil\fcharset2 Symbol;}} \viewkind4\uc1\pard\nowidctlpar\b\f0\fs20 Microsoft Confidential\par Author\b0 : Paul McDaniel (paulmcd)\par \b Created\b0 : August 15, 2000\par \b Last Updated\b0 : August 17, 2000\par \ul\b Title\b0 : System Restore filter driver design spec\par \ulnone\par \b type of driver\par \b0 the sr driver is a io filter driver.  this means it attaches to a device and intercepts all IoCallDriver calls to that device.  in our case the device's we attach to are file systems and volumes.\par \b attachment to file systems\par \b0 first we attach to 2 file system device's, ntfs and fastfat. this is done via IoRegisterFsRegistrationChange so that we are notified of all online file systems.  we do not attach to all of them, we only attach to these 2.\par \b attachment to volumes\par \b0 then we attach to all volumes mounted by these file systems.  this is done by first attaching to all currently mounted volumes by enumerating them with the mount mgr.  this is done in DriverEntry.  Then future mounts are caught by monitoring IRP_MN_MOUNT_VOLUME requests on the file systems main devices.  when we notice a successful mount we attach to that volume.  we only attach to volumes of type FILE_DEVICE_DISK_FILE_SYSTEM, and with characteristics of !FILE_REMOVABLE_MEDIA.  we detach from these volumes only when they are IoDelete'd.  we get FastIoDetach notification and unhook ourselves.  \par per volume state is kept in the driver's device extension that is attached to the volume device.  here we keep several flags like disabled and drivechecked.  if the volume is disabled we ignore all operations on the volume in a fast manner.  drivechecked is used to cause us to lazy init the structures (in memory and on disk) and open our log handles.\par \b monitoring io\par \b0 we monitor io in 2 manners, IRP's and fastio.  \par \b\par \b0 fastio:\par \pard\nowidctlpar\li380 we pass through all fast io without any additional processing except for these 2:\par \ul fastiowrite\par \ulnone here we trigger a WRITE event and handle it as the first write to the file.  this catches all writes before the cache manager ever sees them (if the file was cached) and allows us to ignore later io that might happen after the file's handles are closed (cache/page io) .\par \pard\nowidctlpar\li760\par \pard\nowidctlpar\li380\ul acquireforntcreatesection\par \ulnone we hook this (via the device's driver) and trigger a WRITE event if the FILE_OBJECT was opened with write access.  this is because a writeable section is being created and we have no way of intercepting writes to know if they write to that section.  i investigated letting the section be written to, and catch mm flushing it, but this was very complicated and uncertain if it would work due to locks held and the fact that the file handle can be closed when these are paged out.\par \pard\nowidctlpar\par irps:\par \pard\nowidctlpar\li380 we pass through all irps without any additional processing except for these 7.  also we skip files with no name or volume/device opens everywhere except create.\par \pard\nowidctlpar\par \pard\nowidctlpar\li380\ul irp_mj_write\ulnone\par here we trigger a WRITE event.\par \ul irp_mj_cleanup\ulnone\par here we trigger a DELETE event if the file was deleted (has a delete pending)\par \ul irp_mj_create\ulnone\par here we have to handle some work before and after the create. if the create is an create_always and it's not a directory (it's illegal to create_always directories) we trigger a OVERWRITE event prior to letting the fsd see the create, as it might potential destroy a file.\par after the fsd see's the create, if it's any type of create (open_always, create_always, etc..) we set a completion routine and post process the create (logging or rollback).\par \ul irp_mj_setinformation\ulnone\par here we trigger WRITE events on file truncations, RENAME events on renames, ATTRIB_CHANGE on set basic info, or CREATE events for hardlink creation.  hardlink create logging and one piece of rename happed after the fsd see's the irp but does not use a completion routine.\par \ul irp_mj_setsecurity\ulnone\par here we trigger a ACL_CHANGE event.\par \ul irp_mj_fscontrol\ulnone\par we use set a completion routine if it's a mount, and attach in the completion routine after the fsd mounts it.  we handle reparse mounts and trigger MOUNT events, and trigger a WRITE event if a write_raw comes through.  on locks and dismounts we close all open log handles on the volume, and set the volume context so that handle will be reopened automatically if needed.\par \ul irp_mj_shutdown\ulnone\par we close out our _driver.cfg (see config).\par \pard\nowidctlpar\b volume disk structures\b0\par each volume has a \\system volume information dir.  if it's not there sr.sys create's it hidden with system acl's , non-inherit.  in that volume a _restore\{guid\} is created.  each volume that is participating in the restore point has one.  this is created by the driver.  in this dir are 2 files the driver uses and 1 file the service uses.  there are subdir's for each restore point also.  the driver creates these.  they have acl's for everyone full access.  the driver also creates and maintains a log file in each restore point dir.  this is usually named change.log but has an advanced naming scheme (see logging)\par \b configuration data\par \b0 we have some config data in the regsitry and on disk.\par registry\\hklm\\sys\\ccs\\svcs\\sr\\parameters\\\b machineguid\b0  [ reg_sz ] the machine's guid.\par registry\\hklm\\sys\\ccs\\svcs\\sr\\parameters\\\b firstrun\b0  [ dword ] 1 = startup disabled, no monitoring.\par registry\\hklm\\sys\\ccs\\svcs\\sr\\parameters\\\b debugcontrol\b0  [ dword ] tracing flags and other debug control.  0 = silent (like fre)\par valid trace flags are:\par \pard\nowidctlpar\li720 #define SR_DEBUG_FUNC_ENTRY           \tab 0x00000001\par #define SR_DEBUG_CANCEL                   \tab 0x00000002\par #define SR_DEBUG_NOTIFY                    \tab 0x00000004\par #define SR_DEBUG_REF_COUNT             \tab 0x00000008\par #define SR_DEBUG_INIT                      \tab 0x00000020\par #define SR_DEBUG_HASH                       0x00000040\par #define SR_DEBUG_LOOKUP                   \tab 0x00000080\par #define SR_DEBUG_LOG                        \tab 0x00000100\par #define SR_DEBUG_RENAME                  \tab 0x00000200\par \pard\nowidctlpar\fi-720\li1440 #define SR_DEBUG_BREAK_ON_ERROR   \tab 0x00010000\par \pard\nowidctlpar\li720 #define SR_DEBUG_VERBOSE_ERRORS   \tab 0x00020000\par #define SR_DEBUG_BREAK_ON_LOAD     \tab 0x00040000\par #define SR_DEBUG_ENABLE_UNLOAD     \tab 0x00080000\par #define SR_DEBUG_ADD_DEBUG_INFO   \tab 0x00100000\par \pard\nowidctlpar\par registry\\hklm\\sys\\ccs\\svcs\\sr\\parameters\\\b dontbackup\b0  [ dword ] 1=monitor all io but don't copy and don't log.\par *\\system volume information\\_restore\{\}\\\b _driver.cfg\b0  = contains a SR_PERSISTENT_CONFIG 3 numbers, current restore point, current temp file number, and current log sequence number.  these are the only 3 values that cannot be in the registry as they must not be changed when a restore happens and rolls the registry back.\par *\\system volume information\\_restore\{\}\\\b _filelst.cfg\b0  = contains a self-relative hash list and tree built from %systemroot%\\system32\\restore\\filelist.xml .  this is the list of file extensions and paths to exclude.  this is about 20kb and loaded into ram by the driver.\par \b managing open file handles\b0\par we close all open volume handles on lock or dismounts so that chkdsk or format and other tools that lock volumes can run with sr running.  we mark the volume context as not being checked so that next io will trigger a CheckVolume to open the handle.  the only open handle we have are for the current change.log file.  we do not have open handles for _driver.cfg or _filelst.cfg .  we do not monitor for change notif on _filelst.cfg .\par \b deciding if a file is interesting\b0\par first the extension is checked against a list of INCLUDED extensions from the _filelst.cfg file.  if it is not matching, the file is ignored.  all directories pass this check as they are interesting regardless of extension.\par second path exclusions are processed from the _filelst.cfg file.  this allows us to exlude directories like \\temp and \\system volume information .  both files and directories can be excluded here.\par third the backup history is examined to decide if we should be interested in this file still.  see the later chapter on the backup history.\par \b handling events\par \b0\par files are places in the restore point location (\\svi\\_restore\{\}\\rp5) of the form ANNNNNNN.xxx where N is a ever incrementing number and xxx is the extension of the original file.  a log entry is made for the operation which stores the source file and the backup file fullpath.  it also stores the attribs + security descriptor for the file if a backup file was placed.  the backup file has the same streams the source file had, the same DACL the source file had, the same attribs the source file had (with compressed being added even if it wasn't there).  if the backup file is copied (vs renamed) non-cached file io is done in 64kb blocks.  \par the copy is made using the caller's file object, so IRP based reads are issued instead of NtReadFile to force non cached io.\par directories have no corresponding backup file.  activity on directories are simply logged.  meta data not put into the log entry is lost (like alternate data streams on directories) .  acls + attribs are put in the log entry just like files.\par \ul WRITE\ulnone\par a simple copy of the file is made and logged.\par \ul DELETE\ulnone\par the driver catches deletes on cleanup when the handle that deleted it is going away.  meaning no more io can come from that handle.  the driver checks that no other handles are opened and no hardlinks exist to this file. if they are not, it undeletes the file and renames it into the restore location.  otherwise the file is copied.\par \line\ul OVERWRITE\ulnone\par overwrites are handled prior to the fsd seeing the mj_create.  the driver opens the dest file itself first, passing in the same params as the caller, running in the same context as the caller, asking for FILE_GENERIC_WRITE as this is require for overwrite.  if the driver can open this file (it uses OBJ_FORCE_ACCESS_CHECK to force the check) then it assumes the caller's overwrite will succeed and it renames the dest file prior to the overwrite occurring.  in order to not change the behavior of the overwrite + disposition flags, the driver creates a zero byte dummy file matching the same attribs (system+hidden) and the same security descriptor as the original file.  then it allows the overwrite to happen and the zero byte file will be destroyed.  if for some unforeseen reason the driver renames the file but the callers overwrite fails, the driver will rename it back in the completion routine for mj_create. this should theoretically never happen as the driver performs the access check.  it handles the failure just in case it does happen.  \par it also handles preserving the directory's not-empty status but creating a temp file in the dir named (4bf03598-d7dd-4fbe-98b3-9b70a23ee8d4).  this is a zero byte , delete-on-close file that is there simply to make sure the directory is not delete'able, that is: non-empty.\par \ul RENAME\ulnone\par renames need to check the interesting flag of the old name and the new name.  it also behaves differently if it's a file or directory being renamed.\par [old_intersting,new_interesting]\par \pard{\pntext\f2\'B7\tab}{\*\pn\pnlvlblt\pnf2\pnindent0{\pntxtb\'B7}}\nowidctlpar\fi-380\li380 t,t: the rename is simply logged.  no temp file is created.  both for files + directories.\par {\pntext\f2\'B7\tab}t,f: for files a delete event is logged and a backup file is made.  directories are enumerated and all interesting subfiles are logged + backed up.\par {\pntext\f2\'B7\tab}f,t: for files a create event is logged and no backup file is made. directories are enumerated and all interesting subfiles are logged as creates with no backup files made.\par {\pntext\f2\'B7\tab}f,f: this event is ignored.\par \pard\nowidctlpar\par \ul OTHER\ulnone\par all other interesting events simply get logged to the change log.\par \b\par backup history\par \b0\par we maintain a hash table that is used to decide if we have already handled an event and can ignore subsequent events as we have a backup file already.  this table is single key'd off of the full path nt file name and is non-persistent.\par if an event is in the backup history, it is always ignored.  the driver checks prior to putting the event in the history if it's ok to ignore it.  \par DELETE is the only event we might ignore, but always log.  all other events are not logged if they are ignored.\par the following text describes what events cause what history to be entered.\par \pard{\pntext\f2\'B7\tab}{\*\pn\pnlvlblt\pnf2\pnindent0{\pntxtb\'B7}}\nowidctlpar\fi-380\li380 ATTRIB_CHANGE or ACL_CHANGE causes subsequent ATTRIB_CHANGE or ACL_CHANGE to be ignored.\par {\pntext\f2\'B7\tab}WRITE or CREATE or DELETE causes subsequent WRITE and ACL_CHANGE and ATTRIB_CHANGE and DELETE to be ignored.\par \pard\nowidctlpar\par \b resetting the backup history\par \b0 the backup history is completely reset when a new restore point is created or the machine is reboot.\par renames can also trigger a backup history reset as when a file is given a new name, any history we have for that new name was for a different file.  not the file that is just getting that new name.  since we log and don't backup renames within monitored space, it's crucial that we clear the backup history for any new names files are given via rename.\par likewise, if a directory is renamed, all backup history items that prefix match the new directory's name  are reset, as these no longer represent the same files but totally new files.\par \b ioctls\par \b0 the driver creates a device named "\\FileSystem\\SystemRestoreFilter" that user mode agents can open to perfom control device ioctls.\b   \b0 only one open handle at a time is allowed to this control object.  the driver has 8 ioctls it responds to.\par \ul SR_CREATE_RESTORE_POINT [METHOD_BUFFERED]\par \ulnone this takes in nothing on input, and returns a ULONG on output.  it 1) creates a new restore point and returns the new restore point number, 2) creates the actual restore point directory on the system drive, it does this even if drives are disabled, 3) it closes all of the now old log files on all volumes, 4) clears the backup history.  never returns PENDING.\par \ul SR_RELOAD_CONFIG [METHOD_NEITHER]\par \ulnone no inputs or outputs.  it reloads the _filelst.cfg file and resets all volume metadata (re-enabling them if they were disabled). never returns PENDING.\par \ul SR_START_MONITORING [METHOD_NEITHER]\par \ulnone no inputs or outputs.  this temporarily starts the driver monitoring.  use this if either the driver started disabled (Registry\\...\\FirstRun = 1) or STOP_MONITORING was explicitly called.  it does not change registry load settings. never returns PENDING.\par \ul SR_STOP_MONITORING [METHOD_NEITHER]\par \ulnone no inputs or outputs.  this temporarily disables the driver.  it does not unload or change registry load settings.  this causes the _filelst.cfg to be unloaded such that start will reload it. it also stops logging on all volumes and resets their metadata.  never returns PENDING.\par \ul SR_WAIT_FOR_NOTIFICATION [METHOD_OUT_DIRECT]\par \ulnone\par this takes no inputs and returns a SR_NOTIFICATION_RECORD. this is how the user mode agent can receive notifications from the driver.  post async calls to this ioctl, and they will be completed when the driver has an interesting event, notification events are  \{volume error, volume first write, volume 25mb written\}. this can return PENDING if there are no notifications ready to serve up.\par this means that the driver with queue irp's that it pend's and complete them as notifications come in.  these irp's are cancelable so that app is allowed to close it's handle or terminate at any time.\par the driver also queue's notifications if and only if there is an open handle to it's control object.  this means that if there are any notifications that happen while there were no irp's pended, the will be queued and the next irp sent down will get this notification, so the user mode agent does not have to worry about missing notifications.\par \ul SR_SWITCH_LOG [METHOD_NEITHER]\par \ulnone\par no inputs or outputs.  closes log files on all volumes and opens new ones.  this allows you to process the old (previously opened) logfiles. never returns PENDING.\par \ul SR_DISABLE_VOLUME [METHOD_BUFFERED]\par \ulnone\par takes as input the null terminated nt name of the volume to disable, the input length must include the null terminator.  no outputs.  it disables the volume, stopping logging, etc.. never returns PENDING.\par \ul SR_GET_NEXT_SEQUENCE_NUM [METHOD_BUFFERED]\ulnone\par no inputs.  returns an INT64 as output which is the next sequence number used in the change log file. never returns PENDING.\par \b logging\par \b0\f1 the driver creates a log entry for each operation that is interesting (see above) .  this is kept in a change.log file in the restore point location.  this is created on-demand during the first write to that volume.\par the file is essentially composed of 8kb blocks, filled with 1 or more records.  the first and last 4 bytes of a record contains it's length in bytes.  records contain a header and a linear array of subrecords.  the first 4 bytes of a subrecord contains it's length in bytes.  \par the very first record in the file is a log header record.  this contains 1 subrecord which is the full nt path to the change.log file .\par the rest of the records are always log entry records.  these contain a variable number of subrecords.  choices are :\par     RecordTypeFirstPath  = 3,     \tab // Log Entry First Path  ( SubRec )\par     RecordTypeSecondPath = 4, \tab // Log Entry Second Path ( SubRec )\par     RecordTypeTempPath   = 5,  \tab // Log Entry Temp File   ( SubRec )\par     RecordTypeAclInline  = 6,     \tab // Log Entry ACL Info    ( SubRec )\par     RecordTypeAclFile    = 7,     \tab // Log Entry ACL Info    ( SubRec )\par     RecordTypeDebugInfo  = 8,   \tab // Option rec for debug  ( SubRec )\par     RecordTypeShortName  = 9,\tab // Option rec for short names ( SubRec )\par these subrecords except for RecordTypeFirstPath are optional and are always in the same order if present.  in order to detect if a particular subrecord is present you can read the Record.EntryFlags which has a flag for each optional subrecord.  the flag is set if the subrecord is present.  current flag definitions the order of their presence in the record:\par #define ENTRYFLAGS_TEMPPATH    \tab 0x01\par #define ENTRYFLAGS_SECONDPATH  \tab 0x02\par #define ENTRYFLAGS_ACLINFO     \tab 0x04\par #define ENTRYFLAGS_DEBUGINFO   \tab 0x08\par #define ENTRYFLAGS_SHORTNAME  \tab 0x10\par all records are always less than 8kb in total size.  if the acl subrecord is too large to fit in the 8kb, then it is stored in a seperate file with the naming convention "SNNNNNNN.acl" and the path to this file is stored in the subrecord.  \par \b caching log record writes\b0\par the driver writes records to an in memory 8kb buffer which is flushed to disk in it's entirety every 5 seconds via a time triggered DPC.  it is flushed only if it is dirty.  there is 1 DPC routine that enumerates all of the volumes and initiates the flush on each volume, there is not a DPC/timer per volume.\par note: this is done such that if a 100 byte record is logged (to memory), 5 seconds later the 8kb buffer will be flushed to disk even though only 100 bytes are valid.  the 8kb buffer is always zero pre-filled so all invalid data contains zeros .  when another 100 bytes are appended to the in memory buffer, the entire 8kb is flushed in the next DPC (even though the previous 100 bytes where already written and only 200 bytes are valid in this 8kb buffer).  all writes are done non-cached.\par the driver moves on to the next 8kb block only when a record will not fit in the current 8kb block.  at this point the 8kb block is force flushed to disk (not via DPC) and then the file pointer is advanced to the next 8kb block and the cycle restarts.  this means there might be unused space at the end of an 8kb block. there is no record data here.  a parsing tool can detect this by either a) seeing there is less than 4 bytes remaining in the 8kb block, or b) the next record length is zero (4 bytes).  at this point the parser needs to advance to the next 8kb block.\par \b log switching\par \b0\par the log file is switched on several events.  first, it is switched every time logging is started.  logging is stopped on system shutdown, volume lock/dismount, SR_DISABLE_VOLUME and SR_STOP_MONITORING.  second it is switched on a SR_SWITCH_LOG.  third is is switched prior to writing a record if that record will cause the file to exceed 1mb.  this means that all change.log files are gauranteed to be less than or equal to 1mb.\par when a log is switched it is renamed to change.log.N where N is the next free number.  so if the log has been changed once there will be a change.log and a change.log.1.  change.log is always the most current log, the file with the largest extension is the second most current log, and so on.\par \b\f0 Microsoft Confidential\b0\f1\par
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\pchealth\sr\nttest\srdiag\cabbit_readme.txt ===
**************************************
***  SR/SFP Test Tool: CABBIT.EXE  ***
***				   ***
***   Owner: 	a-fprado           ***
***   Created: 	9-15-99	           ***
**************************************


==================
==== Purpose  ====
==================
Gathers SFP/SR files (or other specific file) and Creates a cabinet file with the existing ones. 
Also dumps the whole Changelog to a text file which is later gathered.


Default files are:

%windir%\system\sfp\sfpdb.sfp
%windir%\system\\sfp\sfplog.txt
%windir%\system\restore\\filelist.xml
%windir%\wininit.ini
%windir%\wininit.bak
%windir%\wininit.err
%windir%\wininit.log
%windir%\system\restore\datastor.ini
%windir%\system\restore\rstrlog.dat
%windir%\system\restore\\rstrmap.dat

<DSRoot>\logs\restorept.log
<DSRoot>\logs\vxdsfp.log
<DSRoot>\dsinfo.dat
<DSRoot>\vxdmon.dat

<CurrentDirectory>\changelog.txt
<CurrentDirectory>\Cabbit.log
 
OR

It creates a cab file with specific files passed in from the command line <file1> <file2>......

===================
===   USAGE    ====
===================

Cabbit.exe [<file1> <file2> ...<fileN>] [/f: <MyOwnFileName>.CAB | [/a: <AppendFileName>.CAB] [/w: <millisecs>]

Command Line Parameters:
	None - Creates a cab file with the default file name: <ComputerName>_ddmmyyHHMMSS.CAB \n");
	<file1>...<fileN>  - Additional Files to be added.

Switches:
	/f: <MyOwnFileName>.CAB  Creates a Cabfile with this Filename.
	/a: <Suffix>.CAB         Creates a Cabfile Appending <Suffix> to the default Filename above.
	/w: <n> 		 Time  Waits for InitChglogAPI for <n> milliseconds. This option must precede options"/f:" or "/a:".


=====================
Examples of Usage:
=====================

A) c:\>Cabbit.exe

Cabbit.exe will generate a cabfile containing default files and name with the format:   
<ComputerName>_mmddyyHHMMSS.CAB

 Where mmddyy represents the date, and HHMMSS is the system time when the cab file was generated.
 ie. JOHNDOE5_102199125930.CAB


B) c:\>Cabbit.exe <file1> <file2> <fileN> /f: <MyCabfileName>.CAB

Generates a cabfile with containing ONLY the files <file1> <file2>....<fileN> and names it: 
 <MyCabfileName>.CAB
 
ie. MyOwnCabFileName.CAB


C) d:\>Cabbit.exe <file1> <file2> <fileN> /a: <Suffix>.CAB

Cabbit.exe will generate a cabfile containing default files and name it with the format:   
<ComputerName>_mmddyyHHMMSS_<Suffix>.CAB

ie. JOHNDOE5_102199125930_BVT.CAB


=========================
====  Drop Location  ====
=========================

\\mpc\latest\English\tests\RETAIL\x86\Client\Restore\TstTools\Cabbit
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\pchealth\sr\setup\filelist.xml ===
<PCHealthProtect>
    <VERSION>1.0</VERSION>
    <DEFTYPE>E</DEFTYPE>
    <FILES>
        <Exclude>
            <REC>%windir%\system.ini</REC>
            <REC>%windir%\tasks\desktop.ini</REC>
            <REC>%windir%\win.ini</REC>
            <REC>*:\AUTOEXEC.BAT</REC>
            <REC>*:\CONFIG.MSI</REC>
            <REC>*:\CONFIG.SYS</REC>
        </Exclude>
	<Include>
	    <REC>c:\placeholder\ph.dll</REC>
        </Include>
    </FILES>
    <DIRECTORIES>
        <Exclude>
            <REC>%cookies%</REC>
            <REC>%favorites%</REC>
            <REC>%History%</REC>
            <REC>%internetcache%</REC>
            <REC>%nethood%</REC>
            <REC>%personaldocuments%</REC>
            <REC>%ProgramFiles%\WindowsUpdate</REC>
            <REC>%windir%\Downloaded Program Files</REC>
            <REC>%windir%\Offline Web Pages</REC>
            <REC>%windir%\PCHealth\HelpCtr\Config</REC>
            <REC>%windir%\PCHealth\HelpCtr\Database</REC>
            <REC>%windir%\PCHealth\HelpCtr\DataColl</REC>
            <REC>%windir%\PCHealth\HelpCtr\System</REC>
            <REC>%windir%\PCHealth\HelpCtr\Vendors</REC>
	    <REC>%windir%\pchealth\ErrorRep\UserDumps</REC>
            <REC>%windir%\prefetch</REC>
            <REC>%windir%\temp</REC>
            <REC>*:\~MSSETUP.T</REC>
            <REC>*:\$WIN_NT$.~LS</REC>
            <REC>*:\$WIN_NT$.~BT</REC>
            <REC>*:\System Volume Information</REC>
            <REC>*:\SIS Common Store</REC>
            <REC>*:\TEMP</REC>
            <REC>*:\TMP</REC>
            <REC>*:\W95UNDO.INI</REC>
            <REC>*:\W98UNDO.INI</REC>
            <REC>*:\W9XUNDO.INI</REC>
            <REC>*:\WININST0.400</REC>
            <REC>*:\WINLFN.INI</REC>
            <REC>*:\WINUNDO.INI</REC>
            <REC>%SRDataStoreRoot%</REC>
	    <REC>%windir%\system32\wbem\repository</REC>
	    <REC>%windir%\system32\wbem\repository.tmp</REC>
	    <REC>%windir%\system32\wbem\repository.bak</REC>
	    <REC>%SystemDrive%\Documents And Settings\All Users\Favorites</REC>
	    <REC>%SystemDrive%\Documents And Settings\All Users\Documents</REC>
	    <REC>%SystemDrive%\Documents And Settings\Default User\My Documents</REC>
	    <REC>%SystemDrive%\Documents And Settings\Default User\NetHood</REC>
	    <REC>%SystemDrive%\Documents And Settings\Default User\Favorites</REC>
	    <REC>%SystemDrive%\Documents And Settings\Default User\Cookies</REC>
	    <REC>%SystemDrive%\Documents And Settings\Default User\Cache</REC>
	    <REC>%SystemDrive%\Documents And Settings\Default User\Local Settings\History</REC>
	    <REC>%SystemDrive%\Documents And Settings\Default User\Local Settings\Temp</REC>
	    <REC>%SystemDrive%\Documents And Settings\Default User\Local Settings\Temporary Internet Files</REC>

        </Exclude>
        <Include>
            <REC>*:\Documents And Settings\*\Application Data\Microsoft\Internet Explorer\Quick Launch</REC>
        </Include>
    </DIRECTORIES>
    <EXTENSIONS>
        <Include>
            <REC>~~C</REC>
            <REC>~~D</REC>
            <REC>12A</REC>
            <REC>1PA</REC>
            <REC>1ST</REC>
            <REC>386</REC>
            <REC>8BA</REC>
            <REC>8BY</REC>
            <REC>8LI</REC>
            <REC>A2A</REC>
            <REC>AAS</REC>
            <REC>AAX</REC>
            <REC>ABM</REC>
            <REC>ABR</REC>
            <REC>ACF</REC>
            <REC>ACG</REC>
            <REC>ACO</REC>
            <REC>ACS</REC>
            <REC>ADK</REC>
            <REC>ADW</REC>
            <REC>ADX</REC>
            <REC>AFM</REC>
            <REC>AID</REC>
            <REC>AIP</REC>
            <REC>ALT</REC>
            <REC>AM</REC>
            <REC>AMB</REC>
            <REC>APL</REC>
            <REC>APM</REC>
            <REC>APP</REC>
            <REC>APV</REC>
            <REC>AR</REC>
            <REC>ARX</REC>
            <REC>AS</REC>
            <REC>AT</REC>
            <REC>ATC</REC>
            <REC>ATL</REC>
            <REC>ATM</REC>
            <REC>ATN</REC>
            <REC>AW</REC>
            <REC>AWE</REC>
            <REC>AWX</REC>
            <REC>AX</REC>
            <REC>B0</REC>
            <REC>BAT</REC>
            <REC>BCF</REC>
            <REC>BD</REC>
            <REC>BDR</REC>
            <REC>BE</REC>
            <REC>BGB</REC>
            <REC>BGR</REC>
            <REC>BID</REC>
            <REC>BIT</REC>
            <REC>BK1</REC>
            <REC>BLD</REC>
            <REC>BM</REC>
            <REC>BMA</REC>
            <REC>BND</REC>
            <REC>BNF</REC>
            <REC>BOF</REC>
            <REC>BPP</REC>
            <REC>BPT</REC>
            <REC>BPX</REC>
            <REC>BT</REC>
            <REC>BTN</REC>
            <REC>BUC</REC>
            <REC>CAG</REC>
            <REC>CAO</REC>
            <REC>CAT</REC>
            <REC>CBS</REC>
            <REC>CC</REC>
            <REC>CF</REC>
            <REC>CFG</REC>
            <REC>CHA</REC>
            <REC>CIK</REC>
            <REC>CL</REC>
            <REC>CLW</REC>
            <REC>CLX</REC>
            <REC>CLY</REC>
            <REC>CMD</REC>
            <REC>CNT</REC>
            <REC>CNV</REC>
            <REC>COL</REC>
            <REC>COM</REC>
            <REC>CPB</REC>
            <REC>CPL</REC>
            <REC>CQM</REC>
            <REC>CR</REC>
            <REC>CRL</REC>
            <REC>CRS</REC>
            <REC>CRV</REC>
            <REC>CS</REC>
            <REC>CSB</REC>
            <REC>CSI</REC>
            <REC>CSL</REC>
            <REC>CSW</REC>
            <REC>CTB</REC>
            <REC>CTG</REC>
            <REC>CTY</REC>
            <REC>CUS</REC>
            <REC>CW_</REC>
            <REC>D01</REC>
            <REC>D02</REC>
            <REC>D03</REC>
            <REC>D04</REC>
            <REC>D05</REC>
            <REC>D32</REC>
            <REC>DATA</REC>
            <REC>DB0</REC>
            <REC>DB1</REC>
            <REC>DB2</REC>
            <REC>DC2</REC>
            <REC>DCA</REC>
            <REC>DCF</REC>
            <REC>DCI</REC>
            <REC>DCL</REC>
            <REC>DDB</REC>
            <REC>DDD</REC>
            <REC>DEP</REC>
            <REC>DES</REC>
            <REC>DESKLINK</REC>
            <REC>DET</REC>
            <REC>DGM</REC>
            <REC>DIALOG</REC>
            <REC>DID</REC>
            <REC>DIR</REC>
            <REC>DISABLED</REC>
            <REC>DIX</REC>
            <REC>DLL</REC>
            <REC>DOB</REC>
            <REC>DOS</REC>
            <REC>DRC</REC>
            <REC>DRS</REC>
            <REC>DRV</REC>
            <REC>DS</REC>
            <REC>DSC</REC>
            <REC>DSK</REC>
            <REC>DSN</REC>
            <REC>DSR</REC>
            <REC>DSX</REC>
            <REC>DT</REC>
            <REC>DTT</REC>
            <REC>DUN</REC>
            <REC>DVB</REC>
            <REC>DWT</REC>
            <REC>DXT</REC>
            <REC>DYNCMD</REC>
            <REC>ECF</REC>
            <REC>EFF</REC>
            <REC>EFM</REC>
            <REC>EID</REC>
            <REC>EL</REC>
            <REC>ELM</REC>
            <REC>END</REC>
            <REC>ENU</REC>
            <REC>ENV</REC>
            <REC>EOT</REC>
            <REC>EPF</REC>
            <REC>ET</REC>
            <REC>EX_</REC>
            <REC>EXA</REC>
            <REC>EXCLUDE</REC>
            <REC>EXE</REC>
            <REC>EXL</REC>
            <REC>F32</REC>
            <REC>FAE</REC>
            <REC>FAM</REC>
            <REC>FAS</REC>
            <REC>FFP</REC>
            <REC>FIN</REC>
            <REC>FIO</REC>
            <REC>FLL</REC>
            <REC>FLW</REC>
            <REC>FMC</REC>
            <REC>FMP</REC>
            <REC>FNT</REC>
            <REC>FON</REC>
            <REC>FSG</REC>
            <REC>FSS</REC>
            <REC>GCS</REC>
            <REC>GDB</REC>
            <REC>GI_</REC>
            <REC>GMS</REC>
            <REC>GNG</REC>
            <REC>GPD</REC>
            <REC>GS</REC>
            <REC>GSF</REC>
            <REC>GST</REC>
            <REC>GUIATN</REC>
            <REC>GUICMD</REC>
            <REC>GVT</REC>
            <REC>GWD</REC>
            <REC>H16</REC>
            <REC>HCT</REC>
            <REC>HDC</REC>
            <REC>HDI</REC>
            <REC>HDP</REC>
            <REC>HFX</REC>
            <REC>HGD</REC>
            <REC>HHC</REC>
            <REC>HHK</REC>
            <REC>HK0</REC>
            <REC>HK1</REC>
            <REC>HK2</REC>
            <REC>HK3</REC>
            <REC>HLP</REC>
            <REC>HM</REC>
            <REC>HTA</REC>
            <REC>HTC</REC>
            <REC>HTZ</REC>
            <REC>HU</REC>
            <REC>HWL</REC>
            <REC>HYP</REC>
            <REC>IAT</REC>
            <REC>IBD</REC>
            <REC>ICD</REC>
            <REC>ICM</REC>
            <REC>ICO</REC>
            <REC>ICR</REC>
            <REC>ICW</REC>
            <REC>ID</REC>
            <REC>IDS</REC>
            <REC>IFA</REC>
            <REC>ILF</REC>
            <REC>ILG</REC>
            <REC>ILM</REC>
            <REC>IN_</REC>
            <REC>INCL</REC>
            <REC>INF</REC>
            <REC>INI</REC>
            <REC>INK</REC>
            <REC>INL</REC>
            <REC>INO</REC>
            <REC>INS</REC>
            <REC>INV</REC>
            <REC>IP</REC>
            <REC>IRS</REC>
            <REC>ISA</REC>
            <REC>ISS</REC>
            <REC>ISU</REC>
            <REC>ITF</REC>
            <REC>J0</REC>
            <REC>JA</REC>
            <REC>JBR</REC>
            <REC>JCM</REC>
            <REC>JGD</REC>
            <REC>K01</REC>
            <REC>K02</REC>
            <REC>K03</REC>
            <REC>KBD</REC>
            <REC>KNN</REC>
            <REC>KO</REC>
            <REC>L0</REC>
            <REC>L2L</REC>
            <REC>L2P</REC>
            <REC>LAB</REC>
            <REC>LAM</REC>
            <REC>LAST</REC>
            <REC>LCA</REC>
            <REC>LCK</REC>
            <REC>LDA</REC>
            <REC>LEX</REC>
            <REC>LGC</REC>
            <REC>LGD</REC>
            <REC>LGE</REC>
            <REC>LGF</REC>
            <REC>LIC</REC>
            <REC>LID</REC>
            <REC>LIM</REC>
            <REC>LIVEREG</REC>
            <REC>LLI</REC>
            <REC>LMC</REC>
            <REC>LMG</REC>
            <REC>LMP</REC>
            <REC>LNK</REC>
            <REC>LO~</REC>
            <REC>LRD</REC>
            <REC>LRS</REC>
            <REC>LSM</REC>
            <REC>LSO</REC>
            <REC>LSQ</REC>
            <REC>LSS</REC>
            <REC>LSX</REC>
            <REC>LT</REC>
            <REC>LTS</REC>
            <REC>LV</REC>
            <REC>M20</REC>
            <REC>MANIFEST</REC>
            <REC>MAPIMAIL</REC>
            <REC>MC</REC>
            <REC>MCD</REC>
            <REC>MCM</REC>
            <REC>MD2</REC>
            <REC>MDM</REC>
            <REC>MDP</REC>
            <REC>ME</REC>
            <REC>MFL</REC>
            <REC>MHK</REC>
            <REC>MIL</REC>
            <REC>MLN</REC>
            <REC>MMC</REC>
            <REC>MMM</REC>
            <REC>MMX</REC>
            <REC>MNC</REC>
            <REC>MNL</REC>
            <REC>MNR</REC>
            <REC>MNS</REC>
            <REC>MOF</REC>
            <REC>MOR</REC>
            <REC>MP</REC>
            <REC>MPD</REC>
            <REC>MPT</REC>
            <REC>MSB</REC>
            <REC>MSC</REC>
            <REC>MSE</REC>
            <REC>MSI</REC>
            <REC>MST</REC>
            <REC>MSK</REC>
            <REC>MSO</REC>
            <REC>MXT</REC>
            <REC>MYDOCS</REC>
            <REC>N0</REC>
            <REC>NAM</REC>
            <REC>NAME</REC>
            <REC>NDX</REC>
            <REC>NEW</REC>
            <REC>NFO</REC>
            <REC>NIB</REC>
            <REC>NMD</REC>
            <REC>NOD</REC>
            <REC>NPM</REC>
            <REC>NQM</REC>
            <REC>NQV</REC>
            <REC>NSI</REC>
            <REC>NSW</REC>
            <REC>NTE</REC>
            <REC>NU4</REC>
            <REC>NUM</REC>
            <REC>NUS</REC>
            <REC>NV</REC>
            <REC>OBE</REC>
            <REC>OCM</REC>
            <REC>OCX</REC>
            <REC>ODE</REC>
            <REC>ODL</REC>
            <REC>OLB</REC>
            <REC>OLD</REC>
            <REC>OLE</REC>
            <REC>OP</REC>
            <REC>OPG</REC>
            <REC>OR5</REC>
            <REC>OSD</REC>
            <REC>OUT</REC>
            <REC>P2A</REC>
            <REC>PAG</REC>
            <REC>PBC</REC>
            <REC>PBK</REC>
            <REC>PBV</REC>
            <REC>PC3</REC>
            <REC>PCI</REC>
            <REC>PDI</REC>
            <REC>PDR</REC>
            <REC>PEN</REC>
            <REC>PER</REC>
            <REC>PFB</REC>
            <REC>PFM</REC>
            <REC>PFR</REC>
            <REC>PH</REC>
            <REC>PHO</REC>
            <REC>PHX</REC>
            <REC>PID</REC>
            <REC>PIF</REC>
            <REC>PL3</REC>
            <REC>PLY</REC>
            <REC>PMT</REC>
            <REC>PNF</REC>
            <REC>POC</REC>
            <REC>POF</REC>
            <REC>POL</REC>
            <REC>PPD</REC>
            <REC>PR4</REC>
            <REC>PROPERTIES</REC>
            <REC>PRX</REC>
            <REC>PSC</REC>
            <REC>PSF</REC>
            <REC>PSP</REC>
            <REC>PT</REC>
            <REC>PTH</REC>
            <REC>PTX</REC>
            <REC>PV</REC>
            <REC>Q0</REC>
            <REC>Q32</REC>
            <REC>Q3X</REC>
            <REC>QDAT</REC>
            <REC>QJF</REC>
            <REC>QRS</REC>
            <REC>QTC</REC>
            <REC>QTD</REC>
            <REC>QTW</REC>
            <REC>QUE</REC>
            <REC>QUF</REC>
            <REC>QUT</REC>
            <REC>R0</REC>
            <REC>R98</REC>
            <REC>RAD</REC>
            <REC>RAT</REC>
            <REC>RBF</REC>
            <REC>RC2</REC>
            <REC>RCP</REC>
            <REC>RCT</REC>
            <REC>RDB</REC>
            <REC>RDC</REC>
            <REC>REF</REC>
            <REC>REG</REC>
            <REC>RGS</REC>
            <REC>RH</REC>
            <REC>RI</REC>
            <REC>RJS</REC>
            <REC>RO</REC>
            <REC>ROB</REC>
            <REC>RPR</REC>
            <REC>RPS</REC>
            <REC>RSD</REC>
            <REC>RSP</REC>
            <REC>RSRC</REC>
            <REC>RTA</REC>
            <REC>RTR</REC>
            <REC>RU</REC>
            <REC>S98</REC>
            <REC>SAM</REC>
            <REC>SAX</REC>
            <REC>SCK</REC>
            <REC>SCR</REC>
            <REC>SCS</REC>
            <REC>SECURITY</REC>
            <REC>SELFREG</REC>
            <REC>SFP</REC>
            <REC>SG</REC>
            <REC>SG0</REC>
            <REC>SG1</REC>
            <REC>SHARED</REC>
            <REC>SHR</REC>
            <REC>SHX</REC>
            <REC>SIF</REC>
            <REC>SK</REC>
            <REC>SLL</REC>
            <REC>SMC</REC>
            <REC>SMM</REC>
            <REC>SNP</REC>
            <REC>SOF</REC>
            <REC>SPC</REC>
            <REC>SPE</REC>
            <REC>SPM</REC>
            <REC>SPT</REC>
            <REC>SPX</REC>
            <REC>SR</REC>
            <REC>SRC</REC>
            <REC>SRG</REC>
            <REC>SRT</REC>
            <REC>SSM</REC>
            <REC>SST</REC>
            <REC>ST4</REC>
            <REC>STB</REC>
            <REC>STD</REC>
            <REC>STF</REC>
            <REC>STP</REC>
            <REC>SWB</REC>
            <REC>SYM</REC>
            <REC>SYN</REC>
            <REC>SYS</REC>
            <REC>T32</REC>
            <REC>TAG</REC>
            <REC>TB</REC>
            <REC>TDF</REC>
            <REC>TH</REC>
            <REC>THE</REC>
            <REC>THK</REC>
            <REC>THS</REC>
            <REC>TID</REC>
            <REC>TIE</REC>
            <REC>TIP</REC>
            <REC>TLB</REC>
            <REC>TLD</REC>
            <REC>TLF</REC>
            <REC>TLT</REC>
            <REC>TLU</REC>
            <REC>TLX</REC>
            <REC>TMC</REC>
            <REC>TNL</REC>
            <REC>TOL</REC>
            <REC>TPA</REC>
            <REC>TR</REC>
            <REC>TRE</REC>
            <REC>TRG</REC>
            <REC>TRO</REC>
            <REC>TSK</REC>
            <REC>TSP</REC>
            <REC>TTF</REC>
            <REC>TTS</REC>
            <REC>TUB</REC>
            <REC>TUM</REC>
            <REC>TUW</REC>
            <REC>TV</REC>
            <REC>TVC</REC>
            <REC>TWD</REC>
            <REC>TXR</REC>
            <REC>TYM</REC>
            <REC>TZD</REC>
            <REC>UBM</REC>
            <REC>UCM</REC>
            <REC>UCP</REC>
            <REC>UCT</REC>
            <REC>UDC</REC>
            <REC>UDI</REC>
            <REC>UDL</REC>
            <REC>UDT</REC>
            <REC>UID</REC>
            <REC>UIL</REC>
            <REC>UK</REC>
            <REC>ULG</REC>
            <REC>ULK</REC>
            <REC>UNT</REC>
            <REC>US</REC>
            <REC>USA</REC>
            <REC>USERPROFILE</REC>
            <REC>USP</REC>
            <REC>USR</REC>
            <REC>UTX</REC>
            <REC>V10</REC>
            <REC>VBS</REC>
            <REC>VBX</REC>
            <REC>VBZ</REC>
            <REC>VCPREF</REC>
            <REC>VDB</REC>
            <REC>VER</REC>
            <REC>VFM</REC>
            <REC>VFX</REC>
            <REC>VIL</REC>
            <REC>VLX</REC>
            <REC>VM</REC>
            <REC>VOF</REC>
            <REC>VPH</REC>
            <REC>VPX</REC>
            <REC>VQA</REC>
            <REC>VQM</REC>
            <REC>VSC</REC>
            <REC>VSH</REC>
            <REC>VWP</REC>
            <REC>VXD</REC>
            <REC>W32</REC>
            <REC>W98</REC>
            <REC>WA_</REC>
            <REC>WBD</REC>
            <REC>WBM</REC>
            <REC>WCD</REC>
            <REC>WDL</REC>
            <REC>WDS</REC>
            <REC>WINSYS</REC>
            <REC>WIPEINFO</REC>
            <REC>WIPESLACK</REC>
            <REC>WMZ</REC>
            <REC>WPC</REC>
            <REC>WPX</REC>
            <REC>WRF</REC>
            <REC>WSL</REC>
            <REC>WTB</REC>
            <REC>WTR</REC>
            <REC>XLL</REC>
            <REC>XMX</REC>
            <REC>XRS</REC>
            <REC>XTU</REC>
            <REC>ZFSENDTOTARGET</REC>
            <REC>ZH</REC>
            <REC>ZH_TW</REC>
            <REC>ZRW</REC>
        </Include>
    </EXTENSIONS>
</PCHealthProtect>
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\pchealth\sr\shell\marsui\srframe.xml ===
<Mars_App>
   <!-- the "Panels" tag contains all panels that will be created initially -->
   <Panels>
      <!-- here's our cool DHTML dynamic content -->
      <Panel PanelType="Trident" Trusted="true">
         <Name>Contents</Name>
         <Layout>
            <Position>Window</Position>
         </Layout>
         <StartUrl>res://rstrui.exe/start.htm</StartUrl>
      </Panel>
   </Panels>
   <!-- places describes which panels are initially made visible -->
   <Places>
      <Place>
         <Name>Web</Name>
         <PlacePanel DefaultFocusPanel="true">
            <Name>Contents</Name>
         </PlacePanel>
      </Place>
   </Places>
</Mars_App>
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\pchealth\sysinfo\html\msinfo.xml ===
<?xml version="1.0" encoding="UTF-8"?>
<HelpSession>
	<ApplyTo>
	    <TopicToDisplay>hcp://system/sysinfo/msinfo.htm</TopicToDisplay>
		<WindowSettings>
			<Title>System Information</Title>
			<Layout>Kiosk</Layout>
<!--
			<Left>100</Left>
			<Top>10</Top>
-->
			<Width>600</Width>
			<Height>400</Height>
		</WindowSettings>
	</ApplyTo>
</HelpSession>
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\pchealth\upload\config\ulconfig.xml ===
<?xml version="1.0"?>
<!--<!DOCTYPE UploadLibraryConfig SYSTEM "ULconfig.dtd">-->
<UploadLibraryConfig>
	<Queue Location="%WINDIR%\PCHealth\Queue" Size="10MB"/>
	<Timing>
		<WakeUp Time="15m"/>
		<WaitBetweenJobs Time="60s"/>
		<BandwidthUsage Percentage="20"/>
	</Timing>
	<Packets>
		<ConnectionType Speed="MODEM" Size="8KB"/>
		<ConnectionType Speed="LAN" Size="32768"/>
	</Packets>
</UploadLibraryConfig>
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\ploc\lcs\wsrm\dump\readme.txt ===
****************************************************************
*   PROJECT:  WSRM
*   STARTED:  09/09/2002
*   UPDATED:  11/10/2002
****************************************************************

This folder contains the lc files that comment the localizability issues in the WSRM binaries.
Contact NTPSLOC for questions about the localizability issues.
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\ploc\lcs\wsrm\dump\map.txt ===
e n , r o , " " , S a t e l l i t e   a s s e m b l y   d i r e c t o r y . 
 
 1 0 3 3 , 1 0 4 8 , " " , l a n g i d . 
 
 E n g l i s h , R o m a n i a n , " " , L a n g D e f a u l t . 
 
 E v e r y o n e , E v e r y o n e , " " , U s e r   G r o u p 
 
 P r o g r a m s , P r o g r a m s , " " , P r o g r a m s   F o l d e r . 
 
 S t a r t M e n , P S U S t M e n , " " , S h o r t F i l e N a m e   f o r   S t a r t   M e n u   F o l d e r . 
 
 S t a r t   M e n u , S t a r t   M e n u , " " , S t a r t   M e n u   F o l d e r . 
 
 U n t i t l e d , P S U U n t i t l e d , " " , D e f a u l t   p o l i c y   n a m e ( s h o u l d n ' t   c o n t a i n   \ ? * | : > "   e t c ) . 
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\published_tests\readme.txt ===
This directory contains tests for code that is internally published in the published\ directory.
Normally these types of unit tests would be located in a subdirectory of the code it tests; in 
this case we do not want to pollute the published directory with files that are not published.

The tests in this directory are:
EncryptedStringTest\			-> tests published\inc\EncryptedString.w (a header file)
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\published_tests\encryptedstringtest\readme.txt ===
EncryptedStringTest:

This test runs for a long time, so don't worry when it looks like it has entered an infinite loop.

You can edit the test to turn on function call tracing.
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\select\sample\readme.txt ===
Invoke DS Object Picker to choose users and groups, then computers.

This sample demonstrates how to call the IDsObjectPicker interface to create
an instance of the Object Picker dialog and process the returned selections.
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\select\src\changes.txt ===
This file has the intent of recording major changes in the sources, so they can be easilly undone.

Begin of change 1: removing the QUERY_BUILDER code. March, 2002.

The files bellow where edited to remove QueryBuilder specific lines:

Z:\nt\admin\select\src>sd filelog advanceddlg.cxx 
//depot/Lab03_DEV/Admin/select/src/AdvancedDlg.cxx
... #1 change 38213 branch on 2002/01/28 11:08:07 by NTDEV\ntvbl03@DEV-I32-FRE (text) 'Initial Branch Creation '
... ... branch from //depot/Lab03_N/Admin/select/src/AdvancedDlg.cxx#1,#20

Z:\nt\admin\select\src>sd filelog advanceddlg.hxx 
//depot/Lab03_DEV/Admin/select/src/AdvancedDlg.hxx
... #1 change 38213 branch on 2002/01/28 11:08:07 by NTDEV\ntvbl03@DEV-I32-FRE (text) 'Initial Branch Creation '
... ... branch from //depot/Lab03_N/admin/select/src/AdvancedDlg.hxx#1,#5

Z:\nt\admin\select\src>sd filelog basedlg.hxx	 
//depot/Lab03_DEV/Admin/select/src/BaseDlg.hxx
... #1 change 38213 branch on 2002/01/28 11:08:07 by NTDEV\ntvbl03@DEV-I32-FRE (text) 'Initial Branch Creation '
... ... branch from //depot/Lab03_N/admin/select/src/BaseDlg.hxx#1,#5

Z:\nt\admin\select\src>sd filelog headers.hxx	 
//depot/Lab03_DEV/Admin/select/src/headers.hxx
... #1 change 38213 branch on 2002/01/28 11:08:07 by NTDEV\ntvbl03@DEV-I32-FRE (text) 'Initial Branch Creation '
... ... branch from //depot/Lab03_N/Admin/select/src/headers.hxx#1,#18

Z:\nt\admin\select\src>sd filelog lookfordlg.cxx 
//depot/Lab03_DEV/Admin/select/src/LookForDlg.cxx
... #1 change 38213 branch on 2002/01/28 11:08:07 by NTDEV\ntvbl03@DEV-I32-FRE (text) 'Initial Branch Creation '
... ... branch from //depot/Lab03_N/admin/select/src/LookForDlg.cxx#1,#9

Z:\nt\admin\select\src>sd filelog op.cxx	 
//depot/Lab03_DEV/Admin/select/src/op.cxx
... #1 change 38213 branch on 2002/01/28 11:08:07 by NTDEV\ntvbl03@DEV-I32-FRE (text) 'Initial Branch Creation '
... ... branch from //depot/Lab03_N/Admin/select/src/op.cxx#1,#10

Z:\nt\admin\select\src>sd filelog op.hxx	 
//depot/Lab03_DEV/Admin/select/src/op.hxx
... #1 change 38213 branch on 2002/01/28 11:08:07 by NTDEV\ntvbl03@DEV-I32-FRE (text) 'Initial Branch Creation '
... ... branch from //depot/Lab03_N/admin/select/src/op.hxx#1,#4

Z:\nt\admin\select\src>sd filelog resource.h	 
//depot/Lab03_DEV/Admin/select/src/resource.h
... #1 change 38213 branch on 2002/01/28 11:08:07 by NTDEV\ntvbl03@DEV-I32-FRE (text) 'Initial Branch Creation '
... ... branch from //depot/Lab03_N/Admin/select/src/resource.h#1,#11

Z:\nt\admin\select\src>sd filelog select.rc	 
//depot/Lab03_DEV/Admin/select/src/select.rc
... #1 change 38213 branch on 2002/01/28 11:08:07 by NTDEV\ntvbl03@DEV-I32-FRE (text) 'Initial Branch Creation '
... ... branch from //depot/Lab03_N/Admin/select/src/select.rc#1,#16

Z:\nt\admin\select\src>sd filelog sources	 
//depot/Lab03_DEV/Admin/select/src/sources
... #2 change 38906 edit on 2002/03/18 13:10:06 by NTDEV\sburns@SBURNS2 (text) 'cologne: BUG: 540413 540418 540'
... ... copy into //depot/Lab03_N/Admin/select/src/sources#15
... #1 change 38213 branch on 2002/01/28 11:08:07 by NTDEV\ntvbl03@DEV-I32-FRE (text) 'Initial Branch Creation '
... ... branch from //depot/Lab03_N/Admin/select/src/sources#1,#14


The windiffs bellow will show you the difference if you're still in LAB03_DEV

windiff AdvancedDlg.cxx#1 AdvancedDlg.cxx#2
windiff advanceddlg.hxx#1 advanceddlg.hxx#2
windiff basedlg.hxx#1 basedlg.hxx#2
windiff headers.hxx#1 headers.hxx#2
windiff lookfordlg.cxx#1 lookfordlg.cxx#2
windiff op.cxx#1 op.cxx#2
windiff op.hxx#1 op.hxx#2
windiff resource.h#1 resource.h#2
windiff select.rc#1 select.rc#2
windiff sources#2 sources#3


The files bellow where deleted since they only had QueryBuilder code:


Z:\nt\admin\select\src>sd filelog AddClauseDlg.cxx 
//depot/Lab03_DEV/Admin/select/src/AddClauseDlg.cxx
... #1 change 38213 branch on 2002/01/28 11:08:07 by NTDEV\ntvbl03@DEV-I32-FRE (text) 'Initial Branch Creation '
... ... branch from //depot/Lab03_N/admin/select/src/AddClauseDlg.cxx#1,#3

Z:\nt\admin\select\src>sd filelog AddClauseDlg.hxx 
//depot/Lab03_DEV/Admin/select/src/AddClauseDlg.hxx
... #1 change 38213 branch on 2002/01/28 11:08:07 by NTDEV\ntvbl03@DEV-I32-FRE (text) 'Initial Branch Creation '
... ... branch from //depot/Lab03_N/admin/select/src/AddClauseDlg.hxx#1

Z:\nt\admin\select\src>sd filelog class.cxx 
//depot/Lab03_DEV/Admin/select/src/class.cxx
... #1 change 38213 branch on 2002/01/28 11:08:07 by NTDEV\ntvbl03@DEV-I32-FRE (text) 'Initial Branch Creation '
... ... branch from //depot/Lab03_N/Admin/select/src/class.cxx#1,#2

Z:\nt\admin\select\src>sd filelog class.hxx 
//depot/Lab03_DEV/Admin/select/src/class.hxx
... #1 change 38213 branch on 2002/01/28 11:08:07 by NTDEV\ntvbl03@DEV-I32-FRE (text) 'Initial Branch Creation '
... ... branch from //depot/Lab03_N/Admin/select/src/class.hxx#1,#3

Z:\nt\admin\select\src>sd filelog DnDlg.cxx 
//depot/Lab03_DEV/Admin/select/src/DnDlg.cxx
... #1 change 38213 branch on 2002/01/28 11:08:07 by NTDEV\ntvbl03@DEV-I32-FRE (text) 'Initial Branch Creation '
... ... branch from //depot/Lab03_N/Admin/select/src/DnDlg.cxx#1,#5

Z:\nt\admin\select\src>sd filelog DnDlg.hxx 
//depot/Lab03_DEV/Admin/select/src/DnDlg.hxx
... #1 change 38213 branch on 2002/01/28 11:08:07 by NTDEV\ntvbl03@DEV-I32-FRE (text) 'Initial Branch Creation '
... ... branch from //depot/Lab03_N/admin/select/src/DnDlg.hxx#1

Z:\nt\admin\select\src>sd filelog QueryBuilderTab.cxx 
//depot/Lab03_DEV/Admin/select/src/QueryBuilderTab.cxx
... #1 change 38213 branch on 2002/01/28 11:08:07 by NTDEV\ntvbl03@DEV-I32-FRE (text) 'Initial Branch Creation '
... ... branch from //depot/Lab03_N/admin/select/src/QueryBuilderTab.cxx#1,#4

Z:\nt\admin\select\src>sd filelog QueryBuilderTab.hxx 
//depot/Lab03_DEV/Admin/select/src/QueryBuilderTab.hxx
... #1 change 38213 branch on 2002/01/28 11:08:07 by NTDEV\ntvbl03@DEV-I32-FRE (text) 'Initial Branch Creation '
... ... branch from //depot/Lab03_N/admin/select/src/QueryBuilderTab.hxx#1,#4

Z:\nt\admin\select\src>sd filelog StringDlg.cxx 
//depot/Lab03_DEV/Admin/select/src/StringDlg.cxx
... #1 change 38213 branch on 2002/01/28 11:08:07 by NTDEV\ntvbl03@DEV-I32-FRE (text) 'Initial Branch Creation '
... ... branch from //depot/Lab03_N/Admin/select/src/StringDlg.cxx#1,#2

Z:\nt\admin\select\src>sd filelog StringDlg.hxx 
//depot/Lab03_DEV/Admin/select/src/StringDlg.hxx
... #1 change 38213 branch on 2002/01/28 11:08:07 by NTDEV\ntvbl03@DEV-I32-FRE (text) 'Initial Branch Creation '
... ... branch from //depot/Lab03_N/admin/select/src/StringDlg.hxx#1

End of change 1: removing the QUERY_BUILDER code. March, 2002.


Begin of change 2: removing more QUERY_BUILDER code for cloning scopes. August 2002.

Bug 692777 refered to some of this code. See bug for change #.

This was the version of the files before the check in. Add 1 for the windiff as seen above.
//depot/Lab03_DEV/Admin/select/src/op.hxx#3 - edit default change (text)
//depot/Lab03_DEV/Admin/select/src/scope.cxx#3 - edit default change (text)
//depot/Lab03_DEV/Admin/select/src/scope.hxx#2 - edit default change (text)
//depot/Lab03_DEV/Admin/select/src/ScopeManager.cxx#3 - edit default change

End of change 2: removing more QUERY_BUILDER code for cloning scopes. August, 2002.
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\services\drizzle\placefil.txt ===
; This file is used to specify where every file built by the NT build lab is
; binplaced relative to the root of the distribution point.  If a file is not
; listed, it will end up in the dump directory.
;
; The format is like this:
;
; <imagename>    <class name>
;
; where <imagename> is the filename.ext and <class name> is the directory off
; the root of the distribution point (retail is a placeholder for the root).
; If there are multiple class names for a single image, use a colon to separate
; each.
;
; All bits that ship in the NT base product and are installed with winnt32,
; must have a class name of retail.
;
; If you add a new file to the list, please refrain from creating your own
; special section.  Doing so makes it difficult to detect duplicates.  If
; you're unable to add your image due to a collision with an existing name,
; work it out with the other developer.  Options include creating another
; placefil.txt for your project or using the ALT_PROJECT_TARGET macro in your
; sources file to change the base of the distribution point (doing so means
; your project will not install as part of base NT).
;
;     sort /+17 < placefil.txt > placefil.srt
;
; will generate a list sorted by class name if you want.
;
; IMPORTANT NOTE:
;
; If you add a file to the system, YOU MUST make sure layout.inf is updated
; before you start depending on it or else you will cause a BVT break. Do
; not attempt to modify layout.inf yourself, but follow instructions on:
;     http://ntbld/addtob.htm
;
;        PLEASE KEEP THIS LIST SORTED
;---------------------------------------------
;---------------------------------------------
BITS_{0B59F77F-257C-472C-A965-AEA45B5F2B4F}.sld mantis
bitsadmin.exe   idw
bitsenable.exe  idw
; bitsmgr.chm     retail
bitsmgr.dll     retail
bitsoc.dll      retail
bitssrv.dll     retail
bitssrv.inf     retail
bitsstat.exe    idw
drizzlecliold.exe idw
qmgr.dll         retail
qmgr.inf         retail
qmgrprxy.dll     retail
bitsprx2.dll     retail
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\services\drizzle\bits_ie\placefil.txt ===
; This file is used to specify where every file built by the NT build lab is
; binplaced relative to the root of the distribution point.  If a file is not
; listed, it will end up in the dump directory.
;
; The format is like this:
;
; <imagename>    <class name>
;
; where <imagename> is the filename.ext and <class name> is the directory off
; the root of the distribution point (retail is a placeholder for the root).
; If there are multiple class names for a single image, use a colon to separate
; each.
;
; All bits that ship in the NT base product and are installed with winnt32,
; must have a class name of retail.
;
; If you add a new file to the list, please refrain from creating your own
; special section.  Doing so makes it difficult to detect duplicates.  If
; you're unable to add your image due to a collision with an existing name,
; work it out with the other developer.  Options include creating another
; placefil.txt for your project or using the ALT_PROJECT_TARGET macro in your
; sources file to change the base of the distribution point (doing so means
; your project will not install as part of base NT).
;
;     sort /+17 < placefil.txt > placefil.srt
;
; will generate a list sorted by class name if you want.
;
; IMPORTANT NOTE:
;
; If you add a file to the system, YOU MUST make sure layout.inf is updated
; before you start depending on it or else you will cause a BVT break. Do
; not attempt to modify layout.inf yourself, but follow instructions on:
;     http://ntbld/addtob.htm
;
;        PLEASE KEEP THIS LIST SORTED
;---------------------------------------------
;---------------------------------------------
bits_ie.exe	dump\bits_ie
bits_ie.htm     dump\bits_ie
install.js      dump\bits_ie
uninstall.js    dump\bits_ie
readme.htm      dump\bits_ie
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\services\drizzle\inc\localwpp.ini ===
DEFINE_CPLX_TYPE(TSTR,  WPP_LOGWSTR,  LPCTSTR,         ItemWString, "s", S, 0);
DEFINE_FLAVOR(ts, TSTR,,);
DEFINE_FLAVOR(netrate, DOUBLE,,);

FUNC LogInfo{LEVEL=LogFlagInfo}(MSG,...);
FUNC LogRef{LEVEL=LogFlagRefCount}(MSG,...);
FUNC LogWarning{LEVEL=LogFlagWarning}(MSG,...);
FUNC LogError{LEVEL=LogFlagError}(MSG,...);
FUNC LogPublicApiBegin{LEVEL=LogFlagFunction}(MSG,...);
FUNC LogPublicApiEnd{LEVEL=LogFlagFunction}(MSG,...);
FUNC LogDl{LEVEL=LogFlagDownload}(MSG,...);
FUNC LogSerial{LEVEL=LogFlagSerialize}(MSG,...);
FUNC LogLock{LEVEL=LogFlagLock}(MSG,...);
FUNC LogTask{LEVEL=LogFlagTask}(MSG,...);
FUNC LogService{LEVEL=LogFlagService}(MSG,...);
FUNC LogEntry(MSG,...);

DEFINE_SIMPLE_TYPE( DRIZSEQ,,, "%7!08x!",,);

USEPREFIX(LogInfo,           "%!NOW! %!TID! INFO        %!FUNC! :");
USEPREFIX(LogWarning,        "%!NOW! %!TID! WARNING     %!FUNC! (%!FILE! %!LINE!) :");
USEPREFIX(LogError,          "%!NOW! %!TID! ERROR       %!FUNC! (%!FILE! %!LINE!) :");
USEPREFIX(LogPublicApiBegin, "%!NOW! %!TID! FUNC_BEGIN  %!FUNC! this %p :", this);
USEPREFIX(LogPublicApiEnd,   "%!NOW! %!TID! FUNC_END    %!FUNC! this %p Hr %!winerr!, :", this, Hr);
USEPREFIX(LogRef,            "%!NOW! %!TID! REF         %!FUNC! this %p :", this);
USEPREFIX(LogLock,           "%!NOW! %!TID! LOCK        %!FUNC! :");
USEPREFIX(LogTask,           "%!NOW! %!TID! TASK        %!FUNC! :");
USEPREFIX(LogService,        "%!NOW! %!TID! SERVICE     %!FUNC! :");
USEPREFIX(LogDl,             "%!NOW! %!TID! DOWNLOAD    %!FUNC! :");
USEPREFIX(LogSerial,         "%!NOW! %!TID! SERIALIZE   %!FUNC! :");
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\services\drizzle\newjob\localwpp.ini ===
INCLUDE(..\inc\localwpp.ini);
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\services\drizzle\server\isapi\cancel.txt ===
POST http://MZORAN-X862-XP/BITSTestVDir/bitstestfile.txt HTTP/1.1
Host: MZORAN-X862-XP
BITS-Packet-Type: Cancel-Session
Content-Length: 0
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\services\drizzle\server\isapi\close.txt ===
POST http://MZORAN-X862-XP/BITSTestVDir/bitstestfile.txt HTTP/1.1
Host: MZORAN-X862-XP
BITS-Packet-Type: Close-Session
Content-Length: 0
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\services\drizzle\server\isapi\create.txt ===
POST http://MZORAN-X862-XP/BITSTestVDir/bitstestfile.txt HTTP/1.1
Host: MZORAN-X862-XP
BITS-Packet-Type: Create-Session
BITS-Supported-Protocols: {7df0354d-249b-430f-820d-3d2a9bef4935},{7df0354d-249b-430f-820d-3d2a9bef4931}
Content-Length: 0
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\services\drizzle\server\isapi\fragment1.txt ===
POST http://MZORAN-X862-XP/BITSTestVDir/bitstestfile.txt HTTP/1.1
Host: MZORAN-X862-XP
BITS-Packet-Type: fragment
Content-range: bytes 0-3 / 8
Content-Length: 4

AB
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\services\drizzle\server\isapi\fragment2.txt ===
POST http://MZORAN-X862-XP/BITSTestVDir/bitstestfile.txt HTTP/1.1
Host: MZORAN-X862-XP
BITS-Packet-Type: fragment
Content-range: bytes 4-7 / 8
Content-Length: 4

AB
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\services\drizzle\server\isapi\ping.txt ===
POST http://MZORAN-X862-XP/BITSTestVDir/bitstestfile.txt HTTP/1.1
Host: MZORAN-X862-XP
BITS-Packet-Type: Ping
Content-Length: 0
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\services\drizzle\server\isapi\test.txt ===
POST http://MZORAN-X862-XP/BITSTestDir/bitstestfile.txt HTTP/1.1
Host: MZORAN-X862-XP
BITS-Packet-Type: Create-Session
BITS-Supported-Protocols: {7df0354d-249b-430f-820d-3d2a9bef4935},{7df0354d-249b-430f-820d-3d2a9bef4931}
Content-Length: 0
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\services\drizzle\service\localwpp.ini ===
INCLUDE(..\inc\localwpp.ini);
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\services\drizzle\utils\localwpp.ini ===
INCLUDE(..\inc\localwpp.ini);
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\services\sched\setup\mstask.ini ===
[.ShellClassInfo]
CLSID={d6277990-4c6a-11cf-8d87-00aa0060f5bf}
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\sms\binary_release\srv\nt40.pdf ===
[PDF] Version=1.0 [Package Definition] Product=Windows NT Server (English) Version=4.00 Comment=Microsoft Windows NT Server Version 4.0 (English) Setup SetupVariations=Automated Windows NT (x86), Manual Windows NT (x86), Automated Windows NT (Alpha), Manual Windows NT (Alpha), Automated Windows NT (MIPS), Manual Windows NT (MIPS), Automated Win, Manual Win, Automated MSDOS, Manual MSDOS [Automated Windows NT (x86) Setup] CommandLine=ntencap.exe /NTs i386\winnt32.exe /U:.\ntupgrd.400 /S:.\i386 CommandName=Automated Upgrade on x86 UserInputRequired=FALSE SynchronousSystemExitRequired=TRUE SupportedPlatforms=Windows NT (x86) [Manual Windows NT (x86) Setup] CommandLine=ntencap.exe /NTs i386\winnt32.exe /B /S:.\i386 CommandName=Manual Upgrade on x86 UserInputRequired=TRUE SynchronousSystemExitRequired=TRUE SupportedPlatforms=Windows NT (x86) [Automated Windows NT (Alpha) Setup] CommandLine=ntencapa.exe /NTs alpha\winnt32.exe /U:.\ntupgrd.400 /S:.\alpha CommandName=Automated Upgrade on Alpha UserInputRequired=FALSE SynchronousSystemExitRequired=TRUE SupportedPlatforms=Windows NT (Alpha) [Manual Windows NT (Alpha) Setup] CommandLine=ntencapa.exe /NTs alpha\winnt32.exe /S:.\alpha CommandName=Manual Upgrade on Alpha UserInputRequired=TRUE SynchronousSystemExitRequired=TRUE SupportedPlatforms=Windows NT (Alpha) [Automated Windows NT (MIPS) Setup] CommandLine=ntencapm.exe /NTs mips\winnt32.exe /U:.\ntupgrd.400 /S:.\mips CommandName=Automated Upgrade on MIPS UserInputRequired=FALSE SynchronousSystemExitRequired=TRUE SupportedPlatforms=Windows NT (MIPS) [Manual Windows NT (MIPS) Setup] CommandLine=ntencapm.exe /NTs mips\winnt32.exe /S:.\mips CommandName=Manual Upgrade on MIPS UserInputRequired=TRUE SynchronousSystemExitRequired=TRUE SupportedPlatforms=Windows NT (MIPS) [Automated Win Setup] CommandLine=w16ntupg.exe i386\winnt.exe /U:unattend.400 /S:.\i386 CommandName=Automated Setup on Windows/Win 9x UserInputRequired=FALSE SynchronousSystemExitRequired=TRUE SupportedPlatforms=Windows 3.1, Windows95 [Manual Win Setup] CommandLine=w16ntupg.exe i386\winnt.exe /B /S:.\i386 CommandName=Manual Setup on Windows/Win 9x UserInputRequired=TRUE SynchronousSystemExitRequired=TRUE SupportedPlatforms=Windows 3.1, Windows95 [Automated MSDOS Setup] CommandLine=dosntupg.exe i386\winnt.exe /U:unattend.400 /S:.\i386 CommandName=Automated Setup on MS-DOS UserInputRequired=FALSE SynchronousSystemExitRequired=TRUE SupportedPlatforms=MS-DOS 6.22, MS-DOS 6.21, MS-DOS 6.2, MS-DOS 6.0, MS-DOS 5.0 [Manual MSDOS Setup] CommandLine=dosntupg.exe i386\winnt.exe /B /S:.\i386 CommandName=Manual Setup on MS-DOS UserInputRequired=TRUE SynchronousSystemExitRequired=TRUE SupportedPlatforms=MS-DOS 6.22, MS-DOS 6.21, MS-DOS 6.2, MS-DOS 6.0, MS-DOS 5.0 [Setup Package for Inventory] InventoryThisPackage=TRUE Detection Rule Part 1=File 1 Detection Rule Part 2=AND Detection Rule Part 3=( Detection Rule Part 4=File 2 Detection Rule Part 5=OR Detection Rule Part 6=File 3 Detection Rule Part 7=) [File 1] FILE=ntoskrnl.exe COLLECT=FALSE [File 2] FILE=prodspec.ini COLLECT=FALSE ; Checksum for NT 4.0 Server (40-bit) version of prodspec.ini CRC=0, 227, 25137 [File 3] FILE=prodspec.ini COLLECT=FALSE ; Checksum for NT 4.0 Server (128 bit) version of prodspec.ini CRC=0, 228, 6216 %%EOF
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\sms\binary_release\wks\nt40.pdf ===
[PDF] Version=1.0 [Package Definition] Product=Windows NT Workstation (English) Version=4.00 Comment=Microsoft Windows NT Workstation Version 4.0 (English) Setup SetupVariations=Automated Windows NT (x86), Manual Windows NT (x86), Automated Windows NT (Alpha), Manual Windows NT (Alpha), Automated Windows NT (MIPS), Manual Windows NT (MIPS), Automated Win, Manual Win, Automated MSDOS, Manual MSDOS [Automated Windows NT (x86) Setup] CommandLine=ntencap.exe /NTw i386\winnt32.exe /U:.\ntupgrd.400 /S:.\i386 CommandName=Automated Upgrade on x86 UserInputRequired=FALSE SynchronousSystemExitRequired=TRUE SupportedPlatforms=Windows NT (x86) [Manual Windows NT (x86) Setup] CommandLine=ntencap.exe /NTw i386\winnt32.exe /B /S:.\i386 CommandName=Manual Upgrade on x86 UserInputRequired=TRUE SynchronousSystemExitRequired=TRUE SupportedPlatforms=Windows NT (x86) [Automated Windows NT (Alpha) Setup] CommandLine=ntencapa.exe /NTw alpha\winnt32.exe /U:.\ntupgrd.400 /S:.\alpha CommandName=Automated Upgrade on Alpha UserInputRequired=FALSE SynchronousSystemExitRequired=TRUE SupportedPlatforms=Windows NT (Alpha) [Manual Windows NT (Alpha) Setup] CommandLine=ntencapa.exe /NTw alpha\winnt32.exe /S:.\alpha CommandName=Manual Upgrade on Alpha UserInputRequired=TRUE SynchronousSystemExitRequired=TRUE SupportedPlatforms=Windows NT (Alpha) [Automated Windows NT (MIPS) Setup] CommandLine=ntencapm.exe /NTw mips\winnt32.exe /U:.\ntupgrd.400 /S:.\mips CommandName=Automated Upgrade on MIPS UserInputRequired=FALSE SynchronousSystemExitRequired=TRUE SupportedPlatforms=Windows NT (MIPS) [Manual Windows NT (MIPS) Setup] CommandLine=ntencapm.exe /NTw mips\winnt32.exe /S:.\mips CommandName=Manual Upgrade on MIPS UserInputRequired=TRUE SynchronousSystemExitRequired=TRUE SupportedPlatforms=Windows NT (MIPS) [Automated Win Setup] CommandLine=w16ntupg.exe i386\winnt.exe /U:unattend.400 /S:.\i386 CommandName=Automated Setup on Windows/Win 9x UserInputRequired=FALSE SynchronousSystemExitRequired=TRUE SupportedPlatforms=Windows 3.1, Windows95 [Manual Win Setup] CommandLine=w16ntupg.exe i386\winnt.exe /B /S:.\i386 CommandName=Manual Setup on Windows/Win 9x UserInputRequired=TRUE SynchronousSystemExitRequired=TRUE SupportedPlatforms=Windows 3.1, Windows95 [Automated MSDOS Setup] CommandLine=dosntupg.exe i386\winnt.exe /U:unattend.400 /S:.\i386 CommandName=Automated Setup on MS-DOS UserInputRequired=FALSE SynchronousSystemExitRequired=TRUE SupportedPlatforms=MS-DOS 6.22, MS-DOS 6.21, MS-DOS 6.2, MS-DOS 6.0, MS-DOS 5.0 [Manual MSDOS Setup] CommandLine=dosntupg.exe i386\winnt.exe /B /S:.\i386 CommandName=Manual Setup on MS-DOS UserInputRequired=TRUE SynchronousSystemExitRequired=TRUE SupportedPlatforms=MS-DOS 6.22, MS-DOS 6.21, MS-DOS 6.2, MS-DOS 6.0, MS-DOS 5.0 [Setup Package for Inventory] InventoryThisPackage=TRUE Detection Rule Part 1=File 1 Detection Rule Part 2=AND Detection Rule Part 3=File 2 [File 1] FILE=ntoskrnl.exe COLLECT=FALSE [File 2] FILE=prodspec.ini COLLECT=FALSE ; Checksum for NT 4.0 Workstation (40-bit) version of prodspec.ini CRC=0, 232, 27880 %%EOF
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\snapin\localsec\readme.txt ===
Local Security Snapin Install Notes:
====================================

Start a command window.

Change directories to the directory where you copied all of the .dll files.

Type 'install' at the command prompt.  If the result is a message
"Installation successful," you win.  Now go and run MMC.  The Microsoft
Local Security Snapin should appear in the list of loadable snapins.

If you see the message "Installation failed," you lose.  Call/email sburns
for your consolation prize.
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\wmi\wbem\common\sources guide.doc ===
Microsoft Word Document MSWordDoc Word.Document.8Microsoft Corporation WMI Sources File Quick Reference Title _PID_HLINKSWMI Sources File Quick Reference a-jeremm Normal.dot Jeremy Morton Microsoft Word 9.0bjbjU WMI Sources File Quick Reference Common macro problems Shouldn t be used MIDL_FLAGS=/no_warn Strongly Discouraged USER_C_FLAGS=anything instead use the appropriate NT Build macro: USE_NATIVE_EH=1 <this is the build.exe default> USE_RTTI=1 <this is the build.exe default, unless you use MFC, then build.exe turns it on> <this is the build.exe default> <this is the build.exe default> USER_C_FLAGS=/Zl m looking into this one] USER_C_FLAGS=/EHa m looking into this one] MSC_OPTIMIZATION=/Od [Please check why you re disabling optimization] MSC_OPTIMIZATION=/Odi [Please check why you re disabling optimization] MSC_OPTIMIZATION=/Ob2 [Please check why you re disabling optimization] <this is the build.exe default> NTNOFPO=1 C_DEFINES=/D_WIN32_WINNT=0x0400; instead use WIN32_WINNT_VERSION=0x0400 LINKER_FLAGS=/STACK:x,y; instead use LINKER_STACKSIZE=/STACK:x,y LINKER_FLAGS=-NOENTRY <this is the build.exe default if you don t specify DLLENTRY> INCLUDE=$(PUBLIC_SDK_INC)\ATL30; instead use USE_ATL=1 and ATL_VER=30 NOT_LEAN_AND_MEAN=1; instead try putting #include <ole2.h> [or other necessary headers] before your #include <windows.h> line, usually this is in a precompiled header. LINK_FLAGS=/DEBUGTYPE:FIXUP <this is the build.exe default> Unnecessary These are defined in admin\wmi\wbem\common\makefile.cmn: MIDL_TLBDIR=$(O) PASS0_CLIENTDIR=$(O) PASS0_SERVERDIR=$(O) PASS0_SOURCEDIR=$(O) PASS0_HEADERDIR=$(O) Caution MIDL_NO_ROBUST=1 Only use this if the idl targets any non-Win2K or greater platforms /D_WIN32_WINNT=0x0400 Please check why this is used WIN32_WINNT_VERSION=0x0400 Please check why this is used USER_C_FLAGS=/Od Please check why you re disabling optimization MSC_OPTIMIZATION=/Od Please check why you re disabling optimization USER_C_FLAGS =/Odi Please check why you re disabling optimization MSC_OPTIMIZATION=/Odi Please check why you re disabling optimization Makefile.cmn All sources files should include these two lines at the top [or !include another file that has these lines at the top]: !include $(PROJECT_ROOT)\wmi\wbem\common\makefile.cmn SOURCES_USED=$(PROJECT_ROOT)\wmi\wbem\common\makefile.cmn The main purpose of makefile.cmn is to define macros for WMI include paths and WMI libraries, both to alleviate typos and to make it easier to move projects and rename libraries. All entries in the INCLUDES macro should be macros defined in makefile.cmn or one of the internal depot include macros: $(ADMIN_INC_PATH) $(BASE_INC_PATH) $(COM_INC_PATH) $(DRIVERS_INC_PATH) $(DS_INC_PATH) $(ENDUSER_INC_PATH) $(INETCORE_INC_PATH) $(INETSRV_INC_PATH) $(MULTIMEDIA_INC_PATH) $(NET_INC_PATH) $(PRINTSCAN_INC_PATH) $(SDKTOOLS_INC_PATH) $(SHELL_INC_PATH) $(TERMSRV_INC_PATH) $(WINDOWS_INC_PATH) All entries in the TARGETLIBS and LINKLIBS macros should be macros defined in makefile.cmn, $(SDK_LIB_PATH)\filename.lib or one of the internal depot library macros followed by a library name: $(ADMIN_LIB_PATH)\filename.lib $(BASE_LIB_PATH)\filename.lib $(COM_LIB_PATH)\filename.lib $(DRIVERS_LIB_PATH)\filename.lib $(DS_LIB_PATH)\filename.lib $(ENDUSER_LIB_PATH)\filename.lib $(INETCORE_LIB_PATH)\filename.lib $(INETSRV_LIB_PATH)\filename.lib $(MULTIMEDIA_LIB_PATH)\filename.lib $(NET_LIB_PATH)\filename.lib $(PRINTSCAN_LIB_PATH)\filename.lib $(SDKTOOLS_LIB_PATH)\filename.lib $(SHELL_LIB_PATH)\filename.lib $(TERMSRV_LIB_PATH)\filename.lib $(WINDOWS_LIB_PATH)\filename.lib WMI macros WMI macros should be declared BEFORE makefile.cmn is !included. Because of how some of the WMI macros operate, it is important to append to some macros in your sources file instead of overwriting them.  Currently, it s best to always use: C_DEFINES=$(C_DEFINES) /D... INCLUDES=$(INCLUDES); \ $(...); \ USER_C_FLAGS=$(USER_C_FLAGS) /... Current WMI macros [defined in admin\wmi\wbem\common\makefile.cmn] are: WMIMFC Usage: WMIMFC=1 Effects: !ifdef WMIMFC USE_MFC=1 MFC_VER=42 !ifdef WMIUNICODE USE_MFCUNICODE=1 !endif !endif WMIUNICODE Usage: WMIUNICODE=1 Effects: !ifdef WMIUNICODE WMICHARTYPE=UNICODE C_DEFINES=$(C_DEFINES) /DUNICODE /D_UNICODE !ifdef WMIMFC USE_MFCUNICODE=1 !endif !else WMICHARTYPE=ANSI C_DEFINES=$(C_DEFINES) /D_MBCS !endif WMICHARTYPE is used within makefile.cmn to determine which library [ANSI or Unicode for libraries that have both versions] to link with. WMIPRECOMP Usage: WMIPRECOMP=1 Effects: PRECOMPILED_INCLUDE=precomp.h PRECOMPILED_CXX=1 This is the simplest way to have precompiled headers. In order to use WMIPRECOMP, all CPP files listed in the SOURCES macro must have identical statements [ignoring comments] up to the #include  precomp.h  line [usually the first line]. Precomp.h should be in the current directory. WMIPRECOMPSHARED Usage: WMIPRECOMPSHARED=1 Effects: PRECOMPILED_INCLUDE=..\precomp.h PRECOMPILED_CXX=1 INCLUDES=..;$(INCLUDES) This is the same as WMIPRECOMP except that the precomp.h file is located one directory up. In order to use WMIPRECOMPSHARED, all cpp files listed in the SOURCES macro should have identical statements [ignoring comments] up to the #include  precomp.h  line [usually the first line]. Precomp.h should be in the parent directory of the current directory. This macro adds .. to the INCLUDES macro.  If this causes problems because you have the same name on a file in your parent directory as a file in you include path, and you don t want to use the one in your parent directory, consider renaming your file to avoid the conflict. WMIAUTOPRECOMP Usage: WMIAUTOPRECOMP=filename.h Effects: USER_C_FLAGS=/Fp$(O)\ /YX$(WMIAUTOPRECOMP) This allows precompiled headers when you don t have all of your cpp files starting with the same statements. This uses VC s automatic precompiled headers. It is not necessary to have all of your cpp files #include  filename.h , but those without it won t benefit from precompiled headers. If you don t put cpp files with the same statements up to #include  filename.h  together in the SOURCES macro, or you don t have any cpp files that share their starting statements, this won t do any good. NOTE: filename.h does not need to be in the current directory.  If you use precomp.h; however, it s best to have one of your own in the current directory since there are a lot of them in the WMI tree, and you can never be sure whose you ll get. WMIAUTOPRECOMPSHARED Usage: WMIAUTOPRECOMPSHARED=filename.h Effects: USER_C_FLAGS=/Fp$(O)\ /YX$(WMIAUTOPRECOMPSHARED) INCLUDES=..;$(INCLUDES) This is the same as WMIAUTOPRECOMP except that the filename.h file is located in the parent directory. This uses VC s automatic precompiled headers. It is not necessary to have all of your cpp files #include  filename.h , but those without it won t benefit from precompiled headers. If you don t put cpp files with the same statements up to #include  filename.h  together in the SOURCES macro, or you don t have any cpp files that share their starting statements, this won t do any good. filename.h should be in the parent directory of the current directory. This macro adds .. to the INCLUDE macro.  If this causes problems because you have the same name on a file in your parent directory as a file in you include path, and you don t want to use the one in your parent directory, consider renaming your file to avoid the conflict. WMIPLATFORM Usage: WMIPLATFORM=WIN2K WMIPLATFORM=WINNT WMIPLATFORM=WIN9X WMIPLATFORM=MILLEN Effects: $(WMIPLATFORM) WIN2K WBEMCORE_LIB = $(WBEMCORE_WIN2K_LIB) !elseif  $(WMIPLATFORM) WINNT WBEMCORE_LIB = $(WBEMCORE_WIN2K_LIB) ALT_PROJECT_TARGET=nt4 !elseif  $(WMIPLATFORM) WIN9X WBEMCORE_LIB = $(WBEMCORE_WIN9X_LIB) ALT_PROJECT_TARGET=Chicago !elseif  $(WMIPLATFORM) MILLEN WBEMCORE_LIB = $(WBEMCORE_MILLEN_LIB) ALT_PROJECT_TARGET=millennium !else WBEMCORE_LIB = $(WBEMCORE_WIN2K_LIB) !endif This allows linking with the correct platform s library AND sets the proper binplace directory. For example: WMIPLATFORM=WIN2K binplaces under %_NTTREE% WMIPLATFORM=WINNT binplaces under %_NTTREE%\nt4 WMIPLATFORM=WIN9X binplaces under %_NTTREE%\Chicago WMIPLATFORM=MILLEN binplaces under %_NTTREE%\millennium The default is WMIPLATFORM=WIN2K DLLDEF macro Not all platforms support the same def file statements [64 bit doesn t like DESCRIPTION and has to be DllGetClassObject PRIVATE instead of DllGetClassObject =   HYPERLINK "mailto:_DllGetClassObject@12"  _DllGetClassObject@12  PRIVATE].  For this reason, if build.exe sees DLLDEF=$(O)\filename.def in a sources file it will first look for a filename.src file, preprocess it, put the output in $(O)\filename.def and then use that def file when linking.  This allows the following in a filename.src file: LIBRARY WBEMCORE.DLL #if defined(_M_IX86) DESCRIPTION WMI Core DLL #endif EXPORTS #if defined(_M_IX86) DllGetClassObject  HYPERLINK "mailto:_DllGetClassObject@12"  _DllGetClassObject@12 PRIVATE DllCanUnloadNow  HYPERLINK "mailto:_DllCanUnloadNow@0"  _DllCanUnloadNow@0 PRIVATE DllRegisterServer PRIVATE DllUnregisterServer PRIVATE Shutdown  HYPERLINK "mailto:_Shutdown@4"  _Shutdown@4 PRIVATE ExternFlushDB  HYPERLINK "mailto:_ExternFlushDB@0"  _ExternFlushDB@0 PRIVATE ExternDoBackup  HYPERLINK "mailto:_ExternDoBackup@4"  _ExternDoBackup@4 PRIVATE ExternManualBackup  HYPERLINK "mailto:_ExternManualBackup@8"  _ExternManualBackup@8 PRIVATE #else DllGetClassObject PRIVATE DllCanUnloadNow PRIVATE DllRegisterServer PRIVATE DllUnregisterServer PRIVATE Shutdown PRIVATE ExternFlushDB PRIVATE ExternDoBackup PRIVATE ExternManualBackup PRIVATE #endif Handy defines for this purpose are _M_IX86, _M_IA64 and _M_AXP64. LINKLIBS vs. TARGETLIBS Whenever possible, use TARGETLIBS instead of LINKLIBS. LINKLIBS is only needed when your target is a dll that exports symbols that are defined in another static library.  When this is the case, add the static library name to LINKLIBS instead of TARGETLIBS. The way that build.exe works with regards to libraries is this: in Pass 1, after all the object files are created in a directory, build.exe creates static libraries that contain all of the object files plus all libraries listed in the LINKLIBS macro.  It does this when the target is a static or dynamic library.  If the libraries in the LINKLIBS macro aren t built yet, you get an error.  With multithreaded builds, directories have to either be so far apart in the build process that it s virtually guaranteed that the LINKLIBS have already been built, or synchronization macros have to be used.  TARGETLIBS libraries are link in during Pass 2, so all of them are guaranteed to be there, unless the build broke. The synchronization macros are: SYNCHRONIZE_DRAIN=1 Do not build this subdirectory until all the prior subdirectories are done. SYNCHRONIZE_BLOCK=1 Do not continue building until this subdirectory is done. Whenever possible, use TARGETLIBS instead of LINKLIBS. Building MOF Files Directory that just contains MOF files sources file: TARGETNAME= TARGETTYPE=NOTARGET TARGETPATH= SOURCES= MISCFILES= \     $(O)\filename1.mof \     $(O)\filename1.mfl \     $(O)\filename2.mof \     $(O)\filename2.mfl NTTARGETFILE0= \     $(O)\filename1.mof \     $(O)\filename1.mfl \     $(O)\filename2.mof \     $(O)\filename2.mfl makefile.inc file: $(O)\filename1.mof $(O)\filename1.mfl: filename1.mof mofcomp -amendment:ms_409 -MOF:$(O)\filename1.mof -MFL:$(O)\filename1.mfl filename1.mof $(O)\filename2.mof $(O)\filename2.mfl: filename2.mof mofcomp -amendment:ms_409 -MOF:$(O)\filename2.mof -MFL:$(O)\filename2.mfl filename2.mof Directory that also builds a normal binary Add these lines to your sources file: MISCFILES= \     $(O)\filename1.mof \     $(O)\filename1.mfl \     $(O)\filename2.mof \     $(O)\filename2.mfl NTTARGETFILE0= \     $(O)\filename1.mof \     $(O)\filename1.mfl \     $(O)\filename2.mof \     $(O)\filename2.mfl makefile.inc file: $(O)\filename1.mof $(O)\filename1.mfl: filename1.mof mofcomp -amendment:ms_409 -MOF:$(O)\filename1.mof -MFL:$(O)\filename1.mfl filename1.mof $(O)\filename2.mof $(O)\filename2.mfl: filename2.mof mofcomp -amendment:ms_409 -MOF:$(O)\filename2.mof -MFL:$(O)\filename2.mfl filename2.mof
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\wmi\wbem\common\idl\wbemdc\win9x\placefil.txt ===
wbemdc.dll	retail
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\wmi\wbem\common\stdlibrary\pathtest.txt ===
\\myserver\root\cimv2:Win32_OperatingSystem.Name="Microsoft Windows NT Workstation|C:\\WINNT|\\Device\\Harddisk0\\partition1"
//myserver/root/cimv2:Win32_OperatingSystem.Name="Microsoft Windows NT Workstation|C:\\WINNT|\\Device\\Harddisk0\\partition1"
//./root/default:MyClass
root\default:MyClass
MyClass.key=5
MyClass="x"   
\\myserver/root\default:MyClass.key="ab/c\\def"
//myserver\root/default:MyClass.key="ab\\c/def"
MyClass.KeyValue=0x12
//WKSTA-W2KS/root/cimv2:Win32_LogicalFileSecuritySetting.Path='C:\temp'
//WKSTA-W2KS/root/cimv2:Win32_LogicalFileSecuritySetting.Path="C:\\temp"
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\wmi\wbem\common\utillib\utillib.doc ===
{\rtf1\ansi\ansicpg1252\uc1 \deff0\deflang1033\deflangfe1033{\fonttbl{\f0\froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}{\f2\fmodern\fcharset0\fprq1{\*\panose 02070309020205020404}Courier New;}{\f3\froman\fcharset2\fprq2{\*\panose 05050102010706020507}Symbol;}{\f14\fnil\fcharset2\fprq2{\*\panose 05000000000000000000}Wingdings;}{\f16\froman\fcharset0\fprq2{\*\panose 02020404030301010803}Garamond;}{\f17\froman\fcharset238\fprq2 Times New Roman CE;}{\f18\froman\fcharset204\fprq2 Times New Roman Cyr;}{\f20\froman\fcharset161\fprq2 Times New Roman Greek;}{\f21\froman\fcharset162\fprq2 Times New Roman Tur;}{\f22\froman\fcharset186\fprq2 Times New Roman Baltic;}{\f113\froman\fcharset238\fprq2 Garamond CE;}{\f114\froman\fcharset204\fprq2 Garamond Cyr;}{\f116\froman\fcharset161\fprq2 Garamond Greek;}{\f117\froman\fcharset162\fprq2 Garamond Tur;}{\f118\froman\fcharset186\fprq2 Garamond Baltic;}}{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;}{\stylesheet{\nowidctlpar\widctlpar\adjustright \f16\fs22\cgrid \snext0 Normal;}{\s1\qc\sa240\sl240\slmult0\keep\keepn\nowidctlpar\widctlpar\brdrt\brdrs\brdrw15\brsp120\brdrcf15 \brdrb\brdrs\brdrw15\brsp120\brdrcf15 \adjustright \b\caps\f16\fs18\expnd4\expndtw20\kerning16\cgrid \sbasedon15 \snext16 heading 1;}{\s2\qc\sa180\sl240\slmult0\keep\keepn\nowidctlpar\widctlpar\adjustright \b\caps\f16\fs18\expnd2\expndtw10\kerning20\cgrid \sbasedon15 \snext16 heading 2;}{\s3\sb240\sa180\sl240\slmult0\keep\keepn\nowidctlpar\widctlpar\adjustright \caps\f16\fs20\kerning20\cgrid \sbasedon15 \snext16 heading 3;}{\s4\li360\sb240\sa240\sl240\slmult0\keep\keepn\nowidctlpar\widctlpar\abslock1\adjustright \i\f16\expnd1\expndtw5\kerning20\cgrid \sbasedon15 \snext16 heading 4;}{\s5\sl240\slmult0\keep\keepn\nowidctlpar\widctlpar\adjustright \b\f16\fs22\kerning20\cgrid \sbasedon15 \snext16 heading 5;}{\s6\sl240\slmult0\keep\keepn\nowidctlpar\widctlpar\adjustright \i\f16\fs22\expnd1\expndtw5\kerning20\cgrid \sbasedon15 \snext16 heading 6;}{\s7\sl240\slmult0\keep\keepn\nowidctlpar\widctlpar\abslock1\adjustright \scaps\f16\fs22\kerning20\cgrid \sbasedon15 \snext16 heading 7;}{\s8\fi360\sl240\slmult0\keep\keepn\nowidctlpar\widctlpar\adjustright \i\f16\fs22\expnd1\expndtw5\kerning20\cgrid \sbasedon15 \snext16 heading 8;}{\s9\sl240\slmult0\keep\keepn\nowidctlpar\widctlpar\adjustright \f16\fs22\expnd-1\expndtw-5\kerning20\cgrid \sbasedon15 \snext16 heading 9;}{\*\cs10 \additive Default Paragraph Font;}{\s15\sl240\slmult0\keep\keepn\nowidctlpar\widctlpar\adjustright \f16\fs22\kerning20\cgrid \sbasedon16 \snext16 Heading Base;}{\s16\qj\fi360\sa240\sl240\slmult0\nowidctlpar\widctlpar\adjustright \f16\fs22\cgrid \sbasedon0 \snext16 Body Text;}{\s17\qj\sa240\sl200\slmult0\keep\nowidctlpar\widctlpar\adjustright \f16\fs18\cgrid \sbasedon16 \snext17 Footnote Base;}{\s18\qj\li720\ri720\sa240\sl240\slmult0\keep\nowidctlpar\widctlpar\box\brdrs\brdrw15\brsp280\brdrcf15 \adjustright \i\f16\fs22\cgrid \sbasedon16 \snext18 Block Quotation;}{\s19\qj\fi360\sa240\sl240\slmult0\keepn\nowidctlpar\widctlpar\adjustright \f16\fs22\cgrid \sbasedon16 \snext19 Body Text Keep;}{\s20\fi-120\li1920\sb60\sa240\sl200\slmult0\keepn\nowidctlpar\widctlpar\adjustright \i\f16\fs20\expnd1\expndtw5\cgrid \sbasedon21 \snext16 caption;}{\s21\keepn\nowidctlpar\widctlpar\adjustright \f16\fs22\cgrid \sbasedon0 \snext20 Picture;}{\s22\qc\sl240\slmult0\nowidctlpar\widctlpar\brdrt\brdrs\brdrw15\brsp120\brdrcf15 \brdrb\brdrs\brdrw15\brsp120\brdrcf15 \adjustright \b\caps\f16\fs18\expnd8\expndtw40\cgrid \snext0 Document Label;}{\*\cs23 \additive \super endnote reference;}{\s24\qj\sa240\sl200\slmult0\keep\nowidctlpar\widctlpar\adjustright \f16\fs18\cgrid \sbasedon17 \snext24 endnote text;}{\s25\qc\li-840\ri-840\sb600\sl240\slmult0\keep\nowidctlpar\widctlpar\tqc\tx4320\tqr\tx9480\adjustright \scaps\f16\expnd3\expndtw15\cgrid \sbasedon26 \snext25 footer;}{\s26\qc\sl240\slmult0\keep\nowidctlpar\widctlpar\tqc\tx4320\tqr\tx8640\adjustright \scaps\f16\fs22\expnd3\expndtw15\cgrid \sbasedon16 \snext26 Header Base;}{\*\cs27 \additive \super footnote reference;}{\s28\qj\sa240\sl200\slmult0\keep\nowidctlpar\widctlpar\adjustright \f16\fs18\cgrid \sbasedon17 \snext28 footnote text;}{\s29\qc\sa480\sl240\slmult0\keep\nowidctlpar\widctlpar\tqc\tx4320\tqr\tx8640\adjustright \scaps\f16\fs22\expnd3\expndtw15\cgrid \sbasedon26 \snext29 header;}{\s30\fi-360\li360\sl240\slmult0\nowidctlpar\widctlpar\adjustright \f16\fs21\cgrid \sbasedon31 \snext30 index 1;}{\s31\fi-360\li360\sl240\slmult0\nowidctlpar\widctlpar\adjustright \f16\fs22\cgrid \sbasedon0 \snext31 Index Base;}{\s32\fi-240\li360\nowidctlpar\widctlpar\adjustright \f16\fs21\cgrid \sbasedon31 \snext32 index 2;}{\s33\fi-240\li480\nowidctlpar\widctlpar\adjustright \f16\fs21\cgrid \sbasedon31 \snext33 index 3;}{\s34\fi-240\li600\nowidctlpar\widctlpar\adjustright \f16\fs21\cgrid \sbasedon31 \snext34 index 4;}{\s35\fi-360\li840\nowidctlpar\widctlpar\adjustright \f16\fs21\cgrid \sbasedon31 \snext35 index 5;}{\s36\sl480\slmult0\keepn\nowidctlpar\widctlpar\adjustright \f16\fs28\expnd-1\expndtw-5\cgrid \sbasedon15 \snext30 index heading;}{\s37\qc\sa240\sl240\slmult0\keep\keepn\nowidctlpar\widctlpar\brdrt\brdrs\brdrw15\brsp120\brdrcf15 \brdrb\brdrs\brdrw15\brsp120\brdrcf15 \adjustright \b\caps\f16\fs18\expnd4\expndtw20\kerning16\cgrid \sbasedon1 \snext37 Section Heading;}{\*\cs38 \additive \caps\fs18 Lead-in Emphasis;}{\*\cs39 \additive \fs18 line number;}{\s40\qj\fi-360\li360\sa240\sl240\slmult0\nowidctlpar\widctlpar\adjustright \f16\fs22\cgrid \sbasedon16 \snext40 List;}{\s41\qj\fi-360\li720\ri720\sa240\sl240\slmult0\nowidctlpar\widctlpar{\*\pn \pnlvlblt\ilvl10\ls2047\pnrnot0\pnf14\pnfs12\pnstart1\pnindent360\pnhang{\pntxtb n}}\ls2047\ilvl10\adjustright \f16\fs22\cgrid \sbasedon40 \snext41 List Bullet;}{\s42\qj\fi-360\li720\ri720\sa240\sl240\slmult0\nowidctlpar\widctlpar{\*\pn \pnlvlbody\ilvl11\ls2047\pnrnot0\pndec\pnstart1\pnindent360\pnhang{\pntxta )}}\ls2047\ilvl11\adjustright \f16\fs22\cgrid \sbasedon40 \snext42 List Number;}{\s43\fi360\sa240\nowidctlpar\widctlpar\adjustright \f2\fs22\cgrid \sbasedon16 \snext43 macro;}{\*\cs44 \additive \fs24 page number;}{\s45\qc\sl440\slmult0\keep\keepn\nowidctlpar\widctlpar\brdrt\brdrs\brdrw15\brsp240\brdrcf15 \adjustright \scaps\f16\fs44\expnd6\expndtw30\kerning20\cgrid \sbasedon46 \snext16 Subtitle Cover;}{\s46\qc\sa240\sl720\slmult0\keep\keepn\nowidctlpar\widctlpar\adjustright \caps\f16\fs64\expnd13\expndtw65\kerning20\cgrid \sbasedon15 \snext45 Title Cover;}{\*\cs47 \additive \super Superscript;}{\s48\sa240\sl240\slmult0\nowidctlpar\widctlpar\tqr\tldot\tx5040\adjustright \f16\fs22\cgrid \sbasedon0 \snext48 TOC Base;}{\s49\sa240\sl240\slmult0\nowidctlpar\widctlpar\tqr\tldot\tx5040\adjustright \f16\fs22\cgrid \sbasedon48 \snext49 table of figures;}{\s50\sa240\sl240\slmult0\nowidctlpar\widctlpar\tqr\tldot\tx5040\adjustright \f16\fs22\cgrid \sbasedon48 \snext50 toc 1;}{\s51\sa240\sl240\slmult0\nowidctlpar\widctlpar\tqr\tldot\tx5040\adjustright \f16\fs22\cgrid \sbasedon48 \snext51 toc 2;}{\s52\sa240\sl240\slmult0\nowidctlpar\widctlpar\tqr\tldot\tx5040\adjustright \i\f16\fs22\cgrid \sbasedon48 \snext52 toc 3;}{\s53\sa240\sl240\slmult0\nowidctlpar\widctlpar\tqr\tldot\tx5040\adjustright \i\f16\fs22\cgrid \sbasedon48 \snext53 toc 4;}{\s54\sa240\sl240\slmult0\nowidctlpar\widctlpar\tqr\tldot\tx5040\adjustright \i\f16\fs22\cgrid \sbasedon48 \snext54 toc 5;}{\s55\qc\sa720\sl240\slmult0\keep\keepn\nowidctlpar\widctlpar\brdrb\brdrs\brdrw15\brsp480\brdrcf15 \adjustright \caps\f16\fs48\expnd16\expndtw80\kerning20\cgrid \sbasedon15 \snext16 Section Label;}{\s56\qc\li-840\ri-840\sb600\sl240\slmult0\keep\nowidctlpar\widctlpar\tqc\tx4320\tqr\tx9480\adjustright \scaps\f16\expnd3\expndtw15\cgrid \sbasedon25 \snext56 Footer First;}{\s57\qc\li-840\ri-840\sb600\sl240\slmult0\keep\nowidctlpar\widctlpar\tqc\tx4320\tqr\tx9480\adjustright \scaps\f16\expnd3\expndtw15\cgrid \sbasedon25 \snext57 Footer Even;}{\s58\qc\li-840\ri-840\sb600\sl240\slmult0\keep\nowidctlpar\widctlpar\tqc\tx4320\tqr\tx9480\adjustright \scaps\f16\expnd3\expndtw15\cgrid \sbasedon25 \snext58 Footer Odd;}{\s59\qc\sa480\sl240\slmult0\keep\nowidctlpar\widctlpar\tqc\tx4320\tqr\tx8640\adjustright \scaps\f16\fs22\expnd3\expndtw15\cgrid \sbasedon29 \snext59 Header First;}{\s60\qc\sa480\sl240\slmult0\keep\nowidctlpar\widctlpar\tqc\tx4320\tqr\tx8640\adjustright \i\f16\fs22\expnd2\expndtw10\cgrid \sbasedon29 \snext60 Header Even;}{\s61\qc\sa480\sl240\slmult0\keep\nowidctlpar\widctlpar\tqc\tx4320\tqr\tx8640\adjustright \scaps\f16\fs22\expnd3\expndtw15\cgrid \sbasedon29 \snext61 Header Odd;}{\s62\qc\sa720\sl240\slmult0\keep\keepn\nowidctlpar\widctlpar\brdrb\brdrs\brdrw15\brsp480\brdrcf15 \adjustright \caps\f16\fs48\expnd16\expndtw80\kerning20\cgrid \sbasedon55 \snext62 Chapter Label;}{\s63\qc\sb140\sa420\keep\keepn\nowidctlpar\widctlpar\adjustright \scaps\f16\fs27\expnd4\expndtw20\kerning20\cgrid \sbasedon64 \snext63 Chapter Subtitle;}{\s64\qc\sb140\sa420\keep\keepn\nowidctlpar\widctlpar\adjustright \scaps\f16\fs27\expnd4\expndtw20\kerning20\cgrid \sbasedon65 \snext16 Subtitle;}{\s65\qc\sb140\keep\keepn\nowidctlpar\widctlpar\adjustright \caps\f16\fs44\expnd12\expndtw60\kerning20\cgrid \sbasedon15 \snext64 Title;}{\s66\qc\sb140\keep\keepn\nowidctlpar\widctlpar\adjustright \caps\f16\fs44\expnd12\expndtw60\kerning20\cgrid \sbasedon65 \snext66 Chapter Title;}{\s67\qj\fi360\li360\sa240\sl240\slmult0\nowidctlpar\widctlpar\adjustright \f16\fs22\cgrid \sbasedon16 \snext67 Body Text 2;}{\s68\qj\fi-360\li1080\ri720\sa240\sl240\slmult0\nowidctlpar\widctlpar{\*\pn \pnlvlbody\ilvl11\ls2047\pnrnot0\pndec\pnstart1\pnindent360\pnhang{\pntxta )}}\ls2047\ilvl11\adjustright \f16\fs22\cgrid \sbasedon42 \snext68 List Number 2;}{\s69\qj\fi-360\li1440\ri720\sa240\sl240\slmult0\nowidctlpar\widctlpar{\*\pn \pnlvlbody\ilvl11\ls2047\pnrnot0\pndec\pnstart1\pnindent360\pnhang{\pntxta )}}\ls2047\ilvl11\adjustright \f16\fs22\cgrid \sbasedon42 \snext69 List Number 3;}{\s70\qj\fi-360\li1080\ri720\sa240\sl240\slmult0\nowidctlpar\widctlpar{\*\pn \pnlvlblt\ilvl10\ls2047\pnrnot0\pnf14\pnfs12\pnstart1\pnindent360\pnhang{\pntxtb n}}\ls2047\ilvl10\adjustright \f16\fs22\cgrid \sbasedon41 \snext70 List Bullet 2;}{\s71\qj\fi-360\li1800\ri720\sa240\sl240\slmult0\nowidctlpar\widctlpar{\*\pn \pnlvlbody\ilvl11\ls2047\pnrnot0\pndec\pnstart1\pnindent360\pnhang{\pntxta )}}\ls2047\ilvl11\adjustright \f16\fs22\cgrid \sbasedon42 \snext71 List Number 4;}{\s72\qj\fi-360\li1440\ri720\sa240\sl240\slmult0\nowidctlpar\widctlpar{\*\pn \pnlvlblt\ilvl10\ls2047\pnrnot0\pnf14\pnfs12\pnstart1\pnindent360\pnhang{\pntxtb n}}\ls2047\ilvl10\adjustright \f16\fs22\cgrid \sbasedon41 \snext72 List Bullet 3;}{\s73\qj\fi-360\li1800\ri720\sa240\sl240\slmult0\nowidctlpar\widctlpar{\*\pn \pnlvlblt\ilvl10\ls2047\pnrnot0\pnf14\pnfs12\pnstart1\pnindent360\pnhang{\pntxtb n}}\ls2047\ilvl10\adjustright \f16\fs22\cgrid \sbasedon41 \snext73 List Bullet 4;}{\s74\qj\fi-360\li1800\sa240\sl240\slmult0\nowidctlpar\widctlpar\adjustright \f16\fs22\cgrid \sbasedon40 \snext74 List 5;}{\s75\qj\fi-360\li1440\sa240\sl240\slmult0\nowidctlpar\widctlpar\adjustright \f16\fs22\cgrid \sbasedon40 \snext75 List 4;}{\s76\qj\fi-360\li1080\sa240\sl240\slmult0\nowidctlpar\widctlpar\adjustright \f16\fs22\cgrid \sbasedon40 \snext76 List 3;}{\s77\qj\fi-360\li720\sa240\sl240\slmult0\nowidctlpar\widctlpar\adjustright \f16\fs22\cgrid \sbasedon40 \snext77 List 2;}{\*\cs78 \additive \caps\fs18 Emphasis;}{\*\cs79 \additive \fs16 annotation reference;}{\s80\qj\sa240\sl200\slmult0\keep\nowidctlpar\widctlpar\adjustright \f16\fs18\cgrid \sbasedon17 \snext80 annotation text;}{\s81\qj\fi-360\li2160\ri720\sa240\sl240\slmult0\nowidctlpar\widctlpar{\*\pn \pnlvlbody\ilvl11\ls2047\pnrnot0\pndec\pnstart1\pnindent360\pnhang{\pntxta )}}\ls2047\ilvl11\adjustright \f16\fs22\cgrid \sbasedon42 \snext81 List Number 5;}{\s82\qj\li720\ri720\sa240\sl240\slmult0\nowidctlpar\widctlpar\adjustright \f16\fs22\cgrid \sbasedon40 \snext82 List Continue;}{\s83\qj\li1080\ri720\sa240\sl240\slmult0\nowidctlpar\widctlpar\adjustright \f16\fs22\cgrid \sbasedon82 \snext83 List Continue 2;}{\s84\qj\li1440\ri720\sa240\sl240\slmult0\nowidctlpar\widctlpar\adjustright \f16\fs22\cgrid \sbasedon82 \snext84 List Continue 3;}{\s85\qj\li1800\ri720\sa240\sl240\slmult0\nowidctlpar\widctlpar\adjustright \f16\fs22\cgrid \sbasedon82 \snext85 List Continue 4;}{\s86\qj\li2160\ri720\sa240\sl240\slmult0\nowidctlpar\widctlpar\adjustright \f16\fs22\cgrid \sbasedon82 \snext86 List Continue 5;}{\s87\li720\nowidctlpar\widctlpar\adjustright \f16\fs22\cgrid \sbasedon0 \snext87 Normal Indent;}{\s88\qc\ri-240\sl240\slmult0\nowidctlpar\widctlpar\tx2160\pvpg\phpg\posx1728\posy14400\absw8640\abslock1\nowrap\adjustright \caps\f16\fs14\expnd6\expndtw30\cgrid \snext88 Return Address;}{\*\cs89 \additive \i\expnd14\expndtw70 \sbasedon10 Slogan;}{\s90\qc\sa40\sl240\slmult0\keep\nowidctlpar\widctlpar\pvpg\phmrg\posxc\posy888\absh1440\absw8640\nowrap\adjustright \caps\f16\fs22\expnd15\expndtw75\kerning18\cgrid \sbasedon16 \snext90 Company Name;}{\s91\qc\sb140\keep\keepn\nowidctlpar\widctlpar\adjustright \caps\f16\fs44\expnd12\expndtw60\kerning20\cgrid \sbasedon65 \snext91 Part Title;}{\s92\qc\sa720\sl240\slmult0\keep\keepn\nowidctlpar\widctlpar\brdrb\brdrs\brdrw15\brsp480\brdrcf15 \adjustright \caps\f16\fs48\expnd16\expndtw80\kerning20\cgrid \sbasedon55 \snext92 Part Label;}{\s93\nowidctlpar\widctlpar\tqr\tldot\tx7560\adjustright \f16\fs22\cgrid \sbasedon0 \snext93 table of authorities;}{\s94\sl720\slmult0\keepn\nowidctlpar\widctlpar\adjustright \caps\f16\fs22\expnd-2\expndtw-10\kerning28\cgrid \sbasedon0 \snext93 toa heading;}{\s95\qj\fi-360\li2160\ri720\sa240\sl240\slmult0\nowidctlpar\widctlpar{\*\pn \pnlvlblt\ilvl10\ls2047\pnrnot0\pnf14\pnfs12\pnstart1\pnindent360\pnhang{\pntxtb n}}\ls2047\ilvl10\adjustright \f16\fs22\cgrid \sbasedon41 \snext95 List Bullet 5;}}{\*\listtable{\list\listtemplateid-1\listsimple{\listlevel\levelnfc0\leveljc0\levelfollow0\levelstartat0\levelspace0\levelindent0{\leveltext\'01*;}{\levelnumbers;}}{\listname ;}\listid-2}{\list\listtemplateid1759118860\listsimple{\listlevel\levelnfc0\leveljc0\levelfollow0\levelstartat1\levelold\levelspace0\levelindent-360{\leveltext\'02\'00.;}{\levelnumbers\'01;}\fi360\li0 }{\listname ;}\listid88015832}{\list\listtemplateid-1697900756\listsimple{\listlevel\levelnfc0\leveljc0\levelfollow0\levelstartat1\levelold\levelspace0\levelindent-360{\leveltext\'02\'00.;}{\levelnumbers\'01;}\fi360\li0 }{\listname ;}\listid681589074}}{\*\listoverridetable{\listoverride\listid88015832\listoverridecount0\ls1}{\listoverride\listid88015832\listoverridecount1{\lfolevel\listoverrideformat{\listlevel\levelnfc0\leveljc0\levelfollow0\levelstartat1\levelold\levelspace0\levelindent-360{\leveltext\'02\'00.;}{\levelnumbers\'01;}\fi360\li0 }}\ls2}{\listoverride\listid88015832\listoverridecount1{\lfolevel\listoverrideformat{\listlevel\levelnfc0\leveljc0\levelfollow0\levelstartat1\levelold\levelspace0\levelindent-360{\leveltext\'02\'00.;}{\levelnumbers\'01;}\fi360\li0 }}\ls3}{\listoverride\listid88015832\listoverridecount1{\lfolevel\listoverrideformat{\listlevel\levelnfc0\leveljc0\levelfollow0\levelstartat1\levelold\levelspace0\levelindent-360{\leveltext\'02\'00.;}{\levelnumbers\'01;}\fi360\li0 }}\ls4}{\listoverride\listid88015832\listoverridecount1{\lfolevel\listoverrideformat{\listlevel\levelnfc0\leveljc0\levelfollow0\levelstartat1\levelold\levelspace0\levelindent-360{\leveltext\'02\'00.;}{\levelnumbers\'01;}\fi360\li0 }}\ls5}{\listoverride\listid681589074\listoverridecount0\ls6}{\listoverride\listid681589074\listoverridecount1{\lfolevel\listoverrideformat{\listlevel\levelnfc0\leveljc0\levelfollow0\levelstartat1\levelold\levelspace0\levelindent-360{\leveltext\'02\'00.;}{\levelnumbers\'01;}\fi360\li0 }}\ls7}{\listoverride\listid681589074\listoverridecount1{\lfolevel\listoverrideformat{\listlevel\levelnfc0\leveljc0\levelfollow0\levelstartat1\levelold\levelspace0\levelindent-360{\leveltext
\'02\'00.;}{\levelnumbers\'01;}\fi360\li0 }}\ls8}{\listoverride\listid681589074\listoverridecount1{\lfolevel\listoverrideformat{\listlevel\levelnfc0\leveljc0\levelfollow0\levelstartat1\levelold\levelspace0\levelindent-360{\leveltext\'02\'00.;}{\levelnumbers\'01;}\fi360\li0 }}\ls9}{\listoverride\listid-2\listoverridecount1{\lfolevel\listoverrideformat{\listlevel\levelnfc23\leveljc0\levelfollow0\levelstartat1\levelold\levelspace0\levelindent360{\leveltext\'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0 \fi-360\li1080 }}\ls10}}{\info{\title UTILLIB DOCUMENTATION		}{\author Tomas Palmer}{\operator James A. Mooney}{\creatim\yr1996\mo4\dy16\hr4\min53}{\revtim\yr1997\mo3\dy31\hr10\min13}{\version5}{\edmins9}{\nofpages5}{\nofwords584}{\nofchars3332}{\*\company Microsoft}{\nofcharsws4091}{\vern71}}\widowctrl\ftnbj\aenddoc\lytprtmet\formshade\viewkind4\viewscale166\viewzk2\pgbrdrhead\pgbrdrfoot \fet0\sectd \linex0\endnhere\sectdefaultcl {\*\pnseclvl1\pnucrm\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl2\pnucltr\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl3\pndec\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl4\pnlcltr\pnstart1\pnindent720\pnhang{\pntxta )}}{\*\pnseclvl5\pndec\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl6\pnlcltr\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl7\pnlcrm\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl8\pnlcltr\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl9\pnlcrm\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}\pard\plain \s66\qc\sb140\keep\keepn\nowidctlpar\widctlpar\adjustright \caps\f16\fs44\expnd12\expndtw60\kerning20\cgrid {utillib DOCUMENTATION\tab \tab 
\par }\pard\plain \s90\qc\sa40\sl240\slmult0\keep\nowidctlpar\widctlpar\pvpg\phmrg\posxc\posy888\absh1440\absw8640\nowrap\adjustright \caps\f16\fs22\expnd15\expndtw75\kerning18\cgrid {Tuesday, April 16, 1996
\par 
\par Tomas Palmer
\par }\pard\plain \s16\qj\fi360\sa240\sl240\slmult0\nowidctlpar\widctlpar\adjustright \f16\fs22\cgrid {\page 
\par }\pard\plain \s66\qc\sb140\keep\keepn\nowidctlpar\widctlpar\adjustright \caps\f16\fs44\expnd12\expndtw60\kerning20\cgrid {iNTRODUction
\par }\pard\plain \s63\qc\sb140\sa420\keep\keepn\nowidctlpar\widctlpar\adjustright \scaps\f16\fs27\expnd4\expndtw20\kerning20\cgrid {Why was this library created?
\par }\pard\plain \s16\qj\fi360\sa240\sl240\slmult0\nowidctlpar\widctlpar\adjustright \f16\fs22\cgrid {This document describes the setup and functionality of the UtilLib which is designed to be used in a WBEM project. This library provides functionality that is common to all WBEM components. This includes error logging, Registry browsing, parsers and WBEM event generation. The UtilLib library also contains the first of our own MFC like classes. These and future classes will reduce our dependence on MFC and component specific classes.
\par }\pard\plain \s62\qc\sa720\sl240\slmult0\keep\keepn\nowidctlpar\widctlpar\brdrb\brdrs\brdrw15\brsp480\brdrcf15 \adjustright \caps\f16\fs48\expnd16\expndtw80\kerning20\cgrid {
\par }\pard\plain \s66\qc\sb140\keep\keepn\nowidctlpar\widctlpar\adjustright \caps\f16\fs44\expnd12\expndtw60\kerning20\cgrid {setting up UtilLib
\par }\pard\plain \s63\qc\sb140\sa420\keep\keepn\nowidctlpar\widctlpar\tx900\adjustright \scaps\f16\fs27\expnd4\expndtw20\kerning20\cgrid {Setting up your code
\par {\pntext\pard\plain\s16 \f16\fs22\cgrid \hich\af16\dbch\af0\loch\f16 1.\tab}}\pard\plain \s16\qj\fi360\sa240\sl240\slmult0\nowidctlpar\widctlpar{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec\pnstart1\pnindent-360 {\pntxta .}}\ls1\adjustright \f16\fs22\cgrid { Make sure the }{\i\fs24 include}{ path for your project contains }{\b \\pandora\\include}{
\par {\pntext\pard\plain\s16 \f16\fs22\cgrid \hich\af16\dbch\af0\loch\f16 2.\tab}}\pard \s16\qj\fi360\sa240\sl240\slmult0\nowidctlpar\widctlpar{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec\pnstart1\pnindent-360 {\pntxta .}}\ls2\adjustright { Add }{\b #include <UtilLib.h> }{to your source file
\par {\pntext\pard\plain\s16 \f16\fs22\cgrid \hich\af16\dbch\af0\loch\f16 3.\tab}}\pard \s16\qj\fi360\sa240\sl240\slmult0\nowidctlpar\widctlpar{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec\pnstart1\pnindent-360 {\pntxta .}}\ls3\adjustright { For debug builds link to: }{\b \\Pandora\\UtilLib\\debug\\UtilLib.lib}{
\par {\pntext\pard\plain\s16 \f16\fs22\cgrid \hich\af16\dbch\af0\loch\f16 4.\tab}}\pard \s16\qj\fi360\sa240\sl240\slmult0\nowidctlpar\widctlpar{\*\pn \pnlvlbody\ilvl0\ls4\pnrnot0\pndec\pnstart1\pnindent-360 {\pntxta .}}\ls4\adjustright { For release builds link to }{\b \\Pandora\\Lib\\MFC\\UtilLibM.lib }{
\par {\pntext\pard\plain\s16 \f16\fs22\cgrid \hich\af16\dbch\af0\loch\f16 5.\tab}}\pard \s16\fi360\sa240\sl240\slmult0\nowidctlpar\widctlpar{\*\pn \pnlvlbody\ilvl0\ls5\pnrnot0\pndec\pnstart1\pnindent-360 {\pntxta .}}\ls5\adjustright { If your project is an .EXE project, use the preprocessor defintion }{\b\fs20 NO_POLARITY}{. }{\i This will  
\par }\pard \s16\sa240\sl240\slmult0\nowidctlpar\widctlpar\ilvl12\adjustright {\i          change when the library is a DLL.
\par }\pard \s16\qc\sa240\sl240\slmult0\nowidctlpar\widctlpar\ilvl12\adjustright {\b\fs18           }{\b\i\fs18 The reason that the library name ends with an M and is located under a MFC sub-directory is that this version of the library still has some MFC dependencies. When all of the MFC classes have been replaced - UtilLib.lib will appear at \\Pandora\\Lib}{\fs18 
\par }\pard\plain \s63\qc\sb140\sa420\keep\keepn\nowidctlpar\widctlpar\tx900\adjustright \scaps\f16\fs27\expnd4\expndtw20\kerning20\cgrid { \page 
\par }\pard \s63\qc\sb140\sa420\keep\keepn\nowidctlpar\widctlpar\tx900\adjustright {Setting up the registry
\par }\pard\plain \s16\qj\fi360\sa240\sl240\slmult0\nowidctlpar\widctlpar\adjustright \f16\fs22\cgrid {Because the actual location of the log files is defined in the Registry, you must make sure that there is a registry entry for your component. If there is no entry for your component then the error will be sent to the default error log. If you property set up your component information in the registry you can then route the error (trace) information to any file name and location and turn off the logging to this file at any time.
\par }\pard \s16\qj\fi360\sa240\sl240\slmult0\nowidctlpar\widctlpar\adjustright {To properly set your component up for logging you must set up the Registry as follows:
\par {\pntext\pard\plain\s16 \f16\fs22\cgrid \hich\af16\dbch\af0\loch\f16 1.\tab}}\pard \s16\qj\fi360\sa240\sl240\slmult0\nowidctlpar\widctlpar{\*\pn \pnlvlbody\ilvl0\ls6\pnrnot0\pndec\pnstart1\pnindent-360 {\pntxta .}}\ls6\adjustright { Locate }{\b \\HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\WBEM}{
\par {\pntext\pard\plain\s16 \b\f16\fs22\cgrid \hich\af16\dbch\af0\loch\f16 2.\tab}}\pard \s16\qj\fi360\sa240\sl240\slmult0\nowidctlpar\widctlpar{\*\pn \pnlvlbody\ilvl0\ls7\pnrnot0\pndec\pnstart1\pnindent-360 {\pntxta .}}\ls7\adjustright {\b  }{Using your component name, add a subkey
\par {\pntext\pard\plain\s16 \f16\fs22\cgrid \hich\af16\dbch\af0\loch\f16 3.\tab}}\pard \s16\qj\fi360\sa240\sl240\slmult0\nowidctlpar\widctlpar{\*\pn \pnlvlbody\ilvl0\ls8\pnrnot0\pndec\pnstart1\pnindent-360 {\pntxta .}}\ls8\adjustright {Open you components subkey and add another subkey named }{\b Log}{
\par {\pntext\pard\plain\s16 \f16\fs22\cgrid \hich\af16\dbch\af0\loch\f16 4.\tab}}\pard \s16\qj\fi360\sa240\sl240\slmult0\nowidctlpar\widctlpar{\*\pn \pnlvlbody\ilvl0\ls9\pnrnot0\pndec\pnstart1\pnindent-360 {\pntxta .}}\ls9\adjustright {Open the subkey }{\b Log }{and add the following values:
\par {\pntext\pard\plain\s16 \f3\fs22\cgrid \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \s16\qj\fi-360\li1080\sa240\nowidctlpar\widctlpar{\*\pn \pnlvlblt\ilvl0\ls10\pnrnot0\pnf3\pnstart1\pnindent360\pnhang{\pntxtb \'b7}}\ls10\adjustright {\b LogFile }{as a REG_SZ and for the value use the fully qualified path to the log file you want to use
\par {\pntext\pard\plain\s16 \f3\fs22\cgrid \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \s16\qj\fi-360\li1080\sa240\nowidctlpar\widctlpar{\*\pn \pnlvlblt\ilvl0\ls10\pnrnot0\pnf3\pnstart1\pnindent360\pnhang{\pntxtb \'b7}}\ls10\adjustright {\b LoggingEnabled }{as a REG_DWORD and for the value use }{\b 1 }{for TRUE and }{\b 0}{ for FALSE
\par }\pard \s16\qj\li720\sa240\nowidctlpar\widctlpar\adjustright {
\par }\pard \s16\qj\sa240\sl240\slmult0\nowidctlpar\widctlpar\adjustright {
\par }\pard\plain \s66\qc\sb140\keep\keepn\nowidctlpar\widctlpar\adjustright \caps\f16\fs44\expnd12\expndtw60\kerning20\cgrid {Using UtilLib
\par }\pard\plain \s16\qj\fi360\sa240\sl240\slmult0\nowidctlpar\widctlpar\adjustright \f16\fs22\cgrid {As of the writing of this document the main functionality of UtilLib is error logging and programmer trace output. Until the actual format and type of WBEM errors are define - error logging }{\i and }{tracing information will be provided through WBEM Event generation. Currently these events are constructed for you by a C++ class and then routed to log file locations which have been defined in the registry. An example of how to use these classes is described later in this document. Eventually these events will be sent to MOServer and be dispatched to WBEM clients or Providers which has registered to receive error events.
\par 
\par }\pard\plain \s62\qc\sa720\sl240\slmult0\keep\keepn\nowidctlpar\widctlpar\brdrb\brdrs\brdrw15\brsp480\brdrcf15 \adjustright \caps\f16\fs48\expnd16\expndtw80\kerning20\cgrid {Sample code
\par }\pard\plain \s63\qc\sb140\sa420\keep\keepn\nowidctlpar\widctlpar\adjustright \scaps\f16\fs27\expnd4\expndtw20\kerning20\cgrid {Generating a Trace Event
\par }\pard\plain \s16\qj\li720\sa240\nowidctlpar\widctlpar\adjustright \f16\fs22\cgrid {\b // YOURSOURCEFILE.CPP
\par }\pard \s16\qj\li720\sa240\nowidctlpar\widctlpar\adjustright {\b #include <UtilLib.h>
\par }\pard \s16\qj\li720\sa240\nowidctlpar\widctlpar\adjustright {\b void Foo(void)
\par }\pard \s16\qj\li720\sa240\nowidctlpar\widctlpar\adjustright {\b \{
\par }\pard \s16\qj\li720\sa240\nowidctlpar\widctlpar\adjustright {\b\fs20  // }{\fs20 Instance an event trace object for a component
\par }\pard \s16\qj\li720\sa240\nowidctlpar\widctlpar\adjustright {\fs20 // If no name is supplied then the event will be sent to the default log}{\b\fs20 
\par }\pard \s16\qj\li720\sa240\nowidctlpar\widctlpar\adjustright {\b  }{\b\fs24 CMOEvent_Trace}{\b  }{MyTraceEvent(L \ldblquote MyComponentName\rdblquote );  
\par }\pard \s16\qj\li720\sa240\nowidctlpar\widctlpar\adjustright {\b 
\par }\pard \s16\qj\fi360\sa240\nowidctlpar\widctlpar\adjustright {\b       }{MyTraceEvent.}{\b Generate(__FILE__,__LINE__, \ldblquote My message number %d\rdblquote ,1);
\par }\pard \s16\qj\fi360\sa240\nowidctlpar\widctlpar\adjustright {      MyTraceEvent.}{\b Generate(__FILE__,__LINE__, \ldblquote Another Message %s\rdblquote , \ldblquote My String\rdblquote );
\par }\pard \s16\qj\fi360\sa240\nowidctlpar\widctlpar\adjustright {      MyTraceEvent.}{\b Generate(__FILE__,__LINE__,L\ldblquote Wide Message %s\rdblquote , L\ldblquote WString\rdblquote );
\par }\pard \s16\qj\li720\sa240\nowidctlpar\widctlpar\adjustright {\b \}
\par }\pard \s16\qj\li720\sa240\nowidctlpar\widctlpar\adjustright {\b 
\par }\pard \s16\qj\li720\sa240\nowidctlpar\widctlpar\adjustright {\b Providing the Registry has been set up for your component there will be a log file containing the output of the above events using the following }{\b\i\fs24 format}{\b 
\par }\pard \s16\qj\fi360\li720\sa240\sl240\slmult0\nowidctlpar\widctlpar\adjustright {\b 
\par }\pard \s16\qj\fi360\li720\sa240\sl240\slmult0\nowidctlpar\widctlpar\adjustright {\b\f0 MOEvent_Trace (\{70874e30-be5c-11cf-8d9b-00aa004bd99e\}):
\par }\pard \s16\qj\fi360\li720\sa240\sl240\slmult0\nowidctlpar\widctlpar\adjustright {\b\f0     MachineName = YOURMACHINENAME
\par }\pard \s16\qj\fi360\li720\sa240\sl240\slmult0\nowidctlpar\widctlpar\adjustright {\b\f0     ModuleName = C:\\WBEM\\test.EXE
\par }\pard \s16\qj\fi360\li720\sa240\sl240\slmult0\nowidctlpar\widctlpar\adjustright {\b\f0     UserName = your-emailname
\par }\pard \s16\qj\fi360\li720\sa240\sl240\slmult0\nowidctlpar\widctlpar\adjustright {\b\f0     OperatingSystemName = WinNT
\par }\pard \s16\qj\fi360\li720\sa240\sl240\slmult0\nowidctlpar\widctlpar\adjustright {\b\f0     OperatingSystemMajorVersion = 3
\par }\pard \s16\qj\fi360\li720\sa240\sl240\slmult0\nowidctlpar\widctlpar\adjustright {\b\f0     OperatingSystemMinorVersion = 51
\par }\pard \s16\qj\fi360\li720\sa240\sl240\slmult0\nowidctlpar\widctlpar\adjustright {\b\f0     OperatingSystemBuildNumber = 1057
\par }\pard \s16\qj\fi360\li720\sa240\sl240\slmult0\nowidctlpar\widctlpar\adjustright {\b\f0     OperatingSystemCSDVersion = 
\par }\pard \s16\qj\fi360\li720\sa240\sl240\slmult0\nowidctlpar\widctlpar\adjustright {\b\f0     ProcessID = 0d0H  (208)
\par }\pard \s16\qj\fi360\li720\sa240\sl240\slmult0\nowidctlpar\widctlpar\adjustright {\b\f0     ThreadID = 0ddH  (221)
\par }\pard \s16\qj\fi360\li720\sa240\sl240\slmult0\nowidctlpar\widctlpar\adjustright {\b\f0     TraceFileName = E:\\pandora\\mo\\MOPROP\\YourSourceFile.cpp
\par }\pard \s16\qj\fi360\li720\sa240\sl240\slmult0\nowidctlpar\widctlpar\adjustright {\b\f0     TraceLineNumber = 669
\par }\pard \s16\qj\fi360\li720\sa240\sl240\slmult0\nowidctlpar\widctlpar\adjustright {\b\f0     TraceMessage = My message number 1
\par }\pard \s16\qj\fi360\li720\sa240\sl240\slmult0\nowidctlpar\widctlpar\adjustright {\b\f0     SequenceNumber = 792838211
\par }\pard \s16\qj\fi360\li720\sa240\sl240\slmult0\nowidctlpar\widctlpar\adjustright {\b\f0     TimeStamp = Wed Jul 17 12:45:53 1996
\par }\pard \s16\qj\fi360\li720\sa240\sl240\slmult0\nowidctlpar\widctlpar\adjustright {\b\f0 
\par }\pard \s16\qj\li720\sa240\nowidctlpar\widctlpar\adjustright {\f0 
\par }\pard \s16\qj\li720\sa240\nowidctlpar\widctlpar\adjustright {
\par }\pard \s16\qj\sa240\sl240\slmult0\nowidctlpar\widctlpar\adjustright {
\par }\pard \s16\qj\sa240\sl240\slmult0\nowidctlpar\widctlpar\adjustright {\b 
\par }\pard \s16\qj\sa240\sl240\slmult0\nowidctlpar\widctlpar\adjustright {\b 
\par }\pard \s16\qj\sa240\sl240\slmult0\nowidctlpar\widctlpar\adjustright {
\par }\pard \s16\qj\fi360\sa240\sl240\slmult0\nowidctlpar\widctlpar\adjustright {
\par 
\par }\pard\plain \s20\fi-120\li1920\sb60\sa240\sl200\slmult0\keepn\nowidctlpar\widctlpar\adjustright \i\f16\fs20\expnd1\expndtw5\cgrid {
\par }}
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\wmi\wbem\policman\mof\adschema.txt ===
OID for policy attributes: 1.2.840.113556.1.4.7000.418.*
OID for Policy classes:    1.2.840.113556.1.5.7000.169.*

Policy Parameter Class Types
----------------------------

Usage: Instances represent numeric range type named
Update Frequency:
Update Privilege:
UI:

cn = ms-wmi-RangeParam
governsID = 1.2.840.113556.1.5.7000.169.1
rDnAttId = cn
mustContain =
  ms-wmi-PropertyName,
  ms-wmi-TargetClass,
  ms-wmi-TargetType
possSuperiors = Policy
objectClassCategory = 1
subClassOf = top
defaultObjectCategory = ms-wmi-RangeParam
defaultHidingValue = FALSE
defaultSecurityDescriptor
schemaIdGUID = <unique GUID>
objectClass = classSchema

Usage: Instances represent numeric range type named parameter settings for individual policy objs
Update Frequency:
Update Privilege:
UI:

cn = ms-wmi-IntRangeParam
governsID = 1.2.840.113556.1.5.7000.169.2
rDnAttId = cn
mustContain = 
  ms-wmi-intDefault
mayContain = 
  ms-wmi-intMin,
  ms-wmi-intMax
possSuperiors = Policy
objectClassCategory = 1
subClassOf = ms-wmi-RangeParam
defaultObjectCategory = ms-wmi-IntRangeParam
defaultHidingValue = FALSE
defaultSecurityDescriptor
schemaIdGUID = <unique GUID>
objectClass = classSchema

(other range parameters are defined similarly)

Usage: Instances represent numeric set type named parameter settings for individual policy objs
Update Frequency:
Update Privilege:
UI:

cn = ms-wmi-IntSetParam
governsID = 1.2.840.113556.1.5.7000.169.3
rDnAttId = cn
mustContain = 
  ms-wmi-intDefault
mayContain = 
  ms-wmi-intValidValues
possSuperiors = Policy
objectClassCategory = 1
subClassOf = ms-wmi-RangeParam
defaultObjectCategory = ms-wmi-IntSetParam
defaultHidingValue = FALSE
defaultSecurityDescriptor
schemaIdGUID = <unique GUID>
objectClass = classSchema

(other set parameters are defined similarly)

PolicyTemplate Class
--------------------

Usage: Instances of this class represent instances of policy object in AD
Update Frequency:
Update Privilege:
UI:

cn = ms-wmi-PolicyTemplate
governsID = 1.2.840.113556.1.5.7000.169.4
rDnAttId = cn
mustContain =
  ms-wmi-ID,
  ms-wmi-Mof,
  ms-wmi-Name,
  ms-wmi-TargetNamespace,
  ms-wmi-TargetClass,
  ms-wmi-TargetPath,
  ms-wmi-SourceOrganization,
  ms-wmi-Author,
  ms-wmi-ChangeDate,
  ms-wmi-CreationDate
possSuperiors = Container
objectClassCategory = 1
subClassOf = top
defaultObjectCategory = ms-wmi-PolicyTemplate
defaultHidingValue = FALSE
defaultSecurityDescriptor =
schemaIdGUID = <unique GUID>
objectClass = classSchema

Usage: Instances of this class represent instances of policy
Update Frequency:
Update Privilege:
UI:

cn = ms-wmi-SimplePolicyTemplate
governsID = 1.2.840.113556.1.5.7000.169.5
rDnAttId = cn
mustContain =
  ms-wmi-TargetObject
possSuperiors = Container
objectClassCategory = 1
subClassOf = ms-wmi-PolicyTemplate
defaultObjectCategory = ms-wmi-SimplePolicyTemplate
defaultHidingValue = FALSE
defaultSecurityDescriptor =
schemaIdGUID = <unique GUID>
objectClass = classSchema

Usage: Instances of this class represent instances of policy
Update Frequency:
Update Privilege:
UI:

cn = ms-wmi-MergeablePolicyTemplate
governsID = 1.2.840.113556.1.5.7000.169.6
rDnAttId = cn
mustContain =
possSuperiors = Container
objectClassCategory = 1
subClassOf = ms-wmi-PolicyTemplate
defaultObjectCategory = ms-wmi-MergeablePolicyTemplate
defaultHidingValue = FALSE
defaultSecurityDescriptor =
schemaIdGUID = <unique GUID>
objectClass = classSchema

Som Class
----------

Usage: represents an individual som
Update Frequency:
Update Privilege:
UI:

cn = ms-wmi-Rule
governsID = 1.2.840.113556.1.5.7000.169.7
rDnAttId = cn
mustContain =
  ms-wmi-QueryLanguage,
  ms-wmi-TargetNameSpace,
  ms-wmi-Query
possSuperiors = ms-wmi-Som
objectClassCategory = 1
subClassOf = top
defaultObjectCategory = ms-wmi-Som
defaultHidingValue = FALSE
defaultSecurityDescriptor =
schemaIdGUID = <unique GUID>
objectClass = classSchema

Usage: represents an individual som
Update Frequency:
Update Privilege:
UI:

cn = ms-wmi-Som
governsID = 1.2.840.113556.1.5.7000.169.8
rDnAttId = cn
mustContain =
  ms-wmi-ID,
  ms-wmi-Name,
  ms-wmi-SourceOrganization,
  ms-wmi-Author,
  ms-wmi-ChangeDate,
  ms-wmi-CreationDate
possSuperiors = Container
objectClassCategory = 1
subClassOf = top
defaultObjectCategory = ms-wmi-Som
defaultHidingValue = FALSE
defaultSecurityDescriptor =
schemaIdGUID = <unique GUID>
objectClass = classSchema

PolicyType Class
----------------

Usage: Holds a mof definition for a specific policy type.
Update Frequency:
Update Privilege:
UI:

cn = ms-wmi-PolicyType
governsID = 1.2.840.113556.1.5.7000.169.9
rDnAttId = cn
mustContain =
  ms-wmi-TargetClass,
  ms-wmi-TargetNameSpace,
  ms-wmi-ClassDefinition
possSuperiors = Container
objectClassCategory = 1
subClassOf = top
defaultObjectCategory = ms-wmi-PolicyType
defaultHidingValue = FALSE
defaultSecurityDescriptor =
schemaIdGUID = <unique GUID>
objectClass = classSchema

Class WMIGPO
------------

Usage: The author of a policy object
Size:
Update Frequency:
Update Privilege:
UI:

cn = ms-wmi-Reference
governsID = 1.2.840.113556.1.5.7000.169.10
rDnAttId = cn
mustContain =
  ms-wmi-ID
possSuperiors = <GPO object>
objectClassCategory = 1
subClassOf = top
defaultObjectCategory = ms-wmi-Reference
defaultHidingValue = FALSE
defaultSecurityDescriptor =
schemaIdGUID = <unique GUID>
objectClass = classSchema

Class Attributes
----------------

Usage: The author of a policy object
Size:
Update Frequency:
Update Privilege:
UI:

  cn = ms-wmi-Author
  singleValued = TRUE
  objectClass = attributeSchema
  attributeID = 1.2.840.113556.1.4.7000.418.1
  attributeSyntax = 2.5.5.12  // unicode string
  oMSyntax = 64
  searchFlags = 0

Usage: 
Size:
Update Frequency:
Update Privilege:
UI:

  cn = ms-wmi-ChangeDate
  singleValued = TRUE
  objectClass = attributeSchema
  attributeID = 1.2.840.113556.1.4.7000.418.2
  attributeSyntax = 2.5.5.12  // unicode string
  oMSyntax = 64
  searchFlags = 0

Usage:
Size:
Update Frequency:
Update Privilege:
UI:

  cn = ms-wmi-ClassDefinition
  singleValued = TRUE
  objectClass = attributeSchema
  attributeID = 1.2.840.113556.1.4.7000.418.3
  attributeSyntax = 2.5.5.12
  oMSyntax = 64
  searchFlags = 0

Usage: 
Size:
Update Frequency:
Update Privilege:
UI:

  cn = ms-wmi-CreationDate
  singleValued = TRUE
  objectClass = attributeSchema
  attributeID = 1.2.840.113556.1.4.7000.418.4
  attributeSyntax = 2.5.5.12  // unicode string
  oMSyntax = 64
  searchFlags = 0

Usage: signed integer numeric default value for a numeric policy parameter
Size:
Update Frequency:
Update Privilege:
UI:

  cn = ms-wmi-intDefault
  singleValued = TRUE
  objectClass = attributeSchema
  attributeID = 1.2.840.113556.1.4.7000.418.5
  attributeSyntax = 2.5.5.9 // Integer
  oMSyntax = 2
  searchFlags = 0

Usage: Unique id (GUID) for a policy object so references to it can be expressed in AD
Size:
Update Frequency:
Update Privilege:
UI:

  cn = ms-wmi-ID
  singleValued = TRUE
  objectClass = attributeSchema
  attributeID = 1.2.840.113556.1.4.7000.418.6
  attributeSyntax = 2.5.5.12  // unicode string
  oMSyntax = 64
  searchFlags = 1

Usage: signed integer minimum value for a numeric range parameter
Size:
Update Frequency:
Update Privilege:
UI:

  cn = ms-wmi-intMin
  singleValued = TRUE
  objectClass = attributeSchema
  attributeID = 1.2.840.113556.1.4.7000.418.7
  attributeSyntax = 2.5.5.9 // Integer
  oMSyntax = 2
  searchFlags = 0

Usage: signed integer maximum value for a numeric range parameter
Size:
Update Frequency:
Update Privilege:
UI:

  cn = ms-wmi-intMax
  singleValued = TRUE
  objectClass = attributeSchema
  attributeID = 1.2.840.113556.1.4.7000.418.8
  attributeSyntax = 2.5.5.9 // Integer
  oMSyntax = 2
  searchFlags = 0

Usage: signed integer collection of set members for a numeric set parameter
Size:
Update Frequency:
Update Privilege:
UI:

  cn = ms-wmi-intValidValues
  singleValued = FALSE
  objectClass = attributeSchema
  attributeID = 1.2.840.113556.1.4.7000.418.9
  attributeSyntax = 2.5.5.9 // Integer
  oMSyntax = 2
  searchFlags = 0

Usage: 
Size:
Update Frequency:
Update Privilege:
UI:

  cn = ms-wmi-Name
  singleValued = TRUE
  objectClass = attributeSchema
  attributeID =  1.2.840.113556.1.4.7000.418.10
  attributeSyntax = 2.5.5.12 // unicode string
  oMSyntax = 64
  searchFlags = 0

Usage: the name of a parameter object that is part of some policy instance
Size:
Update Frequency:
Update Privilege:
UI:

  cn = ms-wmi-PropertyName
  singleValued = TRUE
  objectClass = attributeSchema
  attributeID = 1.2.840.113556.1.4.7000.418.11
  attributeSyntax = 2.5.5.12  // unicode string
  oMSyntax = 64
  searchFlags = 0

Usage: collection of one or more strings representing rules belonging to some som object
Size:
Update Frequency:
Update Privilege:
UI:

  cn = ms-wmi-Query
  singleValued = TRUE
  objectClass = attributeSchema
  attributeID = 1.2.840.113556.1.4.7000.418.12
  attributeSyntax = 2.5.5.12  // unicode string
  oMSyntax = 64
  searchFlags = 0

Usage: collection of one or more strings representing rules belonging to some som object
Size:
Update Frequency:
Update Privilege:
UI:

  cn = ms-wmi-QueryLanguage
  singleValued = TRUE
  objectClass = attributeSchema
  attributeID = 1.2.840.113556.1.4.7000.418.13
  attributeSyntax = 2.5.5.12  // unicode string
  oMSyntax = 64
  searchFlags = 0

Usage: Optional organization that an object is associated with
Size:
Update Frequency:
Update Privilege:
UI:

  cn = ms-wmi-SourceOrganization
  singleValued = TRUE
  objectClass = attributeSchema
  attributeID = 1.2.840.113556.1.4.7000.418.14
  attributeSyntax = 2.5.5.12  // unicode string
  oMSyntax = 64
  searchFlags = 0

Usage: The name of the actual policy type that an instance of PolicyTemplate actually represents
Size:
Update Frequency:
Update Privilege:
UI:

  cn = ms-wmi-TargetClass
  singleValued = TRUE
  objectClass = attributeSchema
  attributeID = 1.2.840.113556.1.4.7000.418.15
  attributeSyntax = 2.5.5.12  // unicode string
  oMSyntax = 64
  searchFlags = 0

Usage: The namespace in WMI that an object should reside in
Size:
Update Frequency:
Update Privilege:
UI:

  cn = ms-wmi-TargetNameSpace
  singleValued = TRUE
  objectClass = attributeSchema
  attributeID = 1.2.840.113556.1.4.7000.418.16
  attributeSyntax = 2.5.5.12  // unicode string
  oMSyntax = 64
  searchFlags = 0

Usage: 
Size:
Update Frequency:
Update Privilege:
UI:

  cn = ms-wmi-TargetObject
  singleValued = TRUE
  objectClass = attributeSchema
  attributeID =  1.2.840.113556.1.4.7000.418.17
  attributeSyntax = 2.5.5.12  // unicode string
  oMSyntax = 64
  searchFlags = 0

Usage: 
Size:
Update Frequency:
Update Privilege:
UI:

  cn = ms-wmi-TargetType
  singleValued = TRUE
  objectClass = attributeSchema
  attributeID = 1.2.840.113556.1.4.7000.418.18
  attributeSyntax = 2.5.5.12  // unicode string
  oMSyntax = 64
  searchFlags = 0

Usage:
Size:
Update Frequency:
Update Privilege:
UI:

  cn = ms-wmi-Mof
  singleValued = TRUE
  objectClass = attributeSchema
  attributeID =  1.2.840.113556.1.4.7000.418.19
  attributeSyntax = 2.5.5.12 // unicode string
  oMSyntax = 64
  searchFlags = 0
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\wmi\wbem\providers\ping\dll\getobject.txt ===
Win32_PingProtocolStatus.Address="Nadir3",TimeToLive=80,Timeout=4000,BufferSize=32,NoFragmentation=FALSE,TypeofService=0,RecordRoute=1,TimestampRoute=1,SourceRouteType=0,SourceRoute=" ",ResolveAddressNames=FALSE

Win32_PingProtocolStatus.Address="Products2",TimeToLive=80,Timeout=4000,BufferSize=32,NoFragmentation=FALSE,TypeofService=0,RecordRoute=1,TimestampRoute=0,SourceRouteType=0,SourceRoute=" ",ResolveAddressNames=TRUE
select * from Win32_PingProtocolStatus where 
 address = "157.59.129.178"
 and BufferSize=8184
 and RecordRoute=1
 and TimeStampRoute=1
and SourceRouteType=0
and Timeout=1000
and TimeToLive=128
and TypeofService=128
and NoFragmentation=FALSE
and ResolveAddressNames=TRUE
and SourceRoute="157.59.129.178"
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\wmi\wbem\providers\ping\dll\query.txt ===
Win32_PingProtocolStatus.Address="stevm_12_12079"
Win32_PingProtocolStatus.Address="157.59.128.139"

select * from Win32_PingProtocolStatus where Address='stevm_12_12079' Or Address='stevm_12_12078'
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\wmi\wbem\providers\snmpprovider\mibs\snmpv1\rfcs\placefil.txt ===
rfc1213.txt	WMI_PSDK\SNMP\MIBS\SNMPv1\RFCs\
rfc1229.txt	WMI_PSDK\SNMP\MIBS\SNMPv1\RFCs\
rfc1230.txt	WMI_PSDK\SNMP\MIBS\SNMPv1\RFCs\
rfc1231.txt	WMI_PSDK\SNMP\MIBS\SNMPv1\RFCs\
rfc1238.txt	WMI_PSDK\SNMP\MIBS\SNMPv1\RFCs\
rfc1253.txt	WMI_PSDK\SNMP\MIBS\SNMPv1\RFCs\
rfc1269.txt	WMI_PSDK\SNMP\MIBS\SNMPv1\RFCs\
rfc1271.txt	WMI_PSDK\SNMP\MIBS\SNMPv1\RFCs\
rfc1285.txt	WMI_PSDK\SNMP\MIBS\SNMPv1\RFCs\
rfc1304.txt	WMI_PSDK\SNMP\MIBS\SNMPv1\RFCs\
rfc1315.txt	WMI_PSDK\SNMP\MIBS\SNMPv1\RFCs\
rfc1316.txt	WMI_PSDK\SNMP\MIBS\SNMPv1\RFCs\
rfc1317.txt	WMI_PSDK\SNMP\MIBS\SNMPv1\RFCs\
rfc1318.txt	WMI_PSDK\SNMP\MIBS\SNMPv1\RFCs\
rfc1354.txt	WMI_PSDK\SNMP\MIBS\SNMPv1\RFCs\
rfc1381.txt	WMI_PSDK\SNMP\MIBS\SNMPv1\RFCs\
rfc1382.txt	WMI_PSDK\SNMP\MIBS\SNMPv1\RFCs\
rfc1389.txt	WMI_PSDK\SNMP\MIBS\SNMPv1\RFCs\
rfc1398.txt	WMI_PSDK\SNMP\MIBS\SNMPv1\RFCs\
rfc1406.txt	WMI_PSDK\SNMP\MIBS\SNMPv1\RFCs\
rfc1407.txt	WMI_PSDK\SNMP\MIBS\SNMPv1\RFCs\
rfc1414.txt	WMI_PSDK\SNMP\MIBS\SNMPv1\RFCs\
rfc1461.txt	WMI_PSDK\SNMP\MIBS\SNMPv1\RFCs\
rfc1471.txt	WMI_PSDK\SNMP\MIBS\SNMPv1\RFCs\
rfc1472.txt	WMI_PSDK\SNMP\MIBS\SNMPv1\RFCs\
rfc1473.txt	WMI_PSDK\SNMP\MIBS\SNMPv1\RFCs\
rfc1474.txt	WMI_PSDK\SNMP\MIBS\SNMPv1\RFCs\
rfc1493.txt	WMI_PSDK\SNMP\MIBS\SNMPv1\RFCs\
rfc1512.txt	WMI_PSDK\SNMP\MIBS\SNMPv1\RFCs\
rfc1513.txt	WMI_PSDK\SNMP\MIBS\SNMPv1\RFCs\
rfc1514.txt	WMI_PSDK\SNMP\MIBS\SNMPv1\RFCs\
rfc1515.txt	WMI_PSDK\SNMP\MIBS\SNMPv1\RFCs\
rfc1516.txt	WMI_PSDK\SNMP\MIBS\SNMPv1\RFCs\
rfc1525.txt	WMI_PSDK\SNMP\MIBS\SNMPv1\RFCs\
rfc1559.txt	WMI_PSDK\SNMP\MIBS\SNMPv1\RFCs\
rfc1593.txt	WMI_PSDK\SNMP\MIBS\SNMPv1\RFCs\
rfc1742.txt	WMI_PSDK\SNMP\MIBS\SNMPv1\RFCs\
rfc1757.txt	WMI_PSDK\SNMP\MIBS\SNMPv1\RFCs\
rfc1792.txt	WMI_PSDK\SNMP\MIBS\SNMPv1\RFCs\
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\wmi\wbem\providers\snmpprovider\mibs\snmpv1\rfcs\rfc1229.txt ===
RFC1229-MIB DEFINITIONS ::= BEGIN


          --        Extensions to MIB-II's Generic Interface Table

          IMPORTS
                  experimental, Counter         FROM RFC1155-SMI
                  DisplayString, PhysAddress    FROM RFC1213-MIB
                  OBJECT-TYPE                   FROM RFC-1212;



          ifExtensions  OBJECT IDENTIFIER ::= { experimental 6 }


          --   Generic Interface Extension Table
          --
          --  This group of objects is mandatory for all types of
          --  subnetwork interface.

          ifExtnsTable  OBJECT-TYPE
                  SYNTAX SEQUENCE OF IfExtnsEntry
                  ACCESS not-accessible
                  STATUS mandatory
                  DESCRIPTION
                         "A list of interfaces extension entries.
                          The number of entries is given by the value
                          of ifNumber, defined in [4,6]."
                  ::= { ifExtensions 1 }

          ifExtnsEntry  OBJECT-TYPE
                  SYNTAX IfExtnsEntry
                  ACCESS not-accessible
                  STATUS mandatory
                  DESCRIPTION
                         "An extension to the interfaces entry,
                          defined in [4,6], containing additional
                          objects at the subnetwork layer and below
                          for a particular interface."
                  INDEX  { ifExtnsIfIndex }
                  ::= { ifExtnsTable 1 }

          IfExtnsEntry ::=
                  SEQUENCE {
                      ifExtnsIfIndex





                          INTEGER,
                      ifExtnsChipSet
                          OBJECT IDENTIFIER,
                      ifExtnsRevWare
                          DisplayString,
                      ifExtnsMulticastsTransmittedOks
                          Counter,
                      ifExtnsBroadcastsTransmittedOks
                          Counter,
                      ifExtnsMulticastsReceivedOks
                          Counter,
                      ifExtnsBroadcastsReceivedOks
                          Counter,
                      ifExtnsPromiscuous
                          INTEGER
                  }

          ifExtnsIfIndex  OBJECT-TYPE
                  SYNTAX INTEGER
                  ACCESS read-only
                  STATUS mandatory
                  DESCRIPTION
                         "The value of this object identifies the
                          interface for which this entry contains
                          extended management information.  The value
                          of this object for a particular interface
                          has the same value as the ifIndex object,
                          defined in [4,6], for the same interface."
                  ::= { ifExtnsEntry 1 }

          ifExtnsChipSet  OBJECT-TYPE
                  SYNTAX OBJECT IDENTIFIER
                  ACCESS read-only
                  STATUS mandatory
                  DESCRIPTION
                         "This object identifies the hardware chip
                          set being used in the interface.  The
                          assignment of OBJECT IDENTIFIERs to various
                          types of hardware chip sets is managed
                          by the IANA.  If the hardware chip set is
                          unknown, the object identifier

                          unknownChipSet OBJECT IDENTIFIER ::= { 0 0 }

                          is returned.  Note that unknownChipSet is a
                          syntactically valid object identifier, and
                          any conformant implementation of ASN.1 and
                          the BER must be able to generate and





                          recognize this value."
                  ::= { ifExtnsEntry 2 }

          ifExtnsRevWare  OBJECT-TYPE
                  SYNTAX DisplayString (SIZE (0..255))
                  ACCESS read-only
                  STATUS mandatory
                  DESCRIPTION
                         "An arbitrary octet string that describes
                          the firmware version of this interface.
                          It is intended that this should be human
                          readable.  It must only contain ASCII
                          printable characters.  Typically this
                          will be the firmware version of the main
                          interface software."
                  ::= { ifExtnsEntry 3 }

          ifExtnsMulticastsTransmittedOks OBJECT-TYPE
                  SYNTAX Counter
                  ACCESS read-only
                  STATUS mandatory
                  DESCRIPTION
                         "The count of frames successfully
                          transmitted to a subnetwork or link-layer
                          multicast destination address other than a
                          broadcast address.  For a MAC layer protocol,
                          this includes both Group and Functional
                          addresses."
                  ::= { ifExtnsEntry 4 }

          ifExtnsBroadcastsTransmittedOks OBJECT-TYPE
                  SYNTAX Counter
                  ACCESS read-only
                  STATUS mandatory
                  DESCRIPTION
                         "The count of frames successfully
                          transmitted to a subnetwork or link-layer
                          broadcast addresses.  It does not include
                          frames sent to a multicast address."
                  ::= { ifExtnsEntry 5 }

          ifExtnsMulticastsReceivedOks OBJECT-TYPE
                  SYNTAX Counter
                  ACCESS read-only
                  STATUS mandatory
                  DESCRIPTION
                         "The count of frames successfully received
                          that are directed to an active subnetwork





                          or link-layer multicast address (for a MAC
                          layer protocol, this includes both Group and
                          Functional addresses). This does not include
                          frames directed to a broadcast address, nor
                          frames received with errors."
                  ::= { ifExtnsEntry 6 }

          ifExtnsBroadcastsReceivedOks OBJECT-TYPE
                  SYNTAX Counter
                  ACCESS read-only
                  STATUS mandatory
                  DESCRIPTION
                         "The count of frames successfully received
                          that are directed to a subnetwork or
                          link-layer broadcast address.  This does not
                          include frames received with errors."
                  ::= { ifExtnsEntry 7 }

          ifExtnsPromiscuous  OBJECT-TYPE
                  SYNTAX INTEGER {
                              true(1),
                              false(2)
                         }
                  ACCESS read-only  -- Note: agent implementors are
                                    -- encouraged to extend this
                                    -- access to read-write if that
                                    -- makes sense in their agent.
                  STATUS mandatory
                  DESCRIPTION
                         "This object has a value of false(2) if
                          this interface only accepts packets/frames
                          that are addressed to this station. This
                          object has a value of true(1) when the
                          station accepts all packets/frames
                          transmitted on the media.  The value
                          true(1) is only legal on certain types of
                          media.  If legal, setting this object to a
                          value of true(1) may require the interface
                          to be reset before becoming effective."
                  ::= { ifExtnsEntry 8 }

          --
          --    Generic Interface Test Table
          --
          -- This group of objects is optional, but if the table is
          -- implemented, all objects in the table must be implemented.







          ifExtnsTestTable   OBJECT-TYPE

                  SYNTAX  SEQUENCE OF IfExtnsTestEntry
                  ACCESS  not-accessible
                  STATUS  mandatory
                  DESCRIPTION
                          "This table contains one entry per interface."
                  ::= { ifExtensions 2 }

          ifExtnsTestEntry OBJECT-TYPE
                  SYNTAX  IfExtnsTestEntry
                  ACCESS  not-accessible
                  STATUS  mandatory
                  DESCRIPTION
                          "An entry containing objects for invoking
                           tests on an interface."
                  INDEX   { ifExtnsTestIfIndex }
                  ::= { ifExtnsTestTable 1 }

          IfExtnsTestEntry ::=
                  SEQUENCE {
                      ifExtnsTestIfIndex
                          INTEGER,
                      ifExtnsTestCommunity
                          OCTET STRING,
                      ifExtnsTestRequestId
                          INTEGER,
                      ifExtnsTestType
                          OBJECT IDENTIFIER,
                      ifExtnsTestResult
                          INTEGER,
                      ifExtnsTestCode
                          OBJECT IDENTIFIER
                  }

          ifExtnsTestIfIndex  OBJECT-TYPE
                  SYNTAX  INTEGER
                  ACCESS  read-only
                  STATUS  mandatory
                  DESCRIPTION
                         "The value of this object identifies the
                          interface for which this entry contains
                          information on interface tests.  The value
                          of this object for a particular interface
                          has the same value as the ifIndex object,
                          defined in [4,6], for the same interface."
                  ::= { ifExtnsTestEntry 1 }






          ifExtnsTestCommunity  OBJECT-TYPE
                  SYNTAX  OCTET STRING
                  ACCESS  read-only
                  STATUS  mandatory
                  DESCRIPTION
                         "This object contains the name of the SNMP
                          authentication community [5] which was used
                          to authenticate the SNMP Message which invoked
                          the current or most recent test on this
                          interface.  If the authentication community
                          is unknown or undefined, this value contains
                          the zero-length string."
                  ::= { ifExtnsTestEntry 2 }

          ifExtnsTestRequestId  OBJECT-TYPE
                  SYNTAX  INTEGER
                  ACCESS  read-only
                  STATUS  mandatory
                  DESCRIPTION
                         "This object contains the value of the
                          request-id field in the SNMP PDU [5] which
                          invoked the current or most recent test on
                          this interface.  If the request-id is
                          unknown or undefined, this value contains
                          the value zero."
                  ::= { ifExtnsTestEntry 3 }

          ifExtnsTestType  OBJECT-TYPE
                  SYNTAX  OBJECT IDENTIFIER
                  ACCESS  read-write
                  STATUS  mandatory
                  DESCRIPTION
                         "A control variable used to start and stop
                          operator-initiated interface tests.
                              Most OBJECT IDENTIFIER values assigned
                          to tests are defined elsewhere, in associ-
                          ation with specific types of interface.
                          However, this document assigns a value for
                          a full-duplex loopback test, and defines the
                          special meanings of the subject identifier:

                            noTest  OBJECT IDENTIFIER ::= { 0 0 }

                          When the value noTest is written to this
                          object, no action is taken unless a test is
                          in progress, in which case the test is
                          aborted.  Writing any other value to this
                          object is only valid when no test is





                          currently in progress, in which case the
                          indicated test is initiated.
                              Note that noTest is a syntactically valid
                          object identifier, and any conformant
                          implementation of ASN.1 and BER must be able
                          to generate and recognize this value.
                              When read, this object always returns
                          the most recent value that ifExtnsTestType
                          was set to.  If it has not been set since
                          the last initialization of the network
                          management subsystem on the agent, a value
                          of noTest is returned."
                  ::= { ifExtnsTestEntry 4 }

          wellKnownTests OBJECT IDENTIFIER ::= { ifExtensions 4 }

          --  full-duplex loopback test
          testFullDuplexLoopBack OBJECT IDENTIFIER ::=
                                                  { wellKnownTests 1 }

          ifExtnsTestResult  OBJECT-TYPE
                  SYNTAX  INTEGER {
                              none(1),        -- no test yet requested
                              success(2),
                              inProgress(3),
                              notSupported(4),
                              unAbleToRun(5), -- due to state of system
                              aborted(6),
                              failed(7)
                          }
                  ACCESS  read-only
                  STATUS  mandatory
                  DESCRIPTION
                         "This object contains the result of the most
                          recently requested test, or the value
                          none(1) if no tests have been requested since
                          the last reset.  Note that this facility
                          provides no provision for saving the results
                          of one test when starting another, as could
                          be required if used by multiple managers
                          concurrently."
                  ::= { ifExtnsTestEntry 5 }

          ifExtnsTestCode  OBJECT-TYPE
                  SYNTAX  OBJECT IDENTIFIER
                  ACCESS  read-only
                  STATUS  mandatory
                  DESCRIPTION





                         "This object contains a code which contains
                          more specific information on the test result,
                          for example an error-code after a failed
                          test.  Error codes and other values this
                          object may take are specific to the type of
                          interface and/or test.  However, one subject
                          identifier:

                          testCodeUnknown  OBJECT IDENTIFIER ::= { 0 0 }

                          for use if no additional result code is
                          available.
                              Note that testCodeUnknown is a
                          syntactically valid object identifier, and
                          any conformant implementation of ASN.1 and
                          the BER must be able to generate and
                          recognize this value."
                  ::= { ifExtnsTestEntry 6 }


          --   Generic Receive Address Table
          --
          -- This group of objects is mandatory for all types of
          -- interfaces which can receive packets/frames addressed to
          -- more than one address.

          ifExtnsRcvAddrTable  OBJECT-TYPE
                  SYNTAX SEQUENCE OF IfExtnsRcvAddrEntry
                  ACCESS not-accessible
                  STATUS mandatory
                  DESCRIPTION
                         "This table contains an entry for each
                          address (broadcast, multicast, or uni-cast)
                          for which the system will receive packets/
                          frames on a particular interface.  When an
                          interface is operating in promiscuous mode,
                          entries are only required for those addresses
                          for which the system would receive frames
                          were it not operating in promiscuous mode."
                  ::= { ifExtensions 3 }

          ifExtnsRcvAddrEntry  OBJECT-TYPE
                  SYNTAX IfExtnsRcvAddrEntry
                  ACCESS not-accessible
                  STATUS mandatory
                  DESCRIPTION
                         "A list of objects identifying an address
                          for which the system will accept packets/





                          frames on a particular interface."
                  INDEX  { ifExtnsRcvAddrIfIndex, ifExtnsRcvAddress }
                  ::= { ifExtnsRcvAddrTable 1 }

          IfExtnsRcvAddrEntry ::=
                  SEQUENCE {
                      ifExtnsRcvAddrIfIndex
                          INTEGER,
                      ifExtnsRcvAddress
                          PhysAddress,
                      ifExtnsRcvAddrStatus
                          INTEGER
                  }

          ifExtnsRcvAddrIfIndex  OBJECT-TYPE
                  SYNTAX INTEGER
                  ACCESS read-only
                  STATUS mandatory
                  DESCRIPTION
                         "The value of ifIndex, defined in [4,6], of an
                          interface which recognizes this entry's
                          address."
                  ::= { ifExtnsRcvAddrEntry 1 }

          ifExtnsRcvAddress OBJECT-TYPE
                  SYNTAX PhysAddress
                  ACCESS read-only
                  STATUS mandatory
                  DESCRIPTION
                         "An address for which the system will accept
                          packets/frames on this entry's interface."
                  ::= { ifExtnsRcvAddrEntry 2 }

          ifExtnsRcvAddrStatus OBJECT-TYPE
                  SYNTAX INTEGER {
                             other(1),
                             invalid(2),
                             volatile(3),
                             nonVolatile(4)
                         }
                  ACCESS read-write
                  STATUS mandatory
                  DESCRIPTION
                         "This object has the value nonVolatile(4)
                          for those entries in the table which are
                          valid and will not be deleted by the next
                          restart of the managed system.  Entries
                          having the value volatile(3) are valid





                          and exist, but have not been saved, so
                          that will not exist after the next
                          restart of the managed system.  Entries
                          having the value other(1) are valid and
                          exist but are not classified as to whether
                          they will continue to exist after the next
                          restart.  Entries having the value invalid(2)
                          are invalid and do not represent an address
                          for which an interface accepts frames.
                              Setting an object instance to one of
                          the values other(1), volatile(3), or
                          nonVolatile(4) causes the corresponding
                          entry to exist or continue to exist, and
                          to take on the respective status as regards
                          the next restart of the managed system.
                              Setting an object instance to the value
                          invalid(2) causes the corresponding entry
                          to become invalid or cease to exist.
                              It is an implementation-specific matter
                          as to whether the agent removes an
                          invalidated entry from the table.
                          Accordingly, management stations must be
                          prepared to receive tabular information
                          from agents that corresponds to entries not
                          currently in use.  Proper interpretation of
                          such entries requires examination of the
                          relevant ifExtnsRcvAddrStatus object
                          instance."
                  DEFVAL  { volatile }
                  ::= { ifExtnsRcvAddrEntry 3 }

          END
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\admin\wmi\wbem\providers\snmpprovider\mibs\snmpv1\rfcs\rfc1213.txt ===
RFC1213-MIB DEFINITIONS ::= BEGIN

          IMPORTS
                  mgmt, NetworkAddress, IpAddress, Counter, Gauge,
                          TimeTicks
                      FROM RFC1155-SMI
                  OBJECT-TYPE
                          FROM RFC-1212;

          --  This MIB module uses the extended OBJECT-TYPE macro as
          --  defined in [14];


          --  MIB-II (same prefix as MIB-I)

          mib-2      OBJECT IDENTIFIER ::= { mgmt 1 }

          -- textual conventions

          DisplayString ::=
              OCTET STRING
          -- This data type is used to model textual information taken
          -- from the NVT ASCII character set.  By convention, objects
          -- with this syntax are declared as having
          --
          --      SIZE (0..255)

          PhysAddress ::=
              OCTET STRING
          -- This data type is used to model media addresses.  For many
          -- types of media, this will be in a binary representation.
          -- For example, an ethernet address would be represented as
          -- a string of 6 octets.


          -- groups in MIB-II

          system       OBJECT IDENTIFIER ::= { mib-2 1 }

          interfaces   OBJECT IDENTIFIER ::= { mib-2 2 }

          at           OBJECT IDENTIFIER ::= { mib-2 3 }

          ip           OBJECT IDENTIFIER ::= { mib-2 4 }

          icmp         OBJECT IDENTIFIER ::= { mib-2 5 }

          tcp          OBJECT IDENTIFIER ::= { mib-2 6 }

          udp          OBJECT IDENTIFIER ::= { mib-2 7 }

          egp          OBJECT IDENTIFIER ::= { mib-2 8 }

          -- historical (some say hysterical)
          -- cmot      OBJECT IDENTIFIER ::= { mib-2 9 }

          transmission OBJECT IDENTIFIER ::= { mib-2 10 }

          snmp         OBJECT IDENTIFIER ::= { mib-2 11 }


          -- the System group

          -- Implementation of the System group is mandatory for all
          -- systems.  If an agent is not configured to have a value
          -- for any of these variables, a string of length 0 is
          -- returned.

          sysDescr OBJECT-TYPE
              SYNTAX  DisplayString (SIZE (0..255))
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "A textual description of the entity.  This value
                      should include the full name and version
                      identification of the system's hardware type,
                      software operating-system, and networking
                      software.  It is mandatory that this only contain
                      printable ASCII characters."
              ::= { system 1 }

          sysObjectID OBJECT-TYPE
              SYNTAX  OBJECT IDENTIFIER
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The vendor's authoritative identification of the
                      network management subsystem contained in the
                      entity.  This value is allocated within the SMI
                      enterprises subtree (1.3.6.1.4.1) and provides an
                      easy and unambiguous means for determining `what
                      kind of box' is being managed.  For example, if
                      vendor `Flintstones, Inc.' was assigned the
                      subtree 1.3.6.1.4.1.4242, it could assign the
                      identifier 1.3.6.1.4.1.4242.1.1 to its `Fred
                      Router'."
              ::= { system 2 }

          sysUpTime OBJECT-TYPE
              SYNTAX  TimeTicks
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The time (in hundredths of a second) since the
                      network management portion of the system was last
                      re-initialized."
              ::= { system 3 }

          sysContact OBJECT-TYPE
              SYNTAX  DisplayString (SIZE (0..255))
              ACCESS  read-write
              STATUS  mandatory
              DESCRIPTION
                      "The textual identification of the contact person
                      for this managed node, together with information
                      on how to contact this person."
              ::= { system 4 }

          sysName OBJECT-TYPE
              SYNTAX  DisplayString (SIZE (0..255))
              ACCESS  read-write
              STATUS  mandatory
              DESCRIPTION
                      "An administratively-assigned name for this
                      managed node.  By convention, this is the node's
                      fully-qualified domain name."
              ::= { system 5 }

          sysLocation OBJECT-TYPE
              SYNTAX  DisplayString (SIZE (0..255))
              ACCESS  read-write
              STATUS  mandatory
              DESCRIPTION
                      "The physical location of this node (e.g.,
                      `telephone closet, 3rd floor')."
              ::= { system 6 }

          sysServices OBJECT-TYPE
              SYNTAX  INTEGER (0..127)
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "A value which indicates the set of services that
                      this entity primarily offers.

                      The value is a sum.  This sum initially takes the
                      value zero, Then, for each layer, L, in the range
                      1 through 7, that this node performs transactions
                      for, 2 raised to (L - 1) is added to the sum.  For
                      example, a node which performs primarily routing
                      functions would have a value of 4 (2^(3-1)).  In
                      contrast, a node which is a host offering
                      application services would have a value of 72
                      (2^(4-1) + 2^(7-1)).  Note that in the context of
                      the Internet suite of protocols, values should be
                      calculated accordingly:

                           layer  functionality
                               1  physical (e.g., repeaters)
                               2  datalink/subnetwork (e.g., bridges)
                               3  internet (e.g., IP gateways)
                               4  end-to-end  (e.g., IP hosts)
                               7  applications (e.g., mail relays)

                      For systems including OSI protocols, layers 5 and
                      6 may also be counted."
              ::= { system 7 }

          -- the Interfaces group

          -- Implementation of the Interfaces group is mandatory for
          -- all systems.

          ifNumber OBJECT-TYPE
              SYNTAX  INTEGER
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The number of network interfaces (regardless of
                      their current state) present on this system."
              ::= { interfaces 1 }


          -- the Interfaces table

          -- The Interfaces table contains information on the entity's
          -- interfaces.  Each interface is thought of as being
          -- attached to a `subnetwork'.  Note that this term should
          -- not be confused with `subnet' which refers to an
          -- addressing partitioning scheme used in the Internet suite
          -- of protocols.

          ifTable OBJECT-TYPE
              SYNTAX  SEQUENCE OF IfEntry
              ACCESS  not-accessible
              STATUS  mandatory
              DESCRIPTION
                      "A list of interface entries.  The number of
                      entries is given by the value of ifNumber."
              ::= { interfaces 2 }

          ifEntry OBJECT-TYPE
              SYNTAX  IfEntry
              ACCESS  not-accessible
              STATUS  mandatory
              DESCRIPTION
                      "An interface entry containing objects at the
                      subnetwork layer and below for a particular
                      interface."
              INDEX   { ifIndex }
              ::= { ifTable 1 }

          IfEntry ::=
              SEQUENCE {
                  ifIndex
                      INTEGER,
                  ifDescr
                      DisplayString,
                  ifType
                      INTEGER,
                  ifMtu
                      INTEGER,
                  ifSpeed
                      Gauge,
                  ifPhysAddress
                      PhysAddress,
                  ifAdminStatus
                      INTEGER,
                  ifOperStatus
                      INTEGER,
                  ifLastChange
                      TimeTicks,
                  ifInOctets
                      Counter,
                  ifInUcastPkts
                      Counter,
                  ifInNUcastPkts
                      Counter,
                  ifInDiscards
                      Counter,
                  ifInErrors
                      Counter,
                  ifInUnknownProtos
                      Counter,
                  ifOutOctets
                      Counter,
                  ifOutUcastPkts
                      Counter,
                  ifOutNUcastPkts
                      Counter,
                  ifOutDiscards
                      Counter,
                  ifOutErrors
                      Counter,
                  ifOutQLen
                      Gauge,
                  ifSpecific
                      OBJECT IDENTIFIER
              }

          ifIndex OBJECT-TYPE
              SYNTAX  INTEGER
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "A unique value for each interface.  Its value
                      ranges between 1 and the value of ifNumber.  The
                      value for each interface must remain constant at
                      least from one re-initialization of the entity's
                      network management system to the next re-
                      initialization."
              ::= { ifEntry 1 }

          ifDescr OBJECT-TYPE
              SYNTAX  DisplayString (SIZE (0..255))
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "A textual string containing information about the
                      interface.  This string should include the name of
                      the manufacturer, the product name and the version
                      of the hardware interface."
              ::= { ifEntry 2 }

          ifType OBJECT-TYPE
              SYNTAX  INTEGER {
                          other(1),          -- none of the following
                          regular1822(2),
                          hdh1822(3),
                          ddn-x25(4),
                          rfc877-x25(5),
                          ethernet-csmacd(6),
                          iso88023-csmacd(7),
                          iso88024-tokenBus(8),
                          iso88025-tokenRing(9),
                          iso88026-man(10),
                          starLan(11),
                          proteon-10Mbit(12),
                          proteon-80Mbit(13),
                          hyperchannel(14),
                          fddi(15),
                          lapb(16),
                          sdlc(17),
                          ds1(18),           -- T-1
                          e1(19),            -- european equiv. of T-1
                          basicISDN(20),
                          primaryISDN(21),   -- proprietary serial
                          propPointToPointSerial(22),
                          ppp(23),
                          softwareLoopback(24),
                          eon(25),            -- CLNP over IP [11]
                          ethernet-3Mbit(26),
                          nsip(27),           -- XNS over IP
                          slip(28),           -- generic SLIP
                          ultra(29),          -- ULTRA technologies
                          ds3(30),            -- T-3
                          sip(31),            -- SMDS
                          frame-relay(32)
                      }
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The type of interface, distinguished according to
                      the physical/link protocol(s) immediately `below'
                      the network layer in the protocol stack."
              ::= { ifEntry 3 }

          ifMtu OBJECT-TYPE
              SYNTAX  INTEGER
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The size of the largest datagram which can be
                      sent/received on the interface, specified in
                      octets.  For interfaces that are used for
                      transmitting network datagrams, this is the size
                      of the largest network datagram that can be sent
                      on the interface."
              ::= { ifEntry 4 }

          ifSpeed OBJECT-TYPE
              SYNTAX  Gauge
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "An estimate of the interface's current bandwidth
                      in bits per second.  For interfaces which do not
                      vary in bandwidth or for those where no accurate
                      estimation can be made, this object should contain
                      the nominal bandwidth."
              ::= { ifEntry 5 }

          ifPhysAddress OBJECT-TYPE
              SYNTAX  PhysAddress
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The interface's address at the protocol layer
                      immediately `below' the network layer in the
                      protocol stack.  For interfaces which do not have
                      such an address (e.g., a serial line), this object
                      should contain an octet string of zero length."
              ::= { ifEntry 6 }

          ifAdminStatus OBJECT-TYPE
              SYNTAX  INTEGER {
                          up(1),       -- ready to pass packets
                          down(2),
                          testing(3)   -- in some test mode
                      }
              ACCESS  read-write
              STATUS  mandatory
              DESCRIPTION
                      "The desired state of the interface.  The
                      testing(3) state indicates that no operational
                      packets can be passed."
              ::= { ifEntry 7 }

          ifOperStatus OBJECT-TYPE
              SYNTAX  INTEGER {
                          up(1),       -- ready to pass packets
                          down(2),
                          testing(3)   -- in some test mode
                      }
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The current operational state of the interface.
                      The testing(3) state indicates that no operational
                      packets can be passed."
              ::= { ifEntry 8 }

          ifLastChange OBJECT-TYPE
              SYNTAX  TimeTicks
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The value of sysUpTime at the time the interface
                      entered its current operational state.  If the
                      current state was entered prior to the last re-
                      initialization of the local network management
                      subsystem, then this object contains a zero
                      value."
              ::= { ifEntry 9 }

          ifInOctets OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The total number of octets received on the
                      interface, including framing characters."
              ::= { ifEntry 10 }

          ifInUcastPkts OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The number of subnetwork-unicast packets
                      delivered to a higher-layer protocol."
              ::= { ifEntry 11 }

          ifInNUcastPkts OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The number of non-unicast (i.e., subnetwork-
                      broadcast or subnetwork-multicast) packets
                      delivered to a higher-layer protocol."
              ::= { ifEntry 12 }

          ifInDiscards OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The number of inbound packets which were chosen
                      to be discarded even though no errors had been
                      detected to prevent their being deliverable to a
                      higher-layer protocol.  One possible reason for
                      discarding such a packet could be to free up
                      buffer space."
              ::= { ifEntry 13 }

          ifInErrors OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The number of inbound packets that contained
                      errors preventing them from being deliverable to a
                      higher-layer protocol."
              ::= { ifEntry 14 }

          ifInUnknownProtos OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The number of packets received via the interface
                      which were discarded because of an unknown or
                      unsupported protocol."
              ::= { ifEntry 15 }

          ifOutOctets OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The total number of octets transmitted out of the
                      interface, including framing characters."
              ::= { ifEntry 16 }

          ifOutUcastPkts OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The total number of packets that higher-level
                      protocols requested be transmitted to a
                      subnetwork-unicast address, including those that
                      were discarded or not sent."
              ::= { ifEntry 17 }

          ifOutNUcastPkts OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The total number of packets that higher-level
                      protocols requested be transmitted to a non-
                      unicast (i.e., a subnetwork-broadcast or
                      subnetwork-multicast) address, including those
                      that were discarded or not sent."
              ::= { ifEntry 18 }

          ifOutDiscards OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The number of outbound packets which were chosen
                      to be discarded even though no errors had been
                      detected to prevent their being transmitted.  One
                      possible reason for discarding such a packet could
                      be to free up buffer space."
              ::= { ifEntry 19 }

          ifOutErrors OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The number of outbound packets that could not be
                      transmitted because of errors."
              ::= { ifEntry 20 }

          ifOutQLen OBJECT-TYPE
              SYNTAX  Gauge
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The length of the output packet queue (in
                      packets)."
              ::= { ifEntry 21 }

          ifSpecific OBJECT-TYPE
              SYNTAX  OBJECT IDENTIFIER
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "A reference to MIB definitions specific to the
                      particular media being used to realize the
                      interface.  For example, if the interface is
                      realized by an ethernet, then the value of this
                      object refers to a document defining objects
                      specific to ethernet.  If this information is not
                      present, its value should be set to the OBJECT
                      IDENTIFIER { 0 0 }, which is a syntatically valid
                      object identifier, and any conformant
                      implementation of ASN.1 and BER must be able to
                      generate and recognize this value."
              ::= { ifEntry 22 }


          -- the Address Translation group

          -- Implementation of the Address Translation group is
          -- mandatory for all systems.  Note however that this group
          -- is deprecated by MIB-II. That is, it is being included
          -- solely for compatibility with MIB-I nodes, and will most
          -- likely be excluded from MIB-III nodes.  From MIB-II and
          -- onwards, each network protocol group contains its own
          -- address translation tables.

          -- The Address Translation group contains one table which is
          -- the union across all interfaces of the translation tables
          -- for converting a NetworkAddress (e.g., an IP address) into
          -- a subnetwork-specific address.  For lack of a better term,
          -- this document refers to such a subnetwork-specific address
          -- as a `physical' address.

          -- Examples of such translation tables are: for broadcast
          -- media where ARP is in use, the translation table is
          -- equivalent to the ARP cache; or, on an X.25 network where
          -- non-algorithmic translation to X.121 addresses is
          -- required, the translation table contains the
          -- NetworkAddress to X.121 address equivalences.

          atTable OBJECT-TYPE
              SYNTAX  SEQUENCE OF AtEntry
              ACCESS  not-accessible
              STATUS  deprecated
              DESCRIPTION
                      "The Address Translation tables contain the
                      NetworkAddress to `physical' address equivalences.
                      Some interfaces do not use translation tables for
                      determining address equivalences (e.g., DDN-X.25
                      has an algorithmic method); if all interfaces are
                      of this type, then the Address Translation table
                      is empty, i.e., has zero entries."
              ::= { at 1 }

          atEntry OBJECT-TYPE
              SYNTAX  AtEntry
              ACCESS  not-accessible
              STATUS  deprecated
              DESCRIPTION
                      "Each entry contains one NetworkAddress to
                      `physical' address equivalence."
              INDEX   { atIfIndex,
                        atNetAddress }
              ::= { atTable 1 }

          AtEntry ::=
              SEQUENCE {
                  atIfIndex
                      INTEGER,
                  atPhysAddress
                      PhysAddress,
                  atNetAddress
                      NetworkAddress
              }

          atIfIndex OBJECT-TYPE
              SYNTAX  INTEGER
              ACCESS  read-write
              STATUS  deprecated
              DESCRIPTION
                      "The interface on which this entry's equivalence
                      is effective.  The interface identified by a
                      particular value of this index is the same
                      interface as identified by the same value of
                      ifIndex."
              ::= { atEntry 1 }

          atPhysAddress OBJECT-TYPE
              SYNTAX  PhysAddress
              ACCESS  read-write
              STATUS  deprecated
              DESCRIPTION
                      "The media-dependent `physical' address.

                      Setting this object to a null string (one of zero
                      length) has the effect of invaliding the
                      corresponding entry in the atTable object.  That
                      is, it effectively dissasociates the interface
                      identified with said entry from the mapping
                      identified with said entry.  It is an
                      implementation-specific matter as to whether the
                      agent removes an invalidated entry from the table.
                      Accordingly, management stations must be prepared
                      to receive tabular information from agents that
                      corresponds to entries not currently in use.
                      Proper interpretation of such entries requires
                      examination of the relevant atPhysAddress object."
              ::= { atEntry 2 }

          atNetAddress OBJECT-TYPE
              SYNTAX  NetworkAddress
              ACCESS  read-write
              STATUS  deprecated
              DESCRIPTION
                      "The NetworkAddress (e.g., the IP address)
                      corresponding to the media-dependent `physical'
                      address."
              ::= { atEntry 3 }


          -- the IP group

          -- Implementation of the IP group is mandatory for all
          -- systems.

          ipForwarding OBJECT-TYPE
              SYNTAX  INTEGER {
                          forwarding(1),    -- acting as a gateway
                          not-forwarding(2) -- NOT acting as a gateway
                      }
              ACCESS  read-write
              STATUS  mandatory
              DESCRIPTION
                      "The indication of whether this entity is acting
                      as an IP gateway in respect to the forwarding of
                      datagrams received by, but not addressed to, this
                      entity.  IP gateways forward datagrams.  IP hosts
                      do not (except those source-routed via the host).

                      Note that for some managed nodes, this object may
                      take on only a subset of the values possible.
                      Accordingly, it is appropriate for an agent to
                      return a `badValue' response if a management
                      station attempts to change this object to an
                      inappropriate value."
              ::= { ip 1 }

          ipDefaultTTL OBJECT-TYPE
              SYNTAX  INTEGER
              ACCESS  read-write
              STATUS  mandatory
              DESCRIPTION
                      "The default value inserted into the Time-To-Live
                      field of the IP header of datagrams originated at
                      this entity, whenever a TTL value is not supplied
                      by the transport layer protocol."
              ::= { ip 2 }

          ipInReceives OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The total number of input datagrams received from
                      interfaces, including those received in error."
              ::= { ip 3 }

          ipInHdrErrors OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The number of input datagrams discarded due to
                      errors in their IP headers, including bad
                      checksums, version number mismatch, other format
                      errors, time-to-live exceeded, errors discovered
                      in processing their IP options, etc."
              ::= { ip 4 }

          ipInAddrErrors OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The number of input datagrams discarded because
                      the IP address in their IP header's destination
                      field was not a valid address to be received at
                      this entity.  This count includes invalid
                      addresses (e.g., 0.0.0.0) and addresses of
                      unsupported Classes (e.g., Class E).  For entities
                      which are not IP Gateways and therefore do not
                      forward datagrams, this counter includes datagrams
                      discarded because the destination address was not
                      a local address."
              ::= { ip 5 }

          ipForwDatagrams OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The number of input datagrams for which this
                      entity was not their final IP destination, as a
                      result of which an attempt was made to find a
                      route to forward them to that final destination.
                      In entities which do not act as IP Gateways, this
                      counter will include only those packets which were
                      Source-Routed via this entity, and the Source-
                      Route option processing was successful."
              ::= { ip 6 }

          ipInUnknownProtos OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The number of locally-addressed datagrams
                      received successfully but discarded because of an
                      unknown or unsupported protocol."
              ::= { ip 7 }

          ipInDiscards OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The number of input IP datagrams for which no
                      problems were encountered to prevent their
                      continued processing, but which were discarded
                      (e.g., for lack of buffer space).  Note that this
                      counter does not include any datagrams discarded
                      while awaiting re-assembly."
              ::= { ip 8 }

          ipInDelivers OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The total number of input datagrams successfully
                      delivered to IP user-protocols (including ICMP)."
              ::= { ip 9 }

          ipOutRequests OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The total number of IP datagrams which local IP
                      user-protocols (including ICMP) supplied to IP in
                      requests for transmission.  Note that this counter
                      does not include any datagrams counted in
                      ipForwDatagrams."
              ::= { ip 10 }

          ipOutDiscards OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The number of output IP datagrams for which no
                      problem was encountered to prevent their
                      transmission to their destination, but which were
                      discarded (e.g., for lack of buffer space).  Note
                      that this counter would include datagrams counted
                      in ipForwDatagrams if any such packets met this
                      (discretionary) discard criterion."
              ::= { ip 11 }

          ipOutNoRoutes OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The number of IP datagrams discarded because no
                      route could be found to transmit them to their
                      destination.  Note that this counter includes any
                      packets counted in ipForwDatagrams which meet this
                      `no-route' criterion.  Note that this includes any
                      datagarms which a host cannot route because all of
                      its default gateways are down."
              ::= { ip 12 }

          ipReasmTimeout OBJECT-TYPE
              SYNTAX  INTEGER
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The maximum number of seconds which received
                      fragments are held while they are awaiting
                      reassembly at this entity."
              ::= { ip 13 }

          ipReasmReqds OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The number of IP fragments received which needed
                      to be reassembled at this entity."
              ::= { ip 14 }

          ipReasmOKs OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The number of IP datagrams successfully re-
                      assembled."
              ::= { ip 15 }

          ipReasmFails OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The number of failures detected by the IP re-
                      assembly algorithm (for whatever reason: timed
                      out, errors, etc).  Note that this is not
                      necessarily a count of discarded IP fragments
                      since some algorithms (notably the algorithm in
                      RFC 815) can lose track of the number of fragments
                      by combining them as they are received."
              ::= { ip 16 }

          ipFragOKs OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The number of IP datagrams that have been
                      successfully fragmented at this entity."
              ::= { ip 17 }

          ipFragFails OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The number of IP datagrams that have been
                      discarded because they needed to be fragmented at
                      this entity but could not be, e.g., because their
                      Don't Fragment flag was set."
              ::= { ip 18 }

          ipFragCreates OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The number of IP datagram fragments that have
                      been generated as a result of fragmentation at
                      this entity."
              ::= { ip 19 }

          -- the IP address table

          -- The IP address table contains this entity's IP addressing
          -- information.

          ipAddrTable OBJECT-TYPE
              SYNTAX  SEQUENCE OF IpAddrEntry
              ACCESS  not-accessible
              STATUS  mandatory
              DESCRIPTION
                      "The table of addressing information relevant to
                      this entity's IP addresses."
              ::= { ip 20 }

          ipAddrEntry OBJECT-TYPE
              SYNTAX  IpAddrEntry
              ACCESS  not-accessible
              STATUS  mandatory
              DESCRIPTION
                      "The addressing information for one of this
                      entity's IP addresses."
              INDEX   { ipAdEntAddr }
              ::= { ipAddrTable 1 }

          IpAddrEntry ::=
              SEQUENCE {
                  ipAdEntAddr
                      IpAddress,
                  ipAdEntIfIndex
                      INTEGER,
                  ipAdEntNetMask
                      IpAddress,
                  ipAdEntBcastAddr
                      INTEGER,
                  ipAdEntReasmMaxSize
                      INTEGER (0..65535)
              }

          ipAdEntAddr OBJECT-TYPE
              SYNTAX  IpAddress
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The IP address to which this entry's addressing
                      information pertains."
              ::= { ipAddrEntry 1 }

          ipAdEntIfIndex OBJECT-TYPE
              SYNTAX  INTEGER
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The index value which uniquely identifies the
                      interface to which this entry is applicable.  The
                      interface identified by a particular value of this
                      index is the same interface as identified by the
                      same value of ifIndex."
              ::= { ipAddrEntry 2 }

          ipAdEntNetMask OBJECT-TYPE
              SYNTAX  IpAddress
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The subnet mask associated with the IP address of
                      this entry.  The value of the mask is an IP
                      address with all the network bits set to 1 and all
                      the hosts bits set to 0."
              ::= { ipAddrEntry 3 }

          ipAdEntBcastAddr OBJECT-TYPE
              SYNTAX  INTEGER
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The value of the least-significant bit in the IP
                      broadcast address used for sending datagrams on
                      the (logical) interface associated with the IP
                      address of this entry.  For example, when the
                      Internet standard all-ones broadcast address is
                      used, the value will be 1.  This value applies to
                      both the subnet and network broadcasts addresses
                      used by the entity on this (logical) interface."
              ::= { ipAddrEntry 4 }

          ipAdEntReasmMaxSize OBJECT-TYPE
              SYNTAX  INTEGER (0..65535)
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The size of the largest IP datagram which this
                      entity can re-assemble from incoming IP fragmented
                      datagrams received on this interface."
              ::= { ipAddrEntry 5 }

          -- the IP routing table

          -- The IP routing table contains an entry for each route
          -- presently known to this entity.

          ipRouteTable OBJECT-TYPE
              SYNTAX  SEQUENCE OF IpRouteEntry
              ACCESS  not-accessible
              STATUS  mandatory
              DESCRIPTION
                      "This entity's IP Routing table."
              ::= { ip 21 }

          ipRouteEntry OBJECT-TYPE
              SYNTAX  IpRouteEntry
              ACCESS  not-accessible
              STATUS  mandatory
              DESCRIPTION
                      "A route to a particular destination."
              INDEX   { ipRouteDest }
              ::= { ipRouteTable 1 }

          IpRouteEntry ::=
              SEQUENCE {
                  ipRouteDest
                      IpAddress,
                  ipRouteIfIndex
                      INTEGER,
                  ipRouteMetric1
                      INTEGER,
                  ipRouteMetric2
                      INTEGER,
                  ipRouteMetric3
                      INTEGER,
                  ipRouteMetric4
                      INTEGER,
                  ipRouteNextHop
                      IpAddress,
                  ipRouteType
                      INTEGER,
                  ipRouteProto
                      INTEGER,
                  ipRouteAge
                      INTEGER,
                  ipRouteMask
                      IpAddress,
                  ipRouteMetric5
                      INTEGER,
                 ipRouteInfo
                      OBJECT IDENTIFIER
              }

          ipRouteDest OBJECT-TYPE
              SYNTAX  IpAddress
              ACCESS  read-write
              STATUS  mandatory
              DESCRIPTION
                      "The destination IP address of this route.  An
                      entry with a value of 0.0.0.0 is considered a
                      default route.  Multiple routes to a single
                      destination can appear in the table, but access to
                      such multiple entries is dependent on the table-
                      access mechanisms defined by the network
                      management protocol in use."
              ::= { ipRouteEntry 1 }

          ipRouteIfIndex OBJECT-TYPE
              SYNTAX  INTEGER
              ACCESS  read-write
              STATUS  mandatory
              DESCRIPTION
                      "The index value which uniquely identifies the
                      local interface through which the next hop of this
                      route should be reached.  The interface identified
                      by a particular value of this index is the same
                      interface as identified by the same value of
                      ifIndex."
              ::= { ipRouteEntry 2 }

          ipRouteMetric1 OBJECT-TYPE
              SYNTAX  INTEGER
              ACCESS  read-write
              STATUS  mandatory
              DESCRIPTION
                      "The primary routing metric for this route.  The
                      semantics of this metric are determined by the
                      routing-protocol specified in the route's
                      ipRouteProto value.  If this metric is not used,
                      its value should be set to -1."
              ::= { ipRouteEntry 3 }

          ipRouteMetric2 OBJECT-TYPE
              SYNTAX  INTEGER
              ACCESS  read-write
              STATUS  mandatory
              DESCRIPTION
                      "An alternate routing metric for this route.  The
                      semantics of this metric are determined by the
                      routing-protocol specified in the route's
                      ipRouteProto value.  If this metric is not used,
                      its value should be set to -1."
              ::= { ipRouteEntry 4 }

          ipRouteMetric3 OBJECT-TYPE
              SYNTAX  INTEGER
              ACCESS  read-write
              STATUS  mandatory
              DESCRIPTION
                      "An alternate routing metric for this route.  The
                      semantics of this metric are determined by the
                      routing-protocol specified in the route's
                      ipRouteProto value.  If this metric is not used,
                      its value should be set to -1."
              ::= { ipRouteEntry 5 }

          ipRouteMetric4 OBJECT-TYPE
              SYNTAX  INTEGER
              ACCESS  read-write
              STATUS  mandatory
              DESCRIPTION
                      "An alternate routing metric for this route.  The
                      semantics of this metric are determined by the
                      routing-protocol specified in the route's
                      ipRouteProto value.  If this metric is not used,
                      its value should be set to -1."
              ::= { ipRouteEntry 6 }

          ipRouteNextHop OBJECT-TYPE
              SYNTAX  IpAddress
              ACCESS  read-write
              STATUS  mandatory
              DESCRIPTION
                      "The IP address of the next hop of this route.
                      (In the case of a route bound to an interface
                      which is realized via a broadcast media, the value
                      of this field is the agent's IP address on that
                      interface.)"
              ::= { ipRouteEntry 7 }

          ipRouteType OBJECT-TYPE
              SYNTAX  INTEGER {
                          other(1),        -- none of the following

                          invalid(2),      -- an invalidated route
                                           -- route to directly
                          direct(3),       -- connected (sub-)network

                                           -- route to a non-local
                          indirect(4)      -- host/network/sub-network
                      }
              ACCESS  read-write
              STATUS  mandatory
              DESCRIPTION
                      "The type of route.  Note that the values
                      direct(3) and indirect(4) refer to the notion of
                      direct and indirect routing in the IP
                      architecture.

                      Setting this object to the value invalid(2) has
                      the effect of invalidating the corresponding entry
                      in the ipRouteTable object.  That is, it
                      effectively dissasociates the destination
                      identified with said entry from the route
                      identified with said entry.  It is an
                      implementation-specific matter as to whether the
                      agent removes an invalidated entry from the table.
                      Accordingly, management stations must be prepared
                      to receive tabular information from agents that
                      corresponds to entries not currently in use.
                      Proper interpretation of such entries requires
                      examination of the relevant ipRouteType object."
              ::= { ipRouteEntry 8 }

          ipRouteProto OBJECT-TYPE
              SYNTAX  INTEGER {
                          other(1),       -- none of the following

                                          -- non-protocol information,
                                          -- e.g., manually configured
                          local(2),       -- entries

                                          -- set via a network
                          netmgmt(3),     -- management protocol

                                          -- obtained via ICMP,
                          icmp(4),        -- e.g., Redirect

                                          -- the remaining values are
                                          -- all gateway routing
                                          -- protocols
                          egp(5),
                          ggp(6),
                          hello(7),
                          rip(8),
                          is-is(9),
                          es-is(10),
                          ciscoIgrp(11),
                          bbnSpfIgp(12),
                          ospf(13),
                          bgp(14)
                      }
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The routing mechanism via which this route was
                      learned.  Inclusion of values for gateway routing
                      protocols is not intended to imply that hosts
                      should support those protocols."
              ::= { ipRouteEntry 9 }

          ipRouteAge OBJECT-TYPE
              SYNTAX  INTEGER
              ACCESS  read-write
              STATUS  mandatory
              DESCRIPTION
                      "The number of seconds since this route was last
                      updated or otherwise determined to be correct.
                      Note that no semantics of `too old' can be implied
                      except through knowledge of the routing protocol
                      by which the route was learned."
              ::= { ipRouteEntry 10 }

          ipRouteMask OBJECT-TYPE
              SYNTAX  IpAddress
              ACCESS  read-write
              STATUS  mandatory
              DESCRIPTION
                      "Indicate the mask to be logical-ANDed with the
                      destination address before being compared to the
                      value in the ipRouteDest field.  For those systems
                      that do not support arbitrary subnet masks, an
                      agent constructs the value of the ipRouteMask by
                      determining whether the value of the correspondent
                      ipRouteDest field belong to a class-A, B, or C
                      network, and then using one of:

                           mask           network
                           255.0.0.0      class-A
                           255.255.0.0    class-B
                           255.255.255.0  class-C

                      If the value of the ipRouteDest is 0.0.0.0 (a
                      default route), then the mask value is also
                      0.0.0.0.  It should be noted that all IP routing
                      subsystems implicitly use this mechanism."
              ::= { ipRouteEntry 11 }

          ipRouteMetric5 OBJECT-TYPE
              SYNTAX  INTEGER
              ACCESS  read-write
              STATUS  mandatory
              DESCRIPTION
                      "An alternate routing metric for this route.  The
                      semantics of this metric are determined by the
                      routing-protocol specified in the route's
                      ipRouteProto value.  If this metric is not used,
                      its value should be set to -1."
              ::= { ipRouteEntry 12 }

          ipRouteInfo OBJECT-TYPE
              SYNTAX  OBJECT IDENTIFIER
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "A reference to MIB definitions specific to the
                      particular routing protocol which is responsible
                      for this route, as determined by the value
                      specified in the route's ipRouteProto value.  If
                      this information is not present, its value should
                      be set to the OBJECT IDENTIFIER { 0 0 }, which is
                      a syntatically valid object identifier, and any
                      conformant implementation of ASN.1 and BER must be
                      able to generate and recognize this value."
              ::= { ipRouteEntry 13 }


          -- the IP Address Translation table

          -- The IP address translation table contain the IpAddress to
          -- `physical' address equivalences.  Some interfaces do not
          -- use translation tables for determining address
          -- equivalences (e.g., DDN-X.25 has an algorithmic method);
          -- if all interfaces are of this type, then the Address
          -- Translation table is empty, i.e., has zero entries.

          ipNetToMediaTable OBJECT-TYPE
              SYNTAX  SEQUENCE OF IpNetToMediaEntry
              ACCESS  not-accessible
              STATUS  mandatory
              DESCRIPTION
                      "The IP Address Translation table used for mapping
                      from IP addresses to physical addresses."
              ::= { ip 22 }

          ipNetToMediaEntry OBJECT-TYPE
              SYNTAX  IpNetToMediaEntry
              ACCESS  not-accessible
              STATUS  mandatory
              DESCRIPTION
                      "Each entry contains one IpAddress to `physical'
                      address equivalence."
              INDEX   { ipNetToMediaIfIndex,
                        ipNetToMediaNetAddress }
              ::= { ipNetToMediaTable 1 }

          IpNetToMediaEntry ::=
              SEQUENCE {
                  ipNetToMediaIfIndex
                      INTEGER,
                  ipNetToMediaPhysAddress
                      PhysAddress,
                  ipNetToMediaNetAddress
                      IpAddress,
                  ipNetToMediaType
                      INTEGER
              }

          ipNetToMediaIfIndex OBJECT-TYPE
              SYNTAX  INTEGER
              ACCESS  read-write
              STATUS  mandatory
              DESCRIPTION
                      "The interface on which this entry's equivalence
                      is effective.  The interface identified by a
                      particular value of this index is the same
                      interface as identified by the same value of
                      ifIndex."
              ::= { ipNetToMediaEntry 1 }

          ipNetToMediaPhysAddress OBJECT-TYPE
              SYNTAX  PhysAddress
              ACCESS  read-write
              STATUS  mandatory
              DESCRIPTION
                      "The media-dependent `physical' address."
              ::= { ipNetToMediaEntry 2 }

          ipNetToMediaNetAddress OBJECT-TYPE
              SYNTAX  IpAddress
              ACCESS  read-write
              STATUS  mandatory
              DESCRIPTION
                      "The IpAddress corresponding to the media-
                      dependent `physical' address."
              ::= { ipNetToMediaEntry 3 }

          ipNetToMediaType OBJECT-TYPE
              SYNTAX  INTEGER {
                          other(1),        -- none of the following
                          invalid(2),      -- an invalidated mapping
                          dynamic(3),
                          static(4)
                      }
              ACCESS  read-write
              STATUS  mandatory
              DESCRIPTION
                      "The type of mapping.

                      Setting this object to the value invalid(2) has
                      the effect of invalidating the corresponding entry
                      in the ipNetToMediaTable.  That is, it effectively
                      dissasociates the interface identified with said
                      entry from the mapping identified with said entry.
                      It is an implementation-specific matter as to
                      whether the agent removes an invalidated entry
                      from the table.  Accordingly, management stations
                      must be prepared to receive tabular information
                      from agents that corresponds to entries not
                      currently in use.  Proper interpretation of such
                      entries requires examination of the relevant
                      ipNetToMediaType object."
              ::= { ipNetToMediaEntry 4 }


          -- additional IP objects

          ipRoutingDiscards OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The number of routing entries which were chosen
                      to be discarded even though they are valid.  One
                      possible reason for discarding such an entry could
                      be to free-up buffer space for other routing
                      entries."
              ::= { ip 23 }


          -- the ICMP group

          -- Implementation of the ICMP group is mandatory for all
          -- systems.

          icmpInMsgs OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The total number of ICMP messages which the
                      entity received.  Note that this counter includes
                      all those counted by icmpInErrors."
              ::= { icmp 1 }

          icmpInErrors OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The number of ICMP messages which the entity
                      received but determined as having ICMP-specific
                      errors (bad ICMP checksums, bad length, etc.)."
              ::= { icmp 2 }

          icmpInDestUnreachs OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The number of ICMP Destination Unreachable
                      messages received."
              ::= { icmp 3 }

          icmpInTimeExcds OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The number of ICMP Time Exceeded messages
                      received."
              ::= { icmp 4 }

          icmpInParmProbs OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The number of ICMP Parameter Problem messages
                      received."
              ::= { icmp 5 }

          icmpInSrcQuenchs OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The number of ICMP Source Quench messages
                      received."
              ::= { icmp 6 }

          icmpInRedirects OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The number of ICMP Redirect messages received."
              ::= { icmp 7 }

          icmpInEchos OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The number of ICMP Echo (request) messages
                      received."
              ::= { icmp 8 }

          icmpInEchoReps OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The number of ICMP Echo Reply messages received."
              ::= { icmp 9 }

          icmpInTimestamps OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The number of ICMP Timestamp (request) messages
                      received."
              ::= { icmp 10 }

          icmpInTimestampReps OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The number of ICMP Timestamp Reply messages
                      received."
              ::= { icmp 11 }

          icmpInAddrMasks OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The number of ICMP Address Mask Request messages
                      received."
              ::= { icmp 12 }

          icmpInAddrMaskReps OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The number of ICMP Address Mask Reply messages
                      received."
              ::= { icmp 13 }

          icmpOutMsgs OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The total number of ICMP messages which this
                      entity attempted to send.  Note that this counter
                      includes all those counted by icmpOutErrors."
              ::= { icmp 14 }

          icmpOutErrors OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The number of ICMP messages which this entity did
                      not send due to problems discovered within ICMP
                      such as a lack of buffers.  This value should not
                      include errors discovered outside the ICMP layer
                      such as the inability of IP to route the resultant
                      datagram.  In some implementations there may be no
                      types of error which contribute to this counter's
                      value."
              ::= { icmp 15 }

          icmpOutDestUnreachs OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The number of ICMP Destination Unreachable
                      messages sent."
              ::= { icmp 16 }

          icmpOutTimeExcds OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The number of ICMP Time Exceeded messages sent."
              ::= { icmp 17 }

          icmpOutParmProbs OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The number of ICMP Parameter Problem messages
                      sent."
              ::= { icmp 18 }

          icmpOutSrcQuenchs OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The number of ICMP Source Quench messages sent."
              ::= { icmp 19 }

          icmpOutRedirects OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The number of ICMP Redirect messages sent.  For a
                      host, this object will always be zero, since hosts
                      do not send redirects."
              ::= { icmp 20 }

          icmpOutEchos OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The number of ICMP Echo (request) messages sent."
              ::= { icmp 21 }

          icmpOutEchoReps OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The number of ICMP Echo Reply messages sent."
              ::= { icmp 22 }

          icmpOutTimestamps OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The number of ICMP Timestamp (request) messages
                      sent."
              ::= { icmp 23 }

          icmpOutTimestampReps OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The number of ICMP Timestamp Reply messages
                      sent."
              ::= { icmp 24 }

          icmpOutAddrMasks OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The number of ICMP Address Mask Request messages
                      sent."
              ::= { icmp 25 }

          icmpOutAddrMaskReps OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The number of ICMP Address Mask Reply messages
                      sent."
              ::= { icmp 26 }


          -- the TCP group

          -- Implementation of the TCP group is mandatory for all
          -- systems that implement the TCP.

          -- Note that instances of object types that represent
          -- information about a particular TCP connection are
          -- transient; they persist only as long as the connection
          -- in question.

          tcpRtoAlgorithm OBJECT-TYPE
              SYNTAX  INTEGER {
                          other(1),    -- none of the following

                          constant(2), -- a constant rto
                          rsre(3),     -- MIL-STD-1778, Appendix B
                          vanj(4)      -- Van Jacobson's algorithm [10]
                      }
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The algorithm used to determine the timeout value
                      used for retransmitting unacknowledged octets."
              ::= { tcp 1 }

          tcpRtoMin OBJECT-TYPE
              SYNTAX  INTEGER
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The minimum value permitted by a TCP
                      implementation for the retransmission timeout,
                      measured in milliseconds.  More refined semantics
                      for objects of this type depend upon the algorithm
                      used to determine the retransmission timeout.  In
                      particular, when the timeout algorithm is rsre(3),
                      an object of this type has the semantics of the
                      LBOUND quantity described in RFC 793."
              ::= { tcp 2 }


          tcpRtoMax OBJECT-TYPE
              SYNTAX  INTEGER
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The maximum value permitted by a TCP
                      implementation for the retransmission timeout,
                      measured in milliseconds.  More refined semantics
                      for objects of this type depend upon the algorithm
                      used to determine the retransmission timeout.  In
                      particular, when the timeout algorithm is rsre(3),
                      an object of this type has the semantics of the
                      UBOUND quantity described in RFC 793."
              ::= { tcp 3 }

          tcpMaxConn OBJECT-TYPE
              SYNTAX  INTEGER
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The limit on the total number of TCP connections
                      the entity can support.  In entities where the
                      maximum number of connections is dynamic, this
                      object should contain the value -1."
              ::= { tcp 4 }

          tcpActiveOpens OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The number of times TCP connections have made a
                      direct transition to the SYN-SENT state from the
                      CLOSED state."
              ::= { tcp 5 }

          tcpPassiveOpens OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The number of times TCP connections have made a
                      direct transition to the SYN-RCVD state from the
                      LISTEN state."
              ::= { tcp 6 }

          tcpAttemptFails OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The number of times TCP connections have made a
                      direct transition to the CLOSED state from either
                      the SYN-SENT state or the SYN-RCVD state, plus the
                      number of times TCP connections have made a direct
                      transition to the LISTEN state from the SYN-RCVD
                      state."
              ::= { tcp 7 }

          tcpEstabResets OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The number of times TCP connections have made a
                      direct transition to the CLOSED state from either
                      the ESTABLISHED state or the CLOSE-WAIT state."
              ::= { tcp 8 }

          tcpCurrEstab OBJECT-TYPE
              SYNTAX  Gauge
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The number of TCP connections for which the
                      current state is either ESTABLISHED or CLOSE-
                      WAIT."
              ::= { tcp 9 }

          tcpInSegs OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The total number of segments received, including
                      those received in error.  This count includes
                      segments received on currently established
                      connections."
              ::= { tcp 10 }

          tcpOutSegs OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The total number of segments sent, including
                      those on current connections but excluding those
                      containing only retransmitted octets."
              ::= { tcp 11 }

          tcpRetransSegs OBJECT-TYPE
              SYNTAX  Counter
              ACCESS  read-only
              STATUS  mandatory
              DESCRIPTION
                      "The total number of segments retransmitted - that
                      is, the number of TCP segments transmitted
                      containing one or more previously transmitted
                      oc